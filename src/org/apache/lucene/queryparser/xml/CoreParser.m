//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/xml/CoreParser.java
//

#include "J2ObjC_source.h"
#include "java/io/InputStream.h"
#include "java/lang/Exception.h"
#include "javax/xml/parsers/DocumentBuilder.h"
#include "javax/xml/parsers/DocumentBuilderFactory.h"
#include "org/apache/lucene/analysis/Analyzer.h"
#include "org/apache/lucene/queryparser/classic/QueryParser.h"
#include "org/apache/lucene/queryparser/xml/CoreParser.h"
#include "org/apache/lucene/queryparser/xml/FilterBuilder.h"
#include "org/apache/lucene/queryparser/xml/FilterBuilderFactory.h"
#include "org/apache/lucene/queryparser/xml/ParserException.h"
#include "org/apache/lucene/queryparser/xml/QueryBuilder.h"
#include "org/apache/lucene/queryparser/xml/QueryBuilderFactory.h"
#include "org/apache/lucene/queryparser/xml/builders/BooleanQueryBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/BoostingTermBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/CachedFilterBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/ConstantScoreQueryBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/DisjunctionMaxQueryBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/FilteredQueryBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/MatchAllDocsQueryBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/NumericRangeFilterBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/NumericRangeQueryBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/RangeFilterBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/RangeQueryBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/SpanFirstBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/SpanNearBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/SpanNotBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/SpanOrBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/SpanOrTermsBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/SpanQueryBuilderFactory.h"
#include "org/apache/lucene/queryparser/xml/builders/SpanTermBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/TermQueryBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/TermsQueryBuilder.h"
#include "org/apache/lucene/queryparser/xml/builders/UserInputQueryBuilder.h"
#include "org/apache/lucene/search/Query.h"
#include "org/w3c/dom/Document.h"
#include "org/w3c/dom/Element.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queryparser/xml/CoreParser must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneQueryparserXmlCoreParser ()

+ (id<OrgW3cDomDocument>)parseXMLWithJavaIoInputStream:(JavaIoInputStream *)pXmlFile;

@end

__attribute__((unused)) static id<OrgW3cDomDocument> OrgApacheLuceneQueryparserXmlCoreParser_parseXMLWithJavaIoInputStream_(JavaIoInputStream *pXmlFile);

jint OrgApacheLuceneQueryparserXmlCoreParser_maxNumCachedFilters = 20;

@implementation OrgApacheLuceneQueryparserXmlCoreParser

+ (jint)maxNumCachedFilters {
  return OrgApacheLuceneQueryparserXmlCoreParser_maxNumCachedFilters;
}

+ (void)setMaxNumCachedFilters:(jint)value {
  OrgApacheLuceneQueryparserXmlCoreParser_maxNumCachedFilters = value;
}

- (instancetype)initWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
       withOrgApacheLuceneQueryparserClassicQueryParser:(OrgApacheLuceneQueryparserClassicQueryParser *)parser {
  OrgApacheLuceneQueryparserXmlCoreParser_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneQueryparserClassicQueryParser_(self, analyzer, parser);
  return self;
}

- (instancetype)initWithNSString:(NSString *)defaultField
withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer {
  OrgApacheLuceneQueryparserXmlCoreParser_initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_(self, defaultField, analyzer);
  return self;
}

- (instancetype)initWithNSString:(NSString *)defaultField
withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
withOrgApacheLuceneQueryparserClassicQueryParser:(OrgApacheLuceneQueryparserClassicQueryParser *)parser {
  OrgApacheLuceneQueryparserXmlCoreParser_initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneQueryparserClassicQueryParser_(self, defaultField, analyzer, parser);
  return self;
}

- (OrgApacheLuceneSearchQuery *)parseWithJavaIoInputStream:(JavaIoInputStream *)xmlStream {
  return [self getQueryWithOrgW3cDomElement:[((id<OrgW3cDomDocument>) nil_chk(OrgApacheLuceneQueryparserXmlCoreParser_parseXMLWithJavaIoInputStream_(xmlStream))) getDocumentElement]];
}

- (void)addQueryBuilderWithNSString:(NSString *)nodeName
withOrgApacheLuceneQueryparserXmlQueryBuilder:(id<OrgApacheLuceneQueryparserXmlQueryBuilder>)builder {
  [((OrgApacheLuceneQueryparserXmlQueryBuilderFactory *) nil_chk(queryFactory_)) addBuilderWithNSString:nodeName withOrgApacheLuceneQueryparserXmlQueryBuilder:builder];
}

- (void)addFilterBuilderWithNSString:(NSString *)nodeName
withOrgApacheLuceneQueryparserXmlFilterBuilder:(id<OrgApacheLuceneQueryparserXmlFilterBuilder>)builder {
  [((OrgApacheLuceneQueryparserXmlFilterBuilderFactory *) nil_chk(filterFactory_)) addBuilderWithNSString:nodeName withOrgApacheLuceneQueryparserXmlFilterBuilder:builder];
}

+ (id<OrgW3cDomDocument>)parseXMLWithJavaIoInputStream:(JavaIoInputStream *)pXmlFile {
  return OrgApacheLuceneQueryparserXmlCoreParser_parseXMLWithJavaIoInputStream_(pXmlFile);
}

- (OrgApacheLuceneSearchQuery *)getQueryWithOrgW3cDomElement:(id<OrgW3cDomElement>)e {
  return [((OrgApacheLuceneQueryparserXmlQueryBuilderFactory *) nil_chk(queryFactory_)) getQueryWithOrgW3cDomElement:e];
}

- (void)dealloc {
  RELEASE_(analyzer_);
  RELEASE_(parser_);
  RELEASE_(queryFactory_);
  RELEASE_(filterFactory_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LOrgW3cDomDocument;", 0xa, 10, 4, 5, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, 11, 12, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneAnalysisAnalyzer:withOrgApacheLuceneQueryparserClassicQueryParser:);
  methods[1].selector = @selector(initWithNSString:withOrgApacheLuceneAnalysisAnalyzer:);
  methods[2].selector = @selector(initWithNSString:withOrgApacheLuceneAnalysisAnalyzer:withOrgApacheLuceneQueryparserClassicQueryParser:);
  methods[3].selector = @selector(parseWithJavaIoInputStream:);
  methods[4].selector = @selector(addQueryBuilderWithNSString:withOrgApacheLuceneQueryparserXmlQueryBuilder:);
  methods[5].selector = @selector(addFilterBuilderWithNSString:withOrgApacheLuceneQueryparserXmlFilterBuilder:);
  methods[6].selector = @selector(parseXMLWithJavaIoInputStream:);
  methods[7].selector = @selector(getQueryWithOrgW3cDomElement:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "analyzer_", "LOrgApacheLuceneAnalysisAnalyzer;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "parser_", "LOrgApacheLuceneQueryparserClassicQueryParser;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "queryFactory_", "LOrgApacheLuceneQueryparserXmlQueryBuilderFactory;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "filterFactory_", "LOrgApacheLuceneQueryparserXmlFilterBuilderFactory;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "maxNumCachedFilters", "I", .constantValue.asLong = 0, 0x9, -1, 13, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneAnalysisAnalyzer;LOrgApacheLuceneQueryparserClassicQueryParser;", "LNSString;LOrgApacheLuceneAnalysisAnalyzer;", "LNSString;LOrgApacheLuceneAnalysisAnalyzer;LOrgApacheLuceneQueryparserClassicQueryParser;", "parse", "LJavaIoInputStream;", "LOrgApacheLuceneQueryparserXmlParserException;", "addQueryBuilder", "LNSString;LOrgApacheLuceneQueryparserXmlQueryBuilder;", "addFilterBuilder", "LNSString;LOrgApacheLuceneQueryparserXmlFilterBuilder;", "parseXML", "getQuery", "LOrgW3cDomElement;", &OrgApacheLuceneQueryparserXmlCoreParser_maxNumCachedFilters };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserXmlCoreParser = { "CoreParser", "org.apache.lucene.queryparser.xml", ptrTable, methods, fields, 7, 0x1, 8, 5, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueryparserXmlCoreParser;
}

@end

void OrgApacheLuceneQueryparserXmlCoreParser_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneQueryparserClassicQueryParser_(OrgApacheLuceneQueryparserXmlCoreParser *self, OrgApacheLuceneAnalysisAnalyzer *analyzer, OrgApacheLuceneQueryparserClassicQueryParser *parser) {
  OrgApacheLuceneQueryparserXmlCoreParser_initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneQueryparserClassicQueryParser_(self, nil, analyzer, parser);
}

OrgApacheLuceneQueryparserXmlCoreParser *new_OrgApacheLuceneQueryparserXmlCoreParser_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneQueryparserClassicQueryParser_(OrgApacheLuceneAnalysisAnalyzer *analyzer, OrgApacheLuceneQueryparserClassicQueryParser *parser) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserXmlCoreParser, initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneQueryparserClassicQueryParser_, analyzer, parser)
}

OrgApacheLuceneQueryparserXmlCoreParser *create_OrgApacheLuceneQueryparserXmlCoreParser_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneQueryparserClassicQueryParser_(OrgApacheLuceneAnalysisAnalyzer *analyzer, OrgApacheLuceneQueryparserClassicQueryParser *parser) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserXmlCoreParser, initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneQueryparserClassicQueryParser_, analyzer, parser)
}

void OrgApacheLuceneQueryparserXmlCoreParser_initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneQueryparserXmlCoreParser *self, NSString *defaultField, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  OrgApacheLuceneQueryparserXmlCoreParser_initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneQueryparserClassicQueryParser_(self, defaultField, analyzer, nil);
}

OrgApacheLuceneQueryparserXmlCoreParser *new_OrgApacheLuceneQueryparserXmlCoreParser_initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_(NSString *defaultField, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserXmlCoreParser, initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_, defaultField, analyzer)
}

OrgApacheLuceneQueryparserXmlCoreParser *create_OrgApacheLuceneQueryparserXmlCoreParser_initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_(NSString *defaultField, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserXmlCoreParser, initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_, defaultField, analyzer)
}

void OrgApacheLuceneQueryparserXmlCoreParser_initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneQueryparserClassicQueryParser_(OrgApacheLuceneQueryparserXmlCoreParser *self, NSString *defaultField, OrgApacheLuceneAnalysisAnalyzer *analyzer, OrgApacheLuceneQueryparserClassicQueryParser *parser) {
  NSObject_init(self);
  JreStrongAssign(&self->analyzer_, analyzer);
  JreStrongAssign(&self->parser_, parser);
  JreStrongAssignAndConsume(&self->filterFactory_, new_OrgApacheLuceneQueryparserXmlFilterBuilderFactory_init());
  [self->filterFactory_ addBuilderWithNSString:@"RangeFilter" withOrgApacheLuceneQueryparserXmlFilterBuilder:create_OrgApacheLuceneQueryparserXmlBuildersRangeFilterBuilder_init()];
  [((OrgApacheLuceneQueryparserXmlFilterBuilderFactory *) nil_chk(self->filterFactory_)) addBuilderWithNSString:@"NumericRangeFilter" withOrgApacheLuceneQueryparserXmlFilterBuilder:create_OrgApacheLuceneQueryparserXmlBuildersNumericRangeFilterBuilder_init()];
  JreStrongAssignAndConsume(&self->queryFactory_, new_OrgApacheLuceneQueryparserXmlQueryBuilderFactory_init());
  [self->queryFactory_ addBuilderWithNSString:@"TermQuery" withOrgApacheLuceneQueryparserXmlQueryBuilder:create_OrgApacheLuceneQueryparserXmlBuildersTermQueryBuilder_init()];
  [((OrgApacheLuceneQueryparserXmlQueryBuilderFactory *) nil_chk(self->queryFactory_)) addBuilderWithNSString:@"TermsQuery" withOrgApacheLuceneQueryparserXmlQueryBuilder:create_OrgApacheLuceneQueryparserXmlBuildersTermsQueryBuilder_initWithOrgApacheLuceneAnalysisAnalyzer_(analyzer)];
  [((OrgApacheLuceneQueryparserXmlQueryBuilderFactory *) nil_chk(self->queryFactory_)) addBuilderWithNSString:@"MatchAllDocsQuery" withOrgApacheLuceneQueryparserXmlQueryBuilder:create_OrgApacheLuceneQueryparserXmlBuildersMatchAllDocsQueryBuilder_init()];
  [((OrgApacheLuceneQueryparserXmlQueryBuilderFactory *) nil_chk(self->queryFactory_)) addBuilderWithNSString:@"BooleanQuery" withOrgApacheLuceneQueryparserXmlQueryBuilder:create_OrgApacheLuceneQueryparserXmlBuildersBooleanQueryBuilder_initWithOrgApacheLuceneQueryparserXmlQueryBuilder_(self->queryFactory_)];
  [((OrgApacheLuceneQueryparserXmlQueryBuilderFactory *) nil_chk(self->queryFactory_)) addBuilderWithNSString:@"NumericRangeQuery" withOrgApacheLuceneQueryparserXmlQueryBuilder:create_OrgApacheLuceneQueryparserXmlBuildersNumericRangeQueryBuilder_init()];
  [((OrgApacheLuceneQueryparserXmlQueryBuilderFactory *) nil_chk(self->queryFactory_)) addBuilderWithNSString:@"RangeQuery" withOrgApacheLuceneQueryparserXmlQueryBuilder:create_OrgApacheLuceneQueryparserXmlBuildersRangeQueryBuilder_init()];
  [((OrgApacheLuceneQueryparserXmlQueryBuilderFactory *) nil_chk(self->queryFactory_)) addBuilderWithNSString:@"DisjunctionMaxQuery" withOrgApacheLuceneQueryparserXmlQueryBuilder:create_OrgApacheLuceneQueryparserXmlBuildersDisjunctionMaxQueryBuilder_initWithOrgApacheLuceneQueryparserXmlQueryBuilder_(self->queryFactory_)];
  if (parser != nil) {
    [((OrgApacheLuceneQueryparserXmlQueryBuilderFactory *) nil_chk(self->queryFactory_)) addBuilderWithNSString:@"UserQuery" withOrgApacheLuceneQueryparserXmlQueryBuilder:create_OrgApacheLuceneQueryparserXmlBuildersUserInputQueryBuilder_initWithOrgApacheLuceneQueryparserClassicQueryParser_(parser)];
  }
  else {
    [((OrgApacheLuceneQueryparserXmlQueryBuilderFactory *) nil_chk(self->queryFactory_)) addBuilderWithNSString:@"UserQuery" withOrgApacheLuceneQueryparserXmlQueryBuilder:create_OrgApacheLuceneQueryparserXmlBuildersUserInputQueryBuilder_initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_(defaultField, analyzer)];
  }
  [((OrgApacheLuceneQueryparserXmlQueryBuilderFactory *) nil_chk(self->queryFactory_)) addBuilderWithNSString:@"FilteredQuery" withOrgApacheLuceneQueryparserXmlQueryBuilder:create_OrgApacheLuceneQueryparserXmlBuildersFilteredQueryBuilder_initWithOrgApacheLuceneQueryparserXmlFilterBuilder_withOrgApacheLuceneQueryparserXmlQueryBuilder_(self->filterFactory_, self->queryFactory_)];
  [((OrgApacheLuceneQueryparserXmlQueryBuilderFactory *) nil_chk(self->queryFactory_)) addBuilderWithNSString:@"ConstantScoreQuery" withOrgApacheLuceneQueryparserXmlQueryBuilder:create_OrgApacheLuceneQueryparserXmlBuildersConstantScoreQueryBuilder_initWithOrgApacheLuceneQueryparserXmlQueryBuilderFactory_(self->queryFactory_)];
  [((OrgApacheLuceneQueryparserXmlFilterBuilderFactory *) nil_chk(self->filterFactory_)) addBuilderWithNSString:@"CachedFilter" withOrgApacheLuceneQueryparserXmlFilterBuilder:create_OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder_initWithOrgApacheLuceneQueryparserXmlQueryBuilderFactory_withOrgApacheLuceneQueryparserXmlFilterBuilderFactory_withInt_(self->queryFactory_, self->filterFactory_, OrgApacheLuceneQueryparserXmlCoreParser_maxNumCachedFilters)];
  OrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilderFactory *sqof = create_OrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilderFactory_init();
  OrgApacheLuceneQueryparserXmlBuildersSpanNearBuilder *snb = create_OrgApacheLuceneQueryparserXmlBuildersSpanNearBuilder_initWithOrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilder_(sqof);
  [sqof addBuilderWithNSString:@"SpanNear" withOrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilder:snb];
  [((OrgApacheLuceneQueryparserXmlQueryBuilderFactory *) nil_chk(self->queryFactory_)) addBuilderWithNSString:@"SpanNear" withOrgApacheLuceneQueryparserXmlQueryBuilder:snb];
  OrgApacheLuceneQueryparserXmlBuildersBoostingTermBuilder *btb = create_OrgApacheLuceneQueryparserXmlBuildersBoostingTermBuilder_init();
  [sqof addBuilderWithNSString:@"BoostingTermQuery" withOrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilder:btb];
  [((OrgApacheLuceneQueryparserXmlQueryBuilderFactory *) nil_chk(self->queryFactory_)) addBuilderWithNSString:@"BoostingTermQuery" withOrgApacheLuceneQueryparserXmlQueryBuilder:btb];
  OrgApacheLuceneQueryparserXmlBuildersSpanTermBuilder *snt = create_OrgApacheLuceneQueryparserXmlBuildersSpanTermBuilder_init();
  [sqof addBuilderWithNSString:@"SpanTerm" withOrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilder:snt];
  [((OrgApacheLuceneQueryparserXmlQueryBuilderFactory *) nil_chk(self->queryFactory_)) addBuilderWithNSString:@"SpanTerm" withOrgApacheLuceneQueryparserXmlQueryBuilder:snt];
  OrgApacheLuceneQueryparserXmlBuildersSpanOrBuilder *sot = create_OrgApacheLuceneQueryparserXmlBuildersSpanOrBuilder_initWithOrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilder_(sqof);
  [sqof addBuilderWithNSString:@"SpanOr" withOrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilder:sot];
  [((OrgApacheLuceneQueryparserXmlQueryBuilderFactory *) nil_chk(self->queryFactory_)) addBuilderWithNSString:@"SpanOr" withOrgApacheLuceneQueryparserXmlQueryBuilder:sot];
  OrgApacheLuceneQueryparserXmlBuildersSpanOrTermsBuilder *sots = create_OrgApacheLuceneQueryparserXmlBuildersSpanOrTermsBuilder_initWithOrgApacheLuceneAnalysisAnalyzer_(analyzer);
  [sqof addBuilderWithNSString:@"SpanOrTerms" withOrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilder:sots];
  [((OrgApacheLuceneQueryparserXmlQueryBuilderFactory *) nil_chk(self->queryFactory_)) addBuilderWithNSString:@"SpanOrTerms" withOrgApacheLuceneQueryparserXmlQueryBuilder:sots];
  OrgApacheLuceneQueryparserXmlBuildersSpanFirstBuilder *sft = create_OrgApacheLuceneQueryparserXmlBuildersSpanFirstBuilder_initWithOrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilder_(sqof);
  [sqof addBuilderWithNSString:@"SpanFirst" withOrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilder:sft];
  [((OrgApacheLuceneQueryparserXmlQueryBuilderFactory *) nil_chk(self->queryFactory_)) addBuilderWithNSString:@"SpanFirst" withOrgApacheLuceneQueryparserXmlQueryBuilder:sft];
  OrgApacheLuceneQueryparserXmlBuildersSpanNotBuilder *snot = create_OrgApacheLuceneQueryparserXmlBuildersSpanNotBuilder_initWithOrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilder_(sqof);
  [sqof addBuilderWithNSString:@"SpanNot" withOrgApacheLuceneQueryparserXmlBuildersSpanQueryBuilder:snot];
  [((OrgApacheLuceneQueryparserXmlQueryBuilderFactory *) nil_chk(self->queryFactory_)) addBuilderWithNSString:@"SpanNot" withOrgApacheLuceneQueryparserXmlQueryBuilder:snot];
}

OrgApacheLuceneQueryparserXmlCoreParser *new_OrgApacheLuceneQueryparserXmlCoreParser_initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneQueryparserClassicQueryParser_(NSString *defaultField, OrgApacheLuceneAnalysisAnalyzer *analyzer, OrgApacheLuceneQueryparserClassicQueryParser *parser) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserXmlCoreParser, initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneQueryparserClassicQueryParser_, defaultField, analyzer, parser)
}

OrgApacheLuceneQueryparserXmlCoreParser *create_OrgApacheLuceneQueryparserXmlCoreParser_initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneQueryparserClassicQueryParser_(NSString *defaultField, OrgApacheLuceneAnalysisAnalyzer *analyzer, OrgApacheLuceneQueryparserClassicQueryParser *parser) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserXmlCoreParser, initWithNSString_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneQueryparserClassicQueryParser_, defaultField, analyzer, parser)
}

id<OrgW3cDomDocument> OrgApacheLuceneQueryparserXmlCoreParser_parseXMLWithJavaIoInputStream_(JavaIoInputStream *pXmlFile) {
  OrgApacheLuceneQueryparserXmlCoreParser_initialize();
  JavaxXmlParsersDocumentBuilderFactory *dbf = JavaxXmlParsersDocumentBuilderFactory_newInstance();
  JavaxXmlParsersDocumentBuilder *db = nil;
  @try {
    db = [((JavaxXmlParsersDocumentBuilderFactory *) nil_chk(dbf)) newDocumentBuilder];
  }
  @catch (JavaLangException *se) {
    @throw create_OrgApacheLuceneQueryparserXmlParserException_initWithNSString_withJavaLangThrowable_(@"XML Parser configuration error", se);
  }
  id<OrgW3cDomDocument> doc = nil;
  @try {
    doc = [((JavaxXmlParsersDocumentBuilder *) nil_chk(db)) parseWithJavaIoInputStream:pXmlFile];
  }
  @catch (JavaLangException *se) {
    @throw create_OrgApacheLuceneQueryparserXmlParserException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@", @"Error parsing XML stream:", se), se);
  }
  return doc;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserXmlCoreParser)
