//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/surround/query/SrndQuery.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/Error.h"
#include "java/lang/Float.h"
#include "java/lang/StringBuilder.h"
#include "org/apache/lucene/queryparser/surround/query/BasicQueryFactory.h"
#include "org/apache/lucene/queryparser/surround/query/SrndQuery.h"
#include "org/apache/lucene/search/Query.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queryparser/surround/query/SrndQuery must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneQueryparserSurroundQuerySrndQuery () {
 @public
  jfloat weight_;
  jboolean weighted_;
}

@end

@implementation OrgApacheLuceneQueryparserSurroundQuerySrndQuery

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneQueryparserSurroundQuerySrndQuery_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setWeightWithFloat:(jfloat)w {
  weight_ = w;
  weighted_ = true;
}

- (jboolean)isWeighted {
  return weighted_;
}

- (jfloat)getWeight {
  return weight_;
}

- (NSString *)getWeightString {
  return JavaLangFloat_toStringWithFloat_([self getWeight]);
}

- (NSString *)getWeightOperator {
  return @"^";
}

- (void)weightToStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)r {
  if ([self isWeighted]) {
    [((JavaLangStringBuilder *) nil_chk(r)) appendWithNSString:[self getWeightOperator]];
    [r appendWithNSString:[self getWeightString]];
  }
}

- (OrgApacheLuceneSearchQuery *)makeLuceneQueryFieldWithNSString:(NSString *)fieldName
    withOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory:(OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory *)qf {
  OrgApacheLuceneSearchQuery *q = JreRetainedLocalValue([self makeLuceneQueryFieldNoBoostWithNSString:fieldName withOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory:qf]);
  if ([self isWeighted]) {
    [((OrgApacheLuceneSearchQuery *) nil_chk(q)) setBoostWithFloat:[self getWeight] * [q getBoost]];
  }
  return q;
}

- (OrgApacheLuceneSearchQuery *)makeLuceneQueryFieldNoBoostWithNSString:(NSString *)fieldName
           withOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory:(OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory *)qf {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)description {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isFieldsSubQueryAcceptable {
  return true;
}

- (OrgApacheLuceneQueryparserSurroundQuerySrndQuery *)java_clone {
  @try {
    return (OrgApacheLuceneQueryparserSurroundQuerySrndQuery *) cast_chk([super java_clone], [OrgApacheLuceneQueryparserSurroundQuerySrndQuery class]);
  }
  @catch (JavaLangCloneNotSupportedException *cns) {
    @throw create_JavaLangError_initWithJavaLangThrowable_(cns);
  }
}

- (NSUInteger)hash {
  return ((jint) [[self java_getClass] hash]) ^ ((jint) [((NSString *) nil_chk([self description])) hash]);
}

- (jboolean)isEqual:(id)obj {
  if (obj == nil) return false;
  if (![[self java_getClass] isEqual:[obj java_getClass]]) return false;
  return [((NSString *) nil_chk([self description])) isEqual:[obj description]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x401, 6, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 7, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueryparserSurroundQuerySrndQuery;", 0x1, 8, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 9, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 10, 11, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setWeightWithFloat:);
  methods[2].selector = @selector(isWeighted);
  methods[3].selector = @selector(getWeight);
  methods[4].selector = @selector(getWeightString);
  methods[5].selector = @selector(getWeightOperator);
  methods[6].selector = @selector(weightToStringWithJavaLangStringBuilder:);
  methods[7].selector = @selector(makeLuceneQueryFieldWithNSString:withOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory:);
  methods[8].selector = @selector(makeLuceneQueryFieldNoBoostWithNSString:withOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory:);
  methods[9].selector = @selector(description);
  methods[10].selector = @selector(isFieldsSubQueryAcceptable);
  methods[11].selector = @selector(java_clone);
  methods[12].selector = @selector(hash);
  methods[13].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "weight_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "weighted_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setWeight", "F", "weightToString", "LJavaLangStringBuilder;", "makeLuceneQueryField", "LNSString;LOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory;", "makeLuceneQueryFieldNoBoost", "toString", "clone", "hashCode", "equals", "LNSObject;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserSurroundQuerySrndQuery = { "SrndQuery", "org.apache.lucene.queryparser.surround.query", ptrTable, methods, fields, 7, 0x401, 14, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueryparserSurroundQuerySrndQuery;
}

- (id)copyWithZone:(NSZone *)zone {
  return [[self java_clone] retain];
}

@end

void OrgApacheLuceneQueryparserSurroundQuerySrndQuery_init(OrgApacheLuceneQueryparserSurroundQuerySrndQuery *self) {
  NSObject_init(self);
  self->weight_ = (jfloat) 1.0;
  self->weighted_ = false;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserSurroundQuerySrndQuery)
