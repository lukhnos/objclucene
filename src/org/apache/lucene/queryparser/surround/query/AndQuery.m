//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/surround/query/AndQuery.java
//

#include "J2ObjC_source.h"
#include "java/util/List.h"
#include "org/apache/lucene/queryparser/surround/query/AndQuery.h"
#include "org/apache/lucene/queryparser/surround/query/BasicQueryFactory.h"
#include "org/apache/lucene/queryparser/surround/query/ComposedQuery.h"
#include "org/apache/lucene/queryparser/surround/query/SrndBooleanQuery.h"
#include "org/apache/lucene/search/BooleanClause.h"
#include "org/apache/lucene/search/Query.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queryparser/surround/query/AndQuery must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneQueryparserSurroundQueryAndQuery

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)queries
                         withBoolean:(jboolean)inf
                        withNSString:(NSString *)opName {
  OrgApacheLuceneQueryparserSurroundQueryAndQuery_initWithJavaUtilList_withBoolean_withNSString_(self, queries, inf, opName);
  return self;
}

- (OrgApacheLuceneSearchQuery *)makeLuceneQueryFieldNoBoostWithNSString:(NSString *)fieldName
           withOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory:(OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory *)qf {
  return OrgApacheLuceneQueryparserSurroundQuerySrndBooleanQuery_makeBooleanQueryWithJavaUtilList_withOrgApacheLuceneSearchBooleanClause_Occur_([self makeLuceneSubQueriesFieldWithNSString:fieldName withOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory:qf], JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilList:withBoolean:withNSString:);
  methods[1].selector = @selector(makeLuceneQueryFieldNoBoostWithNSString:withOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaUtilList;ZLNSString;", "(Ljava/util/List<Lorg/apache/lucene/queryparser/surround/query/SrndQuery;>;ZLjava/lang/String;)V", "makeLuceneQueryFieldNoBoost", "LNSString;LOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserSurroundQueryAndQuery = { "AndQuery", "org.apache.lucene.queryparser.surround.query", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueryparserSurroundQueryAndQuery;
}

@end

void OrgApacheLuceneQueryparserSurroundQueryAndQuery_initWithJavaUtilList_withBoolean_withNSString_(OrgApacheLuceneQueryparserSurroundQueryAndQuery *self, id<JavaUtilList> queries, jboolean inf, NSString *opName) {
  OrgApacheLuceneQueryparserSurroundQueryComposedQuery_initWithJavaUtilList_withBoolean_withNSString_(self, queries, inf, opName);
}

OrgApacheLuceneQueryparserSurroundQueryAndQuery *new_OrgApacheLuceneQueryparserSurroundQueryAndQuery_initWithJavaUtilList_withBoolean_withNSString_(id<JavaUtilList> queries, jboolean inf, NSString *opName) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserSurroundQueryAndQuery, initWithJavaUtilList_withBoolean_withNSString_, queries, inf, opName)
}

OrgApacheLuceneQueryparserSurroundQueryAndQuery *create_OrgApacheLuceneQueryparserSurroundQueryAndQuery_initWithJavaUtilList_withBoolean_withNSString_(id<JavaUtilList> queries, jboolean inf, NSString *opName) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserSurroundQueryAndQuery, initWithJavaUtilList_withBoolean_withNSString_, queries, inf, opName)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserSurroundQueryAndQuery)
