//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/surround/query/RewriteQuery.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/queryparser/surround/query/BasicQueryFactory.h"
#include "org/apache/lucene/queryparser/surround/query/RewriteQuery.h"
#include "org/apache/lucene/queryparser/surround/query/SrndQuery.h"
#include "org/apache/lucene/search/Query.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queryparser/surround/query/RewriteQuery must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneQueryparserSurroundQueryRewriteQuery

- (instancetype)initPackagePrivateWithOrgApacheLuceneQueryparserSurroundQuerySrndQuery:(OrgApacheLuceneQueryparserSurroundQuerySrndQuery *)srndQuery
                                                                          withNSString:(NSString *)fieldName
                          withOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory:(OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory *)qf {
  OrgApacheLuceneQueryparserSurroundQueryRewriteQuery_initPackagePrivateWithOrgApacheLuceneQueryparserSurroundQuerySrndQuery_withNSString_withOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory_(self, srndQuery, fieldName, qf);
  return self;
}

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)toStringWithNSString:(NSString *)field {
  return JreStrcat("$$C$$$$$C", [[self java_getClass] getName], ([((NSString *) nil_chk(field)) java_isEmpty] ? @"" : JreStrcat("$$C", @"(unused: ", field, ')')), '(', fieldName_, @", ", [((OrgApacheLuceneQueryparserSurroundQuerySrndQuery *) nil_chk(srndQuery_)) description], @", ", [((OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory *) nil_chk(qf_)) description], ')');
}

- (NSUInteger)hash {
  return ((jint) [super hash]) ^ ((jint) [((NSString *) nil_chk(fieldName_)) hash]) ^ ((jint) [((OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory *) nil_chk(qf_)) hash]) ^ ((jint) [((OrgApacheLuceneQueryparserSurroundQuerySrndQuery *) nil_chk(srndQuery_)) hash]);
}

- (jboolean)isEqual:(id)obj {
  if (obj == nil) return false;
  if (![[self java_getClass] isEqual:[obj java_getClass]]) return false;
  OrgApacheLuceneQueryparserSurroundQueryRewriteQuery *other = (OrgApacheLuceneQueryparserSurroundQueryRewriteQuery *) cast_chk(obj, [OrgApacheLuceneQueryparserSurroundQueryRewriteQuery class]);
  return [super isEqual:obj] && [((NSString *) nil_chk(fieldName_)) isEqual:other->fieldName_] && [((OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory *) nil_chk(qf_)) isEqual:other->qf_] && [((OrgApacheLuceneQueryparserSurroundQuerySrndQuery *) nil_chk(srndQuery_)) isEqual:other->srndQuery_];
}

- (void)dealloc {
  RELEASE_(srndQuery_);
  RELEASE_(fieldName_);
  RELEASE_(qf_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x401, 2, 3, 4, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 8, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgApacheLuceneQueryparserSurroundQuerySrndQuery:withNSString:withOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory:);
  methods[1].selector = @selector(rewriteWithOrgApacheLuceneIndexIndexReader:);
  methods[2].selector = @selector(toStringWithNSString:);
  methods[3].selector = @selector(hash);
  methods[4].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "srndQuery_", "LOrgApacheLuceneQueryparserSurroundQuerySrndQuery;", .constantValue.asLong = 0, 0x14, -1, -1, 10, -1 },
    { "fieldName_", "LNSString;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "qf_", "LOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneQueryparserSurroundQuerySrndQuery;LNSString;LOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory;", "(TSQ;Ljava/lang/String;Lorg/apache/lucene/queryparser/surround/query/BasicQueryFactory;)V", "rewrite", "LOrgApacheLuceneIndexIndexReader;", "LJavaIoIOException;", "toString", "LNSString;", "hashCode", "equals", "LNSObject;", "TSQ;", "<SQ:Lorg/apache/lucene/queryparser/surround/query/SrndQuery;>Lorg/apache/lucene/search/Query;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserSurroundQueryRewriteQuery = { "RewriteQuery", "org.apache.lucene.queryparser.surround.query", ptrTable, methods, fields, 7, 0x400, 5, 3, -1, -1, -1, 11, -1 };
  return &_OrgApacheLuceneQueryparserSurroundQueryRewriteQuery;
}

@end

void OrgApacheLuceneQueryparserSurroundQueryRewriteQuery_initPackagePrivateWithOrgApacheLuceneQueryparserSurroundQuerySrndQuery_withNSString_withOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory_(OrgApacheLuceneQueryparserSurroundQueryRewriteQuery *self, OrgApacheLuceneQueryparserSurroundQuerySrndQuery *srndQuery, NSString *fieldName, OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory *qf) {
  OrgApacheLuceneSearchQuery_init(self);
  JreStrongAssign(&self->srndQuery_, srndQuery);
  JreStrongAssign(&self->fieldName_, fieldName);
  JreStrongAssign(&self->qf_, qf);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserSurroundQueryRewriteQuery)
