//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/ext/Extensions.java
//

#include "J2ObjC_source.h"
#include "java/lang/StringBuilder.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "org/apache/lucene/queryparser/classic/QueryParserBase.h"
#include "org/apache/lucene/queryparser/ext/Extensions.h"
#include "org/apache/lucene/queryparser/ext/ParserExtension.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queryparser/ext/Extensions must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneQueryparserExtExtensions () {
 @public
  id<JavaUtilMap> extensions_;
  jchar extensionFieldDelimiter_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryparserExtExtensions, extensions_, id<JavaUtilMap>)

@implementation OrgApacheLuceneQueryparserExtExtensions

+ (jchar)DEFAULT_EXTENSION_FIELD_DELIMITER {
  return OrgApacheLuceneQueryparserExtExtensions_DEFAULT_EXTENSION_FIELD_DELIMITER;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneQueryparserExtExtensions_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithChar:(jchar)extensionFieldDelimiter {
  OrgApacheLuceneQueryparserExtExtensions_initWithChar_(self, extensionFieldDelimiter);
  return self;
}

- (void)addWithNSString:(NSString *)key
withOrgApacheLuceneQueryparserExtParserExtension:(OrgApacheLuceneQueryparserExtParserExtension *)extension {
  [((id<JavaUtilMap>) nil_chk(self->extensions_)) putWithId:key withId:extension];
}

- (OrgApacheLuceneQueryparserExtParserExtension *)getExtensionWithNSString:(NSString *)key {
  return [((id<JavaUtilMap>) nil_chk(self->extensions_)) getWithId:key];
}

- (jchar)getExtensionFieldDelimiter {
  return extensionFieldDelimiter_;
}

- (OrgApacheLuceneQueryparserExtExtensions_Pair *)splitExtensionFieldWithNSString:(NSString *)defaultField
                                                                     withNSString:(NSString *)field {
  jint indexOf = [((NSString *) nil_chk(field)) java_indexOf:self->extensionFieldDelimiter_];
  if (indexOf < 0) return create_OrgApacheLuceneQueryparserExtExtensions_Pair_initWithId_withId_(field, nil);
  NSString *indexField = indexOf == 0 ? defaultField : [field java_substring:0 endIndex:indexOf];
  NSString *extensionKey = [field java_substring:indexOf + 1];
  return create_OrgApacheLuceneQueryparserExtExtensions_Pair_initWithId_withId_(indexField, extensionKey);
}

- (NSString *)escapeExtensionFieldWithNSString:(NSString *)extfield {
  return OrgApacheLuceneQueryparserClassicQueryParserBase_escapeWithNSString_(extfield);
}

- (NSString *)buildExtensionFieldWithNSString:(NSString *)extensionKey {
  return [self buildExtensionFieldWithNSString:extensionKey withNSString:@""];
}

- (NSString *)buildExtensionFieldWithNSString:(NSString *)extensionKey
                                 withNSString:(NSString *)field {
  JavaLangStringBuilder *builder = create_JavaLangStringBuilder_initWithNSString_(field);
  [builder appendWithChar:self->extensionFieldDelimiter_];
  [builder appendWithNSString:extensionKey];
  return [self escapeExtensionFieldWithNSString:[builder description]];
}

- (void)dealloc {
  RELEASE_(extensions_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueryparserExtParserExtension;", 0x11, 3, 4, -1, -1, -1, -1 },
    { NULL, "C", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueryparserExtExtensions_Pair;", 0x1, 5, 6, -1, 7, -1, -1 },
    { NULL, "LNSString;", 0x1, 8, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithChar:);
  methods[2].selector = @selector(addWithNSString:withOrgApacheLuceneQueryparserExtParserExtension:);
  methods[3].selector = @selector(getExtensionWithNSString:);
  methods[4].selector = @selector(getExtensionFieldDelimiter);
  methods[5].selector = @selector(splitExtensionFieldWithNSString:withNSString:);
  methods[6].selector = @selector(escapeExtensionFieldWithNSString:);
  methods[7].selector = @selector(buildExtensionFieldWithNSString:);
  methods[8].selector = @selector(buildExtensionFieldWithNSString:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "extensions_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 10, -1 },
    { "extensionFieldDelimiter_", "C", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "DEFAULT_EXTENSION_FIELD_DELIMITER", "C", .constantValue.asUnichar = OrgApacheLuceneQueryparserExtExtensions_DEFAULT_EXTENSION_FIELD_DELIMITER, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "C", "add", "LNSString;LOrgApacheLuceneQueryparserExtParserExtension;", "getExtension", "LNSString;", "splitExtensionField", "LNSString;LNSString;", "(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/lucene/queryparser/ext/Extensions$Pair<Ljava/lang/String;Ljava/lang/String;>;", "escapeExtensionField", "buildExtensionField", "Ljava/util/Map<Ljava/lang/String;Lorg/apache/lucene/queryparser/ext/ParserExtension;>;", "LOrgApacheLuceneQueryparserExtExtensions_Pair;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserExtExtensions = { "Extensions", "org.apache.lucene.queryparser.ext", ptrTable, methods, fields, 7, 0x1, 9, 3, -1, 11, -1, -1, -1 };
  return &_OrgApacheLuceneQueryparserExtExtensions;
}

@end

void OrgApacheLuceneQueryparserExtExtensions_init(OrgApacheLuceneQueryparserExtExtensions *self) {
  OrgApacheLuceneQueryparserExtExtensions_initWithChar_(self, OrgApacheLuceneQueryparserExtExtensions_DEFAULT_EXTENSION_FIELD_DELIMITER);
}

OrgApacheLuceneQueryparserExtExtensions *new_OrgApacheLuceneQueryparserExtExtensions_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserExtExtensions, init)
}

OrgApacheLuceneQueryparserExtExtensions *create_OrgApacheLuceneQueryparserExtExtensions_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserExtExtensions, init)
}

void OrgApacheLuceneQueryparserExtExtensions_initWithChar_(OrgApacheLuceneQueryparserExtExtensions *self, jchar extensionFieldDelimiter) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->extensions_, new_JavaUtilHashMap_init());
  self->extensionFieldDelimiter_ = extensionFieldDelimiter;
}

OrgApacheLuceneQueryparserExtExtensions *new_OrgApacheLuceneQueryparserExtExtensions_initWithChar_(jchar extensionFieldDelimiter) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserExtExtensions, initWithChar_, extensionFieldDelimiter)
}

OrgApacheLuceneQueryparserExtExtensions *create_OrgApacheLuceneQueryparserExtExtensions_initWithChar_(jchar extensionFieldDelimiter) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserExtExtensions, initWithChar_, extensionFieldDelimiter)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserExtExtensions)

@implementation OrgApacheLuceneQueryparserExtExtensions_Pair

- (instancetype)initWithId:(id)cur
                    withId:(id)cud {
  OrgApacheLuceneQueryparserExtExtensions_Pair_initWithId_withId_(self, cur, cud);
  return self;
}

- (void)dealloc {
  RELEASE_(cur_);
  RELEASE_(cud_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "cur_", "LNSObject;", .constantValue.asLong = 0, 0x11, -1, -1, 2, -1 },
    { "cud_", "LNSObject;", .constantValue.asLong = 0, 0x11, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;LNSObject;", "(TCur;TCud;)V", "TCur;", "TCud;", "LOrgApacheLuceneQueryparserExtExtensions;", "<Cur:Ljava/lang/Object;Cud:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserExtExtensions_Pair = { "Pair", "org.apache.lucene.queryparser.ext", ptrTable, methods, fields, 7, 0x9, 1, 2, 4, -1, -1, 5, -1 };
  return &_OrgApacheLuceneQueryparserExtExtensions_Pair;
}

@end

void OrgApacheLuceneQueryparserExtExtensions_Pair_initWithId_withId_(OrgApacheLuceneQueryparserExtExtensions_Pair *self, id cur, id cud) {
  NSObject_init(self);
  JreStrongAssign(&self->cur_, cur);
  JreStrongAssign(&self->cud_, cud);
}

OrgApacheLuceneQueryparserExtExtensions_Pair *new_OrgApacheLuceneQueryparserExtExtensions_Pair_initWithId_withId_(id cur, id cud) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserExtExtensions_Pair, initWithId_withId_, cur, cud)
}

OrgApacheLuceneQueryparserExtExtensions_Pair *create_OrgApacheLuceneQueryparserExtExtensions_Pair_initWithId_withId_(id cur, id cud) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserExtExtensions_Pair, initWithId_withId_, cur, cud)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserExtExtensions_Pair)
