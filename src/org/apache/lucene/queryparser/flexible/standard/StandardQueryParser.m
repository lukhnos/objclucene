//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/StandardQueryParser.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Integer.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "java/util/TimeZone.h"
#include "org/apache/lucene/analysis/Analyzer.h"
#include "org/apache/lucene/document/DateTools.h"
#include "org/apache/lucene/queryparser/flexible/core/QueryParserHelper.h"
#include "org/apache/lucene/queryparser/flexible/core/config/ConfigurationKey.h"
#include "org/apache/lucene/queryparser/flexible/core/config/QueryConfigHandler.h"
#include "org/apache/lucene/queryparser/flexible/standard/StandardQueryParser.h"
#include "org/apache/lucene/queryparser/flexible/standard/builders/StandardQueryTreeBuilder.h"
#include "org/apache/lucene/queryparser/flexible/standard/config/FuzzyConfig.h"
#include "org/apache/lucene/queryparser/flexible/standard/config/StandardQueryConfigHandler.h"
#include "org/apache/lucene/queryparser/flexible/standard/parser/StandardSyntaxParser.h"
#include "org/apache/lucene/queryparser/flexible/standard/processors/StandardQueryNodeProcessorPipeline.h"
#include "org/apache/lucene/search/FuzzyQuery.h"
#include "org/apache/lucene/search/MultiTermQuery.h"
#include "org/apache/lucene/search/Query.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queryparser/flexible/standard/StandardQueryParser must not be compiled with ARC (-fobjc-arc)"
#endif

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser__Annotations$1(void);

@implementation OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer {
  OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser_initWithOrgApacheLuceneAnalysisAnalyzer_(self, analyzer);
  return self;
}

- (NSString *)description {
  return JreStrcat("$@$", @"<StandardQueryParser config=\"", [self getQueryConfigHandler], @"\"/>");
}

- (OrgApacheLuceneSearchQuery *)parseWithNSString:(NSString *)query
                                     withNSString:(NSString *)defaultField {
  return (OrgApacheLuceneSearchQuery *) cast_chk([super parseWithNSString:query withNSString:defaultField], [OrgApacheLuceneSearchQuery class]);
}

- (OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *)getDefaultOperator {
  return [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) getWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, DEFAULT_OPERATOR)];
}

- (void)setDefaultOperatorWithOrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator:(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *)operator_ {
  [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, DEFAULT_OPERATOR) withId:operator_];
}

- (void)setLowercaseExpandedTermsWithBoolean:(jboolean)lowercaseExpandedTerms {
  [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, LOWERCASE_EXPANDED_TERMS) withId:JavaLangBoolean_valueOfWithBoolean_(lowercaseExpandedTerms)];
}

- (jboolean)getLowercaseExpandedTerms {
  JavaLangBoolean *lowercaseExpandedTerms = JreRetainedLocalValue([((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) getWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, LOWERCASE_EXPANDED_TERMS)]);
  if (lowercaseExpandedTerms == nil) {
    return true;
  }
  else {
    return [lowercaseExpandedTerms booleanValue];
  }
}

- (void)setAllowLeadingWildcardWithBoolean:(jboolean)allowLeadingWildcard {
  [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, ALLOW_LEADING_WILDCARD) withId:JavaLangBoolean_valueOfWithBoolean_(allowLeadingWildcard)];
}

- (void)setEnablePositionIncrementsWithBoolean:(jboolean)enabled {
  [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, ENABLE_POSITION_INCREMENTS) withId:JavaLangBoolean_valueOfWithBoolean_(enabled)];
}

- (jboolean)getEnablePositionIncrements {
  JavaLangBoolean *enablePositionsIncrements = JreRetainedLocalValue([((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) getWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, ENABLE_POSITION_INCREMENTS)]);
  if (enablePositionsIncrements == nil) {
    return false;
  }
  else {
    return [enablePositionsIncrements booleanValue];
  }
}

- (void)setMultiTermRewriteMethodWithOrgApacheLuceneSearchMultiTermQuery_RewriteMethod:(OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *)method {
  [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, MULTI_TERM_REWRITE_METHOD) withId:method];
}

- (OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *)getMultiTermRewriteMethod {
  return [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) getWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, MULTI_TERM_REWRITE_METHOD)];
}

- (void)setMultiFieldsWithJavaLangCharSequenceArray:(IOSObjectArray *)fields {
  if (fields == nil) {
    fields = [IOSObjectArray arrayWithLength:0 type:JavaLangCharSequence_class_()];
  }
  [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, MULTI_FIELDS) withId:fields];
}

- (void)getMultiFieldsWithJavaLangCharSequenceArray:(IOSObjectArray *)fields {
  [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) getWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, MULTI_FIELDS)];
}

- (void)setFuzzyPrefixLengthWithInt:(jint)fuzzyPrefixLength {
  OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *config = JreRetainedLocalValue([self getQueryConfigHandler]);
  OrgApacheLuceneQueryparserFlexibleStandardConfigFuzzyConfig *fuzzyConfig = JreRetainedLocalValue([((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk(config)) getWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, FUZZY_CONFIG)]);
  if (fuzzyConfig == nil) {
    fuzzyConfig = create_OrgApacheLuceneQueryparserFlexibleStandardConfigFuzzyConfig_init();
    [config setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, FUZZY_CONFIG) withId:fuzzyConfig];
  }
  [fuzzyConfig setPrefixLengthWithInt:fuzzyPrefixLength];
}

- (void)setNumericConfigMapWithJavaUtilMap:(id<JavaUtilMap>)numericConfigMap {
  [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, NUMERIC_CONFIG_MAP) withId:numericConfigMap];
}

- (id<JavaUtilMap>)getNumericConfigMap {
  return [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) getWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, NUMERIC_CONFIG_MAP)];
}

- (void)setLocaleWithJavaUtilLocale:(JavaUtilLocale *)locale {
  [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, LOCALE) withId:locale];
}

- (JavaUtilLocale *)getLocale {
  return [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) getWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, LOCALE)];
}

- (void)setTimeZoneWithJavaUtilTimeZone:(JavaUtilTimeZone *)timeZone {
  [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, TIMEZONE) withId:timeZone];
}

- (JavaUtilTimeZone *)getTimeZone {
  return [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) getWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, TIMEZONE)];
}

- (void)setDefaultPhraseSlopWithInt:(jint)defaultPhraseSlop {
  [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, PHRASE_SLOP) withId:JavaLangInteger_valueOfWithInt_(defaultPhraseSlop)];
}

- (void)setPhraseSlopWithInt:(jint)defaultPhraseSlop {
  [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, PHRASE_SLOP) withId:JavaLangInteger_valueOfWithInt_(defaultPhraseSlop)];
}

- (void)setAnalyzerWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer {
  [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, ANALYZER) withId:analyzer];
}

- (OrgApacheLuceneAnalysisAnalyzer *)getAnalyzer {
  return [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) getWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, ANALYZER)];
}

- (jboolean)getAllowLeadingWildcard {
  JavaLangBoolean *allowLeadingWildcard = JreRetainedLocalValue([((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) getWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, ALLOW_LEADING_WILDCARD)]);
  if (allowLeadingWildcard == nil) {
    return false;
  }
  else {
    return [allowLeadingWildcard booleanValue];
  }
}

- (jfloat)getFuzzyMinSim {
  OrgApacheLuceneQueryparserFlexibleStandardConfigFuzzyConfig *fuzzyConfig = JreRetainedLocalValue([((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) getWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, FUZZY_CONFIG)]);
  if (fuzzyConfig == nil) {
    return OrgApacheLuceneSearchFuzzyQuery_defaultMinSimilarity;
  }
  else {
    return [fuzzyConfig getMinSimilarity];
  }
}

- (jint)getFuzzyPrefixLength {
  OrgApacheLuceneQueryparserFlexibleStandardConfigFuzzyConfig *fuzzyConfig = JreRetainedLocalValue([((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) getWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, FUZZY_CONFIG)]);
  if (fuzzyConfig == nil) {
    return OrgApacheLuceneSearchFuzzyQuery_defaultPrefixLength;
  }
  else {
    return [fuzzyConfig getPrefixLength];
  }
}

- (jint)getPhraseSlop {
  JavaLangInteger *phraseSlop = JreRetainedLocalValue([((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) getWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, PHRASE_SLOP)]);
  if (phraseSlop == nil) {
    return 0;
  }
  else {
    return [phraseSlop intValue];
  }
}

- (void)setFuzzyMinSimWithFloat:(jfloat)fuzzyMinSim {
  OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *config = JreRetainedLocalValue([self getQueryConfigHandler]);
  OrgApacheLuceneQueryparserFlexibleStandardConfigFuzzyConfig *fuzzyConfig = JreRetainedLocalValue([((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk(config)) getWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, FUZZY_CONFIG)]);
  if (fuzzyConfig == nil) {
    fuzzyConfig = create_OrgApacheLuceneQueryparserFlexibleStandardConfigFuzzyConfig_init();
    [config setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, FUZZY_CONFIG) withId:fuzzyConfig];
  }
  [fuzzyConfig setMinSimilarityWithFloat:fuzzyMinSim];
}

- (void)setFieldsBoostWithJavaUtilMap:(id<JavaUtilMap>)boosts {
  [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, FIELD_BOOST_MAP) withId:boosts];
}

- (id<JavaUtilMap>)getFieldsBoost {
  return [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) getWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, FIELD_BOOST_MAP)];
}

- (void)setDateResolutionWithOrgApacheLuceneDocumentDateTools_Resolution:(OrgApacheLuceneDocumentDateTools_Resolution *)dateResolution {
  [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, DATE_RESOLUTION) withId:dateResolution];
}

- (OrgApacheLuceneDocumentDateTools_Resolution *)getDateResolution {
  return [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) getWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, DATE_RESOLUTION)];
}

- (void)setDateResolutionWithJavaUtilMap:(id<JavaUtilMap>)dateRes {
  [self setDateResolutionMapWithJavaUtilMap:dateRes];
}

- (id<JavaUtilMap>)getDateResolutionMap {
  return [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) getWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, FIELD_DATE_RESOLUTION_MAP)];
}

- (void)setDateResolutionMapWithJavaUtilMap:(id<JavaUtilMap>)dateRes {
  [((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, FIELD_DATE_RESOLUTION_MAP) withId:dateRes];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchMultiTermQuery_RewriteMethod;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 19, -1, 20, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 21, -1, -1 },
    { NULL, "V", 0x1, 22, 23, -1, -1, -1, -1 },
    { NULL, "LJavaUtilLocale;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 24, 25, -1, -1, -1, -1 },
    { NULL, "LJavaUtilTimeZone;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 26, 17, -1, -1, 27, -1 },
    { NULL, "V", 0x1, 28, 17, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 29, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisAnalyzer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 30, 31, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 32, 19, -1, 33, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 34, -1, -1 },
    { NULL, "V", 0x1, 35, 36, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneDocumentDateTools_Resolution;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 35, 19, -1, 37, 38, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 39, -1, -1 },
    { NULL, "V", 0x1, 40, 19, -1, 37, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithOrgApacheLuceneAnalysisAnalyzer:);
  methods[2].selector = @selector(description);
  methods[3].selector = @selector(parseWithNSString:withNSString:);
  methods[4].selector = @selector(getDefaultOperator);
  methods[5].selector = @selector(setDefaultOperatorWithOrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator:);
  methods[6].selector = @selector(setLowercaseExpandedTermsWithBoolean:);
  methods[7].selector = @selector(getLowercaseExpandedTerms);
  methods[8].selector = @selector(setAllowLeadingWildcardWithBoolean:);
  methods[9].selector = @selector(setEnablePositionIncrementsWithBoolean:);
  methods[10].selector = @selector(getEnablePositionIncrements);
  methods[11].selector = @selector(setMultiTermRewriteMethodWithOrgApacheLuceneSearchMultiTermQuery_RewriteMethod:);
  methods[12].selector = @selector(getMultiTermRewriteMethod);
  methods[13].selector = @selector(setMultiFieldsWithJavaLangCharSequenceArray:);
  methods[14].selector = @selector(getMultiFieldsWithJavaLangCharSequenceArray:);
  methods[15].selector = @selector(setFuzzyPrefixLengthWithInt:);
  methods[16].selector = @selector(setNumericConfigMapWithJavaUtilMap:);
  methods[17].selector = @selector(getNumericConfigMap);
  methods[18].selector = @selector(setLocaleWithJavaUtilLocale:);
  methods[19].selector = @selector(getLocale);
  methods[20].selector = @selector(setTimeZoneWithJavaUtilTimeZone:);
  methods[21].selector = @selector(getTimeZone);
  methods[22].selector = @selector(setDefaultPhraseSlopWithInt:);
  methods[23].selector = @selector(setPhraseSlopWithInt:);
  methods[24].selector = @selector(setAnalyzerWithOrgApacheLuceneAnalysisAnalyzer:);
  methods[25].selector = @selector(getAnalyzer);
  methods[26].selector = @selector(getAllowLeadingWildcard);
  methods[27].selector = @selector(getFuzzyMinSim);
  methods[28].selector = @selector(getFuzzyPrefixLength);
  methods[29].selector = @selector(getPhraseSlop);
  methods[30].selector = @selector(setFuzzyMinSimWithFloat:);
  methods[31].selector = @selector(setFieldsBoostWithJavaUtilMap:);
  methods[32].selector = @selector(getFieldsBoost);
  methods[33].selector = @selector(setDateResolutionWithOrgApacheLuceneDocumentDateTools_Resolution:);
  methods[34].selector = @selector(getDateResolution);
  methods[35].selector = @selector(setDateResolutionWithJavaUtilMap:);
  methods[36].selector = @selector(getDateResolutionMap);
  methods[37].selector = @selector(setDateResolutionMapWithJavaUtilMap:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneAnalysisAnalyzer;", "toString", "parse", "LNSString;LNSString;", "LOrgApacheLuceneQueryparserFlexibleCoreQueryNodeException;", "setDefaultOperator", "LOrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator;", "setLowercaseExpandedTerms", "Z", "setAllowLeadingWildcard", "setEnablePositionIncrements", "setMultiTermRewriteMethod", "LOrgApacheLuceneSearchMultiTermQuery_RewriteMethod;", "setMultiFields", "[LJavaLangCharSequence;", "getMultiFields", "setFuzzyPrefixLength", "I", "setNumericConfigMap", "LJavaUtilMap;", "(Ljava/util/Map<Ljava/lang/String;Lorg/apache/lucene/queryparser/flexible/standard/config/NumericConfig;>;)V", "()Ljava/util/Map<Ljava/lang/String;Lorg/apache/lucene/queryparser/flexible/standard/config/NumericConfig;>;", "setLocale", "LJavaUtilLocale;", "setTimeZone", "LJavaUtilTimeZone;", "setDefaultPhraseSlop", (void *)&OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser__Annotations$0, "setPhraseSlop", "setAnalyzer", "setFuzzyMinSim", "F", "setFieldsBoost", "(Ljava/util/Map<Ljava/lang/String;Ljava/lang/Float;>;)V", "()Ljava/util/Map<Ljava/lang/String;Ljava/lang/Float;>;", "setDateResolution", "LOrgApacheLuceneDocumentDateTools_Resolution;", "(Ljava/util/Map<Ljava/lang/CharSequence;Lorg/apache/lucene/document/DateTools$Resolution;>;)V", (void *)&OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser__Annotations$1, "()Ljava/util/Map<Ljava/lang/CharSequence;Lorg/apache/lucene/document/DateTools$Resolution;>;", "setDateResolutionMap" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser = { "StandardQueryParser", "org.apache.lucene.queryparser.flexible.standard", ptrTable, methods, NULL, 7, 0x1, 38, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser;
}

@end

void OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser_init(OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser *self) {
  OrgApacheLuceneQueryparserFlexibleCoreQueryParserHelper_initWithOrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler_withOrgApacheLuceneQueryparserFlexibleCoreParserSyntaxParser_withOrgApacheLuceneQueryparserFlexibleCoreProcessorsQueryNodeProcessor_withOrgApacheLuceneQueryparserFlexibleCoreBuildersQueryBuilder_(self, create_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_init(), create_OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParser_init(), create_OrgApacheLuceneQueryparserFlexibleStandardProcessorsStandardQueryNodeProcessorPipeline_initWithOrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler_(nil), create_OrgApacheLuceneQueryparserFlexibleStandardBuildersStandardQueryTreeBuilder_init());
  [self setEnablePositionIncrementsWithBoolean:true];
}

OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser *new_OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser, init)
}

OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser *create_OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser, init)
}

void OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser_initWithOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser *self, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser_init(self);
  [self setAnalyzerWithOrgApacheLuceneAnalysisAnalyzer:analyzer];
}

OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser *new_OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser_initWithOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser, initWithOrgApacheLuceneAnalysisAnalyzer_, analyzer)
}

OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser *create_OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser_initWithOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser, initWithOrgApacheLuceneAnalysisAnalyzer_, analyzer)
}

IOSObjectArray *OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleStandardStandardQueryParser)
