//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/nodes/TermRangeQueryNode.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/FieldQueryNode.h"
#include "org/apache/lucene/queryparser/flexible/standard/nodes/AbstractRangeQueryNode.h"
#include "org/apache/lucene/queryparser/flexible/standard/nodes/TermRangeQueryNode.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queryparser/flexible/standard/nodes/TermRangeQueryNode must not be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode

- (instancetype)initWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode:(OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *)lower
                    withOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode:(OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *)upper
                                                                      withBoolean:(jboolean)lowerInclusive
                                                                      withBoolean:(jboolean)upperInclusive {
  OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_withOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_withBoolean_withBoolean_(self, lower, upper, lowerInclusive, upperInclusive);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode:withOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode:withBoolean:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode;LOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode;ZZ", "Lorg/apache/lucene/queryparser/flexible/standard/nodes/AbstractRangeQueryNode<Lorg/apache/lucene/queryparser/flexible/core/nodes/FieldQueryNode;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode = { "TermRangeQueryNode", "org.apache.lucene.queryparser.flexible.standard.nodes", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, -1, -1, 1, -1 };
  return &_OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode;
}

@end

void OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_withOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_withBoolean_withBoolean_(OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode *self, OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *lower, OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *upper, jboolean lowerInclusive, jboolean upperInclusive) {
  OrgApacheLuceneQueryparserFlexibleStandardNodesAbstractRangeQueryNode_init(self);
  [self setBoundsWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldValuePairQueryNode:lower withOrgApacheLuceneQueryparserFlexibleCoreNodesFieldValuePairQueryNode:upper withBoolean:lowerInclusive withBoolean:upperInclusive];
}

OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode *new_OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_withOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_withBoolean_withBoolean_(OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *lower, OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *upper, jboolean lowerInclusive, jboolean upperInclusive) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode, initWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_withOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_withBoolean_withBoolean_, lower, upper, lowerInclusive, upperInclusive)
}

OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode *create_OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_withOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_withBoolean_withBoolean_(OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *lower, OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *upper, jboolean lowerInclusive, jboolean upperInclusive) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode, initWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_withOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_withBoolean_withBoolean_, lower, upper, lowerInclusive, upperInclusive)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode)
