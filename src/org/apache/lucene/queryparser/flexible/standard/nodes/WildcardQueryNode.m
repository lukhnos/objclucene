//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/nodes/WildcardQueryNode.java
//

#include "J2ObjC_source.h"
#include "java/lang/CharSequence.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/FieldQueryNode.h"
#include "org/apache/lucene/queryparser/flexible/core/parser/EscapeQuerySyntax.h"
#include "org/apache/lucene/queryparser/flexible/standard/nodes/WildcardQueryNode.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queryparser/flexible/standard/nodes/WildcardQueryNode must not be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode

- (instancetype)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)field
                    withJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                     withInt:(jint)begin
                                     withInt:(jint)end {
  OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_withInt_withInt_(self, field, text, begin, end);
  return self;
}

- (instancetype)initWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode:(OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *)fqn {
  OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_(self, fqn);
  return self;
}

- (id<JavaLangCharSequence>)toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:(id<OrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax>)escaper {
  if ([self isDefaultFieldWithJavaLangCharSequence:self->field_]) {
    return self->text_;
  }
  else {
    return JreStrcat("@C@", self->field_, ':', self->text_);
  }
}

- (NSString *)description {
  return JreStrcat("$@$@$", @"<wildcard field='", self->field_, @"' term='", self->text_, @"'/>");
}

- (OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode *)cloneTree {
  OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode *clone = (OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode *) cast_chk([super cloneTree], [OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode class]);
  return clone;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangCharSequence;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode;", 0x1, -1, -1, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaLangCharSequence:withJavaLangCharSequence:withInt:withInt:);
  methods[1].selector = @selector(initWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode:);
  methods[2].selector = @selector(toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:);
  methods[3].selector = @selector(description);
  methods[4].selector = @selector(cloneTree);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaLangCharSequence;LJavaLangCharSequence;II", "LOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode;", "toQueryString", "LOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax;", "toString", "LJavaLangCloneNotSupportedException;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode = { "WildcardQueryNode", "org.apache.lucene.queryparser.flexible.standard.nodes", ptrTable, methods, NULL, 7, 0x1, 5, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode;
}

@end

void OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_withInt_withInt_(OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode *self, id<JavaLangCharSequence> field, id<JavaLangCharSequence> text, jint begin, jint end) {
  OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_withInt_withInt_(self, field, text, begin, end);
}

OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode *new_OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_withInt_withInt_(id<JavaLangCharSequence> field, id<JavaLangCharSequence> text, jint begin, jint end) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode, initWithJavaLangCharSequence_withJavaLangCharSequence_withInt_withInt_, field, text, begin, end)
}

OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode *create_OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_withInt_withInt_(id<JavaLangCharSequence> field, id<JavaLangCharSequence> text, jint begin, jint end) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode, initWithJavaLangCharSequence_withJavaLangCharSequence_withInt_withInt_, field, text, begin, end)
}

void OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_(OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode *self, OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *fqn) {
  OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_withInt_withInt_(self, [((OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *) nil_chk(fqn)) getField], [fqn getText], [fqn getBegin], [fqn getEnd]);
}

OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode *new_OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_(OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *fqn) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode, initWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_, fqn)
}

OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode *create_OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_(OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *fqn) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode, initWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_, fqn)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode)
