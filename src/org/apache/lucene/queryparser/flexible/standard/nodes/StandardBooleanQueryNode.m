//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/nodes/StandardBooleanQueryNode.java
//

#include "J2ObjC_source.h"
#include "java/util/List.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/BooleanQueryNode.h"
#include "org/apache/lucene/queryparser/flexible/standard/nodes/StandardBooleanQueryNode.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queryparser/flexible/standard/nodes/StandardBooleanQueryNode must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneQueryparserFlexibleStandardNodesStandardBooleanQueryNode () {
 @public
  jboolean disableCoord_;
}

@end

@implementation OrgApacheLuceneQueryparserFlexibleStandardNodesStandardBooleanQueryNode

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)clauses
                         withBoolean:(jboolean)disableCoord {
  OrgApacheLuceneQueryparserFlexibleStandardNodesStandardBooleanQueryNode_initWithJavaUtilList_withBoolean_(self, clauses, disableCoord);
  return self;
}

- (jboolean)isDisableCoord {
  return self->disableCoord_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilList:withBoolean:);
  methods[1].selector = @selector(isDisableCoord);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "disableCoord_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilList;Z", "(Ljava/util/List<Lorg/apache/lucene/queryparser/flexible/core/nodes/QueryNode;>;Z)V" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleStandardNodesStandardBooleanQueryNode = { "StandardBooleanQueryNode", "org.apache.lucene.queryparser.flexible.standard.nodes", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueryparserFlexibleStandardNodesStandardBooleanQueryNode;
}

@end

void OrgApacheLuceneQueryparserFlexibleStandardNodesStandardBooleanQueryNode_initWithJavaUtilList_withBoolean_(OrgApacheLuceneQueryparserFlexibleStandardNodesStandardBooleanQueryNode *self, id<JavaUtilList> clauses, jboolean disableCoord) {
  OrgApacheLuceneQueryparserFlexibleCoreNodesBooleanQueryNode_initWithJavaUtilList_(self, clauses);
  self->disableCoord_ = disableCoord;
}

OrgApacheLuceneQueryparserFlexibleStandardNodesStandardBooleanQueryNode *new_OrgApacheLuceneQueryparserFlexibleStandardNodesStandardBooleanQueryNode_initWithJavaUtilList_withBoolean_(id<JavaUtilList> clauses, jboolean disableCoord) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserFlexibleStandardNodesStandardBooleanQueryNode, initWithJavaUtilList_withBoolean_, clauses, disableCoord)
}

OrgApacheLuceneQueryparserFlexibleStandardNodesStandardBooleanQueryNode *create_OrgApacheLuceneQueryparserFlexibleStandardNodesStandardBooleanQueryNode_initWithJavaUtilList_withBoolean_(id<JavaUtilList> clauses, jboolean disableCoord) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserFlexibleStandardNodesStandardBooleanQueryNode, initWithJavaUtilList_withBoolean_, clauses, disableCoord)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleStandardNodesStandardBooleanQueryNode)
