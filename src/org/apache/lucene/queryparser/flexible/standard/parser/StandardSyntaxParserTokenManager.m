//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/StandardSyntaxParserTokenManager.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "org/apache/lucene/queryparser/flexible/standard/parser/CharStream.h"
#include "org/apache/lucene/queryparser/flexible/standard/parser/StandardSyntaxParserTokenManager.h"
#include "org/apache/lucene/queryparser/flexible/standard/parser/Token.h"
#include "org/apache/lucene/queryparser/flexible/standard/parser/TokenMgrError.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queryparser/flexible/standard/parser/StandardSyntaxParserTokenManager must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager () {
 @public
  IOSIntArray *jjrounds_;
  IOSIntArray *jjstateSet_;
}

- (jint)jjStopStringLiteralDfa_2WithInt:(jint)pos
                               withLong:(jlong)active0;

- (jint)jjStartNfa_2WithInt:(jint)pos
                   withLong:(jlong)active0;

- (jint)jjStopAtPosWithInt:(jint)pos
                   withInt:(jint)kind;

- (jint)jjMoveStringLiteralDfa0_2;

- (jint)jjMoveStringLiteralDfa1_2WithLong:(jlong)active0;

- (jint)jjMoveNfa_2WithInt:(jint)startState
                   withInt:(jint)curPos;

- (jint)jjMoveStringLiteralDfa0_0;

- (jint)jjMoveNfa_0WithInt:(jint)startState
                   withInt:(jint)curPos;

- (jint)jjStopStringLiteralDfa_1WithInt:(jint)pos
                               withLong:(jlong)active0;

- (jint)jjStartNfa_1WithInt:(jint)pos
                   withLong:(jlong)active0;

- (jint)jjMoveStringLiteralDfa0_1;

- (jint)jjMoveStringLiteralDfa1_1WithLong:(jlong)active0;

- (jint)jjStartNfaWithStates_1WithInt:(jint)pos
                              withInt:(jint)kind
                              withInt:(jint)state;

- (jint)jjMoveNfa_1WithInt:(jint)startState
                   withInt:(jint)curPos;

+ (jboolean)jjCanMove_0WithInt:(jint)hiByte
                       withInt:(jint)i1
                       withInt:(jint)i2
                      withLong:(jlong)l1
                      withLong:(jlong)l2;

+ (jboolean)jjCanMove_1WithInt:(jint)hiByte
                       withInt:(jint)i1
                       withInt:(jint)i2
                      withLong:(jlong)l1
                      withLong:(jlong)l2;

+ (jboolean)jjCanMove_2WithInt:(jint)hiByte
                       withInt:(jint)i1
                       withInt:(jint)i2
                      withLong:(jlong)l1
                      withLong:(jlong)l2;

- (void)ReInitRounds;

- (void)jjCheckNAddWithInt:(jint)state;

- (void)jjAddStatesWithInt:(jint)start
                   withInt:(jint)end;

- (void)jjCheckNAddTwoStatesWithInt:(jint)state1
                            withInt:(jint)state2;

- (void)jjCheckNAddStatesWithInt:(jint)start
                         withInt:(jint)end;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager, jjrounds_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager, jjstateSet_, IOSIntArray *)

__attribute__((unused)) static jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopStringLiteralDfa_2WithInt_withLong_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint pos, jlong active0);

__attribute__((unused)) static jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStartNfa_2WithInt_withLong_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint pos, jlong active0);

__attribute__((unused)) static jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopAtPosWithInt_withInt_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint pos, jint kind);

__attribute__((unused)) static jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveStringLiteralDfa0_2(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self);

__attribute__((unused)) static jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveStringLiteralDfa1_2WithLong_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jlong active0);

__attribute__((unused)) static jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveNfa_2WithInt_withInt_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint startState, jint curPos);

__attribute__((unused)) static jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveStringLiteralDfa0_0(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self);

__attribute__((unused)) static jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveNfa_0WithInt_withInt_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint startState, jint curPos);

__attribute__((unused)) static jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopStringLiteralDfa_1WithInt_withLong_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint pos, jlong active0);

__attribute__((unused)) static jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStartNfa_1WithInt_withLong_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint pos, jlong active0);

__attribute__((unused)) static jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveStringLiteralDfa0_1(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self);

__attribute__((unused)) static jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveStringLiteralDfa1_1WithLong_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jlong active0);

__attribute__((unused)) static jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStartNfaWithStates_1WithInt_withInt_withInt_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint pos, jint kind, jint state);

__attribute__((unused)) static jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveNfa_1WithInt_withInt_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint startState, jint curPos);

__attribute__((unused)) static jboolean OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(jint hiByte, jint i1, jint i2, jlong l1, jlong l2);

__attribute__((unused)) static jboolean OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCanMove_1WithInt_withInt_withInt_withLong_withLong_(jint hiByte, jint i1, jint i2, jlong l1, jlong l2);

__attribute__((unused)) static jboolean OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCanMove_2WithInt_withInt_withInt_withLong_withLong_(jint hiByte, jint i1, jint i2, jlong l1, jlong l2);

__attribute__((unused)) static void OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_ReInitRounds(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self);

__attribute__((unused)) static void OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddWithInt_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint state);

__attribute__((unused)) static void OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjAddStatesWithInt_withInt_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint start, jint end);

__attribute__((unused)) static void OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint state1, jint state2);

__attribute__((unused)) static void OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddStatesWithInt_withInt_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint start, jint end);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager)

IOSLongArray *OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjbitVec0;
IOSLongArray *OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjbitVec1;
IOSLongArray *OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjbitVec3;
IOSLongArray *OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjbitVec4;
IOSIntArray *OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjnextStates;
IOSObjectArray *OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjstrLiteralImages;
IOSObjectArray *OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_lexStateNames;
IOSIntArray *OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjnewLexState;
IOSLongArray *OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjtoToken;
IOSLongArray *OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjtoSkip;

@implementation OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager

+ (IOSLongArray *)jjbitVec0 {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjbitVec0;
}

+ (IOSLongArray *)jjbitVec1 {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjbitVec1;
}

+ (IOSLongArray *)jjbitVec3 {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjbitVec3;
}

+ (IOSLongArray *)jjbitVec4 {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjbitVec4;
}

+ (IOSIntArray *)jjnextStates {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjnextStates;
}

+ (IOSObjectArray *)jjstrLiteralImages {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjstrLiteralImages;
}

+ (IOSObjectArray *)lexStateNames {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_lexStateNames;
}

+ (IOSIntArray *)jjnewLexState {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjnewLexState;
}

+ (IOSLongArray *)jjtoToken {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjtoToken;
}

+ (IOSLongArray *)jjtoSkip {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjtoSkip;
}

- (jint)jjStopStringLiteralDfa_2WithInt:(jint)pos
                               withLong:(jlong)active0 {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopStringLiteralDfa_2WithInt_withLong_(self, pos, active0);
}

- (jint)jjStartNfa_2WithInt:(jint)pos
                   withLong:(jlong)active0 {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStartNfa_2WithInt_withLong_(self, pos, active0);
}

- (jint)jjStopAtPosWithInt:(jint)pos
                   withInt:(jint)kind {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopAtPosWithInt_withInt_(self, pos, kind);
}

- (jint)jjMoveStringLiteralDfa0_2 {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveStringLiteralDfa0_2(self);
}

- (jint)jjMoveStringLiteralDfa1_2WithLong:(jlong)active0 {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveStringLiteralDfa1_2WithLong_(self, active0);
}

- (jint)jjMoveNfa_2WithInt:(jint)startState
                   withInt:(jint)curPos {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveNfa_2WithInt_withInt_(self, startState, curPos);
}

- (jint)jjMoveStringLiteralDfa0_0 {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveStringLiteralDfa0_0(self);
}

- (jint)jjMoveNfa_0WithInt:(jint)startState
                   withInt:(jint)curPos {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveNfa_0WithInt_withInt_(self, startState, curPos);
}

- (jint)jjStopStringLiteralDfa_1WithInt:(jint)pos
                               withLong:(jlong)active0 {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopStringLiteralDfa_1WithInt_withLong_(self, pos, active0);
}

- (jint)jjStartNfa_1WithInt:(jint)pos
                   withLong:(jlong)active0 {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStartNfa_1WithInt_withLong_(self, pos, active0);
}

- (jint)jjMoveStringLiteralDfa0_1 {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveStringLiteralDfa0_1(self);
}

- (jint)jjMoveStringLiteralDfa1_1WithLong:(jlong)active0 {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveStringLiteralDfa1_1WithLong_(self, active0);
}

- (jint)jjStartNfaWithStates_1WithInt:(jint)pos
                              withInt:(jint)kind
                              withInt:(jint)state {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStartNfaWithStates_1WithInt_withInt_withInt_(self, pos, kind, state);
}

- (jint)jjMoveNfa_1WithInt:(jint)startState
                   withInt:(jint)curPos {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveNfa_1WithInt_withInt_(self, startState, curPos);
}

+ (jboolean)jjCanMove_0WithInt:(jint)hiByte
                       withInt:(jint)i1
                       withInt:(jint)i2
                      withLong:(jlong)l1
                      withLong:(jlong)l2 {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2);
}

+ (jboolean)jjCanMove_1WithInt:(jint)hiByte
                       withInt:(jint)i1
                       withInt:(jint)i2
                      withLong:(jlong)l1
                      withLong:(jlong)l2 {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCanMove_1WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2);
}

+ (jboolean)jjCanMove_2WithInt:(jint)hiByte
                       withInt:(jint)i1
                       withInt:(jint)i2
                      withLong:(jlong)l1
                      withLong:(jlong)l2 {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCanMove_2WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2);
}

- (instancetype)initWithOrgApacheLuceneQueryparserFlexibleStandardParserCharStream:(id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream>)stream {
  OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_initWithOrgApacheLuceneQueryparserFlexibleStandardParserCharStream_(self, stream);
  return self;
}

- (instancetype)initWithOrgApacheLuceneQueryparserFlexibleStandardParserCharStream:(id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream>)stream
                                                                           withInt:(jint)lexState {
  OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_initWithOrgApacheLuceneQueryparserFlexibleStandardParserCharStream_withInt_(self, stream, lexState);
  return self;
}

- (void)ReInitWithOrgApacheLuceneQueryparserFlexibleStandardParserCharStream:(id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream>)stream {
  jjmatchedPos_ = jjnewStateCnt_ = 0;
  curLexState_ = defaultLexState_;
  JreStrongAssign(&input_stream_, stream);
  OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_ReInitRounds(self);
}

- (void)ReInitRounds {
  OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_ReInitRounds(self);
}

- (void)ReInitWithOrgApacheLuceneQueryparserFlexibleStandardParserCharStream:(id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream>)stream
                                                                     withInt:(jint)lexState {
  [self ReInitWithOrgApacheLuceneQueryparserFlexibleStandardParserCharStream:stream];
  [self SwitchToWithInt:lexState];
}

- (void)SwitchToWithInt:(jint)lexState {
  if (lexState >= 3 || lexState < 0) @throw create_OrgApacheLuceneQueryparserFlexibleStandardParserTokenMgrError_initWithNSString_withInt_(JreStrcat("$I$", @"Error: Ignoring invalid lexical state : ", lexState, @". State unchanged."), OrgApacheLuceneQueryparserFlexibleStandardParserTokenMgrError_INVALID_LEXICAL_STATE);
  else curLexState_ = lexState;
}

- (OrgApacheLuceneQueryparserFlexibleStandardParserToken *)jjFillToken {
  OrgApacheLuceneQueryparserFlexibleStandardParserToken *t;
  NSString *curTokenImage;
  jint beginLine;
  jint endLine;
  jint beginColumn;
  jint endColumn;
  NSString *im = IOSObjectArray_Get(nil_chk(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjstrLiteralImages), jjmatchedKind_);
  curTokenImage = (im == nil) ? [((id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream>) nil_chk(input_stream_)) GetImage] : im;
  beginLine = [((id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream>) nil_chk(input_stream_)) getBeginLine];
  beginColumn = [((id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream>) nil_chk(input_stream_)) getBeginColumn];
  endLine = [((id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream>) nil_chk(input_stream_)) getEndLine];
  endColumn = [((id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream>) nil_chk(input_stream_)) getEndColumn];
  t = OrgApacheLuceneQueryparserFlexibleStandardParserToken_newTokenWithInt_withNSString_(jjmatchedKind_, curTokenImage);
  ((OrgApacheLuceneQueryparserFlexibleStandardParserToken *) nil_chk(t))->beginLine_ = beginLine;
  t->endLine_ = endLine;
  t->beginColumn_ = beginColumn;
  t->endColumn_ = endColumn;
  return t;
}

- (OrgApacheLuceneQueryparserFlexibleStandardParserToken *)getNextToken {
  OrgApacheLuceneQueryparserFlexibleStandardParserToken *matchedToken;
  jint curPos = 0;
  for (; ; ) {
    {
      @try {
        curChar_ = [((id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream>) nil_chk(input_stream_)) BeginToken];
      }
      @catch (JavaIoIOException *e) {
        jjmatchedKind_ = 0;
        matchedToken = [self jjFillToken];
        return matchedToken;
      }
      switch (curLexState_) {
        case 0:
        jjmatchedKind_ = (jint) 0x7fffffff;
        jjmatchedPos_ = 0;
        curPos = OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveStringLiteralDfa0_0(self);
        break;
        case 1:
        jjmatchedKind_ = (jint) 0x7fffffff;
        jjmatchedPos_ = 0;
        curPos = OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveStringLiteralDfa0_1(self);
        break;
        case 2:
        jjmatchedKind_ = (jint) 0x7fffffff;
        jjmatchedPos_ = 0;
        curPos = OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveStringLiteralDfa0_2(self);
        break;
      }
      if (jjmatchedKind_ != (jint) 0x7fffffff) {
        if (jjmatchedPos_ + 1 < curPos) [((id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream>) nil_chk(input_stream_)) backupWithInt:curPos - jjmatchedPos_ - 1];
        if ((IOSLongArray_Get(nil_chk(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjtoToken), JreRShift32(jjmatchedKind_, 6)) & (JreLShift64(1LL, (jjmatchedKind_ & 077)))) != 0LL) {
          matchedToken = [self jjFillToken];
          if (IOSIntArray_Get(nil_chk(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjnewLexState), jjmatchedKind_) != -1) curLexState_ = IOSIntArray_Get(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjnewLexState, jjmatchedKind_);
          return matchedToken;
        }
        else {
          if (IOSIntArray_Get(nil_chk(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjnewLexState), jjmatchedKind_) != -1) curLexState_ = IOSIntArray_Get(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjnewLexState, jjmatchedKind_);
          goto continue_EOFLoop;
        }
      }
      jint error_line = [((id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream>) nil_chk(input_stream_)) getEndLine];
      jint error_column = [((id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream>) nil_chk(input_stream_)) getEndColumn];
      NSString *error_after = nil;
      jboolean EOFSeen = false;
      @try {
        [((id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream>) nil_chk(input_stream_)) readChar];
        [((id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream>) nil_chk(input_stream_)) backupWithInt:1];
      }
      @catch (JavaIoIOException *e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? @"" : [((id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream>) nil_chk(input_stream_)) GetImage];
        if (curChar_ == 0x000a || curChar_ == 0x000d) {
          error_line++;
          error_column = 0;
        }
        else error_column++;
      }
      if (!EOFSeen) {
        [((id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream>) nil_chk(input_stream_)) backupWithInt:1];
        error_after = curPos <= 1 ? @"" : [((id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream>) nil_chk(input_stream_)) GetImage];
      }
      @throw create_OrgApacheLuceneQueryparserFlexibleStandardParserTokenMgrError_initWithBoolean_withInt_withInt_withInt_withNSString_withChar_withInt_(EOFSeen, curLexState_, error_line, error_column, error_after, curChar_, OrgApacheLuceneQueryparserFlexibleStandardParserTokenMgrError_LEXICAL_ERROR);
    }
    continue_EOFLoop: ;
  }
}

- (void)jjCheckNAddWithInt:(jint)state {
  OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddWithInt_(self, state);
}

- (void)jjAddStatesWithInt:(jint)start
                   withInt:(jint)end {
  OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjAddStatesWithInt_withInt_(self, start, end);
}

- (void)jjCheckNAddTwoStatesWithInt:(jint)state1
                            withInt:(jint)state2 {
  OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, state1, state2);
}

- (void)jjCheckNAddStatesWithInt:(jint)start
                         withInt:(jint)end {
  OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, start, end);
}

- (void)dealloc {
  RELEASE_(input_stream_);
  RELEASE_(jjrounds_);
  RELEASE_(jjstateSet_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x12, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x12, 2, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 3, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 7, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 8, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x12, 9, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x12, 10, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 11, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 12, 13, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 14, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x1a, 15, 16, -1, -1, -1, -1 },
    { NULL, "Z", 0x1a, 17, 16, -1, -1, -1, -1 },
    { NULL, "Z", 0x1a, 18, 16, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 19, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 20, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 21, 19, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 21, 20, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 22, 23, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueryparserFlexibleStandardParserToken;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueryparserFlexibleStandardParserToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 24, 23, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 25, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 26, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 27, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(jjStopStringLiteralDfa_2WithInt:withLong:);
  methods[1].selector = @selector(jjStartNfa_2WithInt:withLong:);
  methods[2].selector = @selector(jjStopAtPosWithInt:withInt:);
  methods[3].selector = @selector(jjMoveStringLiteralDfa0_2);
  methods[4].selector = @selector(jjMoveStringLiteralDfa1_2WithLong:);
  methods[5].selector = @selector(jjMoveNfa_2WithInt:withInt:);
  methods[6].selector = @selector(jjMoveStringLiteralDfa0_0);
  methods[7].selector = @selector(jjMoveNfa_0WithInt:withInt:);
  methods[8].selector = @selector(jjStopStringLiteralDfa_1WithInt:withLong:);
  methods[9].selector = @selector(jjStartNfa_1WithInt:withLong:);
  methods[10].selector = @selector(jjMoveStringLiteralDfa0_1);
  methods[11].selector = @selector(jjMoveStringLiteralDfa1_1WithLong:);
  methods[12].selector = @selector(jjStartNfaWithStates_1WithInt:withInt:withInt:);
  methods[13].selector = @selector(jjMoveNfa_1WithInt:withInt:);
  methods[14].selector = @selector(jjCanMove_0WithInt:withInt:withInt:withLong:withLong:);
  methods[15].selector = @selector(jjCanMove_1WithInt:withInt:withInt:withLong:withLong:);
  methods[16].selector = @selector(jjCanMove_2WithInt:withInt:withInt:withLong:withLong:);
  methods[17].selector = @selector(initWithOrgApacheLuceneQueryparserFlexibleStandardParserCharStream:);
  methods[18].selector = @selector(initWithOrgApacheLuceneQueryparserFlexibleStandardParserCharStream:withInt:);
  methods[19].selector = @selector(ReInitWithOrgApacheLuceneQueryparserFlexibleStandardParserCharStream:);
  methods[20].selector = @selector(ReInitRounds);
  methods[21].selector = @selector(ReInitWithOrgApacheLuceneQueryparserFlexibleStandardParserCharStream:withInt:);
  methods[22].selector = @selector(SwitchToWithInt:);
  methods[23].selector = @selector(jjFillToken);
  methods[24].selector = @selector(getNextToken);
  methods[25].selector = @selector(jjCheckNAddWithInt:);
  methods[26].selector = @selector(jjAddStatesWithInt:withInt:);
  methods[27].selector = @selector(jjCheckNAddTwoStatesWithInt:withInt:);
  methods[28].selector = @selector(jjCheckNAddStatesWithInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "jjbitVec0", "[J", .constantValue.asLong = 0, 0x18, -1, 28, -1, -1 },
    { "jjbitVec1", "[J", .constantValue.asLong = 0, 0x18, -1, 29, -1, -1 },
    { "jjbitVec3", "[J", .constantValue.asLong = 0, 0x18, -1, 30, -1, -1 },
    { "jjbitVec4", "[J", .constantValue.asLong = 0, 0x18, -1, 31, -1, -1 },
    { "jjnextStates", "[I", .constantValue.asLong = 0, 0x18, -1, 32, -1, -1 },
    { "jjstrLiteralImages", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 33, -1, -1 },
    { "lexStateNames", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 34, -1, -1 },
    { "jjnewLexState", "[I", .constantValue.asLong = 0, 0x19, -1, 35, -1, -1 },
    { "jjtoToken", "[J", .constantValue.asLong = 0, 0x18, -1, 36, -1, -1 },
    { "jjtoSkip", "[J", .constantValue.asLong = 0, 0x18, -1, 37, -1, -1 },
    { "input_stream_", "LOrgApacheLuceneQueryparserFlexibleStandardParserCharStream;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "jjrounds_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "jjstateSet_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "curChar_", "C", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "curLexState_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "defaultLexState_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "jjnewStateCnt_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "jjround_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "jjmatchedPos_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "jjmatchedKind_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "jjStopStringLiteralDfa_2", "IJ", "jjStartNfa_2", "jjStopAtPos", "II", "jjMoveStringLiteralDfa1_2", "J", "jjMoveNfa_2", "jjMoveNfa_0", "jjStopStringLiteralDfa_1", "jjStartNfa_1", "jjMoveStringLiteralDfa1_1", "jjStartNfaWithStates_1", "III", "jjMoveNfa_1", "jjCanMove_0", "IIIJJ", "jjCanMove_1", "jjCanMove_2", "LOrgApacheLuceneQueryparserFlexibleStandardParserCharStream;", "LOrgApacheLuceneQueryparserFlexibleStandardParserCharStream;I", "ReInit", "SwitchTo", "I", "jjCheckNAdd", "jjAddStates", "jjCheckNAddTwoStates", "jjCheckNAddStates", &OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjbitVec0, &OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjbitVec1, &OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjbitVec3, &OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjbitVec4, &OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjnextStates, &OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjstrLiteralImages, &OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_lexStateNames, &OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjnewLexState, &OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjtoToken, &OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjtoSkip };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager = { "StandardSyntaxParserTokenManager", "org.apache.lucene.queryparser.flexible.standard.parser", ptrTable, methods, fields, 7, 0x1, 29, 20, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjbitVec0, [IOSLongArray newArrayWithLongs:(jlong[]){ (jlong) 0x1LL, (jlong) 0x0LL, (jlong) 0x0LL, (jlong) 0x0LL } count:4]);
    JreStrongAssignAndConsume(&OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjbitVec1, [IOSLongArray newArrayWithLongs:(jlong[]){ (jlong) 0xfffffffffffffffeLL, (jlong) 0xffffffffffffffffLL, (jlong) 0xffffffffffffffffLL, (jlong) 0xffffffffffffffffLL } count:4]);
    JreStrongAssignAndConsume(&OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjbitVec3, [IOSLongArray newArrayWithLongs:(jlong[]){ (jlong) 0x0LL, (jlong) 0x0LL, (jlong) 0xffffffffffffffffLL, (jlong) 0xffffffffffffffffLL } count:4]);
    JreStrongAssignAndConsume(&OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjbitVec4, [IOSLongArray newArrayWithLongs:(jlong[]){ (jlong) 0xfffefffffffffffeLL, (jlong) 0xffffffffffffffffLL, (jlong) 0xffffffffffffffffLL, (jlong) 0xffffffffffffffffLL } count:4]);
    JreStrongAssignAndConsume(&OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjnextStates, [IOSIntArray newArrayWithInts:(jint[]){ 29, 31, 32, 15, 16, 18, 25, 26, 0, 1, 2, 4, 5 } count:13]);
    JreStrongAssignAndConsume(&OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjstrLiteralImages, [IOSObjectArray newArrayWithObjects:(id[]){ @"", nil, nil, nil, nil, nil, nil, nil, nil, nil, nil, @"+", @"-", @"(", @")", @":", @"=", @"<", @"<=", @">", @">=", @"^", nil, nil, nil, nil, @"[", @"{", nil, @"TO", @"]", @"}", nil, nil } count:34 type:NSString_class_()]);
    JreStrongAssignAndConsume(&OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_lexStateNames, [IOSObjectArray newArrayWithObjects:(id[]){ @"Boost", @"Range", @"DEFAULT" } count:3 type:NSString_class_()]);
    JreStrongAssignAndConsume(&OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjnewLexState, [IOSIntArray newArrayWithInts:(jint[]){ -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, 1, 1, 2, -1, 2, 2, -1, -1 } count:34]);
    JreStrongAssignAndConsume(&OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjtoToken, [IOSLongArray newArrayWithLongs:(jlong[]){ (jlong) 0x3ffffff01LL } count:1]);
    JreStrongAssignAndConsume(&OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjtoSkip, [IOSLongArray newArrayWithLongs:(jlong[]){ (jlong) 0x80LL } count:1]);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager)
  }
}

@end

jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopStringLiteralDfa_2WithInt_withLong_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint pos, jlong active0) {
  switch (pos) {
    default:
    return -1;
  }
}

jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStartNfa_2WithInt_withLong_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint pos, jlong active0) {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveNfa_2WithInt_withInt_(self, OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopStringLiteralDfa_2WithInt_withLong_(self, pos, active0), pos + 1);
}

jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopAtPosWithInt_withInt_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint pos, jint kind) {
  self->jjmatchedKind_ = kind;
  self->jjmatchedPos_ = pos;
  return pos + 1;
}

jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveStringLiteralDfa0_2(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self) {
  switch (self->curChar_) {
    case 40:
    return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 13);
    case 41:
    return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 14);
    case 43:
    return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 11);
    case 45:
    return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 12);
    case 58:
    return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 15);
    case 60:
    self->jjmatchedKind_ = 17;
    return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveStringLiteralDfa1_2WithLong_(self, (jlong) 0x40000LL);
    case 61:
    return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 16);
    case 62:
    self->jjmatchedKind_ = 19;
    return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveStringLiteralDfa1_2WithLong_(self, (jlong) 0x100000LL);
    case 91:
    return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 26);
    case 94:
    return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 21);
    case 123:
    return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 27);
    default:
    return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveNfa_2WithInt_withInt_(self, 0, 0);
  }
}

jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveStringLiteralDfa1_2WithLong_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jlong active0) {
  @try {
    self->curChar_ = [((id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream>) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopStringLiteralDfa_2WithInt_withLong_(self, 0, active0);
    return 1;
  }
  switch (self->curChar_) {
    case 61:
    if ((active0 & (jlong) 0x40000LL) != 0LL) return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopAtPosWithInt_withInt_(self, 1, 18);
    else if ((active0 & (jlong) 0x100000LL) != 0LL) return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopAtPosWithInt_withInt_(self, 1, 20);
    break;
    default:
    break;
  }
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStartNfa_2WithInt_withLong_(self, 0, active0);
}

jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveNfa_2WithInt_withInt_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint startState, jint curPos) {
  jint startsAt = 0;
  self->jjnewStateCnt_ = 33;
  jint i = 1;
  *IOSIntArray_GetRef(nil_chk(self->jjstateSet_), 0) = startState;
  jint kind = (jint) 0x7fffffff;
  for (; ; ) {
    if (++self->jjround_ == (jint) 0x7fffffff) OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_ReInitRounds(self);
    if (self->curChar_ < 64) {
      jlong l = JreLShift64(1LL, self->curChar_);
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 0:
          if (((jlong) 0x8bff54f8ffffd9ffLL & l) != 0LL) {
            if (kind > 23) kind = 23;
            OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 20, 21);
          }
          else if (((jlong) 0x100002600LL & l) != 0LL) {
            if (kind > 7) kind = 7;
          }
          else if (self->curChar_ == 47) OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 0, 2);
          else if (self->curChar_ == 34) OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 3, 5);
          else if (self->curChar_ == 33) {
            if (kind > 10) kind = 10;
          }
          if (self->curChar_ == 38) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 4;
          break;
          case 4:
          if (self->curChar_ == 38 && kind > 8) kind = 8;
          break;
          case 5:
          if (self->curChar_ == 38) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 4;
          break;
          case 13:
          if (self->curChar_ == 33 && kind > 10) kind = 10;
          break;
          case 14:
          if (self->curChar_ == 34) OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 3, 5);
          break;
          case 15:
          if (((jlong) 0xfffffffbffffffffLL & l) != 0LL) OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 3, 5);
          break;
          case 17:
          OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 3, 5);
          break;
          case 18:
          if (self->curChar_ == 34 && kind > 22) kind = 22;
          break;
          case 19:
          if (((jlong) 0x8bff54f8ffffd9ffLL & l) == 0LL) break;
          if (kind > 23) kind = 23;
          OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 20, 21);
          break;
          case 20:
          if (((jlong) 0x8bff7cf8ffffd9ffLL & l) == 0LL) break;
          if (kind > 23) kind = 23;
          OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 20, 21);
          break;
          case 22:
          if (kind > 23) kind = 23;
          OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 20, 21);
          break;
          case 25:
          if (((jlong) 0x3ff000000000000LL & l) == 0LL) break;
          if (kind > 24) kind = 24;
          OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjAddStatesWithInt_withInt_(self, 6, 7);
          break;
          case 26:
          if (self->curChar_ == 46) OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddWithInt_(self, 27);
          break;
          case 27:
          if (((jlong) 0x3ff000000000000LL & l) == 0LL) break;
          if (kind > 24) kind = 24;
          OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddWithInt_(self, 27);
          break;
          case 28:
          case 30:
          if (self->curChar_ == 47) OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 0, 2);
          break;
          case 29:
          if (((jlong) 0xffff7fffffffffffLL & l) != 0LL) OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 0, 2);
          break;
          case 32:
          if (self->curChar_ == 47 && kind > 25) kind = 25;
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    else if (self->curChar_ < 128) {
      jlong l = JreLShift64(1LL, (self->curChar_ & 077));
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 0:
          if (((jlong) 0x97ffffff87ffffffLL & l) != 0LL) {
            if (kind > 23) kind = 23;
            OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 20, 21);
          }
          else if (self->curChar_ == 126) {
            if (kind > 24) kind = 24;
            *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 25;
          }
          else if (self->curChar_ == 92) OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddWithInt_(self, 22);
          if (self->curChar_ == 78) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 11;
          else if (self->curChar_ == 124) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 8;
          else if (self->curChar_ == 79) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 6;
          else if (self->curChar_ == 65) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 2;
          break;
          case 1:
          if (self->curChar_ == 68 && kind > 8) kind = 8;
          break;
          case 2:
          if (self->curChar_ == 78) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 1;
          break;
          case 3:
          if (self->curChar_ == 65) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 2;
          break;
          case 6:
          if (self->curChar_ == 82 && kind > 9) kind = 9;
          break;
          case 7:
          if (self->curChar_ == 79) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 6;
          break;
          case 8:
          if (self->curChar_ == 124 && kind > 9) kind = 9;
          break;
          case 9:
          if (self->curChar_ == 124) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 8;
          break;
          case 10:
          if (self->curChar_ == 84 && kind > 10) kind = 10;
          break;
          case 11:
          if (self->curChar_ == 79) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 10;
          break;
          case 12:
          if (self->curChar_ == 78) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 11;
          break;
          case 15:
          if (((jlong) 0xffffffffefffffffLL & l) != 0LL) OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 3, 5);
          break;
          case 16:
          if (self->curChar_ == 92) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 17;
          break;
          case 17:
          OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 3, 5);
          break;
          case 19:
          case 20:
          if (((jlong) 0x97ffffff87ffffffLL & l) == 0LL) break;
          if (kind > 23) kind = 23;
          OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 20, 21);
          break;
          case 21:
          if (self->curChar_ == 92) OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 22, 22);
          break;
          case 22:
          if (kind > 23) kind = 23;
          OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 20, 21);
          break;
          case 23:
          if (self->curChar_ == 92) OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddWithInt_(self, 22);
          break;
          case 24:
          if (self->curChar_ != 126) break;
          if (kind > 24) kind = 24;
          *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 25;
          break;
          case 29:
          OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjAddStatesWithInt_withInt_(self, 0, 2);
          break;
          case 31:
          if (self->curChar_ == 92) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 30;
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    else {
      jint hiByte = (jint) (JreRShift32(self->curChar_, 8));
      jint i1 = JreRShift32(hiByte, 6);
      jlong l1 = JreLShift64(1LL, (hiByte & 077));
      jint i2 = JreRShift32((self->curChar_ & (jint) 0xff), 6);
      jlong l2 = JreLShift64(1LL, (self->curChar_ & 077));
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 0:
          if (OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) {
            if (kind > 7) kind = 7;
          }
          if (OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCanMove_2WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) {
            if (kind > 23) kind = 23;
            OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 20, 21);
          }
          break;
          case 15:
          case 17:
          if (OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCanMove_1WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 3, 5);
          break;
          case 19:
          case 20:
          if (!OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCanMove_2WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) break;
          if (kind > 23) kind = 23;
          OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 20, 21);
          break;
          case 22:
          if (!OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCanMove_1WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) break;
          if (kind > 23) kind = 23;
          OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 20, 21);
          break;
          case 29:
          if (OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCanMove_1WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjAddStatesWithInt_withInt_(self, 0, 2);
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    if (kind != (jint) 0x7fffffff) {
      self->jjmatchedKind_ = kind;
      self->jjmatchedPos_ = curPos;
      kind = (jint) 0x7fffffff;
    }
    ++curPos;
    if ((i = self->jjnewStateCnt_) == (startsAt = 33 - (self->jjnewStateCnt_ = startsAt))) return curPos;
    @try {
      self->curChar_ = [((id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream>) nil_chk(self->input_stream_)) readChar];
    }
    @catch (JavaIoIOException *e) {
      return curPos;
    }
  }
}

jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveStringLiteralDfa0_0(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self) {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveNfa_0WithInt_withInt_(self, 0, 0);
}

jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveNfa_0WithInt_withInt_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint startState, jint curPos) {
  jint startsAt = 0;
  self->jjnewStateCnt_ = 3;
  jint i = 1;
  *IOSIntArray_GetRef(nil_chk(self->jjstateSet_), 0) = startState;
  jint kind = (jint) 0x7fffffff;
  for (; ; ) {
    if (++self->jjround_ == (jint) 0x7fffffff) OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_ReInitRounds(self);
    if (self->curChar_ < 64) {
      jlong l = JreLShift64(1LL, self->curChar_);
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 0:
          if (((jlong) 0x3ff000000000000LL & l) == 0LL) break;
          if (kind > 28) kind = 28;
          OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjAddStatesWithInt_withInt_(self, 8, 9);
          break;
          case 1:
          if (self->curChar_ == 46) OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddWithInt_(self, 2);
          break;
          case 2:
          if (((jlong) 0x3ff000000000000LL & l) == 0LL) break;
          if (kind > 28) kind = 28;
          OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddWithInt_(self, 2);
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    else if (self->curChar_ < 128) {
      jlong l = JreLShift64(1LL, (self->curChar_ & 077));
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    else {
      jint hiByte = (jint) (JreRShift32(self->curChar_, 8));
      jint i1 = JreRShift32(hiByte, 6);
      jlong l1 = JreLShift64(1LL, (hiByte & 077));
      jint i2 = JreRShift32((self->curChar_ & (jint) 0xff), 6);
      jlong l2 = JreLShift64(1LL, (self->curChar_ & 077));
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    if (kind != (jint) 0x7fffffff) {
      self->jjmatchedKind_ = kind;
      self->jjmatchedPos_ = curPos;
      kind = (jint) 0x7fffffff;
    }
    ++curPos;
    if ((i = self->jjnewStateCnt_) == (startsAt = 3 - (self->jjnewStateCnt_ = startsAt))) return curPos;
    @try {
      self->curChar_ = [((id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream>) nil_chk(self->input_stream_)) readChar];
    }
    @catch (JavaIoIOException *e) {
      return curPos;
    }
  }
}

jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopStringLiteralDfa_1WithInt_withLong_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint pos, jlong active0) {
  switch (pos) {
    case 0:
    if ((active0 & (jlong) 0x20000000LL) != 0LL) {
      self->jjmatchedKind_ = 33;
      return 6;
    }
    return -1;
    default:
    return -1;
  }
}

jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStartNfa_1WithInt_withLong_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint pos, jlong active0) {
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveNfa_1WithInt_withInt_(self, OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopStringLiteralDfa_1WithInt_withLong_(self, pos, active0), pos + 1);
}

jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveStringLiteralDfa0_1(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self) {
  switch (self->curChar_) {
    case 84:
    return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveStringLiteralDfa1_1WithLong_(self, (jlong) 0x20000000LL);
    case 93:
    return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 30);
    case 125:
    return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopAtPosWithInt_withInt_(self, 0, 31);
    default:
    return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveNfa_1WithInt_withInt_(self, 0, 0);
  }
}

jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveStringLiteralDfa1_1WithLong_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jlong active0) {
  @try {
    self->curChar_ = [((id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream>) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStopStringLiteralDfa_1WithInt_withLong_(self, 0, active0);
    return 1;
  }
  switch (self->curChar_) {
    case 79:
    if ((active0 & (jlong) 0x20000000LL) != 0LL) return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStartNfaWithStates_1WithInt_withInt_withInt_(self, 1, 29, 6);
    break;
    default:
    break;
  }
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStartNfa_1WithInt_withLong_(self, 0, active0);
}

jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjStartNfaWithStates_1WithInt_withInt_withInt_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint pos, jint kind, jint state) {
  self->jjmatchedKind_ = kind;
  self->jjmatchedPos_ = pos;
  @try {
    self->curChar_ = [((id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream>) nil_chk(self->input_stream_)) readChar];
  }
  @catch (JavaIoIOException *e) {
    return pos + 1;
  }
  return OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveNfa_1WithInt_withInt_(self, state, pos + 1);
}

jint OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjMoveNfa_1WithInt_withInt_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint startState, jint curPos) {
  jint startsAt = 0;
  self->jjnewStateCnt_ = 7;
  jint i = 1;
  *IOSIntArray_GetRef(nil_chk(self->jjstateSet_), 0) = startState;
  jint kind = (jint) 0x7fffffff;
  for (; ; ) {
    if (++self->jjround_ == (jint) 0x7fffffff) OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_ReInitRounds(self);
    if (self->curChar_ < 64) {
      jlong l = JreLShift64(1LL, self->curChar_);
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 0:
          if (((jlong) 0xfffffffeffffffffLL & l) != 0LL) {
            if (kind > 33) kind = 33;
            OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddWithInt_(self, 6);
          }
          if (((jlong) 0x100002600LL & l) != 0LL) {
            if (kind > 7) kind = 7;
          }
          else if (self->curChar_ == 34) OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 2, 4);
          break;
          case 1:
          if (self->curChar_ == 34) OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(self, 2, 4);
          break;
          case 2:
          if (((jlong) 0xfffffffbffffffffLL & l) != 0LL) OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 10, 12);
          break;
          case 3:
          if (self->curChar_ == 34) OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddStatesWithInt_withInt_(self, 10, 12);
          break;
          case 5:
          if (self->curChar_ == 34 && kind > 32) kind = 32;
          break;
          case 6:
          if (((jlong) 0xfffffffeffffffffLL & l) == 0LL) break;
          if (kind > 33) kind = 33;
          OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddWithInt_(self, 6);
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    else if (self->curChar_ < 128) {
      jlong l = JreLShift64(1LL, (self->curChar_ & 077));
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 0:
          case 6:
          if (((jlong) 0xdfffffffdfffffffLL & l) == 0LL) break;
          if (kind > 33) kind = 33;
          OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddWithInt_(self, 6);
          break;
          case 2:
          OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjAddStatesWithInt_withInt_(self, 10, 12);
          break;
          case 4:
          if (self->curChar_ == 92) *IOSIntArray_GetRef(self->jjstateSet_, self->jjnewStateCnt_++) = 3;
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    else {
      jint hiByte = (jint) (JreRShift32(self->curChar_, 8));
      jint i1 = JreRShift32(hiByte, 6);
      jlong l1 = JreLShift64(1LL, (hiByte & 077));
      jint i2 = JreRShift32((self->curChar_ & (jint) 0xff), 6);
      jlong l2 = JreLShift64(1LL, (self->curChar_ & 077));
      do {
        switch (IOSIntArray_Get(self->jjstateSet_, --i)) {
          case 0:
          if (OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) {
            if (kind > 7) kind = 7;
          }
          if (OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCanMove_1WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) {
            if (kind > 33) kind = 33;
            OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddWithInt_(self, 6);
          }
          break;
          case 2:
          if (OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCanMove_1WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjAddStatesWithInt_withInt_(self, 10, 12);
          break;
          case 6:
          if (!OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCanMove_1WithInt_withInt_withInt_withLong_withLong_(hiByte, i1, i2, l1, l2)) break;
          if (kind > 33) kind = 33;
          OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddWithInt_(self, 6);
          break;
          default:
          break;
        }
      }
      while (i != startsAt);
    }
    if (kind != (jint) 0x7fffffff) {
      self->jjmatchedKind_ = kind;
      self->jjmatchedPos_ = curPos;
      kind = (jint) 0x7fffffff;
    }
    ++curPos;
    if ((i = self->jjnewStateCnt_) == (startsAt = 7 - (self->jjnewStateCnt_ = startsAt))) return curPos;
    @try {
      self->curChar_ = [((id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream>) nil_chk(self->input_stream_)) readChar];
    }
    @catch (JavaIoIOException *e) {
      return curPos;
    }
  }
}

jboolean OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCanMove_0WithInt_withInt_withInt_withLong_withLong_(jint hiByte, jint i1, jint i2, jlong l1, jlong l2) {
  OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_initialize();
  switch (hiByte) {
    case 48:
    return ((IOSLongArray_Get(nil_chk(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjbitVec0), i2) & l2) != 0LL);
    default:
    return false;
  }
}

jboolean OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCanMove_1WithInt_withInt_withInt_withLong_withLong_(jint hiByte, jint i1, jint i2, jlong l1, jlong l2) {
  OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_initialize();
  switch (hiByte) {
    case 0:
    return ((IOSLongArray_Get(nil_chk(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjbitVec3), i2) & l2) != 0LL);
    default:
    if ((IOSLongArray_Get(nil_chk(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjbitVec1), i1) & l1) != 0LL) return true;
    return false;
  }
}

jboolean OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCanMove_2WithInt_withInt_withInt_withLong_withLong_(jint hiByte, jint i1, jint i2, jlong l1, jlong l2) {
  OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_initialize();
  switch (hiByte) {
    case 0:
    return ((IOSLongArray_Get(nil_chk(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjbitVec3), i2) & l2) != 0LL);
    case 48:
    return ((IOSLongArray_Get(nil_chk(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjbitVec1), i2) & l2) != 0LL);
    default:
    if ((IOSLongArray_Get(nil_chk(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjbitVec4), i1) & l1) != 0LL) return true;
    return false;
  }
}

void OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_initWithOrgApacheLuceneQueryparserFlexibleStandardParserCharStream_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream> stream) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->jjrounds_, [IOSIntArray newArrayWithLength:33]);
  JreStrongAssignAndConsume(&self->jjstateSet_, [IOSIntArray newArrayWithLength:66]);
  self->curLexState_ = 2;
  self->defaultLexState_ = 2;
  JreStrongAssign(&self->input_stream_, stream);
}

OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *new_OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_initWithOrgApacheLuceneQueryparserFlexibleStandardParserCharStream_(id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream> stream) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager, initWithOrgApacheLuceneQueryparserFlexibleStandardParserCharStream_, stream)
}

OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *create_OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_initWithOrgApacheLuceneQueryparserFlexibleStandardParserCharStream_(id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream> stream) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager, initWithOrgApacheLuceneQueryparserFlexibleStandardParserCharStream_, stream)
}

void OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_initWithOrgApacheLuceneQueryparserFlexibleStandardParserCharStream_withInt_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream> stream, jint lexState) {
  OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_initWithOrgApacheLuceneQueryparserFlexibleStandardParserCharStream_(self, stream);
  [self SwitchToWithInt:lexState];
}

OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *new_OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_initWithOrgApacheLuceneQueryparserFlexibleStandardParserCharStream_withInt_(id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream> stream, jint lexState) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager, initWithOrgApacheLuceneQueryparserFlexibleStandardParserCharStream_withInt_, stream, lexState)
}

OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *create_OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_initWithOrgApacheLuceneQueryparserFlexibleStandardParserCharStream_withInt_(id<OrgApacheLuceneQueryparserFlexibleStandardParserCharStream> stream, jint lexState) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager, initWithOrgApacheLuceneQueryparserFlexibleStandardParserCharStream_withInt_, stream, lexState)
}

void OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_ReInitRounds(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self) {
  jint i;
  self->jjround_ = (jint) 0x80000001;
  for (i = 33; i-- > 0; ) *IOSIntArray_GetRef(nil_chk(self->jjrounds_), i) = -0x7fffffff - 1;
}

void OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddWithInt_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint state) {
  if (IOSIntArray_Get(nil_chk(self->jjrounds_), state) != self->jjround_) {
    *IOSIntArray_GetRef(nil_chk(self->jjstateSet_), self->jjnewStateCnt_++) = state;
    *IOSIntArray_GetRef(self->jjrounds_, state) = self->jjround_;
  }
}

void OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjAddStatesWithInt_withInt_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint start, jint end) {
  do {
    *IOSIntArray_GetRef(nil_chk(self->jjstateSet_), self->jjnewStateCnt_++) = IOSIntArray_Get(nil_chk(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjnextStates), start);
  }
  while (start++ != end);
}

void OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddTwoStatesWithInt_withInt_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint state1, jint state2) {
  OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddWithInt_(self, state1);
  OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddWithInt_(self, state2);
}

void OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddStatesWithInt_withInt_(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager *self, jint start, jint end) {
  do {
    OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjCheckNAddWithInt_(self, IOSIntArray_Get(nil_chk(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager_jjnextStates), start));
  }
  while (start++ != end);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleStandardParserStandardSyntaxParserTokenManager)
