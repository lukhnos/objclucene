//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/parser/CharStream.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "org/apache/lucene/queryparser/flexible/standard/parser/CharStream.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queryparser/flexible/standard/parser/CharStream must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneQueryparserFlexibleStandardParserCharStream : NSObject

@end

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneQueryparserFlexibleStandardParserCharStream__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneQueryparserFlexibleStandardParserCharStream__Annotations$1(void);

@implementation OrgApacheLuceneQueryparserFlexibleStandardParserCharStream

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "C", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, 1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, 2, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 3, 4, -1, -1, -1, -1 },
    { NULL, "C", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[C", 0x401, 5, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(readChar);
  methods[1].selector = @selector(getColumn);
  methods[2].selector = @selector(getLine);
  methods[3].selector = @selector(getEndColumn);
  methods[4].selector = @selector(getEndLine);
  methods[5].selector = @selector(getBeginColumn);
  methods[6].selector = @selector(getBeginLine);
  methods[7].selector = @selector(backupWithInt:);
  methods[8].selector = @selector(BeginToken);
  methods[9].selector = @selector(GetImage);
  methods[10].selector = @selector(GetSuffixWithInt:);
  methods[11].selector = @selector(Done);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaIoIOException;", (void *)&OrgApacheLuceneQueryparserFlexibleStandardParserCharStream__Annotations$0, (void *)&OrgApacheLuceneQueryparserFlexibleStandardParserCharStream__Annotations$1, "backup", "I", "GetSuffix" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleStandardParserCharStream = { "CharStream", "org.apache.lucene.queryparser.flexible.standard.parser", ptrTable, methods, NULL, 7, 0x609, 12, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueryparserFlexibleStandardParserCharStream;
}

@end

IOSObjectArray *OrgApacheLuceneQueryparserFlexibleStandardParserCharStream__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneQueryparserFlexibleStandardParserCharStream__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleStandardParserCharStream)
