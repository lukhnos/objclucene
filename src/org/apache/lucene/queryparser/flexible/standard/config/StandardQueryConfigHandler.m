//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/config/StandardQueryConfigHandler.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/util/HashMap.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/Locale.h"
#include "org/apache/lucene/queryparser/flexible/core/config/ConfigurationKey.h"
#include "org/apache/lucene/queryparser/flexible/core/config/QueryConfigHandler.h"
#include "org/apache/lucene/queryparser/flexible/standard/config/FieldBoostMapFCListener.h"
#include "org/apache/lucene/queryparser/flexible/standard/config/FieldDateResolutionFCListener.h"
#include "org/apache/lucene/queryparser/flexible/standard/config/FuzzyConfig.h"
#include "org/apache/lucene/queryparser/flexible/standard/config/NumericFieldConfigListener.h"
#include "org/apache/lucene/queryparser/flexible/standard/config/StandardQueryConfigHandler.h"
#include "org/apache/lucene/search/MultiTermQuery.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queryparser/flexible/standard/config/StandardQueryConfigHandler must not be compiled with ARC (-fobjc-arc)"
#endif

__attribute__((unused)) static void OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_initWithNSString_withInt_(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *self, NSString *__name, jint __ordinal);

@implementation OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys;LOrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler = { "StandardQueryConfigHandler", "org.apache.lucene.queryparser.flexible.standard.config", ptrTable, methods, NULL, 7, 0x1, 1, 0, -1, 0, -1, -1, -1 };
  return &_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler;
}

@end

void OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_init(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler *self) {
  OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler_init(self);
  [self addFieldConfigListenerWithOrgApacheLuceneQueryparserFlexibleCoreConfigFieldConfigListener:create_OrgApacheLuceneQueryparserFlexibleStandardConfigFieldBoostMapFCListener_initWithOrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler_(self)];
  [self addFieldConfigListenerWithOrgApacheLuceneQueryparserFlexibleCoreConfigFieldConfigListener:create_OrgApacheLuceneQueryparserFlexibleStandardConfigFieldDateResolutionFCListener_initWithOrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler_(self)];
  [self addFieldConfigListenerWithOrgApacheLuceneQueryparserFlexibleCoreConfigFieldConfigListener:create_OrgApacheLuceneQueryparserFlexibleStandardConfigNumericFieldConfigListener_initWithOrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler_(self)];
  [self setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, ALLOW_LEADING_WILDCARD) withId:JavaLangBoolean_valueOfWithBoolean_(false)];
  [self setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, ANALYZER) withId:nil];
  [self setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, DEFAULT_OPERATOR) withId:JreLoadEnum(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator, OR)];
  [self setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, PHRASE_SLOP) withId:JavaLangInteger_valueOfWithInt_(0)];
  [self setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, LOWERCASE_EXPANDED_TERMS) withId:JavaLangBoolean_valueOfWithBoolean_(true)];
  [self setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, ENABLE_POSITION_INCREMENTS) withId:JavaLangBoolean_valueOfWithBoolean_(false)];
  [self setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, FIELD_BOOST_MAP) withId:create_JavaUtilLinkedHashMap_init()];
  [self setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, FUZZY_CONFIG) withId:create_OrgApacheLuceneQueryparserFlexibleStandardConfigFuzzyConfig_init()];
  [self setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, LOCALE) withId:JavaUtilLocale_getDefault()];
  [self setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, MULTI_TERM_REWRITE_METHOD) withId:JreLoadStatic(OrgApacheLuceneSearchMultiTermQuery, CONSTANT_SCORE_REWRITE)];
  [self setWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, FIELD_DATE_RESOLUTION_MAP) withId:create_JavaUtilHashMap_init()];
}

OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler *new_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler, init)
}

OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler *create_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys)

OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ENABLE_POSITION_INCREMENTS;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_LOWERCASE_EXPANDED_TERMS;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ALLOW_LEADING_WILDCARD;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ANALYZER;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_DEFAULT_OPERATOR;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_PHRASE_SLOP;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_LOCALE;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_TIMEZONE;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_MULTI_TERM_REWRITE_METHOD;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_MULTI_FIELDS;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FIELD_BOOST_MAP;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FIELD_DATE_RESOLUTION_MAP;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FUZZY_CONFIG;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_DATE_RESOLUTION;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_BOOST;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_NUMERIC_CONFIG;
OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_NUMERIC_CONFIG_MAP;

@implementation OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)ENABLE_POSITION_INCREMENTS {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ENABLE_POSITION_INCREMENTS;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)LOWERCASE_EXPANDED_TERMS {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_LOWERCASE_EXPANDED_TERMS;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)ALLOW_LEADING_WILDCARD {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ALLOW_LEADING_WILDCARD;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)ANALYZER {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ANALYZER;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)DEFAULT_OPERATOR {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_DEFAULT_OPERATOR;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)PHRASE_SLOP {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_PHRASE_SLOP;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)LOCALE {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_LOCALE;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)TIMEZONE {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_TIMEZONE;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)MULTI_TERM_REWRITE_METHOD {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_MULTI_TERM_REWRITE_METHOD;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)MULTI_FIELDS {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_MULTI_FIELDS;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)FIELD_BOOST_MAP {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FIELD_BOOST_MAP;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)FIELD_DATE_RESOLUTION_MAP {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FIELD_DATE_RESOLUTION_MAP;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)FUZZY_CONFIG {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FUZZY_CONFIG;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)DATE_RESOLUTION {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_DATE_RESOLUTION;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)BOOST {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_BOOST;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)NUMERIC_CONFIG {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_NUMERIC_CONFIG;
}

+ (OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey *)NUMERIC_CONFIG_MAP {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_NUMERIC_CONFIG_MAP;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ENABLE_POSITION_INCREMENTS", "LOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey;", .constantValue.asLong = 0, 0x19, -1, 0, 1, -1 },
    { "LOWERCASE_EXPANDED_TERMS", "LOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey;", .constantValue.asLong = 0, 0x19, -1, 2, 1, -1 },
    { "ALLOW_LEADING_WILDCARD", "LOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey;", .constantValue.asLong = 0, 0x19, -1, 3, 1, -1 },
    { "ANALYZER", "LOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey;", .constantValue.asLong = 0, 0x19, -1, 4, 5, -1 },
    { "DEFAULT_OPERATOR", "LOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey;", .constantValue.asLong = 0, 0x19, -1, 6, 7, -1 },
    { "PHRASE_SLOP", "LOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey;", .constantValue.asLong = 0, 0x19, -1, 8, 9, -1 },
    { "LOCALE", "LOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey;", .constantValue.asLong = 0, 0x19, -1, 10, 11, -1 },
    { "TIMEZONE", "LOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey;", .constantValue.asLong = 0, 0x19, -1, 12, 13, -1 },
    { "MULTI_TERM_REWRITE_METHOD", "LOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey;", .constantValue.asLong = 0, 0x19, -1, 14, 15, -1 },
    { "MULTI_FIELDS", "LOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey;", .constantValue.asLong = 0, 0x19, -1, 16, 17, -1 },
    { "FIELD_BOOST_MAP", "LOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey;", .constantValue.asLong = 0, 0x19, -1, 18, 19, -1 },
    { "FIELD_DATE_RESOLUTION_MAP", "LOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey;", .constantValue.asLong = 0, 0x19, -1, 20, 21, -1 },
    { "FUZZY_CONFIG", "LOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey;", .constantValue.asLong = 0, 0x19, -1, 22, 23, -1 },
    { "DATE_RESOLUTION", "LOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey;", .constantValue.asLong = 0, 0x19, -1, 24, 25, -1 },
    { "BOOST", "LOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey;", .constantValue.asLong = 0, 0x19, -1, 26, 27, -1 },
    { "NUMERIC_CONFIG", "LOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey;", .constantValue.asLong = 0, 0x19, -1, 28, 29, -1 },
    { "NUMERIC_CONFIG_MAP", "LOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey;", .constantValue.asLong = 0, 0x19, -1, 30, 31, -1 },
  };
  static const void *ptrTable[] = { &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ENABLE_POSITION_INCREMENTS, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Ljava/lang/Boolean;>;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_LOWERCASE_EXPANDED_TERMS, &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ALLOW_LEADING_WILDCARD, &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ANALYZER, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Lorg/apache/lucene/analysis/Analyzer;>;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_DEFAULT_OPERATOR, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Lorg/apache/lucene/queryparser/flexible/standard/config/StandardQueryConfigHandler$Operator;>;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_PHRASE_SLOP, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Ljava/lang/Integer;>;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_LOCALE, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Ljava/util/Locale;>;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_TIMEZONE, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Ljava/util/TimeZone;>;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_MULTI_TERM_REWRITE_METHOD, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Lorg/apache/lucene/search/MultiTermQuery$RewriteMethod;>;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_MULTI_FIELDS, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<[Ljava/lang/CharSequence;>;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FIELD_BOOST_MAP, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Ljava/util/Map<Ljava/lang/String;Ljava/lang/Float;>;>;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FIELD_DATE_RESOLUTION_MAP, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Ljava/util/Map<Ljava/lang/CharSequence;Lorg/apache/lucene/document/DateTools$Resolution;>;>;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FUZZY_CONFIG, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Lorg/apache/lucene/queryparser/flexible/standard/config/FuzzyConfig;>;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_DATE_RESOLUTION, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Lorg/apache/lucene/document/DateTools$Resolution;>;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_BOOST, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Ljava/lang/Float;>;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_NUMERIC_CONFIG, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Lorg/apache/lucene/queryparser/flexible/standard/config/NumericConfig;>;", &OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_NUMERIC_CONFIG_MAP, "Lorg/apache/lucene/queryparser/flexible/core/config/ConfigurationKey<Ljava/util/Map<Ljava/lang/String;Lorg/apache/lucene/queryparser/flexible/standard/config/NumericConfig;>;>;", "LOrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys = { "ConfigurationKeys", "org.apache.lucene.queryparser.flexible.standard.config", ptrTable, methods, fields, 7, 0x19, 1, 17, 32, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys class]) {
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ENABLE_POSITION_INCREMENTS, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_LOWERCASE_EXPANDED_TERMS, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ALLOW_LEADING_WILDCARD, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_ANALYZER, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_DEFAULT_OPERATOR, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_PHRASE_SLOP, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_LOCALE, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_TIMEZONE, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_MULTI_TERM_REWRITE_METHOD, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_MULTI_FIELDS, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FIELD_BOOST_MAP, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FIELD_DATE_RESOLUTION_MAP, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_FUZZY_CONFIG, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_DATE_RESOLUTION, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_BOOST, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_NUMERIC_CONFIG, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    JreStrongAssign(&OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_NUMERIC_CONFIG_MAP, OrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey_newInstance());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys)
  }
}

@end

void OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_init(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys *self) {
  NSObject_init(self);
}

OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys *new_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, init)
}

OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys *create_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator)

OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_values_[2];

@implementation OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator

+ (OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *)AND {
  return JreEnum(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator, AND);
}

+ (OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *)OR {
  return JreEnum(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator, OR);
}

+ (IOSObjectArray *)values {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_values();
}

+ (OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *)valueOfWithNSString:(NSString *)name {
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_valueOfWithNSString_(name);
}

- (OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_Enum)toNSEnum {
  return (OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "AND", "LOrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "OR", "LOrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator, AND), &JreEnum(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator, OR), "LOrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler;", "Ljava/lang/Enum<Lorg/apache/lucene/queryparser/flexible/standard/config/StandardQueryConfigHandler$Operator;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator = { "Operator", "org.apache.lucene.queryparser.flexible.standard.config", ptrTable, methods, fields, 7, 0x4019, 2, 2, 4, -1, -1, 5, -1 };
  return &_OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 2 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 2; i++) {
      ((void)(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_initWithNSString_withInt_(e, JreEnumConstantName(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator)
  }
}

@end

void OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_initWithNSString_withInt_(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_values() {
  OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_initialize();
  return [IOSObjectArray arrayWithObjects:OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_values_ count:2 type:OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_class_()];
}

OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_valueOfWithNSString_(NSString *name) {
  OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_initialize();
  for (int i = 0; i < 2; i++) {
    OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *e = OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_fromOrdinal(NSUInteger ordinal) {
  OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_initialize();
  if (ordinal >= 2) {
    return nil;
  }
  return OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator)
