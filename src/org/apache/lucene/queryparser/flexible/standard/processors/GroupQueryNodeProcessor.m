//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/GroupQueryNodeProcessor.java
//

#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/apache/lucene/queryparser/flexible/core/config/ConfigurationKey.h"
#include "org/apache/lucene/queryparser/flexible/core/config/QueryConfigHandler.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/AndQueryNode.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/BooleanQueryNode.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/GroupQueryNode.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/ModifierQueryNode.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/OrQueryNode.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/QueryNode.h"
#include "org/apache/lucene/queryparser/flexible/standard/config/StandardQueryConfigHandler.h"
#include "org/apache/lucene/queryparser/flexible/standard/nodes/BooleanModifierNode.h"
#include "org/apache/lucene/queryparser/flexible/standard/processors/GroupQueryNodeProcessor.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queryparser/flexible/standard/processors/GroupQueryNodeProcessor must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor () {
 @public
  JavaUtilArrayList *queryNodeList_;
  jboolean latestNodeVerified_;
  OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *queryConfig_;
  JavaLangBoolean *usingAnd_;
}

/*!
 */
- (id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)applyModifierWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:(id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)node
                                                                         withOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:(id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)parent;

- (void)readTreeWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:(id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)node;

- (void)processNodeWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:(id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)node;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor, queryNodeList_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor, queryConfig_, OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor, usingAnd_, JavaLangBoolean *)

__attribute__((unused)) static id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode> OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor_applyModifierWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_(OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor *self, id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode> node, id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode> parent);

__attribute__((unused)) static void OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor_readTreeWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_(OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor *self, id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode> node);

__attribute__((unused)) static void OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor_processNodeWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_(OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor *self, id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode> node);

@implementation OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)processWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:(id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)queryTree {
  OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator *defaultOperator = JreRetainedLocalValue([((OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *) nil_chk([self getQueryConfigHandler])) getWithOrgApacheLuceneQueryparserFlexibleCoreConfigConfigurationKey:JreLoadStatic(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_ConfigurationKeys, DEFAULT_OPERATOR)]);
  if (defaultOperator == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"DEFAULT_OPERATOR should be set on the QueryConfigHandler");
  }
  JreStrongAssign(&self->usingAnd_, JavaLangBoolean_valueOfWithBoolean_(JreLoadEnum(OrgApacheLuceneQueryparserFlexibleStandardConfigStandardQueryConfigHandler_Operator, AND) == defaultOperator));
  if ([queryTree isKindOfClass:[OrgApacheLuceneQueryparserFlexibleCoreNodesGroupQueryNode class]]) {
    queryTree = [((OrgApacheLuceneQueryparserFlexibleCoreNodesGroupQueryNode *) nil_chk(((OrgApacheLuceneQueryparserFlexibleCoreNodesGroupQueryNode *) queryTree))) getChild];
  }
  JreStrongAssignAndConsume(&self->queryNodeList_, new_JavaUtilArrayList_init());
  self->latestNodeVerified_ = false;
  OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor_readTreeWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_(self, queryTree);
  id<JavaUtilList> actualQueryNodeList = JreRetainedLocalValue(self->queryNodeList_);
  for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(actualQueryNodeList)) size]; i++) {
    id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode> node = JreRetainedLocalValue([actualQueryNodeList getWithInt:i]);
    if ([node isKindOfClass:[OrgApacheLuceneQueryparserFlexibleCoreNodesGroupQueryNode class]]) {
      [actualQueryNodeList setWithInt:i withId:[self processWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:node]];
    }
  }
  JreStrongAssign(&self->usingAnd_, JavaLangBoolean_valueOfWithBoolean_(false));
  if ([queryTree isKindOfClass:[OrgApacheLuceneQueryparserFlexibleCoreNodesBooleanQueryNode class]]) {
    [((id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>) nil_chk(queryTree)) setWithJavaUtilList:actualQueryNodeList];
    return queryTree;
  }
  else {
    return create_OrgApacheLuceneQueryparserFlexibleCoreNodesBooleanQueryNode_initWithJavaUtilList_(actualQueryNodeList);
  }
}

- (id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)applyModifierWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:(id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)node
                                                                         withOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:(id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)parent {
  return OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor_applyModifierWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_(self, node, parent);
}

- (void)readTreeWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:(id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)node {
  OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor_readTreeWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_(self, node);
}

- (void)processNodeWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:(id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)node {
  OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor_processNodeWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_(self, node);
}

- (OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *)getQueryConfigHandler {
  return self->queryConfig_;
}

- (void)setQueryConfigHandlerWithOrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler:(OrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler *)queryConfigHandler {
  JreStrongAssign(&self->queryConfig_, queryConfigHandler);
}

- (void)dealloc {
  RELEASE_(queryNodeList_);
  RELEASE_(queryConfig_);
  RELEASE_(usingAnd_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode;", 0x2, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 5, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 6, 1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(processWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:);
  methods[2].selector = @selector(applyModifierWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:withOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:);
  methods[3].selector = @selector(readTreeWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:);
  methods[4].selector = @selector(processNodeWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:);
  methods[5].selector = @selector(getQueryConfigHandler);
  methods[6].selector = @selector(setQueryConfigHandlerWithOrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "queryNodeList_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x2, -1, -1, 9, -1 },
    { "latestNodeVerified_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "queryConfig_", "LOrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "usingAnd_", "LJavaLangBoolean;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "process", "LOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode;", "LOrgApacheLuceneQueryparserFlexibleCoreQueryNodeException;", "applyModifier", "LOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode;LOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode;", "readTree", "processNode", "setQueryConfigHandler", "LOrgApacheLuceneQueryparserFlexibleCoreConfigQueryConfigHandler;", "Ljava/util/ArrayList<Lorg/apache/lucene/queryparser/flexible/core/nodes/QueryNode;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor = { "GroupQueryNodeProcessor", "org.apache.lucene.queryparser.flexible.standard.processors", ptrTable, methods, fields, 7, 0x1, 7, 4, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor;
}

@end

void OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor_init(OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor *self) {
  NSObject_init(self);
  JreStrongAssign(&self->usingAnd_, JavaLangBoolean_valueOfWithBoolean_(false));
}

OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor *new_OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor, init)
}

OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor *create_OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor, init)
}

id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode> OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor_applyModifierWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_(OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor *self, id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode> node, id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode> parent) {
  if ([((JavaLangBoolean *) nil_chk(self->usingAnd_)) booleanValue]) {
    if ([parent isKindOfClass:[OrgApacheLuceneQueryparserFlexibleCoreNodesOrQueryNode class]]) {
      if ([node isKindOfClass:[OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode class]]) {
        OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode *modNode = (OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode *) node;
        if ([((OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode *) nil_chk(modNode)) getModifier] == JreLoadEnum(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier, MOD_REQ)) {
          return [modNode getChild];
        }
      }
    }
    else {
      if ([node isKindOfClass:[OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode class]]) {
        OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode *modNode = (OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode *) node;
        if ([((OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode *) nil_chk(modNode)) getModifier] == JreLoadEnum(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier, MOD_NONE)) {
          return create_OrgApacheLuceneQueryparserFlexibleStandardNodesBooleanModifierNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withOrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_([modNode getChild], JreLoadEnum(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier, MOD_REQ));
        }
      }
      else {
        return create_OrgApacheLuceneQueryparserFlexibleStandardNodesBooleanModifierNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withOrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_(node, JreLoadEnum(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier, MOD_REQ));
      }
    }
  }
  else {
    if ([[((id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>) nil_chk(node)) getParent] isKindOfClass:[OrgApacheLuceneQueryparserFlexibleCoreNodesAndQueryNode class]]) {
      if ([node isKindOfClass:[OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode class]]) {
        OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode *modNode = (OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode *) node;
        if ([modNode getModifier] == JreLoadEnum(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier, MOD_NONE)) {
          return create_OrgApacheLuceneQueryparserFlexibleStandardNodesBooleanModifierNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withOrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_([modNode getChild], JreLoadEnum(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier, MOD_REQ));
        }
      }
      else {
        return create_OrgApacheLuceneQueryparserFlexibleStandardNodesBooleanModifierNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withOrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_(node, JreLoadEnum(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier, MOD_REQ));
      }
    }
  }
  return node;
}

void OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor_readTreeWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_(OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor *self, id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode> node) {
  if ([node isKindOfClass:[OrgApacheLuceneQueryparserFlexibleCoreNodesBooleanQueryNode class]]) {
    id<JavaUtilList> children = JreRetainedLocalValue([((id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>) nil_chk(node)) getChildren]);
    if (children != nil && [children size] > 0) {
      for (jint i = 0; i < [children size] - 1; i++) {
        OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor_readTreeWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_(self, [children getWithInt:i]);
      }
      OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor_processNodeWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_(self, node);
      OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor_readTreeWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_(self, [children getWithInt:[children size] - 1]);
    }
    else {
      OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor_processNodeWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_(self, node);
    }
  }
  else {
    OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor_processNodeWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_(self, node);
  }
}

void OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor_processNodeWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_(OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor *self, id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode> node) {
  if ([node isKindOfClass:[OrgApacheLuceneQueryparserFlexibleCoreNodesAndQueryNode class]] || [node isKindOfClass:[OrgApacheLuceneQueryparserFlexibleCoreNodesOrQueryNode class]]) {
    if (!self->latestNodeVerified_ && ![((JavaUtilArrayList *) nil_chk(self->queryNodeList_)) isEmpty]) {
      [((JavaUtilArrayList *) nil_chk(self->queryNodeList_)) addWithId:OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor_applyModifierWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_(self, [self->queryNodeList_ removeWithInt:[self->queryNodeList_ size] - 1], node)];
      self->latestNodeVerified_ = true;
    }
  }
  else if (!([node isKindOfClass:[OrgApacheLuceneQueryparserFlexibleCoreNodesBooleanQueryNode class]])) {
    [((JavaUtilArrayList *) nil_chk(self->queryNodeList_)) addWithId:OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor_applyModifierWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_(self, node, [((id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>) nil_chk(node)) getParent])];
    self->latestNodeVerified_ = false;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleStandardProcessorsGroupQueryNodeProcessor)
