//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/core/config/FieldConfig.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/apache/lucene/queryparser/flexible/core/config/AbstractQueryConfig.h"
#include "org/apache/lucene/queryparser/flexible/core/config/FieldConfig.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queryparser/flexible/core/config/FieldConfig must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneQueryparserFlexibleCoreConfigFieldConfig () {
 @public
  NSString *fieldName_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryparserFlexibleCoreConfigFieldConfig, fieldName_, NSString *)

@implementation OrgApacheLuceneQueryparserFlexibleCoreConfigFieldConfig

- (instancetype)initWithNSString:(NSString *)fieldName {
  OrgApacheLuceneQueryparserFlexibleCoreConfigFieldConfig_initWithNSString_(self, fieldName);
  return self;
}

- (NSString *)getField {
  return self->fieldName_;
}

- (NSString *)description {
  return JreStrcat("$$$$$", @"<fieldconfig name=\"", self->fieldName_, @"\" configurations=\"", [super description], @"\"/>");
}

- (void)dealloc {
  RELEASE_(fieldName_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(getField);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "fieldName_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "toString" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleCoreConfigFieldConfig = { "FieldConfig", "org.apache.lucene.queryparser.flexible.core.config", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueryparserFlexibleCoreConfigFieldConfig;
}

@end

void OrgApacheLuceneQueryparserFlexibleCoreConfigFieldConfig_initWithNSString_(OrgApacheLuceneQueryparserFlexibleCoreConfigFieldConfig *self, NSString *fieldName) {
  OrgApacheLuceneQueryparserFlexibleCoreConfigAbstractQueryConfig_init(self);
  if (fieldName == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"field name should not be null!");
  }
  JreStrongAssign(&self->fieldName_, fieldName);
}

OrgApacheLuceneQueryparserFlexibleCoreConfigFieldConfig *new_OrgApacheLuceneQueryparserFlexibleCoreConfigFieldConfig_initWithNSString_(NSString *fieldName) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserFlexibleCoreConfigFieldConfig, initWithNSString_, fieldName)
}

OrgApacheLuceneQueryparserFlexibleCoreConfigFieldConfig *create_OrgApacheLuceneQueryparserFlexibleCoreConfigFieldConfig_initWithNSString_(NSString *fieldName) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserFlexibleCoreConfigFieldConfig, initWithNSString_, fieldName)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleCoreConfigFieldConfig)
