//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/core/nodes/BoostQueryNode.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Float.h"
#include "java/util/List.h"
#include "org/apache/lucene/queryparser/flexible/core/QueryNodeError.h"
#include "org/apache/lucene/queryparser/flexible/core/messages/QueryParserMessages.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/BoostQueryNode.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/QueryNode.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/QueryNodeImpl.h"
#include "org/apache/lucene/queryparser/flexible/core/parser/EscapeQuerySyntax.h"
#include "org/apache/lucene/queryparser/flexible/messages/MessageImpl.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queryparser/flexible/core/nodes/BoostQueryNode must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode () {
 @public
  jfloat value_;
}

/*!
 @brief Returns the boost value parsed to a string.
 @return the parsed value
 */
- (id<JavaLangCharSequence>)getValueString;

@end

__attribute__((unused)) static id<JavaLangCharSequence> OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode_getValueString(OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode *self);

@implementation OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode

- (instancetype)initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:(id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)query
                                                                   withFloat:(jfloat)value {
  OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withFloat_(self, query, value);
  return self;
}

- (id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)getChild {
  id<JavaUtilList> children = JreRetainedLocalValue([self getChildren]);
  if (children == nil || [children size] == 0) {
    return nil;
  }
  return [children getWithInt:0];
}

- (jfloat)getValue {
  return self->value_;
}

- (id<JavaLangCharSequence>)getValueString {
  return OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode_getValueString(self);
}

- (NSString *)description {
  return JreStrcat("$@$$$", @"<boost value='", OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode_getValueString(self), @"'>\n", [((id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>) nil_chk([self getChild])) description], @"\n</boost>");
}

- (id<JavaLangCharSequence>)toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:(id<OrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax>)escapeSyntaxParser {
  if ([self getChild] == nil) return @"";
  return JreStrcat("@C@", [((id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>) nil_chk([self getChild])) toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:escapeSyntaxParser], '^', OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode_getValueString(self));
}

- (id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)cloneTree {
  OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode *clone = (OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode *) cast_chk([super cloneTree], [OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode class]);
  ((OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode *) nil_chk(clone))->value_ = self->value_;
  return clone;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangCharSequence;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangCharSequence;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode;", 0x1, -1, -1, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:withFloat:);
  methods[1].selector = @selector(getChild);
  methods[2].selector = @selector(getValue);
  methods[3].selector = @selector(getValueString);
  methods[4].selector = @selector(description);
  methods[5].selector = @selector(toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:);
  methods[6].selector = @selector(cloneTree);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode;F", "toString", "toQueryString", "LOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax;", "LJavaLangCloneNotSupportedException;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode = { "BoostQueryNode", "org.apache.lucene.queryparser.flexible.core.nodes", ptrTable, methods, fields, 7, 0x1, 7, 1, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode;
}

@end

void OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withFloat_(OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode *self, id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode> query, jfloat value) {
  OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl_init(self);
  self->value_ = 0;
  if (query == nil) {
    @throw create_OrgApacheLuceneQueryparserFlexibleCoreQueryNodeError_initWithOrgApacheLuceneQueryparserFlexibleMessagesMessage_(create_OrgApacheLuceneQueryparserFlexibleMessagesMessageImpl_initWithNSString_withNSObjectArray_(JreLoadStatic(OrgApacheLuceneQueryparserFlexibleCoreMessagesQueryParserMessages, NODE_ACTION_NOT_SUPPORTED), [IOSObjectArray arrayWithObjects:(id[]){ @"query", @"null" } count:2 type:NSObject_class_()]));
  }
  self->value_ = value;
  [self setLeafWithBoolean:false];
  [self allocate];
  [self addWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:query];
}

OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode *new_OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withFloat_(id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode> query, jfloat value) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode, initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withFloat_, query, value)
}

OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode *create_OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withFloat_(id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode> query, jfloat value) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode, initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withFloat_, query, value)
}

id<JavaLangCharSequence> OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode_getValueString(OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode *self) {
  JavaLangFloat *f = JavaLangFloat_valueOfWithFloat_(self->value_);
  if ([f floatValue] == [f longLongValue]) return JreStrcat("J", [f longLongValue]);
  else return JreStrcat("@", f);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleCoreNodesBoostQueryNode)
