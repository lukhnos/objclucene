//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/core/nodes/SlopQueryNode.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Float.h"
#include "java/util/List.h"
#include "org/apache/lucene/queryparser/flexible/core/QueryNodeError.h"
#include "org/apache/lucene/queryparser/flexible/core/messages/QueryParserMessages.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/FieldableNode.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/QueryNode.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/QueryNodeImpl.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/SlopQueryNode.h"
#include "org/apache/lucene/queryparser/flexible/core/parser/EscapeQuerySyntax.h"
#include "org/apache/lucene/queryparser/flexible/messages/MessageImpl.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queryparser/flexible/core/nodes/SlopQueryNode must not be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode () {
 @public
  jint value_;
}

- (id<JavaLangCharSequence>)getValueString;

@end

__attribute__((unused)) static id<JavaLangCharSequence> OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode_getValueString(OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode *self);

@implementation OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode

- (instancetype)initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:(id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)query
                                                                     withInt:(jint)value {
  OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withInt_(self, query, value);
  return self;
}

- (id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)getChild {
  return [((id<JavaUtilList>) nil_chk([self getChildren])) getWithInt:0];
}

- (jint)getValue {
  return self->value_;
}

- (id<JavaLangCharSequence>)getValueString {
  return OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode_getValueString(self);
}

- (NSString *)description {
  return JreStrcat("$@$$$", @"<slop value='", OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode_getValueString(self), @"'>\n", [((id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>) nil_chk([self getChild])) description], @"\n</slop>");
}

- (id<JavaLangCharSequence>)toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:(id<OrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax>)escapeSyntaxParser {
  if ([self getChild] == nil) return @"";
  return JreStrcat("@C@", [((id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>) nil_chk([self getChild])) toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:escapeSyntaxParser], '~', OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode_getValueString(self));
}

- (id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)cloneTree {
  OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode *clone = (OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode *) cast_chk([super cloneTree], [OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode class]);
  ((OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode *) nil_chk(clone))->value_ = self->value_;
  return clone;
}

- (id<JavaLangCharSequence>)getField {
  id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode> child = JreRetainedLocalValue([self getChild]);
  if ([OrgApacheLuceneQueryparserFlexibleCoreNodesFieldableNode_class_() isInstance:child]) {
    return [((id<OrgApacheLuceneQueryparserFlexibleCoreNodesFieldableNode>) nil_chk(((id<OrgApacheLuceneQueryparserFlexibleCoreNodesFieldableNode>) cast_check(child, OrgApacheLuceneQueryparserFlexibleCoreNodesFieldableNode_class_())))) getField];
  }
  return nil;
}

- (void)setFieldWithJavaLangCharSequence:(id<JavaLangCharSequence>)fieldName {
  id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode> child = JreRetainedLocalValue([self getChild]);
  if ([OrgApacheLuceneQueryparserFlexibleCoreNodesFieldableNode_class_() isInstance:child]) {
    [((id<OrgApacheLuceneQueryparserFlexibleCoreNodesFieldableNode>) nil_chk(((id<OrgApacheLuceneQueryparserFlexibleCoreNodesFieldableNode>) cast_check(child, OrgApacheLuceneQueryparserFlexibleCoreNodesFieldableNode_class_())))) setFieldWithJavaLangCharSequence:fieldName];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangCharSequence;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangCharSequence;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode;", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "LJavaLangCharSequence;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:withInt:);
  methods[1].selector = @selector(getChild);
  methods[2].selector = @selector(getValue);
  methods[3].selector = @selector(getValueString);
  methods[4].selector = @selector(description);
  methods[5].selector = @selector(toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:);
  methods[6].selector = @selector(cloneTree);
  methods[7].selector = @selector(getField);
  methods[8].selector = @selector(setFieldWithJavaLangCharSequence:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode;I", "toString", "toQueryString", "LOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax;", "LJavaLangCloneNotSupportedException;", "setField", "LJavaLangCharSequence;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode = { "SlopQueryNode", "org.apache.lucene.queryparser.flexible.core.nodes", ptrTable, methods, fields, 7, 0x1, 9, 1, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode;
}

@end

void OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withInt_(OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode *self, id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode> query, jint value) {
  OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl_init(self);
  self->value_ = 0;
  if (query == nil) {
    @throw create_OrgApacheLuceneQueryparserFlexibleCoreQueryNodeError_initWithOrgApacheLuceneQueryparserFlexibleMessagesMessage_(create_OrgApacheLuceneQueryparserFlexibleMessagesMessageImpl_initWithNSString_withNSObjectArray_(JreLoadStatic(OrgApacheLuceneQueryparserFlexibleCoreMessagesQueryParserMessages, NODE_ACTION_NOT_SUPPORTED), [IOSObjectArray arrayWithObjects:(id[]){ @"query", @"null" } count:2 type:NSObject_class_()]));
  }
  self->value_ = value;
  [self setLeafWithBoolean:false];
  [self allocate];
  [self addWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:query];
}

OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode *new_OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withInt_(id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode> query, jint value) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode, initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withInt_, query, value)
}

OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode *create_OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withInt_(id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode> query, jint value) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode, initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withInt_, query, value)
}

id<JavaLangCharSequence> OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode_getValueString(OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode *self) {
  JavaLangFloat *f = JavaLangFloat_valueOfWithFloat_(self->value_);
  if ([f floatValue] == [f longLongValue]) return JreStrcat("J", [f longLongValue]);
  else return JreStrcat("@", f);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleCoreNodesSlopQueryNode)
