//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/core/nodes/ModifierQueryNode.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/apache/lucene/queryparser/flexible/core/QueryNodeError.h"
#include "org/apache/lucene/queryparser/flexible/core/messages/QueryParserMessages.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/BooleanQueryNode.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/ModifierQueryNode.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/QueryNode.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/QueryNodeImpl.h"
#include "org/apache/lucene/queryparser/flexible/core/parser/EscapeQuerySyntax.h"
#include "org/apache/lucene/queryparser/flexible/messages/MessageImpl.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queryparser/flexible/core/nodes/ModifierQueryNode must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode () {
 @public
  OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier *modifier_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode, modifier_, OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier *)

__attribute__((unused)) static void OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_initWithNSString_withInt_(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier *self, NSString *__name, jint __ordinal);

@implementation OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode

- (instancetype)initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:(id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)query
   withOrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier:(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier *)mod {
  OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withOrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_(self, query, mod);
  return self;
}

- (id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)getChild {
  return [((id<JavaUtilList>) nil_chk([self getChildren])) getWithInt:0];
}

- (OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier *)getModifier {
  return self->modifier_;
}

- (NSString *)description {
  return JreStrcat("$$$$$", @"<modifier operation='", [((OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier *) nil_chk(self->modifier_)) description], @"'>\n", [((id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>) nil_chk([self getChild])) description], @"\n</modifier>");
}

- (id<JavaLangCharSequence>)toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:(id<OrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax>)escapeSyntaxParser {
  if ([self getChild] == nil) return @"";
  NSString *leftParenthensis = @"";
  NSString *rightParenthensis = @"";
  if ([self getChild] != nil && [[self getChild] isKindOfClass:[OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode class]]) {
    leftParenthensis = @"(";
    rightParenthensis = @")";
  }
  if ([[self getChild] isKindOfClass:[OrgApacheLuceneQueryparserFlexibleCoreNodesBooleanQueryNode class]]) {
    return JreStrcat("$$@$", [((OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier *) nil_chk(self->modifier_)) toLargeString], leftParenthensis, [((id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>) nil_chk([self getChild])) toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:escapeSyntaxParser], rightParenthensis);
  }
  else {
    return JreStrcat("$$@$", [((OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier *) nil_chk(self->modifier_)) toDigitString], leftParenthensis, [((id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>) nil_chk([self getChild])) toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:escapeSyntaxParser], rightParenthensis);
  }
}

- (id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)cloneTree {
  OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode *clone = (OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode *) cast_chk([super cloneTree], [OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode class]);
  JreStrongAssign(&((OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode *) nil_chk(clone))->modifier_, self->modifier_);
  return clone;
}

- (void)setChildWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:(id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)child {
  id<JavaUtilList> list = create_JavaUtilArrayList_init();
  [list addWithId:child];
  [self setWithJavaUtilList:list];
}

- (void)dealloc {
  RELEASE_(modifier_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangCharSequence;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode;", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:withOrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier:);
  methods[1].selector = @selector(getChild);
  methods[2].selector = @selector(getModifier);
  methods[3].selector = @selector(description);
  methods[4].selector = @selector(toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:);
  methods[5].selector = @selector(cloneTree);
  methods[6].selector = @selector(setChildWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "modifier_", "LOrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode;LOrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier;", "toString", "toQueryString", "LOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax;", "LJavaLangCloneNotSupportedException;", "setChild", "LOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode;", "LOrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode = { "ModifierQueryNode", "org.apache.lucene.queryparser.flexible.core.nodes", ptrTable, methods, fields, 7, 0x1, 7, 1, -1, 7, -1, -1, -1 };
  return &_OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode;
}

@end

void OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withOrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode *self, id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode> query, OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier *mod) {
  OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl_init(self);
  JreStrongAssign(&self->modifier_, JreLoadEnum(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier, MOD_NONE));
  if (query == nil) {
    @throw create_OrgApacheLuceneQueryparserFlexibleCoreQueryNodeError_initWithOrgApacheLuceneQueryparserFlexibleMessagesMessage_(create_OrgApacheLuceneQueryparserFlexibleMessagesMessageImpl_initWithNSString_withNSObjectArray_(JreLoadStatic(OrgApacheLuceneQueryparserFlexibleCoreMessagesQueryParserMessages, PARAMETER_VALUE_NOT_SUPPORTED), [IOSObjectArray arrayWithObjects:(id[]){ @"query", @"null" } count:2 type:NSObject_class_()]));
  }
  [self allocate];
  [self setLeafWithBoolean:false];
  [self addWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:query];
  JreStrongAssign(&self->modifier_, mod);
}

OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode *new_OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withOrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_(id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode> query, OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier *mod) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode, initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withOrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_, query, mod)
}

OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode *create_OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withOrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_(id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode> query, OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier *mod) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode, initWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode_withOrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_, query, mod)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier)

OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier *OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_values_[3];

@implementation OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier

+ (OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier *)MOD_NONE {
  return JreEnum(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier, MOD_NONE);
}

+ (OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier *)MOD_NOT {
  return JreEnum(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier, MOD_NOT);
}

+ (OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier *)MOD_REQ {
  return JreEnum(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier, MOD_REQ);
}

- (NSString *)description {
  switch ([self ordinal]) {
    case OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_Enum_MOD_NONE:
    return @"MOD_NONE";
    case OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_Enum_MOD_NOT:
    return @"MOD_NOT";
    case OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_Enum_MOD_REQ:
    return @"MOD_REQ";
  }
  return @"MOD_DEFAULT";
}

- (NSString *)toDigitString {
  switch ([self ordinal]) {
    case OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_Enum_MOD_NONE:
    return @"";
    case OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_Enum_MOD_NOT:
    return @"-";
    case OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_Enum_MOD_REQ:
    return @"+";
  }
  return @"";
}

- (NSString *)toLargeString {
  switch ([self ordinal]) {
    case OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_Enum_MOD_NONE:
    return @"";
    case OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_Enum_MOD_NOT:
    return @"NOT ";
    case OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_Enum_MOD_REQ:
    return @"+";
  }
  return @"";
}

+ (IOSObjectArray *)values {
  return OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_values();
}

+ (OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier *)valueOfWithNSString:(NSString *)name {
  return OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_valueOfWithNSString_(name);
}

- (OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_Enum)toNSEnum {
  return (OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier;", 0x9, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(description);
  methods[1].selector = @selector(toDigitString);
  methods[2].selector = @selector(toLargeString);
  methods[3].selector = @selector(values);
  methods[4].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MOD_NONE", "LOrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "MOD_NOT", "LOrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "MOD_REQ", "LOrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "toString", "valueOf", "LNSString;", &JreEnum(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier, MOD_NONE), &JreEnum(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier, MOD_NOT), &JreEnum(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier, MOD_REQ), "LOrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode;", "Ljava/lang/Enum<Lorg/apache/lucene/queryparser/flexible/core/nodes/ModifierQueryNode$Modifier;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier = { "Modifier", "org.apache.lucene.queryparser.flexible.core.nodes", ptrTable, methods, fields, 7, 0x4019, 5, 3, 6, -1, -1, 7, -1 };
  return &_OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 3 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 3; i++) {
      ((void)(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_initWithNSString_withInt_(e, JreEnumConstantName(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier)
  }
}

@end

void OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_initWithNSString_withInt_(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_values() {
  OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_initialize();
  return [IOSObjectArray arrayWithObjects:OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_values_ count:3 type:OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_class_()];
}

OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier *OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_valueOfWithNSString_(NSString *name) {
  OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_initialize();
  for (int i = 0; i < 3; i++) {
    OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier *e = OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier *OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_fromOrdinal(NSUInteger ordinal) {
  OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_initialize();
  if (ordinal >= 3) {
    return nil;
  }
  return OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleCoreNodesModifierQueryNode_Modifier)
