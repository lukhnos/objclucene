//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/core/nodes/FuzzyQueryNode.java
//

#include "J2ObjC_source.h"
#include "java/lang/CharSequence.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/FieldQueryNode.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/FuzzyQueryNode.h"
#include "org/apache/lucene/queryparser/flexible/core/parser/EscapeQuerySyntax.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queryparser/flexible/core/nodes/FuzzyQueryNode must not be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface OrgApacheLuceneQueryparserFlexibleCoreNodesFuzzyQueryNode () {
 @public
  jfloat similarity_;
  jint prefixLength_;
}

@end

@implementation OrgApacheLuceneQueryparserFlexibleCoreNodesFuzzyQueryNode

- (instancetype)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)field
                    withJavaLangCharSequence:(id<JavaLangCharSequence>)term
                                   withFloat:(jfloat)minSimilarity
                                     withInt:(jint)begin
                                     withInt:(jint)end {
  OrgApacheLuceneQueryparserFlexibleCoreNodesFuzzyQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_withFloat_withInt_withInt_(self, field, term, minSimilarity, begin, end);
  return self;
}

- (void)setPrefixLengthWithInt:(jint)prefixLength {
  self->prefixLength_ = prefixLength;
}

- (jint)getPrefixLength {
  return self->prefixLength_;
}

- (id<JavaLangCharSequence>)toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:(id<OrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax>)escaper {
  if ([self isDefaultFieldWithJavaLangCharSequence:self->field_]) {
    return JreStrcat("@CF", [self getTermEscapedWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:escaper], '~', self->similarity_);
  }
  else {
    return JreStrcat("@C@CF", self->field_, ':', [self getTermEscapedWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:escaper], '~', self->similarity_);
  }
}

- (NSString *)description {
  return JreStrcat("$@$F$@$", @"<fuzzy field='", self->field_, @"' similarity='", self->similarity_, @"' term='", self->text_, @"'/>");
}

- (void)setSimilarityWithFloat:(jfloat)similarity {
  self->similarity_ = similarity;
}

- (OrgApacheLuceneQueryparserFlexibleCoreNodesFuzzyQueryNode *)cloneTree {
  OrgApacheLuceneQueryparserFlexibleCoreNodesFuzzyQueryNode *clone = (OrgApacheLuceneQueryparserFlexibleCoreNodesFuzzyQueryNode *) cast_chk([super cloneTree], [OrgApacheLuceneQueryparserFlexibleCoreNodesFuzzyQueryNode class]);
  ((OrgApacheLuceneQueryparserFlexibleCoreNodesFuzzyQueryNode *) nil_chk(clone))->similarity_ = self->similarity_;
  return clone;
}

- (jfloat)getSimilarity {
  return self->similarity_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangCharSequence;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueryparserFlexibleCoreNodesFuzzyQueryNode;", 0x1, -1, -1, 8, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaLangCharSequence:withJavaLangCharSequence:withFloat:withInt:withInt:);
  methods[1].selector = @selector(setPrefixLengthWithInt:);
  methods[2].selector = @selector(getPrefixLength);
  methods[3].selector = @selector(toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:);
  methods[4].selector = @selector(description);
  methods[5].selector = @selector(setSimilarityWithFloat:);
  methods[6].selector = @selector(cloneTree);
  methods[7].selector = @selector(getSimilarity);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "similarity_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "prefixLength_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangCharSequence;LJavaLangCharSequence;FII", "setPrefixLength", "I", "toQueryString", "LOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax;", "toString", "setSimilarity", "F", "LJavaLangCloneNotSupportedException;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleCoreNodesFuzzyQueryNode = { "FuzzyQueryNode", "org.apache.lucene.queryparser.flexible.core.nodes", ptrTable, methods, fields, 7, 0x1, 8, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueryparserFlexibleCoreNodesFuzzyQueryNode;
}

@end

void OrgApacheLuceneQueryparserFlexibleCoreNodesFuzzyQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_withFloat_withInt_withInt_(OrgApacheLuceneQueryparserFlexibleCoreNodesFuzzyQueryNode *self, id<JavaLangCharSequence> field, id<JavaLangCharSequence> term, jfloat minSimilarity, jint begin, jint end) {
  OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_withInt_withInt_(self, field, term, begin, end);
  self->similarity_ = minSimilarity;
  [self setLeafWithBoolean:true];
}

OrgApacheLuceneQueryparserFlexibleCoreNodesFuzzyQueryNode *new_OrgApacheLuceneQueryparserFlexibleCoreNodesFuzzyQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_withFloat_withInt_withInt_(id<JavaLangCharSequence> field, id<JavaLangCharSequence> term, jfloat minSimilarity, jint begin, jint end) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserFlexibleCoreNodesFuzzyQueryNode, initWithJavaLangCharSequence_withJavaLangCharSequence_withFloat_withInt_withInt_, field, term, minSimilarity, begin, end)
}

OrgApacheLuceneQueryparserFlexibleCoreNodesFuzzyQueryNode *create_OrgApacheLuceneQueryparserFlexibleCoreNodesFuzzyQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_withFloat_withInt_withInt_(id<JavaLangCharSequence> field, id<JavaLangCharSequence> term, jfloat minSimilarity, jint begin, jint end) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserFlexibleCoreNodesFuzzyQueryNode, initWithJavaLangCharSequence_withJavaLangCharSequence_withFloat_withInt_withInt_, field, term, minSimilarity, begin, end)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleCoreNodesFuzzyQueryNode)
