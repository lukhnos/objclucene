//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/core/nodes/RangeQueryNode.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/RangeQueryNode.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queryparser/flexible/core/nodes/RangeQueryNode must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneQueryparserFlexibleCoreNodesRangeQueryNode : NSObject

@end

@implementation OrgApacheLuceneQueryparserFlexibleCoreNodesRangeQueryNode

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgApacheLuceneQueryparserFlexibleCoreNodesFieldValuePairQueryNode;", 0x401, -1, -1, -1, 0, -1, -1 },
    { NULL, "LOrgApacheLuceneQueryparserFlexibleCoreNodesFieldValuePairQueryNode;", 0x401, -1, -1, -1, 0, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getLowerBound);
  methods[1].selector = @selector(getUpperBound);
  methods[2].selector = @selector(isLowerInclusive);
  methods[3].selector = @selector(isUpperInclusive);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()TT;", "<T::Lorg/apache/lucene/queryparser/flexible/core/nodes/FieldValuePairQueryNode<*>;>Ljava/lang/Object;Lorg/apache/lucene/queryparser/flexible/core/nodes/FieldableNode;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleCoreNodesRangeQueryNode = { "RangeQueryNode", "org.apache.lucene.queryparser.flexible.core.nodes", ptrTable, methods, NULL, 7, 0x609, 4, 0, -1, -1, -1, 1, -1 };
  return &_OrgApacheLuceneQueryparserFlexibleCoreNodesRangeQueryNode;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleCoreNodesRangeQueryNode)
