//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/core/nodes/MatchAllDocsQueryNode.java
//

#include "J2ObjC_source.h"
#include "java/lang/CharSequence.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/MatchAllDocsQueryNode.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/QueryNode.h"
#include "org/apache/lucene/queryparser/flexible/core/nodes/QueryNodeImpl.h"
#include "org/apache/lucene/queryparser/flexible/core/parser/EscapeQuerySyntax.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queryparser/flexible/core/nodes/MatchAllDocsQueryNode must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneQueryparserFlexibleCoreNodesMatchAllDocsQueryNode

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneQueryparserFlexibleCoreNodesMatchAllDocsQueryNode_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)description {
  return @"<matchAllDocs field='*' term='*'/>";
}

- (id<JavaLangCharSequence>)toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:(id<OrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax>)escapeSyntaxParser {
  return @"*:*";
}

- (OrgApacheLuceneQueryparserFlexibleCoreNodesMatchAllDocsQueryNode *)cloneTree {
  OrgApacheLuceneQueryparserFlexibleCoreNodesMatchAllDocsQueryNode *clone = (OrgApacheLuceneQueryparserFlexibleCoreNodesMatchAllDocsQueryNode *) cast_chk([super cloneTree], [OrgApacheLuceneQueryparserFlexibleCoreNodesMatchAllDocsQueryNode class]);
  return clone;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangCharSequence;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueryparserFlexibleCoreNodesMatchAllDocsQueryNode;", 0x1, -1, -1, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(description);
  methods[2].selector = @selector(toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:);
  methods[3].selector = @selector(cloneTree);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "toString", "toQueryString", "LOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax;", "LJavaLangCloneNotSupportedException;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueryparserFlexibleCoreNodesMatchAllDocsQueryNode = { "MatchAllDocsQueryNode", "org.apache.lucene.queryparser.flexible.core.nodes", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueryparserFlexibleCoreNodesMatchAllDocsQueryNode;
}

@end

void OrgApacheLuceneQueryparserFlexibleCoreNodesMatchAllDocsQueryNode_init(OrgApacheLuceneQueryparserFlexibleCoreNodesMatchAllDocsQueryNode *self) {
  OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl_init(self);
}

OrgApacheLuceneQueryparserFlexibleCoreNodesMatchAllDocsQueryNode *new_OrgApacheLuceneQueryparserFlexibleCoreNodesMatchAllDocsQueryNode_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueryparserFlexibleCoreNodesMatchAllDocsQueryNode, init)
}

OrgApacheLuceneQueryparserFlexibleCoreNodesMatchAllDocsQueryNode *create_OrgApacheLuceneQueryparserFlexibleCoreNodesMatchAllDocsQueryNode_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueryparserFlexibleCoreNodesMatchAllDocsQueryNode, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueryparserFlexibleCoreNodesMatchAllDocsQueryNode)
