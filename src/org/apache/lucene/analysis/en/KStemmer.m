//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/en/KStemmer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Appendable.h"
#include "java/lang/CharSequence.h"
#include "java/lang/RuntimeException.h"
#include "org/apache/lucene/analysis/en/KStemData1.h"
#include "org/apache/lucene/analysis/en/KStemData2.h"
#include "org/apache/lucene/analysis/en/KStemData3.h"
#include "org/apache/lucene/analysis/en/KStemData4.h"
#include "org/apache/lucene/analysis/en/KStemData5.h"
#include "org/apache/lucene/analysis/en/KStemData6.h"
#include "org/apache/lucene/analysis/en/KStemData7.h"
#include "org/apache/lucene/analysis/en/KStemData8.h"
#include "org/apache/lucene/analysis/en/KStemmer.h"
#include "org/apache/lucene/analysis/util/CharArrayMap.h"
#include "org/apache/lucene/analysis/util/OpenStringBuilder.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/en/KStemmer must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneAnalysisEnKStemmer () {
 @public
  /*!
   @brief caching off private int maxCacheSize; private CharArrayMap<String> cache =
  null; private static final String SAME = "SAME"; // use if stemmed form is
  the same
   */
  OrgApacheLuceneAnalysisUtilOpenStringBuilder *word_;
  jint j_;
  jint k_;
}

- (jchar)finalChar;

- (jchar)penultChar;

- (jboolean)isVowelWithInt:(jint)index;

- (jboolean)isConsWithInt:(jint)index;

+ (OrgApacheLuceneAnalysisUtilCharArrayMap *)initializeDictHash OBJC_METHOD_FAMILY_NONE;

- (jboolean)isAlphaWithChar:(jchar)ch;

- (jint)stemLength;

- (jboolean)endsInWithCharArray:(IOSCharArray *)s;

- (jboolean)endsInWithChar:(jchar)a
                  withChar:(jchar)b;

- (jboolean)endsInWithChar:(jchar)a
                  withChar:(jchar)b
                  withChar:(jchar)c;

- (jboolean)endsInWithChar:(jchar)a
                  withChar:(jchar)b
                  withChar:(jchar)c
                  withChar:(jchar)d;

- (OrgApacheLuceneAnalysisEnKStemmer_DictEntry *)wordInDict;

- (void)plural;

- (void)setSuffixWithNSString:(NSString *)s;

- (void)setSuffWithNSString:(NSString *)s
                    withInt:(jint)len;

- (jboolean)lookup;

- (void)pastTense;

- (jboolean)doubleCWithInt:(jint)i;

- (jboolean)vowelInStem;

- (void)aspect;

- (void)ityEndings;

- (void)nceEndings;

- (void)nessEndings;

- (void)ismEndings;

- (void)mentEndings;

- (void)izeEndings;

- (void)ncyEndings;

- (void)bleEndings;

- (void)icEndings;

- (void)ionEndings;

- (void)erAndOrEndings;

- (void)lyEndings;

- (void)alEndings;

- (void)iveEndings;

- (jboolean)matched;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisEnKStemmer, word_, OrgApacheLuceneAnalysisUtilOpenStringBuilder *)

inline jint OrgApacheLuceneAnalysisEnKStemmer_get_MaxWordLen(void);
#define OrgApacheLuceneAnalysisEnKStemmer_MaxWordLen 50
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisEnKStemmer, MaxWordLen, jint)

inline IOSObjectArray *OrgApacheLuceneAnalysisEnKStemmer_get_exceptionWords(void);
static IOSObjectArray *OrgApacheLuceneAnalysisEnKStemmer_exceptionWords;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisEnKStemmer, exceptionWords, IOSObjectArray *)

inline IOSObjectArray *OrgApacheLuceneAnalysisEnKStemmer_get_directConflations(void);
static IOSObjectArray *OrgApacheLuceneAnalysisEnKStemmer_directConflations;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisEnKStemmer, directConflations, IOSObjectArray *)

inline IOSObjectArray *OrgApacheLuceneAnalysisEnKStemmer_get_countryNationality(void);
static IOSObjectArray *OrgApacheLuceneAnalysisEnKStemmer_countryNationality;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisEnKStemmer, countryNationality, IOSObjectArray *)

inline IOSObjectArray *OrgApacheLuceneAnalysisEnKStemmer_get_supplementDict(void);
static IOSObjectArray *OrgApacheLuceneAnalysisEnKStemmer_supplementDict;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisEnKStemmer, supplementDict, IOSObjectArray *)

inline IOSObjectArray *OrgApacheLuceneAnalysisEnKStemmer_get_properNouns(void);
static IOSObjectArray *OrgApacheLuceneAnalysisEnKStemmer_properNouns;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisEnKStemmer, properNouns, IOSObjectArray *)

inline OrgApacheLuceneAnalysisUtilCharArrayMap *OrgApacheLuceneAnalysisEnKStemmer_get_dict_ht(void);
static OrgApacheLuceneAnalysisUtilCharArrayMap *OrgApacheLuceneAnalysisEnKStemmer_dict_ht;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisEnKStemmer, dict_ht, OrgApacheLuceneAnalysisUtilCharArrayMap *)

inline IOSCharArray *OrgApacheLuceneAnalysisEnKStemmer_get_ization(void);
inline IOSCharArray *OrgApacheLuceneAnalysisEnKStemmer_set_ization(IOSCharArray *value);
static IOSCharArray *OrgApacheLuceneAnalysisEnKStemmer_ization;
J2OBJC_STATIC_FIELD_OBJ(OrgApacheLuceneAnalysisEnKStemmer, ization, IOSCharArray *)

inline IOSCharArray *OrgApacheLuceneAnalysisEnKStemmer_get_ition(void);
inline IOSCharArray *OrgApacheLuceneAnalysisEnKStemmer_set_ition(IOSCharArray *value);
static IOSCharArray *OrgApacheLuceneAnalysisEnKStemmer_ition;
J2OBJC_STATIC_FIELD_OBJ(OrgApacheLuceneAnalysisEnKStemmer, ition, IOSCharArray *)

inline IOSCharArray *OrgApacheLuceneAnalysisEnKStemmer_get_ation(void);
inline IOSCharArray *OrgApacheLuceneAnalysisEnKStemmer_set_ation(IOSCharArray *value);
static IOSCharArray *OrgApacheLuceneAnalysisEnKStemmer_ation;
J2OBJC_STATIC_FIELD_OBJ(OrgApacheLuceneAnalysisEnKStemmer, ation, IOSCharArray *)

inline IOSCharArray *OrgApacheLuceneAnalysisEnKStemmer_get_ication(void);
inline IOSCharArray *OrgApacheLuceneAnalysisEnKStemmer_set_ication(IOSCharArray *value);
static IOSCharArray *OrgApacheLuceneAnalysisEnKStemmer_ication;
J2OBJC_STATIC_FIELD_OBJ(OrgApacheLuceneAnalysisEnKStemmer, ication, IOSCharArray *)

__attribute__((unused)) static jchar OrgApacheLuceneAnalysisEnKStemmer_finalChar(OrgApacheLuceneAnalysisEnKStemmer *self);

__attribute__((unused)) static jchar OrgApacheLuceneAnalysisEnKStemmer_penultChar(OrgApacheLuceneAnalysisEnKStemmer *self);

__attribute__((unused)) static jboolean OrgApacheLuceneAnalysisEnKStemmer_isVowelWithInt_(OrgApacheLuceneAnalysisEnKStemmer *self, jint index);

__attribute__((unused)) static jboolean OrgApacheLuceneAnalysisEnKStemmer_isConsWithInt_(OrgApacheLuceneAnalysisEnKStemmer *self, jint index);

__attribute__((unused)) static OrgApacheLuceneAnalysisUtilCharArrayMap *OrgApacheLuceneAnalysisEnKStemmer_initializeDictHash(void);

__attribute__((unused)) static jboolean OrgApacheLuceneAnalysisEnKStemmer_isAlphaWithChar_(OrgApacheLuceneAnalysisEnKStemmer *self, jchar ch);

__attribute__((unused)) static jint OrgApacheLuceneAnalysisEnKStemmer_stemLength(OrgApacheLuceneAnalysisEnKStemmer *self);

__attribute__((unused)) static jboolean OrgApacheLuceneAnalysisEnKStemmer_endsInWithCharArray_(OrgApacheLuceneAnalysisEnKStemmer *self, IOSCharArray *s);

__attribute__((unused)) static jboolean OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_(OrgApacheLuceneAnalysisEnKStemmer *self, jchar a, jchar b);

__attribute__((unused)) static jboolean OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_withChar_(OrgApacheLuceneAnalysisEnKStemmer *self, jchar a, jchar b, jchar c);

__attribute__((unused)) static jboolean OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_withChar_withChar_(OrgApacheLuceneAnalysisEnKStemmer *self, jchar a, jchar b, jchar c, jchar d);

__attribute__((unused)) static OrgApacheLuceneAnalysisEnKStemmer_DictEntry *OrgApacheLuceneAnalysisEnKStemmer_wordInDict(OrgApacheLuceneAnalysisEnKStemmer *self);

__attribute__((unused)) static void OrgApacheLuceneAnalysisEnKStemmer_plural(OrgApacheLuceneAnalysisEnKStemmer *self);

__attribute__((unused)) static void OrgApacheLuceneAnalysisEnKStemmer_setSuffixWithNSString_(OrgApacheLuceneAnalysisEnKStemmer *self, NSString *s);

__attribute__((unused)) static void OrgApacheLuceneAnalysisEnKStemmer_setSuffWithNSString_withInt_(OrgApacheLuceneAnalysisEnKStemmer *self, NSString *s, jint len);

__attribute__((unused)) static jboolean OrgApacheLuceneAnalysisEnKStemmer_lookup(OrgApacheLuceneAnalysisEnKStemmer *self);

__attribute__((unused)) static void OrgApacheLuceneAnalysisEnKStemmer_pastTense(OrgApacheLuceneAnalysisEnKStemmer *self);

__attribute__((unused)) static jboolean OrgApacheLuceneAnalysisEnKStemmer_doubleCWithInt_(OrgApacheLuceneAnalysisEnKStemmer *self, jint i);

__attribute__((unused)) static jboolean OrgApacheLuceneAnalysisEnKStemmer_vowelInStem(OrgApacheLuceneAnalysisEnKStemmer *self);

__attribute__((unused)) static void OrgApacheLuceneAnalysisEnKStemmer_aspect(OrgApacheLuceneAnalysisEnKStemmer *self);

__attribute__((unused)) static void OrgApacheLuceneAnalysisEnKStemmer_ityEndings(OrgApacheLuceneAnalysisEnKStemmer *self);

__attribute__((unused)) static void OrgApacheLuceneAnalysisEnKStemmer_nceEndings(OrgApacheLuceneAnalysisEnKStemmer *self);

__attribute__((unused)) static void OrgApacheLuceneAnalysisEnKStemmer_nessEndings(OrgApacheLuceneAnalysisEnKStemmer *self);

__attribute__((unused)) static void OrgApacheLuceneAnalysisEnKStemmer_ismEndings(OrgApacheLuceneAnalysisEnKStemmer *self);

__attribute__((unused)) static void OrgApacheLuceneAnalysisEnKStemmer_mentEndings(OrgApacheLuceneAnalysisEnKStemmer *self);

__attribute__((unused)) static void OrgApacheLuceneAnalysisEnKStemmer_izeEndings(OrgApacheLuceneAnalysisEnKStemmer *self);

__attribute__((unused)) static void OrgApacheLuceneAnalysisEnKStemmer_ncyEndings(OrgApacheLuceneAnalysisEnKStemmer *self);

__attribute__((unused)) static void OrgApacheLuceneAnalysisEnKStemmer_bleEndings(OrgApacheLuceneAnalysisEnKStemmer *self);

__attribute__((unused)) static void OrgApacheLuceneAnalysisEnKStemmer_icEndings(OrgApacheLuceneAnalysisEnKStemmer *self);

__attribute__((unused)) static void OrgApacheLuceneAnalysisEnKStemmer_ionEndings(OrgApacheLuceneAnalysisEnKStemmer *self);

__attribute__((unused)) static void OrgApacheLuceneAnalysisEnKStemmer_erAndOrEndings(OrgApacheLuceneAnalysisEnKStemmer *self);

__attribute__((unused)) static void OrgApacheLuceneAnalysisEnKStemmer_lyEndings(OrgApacheLuceneAnalysisEnKStemmer *self);

__attribute__((unused)) static void OrgApacheLuceneAnalysisEnKStemmer_alEndings(OrgApacheLuceneAnalysisEnKStemmer *self);

__attribute__((unused)) static void OrgApacheLuceneAnalysisEnKStemmer_iveEndings(OrgApacheLuceneAnalysisEnKStemmer *self);

__attribute__((unused)) static jboolean OrgApacheLuceneAnalysisEnKStemmer_matched(OrgApacheLuceneAnalysisEnKStemmer *self);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneAnalysisEnKStemmer)

@implementation OrgApacheLuceneAnalysisEnKStemmer

- (jchar)finalChar {
  return OrgApacheLuceneAnalysisEnKStemmer_finalChar(self);
}

- (jchar)penultChar {
  return OrgApacheLuceneAnalysisEnKStemmer_penultChar(self);
}

- (jboolean)isVowelWithInt:(jint)index {
  return OrgApacheLuceneAnalysisEnKStemmer_isVowelWithInt_(self, index);
}

- (jboolean)isConsWithInt:(jint)index {
  return OrgApacheLuceneAnalysisEnKStemmer_isConsWithInt_(self, index);
}

+ (OrgApacheLuceneAnalysisUtilCharArrayMap *)initializeDictHash {
  return OrgApacheLuceneAnalysisEnKStemmer_initializeDictHash();
}

- (jboolean)isAlphaWithChar:(jchar)ch {
  return OrgApacheLuceneAnalysisEnKStemmer_isAlphaWithChar_(self, ch);
}

- (jint)stemLength {
  return OrgApacheLuceneAnalysisEnKStemmer_stemLength(self);
}

- (jboolean)endsInWithCharArray:(IOSCharArray *)s {
  return OrgApacheLuceneAnalysisEnKStemmer_endsInWithCharArray_(self, s);
}

- (jboolean)endsInWithChar:(jchar)a
                  withChar:(jchar)b {
  return OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_(self, a, b);
}

- (jboolean)endsInWithChar:(jchar)a
                  withChar:(jchar)b
                  withChar:(jchar)c {
  return OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_withChar_(self, a, b, c);
}

- (jboolean)endsInWithChar:(jchar)a
                  withChar:(jchar)b
                  withChar:(jchar)c
                  withChar:(jchar)d {
  return OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_withChar_withChar_(self, a, b, c, d);
}

- (OrgApacheLuceneAnalysisEnKStemmer_DictEntry *)wordInDict {
  return OrgApacheLuceneAnalysisEnKStemmer_wordInDict(self);
}

- (void)plural {
  OrgApacheLuceneAnalysisEnKStemmer_plural(self);
}

- (void)setSuffixWithNSString:(NSString *)s {
  OrgApacheLuceneAnalysisEnKStemmer_setSuffixWithNSString_(self, s);
}

- (void)setSuffWithNSString:(NSString *)s
                    withInt:(jint)len {
  OrgApacheLuceneAnalysisEnKStemmer_setSuffWithNSString_withInt_(self, s, len);
}

- (jboolean)lookup {
  return OrgApacheLuceneAnalysisEnKStemmer_lookup(self);
}

- (void)pastTense {
  OrgApacheLuceneAnalysisEnKStemmer_pastTense(self);
}

- (jboolean)doubleCWithInt:(jint)i {
  return OrgApacheLuceneAnalysisEnKStemmer_doubleCWithInt_(self, i);
}

- (jboolean)vowelInStem {
  return OrgApacheLuceneAnalysisEnKStemmer_vowelInStem(self);
}

- (void)aspect {
  OrgApacheLuceneAnalysisEnKStemmer_aspect(self);
}

- (void)ityEndings {
  OrgApacheLuceneAnalysisEnKStemmer_ityEndings(self);
}

- (void)nceEndings {
  OrgApacheLuceneAnalysisEnKStemmer_nceEndings(self);
}

- (void)nessEndings {
  OrgApacheLuceneAnalysisEnKStemmer_nessEndings(self);
}

- (void)ismEndings {
  OrgApacheLuceneAnalysisEnKStemmer_ismEndings(self);
}

- (void)mentEndings {
  OrgApacheLuceneAnalysisEnKStemmer_mentEndings(self);
}

- (void)izeEndings {
  OrgApacheLuceneAnalysisEnKStemmer_izeEndings(self);
}

- (void)ncyEndings {
  OrgApacheLuceneAnalysisEnKStemmer_ncyEndings(self);
}

- (void)bleEndings {
  OrgApacheLuceneAnalysisEnKStemmer_bleEndings(self);
}

- (void)icEndings {
  OrgApacheLuceneAnalysisEnKStemmer_icEndings(self);
}

- (void)ionEndings {
  OrgApacheLuceneAnalysisEnKStemmer_ionEndings(self);
}

- (void)erAndOrEndings {
  OrgApacheLuceneAnalysisEnKStemmer_erAndOrEndings(self);
}

- (void)lyEndings {
  OrgApacheLuceneAnalysisEnKStemmer_lyEndings(self);
}

- (void)alEndings {
  OrgApacheLuceneAnalysisEnKStemmer_alEndings(self);
}

- (void)iveEndings {
  OrgApacheLuceneAnalysisEnKStemmer_iveEndings(self);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisEnKStemmer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)stemWithNSString:(NSString *)term {
  jboolean changed = [self stemWithCharArray:[((NSString *) nil_chk(term)) java_toCharArray] withInt:[term java_length]];
  if (!changed) return term;
  return [self asString];
}

- (NSString *)asString {
  NSString *s = JreRetainedLocalValue([self getString]);
  if (s != nil) return s;
  return [((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(word_)) description];
}

- (id<JavaLangCharSequence>)asCharSequence {
  return result_ != nil ? result_ : (id) word_;
}

- (NSString *)getString {
  return result_;
}

- (IOSCharArray *)getChars {
  return [((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(word_)) getArray];
}

- (jint)getLength {
  return [((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(word_)) java_length];
}

- (jboolean)matched {
  return OrgApacheLuceneAnalysisEnKStemmer_matched(self);
}

- (jboolean)stemWithCharArray:(IOSCharArray *)term
                      withInt:(jint)len {
  JreStrongAssign(&result_, nil);
  k_ = len - 1;
  if ((k_ <= 1) || (k_ >= OrgApacheLuceneAnalysisEnKStemmer_MaxWordLen - 1)) {
    return false;
  }
  OrgApacheLuceneAnalysisEnKStemmer_DictEntry *entry_ = JreRetainedLocalValue([((OrgApacheLuceneAnalysisUtilCharArrayMap *) nil_chk(OrgApacheLuceneAnalysisEnKStemmer_dict_ht)) getWithCharArray:term withInt:0 withInt:len]);
  if (entry_ != nil) {
    if (entry_->root_ != nil) {
      JreStrongAssign(&result_, entry_->root_);
      return true;
    }
    return false;
  }
  [((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(word_)) reset];
  [word_ reserveWithInt:len + 10];
  for (jint i = 0; i < len; i++) {
    jchar ch = IOSCharArray_Get(nil_chk(term), i);
    if (!OrgApacheLuceneAnalysisEnKStemmer_isAlphaWithChar_(self, ch)) return false;
    [word_ unsafeWriteWithChar:ch];
  }
  JreStrongAssign(&matchedEntry_, nil);
  while (true) {
    OrgApacheLuceneAnalysisEnKStemmer_plural(self);
    if (OrgApacheLuceneAnalysisEnKStemmer_matched(self)) break;
    OrgApacheLuceneAnalysisEnKStemmer_pastTense(self);
    if (OrgApacheLuceneAnalysisEnKStemmer_matched(self)) break;
    OrgApacheLuceneAnalysisEnKStemmer_aspect(self);
    if (OrgApacheLuceneAnalysisEnKStemmer_matched(self)) break;
    OrgApacheLuceneAnalysisEnKStemmer_ityEndings(self);
    if (OrgApacheLuceneAnalysisEnKStemmer_matched(self)) break;
    OrgApacheLuceneAnalysisEnKStemmer_nessEndings(self);
    if (OrgApacheLuceneAnalysisEnKStemmer_matched(self)) break;
    OrgApacheLuceneAnalysisEnKStemmer_ionEndings(self);
    if (OrgApacheLuceneAnalysisEnKStemmer_matched(self)) break;
    OrgApacheLuceneAnalysisEnKStemmer_erAndOrEndings(self);
    if (OrgApacheLuceneAnalysisEnKStemmer_matched(self)) break;
    OrgApacheLuceneAnalysisEnKStemmer_lyEndings(self);
    if (OrgApacheLuceneAnalysisEnKStemmer_matched(self)) break;
    OrgApacheLuceneAnalysisEnKStemmer_alEndings(self);
    if (OrgApacheLuceneAnalysisEnKStemmer_matched(self)) break;
    entry_ = OrgApacheLuceneAnalysisEnKStemmer_wordInDict(self);
    OrgApacheLuceneAnalysisEnKStemmer_iveEndings(self);
    if (OrgApacheLuceneAnalysisEnKStemmer_matched(self)) break;
    OrgApacheLuceneAnalysisEnKStemmer_izeEndings(self);
    if (OrgApacheLuceneAnalysisEnKStemmer_matched(self)) break;
    OrgApacheLuceneAnalysisEnKStemmer_mentEndings(self);
    if (OrgApacheLuceneAnalysisEnKStemmer_matched(self)) break;
    OrgApacheLuceneAnalysisEnKStemmer_bleEndings(self);
    if (OrgApacheLuceneAnalysisEnKStemmer_matched(self)) break;
    OrgApacheLuceneAnalysisEnKStemmer_ismEndings(self);
    if (OrgApacheLuceneAnalysisEnKStemmer_matched(self)) break;
    OrgApacheLuceneAnalysisEnKStemmer_icEndings(self);
    if (OrgApacheLuceneAnalysisEnKStemmer_matched(self)) break;
    OrgApacheLuceneAnalysisEnKStemmer_ncyEndings(self);
    if (OrgApacheLuceneAnalysisEnKStemmer_matched(self)) break;
    OrgApacheLuceneAnalysisEnKStemmer_nceEndings(self);
    OrgApacheLuceneAnalysisEnKStemmer_matched(self);
    break;
  }
  entry_ = matchedEntry_;
  if (entry_ != nil) {
    JreStrongAssign(&result_, entry_->root_);
  }
  return true;
}

- (void)dealloc {
  RELEASE_(word_);
  RELEASE_(matchedEntry_);
  RELEASE_(result_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "C", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "C", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 2, 1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisUtilCharArrayMap;", 0xa, -1, -1, -1, 3, -1, -1 },
    { NULL, "Z", 0x2, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 6, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 6, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 6, 9, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 6, 10, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisEnKStemmer_DictEntry;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 13, 14, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 15, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, 16, 12, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangCharSequence;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "[C", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 16, 17, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(finalChar);
  methods[1].selector = @selector(penultChar);
  methods[2].selector = @selector(isVowelWithInt:);
  methods[3].selector = @selector(isConsWithInt:);
  methods[4].selector = @selector(initializeDictHash);
  methods[5].selector = @selector(isAlphaWithChar:);
  methods[6].selector = @selector(stemLength);
  methods[7].selector = @selector(endsInWithCharArray:);
  methods[8].selector = @selector(endsInWithChar:withChar:);
  methods[9].selector = @selector(endsInWithChar:withChar:withChar:);
  methods[10].selector = @selector(endsInWithChar:withChar:withChar:withChar:);
  methods[11].selector = @selector(wordInDict);
  methods[12].selector = @selector(plural);
  methods[13].selector = @selector(setSuffixWithNSString:);
  methods[14].selector = @selector(setSuffWithNSString:withInt:);
  methods[15].selector = @selector(lookup);
  methods[16].selector = @selector(pastTense);
  methods[17].selector = @selector(doubleCWithInt:);
  methods[18].selector = @selector(vowelInStem);
  methods[19].selector = @selector(aspect);
  methods[20].selector = @selector(ityEndings);
  methods[21].selector = @selector(nceEndings);
  methods[22].selector = @selector(nessEndings);
  methods[23].selector = @selector(ismEndings);
  methods[24].selector = @selector(mentEndings);
  methods[25].selector = @selector(izeEndings);
  methods[26].selector = @selector(ncyEndings);
  methods[27].selector = @selector(bleEndings);
  methods[28].selector = @selector(icEndings);
  methods[29].selector = @selector(ionEndings);
  methods[30].selector = @selector(erAndOrEndings);
  methods[31].selector = @selector(lyEndings);
  methods[32].selector = @selector(alEndings);
  methods[33].selector = @selector(iveEndings);
  methods[34].selector = @selector(init);
  methods[35].selector = @selector(stemWithNSString:);
  methods[36].selector = @selector(asString);
  methods[37].selector = @selector(asCharSequence);
  methods[38].selector = @selector(getString);
  methods[39].selector = @selector(getChars);
  methods[40].selector = @selector(getLength);
  methods[41].selector = @selector(matched);
  methods[42].selector = @selector(stemWithCharArray:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MaxWordLen", "I", .constantValue.asInt = OrgApacheLuceneAnalysisEnKStemmer_MaxWordLen, 0x1a, -1, -1, -1, -1 },
    { "exceptionWords", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 18, -1, -1 },
    { "directConflations", "[[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 19, -1, -1 },
    { "countryNationality", "[[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 20, -1, -1 },
    { "supplementDict", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 21, -1, -1 },
    { "properNouns", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 22, -1, -1 },
    { "dict_ht", "LOrgApacheLuceneAnalysisUtilCharArrayMap;", .constantValue.asLong = 0, 0x1a, -1, 23, 24, -1 },
    { "word_", "LOrgApacheLuceneAnalysisUtilOpenStringBuilder;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "j_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "k_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "matchedEntry_", "LOrgApacheLuceneAnalysisEnKStemmer_DictEntry;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "ization", "[C", .constantValue.asLong = 0, 0xa, -1, 25, -1, -1 },
    { "ition", "[C", .constantValue.asLong = 0, 0xa, -1, 26, -1, -1 },
    { "ation", "[C", .constantValue.asLong = 0, 0xa, -1, 27, -1, -1 },
    { "ication", "[C", .constantValue.asLong = 0, 0xa, -1, 28, -1, -1 },
    { "result_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "isVowel", "I", "isCons", "()Lorg/apache/lucene/analysis/util/CharArrayMap<Lorg/apache/lucene/analysis/en/KStemmer$DictEntry;>;", "isAlpha", "C", "endsIn", "[C", "CC", "CCC", "CCCC", "setSuffix", "LNSString;", "setSuff", "LNSString;I", "doubleC", "stem", "[CI", &OrgApacheLuceneAnalysisEnKStemmer_exceptionWords, &OrgApacheLuceneAnalysisEnKStemmer_directConflations, &OrgApacheLuceneAnalysisEnKStemmer_countryNationality, &OrgApacheLuceneAnalysisEnKStemmer_supplementDict, &OrgApacheLuceneAnalysisEnKStemmer_properNouns, &OrgApacheLuceneAnalysisEnKStemmer_dict_ht, "Lorg/apache/lucene/analysis/util/CharArrayMap<Lorg/apache/lucene/analysis/en/KStemmer$DictEntry;>;", &OrgApacheLuceneAnalysisEnKStemmer_ization, &OrgApacheLuceneAnalysisEnKStemmer_ition, &OrgApacheLuceneAnalysisEnKStemmer_ation, &OrgApacheLuceneAnalysisEnKStemmer_ication, "LOrgApacheLuceneAnalysisEnKStemmer_DictEntry;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisEnKStemmer = { "KStemmer", "org.apache.lucene.analysis.en", ptrTable, methods, fields, 7, 0x1, 43, 16, -1, 29, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisEnKStemmer;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneAnalysisEnKStemmer class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneAnalysisEnKStemmer_exceptionWords, [IOSObjectArray newArrayWithObjects:(id[]){ @"aide", @"bathe", @"caste", @"cute", @"dame", @"dime", @"doge", @"done", @"dune", @"envelope", @"gage", @"grille", @"grippe", @"lobe", @"mane", @"mare", @"nape", @"node", @"pane", @"pate", @"plane", @"pope", @"programme", @"quite", @"ripe", @"rote", @"rune", @"sage", @"severe", @"shoppe", @"sine", @"slime", @"snipe", @"steppe", @"suite", @"swinge", @"tare", @"tine", @"tope", @"tripe", @"twine" } count:41 type:NSString_class_()]);
    JreStrongAssignAndConsume(&OrgApacheLuceneAnalysisEnKStemmer_directConflations, [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ @"aging", @"age" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"going", @"go" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"goes", @"go" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"lying", @"lie" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"using", @"use" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"owing", @"owe" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"suing", @"sue" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"dying", @"die" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"tying", @"tie" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"vying", @"vie" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"aged", @"age" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"used", @"use" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"vied", @"vie" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"cued", @"cue" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"died", @"die" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"eyed", @"eye" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"hued", @"hue" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"iced", @"ice" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"lied", @"lie" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"owed", @"owe" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"sued", @"sue" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"toed", @"toe" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"tied", @"tie" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"does", @"do" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"doing", @"do" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"aeronautical", @"aeronautics" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"mathematical", @"mathematics" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"political", @"politics" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"metaphysical", @"metaphysics" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"cylindrical", @"cylinder" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"nazism", @"nazi" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"ambiguity", @"ambiguous" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"barbarity", @"barbarous" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"credulity", @"credulous" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"generosity", @"generous" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"spontaneity", @"spontaneous" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"unanimity", @"unanimous" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"voracity", @"voracious" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"fled", @"flee" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"miscarriage", @"miscarry" } count:2 type:NSString_class_()] } count:40 type:IOSClass_arrayType(NSString_class_(), 1)]);
    JreStrongAssignAndConsume(&OrgApacheLuceneAnalysisEnKStemmer_countryNationality, [IOSObjectArray newArrayWithObjects:(id[]){ [IOSObjectArray arrayWithObjects:(id[]){ @"afghan", @"afghanistan" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"african", @"africa" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"albanian", @"albania" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"algerian", @"algeria" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"american", @"america" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"andorran", @"andorra" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"angolan", @"angola" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"arabian", @"arabia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"argentine", @"argentina" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"armenian", @"armenia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"asian", @"asia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"australian", @"australia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"austrian", @"austria" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"azerbaijani", @"azerbaijan" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"azeri", @"azerbaijan" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"bangladeshi", @"bangladesh" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"belgian", @"belgium" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"bermudan", @"bermuda" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"bolivian", @"bolivia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"bosnian", @"bosnia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"botswanan", @"botswana" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"brazilian", @"brazil" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"british", @"britain" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"bulgarian", @"bulgaria" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"burmese", @"burma" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"californian", @"california" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"cambodian", @"cambodia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"canadian", @"canada" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"chadian", @"chad" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"chilean", @"chile" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"chinese", @"china" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"colombian", @"colombia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"croat", @"croatia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"croatian", @"croatia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"cuban", @"cuba" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"cypriot", @"cyprus" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"czechoslovakian", @"czechoslovakia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"danish", @"denmark" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"egyptian", @"egypt" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"equadorian", @"equador" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"eritrean", @"eritrea" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"estonian", @"estonia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"ethiopian", @"ethiopia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"european", @"europe" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"fijian", @"fiji" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"filipino", @"philippines" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"finnish", @"finland" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"french", @"france" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"gambian", @"gambia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"georgian", @"georgia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"german", @"germany" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"ghanian", @"ghana" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"greek", @"greece" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"grenadan", @"grenada" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"guamian", @"guam" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"guatemalan", @"guatemala" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"guinean", @"guinea" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"guyanan", @"guyana" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"haitian", @"haiti" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"hawaiian", @"hawaii" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"holland", @"dutch" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"honduran", @"honduras" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"hungarian", @"hungary" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"icelandic", @"iceland" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"indonesian", @"indonesia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"iranian", @"iran" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"iraqi", @"iraq" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"iraqui", @"iraq" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"irish", @"ireland" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"israeli", @"israel" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"italian", @"italy" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"jamaican", @"jamaica" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"japanese", @"japan" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"jordanian", @"jordan" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"kampuchean", @"cambodia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"kenyan", @"kenya" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"korean", @"korea" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"kuwaiti", @"kuwait" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"lankan", @"lanka" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"laotian", @"laos" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"latvian", @"latvia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"lebanese", @"lebanon" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"liberian", @"liberia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"libyan", @"libya" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"lithuanian", @"lithuania" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"macedonian", @"macedonia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"madagascan", @"madagascar" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"malaysian", @"malaysia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"maltese", @"malta" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"mauritanian", @"mauritania" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"mexican", @"mexico" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"micronesian", @"micronesia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"moldovan", @"moldova" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"monacan", @"monaco" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"mongolian", @"mongolia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"montenegran", @"montenegro" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"moroccan", @"morocco" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"myanmar", @"burma" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"namibian", @"namibia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"nepalese", @"nepal" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"nicaraguan", @"nicaragua" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"nigerian", @"nigeria" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"norwegian", @"norway" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"omani", @"oman" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"pakistani", @"pakistan" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"panamanian", @"panama" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"papuan", @"papua" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"paraguayan", @"paraguay" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"peruvian", @"peru" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"portuguese", @"portugal" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"romanian", @"romania" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"rumania", @"romania" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"rumanian", @"romania" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"russian", @"russia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"rwandan", @"rwanda" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"samoan", @"samoa" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"scottish", @"scotland" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"serb", @"serbia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"serbian", @"serbia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"siam", @"thailand" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"siamese", @"thailand" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"slovakia", @"slovak" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"slovakian", @"slovak" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"slovenian", @"slovenia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"somali", @"somalia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"somalian", @"somalia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"spanish", @"spain" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"swedish", @"sweden" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"swiss", @"switzerland" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"syrian", @"syria" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"taiwanese", @"taiwan" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"tanzanian", @"tanzania" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"texan", @"texas" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"thai", @"thailand" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"tunisian", @"tunisia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"turkish", @"turkey" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"ugandan", @"uganda" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"ukrainian", @"ukraine" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"uruguayan", @"uruguay" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"uzbek", @"uzbekistan" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"venezuelan", @"venezuela" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"vietnamese", @"viet" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"virginian", @"virginia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"yemeni", @"yemen" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"yugoslav", @"yugoslavia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"yugoslavian", @"yugoslavia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"zambian", @"zambia" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"zealander", @"zealand" } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ @"zimbabwean", @"zimbabwe" } count:2 type:NSString_class_()] } count:149 type:IOSClass_arrayType(NSString_class_(), 1)]);
    JreStrongAssignAndConsume(&OrgApacheLuceneAnalysisEnKStemmer_supplementDict, [IOSObjectArray newArrayWithObjects:(id[]){ @"aids", @"applicator", @"capacitor", @"digitize", @"electromagnet", @"ellipsoid", @"exosphere", @"extensible", @"ferromagnet", @"graphics", @"hydromagnet", @"polygraph", @"toroid", @"superconduct", @"backscatter", @"connectionism" } count:16 type:NSString_class_()]);
    JreStrongAssignAndConsume(&OrgApacheLuceneAnalysisEnKStemmer_properNouns, [IOSObjectArray newArrayWithObjects:(id[]){ @"abrams", @"achilles", @"acropolis", @"adams", @"agnes", @"aires", @"alexander", @"alexis", @"alfred", @"algiers", @"alps", @"amadeus", @"ames", @"amos", @"andes", @"angeles", @"annapolis", @"antilles", @"aquarius", @"archimedes", @"arkansas", @"asher", @"ashly", @"athens", @"atkins", @"atlantis", @"avis", @"bahamas", @"bangor", @"barbados", @"barger", @"bering", @"brahms", @"brandeis", @"brussels", @"bruxelles", @"cairns", @"camoros", @"camus", @"carlos", @"celts", @"chalker", @"charles", @"cheops", @"ching", @"christmas", @"cocos", @"collins", @"columbus", @"confucius", @"conners", @"connolly", @"copernicus", @"cramer", @"cyclops", @"cygnus", @"cyprus", @"dallas", @"damascus", @"daniels", @"davies", @"davis", @"decker", @"denning", @"dennis", @"descartes", @"dickens", @"doris", @"douglas", @"downs", @"dreyfus", @"dukakis", @"dulles", @"dumfries", @"ecclesiastes", @"edwards", @"emily", @"erasmus", @"euphrates", @"evans", @"everglades", @"fairbanks", @"federales", @"fisher", @"fitzsimmons", @"fleming", @"forbes", @"fowler", @"france", @"francis", @"goering", @"goodling", @"goths", @"grenadines", @"guiness", @"hades", @"harding", @"harris", @"hastings", @"hawkes", @"hawking", @"hayes", @"heights", @"hercules", @"himalayas", @"hippocrates", @"hobbs", @"holmes", @"honduras", @"hopkins", @"hughes", @"humphreys", @"illinois", @"indianapolis", @"inverness", @"iris", @"iroquois", @"irving", @"isaacs", @"italy", @"james", @"jarvis", @"jeffreys", @"jesus", @"jones", @"josephus", @"judas", @"julius", @"kansas", @"keynes", @"kipling", @"kiwanis", @"lansing", @"laos", @"leeds", @"levis", @"leviticus", @"lewis", @"louis", @"maccabees", @"madras", @"maimonides", @"maldive", @"massachusetts", @"matthews", @"mauritius", @"memphis", @"mercedes", @"midas", @"mingus", @"minneapolis", @"mohammed", @"moines", @"morris", @"moses", @"myers", @"myknos", @"nablus", @"nanjing", @"nantes", @"naples", @"neal", @"netherlands", @"nevis", @"nostradamus", @"oedipus", @"olympus", @"orleans", @"orly", @"papas", @"paris", @"parker", @"pauling", @"peking", @"pershing", @"peter", @"peters", @"philippines", @"phineas", @"pisces", @"pryor", @"pythagoras", @"queens", @"rabelais", @"ramses", @"reynolds", @"rhesus", @"rhodes", @"richards", @"robins", @"rodgers", @"rogers", @"rubens", @"sagittarius", @"seychelles", @"socrates", @"texas", @"thames", @"thomas", @"tiberias", @"tunis", @"venus", @"vilnius", @"wales", @"warner", @"wilkins", @"williams", @"wyoming", @"xmas", @"yonkers", @"zeus", @"frances", @"aarhus", @"adonis", @"andrews", @"angus", @"antares", @"aquinas", @"arcturus", @"ares", @"artemis", @"augustus", @"ayers", @"barnabas", @"barnes", @"becker", @"bejing", @"biggs", @"billings", @"boeing", @"boris", @"borroughs", @"briggs", @"buenos", @"calais", @"caracas", @"cassius", @"cerberus", @"ceres", @"cervantes", @"chantilly", @"chartres", @"chester", @"connally", @"conner", @"coors", @"cummings", @"curtis", @"daedalus", @"dionysus", @"dobbs", @"dolores", @"edmonds" } count:253 type:NSString_class_()]);
    JreStrongAssign(&OrgApacheLuceneAnalysisEnKStemmer_dict_ht, OrgApacheLuceneAnalysisEnKStemmer_initializeDictHash());
    JreStrongAssign(&OrgApacheLuceneAnalysisEnKStemmer_ization, [@"ization" java_toCharArray]);
    JreStrongAssign(&OrgApacheLuceneAnalysisEnKStemmer_ition, [@"ition" java_toCharArray]);
    JreStrongAssign(&OrgApacheLuceneAnalysisEnKStemmer_ation, [@"ation" java_toCharArray]);
    JreStrongAssign(&OrgApacheLuceneAnalysisEnKStemmer_ication, [@"ication" java_toCharArray]);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneAnalysisEnKStemmer)
  }
}

@end

jchar OrgApacheLuceneAnalysisEnKStemmer_finalChar(OrgApacheLuceneAnalysisEnKStemmer *self) {
  return [((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) charAtWithInt:self->k_];
}

jchar OrgApacheLuceneAnalysisEnKStemmer_penultChar(OrgApacheLuceneAnalysisEnKStemmer *self) {
  return [((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) charAtWithInt:self->k_ - 1];
}

jboolean OrgApacheLuceneAnalysisEnKStemmer_isVowelWithInt_(OrgApacheLuceneAnalysisEnKStemmer *self, jint index) {
  return !OrgApacheLuceneAnalysisEnKStemmer_isConsWithInt_(self, index);
}

jboolean OrgApacheLuceneAnalysisEnKStemmer_isConsWithInt_(OrgApacheLuceneAnalysisEnKStemmer *self, jint index) {
  jchar ch;
  ch = [((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) charAtWithInt:index];
  if ((ch == 'a') || (ch == 'e') || (ch == 'i') || (ch == 'o') || (ch == 'u')) return false;
  if ((ch != 'y') || (index == 0)) return true;
  else return (!OrgApacheLuceneAnalysisEnKStemmer_isConsWithInt_(self, index - 1));
}

OrgApacheLuceneAnalysisUtilCharArrayMap *OrgApacheLuceneAnalysisEnKStemmer_initializeDictHash() {
  OrgApacheLuceneAnalysisEnKStemmer_initialize();
  OrgApacheLuceneAnalysisEnKStemmer_DictEntry *defaultEntry;
  OrgApacheLuceneAnalysisEnKStemmer_DictEntry *entry_;
  OrgApacheLuceneAnalysisUtilCharArrayMap *d = create_OrgApacheLuceneAnalysisUtilCharArrayMap_initWithInt_withBoolean_(1000, false);
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(OrgApacheLuceneAnalysisEnKStemmer_exceptionWords))->size_; i++) {
    if (![d containsKeyWithJavaLangCharSequence:IOSObjectArray_Get(OrgApacheLuceneAnalysisEnKStemmer_exceptionWords, i)]) {
      entry_ = create_OrgApacheLuceneAnalysisEnKStemmer_DictEntry_initWithNSString_withBoolean_(IOSObjectArray_Get(OrgApacheLuceneAnalysisEnKStemmer_exceptionWords, i), true);
      [d putWithNSString:IOSObjectArray_Get(OrgApacheLuceneAnalysisEnKStemmer_exceptionWords, i) withId:entry_];
    }
    else {
      @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$$", @"Warning: Entry [", IOSObjectArray_Get(OrgApacheLuceneAnalysisEnKStemmer_exceptionWords, i), @"] already in dictionary 1"));
    }
  }
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(OrgApacheLuceneAnalysisEnKStemmer_directConflations))->size_; i++) {
    if (![d containsKeyWithJavaLangCharSequence:IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(OrgApacheLuceneAnalysisEnKStemmer_directConflations, i)), 0)]) {
      entry_ = create_OrgApacheLuceneAnalysisEnKStemmer_DictEntry_initWithNSString_withBoolean_(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(OrgApacheLuceneAnalysisEnKStemmer_directConflations, i)), 1), false);
      [d putWithNSString:IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(OrgApacheLuceneAnalysisEnKStemmer_directConflations, i)), 0) withId:entry_];
    }
    else {
      @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$$", @"Warning: Entry [", IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(OrgApacheLuceneAnalysisEnKStemmer_directConflations, i)), 0), @"] already in dictionary 2"));
    }
  }
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(OrgApacheLuceneAnalysisEnKStemmer_countryNationality))->size_; i++) {
    if (![d containsKeyWithJavaLangCharSequence:IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(OrgApacheLuceneAnalysisEnKStemmer_countryNationality, i)), 0)]) {
      entry_ = create_OrgApacheLuceneAnalysisEnKStemmer_DictEntry_initWithNSString_withBoolean_(IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(OrgApacheLuceneAnalysisEnKStemmer_countryNationality, i)), 1), false);
      [d putWithNSString:IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(OrgApacheLuceneAnalysisEnKStemmer_countryNationality, i)), 0) withId:entry_];
    }
    else {
      @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$$", @"Warning: Entry [", IOSObjectArray_Get(nil_chk(IOSObjectArray_Get(OrgApacheLuceneAnalysisEnKStemmer_countryNationality, i)), 0), @"] already in dictionary 3"));
    }
  }
  defaultEntry = create_OrgApacheLuceneAnalysisEnKStemmer_DictEntry_initWithNSString_withBoolean_(nil, false);
  IOSObjectArray *array;
  array = JreLoadStatic(OrgApacheLuceneAnalysisEnKStemData1, data);
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(array))->size_; i++) {
    if (![d containsKeyWithJavaLangCharSequence:IOSObjectArray_Get(array, i)]) {
      [d putWithNSString:IOSObjectArray_Get(array, i) withId:defaultEntry];
    }
    else {
      @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$$", @"Warning: Entry [", IOSObjectArray_Get(array, i), @"] already in dictionary 4"));
    }
  }
  array = JreLoadStatic(OrgApacheLuceneAnalysisEnKStemData2, data);
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(array))->size_; i++) {
    if (![d containsKeyWithJavaLangCharSequence:IOSObjectArray_Get(array, i)]) {
      [d putWithNSString:IOSObjectArray_Get(array, i) withId:defaultEntry];
    }
    else {
      @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$$", @"Warning: Entry [", IOSObjectArray_Get(array, i), @"] already in dictionary 4"));
    }
  }
  array = JreLoadStatic(OrgApacheLuceneAnalysisEnKStemData3, data);
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(array))->size_; i++) {
    if (![d containsKeyWithJavaLangCharSequence:IOSObjectArray_Get(array, i)]) {
      [d putWithNSString:IOSObjectArray_Get(array, i) withId:defaultEntry];
    }
    else {
      @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$$", @"Warning: Entry [", IOSObjectArray_Get(array, i), @"] already in dictionary 4"));
    }
  }
  array = JreLoadStatic(OrgApacheLuceneAnalysisEnKStemData4, data);
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(array))->size_; i++) {
    if (![d containsKeyWithJavaLangCharSequence:IOSObjectArray_Get(array, i)]) {
      [d putWithNSString:IOSObjectArray_Get(array, i) withId:defaultEntry];
    }
    else {
      @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$$", @"Warning: Entry [", IOSObjectArray_Get(array, i), @"] already in dictionary 4"));
    }
  }
  array = JreLoadStatic(OrgApacheLuceneAnalysisEnKStemData5, data);
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(array))->size_; i++) {
    if (![d containsKeyWithJavaLangCharSequence:IOSObjectArray_Get(array, i)]) {
      [d putWithNSString:IOSObjectArray_Get(array, i) withId:defaultEntry];
    }
    else {
      @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$$", @"Warning: Entry [", IOSObjectArray_Get(array, i), @"] already in dictionary 4"));
    }
  }
  array = JreLoadStatic(OrgApacheLuceneAnalysisEnKStemData6, data);
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(array))->size_; i++) {
    if (![d containsKeyWithJavaLangCharSequence:IOSObjectArray_Get(array, i)]) {
      [d putWithNSString:IOSObjectArray_Get(array, i) withId:defaultEntry];
    }
    else {
      @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$$", @"Warning: Entry [", IOSObjectArray_Get(array, i), @"] already in dictionary 4"));
    }
  }
  array = JreLoadStatic(OrgApacheLuceneAnalysisEnKStemData7, data);
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(array))->size_; i++) {
    if (![d containsKeyWithJavaLangCharSequence:IOSObjectArray_Get(array, i)]) {
      [d putWithNSString:IOSObjectArray_Get(array, i) withId:defaultEntry];
    }
    else {
      @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$$", @"Warning: Entry [", IOSObjectArray_Get(array, i), @"] already in dictionary 4"));
    }
  }
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(JreLoadStatic(OrgApacheLuceneAnalysisEnKStemData8, data)))->size_; i++) {
    if (![d containsKeyWithJavaLangCharSequence:IOSObjectArray_Get(JreLoadStatic(OrgApacheLuceneAnalysisEnKStemData8, data), i)]) {
      [d putWithNSString:IOSObjectArray_Get(nil_chk(JreLoadStatic(OrgApacheLuceneAnalysisEnKStemData8, data)), i) withId:defaultEntry];
    }
    else {
      @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$$", @"Warning: Entry [", IOSObjectArray_Get(nil_chk(JreLoadStatic(OrgApacheLuceneAnalysisEnKStemData8, data)), i), @"] already in dictionary 4"));
    }
  }
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(OrgApacheLuceneAnalysisEnKStemmer_supplementDict))->size_; i++) {
    if (![d containsKeyWithJavaLangCharSequence:IOSObjectArray_Get(OrgApacheLuceneAnalysisEnKStemmer_supplementDict, i)]) {
      [d putWithNSString:IOSObjectArray_Get(OrgApacheLuceneAnalysisEnKStemmer_supplementDict, i) withId:defaultEntry];
    }
    else {
      @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$$", @"Warning: Entry [", IOSObjectArray_Get(OrgApacheLuceneAnalysisEnKStemmer_supplementDict, i), @"] already in dictionary 5"));
    }
  }
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(OrgApacheLuceneAnalysisEnKStemmer_properNouns))->size_; i++) {
    if (![d containsKeyWithJavaLangCharSequence:IOSObjectArray_Get(OrgApacheLuceneAnalysisEnKStemmer_properNouns, i)]) {
      [d putWithNSString:IOSObjectArray_Get(OrgApacheLuceneAnalysisEnKStemmer_properNouns, i) withId:defaultEntry];
    }
    else {
      @throw create_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$$", @"Warning: Entry [", IOSObjectArray_Get(OrgApacheLuceneAnalysisEnKStemmer_properNouns, i), @"] already in dictionary 6"));
    }
  }
  return d;
}

jboolean OrgApacheLuceneAnalysisEnKStemmer_isAlphaWithChar_(OrgApacheLuceneAnalysisEnKStemmer *self, jchar ch) {
  return ch >= 'a' && ch <= 'z';
}

jint OrgApacheLuceneAnalysisEnKStemmer_stemLength(OrgApacheLuceneAnalysisEnKStemmer *self) {
  return self->j_ + 1;
}

jboolean OrgApacheLuceneAnalysisEnKStemmer_endsInWithCharArray_(OrgApacheLuceneAnalysisEnKStemmer *self, IOSCharArray *s) {
  if (((IOSCharArray *) nil_chk(s))->size_ > self->k_) return false;
  jint r = [((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) java_length] - s->size_;
  self->j_ = self->k_;
  for (jint r1 = r, i = 0; i < s->size_; i++, r1++) {
    if (IOSCharArray_Get(s, i) != [self->word_ charAtWithInt:r1]) return false;
  }
  self->j_ = r - 1;
  return true;
}

jboolean OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_(OrgApacheLuceneAnalysisEnKStemmer *self, jchar a, jchar b) {
  if (2 > self->k_) return false;
  if ([((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) charAtWithInt:self->k_ - 1] == a && [self->word_ charAtWithInt:self->k_] == b) {
    self->j_ = self->k_ - 2;
    return true;
  }
  return false;
}

jboolean OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_withChar_(OrgApacheLuceneAnalysisEnKStemmer *self, jchar a, jchar b, jchar c) {
  if (3 > self->k_) return false;
  if ([((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) charAtWithInt:self->k_ - 2] == a && [self->word_ charAtWithInt:self->k_ - 1] == b && [self->word_ charAtWithInt:self->k_] == c) {
    self->j_ = self->k_ - 3;
    return true;
  }
  return false;
}

jboolean OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_withChar_withChar_(OrgApacheLuceneAnalysisEnKStemmer *self, jchar a, jchar b, jchar c, jchar d) {
  if (4 > self->k_) return false;
  if ([((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) charAtWithInt:self->k_ - 3] == a && [self->word_ charAtWithInt:self->k_ - 2] == b && [self->word_ charAtWithInt:self->k_ - 1] == c && [self->word_ charAtWithInt:self->k_] == d) {
    self->j_ = self->k_ - 4;
    return true;
  }
  return false;
}

OrgApacheLuceneAnalysisEnKStemmer_DictEntry *OrgApacheLuceneAnalysisEnKStemmer_wordInDict(OrgApacheLuceneAnalysisEnKStemmer *self) {
  if (self->matchedEntry_ != nil) return self->matchedEntry_;
  OrgApacheLuceneAnalysisEnKStemmer_DictEntry *e = JreRetainedLocalValue([((OrgApacheLuceneAnalysisUtilCharArrayMap *) nil_chk(OrgApacheLuceneAnalysisEnKStemmer_dict_ht)) getWithCharArray:[((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) getArray] withInt:0 withInt:[self->word_ java_length]]);
  if (e != nil && !e->exception_) {
    JreStrongAssign(&self->matchedEntry_, e);
  }
  return e;
}

void OrgApacheLuceneAnalysisEnKStemmer_plural(OrgApacheLuceneAnalysisEnKStemmer *self) {
  if ([((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) charAtWithInt:self->k_] == 's') {
    if (OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_withChar_(self, 'i', 'e', 's')) {
      [self->word_ setLengthWithInt:self->j_ + 3];
      self->k_--;
      if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
      self->k_++;
      [self->word_ unsafeWriteWithChar:'s'];
      OrgApacheLuceneAnalysisEnKStemmer_setSuffixWithNSString_(self, @"y");
      OrgApacheLuceneAnalysisEnKStemmer_lookup(self);
    }
    else if (OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_(self, 'e', 's')) {
      [self->word_ setLengthWithInt:self->j_ + 2];
      self->k_--;
      jboolean tryE = self->j_ > 0 && !(([self->word_ charAtWithInt:self->j_] == 's') && ([self->word_ charAtWithInt:self->j_ - 1] == 's'));
      if (tryE && OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
      [self->word_ setLengthWithInt:self->j_ + 1];
      self->k_--;
      if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
      [self->word_ unsafeWriteWithChar:'e'];
      self->k_++;
      if (!tryE) OrgApacheLuceneAnalysisEnKStemmer_lookup(self);
      return;
    }
    else {
      if ([self->word_ java_length] > 3 && OrgApacheLuceneAnalysisEnKStemmer_penultChar(self) != 's' && !OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_withChar_(self, 'o', 'u', 's')) {
        [self->word_ setLengthWithInt:self->k_];
        self->k_--;
        OrgApacheLuceneAnalysisEnKStemmer_lookup(self);
      }
    }
  }
}

void OrgApacheLuceneAnalysisEnKStemmer_setSuffixWithNSString_(OrgApacheLuceneAnalysisEnKStemmer *self, NSString *s) {
  OrgApacheLuceneAnalysisEnKStemmer_setSuffWithNSString_withInt_(self, s, [((NSString *) nil_chk(s)) java_length]);
}

void OrgApacheLuceneAnalysisEnKStemmer_setSuffWithNSString_withInt_(OrgApacheLuceneAnalysisEnKStemmer *self, NSString *s, jint len) {
  [((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) setLengthWithInt:self->j_ + 1];
  for (jint l = 0; l < len; l++) {
    [self->word_ unsafeWriteWithChar:[((NSString *) nil_chk(s)) charAtWithInt:l]];
  }
  self->k_ = self->j_ + len;
}

jboolean OrgApacheLuceneAnalysisEnKStemmer_lookup(OrgApacheLuceneAnalysisEnKStemmer *self) {
  JreStrongAssign(&self->matchedEntry_, [((OrgApacheLuceneAnalysisUtilCharArrayMap *) nil_chk(OrgApacheLuceneAnalysisEnKStemmer_dict_ht)) getWithCharArray:[((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) getArray] withInt:0 withInt:[self->word_ size]]);
  return self->matchedEntry_ != nil;
}

void OrgApacheLuceneAnalysisEnKStemmer_pastTense(OrgApacheLuceneAnalysisEnKStemmer *self) {
  if ([((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) java_length] <= 4) return;
  if (OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_withChar_(self, 'i', 'e', 'd')) {
    [self->word_ setLengthWithInt:self->j_ + 3];
    self->k_--;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    self->k_++;
    [self->word_ unsafeWriteWithChar:'d'];
    OrgApacheLuceneAnalysisEnKStemmer_setSuffixWithNSString_(self, @"y");
    OrgApacheLuceneAnalysisEnKStemmer_lookup(self);
    return;
  }
  if (OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_(self, 'e', 'd') && OrgApacheLuceneAnalysisEnKStemmer_vowelInStem(self)) {
    [self->word_ setLengthWithInt:self->j_ + 2];
    self->k_ = self->j_ + 1;
    OrgApacheLuceneAnalysisEnKStemmer_DictEntry *entry_ = OrgApacheLuceneAnalysisEnKStemmer_wordInDict(self);
    if (entry_ != nil) if (!entry_->exception_) return;
    [self->word_ setLengthWithInt:self->j_ + 1];
    self->k_ = self->j_;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    if (OrgApacheLuceneAnalysisEnKStemmer_doubleCWithInt_(self, self->k_)) {
      [self->word_ setLengthWithInt:self->k_];
      self->k_--;
      if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
      [self->word_ unsafeWriteWithChar:[self->word_ charAtWithInt:self->k_]];
      self->k_++;
      OrgApacheLuceneAnalysisEnKStemmer_lookup(self);
      return;
    }
    if (([self->word_ charAtWithInt:0] == 'u') && ([self->word_ charAtWithInt:1] == 'n')) {
      [self->word_ unsafeWriteWithChar:'e'];
      [self->word_ unsafeWriteWithChar:'d'];
      self->k_ = self->k_ + 2;
      return;
    }
    [self->word_ setLengthWithInt:self->j_ + 1];
    [self->word_ unsafeWriteWithChar:'e'];
    self->k_ = self->j_ + 1;
    return;
  }
}

jboolean OrgApacheLuceneAnalysisEnKStemmer_doubleCWithInt_(OrgApacheLuceneAnalysisEnKStemmer *self, jint i) {
  if (i < 1) return false;
  if ([((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) charAtWithInt:i] != [self->word_ charAtWithInt:i - 1]) return false;
  return (OrgApacheLuceneAnalysisEnKStemmer_isConsWithInt_(self, i));
}

jboolean OrgApacheLuceneAnalysisEnKStemmer_vowelInStem(OrgApacheLuceneAnalysisEnKStemmer *self) {
  for (jint i = 0; i < OrgApacheLuceneAnalysisEnKStemmer_stemLength(self); i++) {
    if (OrgApacheLuceneAnalysisEnKStemmer_isVowelWithInt_(self, i)) return true;
  }
  return false;
}

void OrgApacheLuceneAnalysisEnKStemmer_aspect(OrgApacheLuceneAnalysisEnKStemmer *self) {
  if ([((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) java_length] <= 5) return;
  if (OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_withChar_(self, 'i', 'n', 'g') && OrgApacheLuceneAnalysisEnKStemmer_vowelInStem(self)) {
    [self->word_ setCharAtWithInt:self->j_ + 1 withChar:'e'];
    [self->word_ setLengthWithInt:self->j_ + 2];
    self->k_ = self->j_ + 1;
    OrgApacheLuceneAnalysisEnKStemmer_DictEntry *entry_ = OrgApacheLuceneAnalysisEnKStemmer_wordInDict(self);
    if (entry_ != nil) {
      if (!entry_->exception_) return;
    }
    [self->word_ setLengthWithInt:self->k_];
    self->k_--;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    if (OrgApacheLuceneAnalysisEnKStemmer_doubleCWithInt_(self, self->k_)) {
      self->k_--;
      [self->word_ setLengthWithInt:self->k_ + 1];
      if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
      [self->word_ unsafeWriteWithChar:[self->word_ charAtWithInt:self->k_]];
      self->k_++;
      OrgApacheLuceneAnalysisEnKStemmer_lookup(self);
      return;
    }
    if ((self->j_ > 0) && OrgApacheLuceneAnalysisEnKStemmer_isConsWithInt_(self, self->j_) && OrgApacheLuceneAnalysisEnKStemmer_isConsWithInt_(self, self->j_ - 1)) {
      self->k_ = self->j_;
      [self->word_ setLengthWithInt:self->k_ + 1];
      return;
    }
    [self->word_ setLengthWithInt:self->j_ + 1];
    [self->word_ unsafeWriteWithChar:'e'];
    self->k_ = self->j_ + 1;
    return;
  }
}

void OrgApacheLuceneAnalysisEnKStemmer_ityEndings(OrgApacheLuceneAnalysisEnKStemmer *self) {
  jint old_k = self->k_;
  if (OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_withChar_(self, 'i', 't', 'y')) {
    [((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) setLengthWithInt:self->j_ + 1];
    self->k_ = self->j_;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ unsafeWriteWithChar:'e'];
    self->k_ = self->j_ + 1;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ setCharAtWithInt:self->j_ + 1 withChar:'i'];
    [self->word_ appendWithJavaLangCharSequence:@"ty"];
    self->k_ = old_k;
    if ((self->j_ > 0) && ([self->word_ charAtWithInt:self->j_ - 1] == 'i') && ([self->word_ charAtWithInt:self->j_] == 'l')) {
      [self->word_ setLengthWithInt:self->j_ - 1];
      [self->word_ appendWithJavaLangCharSequence:@"le"];
      self->k_ = self->j_;
      OrgApacheLuceneAnalysisEnKStemmer_lookup(self);
      return;
    }
    if ((self->j_ > 0) && ([self->word_ charAtWithInt:self->j_ - 1] == 'i') && ([self->word_ charAtWithInt:self->j_] == 'v')) {
      [self->word_ setLengthWithInt:self->j_ + 1];
      [self->word_ unsafeWriteWithChar:'e'];
      self->k_ = self->j_ + 1;
      OrgApacheLuceneAnalysisEnKStemmer_lookup(self);
      return;
    }
    if ((self->j_ > 0) && ([self->word_ charAtWithInt:self->j_ - 1] == 'a') && ([self->word_ charAtWithInt:self->j_] == 'l')) {
      [self->word_ setLengthWithInt:self->j_ + 1];
      self->k_ = self->j_;
      OrgApacheLuceneAnalysisEnKStemmer_lookup(self);
      return;
    }
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ setLengthWithInt:self->j_ + 1];
    self->k_ = self->j_;
    return;
  }
}

void OrgApacheLuceneAnalysisEnKStemmer_nceEndings(OrgApacheLuceneAnalysisEnKStemmer *self) {
  jint old_k = self->k_;
  jchar word_char;
  if (OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_withChar_(self, 'n', 'c', 'e')) {
    word_char = [((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) charAtWithInt:self->j_];
    if (!((word_char == 'e') || (word_char == 'a'))) return;
    [self->word_ setLengthWithInt:self->j_];
    [self->word_ unsafeWriteWithChar:'e'];
    self->k_ = self->j_;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ setLengthWithInt:self->j_];
    self->k_ = self->j_ - 1;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ unsafeWriteWithChar:word_char];
    [self->word_ appendWithJavaLangCharSequence:@"nce"];
    self->k_ = old_k;
  }
  return;
}

void OrgApacheLuceneAnalysisEnKStemmer_nessEndings(OrgApacheLuceneAnalysisEnKStemmer *self) {
  if (OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_withChar_withChar_(self, 'n', 'e', 's', 's')) {
    [((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) setLengthWithInt:self->j_ + 1];
    self->k_ = self->j_;
    if ([self->word_ charAtWithInt:self->j_] == 'i') [self->word_ setCharAtWithInt:self->j_ withChar:'y'];
    OrgApacheLuceneAnalysisEnKStemmer_lookup(self);
  }
  return;
}

void OrgApacheLuceneAnalysisEnKStemmer_ismEndings(OrgApacheLuceneAnalysisEnKStemmer *self) {
  if (OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_withChar_(self, 'i', 's', 'm')) {
    [((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) setLengthWithInt:self->j_ + 1];
    self->k_ = self->j_;
    OrgApacheLuceneAnalysisEnKStemmer_lookup(self);
  }
  return;
}

void OrgApacheLuceneAnalysisEnKStemmer_mentEndings(OrgApacheLuceneAnalysisEnKStemmer *self) {
  jint old_k = self->k_;
  if (OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_withChar_withChar_(self, 'm', 'e', 'n', 't')) {
    [((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) setLengthWithInt:self->j_ + 1];
    self->k_ = self->j_;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ appendWithJavaLangCharSequence:@"ment"];
    self->k_ = old_k;
  }
  return;
}

void OrgApacheLuceneAnalysisEnKStemmer_izeEndings(OrgApacheLuceneAnalysisEnKStemmer *self) {
  jint old_k = self->k_;
  if (OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_withChar_(self, 'i', 'z', 'e')) {
    [((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) setLengthWithInt:self->j_ + 1];
    self->k_ = self->j_;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ unsafeWriteWithChar:'i'];
    if (OrgApacheLuceneAnalysisEnKStemmer_doubleCWithInt_(self, self->j_)) {
      [self->word_ setLengthWithInt:self->j_];
      self->k_ = self->j_ - 1;
      if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
      [self->word_ unsafeWriteWithChar:[self->word_ charAtWithInt:self->j_ - 1]];
    }
    [self->word_ setLengthWithInt:self->j_ + 1];
    [self->word_ unsafeWriteWithChar:'e'];
    self->k_ = self->j_ + 1;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ setLengthWithInt:self->j_ + 1];
    [self->word_ appendWithJavaLangCharSequence:@"ize"];
    self->k_ = old_k;
  }
  return;
}

void OrgApacheLuceneAnalysisEnKStemmer_ncyEndings(OrgApacheLuceneAnalysisEnKStemmer *self) {
  if (OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_withChar_(self, 'n', 'c', 'y')) {
    if (!(([((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) charAtWithInt:self->j_] == 'e') || ([self->word_ charAtWithInt:self->j_] == 'a'))) return;
    [self->word_ setCharAtWithInt:self->j_ + 2 withChar:'t'];
    [self->word_ setLengthWithInt:self->j_ + 3];
    self->k_ = self->j_ + 2;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ setCharAtWithInt:self->j_ + 2 withChar:'c'];
    [self->word_ unsafeWriteWithChar:'e'];
    self->k_ = self->j_ + 3;
    OrgApacheLuceneAnalysisEnKStemmer_lookup(self);
  }
  return;
}

void OrgApacheLuceneAnalysisEnKStemmer_bleEndings(OrgApacheLuceneAnalysisEnKStemmer *self) {
  jint old_k = self->k_;
  jchar word_char;
  if (OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_withChar_(self, 'b', 'l', 'e')) {
    if (!(([((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) charAtWithInt:self->j_] == 'a') || ([self->word_ charAtWithInt:self->j_] == 'i'))) return;
    word_char = [self->word_ charAtWithInt:self->j_];
    [self->word_ setLengthWithInt:self->j_];
    self->k_ = self->j_ - 1;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    if (OrgApacheLuceneAnalysisEnKStemmer_doubleCWithInt_(self, self->k_)) {
      [self->word_ setLengthWithInt:self->k_];
      self->k_--;
      if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
      self->k_++;
      [self->word_ unsafeWriteWithChar:[self->word_ charAtWithInt:self->k_ - 1]];
    }
    [self->word_ setLengthWithInt:self->j_];
    [self->word_ unsafeWriteWithChar:'e'];
    self->k_ = self->j_;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ setLengthWithInt:self->j_];
    [self->word_ appendWithJavaLangCharSequence:@"ate"];
    self->k_ = self->j_ + 2;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ setLengthWithInt:self->j_];
    [self->word_ unsafeWriteWithChar:word_char];
    [self->word_ appendWithJavaLangCharSequence:@"ble"];
    self->k_ = old_k;
  }
  return;
}

void OrgApacheLuceneAnalysisEnKStemmer_icEndings(OrgApacheLuceneAnalysisEnKStemmer *self) {
  if (OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_(self, 'i', 'c')) {
    [((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) setLengthWithInt:self->j_ + 3];
    [self->word_ appendWithJavaLangCharSequence:@"al"];
    self->k_ = self->j_ + 4;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ setCharAtWithInt:self->j_ + 1 withChar:'y'];
    [self->word_ setLengthWithInt:self->j_ + 2];
    self->k_ = self->j_ + 1;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ setCharAtWithInt:self->j_ + 1 withChar:'e'];
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ setLengthWithInt:self->j_ + 1];
    self->k_ = self->j_;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ appendWithJavaLangCharSequence:@"ic"];
    self->k_ = self->j_ + 2;
  }
  return;
}

void OrgApacheLuceneAnalysisEnKStemmer_ionEndings(OrgApacheLuceneAnalysisEnKStemmer *self) {
  jint old_k = self->k_;
  if (!OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_withChar_(self, 'i', 'o', 'n')) {
    return;
  }
  if (OrgApacheLuceneAnalysisEnKStemmer_endsInWithCharArray_(self, OrgApacheLuceneAnalysisEnKStemmer_ization)) {
    [((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) setLengthWithInt:self->j_ + 3];
    [self->word_ unsafeWriteWithChar:'e'];
    self->k_ = self->j_ + 3;
    OrgApacheLuceneAnalysisEnKStemmer_lookup(self);
    return;
  }
  if (OrgApacheLuceneAnalysisEnKStemmer_endsInWithCharArray_(self, OrgApacheLuceneAnalysisEnKStemmer_ition)) {
    [((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) setLengthWithInt:self->j_ + 1];
    [self->word_ unsafeWriteWithChar:'e'];
    self->k_ = self->j_ + 1;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ setLengthWithInt:self->j_ + 1];
    [self->word_ appendWithJavaLangCharSequence:@"ition"];
    self->k_ = old_k;
  }
  else if (OrgApacheLuceneAnalysisEnKStemmer_endsInWithCharArray_(self, OrgApacheLuceneAnalysisEnKStemmer_ation)) {
    [((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) setLengthWithInt:self->j_ + 3];
    [self->word_ unsafeWriteWithChar:'e'];
    self->k_ = self->j_ + 3;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ setLengthWithInt:self->j_ + 1];
    [self->word_ unsafeWriteWithChar:'e'];
    self->k_ = self->j_ + 1;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ setLengthWithInt:self->j_ + 1];
    self->k_ = self->j_;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ setLengthWithInt:self->j_ + 1];
    [self->word_ appendWithJavaLangCharSequence:@"ation"];
    self->k_ = old_k;
  }
  if (OrgApacheLuceneAnalysisEnKStemmer_endsInWithCharArray_(self, OrgApacheLuceneAnalysisEnKStemmer_ication)) {
    [((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) setLengthWithInt:self->j_ + 1];
    [self->word_ unsafeWriteWithChar:'y'];
    self->k_ = self->j_ + 1;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ setLengthWithInt:self->j_ + 1];
    [self->word_ appendWithJavaLangCharSequence:@"ication"];
    self->k_ = old_k;
  }
  {
    self->j_ = self->k_ - 3;
    [((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) setLengthWithInt:self->j_ + 1];
    [self->word_ unsafeWriteWithChar:'e'];
    self->k_ = self->j_ + 1;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ setLengthWithInt:self->j_ + 1];
    self->k_ = self->j_;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ setLengthWithInt:self->j_ + 1];
    [self->word_ appendWithJavaLangCharSequence:@"ion"];
    self->k_ = old_k;
  }
  return;
}

void OrgApacheLuceneAnalysisEnKStemmer_erAndOrEndings(OrgApacheLuceneAnalysisEnKStemmer *self) {
  jint old_k = self->k_;
  if ([((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) charAtWithInt:self->k_] != 'r') return;
  jchar word_char;
  if (OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_withChar_withChar_(self, 'i', 'z', 'e', 'r')) {
    [self->word_ setLengthWithInt:self->j_ + 4];
    self->k_ = self->j_ + 3;
    OrgApacheLuceneAnalysisEnKStemmer_lookup(self);
    return;
  }
  if (OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_(self, 'e', 'r') || OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_(self, 'o', 'r')) {
    word_char = [self->word_ charAtWithInt:self->j_ + 1];
    if (OrgApacheLuceneAnalysisEnKStemmer_doubleCWithInt_(self, self->j_)) {
      [self->word_ setLengthWithInt:self->j_];
      self->k_ = self->j_ - 1;
      if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
      [self->word_ unsafeWriteWithChar:[self->word_ charAtWithInt:self->j_ - 1]];
    }
    if ([self->word_ charAtWithInt:self->j_] == 'i') {
      [self->word_ setCharAtWithInt:self->j_ withChar:'y'];
      [self->word_ setLengthWithInt:self->j_ + 1];
      self->k_ = self->j_;
      if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
      [self->word_ setCharAtWithInt:self->j_ withChar:'i'];
      [self->word_ unsafeWriteWithChar:'e'];
    }
    if ([self->word_ charAtWithInt:self->j_] == 'e') {
      [self->word_ setLengthWithInt:self->j_];
      self->k_ = self->j_ - 1;
      if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
      [self->word_ unsafeWriteWithChar:'e'];
    }
    [self->word_ setLengthWithInt:self->j_ + 2];
    self->k_ = self->j_ + 1;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ setLengthWithInt:self->j_ + 1];
    self->k_ = self->j_;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ unsafeWriteWithChar:'e'];
    self->k_ = self->j_ + 1;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ setLengthWithInt:self->j_ + 1];
    [self->word_ unsafeWriteWithChar:word_char];
    [self->word_ unsafeWriteWithChar:'r'];
    self->k_ = old_k;
  }
}

void OrgApacheLuceneAnalysisEnKStemmer_lyEndings(OrgApacheLuceneAnalysisEnKStemmer *self) {
  jint old_k = self->k_;
  if (OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_(self, 'l', 'y')) {
    [((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) setCharAtWithInt:self->j_ + 2 withChar:'e'];
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ setCharAtWithInt:self->j_ + 2 withChar:'y'];
    [self->word_ setLengthWithInt:self->j_ + 1];
    self->k_ = self->j_;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    if ((self->j_ > 0) && ([self->word_ charAtWithInt:self->j_ - 1] == 'a') && ([self->word_ charAtWithInt:self->j_] == 'l')) return;
    [self->word_ appendWithJavaLangCharSequence:@"ly"];
    self->k_ = old_k;
    if ((self->j_ > 0) && ([self->word_ charAtWithInt:self->j_ - 1] == 'a') && ([self->word_ charAtWithInt:self->j_] == 'b')) {
      [self->word_ setCharAtWithInt:self->j_ + 2 withChar:'e'];
      self->k_ = self->j_ + 2;
      return;
    }
    if ([self->word_ charAtWithInt:self->j_] == 'i') {
      [self->word_ setLengthWithInt:self->j_];
      [self->word_ unsafeWriteWithChar:'y'];
      self->k_ = self->j_;
      if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
      [self->word_ setLengthWithInt:self->j_];
      [self->word_ appendWithJavaLangCharSequence:@"ily"];
      self->k_ = old_k;
    }
    [self->word_ setLengthWithInt:self->j_ + 1];
    self->k_ = self->j_;
  }
  return;
}

void OrgApacheLuceneAnalysisEnKStemmer_alEndings(OrgApacheLuceneAnalysisEnKStemmer *self) {
  jint old_k = self->k_;
  if ([((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) java_length] < 4) return;
  if (OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_(self, 'a', 'l')) {
    [self->word_ setLengthWithInt:self->j_ + 1];
    self->k_ = self->j_;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    if (OrgApacheLuceneAnalysisEnKStemmer_doubleCWithInt_(self, self->j_)) {
      [self->word_ setLengthWithInt:self->j_];
      self->k_ = self->j_ - 1;
      if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
      [self->word_ unsafeWriteWithChar:[self->word_ charAtWithInt:self->j_ - 1]];
    }
    [self->word_ setLengthWithInt:self->j_ + 1];
    [self->word_ unsafeWriteWithChar:'e'];
    self->k_ = self->j_ + 1;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ setLengthWithInt:self->j_ + 1];
    [self->word_ appendWithJavaLangCharSequence:@"um"];
    self->k_ = self->j_ + 2;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ setLengthWithInt:self->j_ + 1];
    [self->word_ appendWithJavaLangCharSequence:@"al"];
    self->k_ = old_k;
    if ((self->j_ > 0) && ([self->word_ charAtWithInt:self->j_ - 1] == 'i') && ([self->word_ charAtWithInt:self->j_] == 'c')) {
      [self->word_ setLengthWithInt:self->j_ - 1];
      self->k_ = self->j_ - 2;
      if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
      [self->word_ setLengthWithInt:self->j_ - 1];
      [self->word_ unsafeWriteWithChar:'y'];
      self->k_ = self->j_ - 1;
      if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
      [self->word_ setLengthWithInt:self->j_ - 1];
      [self->word_ appendWithJavaLangCharSequence:@"ic"];
      self->k_ = self->j_;
      OrgApacheLuceneAnalysisEnKStemmer_lookup(self);
      return;
    }
    if ([self->word_ charAtWithInt:self->j_] == 'i') {
      [self->word_ setLengthWithInt:self->j_];
      self->k_ = self->j_ - 1;
      if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
      [self->word_ appendWithJavaLangCharSequence:@"ial"];
      self->k_ = old_k;
      OrgApacheLuceneAnalysisEnKStemmer_lookup(self);
    }
  }
  return;
}

void OrgApacheLuceneAnalysisEnKStemmer_iveEndings(OrgApacheLuceneAnalysisEnKStemmer *self) {
  jint old_k = self->k_;
  if (OrgApacheLuceneAnalysisEnKStemmer_endsInWithChar_withChar_withChar_(self, 'i', 'v', 'e')) {
    [((OrgApacheLuceneAnalysisUtilOpenStringBuilder *) nil_chk(self->word_)) setLengthWithInt:self->j_ + 1];
    self->k_ = self->j_;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ unsafeWriteWithChar:'e'];
    self->k_ = self->j_ + 1;
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ setLengthWithInt:self->j_ + 1];
    [self->word_ appendWithJavaLangCharSequence:@"ive"];
    if ((self->j_ > 0) && ([self->word_ charAtWithInt:self->j_ - 1] == 'a') && ([self->word_ charAtWithInt:self->j_] == 't')) {
      [self->word_ setCharAtWithInt:self->j_ - 1 withChar:'e'];
      [self->word_ setLengthWithInt:self->j_];
      self->k_ = self->j_ - 1;
      if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
      [self->word_ setLengthWithInt:self->j_ - 1];
      if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
      [self->word_ appendWithJavaLangCharSequence:@"ative"];
      self->k_ = old_k;
    }
    [self->word_ setCharAtWithInt:self->j_ + 2 withChar:'o'];
    [self->word_ setCharAtWithInt:self->j_ + 3 withChar:'n'];
    if (OrgApacheLuceneAnalysisEnKStemmer_lookup(self)) return;
    [self->word_ setCharAtWithInt:self->j_ + 2 withChar:'v'];
    [self->word_ setCharAtWithInt:self->j_ + 3 withChar:'e'];
    self->k_ = old_k;
  }
  return;
}

void OrgApacheLuceneAnalysisEnKStemmer_init(OrgApacheLuceneAnalysisEnKStemmer *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->word_, new_OrgApacheLuceneAnalysisUtilOpenStringBuilder_init());
  JreStrongAssign(&self->matchedEntry_, nil);
}

OrgApacheLuceneAnalysisEnKStemmer *new_OrgApacheLuceneAnalysisEnKStemmer_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisEnKStemmer, init)
}

OrgApacheLuceneAnalysisEnKStemmer *create_OrgApacheLuceneAnalysisEnKStemmer_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisEnKStemmer, init)
}

jboolean OrgApacheLuceneAnalysisEnKStemmer_matched(OrgApacheLuceneAnalysisEnKStemmer *self) {
  return self->matchedEntry_ != nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisEnKStemmer)

@implementation OrgApacheLuceneAnalysisEnKStemmer_DictEntry

- (instancetype)initWithNSString:(NSString *)root
                     withBoolean:(jboolean)isException {
  OrgApacheLuceneAnalysisEnKStemmer_DictEntry_initWithNSString_withBoolean_(self, root, isException);
  return self;
}

- (void)dealloc {
  RELEASE_(root_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "exception_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "root_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;Z", "LOrgApacheLuceneAnalysisEnKStemmer;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisEnKStemmer_DictEntry = { "DictEntry", "org.apache.lucene.analysis.en", ptrTable, methods, fields, 7, 0x8, 1, 2, 1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisEnKStemmer_DictEntry;
}

@end

void OrgApacheLuceneAnalysisEnKStemmer_DictEntry_initWithNSString_withBoolean_(OrgApacheLuceneAnalysisEnKStemmer_DictEntry *self, NSString *root, jboolean isException) {
  NSObject_init(self);
  JreStrongAssign(&self->root_, root);
  self->exception_ = isException;
}

OrgApacheLuceneAnalysisEnKStemmer_DictEntry *new_OrgApacheLuceneAnalysisEnKStemmer_DictEntry_initWithNSString_withBoolean_(NSString *root, jboolean isException) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisEnKStemmer_DictEntry, initWithNSString_withBoolean_, root, isException)
}

OrgApacheLuceneAnalysisEnKStemmer_DictEntry *create_OrgApacheLuceneAnalysisEnKStemmer_DictEntry_initWithNSString_withBoolean_(NSString *root, jboolean isException) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisEnKStemmer_DictEntry, initWithNSString_withBoolean_, root, isException)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisEnKStemmer_DictEntry)
