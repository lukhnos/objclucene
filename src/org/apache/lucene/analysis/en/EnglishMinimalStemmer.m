//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/en/EnglishMinimalStemmer.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/analysis/en/EnglishMinimalStemmer.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/en/EnglishMinimalStemmer must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneAnalysisEnEnglishMinimalStemmer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisEnEnglishMinimalStemmer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)stemWithCharArray:(IOSCharArray *)s
                  withInt:(jint)len {
  if (len < 3 || IOSCharArray_Get(nil_chk(s), len - 1) != 's') return len;
  switch (IOSCharArray_Get(nil_chk(s), len - 2)) {
    case 'u':
    case 's':
    return len;
    case 'e':
    if (len > 3 && IOSCharArray_Get(s, len - 3) == 'i' && IOSCharArray_Get(s, len - 4) != 'a' && IOSCharArray_Get(s, len - 4) != 'e') {
      *IOSCharArray_GetRef(s, len - 3) = 'y';
      return len - 2;
    }
    if (IOSCharArray_Get(s, len - 3) == 'i' || IOSCharArray_Get(s, len - 3) == 'a' || IOSCharArray_Get(s, len - 3) == 'o' || IOSCharArray_Get(s, len - 3) == 'e') return len;
    default:
    return len - 1;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(stemWithCharArray:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "stem", "[CI" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisEnEnglishMinimalStemmer = { "EnglishMinimalStemmer", "org.apache.lucene.analysis.en", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisEnEnglishMinimalStemmer;
}

@end

void OrgApacheLuceneAnalysisEnEnglishMinimalStemmer_init(OrgApacheLuceneAnalysisEnEnglishMinimalStemmer *self) {
  NSObject_init(self);
}

OrgApacheLuceneAnalysisEnEnglishMinimalStemmer *new_OrgApacheLuceneAnalysisEnEnglishMinimalStemmer_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisEnEnglishMinimalStemmer, init)
}

OrgApacheLuceneAnalysisEnEnglishMinimalStemmer *create_OrgApacheLuceneAnalysisEnEnglishMinimalStemmer_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisEnEnglishMinimalStemmer, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisEnEnglishMinimalStemmer)
