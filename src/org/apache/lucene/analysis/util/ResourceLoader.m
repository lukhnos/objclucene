//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/util/ResourceLoader.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/analysis/util/ResourceLoader.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/util/ResourceLoader must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneAnalysisUtilResourceLoader : NSObject

@end

@implementation OrgApacheLuceneAnalysisUtilResourceLoader

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaIoInputStream;", 0x401, 0, 1, 2, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x401, 3, 4, -1, 5, -1, -1 },
    { NULL, "LNSObject;", 0x401, 6, 4, -1, 7, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(openResourceWithNSString:);
  methods[1].selector = @selector(findClassWithNSString:withIOSClass:);
  methods[2].selector = @selector(newInstanceWithNSString:withIOSClass:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "openResource", "LNSString;", "LJavaIoIOException;", "findClass", "LNSString;LIOSClass;", "<T:Ljava/lang/Object;>(Ljava/lang/String;Ljava/lang/Class<TT;>;)Ljava/lang/Class<+TT;>;", "newInstance", "<T:Ljava/lang/Object;>(Ljava/lang/String;Ljava/lang/Class<TT;>;)TT;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisUtilResourceLoader = { "ResourceLoader", "org.apache.lucene.analysis.util", ptrTable, methods, NULL, 7, 0x609, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisUtilResourceLoader;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisUtilResourceLoader)
