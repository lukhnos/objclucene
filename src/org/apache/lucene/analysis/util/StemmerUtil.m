//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/util/StemmerUtil.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/System.h"
#include "org/apache/lucene/analysis/util/StemmerUtil.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/util/StemmerUtil must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneAnalysisUtilStemmerUtil ()

/*!
 @brief no instance
 */
- (instancetype)init;

@end

__attribute__((unused)) static void OrgApacheLuceneAnalysisUtilStemmerUtil_init(OrgApacheLuceneAnalysisUtilStemmerUtil *self);

__attribute__((unused)) static OrgApacheLuceneAnalysisUtilStemmerUtil *new_OrgApacheLuceneAnalysisUtilStemmerUtil_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneAnalysisUtilStemmerUtil *create_OrgApacheLuceneAnalysisUtilStemmerUtil_init(void);

@implementation OrgApacheLuceneAnalysisUtilStemmerUtil

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisUtilStemmerUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jboolean)startsWithWithCharArray:(IOSCharArray *)s
                            withInt:(jint)len
                       withNSString:(NSString *)prefix {
  return OrgApacheLuceneAnalysisUtilStemmerUtil_startsWithWithCharArray_withInt_withNSString_(s, len, prefix);
}

+ (jboolean)endsWithWithCharArray:(IOSCharArray *)s
                          withInt:(jint)len
                     withNSString:(NSString *)suffix {
  return OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(s, len, suffix);
}

+ (jboolean)endsWithWithCharArray:(IOSCharArray *)s
                          withInt:(jint)len
                    withCharArray:(IOSCharArray *)suffix {
  return OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withCharArray_(s, len, suffix);
}

+ (jint)delete__WithCharArray:(IOSCharArray *)s
                      withInt:(jint)pos
                      withInt:(jint)len {
  return OrgApacheLuceneAnalysisUtilStemmerUtil_delete__WithCharArray_withInt_withInt_(s, pos, len);
}

+ (jint)deleteNWithCharArray:(IOSCharArray *)s
                     withInt:(jint)pos
                     withInt:(jint)len
                     withInt:(jint)nChars {
  return OrgApacheLuceneAnalysisUtilStemmerUtil_deleteNWithCharArray_withInt_withInt_withInt_(s, pos, len, nChars);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(startsWithWithCharArray:withInt:withNSString:);
  methods[2].selector = @selector(endsWithWithCharArray:withInt:withNSString:);
  methods[3].selector = @selector(endsWithWithCharArray:withInt:withCharArray:);
  methods[4].selector = @selector(delete__WithCharArray:withInt:withInt:);
  methods[5].selector = @selector(deleteNWithCharArray:withInt:withInt:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "startsWith", "[CILNSString;", "endsWith", "[CI[C", "delete", "[CII", "deleteN", "[CIII" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisUtilStemmerUtil = { "StemmerUtil", "org.apache.lucene.analysis.util", ptrTable, methods, NULL, 7, 0x1, 6, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisUtilStemmerUtil;
}

@end

void OrgApacheLuceneAnalysisUtilStemmerUtil_init(OrgApacheLuceneAnalysisUtilStemmerUtil *self) {
  NSObject_init(self);
}

OrgApacheLuceneAnalysisUtilStemmerUtil *new_OrgApacheLuceneAnalysisUtilStemmerUtil_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisUtilStemmerUtil, init)
}

OrgApacheLuceneAnalysisUtilStemmerUtil *create_OrgApacheLuceneAnalysisUtilStemmerUtil_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisUtilStemmerUtil, init)
}

jboolean OrgApacheLuceneAnalysisUtilStemmerUtil_startsWithWithCharArray_withInt_withNSString_(IOSCharArray *s, jint len, NSString *prefix) {
  OrgApacheLuceneAnalysisUtilStemmerUtil_initialize();
  jint prefixLen = [((NSString *) nil_chk(prefix)) java_length];
  if (prefixLen > len) return false;
  for (jint i = 0; i < prefixLen; i++) if (IOSCharArray_Get(nil_chk(s), i) != [prefix charAtWithInt:i]) return false;
  return true;
}

jboolean OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withNSString_(IOSCharArray *s, jint len, NSString *suffix) {
  OrgApacheLuceneAnalysisUtilStemmerUtil_initialize();
  jint suffixLen = [((NSString *) nil_chk(suffix)) java_length];
  if (suffixLen > len) return false;
  for (jint i = suffixLen - 1; i >= 0; i--) if (IOSCharArray_Get(nil_chk(s), len - (suffixLen - i)) != [suffix charAtWithInt:i]) return false;
  return true;
}

jboolean OrgApacheLuceneAnalysisUtilStemmerUtil_endsWithWithCharArray_withInt_withCharArray_(IOSCharArray *s, jint len, IOSCharArray *suffix) {
  OrgApacheLuceneAnalysisUtilStemmerUtil_initialize();
  jint suffixLen = ((IOSCharArray *) nil_chk(suffix))->size_;
  if (suffixLen > len) return false;
  for (jint i = suffixLen - 1; i >= 0; i--) if (IOSCharArray_Get(nil_chk(s), len - (suffixLen - i)) != IOSCharArray_Get(suffix, i)) return false;
  return true;
}

jint OrgApacheLuceneAnalysisUtilStemmerUtil_delete__WithCharArray_withInt_withInt_(IOSCharArray *s, jint pos, jint len) {
  OrgApacheLuceneAnalysisUtilStemmerUtil_initialize();
  JreAssert(pos < len, @"org/apache/lucene/analysis/util/StemmerUtil.java:94 condition failed: assert pos < len;");
  if (pos < len - 1) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(s, pos + 1, s, pos, len - pos - 1);
  }
  return len - 1;
}

jint OrgApacheLuceneAnalysisUtilStemmerUtil_deleteNWithCharArray_withInt_withInt_withInt_(IOSCharArray *s, jint pos, jint len, jint nChars) {
  OrgApacheLuceneAnalysisUtilStemmerUtil_initialize();
  JreAssert(pos + nChars <= len, @"org/apache/lucene/analysis/util/StemmerUtil.java:111 condition failed: assert pos + nChars <= len;");
  if (pos + nChars < len) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(s, pos + nChars, s, pos, len - pos - nChars);
  }
  return len - nChars;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisUtilStemmerUtil)
