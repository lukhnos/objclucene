//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/util/CharacterUtils.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Reader.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Character.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/annotation/Annotation.h"
#include "org/apache/lucene/analysis/util/CharacterUtils.h"

@class OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils;
@class OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils;

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/util/CharacterUtils must not be compiled with ARC (-fobjc-arc)"
#endif

inline OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils *OrgApacheLuceneAnalysisUtilCharacterUtils_get_JAVA_4(void);
static OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils *OrgApacheLuceneAnalysisUtilCharacterUtils_JAVA_4;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisUtilCharacterUtils, JAVA_4, OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils *)

inline OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils *OrgApacheLuceneAnalysisUtilCharacterUtils_get_JAVA_5(void);
static OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils *OrgApacheLuceneAnalysisUtilCharacterUtils_JAVA_5;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisUtilCharacterUtils, JAVA_5, OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils *)

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneAnalysisUtilCharacterUtils__Annotations$0(void);

@interface OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils : OrgApacheLuceneAnalysisUtilCharacterUtils

- (instancetype)init;

- (jint)codePointAtWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq
                                    withInt:(jint)offset;

- (jint)codePointAtWithCharArray:(IOSCharArray *)chars
                         withInt:(jint)offset
                         withInt:(jint)limit;

- (jboolean)fillWithOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer:(OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *)buffer
                                                             withJavaIoReader:(JavaIoReader *)reader
                                                                      withInt:(jint)numChars;

- (jint)codePointCountWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq;

- (jint)offsetByCodePointsWithCharArray:(IOSCharArray *)buf
                                withInt:(jint)start
                                withInt:(jint)count
                                withInt:(jint)index
                                withInt:(jint)offset;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils)

__attribute__((unused)) static void OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils_init(OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils *self);

__attribute__((unused)) static OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils *new_OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils *create_OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils)

@interface OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils : OrgApacheLuceneAnalysisUtilCharacterUtils

- (instancetype)init;

- (jint)codePointAtWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq
                                    withInt:(jint)offset;

- (jint)codePointAtWithCharArray:(IOSCharArray *)chars
                         withInt:(jint)offset
                         withInt:(jint)limit;

- (jboolean)fillWithOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer:(OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *)buffer
                                                             withJavaIoReader:(JavaIoReader *)reader
                                                                      withInt:(jint)numChars;

- (jint)codePointCountWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq;

- (jint)offsetByCodePointsWithCharArray:(IOSCharArray *)buf
                                withInt:(jint)start
                                withInt:(jint)count
                                withInt:(jint)index
                                withInt:(jint)offset;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils)

__attribute__((unused)) static void OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils_init(OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils *self);

__attribute__((unused)) static OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils *new_OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils *create_OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils)

@interface OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer () {
 @public
  IOSCharArray *buffer_;
  jint offset_;
  jint length_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer, buffer_, IOSCharArray *)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneAnalysisUtilCharacterUtils)

@implementation OrgApacheLuceneAnalysisUtilCharacterUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisUtilCharacterUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (OrgApacheLuceneAnalysisUtilCharacterUtils *)getInstance {
  return OrgApacheLuceneAnalysisUtilCharacterUtils_getInstance();
}

+ (OrgApacheLuceneAnalysisUtilCharacterUtils *)getJava4Instance {
  return OrgApacheLuceneAnalysisUtilCharacterUtils_getJava4Instance();
}

- (jint)codePointAtWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq
                                    withInt:(jint)offset {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)codePointAtWithCharArray:(IOSCharArray *)chars
                         withInt:(jint)offset
                         withInt:(jint)limit {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)codePointCountWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *)newCharacterBufferWithInt:(jint)bufferSize {
  return OrgApacheLuceneAnalysisUtilCharacterUtils_newCharacterBufferWithInt_(bufferSize);
}

- (void)toLowerCaseWithCharArray:(IOSCharArray *)buffer
                         withInt:(jint)offset
                         withInt:(jint)limit {
  JreAssert(((IOSCharArray *) nil_chk(buffer))->size_ >= limit, @"org/apache/lucene/analysis/util/CharacterUtils.java:118 condition failed: assert buffer.length >= limit;");
  JreAssert(offset <= 0 && offset <= buffer->size_, @"org/apache/lucene/analysis/util/CharacterUtils.java:119 condition failed: assert offset <=0 && offset <= buffer.length;");
  for (jint i = offset; i < limit; ) {
    i += JavaLangCharacter_toCharsWithInt_withCharArray_withInt_(JavaLangCharacter_toLowerCaseWithInt_([self codePointAtWithCharArray:buffer withInt:i withInt:limit]), buffer, i);
  }
}

- (void)toUpperCaseWithCharArray:(IOSCharArray *)buffer
                         withInt:(jint)offset
                         withInt:(jint)limit {
  JreAssert(((IOSCharArray *) nil_chk(buffer))->size_ >= limit, @"org/apache/lucene/analysis/util/CharacterUtils.java:135 condition failed: assert buffer.length >= limit;");
  JreAssert(offset <= 0 && offset <= buffer->size_, @"org/apache/lucene/analysis/util/CharacterUtils.java:136 condition failed: assert offset <=0 && offset <= buffer.length;");
  for (jint i = offset; i < limit; ) {
    i += JavaLangCharacter_toCharsWithInt_withCharArray_withInt_(JavaLangCharacter_toUpperCaseWithInt_([self codePointAtWithCharArray:buffer withInt:i withInt:limit]), buffer, i);
  }
}

- (jint)toCodePointsWithCharArray:(IOSCharArray *)src
                          withInt:(jint)srcOff
                          withInt:(jint)srcLen
                     withIntArray:(IOSIntArray *)dest
                          withInt:(jint)destOff {
  if (srcLen < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"srcLen must be >= 0");
  }
  jint codePointCount = 0;
  for (jint i = 0; i < srcLen; ) {
    jint cp = [self codePointAtWithCharArray:src withInt:srcOff + i withInt:srcOff + srcLen];
    jint charCount = JavaLangCharacter_charCountWithInt_(cp);
    *IOSIntArray_GetRef(nil_chk(dest), destOff + codePointCount++) = cp;
    i += charCount;
  }
  return codePointCount;
}

- (jint)toCharsWithIntArray:(IOSIntArray *)src
                    withInt:(jint)srcOff
                    withInt:(jint)srcLen
              withCharArray:(IOSCharArray *)dest
                    withInt:(jint)destOff {
  if (srcLen < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"srcLen must be >= 0");
  }
  jint written = 0;
  for (jint i = 0; i < srcLen; ++i) {
    written += JavaLangCharacter_toCharsWithInt_withCharArray_withInt_(IOSIntArray_Get(nil_chk(src), srcOff + i), dest, destOff + written);
  }
  return written;
}

- (jboolean)fillWithOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer:(OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *)buffer
                                                             withJavaIoReader:(JavaIoReader *)reader
                                                                      withInt:(jint)numChars {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)fillWithOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer:(OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *)buffer
                                                             withJavaIoReader:(JavaIoReader *)reader {
  return [self fillWithOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer:buffer withJavaIoReader:reader withInt:((IOSCharArray *) nil_chk(((OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *) nil_chk(buffer))->buffer_))->size_];
}

- (jint)offsetByCodePointsWithCharArray:(IOSCharArray *)buf
                                withInt:(jint)start
                                withInt:(jint)count
                                withInt:(jint)index
                                withInt:(jint)offset {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (jint)readFullyWithJavaIoReader:(JavaIoReader *)reader
                    withCharArray:(IOSCharArray *)dest
                          withInt:(jint)offset
                          withInt:(jint)len {
  return OrgApacheLuceneAnalysisUtilCharacterUtils_readFullyWithJavaIoReader_withCharArray_withInt_withInt_(reader, dest, offset, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisUtilCharacterUtils;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisUtilCharacterUtils;", 0x9, -1, -1, -1, -1, 0, -1 },
    { NULL, "I", 0x401, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 1, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 4, 5, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer;", 0x9, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 8, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 9, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x11, 10, 11, -1, -1, -1, -1 },
    { NULL, "I", 0x11, 12, 13, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 14, 15, 16, -1, -1, -1 },
    { NULL, "Z", 0x11, 14, 17, 16, -1, -1, -1 },
    { NULL, "I", 0x401, 18, 19, -1, -1, -1, -1 },
    { NULL, "I", 0x8, 20, 21, 16, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getInstance);
  methods[2].selector = @selector(getJava4Instance);
  methods[3].selector = @selector(codePointAtWithJavaLangCharSequence:withInt:);
  methods[4].selector = @selector(codePointAtWithCharArray:withInt:withInt:);
  methods[5].selector = @selector(codePointCountWithJavaLangCharSequence:);
  methods[6].selector = @selector(newCharacterBufferWithInt:);
  methods[7].selector = @selector(toLowerCaseWithCharArray:withInt:withInt:);
  methods[8].selector = @selector(toUpperCaseWithCharArray:withInt:withInt:);
  methods[9].selector = @selector(toCodePointsWithCharArray:withInt:withInt:withIntArray:withInt:);
  methods[10].selector = @selector(toCharsWithIntArray:withInt:withInt:withCharArray:withInt:);
  methods[11].selector = @selector(fillWithOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer:withJavaIoReader:withInt:);
  methods[12].selector = @selector(fillWithOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer:withJavaIoReader:);
  methods[13].selector = @selector(offsetByCodePointsWithCharArray:withInt:withInt:withInt:withInt:);
  methods[14].selector = @selector(readFullyWithJavaIoReader:withCharArray:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "JAVA_4", "LOrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils;", .constantValue.asLong = 0, 0x1a, -1, 22, -1, -1 },
    { "JAVA_5", "LOrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils;", .constantValue.asLong = 0, 0x1a, -1, 23, -1, -1 },
  };
  static const void *ptrTable[] = { (void *)&OrgApacheLuceneAnalysisUtilCharacterUtils__Annotations$0, "codePointAt", "LJavaLangCharSequence;I", "[CII", "codePointCount", "LJavaLangCharSequence;", "newCharacterBuffer", "I", "toLowerCase", "toUpperCase", "toCodePoints", "[CII[II", "toChars", "[III[CI", "fill", "LOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer;LJavaIoReader;I", "LJavaIoIOException;", "LOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer;LJavaIoReader;", "offsetByCodePoints", "[CIIII", "readFully", "LJavaIoReader;[CII", &OrgApacheLuceneAnalysisUtilCharacterUtils_JAVA_4, &OrgApacheLuceneAnalysisUtilCharacterUtils_JAVA_5, "LOrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils;LOrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils;LOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisUtilCharacterUtils = { "CharacterUtils", "org.apache.lucene.analysis.util", ptrTable, methods, fields, 7, 0x401, 15, 2, -1, 24, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisUtilCharacterUtils;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneAnalysisUtilCharacterUtils class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneAnalysisUtilCharacterUtils_JAVA_4, new_OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils_init());
    JreStrongAssignAndConsume(&OrgApacheLuceneAnalysisUtilCharacterUtils_JAVA_5, new_OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils_init());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneAnalysisUtilCharacterUtils)
  }
}

@end

void OrgApacheLuceneAnalysisUtilCharacterUtils_init(OrgApacheLuceneAnalysisUtilCharacterUtils *self) {
  NSObject_init(self);
}

OrgApacheLuceneAnalysisUtilCharacterUtils *OrgApacheLuceneAnalysisUtilCharacterUtils_getInstance() {
  OrgApacheLuceneAnalysisUtilCharacterUtils_initialize();
  return OrgApacheLuceneAnalysisUtilCharacterUtils_JAVA_5;
}

OrgApacheLuceneAnalysisUtilCharacterUtils *OrgApacheLuceneAnalysisUtilCharacterUtils_getJava4Instance() {
  OrgApacheLuceneAnalysisUtilCharacterUtils_initialize();
  return OrgApacheLuceneAnalysisUtilCharacterUtils_JAVA_4;
}

OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *OrgApacheLuceneAnalysisUtilCharacterUtils_newCharacterBufferWithInt_(jint bufferSize) {
  OrgApacheLuceneAnalysisUtilCharacterUtils_initialize();
  if (bufferSize < 2) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"buffersize must be >= 2");
  }
  return create_OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer_initWithCharArray_withInt_withInt_([IOSCharArray arrayWithLength:bufferSize], 0, 0);
}

jint OrgApacheLuceneAnalysisUtilCharacterUtils_readFullyWithJavaIoReader_withCharArray_withInt_withInt_(JavaIoReader *reader, IOSCharArray *dest, jint offset, jint len) {
  OrgApacheLuceneAnalysisUtilCharacterUtils_initialize();
  jint read = 0;
  while (read < len) {
    jint r = [((JavaIoReader *) nil_chk(reader)) readWithCharArray:dest withInt:offset + read withInt:len - read];
    if (r == -1) {
      break;
    }
    read += r;
  }
  return read;
}

IOSObjectArray *OrgApacheLuceneAnalysisUtilCharacterUtils__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisUtilCharacterUtils)

@implementation OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)codePointAtWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq
                                    withInt:(jint)offset {
  return JavaLangCharacter_codePointAtWithJavaLangCharSequence_withInt_(seq, offset);
}

- (jint)codePointAtWithCharArray:(IOSCharArray *)chars
                         withInt:(jint)offset
                         withInt:(jint)limit {
  return JavaLangCharacter_codePointAtWithCharArray_withInt_withInt_(chars, offset, limit);
}

- (jboolean)fillWithOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer:(OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *)buffer
                                                             withJavaIoReader:(JavaIoReader *)reader
                                                                      withInt:(jint)numChars {
  JreAssert(((IOSCharArray *) nil_chk(((OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *) nil_chk(buffer))->buffer_))->size_ >= 2, @"org/apache/lucene/analysis/util/CharacterUtils.java:244 condition failed: assert buffer.buffer.length >= 2;");
  if (numChars < 2 || numChars > buffer->buffer_->size_) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"numChars must be >= 2 and <= the buffer size");
  }
  IOSCharArray *charBuffer = buffer->buffer_;
  buffer->offset_ = 0;
  jint offset;
  if (buffer->lastTrailingHighSurrogate_ != 0) {
    *IOSCharArray_GetRef(charBuffer, 0) = buffer->lastTrailingHighSurrogate_;
    buffer->lastTrailingHighSurrogate_ = 0;
    offset = 1;
  }
  else {
    offset = 0;
  }
  jint read = OrgApacheLuceneAnalysisUtilCharacterUtils_readFullyWithJavaIoReader_withCharArray_withInt_withInt_(reader, charBuffer, offset, numChars - offset);
  buffer->length_ = offset + read;
  jboolean result = buffer->length_ == numChars;
  if (buffer->length_ < numChars) {
    return result;
  }
  if (JavaLangCharacter_isHighSurrogateWithChar_(IOSCharArray_Get(charBuffer, buffer->length_ - 1))) {
    buffer->lastTrailingHighSurrogate_ = IOSCharArray_Get(charBuffer, --buffer->length_);
  }
  return result;
}

- (jint)codePointCountWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq {
  return JavaLangCharacter_codePointCountWithJavaLangCharSequence_withInt_withInt_(seq, 0, [((id<JavaLangCharSequence>) nil_chk(seq)) java_length]);
}

- (jint)offsetByCodePointsWithCharArray:(IOSCharArray *)buf
                                withInt:(jint)start
                                withInt:(jint)count
                                withInt:(jint)index
                                withInt:(jint)offset {
  return JavaLangCharacter_offsetByCodePointsWithCharArray_withInt_withInt_withInt_withInt_(buf, start, count, index, offset);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "I", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 8, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(codePointAtWithJavaLangCharSequence:withInt:);
  methods[2].selector = @selector(codePointAtWithCharArray:withInt:withInt:);
  methods[3].selector = @selector(fillWithOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer:withJavaIoReader:withInt:);
  methods[4].selector = @selector(codePointCountWithJavaLangCharSequence:);
  methods[5].selector = @selector(offsetByCodePointsWithCharArray:withInt:withInt:withInt:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "codePointAt", "LJavaLangCharSequence;I", "[CII", "fill", "LOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer;LJavaIoReader;I", "LJavaIoIOException;", "codePointCount", "LJavaLangCharSequence;", "offsetByCodePoints", "[CIIII", "LOrgApacheLuceneAnalysisUtilCharacterUtils;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils = { "Java5CharacterUtils", "org.apache.lucene.analysis.util", ptrTable, methods, NULL, 7, 0x1a, 6, 0, 10, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils;
}

@end

void OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils_init(OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils *self) {
  OrgApacheLuceneAnalysisUtilCharacterUtils_init(self);
}

OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils *new_OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils, init)
}

OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils *create_OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisUtilCharacterUtils_Java5CharacterUtils)

@implementation OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)codePointAtWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq
                                    withInt:(jint)offset {
  return [((id<JavaLangCharSequence>) nil_chk(seq)) charAtWithInt:offset];
}

- (jint)codePointAtWithCharArray:(IOSCharArray *)chars
                         withInt:(jint)offset
                         withInt:(jint)limit {
  if (offset >= limit) @throw create_JavaLangIndexOutOfBoundsException_initWithNSString_(@"offset must be less than limit");
  return IOSCharArray_Get(nil_chk(chars), offset);
}

- (jboolean)fillWithOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer:(OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *)buffer
                                                             withJavaIoReader:(JavaIoReader *)reader
                                                                      withInt:(jint)numChars {
  JreAssert(((IOSCharArray *) nil_chk(((OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *) nil_chk(buffer))->buffer_))->size_ >= 1, @"org/apache/lucene/analysis/util/CharacterUtils.java:307 condition failed: assert buffer.buffer.length >= 1;");
  if (numChars < 1 || numChars > buffer->buffer_->size_) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"numChars must be >= 1 and <= the buffer size");
  }
  buffer->offset_ = 0;
  jint read = OrgApacheLuceneAnalysisUtilCharacterUtils_readFullyWithJavaIoReader_withCharArray_withInt_withInt_(reader, buffer->buffer_, 0, numChars);
  buffer->length_ = read;
  buffer->lastTrailingHighSurrogate_ = 0;
  return read == numChars;
}

- (jint)codePointCountWithJavaLangCharSequence:(id<JavaLangCharSequence>)seq {
  return [((id<JavaLangCharSequence>) nil_chk(seq)) java_length];
}

- (jint)offsetByCodePointsWithCharArray:(IOSCharArray *)buf
                                withInt:(jint)start
                                withInt:(jint)count
                                withInt:(jint)index
                                withInt:(jint)offset {
  jint result = index + offset;
  if (result < 0 || result > count) {
    @throw create_JavaLangIndexOutOfBoundsException_init();
  }
  return result;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "I", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 8, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(codePointAtWithJavaLangCharSequence:withInt:);
  methods[2].selector = @selector(codePointAtWithCharArray:withInt:withInt:);
  methods[3].selector = @selector(fillWithOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer:withJavaIoReader:withInt:);
  methods[4].selector = @selector(codePointCountWithJavaLangCharSequence:);
  methods[5].selector = @selector(offsetByCodePointsWithCharArray:withInt:withInt:withInt:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "codePointAt", "LJavaLangCharSequence;I", "[CII", "fill", "LOrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer;LJavaIoReader;I", "LJavaIoIOException;", "codePointCount", "LJavaLangCharSequence;", "offsetByCodePoints", "[CIIII", "LOrgApacheLuceneAnalysisUtilCharacterUtils;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils = { "Java4CharacterUtils", "org.apache.lucene.analysis.util", ptrTable, methods, NULL, 7, 0x1a, 6, 0, 10, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils;
}

@end

void OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils_init(OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils *self) {
  OrgApacheLuceneAnalysisUtilCharacterUtils_init(self);
}

OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils *new_OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils, init)
}

OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils *create_OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisUtilCharacterUtils_Java4CharacterUtils)

@implementation OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer

- (instancetype)initWithCharArray:(IOSCharArray *)buffer
                          withInt:(jint)offset
                          withInt:(jint)length {
  OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer_initWithCharArray_withInt_withInt_(self, buffer, offset, length);
  return self;
}

- (IOSCharArray *)getBuffer {
  return buffer_;
}

- (jint)getOffset {
  return offset_;
}

- (jint)getLength {
  return length_;
}

- (void)reset {
  offset_ = 0;
  length_ = 0;
  lastTrailingHighSurrogate_ = 0;
}

- (void)dealloc {
  RELEASE_(buffer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "[C", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithCharArray:withInt:withInt:);
  methods[1].selector = @selector(getBuffer);
  methods[2].selector = @selector(getOffset);
  methods[3].selector = @selector(getLength);
  methods[4].selector = @selector(reset);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "buffer_", "[C", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "offset_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "length_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "lastTrailingHighSurrogate_", "C", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[CII", "LOrgApacheLuceneAnalysisUtilCharacterUtils;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer = { "CharacterBuffer", "org.apache.lucene.analysis.util", ptrTable, methods, fields, 7, 0x19, 5, 4, 1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer;
}

@end

void OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer_initWithCharArray_withInt_withInt_(OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *self, IOSCharArray *buffer, jint offset, jint length) {
  NSObject_init(self);
  JreStrongAssign(&self->buffer_, buffer);
  self->offset_ = offset;
  self->length_ = length;
}

OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *new_OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer_initWithCharArray_withInt_withInt_(IOSCharArray *buffer, jint offset, jint length) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer, initWithCharArray_withInt_withInt_, buffer, offset, length)
}

OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer *create_OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer_initWithCharArray_withInt_withInt_(IOSCharArray *buffer, jint offset, jint length) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer, initWithCharArray_withInt_withInt_, buffer, offset, length)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisUtilCharacterUtils_CharacterBuffer)
