//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/util/CharArraySet.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/CharSequence.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuilder.h"
#include "java/util/AbstractSet.h"
#include "java/util/Collection.h"
#include "java/util/Iterator.h"
#include "java/util/Set.h"
#include "org/apache/lucene/analysis/util/CharArrayMap.h"
#include "org/apache/lucene/analysis/util/CharArraySet.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/util/CharArraySet must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneAnalysisUtilCharArraySet () {
 @public
  OrgApacheLuceneAnalysisUtilCharArrayMap *map_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisUtilCharArraySet, map_, OrgApacheLuceneAnalysisUtilCharArrayMap *)

inline id OrgApacheLuceneAnalysisUtilCharArraySet_get_PLACEHOLDER(void);
static id OrgApacheLuceneAnalysisUtilCharArraySet_PLACEHOLDER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisUtilCharArraySet, PLACEHOLDER, id)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneAnalysisUtilCharArraySet)

OrgApacheLuceneAnalysisUtilCharArraySet *OrgApacheLuceneAnalysisUtilCharArraySet_EMPTY_SET;

@implementation OrgApacheLuceneAnalysisUtilCharArraySet

+ (OrgApacheLuceneAnalysisUtilCharArraySet *)EMPTY_SET {
  return OrgApacheLuceneAnalysisUtilCharArraySet_EMPTY_SET;
}

- (instancetype)initWithInt:(jint)startSize
                withBoolean:(jboolean)ignoreCase {
  OrgApacheLuceneAnalysisUtilCharArraySet_initWithInt_withBoolean_(self, startSize, ignoreCase);
  return self;
}

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)c
                               withBoolean:(jboolean)ignoreCase {
  OrgApacheLuceneAnalysisUtilCharArraySet_initWithJavaUtilCollection_withBoolean_(self, c, ignoreCase);
  return self;
}

- (instancetype)initWithOrgApacheLuceneAnalysisUtilCharArrayMap:(OrgApacheLuceneAnalysisUtilCharArrayMap *)map {
  OrgApacheLuceneAnalysisUtilCharArraySet_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(self, map);
  return self;
}

- (void)clear {
  [((OrgApacheLuceneAnalysisUtilCharArrayMap *) nil_chk(map_)) clear];
}

- (jboolean)containsWithCharArray:(IOSCharArray *)text
                          withInt:(jint)off
                          withInt:(jint)len {
  return [((OrgApacheLuceneAnalysisUtilCharArrayMap *) nil_chk(map_)) containsKeyWithCharArray:text withInt:off withInt:len];
}

- (jboolean)containsWithJavaLangCharSequence:(id<JavaLangCharSequence>)cs {
  return [((OrgApacheLuceneAnalysisUtilCharArrayMap *) nil_chk(map_)) containsKeyWithJavaLangCharSequence:cs];
}

- (jboolean)containsWithId:(id)o {
  return [((OrgApacheLuceneAnalysisUtilCharArrayMap *) nil_chk(map_)) containsKeyWithId:o];
}

- (jboolean)addWithId:(id)o {
  return [((OrgApacheLuceneAnalysisUtilCharArrayMap *) nil_chk(map_)) putWithId:o withId:OrgApacheLuceneAnalysisUtilCharArraySet_PLACEHOLDER] == nil;
}

- (jboolean)addWithJavaLangCharSequence:(id<JavaLangCharSequence>)text {
  return [((OrgApacheLuceneAnalysisUtilCharArrayMap *) nil_chk(map_)) putWithJavaLangCharSequence:text withId:OrgApacheLuceneAnalysisUtilCharArraySet_PLACEHOLDER] == nil;
}

- (jboolean)addWithNSString:(NSString *)text {
  return [((OrgApacheLuceneAnalysisUtilCharArrayMap *) nil_chk(map_)) putWithNSString:text withId:OrgApacheLuceneAnalysisUtilCharArraySet_PLACEHOLDER] == nil;
}

- (jboolean)addWithCharArray:(IOSCharArray *)text {
  return [((OrgApacheLuceneAnalysisUtilCharArrayMap *) nil_chk(map_)) putWithCharArray:text withId:OrgApacheLuceneAnalysisUtilCharArraySet_PLACEHOLDER] == nil;
}

- (jint)size {
  return [((OrgApacheLuceneAnalysisUtilCharArrayMap *) nil_chk(map_)) size];
}

+ (OrgApacheLuceneAnalysisUtilCharArraySet *)unmodifiableSetWithOrgApacheLuceneAnalysisUtilCharArraySet:(OrgApacheLuceneAnalysisUtilCharArraySet *)set {
  return OrgApacheLuceneAnalysisUtilCharArraySet_unmodifiableSetWithOrgApacheLuceneAnalysisUtilCharArraySet_(set);
}

+ (OrgApacheLuceneAnalysisUtilCharArraySet *)copy__WithJavaUtilSet:(id<JavaUtilSet>)set {
  return OrgApacheLuceneAnalysisUtilCharArraySet_copy__WithJavaUtilSet_(set);
}

- (id<JavaUtilIterator>)iterator {
  return [((id<JavaUtilSet>) nil_chk([((OrgApacheLuceneAnalysisUtilCharArrayMap *) nil_chk(map_)) originalKeySet])) iterator];
}

- (NSString *)description {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_initWithNSString_(@"[");
  for (id __strong item in self) {
    if ([sb java_length] > 1) [sb appendWithNSString:@", "];
    if ([item isKindOfClass:[IOSCharArray class]]) {
      [sb appendWithCharArray:(IOSCharArray *) cast_chk(item, [IOSCharArray class])];
    }
    else {
      [sb appendWithId:item];
    }
  }
  return [((JavaLangStringBuilder *) nil_chk([sb appendWithChar:']'])) description];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

- (void)dealloc {
  RELEASE_(map_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 9, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 9, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 9, 11, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisUtilCharArraySet;", 0x9, 12, 13, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisUtilCharArraySet;", 0x9, 14, 15, -1, 16, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 17, -1, -1 },
    { NULL, "LNSString;", 0x1, 18, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withBoolean:);
  methods[1].selector = @selector(initWithJavaUtilCollection:withBoolean:);
  methods[2].selector = @selector(initWithOrgApacheLuceneAnalysisUtilCharArrayMap:);
  methods[3].selector = @selector(clear);
  methods[4].selector = @selector(containsWithCharArray:withInt:withInt:);
  methods[5].selector = @selector(containsWithJavaLangCharSequence:);
  methods[6].selector = @selector(containsWithId:);
  methods[7].selector = @selector(addWithId:);
  methods[8].selector = @selector(addWithJavaLangCharSequence:);
  methods[9].selector = @selector(addWithNSString:);
  methods[10].selector = @selector(addWithCharArray:);
  methods[11].selector = @selector(size);
  methods[12].selector = @selector(unmodifiableSetWithOrgApacheLuceneAnalysisUtilCharArraySet:);
  methods[13].selector = @selector(copy__WithJavaUtilSet:);
  methods[14].selector = @selector(iterator);
  methods[15].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EMPTY_SET", "LOrgApacheLuceneAnalysisUtilCharArraySet;", .constantValue.asLong = 0, 0x19, -1, 19, -1, -1 },
    { "PLACEHOLDER", "LNSObject;", .constantValue.asLong = 0, 0x1a, -1, 20, -1, -1 },
    { "map_", "LOrgApacheLuceneAnalysisUtilCharArrayMap;", .constantValue.asLong = 0, 0x12, -1, -1, 21, -1 },
  };
  static const void *ptrTable[] = { "IZ", "LJavaUtilCollection;Z", "(Ljava/util/Collection<*>;Z)V", "LOrgApacheLuceneAnalysisUtilCharArrayMap;", "(Lorg/apache/lucene/analysis/util/CharArrayMap<Ljava/lang/Object;>;)V", "contains", "[CII", "LJavaLangCharSequence;", "LNSObject;", "add", "LNSString;", "[C", "unmodifiableSet", "LOrgApacheLuceneAnalysisUtilCharArraySet;", "copy", "LJavaUtilSet;", "(Ljava/util/Set<*>;)Lorg/apache/lucene/analysis/util/CharArraySet;", "()Ljava/util/Iterator<Ljava/lang/Object;>;", "toString", &OrgApacheLuceneAnalysisUtilCharArraySet_EMPTY_SET, &OrgApacheLuceneAnalysisUtilCharArraySet_PLACEHOLDER, "Lorg/apache/lucene/analysis/util/CharArrayMap<Ljava/lang/Object;>;", "Ljava/util/AbstractSet<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisUtilCharArraySet = { "CharArraySet", "org.apache.lucene.analysis.util", ptrTable, methods, fields, 7, 0x1, 16, 3, -1, -1, -1, 22, -1 };
  return &_OrgApacheLuceneAnalysisUtilCharArraySet;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneAnalysisUtilCharArraySet class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneAnalysisUtilCharArraySet_EMPTY_SET, new_OrgApacheLuceneAnalysisUtilCharArraySet_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap_emptyMap()));
    JreStrongAssignAndConsume(&OrgApacheLuceneAnalysisUtilCharArraySet_PLACEHOLDER, new_NSObject_init());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneAnalysisUtilCharArraySet)
  }
}

@end

void OrgApacheLuceneAnalysisUtilCharArraySet_initWithInt_withBoolean_(OrgApacheLuceneAnalysisUtilCharArraySet *self, jint startSize, jboolean ignoreCase) {
  OrgApacheLuceneAnalysisUtilCharArraySet_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(self, create_OrgApacheLuceneAnalysisUtilCharArrayMap_initWithInt_withBoolean_(startSize, ignoreCase));
}

OrgApacheLuceneAnalysisUtilCharArraySet *new_OrgApacheLuceneAnalysisUtilCharArraySet_initWithInt_withBoolean_(jint startSize, jboolean ignoreCase) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisUtilCharArraySet, initWithInt_withBoolean_, startSize, ignoreCase)
}

OrgApacheLuceneAnalysisUtilCharArraySet *create_OrgApacheLuceneAnalysisUtilCharArraySet_initWithInt_withBoolean_(jint startSize, jboolean ignoreCase) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisUtilCharArraySet, initWithInt_withBoolean_, startSize, ignoreCase)
}

void OrgApacheLuceneAnalysisUtilCharArraySet_initWithJavaUtilCollection_withBoolean_(OrgApacheLuceneAnalysisUtilCharArraySet *self, id<JavaUtilCollection> c, jboolean ignoreCase) {
  OrgApacheLuceneAnalysisUtilCharArraySet_initWithInt_withBoolean_(self, [((id<JavaUtilCollection>) nil_chk(c)) size], ignoreCase);
  [self addAllWithJavaUtilCollection:c];
}

OrgApacheLuceneAnalysisUtilCharArraySet *new_OrgApacheLuceneAnalysisUtilCharArraySet_initWithJavaUtilCollection_withBoolean_(id<JavaUtilCollection> c, jboolean ignoreCase) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisUtilCharArraySet, initWithJavaUtilCollection_withBoolean_, c, ignoreCase)
}

OrgApacheLuceneAnalysisUtilCharArraySet *create_OrgApacheLuceneAnalysisUtilCharArraySet_initWithJavaUtilCollection_withBoolean_(id<JavaUtilCollection> c, jboolean ignoreCase) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisUtilCharArraySet, initWithJavaUtilCollection_withBoolean_, c, ignoreCase)
}

void OrgApacheLuceneAnalysisUtilCharArraySet_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArraySet *self, OrgApacheLuceneAnalysisUtilCharArrayMap *map) {
  JavaUtilAbstractSet_init(self);
  JreStrongAssign(&self->map_, map);
}

OrgApacheLuceneAnalysisUtilCharArraySet *new_OrgApacheLuceneAnalysisUtilCharArraySet_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap *map) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisUtilCharArraySet, initWithOrgApacheLuceneAnalysisUtilCharArrayMap_, map)
}

OrgApacheLuceneAnalysisUtilCharArraySet *create_OrgApacheLuceneAnalysisUtilCharArraySet_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap *map) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisUtilCharArraySet, initWithOrgApacheLuceneAnalysisUtilCharArrayMap_, map)
}

OrgApacheLuceneAnalysisUtilCharArraySet *OrgApacheLuceneAnalysisUtilCharArraySet_unmodifiableSetWithOrgApacheLuceneAnalysisUtilCharArraySet_(OrgApacheLuceneAnalysisUtilCharArraySet *set) {
  OrgApacheLuceneAnalysisUtilCharArraySet_initialize();
  if (set == nil) @throw create_JavaLangNullPointerException_initWithNSString_(@"Given set is null");
  if (JreObjectEqualsEquals(set, OrgApacheLuceneAnalysisUtilCharArraySet_EMPTY_SET)) return OrgApacheLuceneAnalysisUtilCharArraySet_EMPTY_SET;
  if ([set->map_ isKindOfClass:[OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap class]]) return set;
  return create_OrgApacheLuceneAnalysisUtilCharArraySet_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap_unmodifiableMapWithOrgApacheLuceneAnalysisUtilCharArrayMap_(set->map_));
}

OrgApacheLuceneAnalysisUtilCharArraySet *OrgApacheLuceneAnalysisUtilCharArraySet_copy__WithJavaUtilSet_(id<JavaUtilSet> set) {
  OrgApacheLuceneAnalysisUtilCharArraySet_initialize();
  if (JreObjectEqualsEquals(set, OrgApacheLuceneAnalysisUtilCharArraySet_EMPTY_SET)) return OrgApacheLuceneAnalysisUtilCharArraySet_EMPTY_SET;
  if ([set isKindOfClass:[OrgApacheLuceneAnalysisUtilCharArraySet class]]) {
    OrgApacheLuceneAnalysisUtilCharArraySet *source = (OrgApacheLuceneAnalysisUtilCharArraySet *) set;
    return create_OrgApacheLuceneAnalysisUtilCharArraySet_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap_copy__WithJavaUtilMap_(((OrgApacheLuceneAnalysisUtilCharArraySet *) nil_chk(source))->map_));
  }
  return create_OrgApacheLuceneAnalysisUtilCharArraySet_initWithJavaUtilCollection_withBoolean_(set, false);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisUtilCharArraySet)
