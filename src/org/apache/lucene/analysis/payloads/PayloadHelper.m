//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/payloads/PayloadHelper.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Float.h"
#include "org/apache/lucene/analysis/payloads/PayloadHelper.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/payloads/PayloadHelper must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneAnalysisPayloadsPayloadHelper

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisPayloadsPayloadHelper_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (IOSByteArray *)encodeFloatWithFloat:(jfloat)payload {
  return OrgApacheLuceneAnalysisPayloadsPayloadHelper_encodeFloatWithFloat_(payload);
}

+ (IOSByteArray *)encodeFloatWithFloat:(jfloat)payload
                         withByteArray:(IOSByteArray *)data
                               withInt:(jint)offset {
  return OrgApacheLuceneAnalysisPayloadsPayloadHelper_encodeFloatWithFloat_withByteArray_withInt_(payload, data, offset);
}

+ (IOSByteArray *)encodeIntWithInt:(jint)payload {
  return OrgApacheLuceneAnalysisPayloadsPayloadHelper_encodeIntWithInt_(payload);
}

+ (IOSByteArray *)encodeIntWithInt:(jint)payload
                     withByteArray:(IOSByteArray *)data
                           withInt:(jint)offset {
  return OrgApacheLuceneAnalysisPayloadsPayloadHelper_encodeIntWithInt_withByteArray_withInt_(payload, data, offset);
}

+ (jfloat)decodeFloatWithByteArray:(IOSByteArray *)bytes {
  return OrgApacheLuceneAnalysisPayloadsPayloadHelper_decodeFloatWithByteArray_(bytes);
}

+ (jfloat)decodeFloatWithByteArray:(IOSByteArray *)bytes
                           withInt:(jint)offset {
  return OrgApacheLuceneAnalysisPayloadsPayloadHelper_decodeFloatWithByteArray_withInt_(bytes, offset);
}

+ (jint)decodeIntWithByteArray:(IOSByteArray *)bytes
                       withInt:(jint)offset {
  return OrgApacheLuceneAnalysisPayloadsPayloadHelper_decodeIntWithByteArray_withInt_(bytes, offset);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 3, 5, -1, -1, -1, -1 },
    { NULL, "F", 0x9, 6, 7, -1, -1, -1, -1 },
    { NULL, "F", 0x19, 6, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x19, 9, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(encodeFloatWithFloat:);
  methods[2].selector = @selector(encodeFloatWithFloat:withByteArray:withInt:);
  methods[3].selector = @selector(encodeIntWithInt:);
  methods[4].selector = @selector(encodeIntWithInt:withByteArray:withInt:);
  methods[5].selector = @selector(decodeFloatWithByteArray:);
  methods[6].selector = @selector(decodeFloatWithByteArray:withInt:);
  methods[7].selector = @selector(decodeIntWithByteArray:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "encodeFloat", "F", "F[BI", "encodeInt", "I", "I[BI", "decodeFloat", "[B", "[BI", "decodeInt" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisPayloadsPayloadHelper = { "PayloadHelper", "org.apache.lucene.analysis.payloads", ptrTable, methods, NULL, 7, 0x1, 8, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisPayloadsPayloadHelper;
}

@end

void OrgApacheLuceneAnalysisPayloadsPayloadHelper_init(OrgApacheLuceneAnalysisPayloadsPayloadHelper *self) {
  NSObject_init(self);
}

OrgApacheLuceneAnalysisPayloadsPayloadHelper *new_OrgApacheLuceneAnalysisPayloadsPayloadHelper_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisPayloadsPayloadHelper, init)
}

OrgApacheLuceneAnalysisPayloadsPayloadHelper *create_OrgApacheLuceneAnalysisPayloadsPayloadHelper_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisPayloadsPayloadHelper, init)
}

IOSByteArray *OrgApacheLuceneAnalysisPayloadsPayloadHelper_encodeFloatWithFloat_(jfloat payload) {
  OrgApacheLuceneAnalysisPayloadsPayloadHelper_initialize();
  return OrgApacheLuceneAnalysisPayloadsPayloadHelper_encodeFloatWithFloat_withByteArray_withInt_(payload, [IOSByteArray arrayWithLength:4], 0);
}

IOSByteArray *OrgApacheLuceneAnalysisPayloadsPayloadHelper_encodeFloatWithFloat_withByteArray_withInt_(jfloat payload, IOSByteArray *data, jint offset) {
  OrgApacheLuceneAnalysisPayloadsPayloadHelper_initialize();
  return OrgApacheLuceneAnalysisPayloadsPayloadHelper_encodeIntWithInt_withByteArray_withInt_(JavaLangFloat_floatToIntBitsWithFloat_(payload), data, offset);
}

IOSByteArray *OrgApacheLuceneAnalysisPayloadsPayloadHelper_encodeIntWithInt_(jint payload) {
  OrgApacheLuceneAnalysisPayloadsPayloadHelper_initialize();
  return OrgApacheLuceneAnalysisPayloadsPayloadHelper_encodeIntWithInt_withByteArray_withInt_(payload, [IOSByteArray arrayWithLength:4], 0);
}

IOSByteArray *OrgApacheLuceneAnalysisPayloadsPayloadHelper_encodeIntWithInt_withByteArray_withInt_(jint payload, IOSByteArray *data, jint offset) {
  OrgApacheLuceneAnalysisPayloadsPayloadHelper_initialize();
  *IOSByteArray_GetRef(nil_chk(data), offset) = (jbyte) (JreRShift32(payload, 24));
  *IOSByteArray_GetRef(data, offset + 1) = (jbyte) (JreRShift32(payload, 16));
  *IOSByteArray_GetRef(data, offset + 2) = (jbyte) (JreRShift32(payload, 8));
  *IOSByteArray_GetRef(data, offset + 3) = (jbyte) payload;
  return data;
}

jfloat OrgApacheLuceneAnalysisPayloadsPayloadHelper_decodeFloatWithByteArray_(IOSByteArray *bytes) {
  OrgApacheLuceneAnalysisPayloadsPayloadHelper_initialize();
  return OrgApacheLuceneAnalysisPayloadsPayloadHelper_decodeFloatWithByteArray_withInt_(bytes, 0);
}

jfloat OrgApacheLuceneAnalysisPayloadsPayloadHelper_decodeFloatWithByteArray_withInt_(IOSByteArray *bytes, jint offset) {
  OrgApacheLuceneAnalysisPayloadsPayloadHelper_initialize();
  return JavaLangFloat_intBitsToFloatWithInt_(OrgApacheLuceneAnalysisPayloadsPayloadHelper_decodeIntWithByteArray_withInt_(bytes, offset));
}

jint OrgApacheLuceneAnalysisPayloadsPayloadHelper_decodeIntWithByteArray_withInt_(IOSByteArray *bytes, jint offset) {
  OrgApacheLuceneAnalysisPayloadsPayloadHelper_initialize();
  return (JreLShift32((IOSByteArray_Get(nil_chk(bytes), offset) & (jint) 0xFF), 24)) | (JreLShift32((IOSByteArray_Get(bytes, offset + 1) & (jint) 0xFF), 16)) | (JreLShift32((IOSByteArray_Get(bytes, offset + 2) & (jint) 0xFF), 8)) | (IOSByteArray_Get(bytes, offset + 3) & (jint) 0xFF);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisPayloadsPayloadHelper)
