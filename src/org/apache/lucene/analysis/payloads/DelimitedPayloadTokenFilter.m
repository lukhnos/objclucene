//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/payloads/DelimitedPayloadTokenFilter.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/analysis/TokenFilter.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/payloads/DelimitedPayloadTokenFilter.h"
#include "org/apache/lucene/analysis/payloads/PayloadEncoder.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/PayloadAttribute.h"
#include "org/apache/lucene/util/BytesRef.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/payloads/DelimitedPayloadTokenFilter must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter () {
 @public
  jchar delimiter_;
  id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAtt_;
  id<OrgApacheLuceneAnalysisTokenattributesPayloadAttribute> payAtt_;
  id<OrgApacheLuceneAnalysisPayloadsPayloadEncoder> encoder_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter, termAtt_, id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter, payAtt_, id<OrgApacheLuceneAnalysisTokenattributesPayloadAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter, encoder_, id<OrgApacheLuceneAnalysisPayloadsPayloadEncoder>)

@implementation OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter

+ (jchar)DEFAULT_DELIMITER {
  return OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter_DEFAULT_DELIMITER;
}

- (instancetype)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input
                                                  withChar:(jchar)delimiter
         withOrgApacheLuceneAnalysisPayloadsPayloadEncoder:(id<OrgApacheLuceneAnalysisPayloadsPayloadEncoder>)encoder {
  OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_withChar_withOrgApacheLuceneAnalysisPayloadsPayloadEncoder_(self, input, delimiter, encoder);
  return self;
}

- (jboolean)incrementToken {
  if ([((OrgApacheLuceneAnalysisTokenStream *) nil_chk(input_)) incrementToken]) {
    IOSCharArray *buffer = [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAtt_)) buffer];
    jint length = [termAtt_ java_length];
    for (jint i = 0; i < length; i++) {
      if (IOSCharArray_Get(nil_chk(buffer), i) == delimiter_) {
        [((id<OrgApacheLuceneAnalysisTokenattributesPayloadAttribute>) nil_chk(payAtt_)) setPayloadWithOrgApacheLuceneUtilBytesRef:[((id<OrgApacheLuceneAnalysisPayloadsPayloadEncoder>) nil_chk(encoder_)) encodeWithCharArray:buffer withInt:i + 1 withInt:(length - (i + 1))]];
        [termAtt_ setLengthWithInt:i];
        return true;
      }
    }
    [((id<OrgApacheLuceneAnalysisTokenattributesPayloadAttribute>) nil_chk(payAtt_)) setPayloadWithOrgApacheLuceneUtilBytesRef:nil];
    return true;
  }
  else return false;
}

- (void)dealloc {
  RELEASE_(termAtt_);
  RELEASE_(payAtt_);
  RELEASE_(encoder_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneAnalysisTokenStream:withChar:withOrgApacheLuceneAnalysisPayloadsPayloadEncoder:);
  methods[1].selector = @selector(incrementToken);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_DELIMITER", "C", .constantValue.asUnichar = OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter_DEFAULT_DELIMITER, 0x19, -1, -1, -1, -1 },
    { "delimiter_", "C", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "termAtt_", "LOrgApacheLuceneAnalysisTokenattributesCharTermAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "payAtt_", "LOrgApacheLuceneAnalysisTokenattributesPayloadAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "encoder_", "LOrgApacheLuceneAnalysisPayloadsPayloadEncoder;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneAnalysisTokenStream;CLOrgApacheLuceneAnalysisPayloadsPayloadEncoder;", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter = { "DelimitedPayloadTokenFilter", "org.apache.lucene.analysis.payloads", ptrTable, methods, fields, 7, 0x11, 2, 5, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter;
}

@end

void OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_withChar_withOrgApacheLuceneAnalysisPayloadsPayloadEncoder_(OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter *self, OrgApacheLuceneAnalysisTokenStream *input, jchar delimiter, id<OrgApacheLuceneAnalysisPayloadsPayloadEncoder> encoder) {
  OrgApacheLuceneAnalysisTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_(self, input);
  JreStrongAssign(&self->termAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
  JreStrongAssign(&self->payAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesPayloadAttribute_class_()]);
  self->delimiter_ = delimiter;
  JreStrongAssign(&self->encoder_, encoder);
}

OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter *new_OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_withChar_withOrgApacheLuceneAnalysisPayloadsPayloadEncoder_(OrgApacheLuceneAnalysisTokenStream *input, jchar delimiter, id<OrgApacheLuceneAnalysisPayloadsPayloadEncoder> encoder) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter, initWithOrgApacheLuceneAnalysisTokenStream_withChar_withOrgApacheLuceneAnalysisPayloadsPayloadEncoder_, input, delimiter, encoder)
}

OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter *create_OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_withChar_withOrgApacheLuceneAnalysisPayloadsPayloadEncoder_(OrgApacheLuceneAnalysisTokenStream *input, jchar delimiter, id<OrgApacheLuceneAnalysisPayloadsPayloadEncoder> encoder) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter, initWithOrgApacheLuceneAnalysisTokenStream_withChar_withOrgApacheLuceneAnalysisPayloadsPayloadEncoder_, input, delimiter, encoder)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisPayloadsDelimitedPayloadTokenFilter)
