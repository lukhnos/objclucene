//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/payloads/FloatEncoder.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Float.h"
#include "org/apache/lucene/analysis/payloads/AbstractEncoder.h"
#include "org/apache/lucene/analysis/payloads/FloatEncoder.h"
#include "org/apache/lucene/analysis/payloads/PayloadHelper.h"
#include "org/apache/lucene/util/BytesRef.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/payloads/FloatEncoder must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneAnalysisPayloadsFloatEncoder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisPayloadsFloatEncoder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgApacheLuceneUtilBytesRef *)encodeWithCharArray:(IOSCharArray *)buffer
                                             withInt:(jint)offset
                                             withInt:(jint)length {
  jfloat payload = JavaLangFloat_parseFloatWithNSString_([NSString java_stringWithCharacters:buffer offset:offset length:length]);
  IOSByteArray *bytes = OrgApacheLuceneAnalysisPayloadsPayloadHelper_encodeFloatWithFloat_(payload);
  OrgApacheLuceneUtilBytesRef *result = create_OrgApacheLuceneUtilBytesRef_initWithByteArray_(bytes);
  return result;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRef;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(encodeWithCharArray:withInt:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "encode", "[CII" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisPayloadsFloatEncoder = { "FloatEncoder", "org.apache.lucene.analysis.payloads", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisPayloadsFloatEncoder;
}

@end

void OrgApacheLuceneAnalysisPayloadsFloatEncoder_init(OrgApacheLuceneAnalysisPayloadsFloatEncoder *self) {
  OrgApacheLuceneAnalysisPayloadsAbstractEncoder_init(self);
}

OrgApacheLuceneAnalysisPayloadsFloatEncoder *new_OrgApacheLuceneAnalysisPayloadsFloatEncoder_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisPayloadsFloatEncoder, init)
}

OrgApacheLuceneAnalysisPayloadsFloatEncoder *create_OrgApacheLuceneAnalysisPayloadsFloatEncoder_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisPayloadsFloatEncoder, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisPayloadsFloatEncoder)
