//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/core/LowerCaseTokenizer.java
//

#include "J2ObjC_source.h"
#include "java/lang/Character.h"
#include "org/apache/lucene/analysis/core/LetterTokenizer.h"
#include "org/apache/lucene/analysis/core/LowerCaseTokenizer.h"
#include "org/apache/lucene/util/AttributeFactory.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/core/LowerCaseTokenizer must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneAnalysisCoreLowerCaseTokenizer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisCoreLowerCaseTokenizer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgApacheLuceneUtilAttributeFactory:(OrgApacheLuceneUtilAttributeFactory *)factory {
  OrgApacheLuceneAnalysisCoreLowerCaseTokenizer_initWithOrgApacheLuceneUtilAttributeFactory_(self, factory);
  return self;
}

- (jint)normalizeWithInt:(jint)c {
  return JavaLangCharacter_toLowerCaseWithInt_(c);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x4, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithOrgApacheLuceneUtilAttributeFactory:);
  methods[2].selector = @selector(normalizeWithInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneUtilAttributeFactory;", "normalize", "I" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisCoreLowerCaseTokenizer = { "LowerCaseTokenizer", "org.apache.lucene.analysis.core", ptrTable, methods, NULL, 7, 0x11, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisCoreLowerCaseTokenizer;
}

@end

void OrgApacheLuceneAnalysisCoreLowerCaseTokenizer_init(OrgApacheLuceneAnalysisCoreLowerCaseTokenizer *self) {
  OrgApacheLuceneAnalysisCoreLetterTokenizer_init(self);
}

OrgApacheLuceneAnalysisCoreLowerCaseTokenizer *new_OrgApacheLuceneAnalysisCoreLowerCaseTokenizer_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisCoreLowerCaseTokenizer, init)
}

OrgApacheLuceneAnalysisCoreLowerCaseTokenizer *create_OrgApacheLuceneAnalysisCoreLowerCaseTokenizer_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisCoreLowerCaseTokenizer, init)
}

void OrgApacheLuceneAnalysisCoreLowerCaseTokenizer_initWithOrgApacheLuceneUtilAttributeFactory_(OrgApacheLuceneAnalysisCoreLowerCaseTokenizer *self, OrgApacheLuceneUtilAttributeFactory *factory) {
  OrgApacheLuceneAnalysisCoreLetterTokenizer_initWithOrgApacheLuceneUtilAttributeFactory_(self, factory);
}

OrgApacheLuceneAnalysisCoreLowerCaseTokenizer *new_OrgApacheLuceneAnalysisCoreLowerCaseTokenizer_initWithOrgApacheLuceneUtilAttributeFactory_(OrgApacheLuceneUtilAttributeFactory *factory) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisCoreLowerCaseTokenizer, initWithOrgApacheLuceneUtilAttributeFactory_, factory)
}

OrgApacheLuceneAnalysisCoreLowerCaseTokenizer *create_OrgApacheLuceneAnalysisCoreLowerCaseTokenizer_initWithOrgApacheLuceneUtilAttributeFactory_(OrgApacheLuceneUtilAttributeFactory *factory) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisCoreLowerCaseTokenizer, initWithOrgApacheLuceneUtilAttributeFactory_, factory)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisCoreLowerCaseTokenizer)
