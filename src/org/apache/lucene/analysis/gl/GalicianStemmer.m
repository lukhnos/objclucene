//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/gl/GalicianStemmer.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/util/Map.h"
#include "org/apache/lucene/analysis/gl/GalicianStemmer.h"
#include "org/apache/lucene/analysis/pt/RSLPStemmerBase.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/gl/GalicianStemmer must not be compiled with ARC (-fobjc-arc)"
#endif

inline OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *OrgApacheLuceneAnalysisGlGalicianStemmer_get_plural(void);
static OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *OrgApacheLuceneAnalysisGlGalicianStemmer_plural;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisGlGalicianStemmer, plural, OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *)

inline OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *OrgApacheLuceneAnalysisGlGalicianStemmer_get_unification(void);
static OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *OrgApacheLuceneAnalysisGlGalicianStemmer_unification;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisGlGalicianStemmer, unification, OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *)

inline OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *OrgApacheLuceneAnalysisGlGalicianStemmer_get_adverb(void);
static OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *OrgApacheLuceneAnalysisGlGalicianStemmer_adverb;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisGlGalicianStemmer, adverb, OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *)

inline OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *OrgApacheLuceneAnalysisGlGalicianStemmer_get_augmentative(void);
static OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *OrgApacheLuceneAnalysisGlGalicianStemmer_augmentative;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisGlGalicianStemmer, augmentative, OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *)

inline OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *OrgApacheLuceneAnalysisGlGalicianStemmer_get_noun(void);
static OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *OrgApacheLuceneAnalysisGlGalicianStemmer_noun;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisGlGalicianStemmer, noun, OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *)

inline OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *OrgApacheLuceneAnalysisGlGalicianStemmer_get_verb(void);
static OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *OrgApacheLuceneAnalysisGlGalicianStemmer_verb;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisGlGalicianStemmer, verb, OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *)

inline OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *OrgApacheLuceneAnalysisGlGalicianStemmer_get_vowel(void);
static OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *OrgApacheLuceneAnalysisGlGalicianStemmer_vowel;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisGlGalicianStemmer, vowel, OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneAnalysisGlGalicianStemmer)

@implementation OrgApacheLuceneAnalysisGlGalicianStemmer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisGlGalicianStemmer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)stemWithCharArray:(IOSCharArray *)s
                  withInt:(jint)len {
  JreAssert(((IOSCharArray *) nil_chk(s))->size_ >= len + 1, @"this stemmer requires an oversized array of at least 1");
  len = [((OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *) nil_chk(OrgApacheLuceneAnalysisGlGalicianStemmer_plural)) applyWithCharArray:s withInt:len];
  len = [((OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *) nil_chk(OrgApacheLuceneAnalysisGlGalicianStemmer_unification)) applyWithCharArray:s withInt:len];
  len = [((OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *) nil_chk(OrgApacheLuceneAnalysisGlGalicianStemmer_adverb)) applyWithCharArray:s withInt:len];
  jint oldlen;
  do {
    oldlen = len;
    len = [((OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *) nil_chk(OrgApacheLuceneAnalysisGlGalicianStemmer_augmentative)) applyWithCharArray:s withInt:len];
  }
  while (len != oldlen);
  oldlen = len;
  len = [((OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *) nil_chk(OrgApacheLuceneAnalysisGlGalicianStemmer_noun)) applyWithCharArray:s withInt:len];
  if (len == oldlen) {
    len = [((OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *) nil_chk(OrgApacheLuceneAnalysisGlGalicianStemmer_verb)) applyWithCharArray:s withInt:len];
  }
  len = [((OrgApacheLuceneAnalysisPtRSLPStemmerBase_Step *) nil_chk(OrgApacheLuceneAnalysisGlGalicianStemmer_vowel)) applyWithCharArray:s withInt:len];
  for (jint i = 0; i < len; i++) switch (IOSCharArray_Get(s, i)) {
    case 0x00e1:
    *IOSCharArray_GetRef(s, i) = 'a';
    break;
    case 0x00e9:
    case 0x00ea:
    *IOSCharArray_GetRef(s, i) = 'e';
    break;
    case 0x00ed:
    *IOSCharArray_GetRef(s, i) = 'i';
    break;
    case 0x00f3:
    *IOSCharArray_GetRef(s, i) = 'o';
    break;
    case 0x00fa:
    *IOSCharArray_GetRef(s, i) = 'u';
    break;
  }
  return len;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(stemWithCharArray:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "plural", "LOrgApacheLuceneAnalysisPtRSLPStemmerBase_Step;", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
    { "unification", "LOrgApacheLuceneAnalysisPtRSLPStemmerBase_Step;", .constantValue.asLong = 0, 0x1a, -1, 3, -1, -1 },
    { "adverb", "LOrgApacheLuceneAnalysisPtRSLPStemmerBase_Step;", .constantValue.asLong = 0, 0x1a, -1, 4, -1, -1 },
    { "augmentative", "LOrgApacheLuceneAnalysisPtRSLPStemmerBase_Step;", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
    { "noun", "LOrgApacheLuceneAnalysisPtRSLPStemmerBase_Step;", .constantValue.asLong = 0, 0x1a, -1, 6, -1, -1 },
    { "verb", "LOrgApacheLuceneAnalysisPtRSLPStemmerBase_Step;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
    { "vowel", "LOrgApacheLuceneAnalysisPtRSLPStemmerBase_Step;", .constantValue.asLong = 0, 0x1a, -1, 8, -1, -1 },
  };
  static const void *ptrTable[] = { "stem", "[CI", &OrgApacheLuceneAnalysisGlGalicianStemmer_plural, &OrgApacheLuceneAnalysisGlGalicianStemmer_unification, &OrgApacheLuceneAnalysisGlGalicianStemmer_adverb, &OrgApacheLuceneAnalysisGlGalicianStemmer_augmentative, &OrgApacheLuceneAnalysisGlGalicianStemmer_noun, &OrgApacheLuceneAnalysisGlGalicianStemmer_verb, &OrgApacheLuceneAnalysisGlGalicianStemmer_vowel };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisGlGalicianStemmer = { "GalicianStemmer", "org.apache.lucene.analysis.gl", ptrTable, methods, fields, 7, 0x1, 2, 7, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisGlGalicianStemmer;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneAnalysisGlGalicianStemmer class]) {
    {
      id<JavaUtilMap> steps = OrgApacheLuceneAnalysisPtRSLPStemmerBase_parseWithIOSClass_withNSString_(OrgApacheLuceneAnalysisGlGalicianStemmer_class_(), @"galician.rslp");
      JreStrongAssign(&OrgApacheLuceneAnalysisGlGalicianStemmer_plural, [((id<JavaUtilMap>) nil_chk(steps)) getWithId:@"Plural"]);
      JreStrongAssign(&OrgApacheLuceneAnalysisGlGalicianStemmer_unification, [steps getWithId:@"Unification"]);
      JreStrongAssign(&OrgApacheLuceneAnalysisGlGalicianStemmer_adverb, [steps getWithId:@"Adverb"]);
      JreStrongAssign(&OrgApacheLuceneAnalysisGlGalicianStemmer_augmentative, [steps getWithId:@"Augmentative"]);
      JreStrongAssign(&OrgApacheLuceneAnalysisGlGalicianStemmer_noun, [steps getWithId:@"Noun"]);
      JreStrongAssign(&OrgApacheLuceneAnalysisGlGalicianStemmer_verb, [steps getWithId:@"Verb"]);
      JreStrongAssign(&OrgApacheLuceneAnalysisGlGalicianStemmer_vowel, [steps getWithId:@"Vowel"]);
    }
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneAnalysisGlGalicianStemmer)
  }
}

@end

void OrgApacheLuceneAnalysisGlGalicianStemmer_init(OrgApacheLuceneAnalysisGlGalicianStemmer *self) {
  OrgApacheLuceneAnalysisPtRSLPStemmerBase_init(self);
}

OrgApacheLuceneAnalysisGlGalicianStemmer *new_OrgApacheLuceneAnalysisGlGalicianStemmer_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisGlGalicianStemmer, init)
}

OrgApacheLuceneAnalysisGlGalicianStemmer *create_OrgApacheLuceneAnalysisGlGalicianStemmer_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisGlGalicianStemmer, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisGlGalicianStemmer)
