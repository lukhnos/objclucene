//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/tr/TurkishLowerCaseFilter.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Character.h"
#include "java/lang/System.h"
#include "org/apache/lucene/analysis/TokenFilter.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/analysis/tr/TurkishLowerCaseFilter.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/tr/TurkishLowerCaseFilter must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter () {
 @public
  id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAtt_;
}

/*!
 @brief lookahead for a combining dot above.
 other NSMs may be in between.
 */
- (jboolean)isBeforeDotWithCharArray:(IOSCharArray *)s
                             withInt:(jint)pos
                             withInt:(jint)len;

/*!
 @brief delete a character in-place.
 rarely happens, only if COMBINING_DOT_ABOVE is found after an i
 */
- (jint)delete__WithCharArray:(IOSCharArray *)s
                      withInt:(jint)pos
                      withInt:(jint)len;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter, termAtt_, id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)

inline jint OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_get_LATIN_CAPITAL_LETTER_I(void);
#define OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_LATIN_CAPITAL_LETTER_I 73
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter, LATIN_CAPITAL_LETTER_I, jint)

inline jint OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_get_LATIN_SMALL_LETTER_I(void);
#define OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_LATIN_SMALL_LETTER_I 105
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter, LATIN_SMALL_LETTER_I, jint)

inline jint OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_get_LATIN_SMALL_LETTER_DOTLESS_I(void);
#define OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_LATIN_SMALL_LETTER_DOTLESS_I 305
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter, LATIN_SMALL_LETTER_DOTLESS_I, jint)

inline jint OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_get_COMBINING_DOT_ABOVE(void);
#define OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_COMBINING_DOT_ABOVE 775
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter, COMBINING_DOT_ABOVE, jint)

__attribute__((unused)) static jboolean OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_isBeforeDotWithCharArray_withInt_withInt_(OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter *self, IOSCharArray *s, jint pos, jint len);

__attribute__((unused)) static jint OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_delete__WithCharArray_withInt_withInt_(OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter *self, IOSCharArray *s, jint pos, jint len);

@implementation OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter

- (instancetype)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)inArg {
  OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_initWithOrgApacheLuceneAnalysisTokenStream_(self, inArg);
  return self;
}

- (jboolean)incrementToken {
  jboolean iOrAfter = false;
  if ([((OrgApacheLuceneAnalysisTokenStream *) nil_chk(input_)) incrementToken]) {
    IOSCharArray *buffer = [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAtt_)) buffer];
    jint length = [termAtt_ java_length];
    for (jint i = 0; i < length; ) {
      jint ch = JavaLangCharacter_codePointAtWithCharArray_withInt_withInt_(buffer, i, length);
      iOrAfter = (ch == OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_LATIN_CAPITAL_LETTER_I || (iOrAfter && JavaLangCharacter_getTypeWithInt_(ch) == JavaLangCharacter_NON_SPACING_MARK));
      if (iOrAfter) {
        switch (ch) {
          case OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_COMBINING_DOT_ABOVE:
          length = OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_delete__WithCharArray_withInt_withInt_(self, buffer, i, length);
          continue;
          case OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_LATIN_CAPITAL_LETTER_I:
          if (OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_isBeforeDotWithCharArray_withInt_withInt_(self, buffer, i + 1, length)) {
            *IOSCharArray_GetRef(nil_chk(buffer), i) = OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_LATIN_SMALL_LETTER_I;
          }
          else {
            *IOSCharArray_GetRef(nil_chk(buffer), i) = OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_LATIN_SMALL_LETTER_DOTLESS_I;
            iOrAfter = false;
          }
          i++;
          continue;
        }
      }
      i += JavaLangCharacter_toCharsWithInt_withCharArray_withInt_(JavaLangCharacter_toLowerCaseWithInt_(ch), buffer, i);
    }
    [termAtt_ setLengthWithInt:length];
    return true;
  }
  else return false;
}

- (jboolean)isBeforeDotWithCharArray:(IOSCharArray *)s
                             withInt:(jint)pos
                             withInt:(jint)len {
  return OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_isBeforeDotWithCharArray_withInt_withInt_(self, s, pos, len);
}

- (jint)delete__WithCharArray:(IOSCharArray *)s
                      withInt:(jint)pos
                      withInt:(jint)len {
  return OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_delete__WithCharArray_withInt_withInt_(self, s, pos, len);
}

- (void)dealloc {
  RELEASE_(termAtt_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, 1, -1, -1, -1 },
    { NULL, "Z", 0x2, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 4, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneAnalysisTokenStream:);
  methods[1].selector = @selector(incrementToken);
  methods[2].selector = @selector(isBeforeDotWithCharArray:withInt:withInt:);
  methods[3].selector = @selector(delete__WithCharArray:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LATIN_CAPITAL_LETTER_I", "I", .constantValue.asInt = OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_LATIN_CAPITAL_LETTER_I, 0x1a, -1, -1, -1, -1 },
    { "LATIN_SMALL_LETTER_I", "I", .constantValue.asInt = OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_LATIN_SMALL_LETTER_I, 0x1a, -1, -1, -1, -1 },
    { "LATIN_SMALL_LETTER_DOTLESS_I", "I", .constantValue.asInt = OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_LATIN_SMALL_LETTER_DOTLESS_I, 0x1a, -1, -1, -1, -1 },
    { "COMBINING_DOT_ABOVE", "I", .constantValue.asInt = OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_COMBINING_DOT_ABOVE, 0x1a, -1, -1, -1, -1 },
    { "termAtt_", "LOrgApacheLuceneAnalysisTokenattributesCharTermAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneAnalysisTokenStream;", "LJavaIoIOException;", "isBeforeDot", "[CII", "delete" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter = { "TurkishLowerCaseFilter", "org.apache.lucene.analysis.tr", ptrTable, methods, fields, 7, 0x11, 4, 5, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter;
}

@end

void OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter *self, OrgApacheLuceneAnalysisTokenStream *inArg) {
  OrgApacheLuceneAnalysisTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_(self, inArg);
  JreStrongAssign(&self->termAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
}

OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter *new_OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTokenStream *inArg) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter, initWithOrgApacheLuceneAnalysisTokenStream_, inArg)
}

OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter *create_OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTokenStream *inArg) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter, initWithOrgApacheLuceneAnalysisTokenStream_, inArg)
}

jboolean OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_isBeforeDotWithCharArray_withInt_withInt_(OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter *self, IOSCharArray *s, jint pos, jint len) {
  for (jint i = pos; i < len; ) {
    jint ch = JavaLangCharacter_codePointAtWithCharArray_withInt_withInt_(s, i, len);
    if (JavaLangCharacter_getTypeWithInt_(ch) != JavaLangCharacter_NON_SPACING_MARK) return false;
    if (ch == OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_COMBINING_DOT_ABOVE) return true;
    i += JavaLangCharacter_charCountWithInt_(ch);
  }
  return false;
}

jint OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter_delete__WithCharArray_withInt_withInt_(OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter *self, IOSCharArray *s, jint pos, jint len) {
  if (pos < len) JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(s, pos + 1, s, pos, len - pos - 1);
  return len - 1;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisTrTurkishLowerCaseFilter)
