//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballFilter.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/apache/lucene/analysis/TokenFilter.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/snowball/SnowballFilter.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/KeywordAttribute.h"
#include "org/tartarus/snowball/SnowballProgram.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/snowball/SnowballFilter must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneAnalysisSnowballSnowballFilter () {
 @public
  OrgTartarusSnowballSnowballProgram *stemmer_;
  id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAtt_;
  id<OrgApacheLuceneAnalysisTokenattributesKeywordAttribute> keywordAttr_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisSnowballSnowballFilter, stemmer_, OrgTartarusSnowballSnowballProgram *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisSnowballSnowballFilter, termAtt_, id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisSnowballSnowballFilter, keywordAttr_, id<OrgApacheLuceneAnalysisTokenattributesKeywordAttribute>)

@implementation OrgApacheLuceneAnalysisSnowballSnowballFilter

- (instancetype)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input
                    withOrgTartarusSnowballSnowballProgram:(OrgTartarusSnowballSnowballProgram *)stemmer {
  OrgApacheLuceneAnalysisSnowballSnowballFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgTartarusSnowballSnowballProgram_(self, input, stemmer);
  return self;
}

- (instancetype)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)inArg
                                              withNSString:(NSString *)name {
  OrgApacheLuceneAnalysisSnowballSnowballFilter_initWithOrgApacheLuceneAnalysisTokenStream_withNSString_(self, inArg, name);
  return self;
}

- (jboolean)incrementToken {
  if ([((OrgApacheLuceneAnalysisTokenStream *) nil_chk(input_)) incrementToken]) {
    if (![((id<OrgApacheLuceneAnalysisTokenattributesKeywordAttribute>) nil_chk(keywordAttr_)) isKeyword]) {
      IOSCharArray *termBuffer = [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAtt_)) buffer];
      jint length = [termAtt_ java_length];
      [((OrgTartarusSnowballSnowballProgram *) nil_chk(stemmer_)) setCurrentWithCharArray:termBuffer withInt:length];
      [stemmer_ stem];
      IOSCharArray *finalTerm = [stemmer_ getCurrentBuffer];
      jint newLength = [stemmer_ getCurrentBufferLength];
      if (!JreObjectEqualsEquals(finalTerm, termBuffer)) [termAtt_ copyBufferWithCharArray:finalTerm withInt:0 withInt:newLength];
      else [termAtt_ setLengthWithInt:newLength];
    }
    return true;
  }
  else {
    return false;
  }
}

- (void)dealloc {
  RELEASE_(stemmer_);
  RELEASE_(termAtt_);
  RELEASE_(keywordAttr_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneAnalysisTokenStream:withOrgTartarusSnowballSnowballProgram:);
  methods[1].selector = @selector(initWithOrgApacheLuceneAnalysisTokenStream:withNSString:);
  methods[2].selector = @selector(incrementToken);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "stemmer_", "LOrgTartarusSnowballSnowballProgram;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "termAtt_", "LOrgApacheLuceneAnalysisTokenattributesCharTermAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "keywordAttr_", "LOrgApacheLuceneAnalysisTokenattributesKeywordAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneAnalysisTokenStream;LOrgTartarusSnowballSnowballProgram;", "LOrgApacheLuceneAnalysisTokenStream;LNSString;", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisSnowballSnowballFilter = { "SnowballFilter", "org.apache.lucene.analysis.snowball", ptrTable, methods, fields, 7, 0x11, 3, 3, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisSnowballSnowballFilter;
}

@end

void OrgApacheLuceneAnalysisSnowballSnowballFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgTartarusSnowballSnowballProgram_(OrgApacheLuceneAnalysisSnowballSnowballFilter *self, OrgApacheLuceneAnalysisTokenStream *input, OrgTartarusSnowballSnowballProgram *stemmer) {
  OrgApacheLuceneAnalysisTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_(self, input);
  JreStrongAssign(&self->termAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
  JreStrongAssign(&self->keywordAttr_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesKeywordAttribute_class_()]);
  JreStrongAssign(&self->stemmer_, stemmer);
}

OrgApacheLuceneAnalysisSnowballSnowballFilter *new_OrgApacheLuceneAnalysisSnowballSnowballFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgTartarusSnowballSnowballProgram_(OrgApacheLuceneAnalysisTokenStream *input, OrgTartarusSnowballSnowballProgram *stemmer) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisSnowballSnowballFilter, initWithOrgApacheLuceneAnalysisTokenStream_withOrgTartarusSnowballSnowballProgram_, input, stemmer)
}

OrgApacheLuceneAnalysisSnowballSnowballFilter *create_OrgApacheLuceneAnalysisSnowballSnowballFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgTartarusSnowballSnowballProgram_(OrgApacheLuceneAnalysisTokenStream *input, OrgTartarusSnowballSnowballProgram *stemmer) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisSnowballSnowballFilter, initWithOrgApacheLuceneAnalysisTokenStream_withOrgTartarusSnowballSnowballProgram_, input, stemmer)
}

void OrgApacheLuceneAnalysisSnowballSnowballFilter_initWithOrgApacheLuceneAnalysisTokenStream_withNSString_(OrgApacheLuceneAnalysisSnowballSnowballFilter *self, OrgApacheLuceneAnalysisTokenStream *inArg, NSString *name) {
  OrgApacheLuceneAnalysisTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_(self, inArg);
  JreStrongAssign(&self->termAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
  JreStrongAssign(&self->keywordAttr_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesKeywordAttribute_class_()]);
  @try {
    IOSClass *stemClass = [((IOSClass *) nil_chk(IOSClass_forName_(JreStrcat("$$$", @"org.tartarus.snowball.ext.", name, @"Stemmer")))) asSubclass:OrgTartarusSnowballSnowballProgram_class_()];
    JreStrongAssign(&self->stemmer_, [((IOSClass *) nil_chk(stemClass)) newInstance]);
  }
  @catch (JavaLangException *e) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$", @"Invalid stemmer class specified: ", name), e);
  }
}

OrgApacheLuceneAnalysisSnowballSnowballFilter *new_OrgApacheLuceneAnalysisSnowballSnowballFilter_initWithOrgApacheLuceneAnalysisTokenStream_withNSString_(OrgApacheLuceneAnalysisTokenStream *inArg, NSString *name) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisSnowballSnowballFilter, initWithOrgApacheLuceneAnalysisTokenStream_withNSString_, inArg, name)
}

OrgApacheLuceneAnalysisSnowballSnowballFilter *create_OrgApacheLuceneAnalysisSnowballSnowballFilter_initWithOrgApacheLuceneAnalysisTokenStream_withNSString_(OrgApacheLuceneAnalysisTokenStream *inArg, NSString *name) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisSnowballSnowballFilter, initWithOrgApacheLuceneAnalysisTokenStream_withNSString_, inArg, name)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisSnowballSnowballFilter)
