//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/analysis/NumericTokenStream.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "org/apache/lucene/analysis/NumericTokenStream.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/TermToBytesRefAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/TypeAttribute.h"
#include "org/apache/lucene/util/AttributeFactory.h"
#include "org/apache/lucene/util/AttributeImpl.h"
#include "org/apache/lucene/util/AttributeReflector.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"
#include "org/apache/lucene/util/NumericUtils.h"
#include "org/lukhnos/portmobile/util/Objects.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/NumericTokenStream must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneAnalysisNumericTokenStream () {
 @public
  id<OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute> numericAtt_;
  id<OrgApacheLuceneAnalysisTokenattributesTypeAttribute> typeAtt_;
  id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute> posIncrAtt_;
  jint valSize_;
  jint precisionStep_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisNumericTokenStream, numericAtt_, id<OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisNumericTokenStream, typeAtt_, id<OrgApacheLuceneAnalysisTokenattributesTypeAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisNumericTokenStream, posIncrAtt_, id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute>)

@interface OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute : NSObject

@end

@interface OrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory : OrgApacheLuceneUtilAttributeFactory {
 @public
  OrgApacheLuceneUtilAttributeFactory *delegate_;
}

- (instancetype)initWithOrgApacheLuceneUtilAttributeFactory:(OrgApacheLuceneUtilAttributeFactory *)delegate;

- (OrgApacheLuceneUtilAttributeImpl *)createAttributeInstanceWithIOSClass:(IOSClass *)attClass;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory)

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory, delegate_, OrgApacheLuceneUtilAttributeFactory *)

__attribute__((unused)) static void OrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory_initWithOrgApacheLuceneUtilAttributeFactory_(OrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory *self, OrgApacheLuceneUtilAttributeFactory *delegate);

__attribute__((unused)) static OrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory *new_OrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory_initWithOrgApacheLuceneUtilAttributeFactory_(OrgApacheLuceneUtilAttributeFactory *delegate) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory *create_OrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory_initWithOrgApacheLuceneUtilAttributeFactory_(OrgApacheLuceneUtilAttributeFactory *delegate);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory)

@interface OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl () {
 @public
  jlong value_;
  jint valueSize_;
  jint shift_;
  jint precisionStep_;
  OrgApacheLuceneUtilBytesRefBuilder *bytes_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl, bytes_, OrgApacheLuceneUtilBytesRefBuilder *)

NSString *OrgApacheLuceneAnalysisNumericTokenStream_TOKEN_TYPE_FULL_PREC = @"fullPrecNumeric";
NSString *OrgApacheLuceneAnalysisNumericTokenStream_TOKEN_TYPE_LOWER_PREC = @"lowerPrecNumeric";

@implementation OrgApacheLuceneAnalysisNumericTokenStream

+ (NSString *)TOKEN_TYPE_FULL_PREC {
  return OrgApacheLuceneAnalysisNumericTokenStream_TOKEN_TYPE_FULL_PREC;
}

+ (NSString *)TOKEN_TYPE_LOWER_PREC {
  return OrgApacheLuceneAnalysisNumericTokenStream_TOKEN_TYPE_LOWER_PREC;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisNumericTokenStream_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithInt:(jint)precisionStep {
  OrgApacheLuceneAnalysisNumericTokenStream_initWithInt_(self, precisionStep);
  return self;
}

- (instancetype)initWithOrgApacheLuceneUtilAttributeFactory:(OrgApacheLuceneUtilAttributeFactory *)factory
                                                    withInt:(jint)precisionStep {
  OrgApacheLuceneAnalysisNumericTokenStream_initWithOrgApacheLuceneUtilAttributeFactory_withInt_(self, factory, precisionStep);
  return self;
}

- (OrgApacheLuceneAnalysisNumericTokenStream *)setLongValueWithLong:(jlong)value {
  [((id<OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute>) nil_chk(numericAtt_)) init__WithLong:value withInt:valSize_ = 64 withInt:precisionStep_ withInt:-precisionStep_];
  return self;
}

- (OrgApacheLuceneAnalysisNumericTokenStream *)setIntValueWithInt:(jint)value {
  [((id<OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute>) nil_chk(numericAtt_)) init__WithLong:value withInt:valSize_ = 32 withInt:precisionStep_ withInt:-precisionStep_];
  return self;
}

- (OrgApacheLuceneAnalysisNumericTokenStream *)setDoubleValueWithDouble:(jdouble)value {
  [((id<OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute>) nil_chk(numericAtt_)) init__WithLong:OrgApacheLuceneUtilNumericUtils_doubleToSortableLongWithDouble_(value) withInt:valSize_ = 64 withInt:precisionStep_ withInt:-precisionStep_];
  return self;
}

- (OrgApacheLuceneAnalysisNumericTokenStream *)setFloatValueWithFloat:(jfloat)value {
  [((id<OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute>) nil_chk(numericAtt_)) init__WithLong:OrgApacheLuceneUtilNumericUtils_floatToSortableIntWithFloat_(value) withInt:valSize_ = 32 withInt:precisionStep_ withInt:-precisionStep_];
  return self;
}

- (void)reset {
  if (valSize_ == 0) @throw create_JavaLangIllegalStateException_initWithNSString_(@"call set???Value() before usage");
  [((id<OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute>) nil_chk(numericAtt_)) setShiftWithInt:-precisionStep_];
}

- (jboolean)incrementToken {
  if (valSize_ == 0) @throw create_JavaLangIllegalStateException_initWithNSString_(@"call set???Value() before usage");
  [self clearAttributes];
  jint shift = [((id<OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute>) nil_chk(numericAtt_)) incShift];
  [((id<OrgApacheLuceneAnalysisTokenattributesTypeAttribute>) nil_chk(typeAtt_)) setTypeWithNSString:(shift == 0) ? OrgApacheLuceneAnalysisNumericTokenStream_TOKEN_TYPE_FULL_PREC : OrgApacheLuceneAnalysisNumericTokenStream_TOKEN_TYPE_LOWER_PREC];
  [((id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute>) nil_chk(posIncrAtt_)) setPositionIncrementWithInt:(shift == 0) ? 1 : 0];
  return (shift < valSize_);
}

- (jint)getPrecisionStep {
  return precisionStep_;
}

- (NSString *)description {
  return JreStrcat("$$I$I$IC", [[self java_getClass] getSimpleName], @"(precisionStep=", precisionStep_, @" valueSize=", [((id<OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute>) nil_chk(numericAtt_)) getValueSize], @" shift=", [numericAtt_ getShift], ')');
}

- (void)dealloc {
  RELEASE_(numericAtt_);
  RELEASE_(typeAtt_);
  RELEASE_(posIncrAtt_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisNumericTokenStream;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisNumericTokenStream;", 0x1, 4, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisNumericTokenStream;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisNumericTokenStream;", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithInt:);
  methods[2].selector = @selector(initWithOrgApacheLuceneUtilAttributeFactory:withInt:);
  methods[3].selector = @selector(setLongValueWithLong:);
  methods[4].selector = @selector(setIntValueWithInt:);
  methods[5].selector = @selector(setDoubleValueWithDouble:);
  methods[6].selector = @selector(setFloatValueWithFloat:);
  methods[7].selector = @selector(reset);
  methods[8].selector = @selector(incrementToken);
  methods[9].selector = @selector(getPrecisionStep);
  methods[10].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TOKEN_TYPE_FULL_PREC", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
    { "TOKEN_TYPE_LOWER_PREC", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 11, -1, -1 },
    { "numericAtt_", "LOrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "typeAtt_", "LOrgApacheLuceneAnalysisTokenattributesTypeAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "posIncrAtt_", "LOrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "valSize_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "precisionStep_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "LOrgApacheLuceneUtilAttributeFactory;I", "setLongValue", "J", "setIntValue", "setDoubleValue", "D", "setFloatValue", "F", "toString", &OrgApacheLuceneAnalysisNumericTokenStream_TOKEN_TYPE_FULL_PREC, &OrgApacheLuceneAnalysisNumericTokenStream_TOKEN_TYPE_LOWER_PREC, "LOrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute;LOrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory;LOrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisNumericTokenStream = { "NumericTokenStream", "org.apache.lucene.analysis", ptrTable, methods, fields, 7, 0x11, 11, 7, -1, 12, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisNumericTokenStream;
}

@end

void OrgApacheLuceneAnalysisNumericTokenStream_init(OrgApacheLuceneAnalysisNumericTokenStream *self) {
  OrgApacheLuceneAnalysisNumericTokenStream_initWithOrgApacheLuceneUtilAttributeFactory_withInt_(self, JreLoadStatic(OrgApacheLuceneUtilAttributeFactory, DEFAULT_ATTRIBUTE_FACTORY), OrgApacheLuceneUtilNumericUtils_PRECISION_STEP_DEFAULT);
}

OrgApacheLuceneAnalysisNumericTokenStream *new_OrgApacheLuceneAnalysisNumericTokenStream_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisNumericTokenStream, init)
}

OrgApacheLuceneAnalysisNumericTokenStream *create_OrgApacheLuceneAnalysisNumericTokenStream_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisNumericTokenStream, init)
}

void OrgApacheLuceneAnalysisNumericTokenStream_initWithInt_(OrgApacheLuceneAnalysisNumericTokenStream *self, jint precisionStep) {
  OrgApacheLuceneAnalysisNumericTokenStream_initWithOrgApacheLuceneUtilAttributeFactory_withInt_(self, JreLoadStatic(OrgApacheLuceneUtilAttributeFactory, DEFAULT_ATTRIBUTE_FACTORY), precisionStep);
}

OrgApacheLuceneAnalysisNumericTokenStream *new_OrgApacheLuceneAnalysisNumericTokenStream_initWithInt_(jint precisionStep) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisNumericTokenStream, initWithInt_, precisionStep)
}

OrgApacheLuceneAnalysisNumericTokenStream *create_OrgApacheLuceneAnalysisNumericTokenStream_initWithInt_(jint precisionStep) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisNumericTokenStream, initWithInt_, precisionStep)
}

void OrgApacheLuceneAnalysisNumericTokenStream_initWithOrgApacheLuceneUtilAttributeFactory_withInt_(OrgApacheLuceneAnalysisNumericTokenStream *self, OrgApacheLuceneUtilAttributeFactory *factory, jint precisionStep) {
  OrgApacheLuceneAnalysisTokenStream_initWithOrgApacheLuceneUtilAttributeFactory_(self, create_OrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory_initWithOrgApacheLuceneUtilAttributeFactory_(factory));
  JreStrongAssign(&self->numericAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute_class_()]);
  JreStrongAssign(&self->typeAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesTypeAttribute_class_()]);
  JreStrongAssign(&self->posIncrAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute_class_()]);
  self->valSize_ = 0;
  if (precisionStep < 1) @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"precisionStep must be >=1");
  self->precisionStep_ = precisionStep;
  [((id<OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute>) nil_chk(self->numericAtt_)) setShiftWithInt:-precisionStep];
}

OrgApacheLuceneAnalysisNumericTokenStream *new_OrgApacheLuceneAnalysisNumericTokenStream_initWithOrgApacheLuceneUtilAttributeFactory_withInt_(OrgApacheLuceneUtilAttributeFactory *factory, jint precisionStep) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisNumericTokenStream, initWithOrgApacheLuceneUtilAttributeFactory_withInt_, factory, precisionStep)
}

OrgApacheLuceneAnalysisNumericTokenStream *create_OrgApacheLuceneAnalysisNumericTokenStream_initWithOrgApacheLuceneUtilAttributeFactory_withInt_(OrgApacheLuceneUtilAttributeFactory *factory, jint precisionStep) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisNumericTokenStream, initWithOrgApacheLuceneUtilAttributeFactory_withInt_, factory, precisionStep)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisNumericTokenStream)

@implementation OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getShift);
  methods[1].selector = @selector(getRawValue);
  methods[2].selector = @selector(getValueSize);
  methods[3].selector = @selector(init__WithLong:withInt:withInt:withInt:);
  methods[4].selector = @selector(setShiftWithInt:);
  methods[5].selector = @selector(incShift);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "init", "JIII", "setShift", "I", "LOrgApacheLuceneAnalysisNumericTokenStream;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute = { "NumericTermAttribute", "org.apache.lucene.analysis", ptrTable, methods, NULL, 7, 0x609, 6, 0, 4, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute)

@implementation OrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory

- (instancetype)initWithOrgApacheLuceneUtilAttributeFactory:(OrgApacheLuceneUtilAttributeFactory *)delegate {
  OrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory_initWithOrgApacheLuceneUtilAttributeFactory_(self, delegate);
  return self;
}

- (OrgApacheLuceneUtilAttributeImpl *)createAttributeInstanceWithIOSClass:(IOSClass *)attClass {
  if ([OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_() isAssignableFrom:attClass]) @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"NumericTokenStream does not support CharTermAttribute.");
  return [((OrgApacheLuceneUtilAttributeFactory *) nil_chk(delegate_)) createAttributeInstanceWithIOSClass:attClass];
}

- (void)dealloc {
  RELEASE_(delegate_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilAttributeImpl;", 0x1, 1, 2, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneUtilAttributeFactory:);
  methods[1].selector = @selector(createAttributeInstanceWithIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "delegate_", "LOrgApacheLuceneUtilAttributeFactory;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneUtilAttributeFactory;", "createAttributeInstance", "LIOSClass;", "(Ljava/lang/Class<+Lorg/apache/lucene/util/Attribute;>;)Lorg/apache/lucene/util/AttributeImpl;", "LOrgApacheLuceneAnalysisNumericTokenStream;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory = { "NumericAttributeFactory", "org.apache.lucene.analysis", ptrTable, methods, fields, 7, 0x1a, 2, 1, 4, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory;
}

@end

void OrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory_initWithOrgApacheLuceneUtilAttributeFactory_(OrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory *self, OrgApacheLuceneUtilAttributeFactory *delegate) {
  OrgApacheLuceneUtilAttributeFactory_init(self);
  JreStrongAssign(&self->delegate_, delegate);
}

OrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory *new_OrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory_initWithOrgApacheLuceneUtilAttributeFactory_(OrgApacheLuceneUtilAttributeFactory *delegate) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory, initWithOrgApacheLuceneUtilAttributeFactory_, delegate)
}

OrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory *create_OrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory_initWithOrgApacheLuceneUtilAttributeFactory_(OrgApacheLuceneUtilAttributeFactory *delegate) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory, initWithOrgApacheLuceneUtilAttributeFactory_, delegate)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisNumericTokenStream_NumericAttributeFactory)

@implementation OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgApacheLuceneUtilBytesRef *)getBytesRef {
  JreAssert(valueSize_ == 64 || valueSize_ == 32, @"org/apache/lucene/analysis/NumericTokenStream.java:161 condition failed: assert valueSize == 64 || valueSize == 32;");
  if (valueSize_ == 64) {
    OrgApacheLuceneUtilNumericUtils_longToPrefixCodedWithLong_withInt_withOrgApacheLuceneUtilBytesRefBuilder_(value_, shift_, bytes_);
  }
  else {
    OrgApacheLuceneUtilNumericUtils_intToPrefixCodedWithInt_withInt_withOrgApacheLuceneUtilBytesRefBuilder_((jint) value_, shift_, bytes_);
  }
  return [((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(bytes_)) get];
}

- (jint)getShift {
  return shift_;
}

- (void)setShiftWithInt:(jint)shift {
  self->shift_ = shift;
}

- (jint)incShift {
  return (shift_ += precisionStep_);
}

- (jlong)getRawValue {
  return value_ & ~((JreLShift64(1LL, shift_)) - 1LL);
}

- (jint)getValueSize {
  return valueSize_;
}

- (void)init__WithLong:(jlong)value
               withInt:(jint)valueSize
               withInt:(jint)precisionStep
               withInt:(jint)shift {
  self->value_ = value;
  self->valueSize_ = valueSize;
  self->precisionStep_ = precisionStep;
  self->shift_ = shift;
}

- (void)clear {
}

- (void)reflectWithWithOrgApacheLuceneUtilAttributeReflector:(id<OrgApacheLuceneUtilAttributeReflector>)reflector {
  [((id<OrgApacheLuceneUtilAttributeReflector>) nil_chk(reflector)) reflectWithIOSClass:OrgApacheLuceneAnalysisTokenattributesTermToBytesRefAttribute_class_() withNSString:@"bytes" withId:[self getBytesRef]];
  [reflector reflectWithIOSClass:OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute_class_() withNSString:@"shift" withId:JavaLangInteger_valueOfWithInt_(shift_)];
  [reflector reflectWithIOSClass:OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute_class_() withNSString:@"rawValue" withId:JavaLangLong_valueOfWithLong_([self getRawValue])];
  [reflector reflectWithIOSClass:OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute_class_() withNSString:@"valueSize" withId:JavaLangInteger_valueOfWithInt_(valueSize_)];
}

- (void)copyToWithOrgApacheLuceneUtilAttributeImpl:(OrgApacheLuceneUtilAttributeImpl *)target {
  id<OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute> a = (id<OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute>) cast_check(target, OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute_class_());
  [((id<OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttribute>) nil_chk(a)) init__WithLong:value_ withInt:valueSize_ withInt:precisionStep_ withInt:shift_];
}

- (OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl *)java_clone {
  OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl *t = (OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl *) cast_chk([super java_clone], [OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl class]);
  JreStrongAssignAndConsume(&((OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl *) nil_chk(t))->bytes_, new_OrgApacheLuceneUtilBytesRefBuilder_init());
  [t->bytes_ copyBytesWithOrgApacheLuceneUtilBytesRef:[self getBytesRef]];
  return t;
}

- (NSUInteger)hash {
  return OrgLukhnosPortmobileUtilObjects_hash__WithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(precisionStep_), JavaLangInteger_valueOfWithInt_(shift_), JavaLangLong_valueOfWithLong_(value_), JavaLangInteger_valueOfWithInt_(valueSize_) } count:4 type:NSObject_class_()]);
}

- (jboolean)isEqual:(id)obj {
  if (JreObjectEqualsEquals(self, obj)) return true;
  if (obj == nil) return false;
  if (!JreObjectEqualsEquals([self java_getClass], [obj java_getClass])) return false;
  OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl *other = (OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl *) cast_chk(obj, [OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl class]);
  if (precisionStep_ != other->precisionStep_) return false;
  if (shift_ != other->shift_) return false;
  if (value_ != other->value_) return false;
  if (valueSize_ != other->valueSize_) return false;
  return true;
}

- (void)dealloc {
  RELEASE_(bytes_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRef;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl;", 0x1, 8, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 9, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 10, 11, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getBytesRef);
  methods[2].selector = @selector(getShift);
  methods[3].selector = @selector(setShiftWithInt:);
  methods[4].selector = @selector(incShift);
  methods[5].selector = @selector(getRawValue);
  methods[6].selector = @selector(getValueSize);
  methods[7].selector = @selector(init__WithLong:withInt:withInt:withInt:);
  methods[8].selector = @selector(clear);
  methods[9].selector = @selector(reflectWithWithOrgApacheLuceneUtilAttributeReflector:);
  methods[10].selector = @selector(copyToWithOrgApacheLuceneUtilAttributeImpl:);
  methods[11].selector = @selector(java_clone);
  methods[12].selector = @selector(hash);
  methods[13].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "valueSize_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "shift_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "precisionStep_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bytes_", "LOrgApacheLuceneUtilBytesRefBuilder;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setShift", "I", "init", "JIII", "reflectWith", "LOrgApacheLuceneUtilAttributeReflector;", "copyTo", "LOrgApacheLuceneUtilAttributeImpl;", "clone", "hashCode", "equals", "LNSObject;", "LOrgApacheLuceneAnalysisNumericTokenStream;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl = { "NumericTermAttributeImpl", "org.apache.lucene.analysis", ptrTable, methods, fields, 7, 0x19, 14, 5, 12, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl;
}

@end

void OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl_init(OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl *self) {
  OrgApacheLuceneUtilAttributeImpl_init(self);
  self->value_ = 0LL;
  self->valueSize_ = 0;
  self->shift_ = 0;
  self->precisionStep_ = 0;
  JreStrongAssignAndConsume(&self->bytes_, new_OrgApacheLuceneUtilBytesRefBuilder_init());
}

OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl *new_OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl, init)
}

OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl *create_OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisNumericTokenStream_NumericTermAttributeImpl)
