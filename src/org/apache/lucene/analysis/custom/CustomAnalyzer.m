//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/custom/CustomAnalyzer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/Reader.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "org/apache/lucene/analysis/Analyzer.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/Tokenizer.h"
#include "org/apache/lucene/analysis/custom/CustomAnalyzer.h"
#include "org/apache/lucene/analysis/util/AbstractAnalysisFactory.h"
#include "org/apache/lucene/analysis/util/CharFilterFactory.h"
#include "org/apache/lucene/analysis/util/ClasspathResourceLoader.h"
#include "org/apache/lucene/analysis/util/FilesystemResourceLoader.h"
#include "org/apache/lucene/analysis/util/ResourceLoader.h"
#include "org/apache/lucene/analysis/util/ResourceLoaderAware.h"
#include "org/apache/lucene/analysis/util/TokenFilterFactory.h"
#include "org/apache/lucene/analysis/util/TokenizerFactory.h"
#include "org/apache/lucene/util/SetOnce.h"
#include "org/apache/lucene/util/Version.h"
#include "org/lukhnos/portmobile/file/Path.h"
#include "org/lukhnos/portmobile/util/Objects.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/custom/CustomAnalyzer must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneAnalysisCustomCustomAnalyzer () {
 @public
  IOSObjectArray *charFilters_;
  OrgApacheLuceneAnalysisUtilTokenizerFactory *tokenizer_;
  IOSObjectArray *tokenFilters_;
  JavaLangInteger *posIncGap_;
  JavaLangInteger *offsetGap_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCustomCustomAnalyzer, charFilters_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCustomCustomAnalyzer, tokenizer_, OrgApacheLuceneAnalysisUtilTokenizerFactory *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCustomCustomAnalyzer, tokenFilters_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCustomCustomAnalyzer, posIncGap_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCustomCustomAnalyzer, offsetGap_, JavaLangInteger *)

@interface OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder () {
 @public
  id<OrgApacheLuceneAnalysisUtilResourceLoader> loader_;
  OrgApacheLuceneUtilSetOnce *defaultMatchVersion_;
  id<JavaUtilList> charFilters_;
  OrgApacheLuceneUtilSetOnce *tokenizer_;
  id<JavaUtilList> tokenFilters_;
  OrgApacheLuceneUtilSetOnce *posIncGap_;
  OrgApacheLuceneUtilSetOnce *offsetGap_;
  jboolean componentsAdded_;
}

- (id<JavaUtilMap>)applyDefaultParamsWithJavaUtilMap:(id<JavaUtilMap>)map;

- (id<JavaUtilMap>)paramsToMapWithNSStringArray:(IOSObjectArray *)params;

- (id)applyResourceLoaderWithId:(id)factory;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder, loader_, id<OrgApacheLuceneAnalysisUtilResourceLoader>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder, defaultMatchVersion_, OrgApacheLuceneUtilSetOnce *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder, charFilters_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder, tokenizer_, OrgApacheLuceneUtilSetOnce *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder, tokenFilters_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder, posIncGap_, OrgApacheLuceneUtilSetOnce *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder, offsetGap_, OrgApacheLuceneUtilSetOnce *)

__attribute__((unused)) static id<JavaUtilMap> OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder_applyDefaultParamsWithJavaUtilMap_(OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder *self, id<JavaUtilMap> map);

__attribute__((unused)) static id<JavaUtilMap> OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder_paramsToMapWithNSStringArray_(OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder *self, IOSObjectArray *params);

__attribute__((unused)) static id OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder_applyResourceLoaderWithId_(OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder *self, id factory);

@implementation OrgApacheLuceneAnalysisCustomCustomAnalyzer

+ (OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder *)builder {
  return OrgApacheLuceneAnalysisCustomCustomAnalyzer_builder();
}

+ (OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder *)builderWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)configDir {
  return OrgApacheLuceneAnalysisCustomCustomAnalyzer_builderWithOrgLukhnosPortmobileFilePath_(configDir);
}

+ (OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder *)builderWithOrgApacheLuceneAnalysisUtilResourceLoader:(id<OrgApacheLuceneAnalysisUtilResourceLoader>)loader {
  return OrgApacheLuceneAnalysisCustomCustomAnalyzer_builderWithOrgApacheLuceneAnalysisUtilResourceLoader_(loader);
}

- (instancetype)initWithOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)defaultMatchVersion
withOrgApacheLuceneAnalysisUtilCharFilterFactoryArray:(IOSObjectArray *)charFilters
   withOrgApacheLuceneAnalysisUtilTokenizerFactory:(OrgApacheLuceneAnalysisUtilTokenizerFactory *)tokenizer
withOrgApacheLuceneAnalysisUtilTokenFilterFactoryArray:(IOSObjectArray *)tokenFilters
                               withJavaLangInteger:(JavaLangInteger *)posIncGap
                               withJavaLangInteger:(JavaLangInteger *)offsetGap {
  OrgApacheLuceneAnalysisCustomCustomAnalyzer_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisUtilCharFilterFactoryArray_withOrgApacheLuceneAnalysisUtilTokenizerFactory_withOrgApacheLuceneAnalysisUtilTokenFilterFactoryArray_withJavaLangInteger_withJavaLangInteger_(self, defaultMatchVersion, charFilters, tokenizer, tokenFilters, posIncGap, offsetGap);
  return self;
}

- (JavaIoReader *)initReaderWithNSString:(NSString *)fieldName
                        withJavaIoReader:(JavaIoReader *)reader {
  {
    IOSObjectArray *a__ = charFilters_;
    OrgApacheLuceneAnalysisUtilCharFilterFactory * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgApacheLuceneAnalysisUtilCharFilterFactory * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneAnalysisUtilCharFilterFactory *charFilter = *b__++;
      reader = [((OrgApacheLuceneAnalysisUtilCharFilterFactory *) nil_chk(charFilter)) createWithJavaIoReader:reader];
    }
  }
  return reader;
}

- (OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)createComponentsWithNSString:(NSString *)fieldName {
  OrgApacheLuceneAnalysisTokenizer *tk = [((OrgApacheLuceneAnalysisUtilTokenizerFactory *) nil_chk(tokenizer_)) create];
  OrgApacheLuceneAnalysisTokenStream *ts = JreRetainedLocalValue(tk);
  {
    IOSObjectArray *a__ = tokenFilters_;
    OrgApacheLuceneAnalysisUtilTokenFilterFactory * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgApacheLuceneAnalysisUtilTokenFilterFactory * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneAnalysisUtilTokenFilterFactory *filter = *b__++;
      ts = [((OrgApacheLuceneAnalysisUtilTokenFilterFactory *) nil_chk(filter)) createWithOrgApacheLuceneAnalysisTokenStream:ts];
    }
  }
  return create_OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents_initWithOrgApacheLuceneAnalysisTokenizer_withOrgApacheLuceneAnalysisTokenStream_(tk, ts);
}

- (jint)getPositionIncrementGapWithNSString:(NSString *)fieldName {
  return (posIncGap_ == nil) ? [super getPositionIncrementGapWithNSString:fieldName] : [((JavaLangInteger *) nil_chk(posIncGap_)) intValue];
}

- (jint)getOffsetGapWithNSString:(NSString *)fieldName {
  return (offsetGap_ == nil) ? [super getOffsetGapWithNSString:fieldName] : [((JavaLangInteger *) nil_chk(offsetGap_)) intValue];
}

- (id<JavaUtilList>)getCharFilterFactories {
  return JavaUtilCollections_unmodifiableListWithJavaUtilList_(JavaUtilArrays_asListWithNSObjectArray_(charFilters_));
}

- (OrgApacheLuceneAnalysisUtilTokenizerFactory *)getTokenizerFactory {
  return tokenizer_;
}

- (id<JavaUtilList>)getTokenFilterFactories {
  return JavaUtilCollections_unmodifiableListWithJavaUtilList_(JavaUtilArrays_asListWithNSObjectArray_(tokenFilters_));
}

- (NSString *)description {
  JavaLangStringBuilder *sb = [create_JavaLangStringBuilder_initWithNSString_([[self java_getClass] getSimpleName]) appendWithChar:'('];
  {
    IOSObjectArray *a__ = charFilters_;
    OrgApacheLuceneAnalysisUtilCharFilterFactory * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgApacheLuceneAnalysisUtilCharFilterFactory * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneAnalysisUtilCharFilterFactory *filter = *b__++;
      [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(sb)) appendWithId:filter])) appendWithChar:','];
    }
  }
  [((JavaLangStringBuilder *) nil_chk(sb)) appendWithId:tokenizer_];
  {
    IOSObjectArray *a__ = tokenFilters_;
    OrgApacheLuceneAnalysisUtilTokenFilterFactory * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgApacheLuceneAnalysisUtilTokenFilterFactory * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneAnalysisUtilTokenFilterFactory *filter = *b__++;
      [((JavaLangStringBuilder *) nil_chk([sb appendWithChar:','])) appendWithId:filter];
    }
  }
  return [((JavaLangStringBuilder *) nil_chk([sb appendWithChar:')'])) description];
}

- (void)dealloc {
  RELEASE_(charFilters_);
  RELEASE_(tokenizer_);
  RELEASE_(tokenFilters_);
  RELEASE_(posIncGap_);
  RELEASE_(offsetGap_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 3, -1, -1, -1, -1 },
    { NULL, "LJavaIoReader;", 0x4, 4, 5, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents;", 0x4, 6, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 8, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 9, 7, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 10, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisUtilTokenizerFactory;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 11, -1, -1 },
    { NULL, "LNSString;", 0x1, 12, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(builder);
  methods[1].selector = @selector(builderWithOrgLukhnosPortmobileFilePath:);
  methods[2].selector = @selector(builderWithOrgApacheLuceneAnalysisUtilResourceLoader:);
  methods[3].selector = @selector(initWithOrgApacheLuceneUtilVersion:withOrgApacheLuceneAnalysisUtilCharFilterFactoryArray:withOrgApacheLuceneAnalysisUtilTokenizerFactory:withOrgApacheLuceneAnalysisUtilTokenFilterFactoryArray:withJavaLangInteger:withJavaLangInteger:);
  methods[4].selector = @selector(initReaderWithNSString:withJavaIoReader:);
  methods[5].selector = @selector(createComponentsWithNSString:);
  methods[6].selector = @selector(getPositionIncrementGapWithNSString:);
  methods[7].selector = @selector(getOffsetGapWithNSString:);
  methods[8].selector = @selector(getCharFilterFactories);
  methods[9].selector = @selector(getTokenizerFactory);
  methods[10].selector = @selector(getTokenFilterFactories);
  methods[11].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "charFilters_", "[LOrgApacheLuceneAnalysisUtilCharFilterFactory;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "tokenizer_", "LOrgApacheLuceneAnalysisUtilTokenizerFactory;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "tokenFilters_", "[LOrgApacheLuceneAnalysisUtilTokenFilterFactory;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "posIncGap_", "LJavaLangInteger;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "offsetGap_", "LJavaLangInteger;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "builder", "LOrgLukhnosPortmobileFilePath;", "LOrgApacheLuceneAnalysisUtilResourceLoader;", "LOrgApacheLuceneUtilVersion;[LOrgApacheLuceneAnalysisUtilCharFilterFactory;LOrgApacheLuceneAnalysisUtilTokenizerFactory;[LOrgApacheLuceneAnalysisUtilTokenFilterFactory;LJavaLangInteger;LJavaLangInteger;", "initReader", "LNSString;LJavaIoReader;", "createComponents", "LNSString;", "getPositionIncrementGap", "getOffsetGap", "()Ljava/util/List<Lorg/apache/lucene/analysis/util/CharFilterFactory;>;", "()Ljava/util/List<Lorg/apache/lucene/analysis/util/TokenFilterFactory;>;", "toString", "LOrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisCustomCustomAnalyzer = { "CustomAnalyzer", "org.apache.lucene.analysis.custom", ptrTable, methods, fields, 7, 0x11, 12, 5, -1, 13, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisCustomCustomAnalyzer;
}

@end

OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder *OrgApacheLuceneAnalysisCustomCustomAnalyzer_builder() {
  OrgApacheLuceneAnalysisCustomCustomAnalyzer_initialize();
  return OrgApacheLuceneAnalysisCustomCustomAnalyzer_builderWithOrgApacheLuceneAnalysisUtilResourceLoader_(create_OrgApacheLuceneAnalysisUtilClasspathResourceLoader_init());
}

OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder *OrgApacheLuceneAnalysisCustomCustomAnalyzer_builderWithOrgLukhnosPortmobileFilePath_(OrgLukhnosPortmobileFilePath *configDir) {
  OrgApacheLuceneAnalysisCustomCustomAnalyzer_initialize();
  return OrgApacheLuceneAnalysisCustomCustomAnalyzer_builderWithOrgApacheLuceneAnalysisUtilResourceLoader_(create_OrgApacheLuceneAnalysisUtilFilesystemResourceLoader_initWithOrgLukhnosPortmobileFilePath_(configDir));
}

OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder *OrgApacheLuceneAnalysisCustomCustomAnalyzer_builderWithOrgApacheLuceneAnalysisUtilResourceLoader_(id<OrgApacheLuceneAnalysisUtilResourceLoader> loader) {
  OrgApacheLuceneAnalysisCustomCustomAnalyzer_initialize();
  return create_OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder_initWithOrgApacheLuceneAnalysisUtilResourceLoader_(loader);
}

void OrgApacheLuceneAnalysisCustomCustomAnalyzer_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisUtilCharFilterFactoryArray_withOrgApacheLuceneAnalysisUtilTokenizerFactory_withOrgApacheLuceneAnalysisUtilTokenFilterFactoryArray_withJavaLangInteger_withJavaLangInteger_(OrgApacheLuceneAnalysisCustomCustomAnalyzer *self, OrgApacheLuceneUtilVersion *defaultMatchVersion, IOSObjectArray *charFilters, OrgApacheLuceneAnalysisUtilTokenizerFactory *tokenizer, IOSObjectArray *tokenFilters, JavaLangInteger *posIncGap, JavaLangInteger *offsetGap) {
  OrgApacheLuceneAnalysisAnalyzer_init(self);
  JreStrongAssign(&self->charFilters_, charFilters);
  JreStrongAssign(&self->tokenizer_, tokenizer);
  JreStrongAssign(&self->tokenFilters_, tokenFilters);
  JreStrongAssign(&self->posIncGap_, posIncGap);
  JreStrongAssign(&self->offsetGap_, offsetGap);
  if (defaultMatchVersion != nil) {
    [self setVersionWithOrgApacheLuceneUtilVersion:defaultMatchVersion];
  }
}

OrgApacheLuceneAnalysisCustomCustomAnalyzer *new_OrgApacheLuceneAnalysisCustomCustomAnalyzer_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisUtilCharFilterFactoryArray_withOrgApacheLuceneAnalysisUtilTokenizerFactory_withOrgApacheLuceneAnalysisUtilTokenFilterFactoryArray_withJavaLangInteger_withJavaLangInteger_(OrgApacheLuceneUtilVersion *defaultMatchVersion, IOSObjectArray *charFilters, OrgApacheLuceneAnalysisUtilTokenizerFactory *tokenizer, IOSObjectArray *tokenFilters, JavaLangInteger *posIncGap, JavaLangInteger *offsetGap) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisCustomCustomAnalyzer, initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisUtilCharFilterFactoryArray_withOrgApacheLuceneAnalysisUtilTokenizerFactory_withOrgApacheLuceneAnalysisUtilTokenFilterFactoryArray_withJavaLangInteger_withJavaLangInteger_, defaultMatchVersion, charFilters, tokenizer, tokenFilters, posIncGap, offsetGap)
}

OrgApacheLuceneAnalysisCustomCustomAnalyzer *create_OrgApacheLuceneAnalysisCustomCustomAnalyzer_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisUtilCharFilterFactoryArray_withOrgApacheLuceneAnalysisUtilTokenizerFactory_withOrgApacheLuceneAnalysisUtilTokenFilterFactoryArray_withJavaLangInteger_withJavaLangInteger_(OrgApacheLuceneUtilVersion *defaultMatchVersion, IOSObjectArray *charFilters, OrgApacheLuceneAnalysisUtilTokenizerFactory *tokenizer, IOSObjectArray *tokenFilters, JavaLangInteger *posIncGap, JavaLangInteger *offsetGap) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisCustomCustomAnalyzer, initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisUtilCharFilterFactoryArray_withOrgApacheLuceneAnalysisUtilTokenizerFactory_withOrgApacheLuceneAnalysisUtilTokenFilterFactoryArray_withJavaLangInteger_withJavaLangInteger_, defaultMatchVersion, charFilters, tokenizer, tokenFilters, posIncGap, offsetGap)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisCustomCustomAnalyzer)

@implementation OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder

- (instancetype)initWithOrgApacheLuceneAnalysisUtilResourceLoader:(id<OrgApacheLuceneAnalysisUtilResourceLoader>)loader {
  OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder_initWithOrgApacheLuceneAnalysisUtilResourceLoader_(self, loader);
  return self;
}

- (OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder *)withDefaultMatchVersionWithOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)version_ {
  OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_withNSString_(version_, @"version may not be null");
  if (componentsAdded_) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"You may only set the default match version before adding tokenizers, token filters, or char filters.");
  }
  [((OrgApacheLuceneUtilSetOnce *) nil_chk(self->defaultMatchVersion_)) setWithId:version_];
  return self;
}

- (OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder *)withPositionIncrementGapWithInt:(jint)posIncGap {
  if (posIncGap < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"posIncGap must be >= 0");
  }
  [((OrgApacheLuceneUtilSetOnce *) nil_chk(self->posIncGap_)) setWithId:JavaLangInteger_valueOfWithInt_(posIncGap)];
  return self;
}

- (OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder *)withOffsetGapWithInt:(jint)offsetGap {
  if (offsetGap < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"offsetGap must be >= 0");
  }
  [((OrgApacheLuceneUtilSetOnce *) nil_chk(self->offsetGap_)) setWithId:JavaLangInteger_valueOfWithInt_(offsetGap)];
  return self;
}

- (OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder *)withTokenizerWithNSString:(NSString *)name
                                                                 withNSStringArray:(IOSObjectArray *)params {
  return [self withTokenizerWithNSString:name withJavaUtilMap:OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder_paramsToMapWithNSStringArray_(self, params)];
}

- (OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder *)withTokenizerWithNSString:(NSString *)name
                                                                   withJavaUtilMap:(id<JavaUtilMap>)params {
  OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_withNSString_(name, @"Tokenizer name may not be null");
  [((OrgApacheLuceneUtilSetOnce *) nil_chk(tokenizer_)) setWithId:OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder_applyResourceLoaderWithId_(self, OrgApacheLuceneAnalysisUtilTokenizerFactory_forNameWithNSString_withJavaUtilMap_(name, OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder_applyDefaultParamsWithJavaUtilMap_(self, params)))];
  componentsAdded_ = true;
  return self;
}

- (OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder *)addTokenFilterWithNSString:(NSString *)name
                                                                  withNSStringArray:(IOSObjectArray *)params {
  return [self addTokenFilterWithNSString:name withJavaUtilMap:OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder_paramsToMapWithNSStringArray_(self, params)];
}

- (OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder *)addTokenFilterWithNSString:(NSString *)name
                                                                    withJavaUtilMap:(id<JavaUtilMap>)params {
  OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_withNSString_(name, @"TokenFilter name may not be null");
  [((id<JavaUtilList>) nil_chk(tokenFilters_)) addWithId:OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder_applyResourceLoaderWithId_(self, OrgApacheLuceneAnalysisUtilTokenFilterFactory_forNameWithNSString_withJavaUtilMap_(name, OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder_applyDefaultParamsWithJavaUtilMap_(self, params)))];
  componentsAdded_ = true;
  return self;
}

- (OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder *)addCharFilterWithNSString:(NSString *)name
                                                                 withNSStringArray:(IOSObjectArray *)params {
  return [self addCharFilterWithNSString:name withJavaUtilMap:OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder_paramsToMapWithNSStringArray_(self, params)];
}

- (OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder *)addCharFilterWithNSString:(NSString *)name
                                                                   withJavaUtilMap:(id<JavaUtilMap>)params {
  OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_withNSString_(name, @"CharFilter name may not be null");
  [((id<JavaUtilList>) nil_chk(charFilters_)) addWithId:OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder_applyResourceLoaderWithId_(self, OrgApacheLuceneAnalysisUtilCharFilterFactory_forNameWithNSString_withJavaUtilMap_(name, OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder_applyDefaultParamsWithJavaUtilMap_(self, params)))];
  componentsAdded_ = true;
  return self;
}

- (OrgApacheLuceneAnalysisCustomCustomAnalyzer *)build {
  if ([((OrgApacheLuceneUtilSetOnce *) nil_chk(tokenizer_)) get] == nil) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"You have to set at least a tokenizer.");
  }
  return create_OrgApacheLuceneAnalysisCustomCustomAnalyzer_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneAnalysisUtilCharFilterFactoryArray_withOrgApacheLuceneAnalysisUtilTokenizerFactory_withOrgApacheLuceneAnalysisUtilTokenFilterFactoryArray_withJavaLangInteger_withJavaLangInteger_([((OrgApacheLuceneUtilSetOnce *) nil_chk(defaultMatchVersion_)) get], [((id<JavaUtilList>) nil_chk(charFilters_)) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[charFilters_ size] type:OrgApacheLuceneAnalysisUtilCharFilterFactory_class_()]], [tokenizer_ get], [((id<JavaUtilList>) nil_chk(tokenFilters_)) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[tokenFilters_ size] type:OrgApacheLuceneAnalysisUtilTokenFilterFactory_class_()]], [((OrgApacheLuceneUtilSetOnce *) nil_chk(posIncGap_)) get], [((OrgApacheLuceneUtilSetOnce *) nil_chk(offsetGap_)) get]);
}

- (id<JavaUtilMap>)applyDefaultParamsWithJavaUtilMap:(id<JavaUtilMap>)map {
  return OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder_applyDefaultParamsWithJavaUtilMap_(self, map);
}

- (id<JavaUtilMap>)paramsToMapWithNSStringArray:(IOSObjectArray *)params {
  return OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder_paramsToMapWithNSStringArray_(self, params);
}

- (id)applyResourceLoaderWithId:(id)factory {
  return OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder_applyResourceLoaderWithId_(self, factory);
}

- (void)dealloc {
  RELEASE_(loader_);
  RELEASE_(defaultMatchVersion_);
  RELEASE_(charFilters_);
  RELEASE_(tokenizer_);
  RELEASE_(tokenFilters_);
  RELEASE_(posIncGap_);
  RELEASE_(offsetGap_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder;", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder;", 0x81, 6, 7, 8, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder;", 0x1, 6, 9, 8, 10, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder;", 0x81, 11, 7, 8, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder;", 0x1, 11, 9, 8, 10, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder;", 0x81, 12, 7, 8, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder;", 0x1, 12, 9, 8, 10, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisCustomCustomAnalyzer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x2, 13, 14, -1, 15, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x82, 16, 17, -1, 18, -1, -1 },
    { NULL, "LNSObject;", 0x2, 19, 20, 8, 21, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneAnalysisUtilResourceLoader:);
  methods[1].selector = @selector(withDefaultMatchVersionWithOrgApacheLuceneUtilVersion:);
  methods[2].selector = @selector(withPositionIncrementGapWithInt:);
  methods[3].selector = @selector(withOffsetGapWithInt:);
  methods[4].selector = @selector(withTokenizerWithNSString:withNSStringArray:);
  methods[5].selector = @selector(withTokenizerWithNSString:withJavaUtilMap:);
  methods[6].selector = @selector(addTokenFilterWithNSString:withNSStringArray:);
  methods[7].selector = @selector(addTokenFilterWithNSString:withJavaUtilMap:);
  methods[8].selector = @selector(addCharFilterWithNSString:withNSStringArray:);
  methods[9].selector = @selector(addCharFilterWithNSString:withJavaUtilMap:);
  methods[10].selector = @selector(build);
  methods[11].selector = @selector(applyDefaultParamsWithJavaUtilMap:);
  methods[12].selector = @selector(paramsToMapWithNSStringArray:);
  methods[13].selector = @selector(applyResourceLoaderWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "loader_", "LOrgApacheLuceneAnalysisUtilResourceLoader;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "defaultMatchVersion_", "LOrgApacheLuceneUtilSetOnce;", .constantValue.asLong = 0, 0x12, -1, -1, 22, -1 },
    { "charFilters_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 23, -1 },
    { "tokenizer_", "LOrgApacheLuceneUtilSetOnce;", .constantValue.asLong = 0, 0x12, -1, -1, 24, -1 },
    { "tokenFilters_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 25, -1 },
    { "posIncGap_", "LOrgApacheLuceneUtilSetOnce;", .constantValue.asLong = 0, 0x12, -1, -1, 26, -1 },
    { "offsetGap_", "LOrgApacheLuceneUtilSetOnce;", .constantValue.asLong = 0, 0x12, -1, -1, 26, -1 },
    { "componentsAdded_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneAnalysisUtilResourceLoader;", "withDefaultMatchVersion", "LOrgApacheLuceneUtilVersion;", "withPositionIncrementGap", "I", "withOffsetGap", "withTokenizer", "LNSString;[LNSString;", "LJavaIoIOException;", "LNSString;LJavaUtilMap;", "(Ljava/lang/String;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)Lorg/apache/lucene/analysis/custom/CustomAnalyzer$Builder;", "addTokenFilter", "addCharFilter", "applyDefaultParams", "LJavaUtilMap;", "(Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", "paramsToMap", "[LNSString;", "([Ljava/lang/String;)Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", "applyResourceLoader", "LNSObject;", "<T:Ljava/lang/Object;>(TT;)TT;", "Lorg/apache/lucene/util/SetOnce<Lorg/apache/lucene/util/Version;>;", "Ljava/util/List<Lorg/apache/lucene/analysis/util/CharFilterFactory;>;", "Lorg/apache/lucene/util/SetOnce<Lorg/apache/lucene/analysis/util/TokenizerFactory;>;", "Ljava/util/List<Lorg/apache/lucene/analysis/util/TokenFilterFactory;>;", "Lorg/apache/lucene/util/SetOnce<Ljava/lang/Integer;>;", "LOrgApacheLuceneAnalysisCustomCustomAnalyzer;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder = { "Builder", "org.apache.lucene.analysis.custom", ptrTable, methods, fields, 7, 0x19, 14, 8, 27, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder;
}

@end

void OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder_initWithOrgApacheLuceneAnalysisUtilResourceLoader_(OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder *self, id<OrgApacheLuceneAnalysisUtilResourceLoader> loader) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->defaultMatchVersion_, new_OrgApacheLuceneUtilSetOnce_init());
  JreStrongAssignAndConsume(&self->charFilters_, new_JavaUtilArrayList_init());
  JreStrongAssignAndConsume(&self->tokenizer_, new_OrgApacheLuceneUtilSetOnce_init());
  JreStrongAssignAndConsume(&self->tokenFilters_, new_JavaUtilArrayList_init());
  JreStrongAssignAndConsume(&self->posIncGap_, new_OrgApacheLuceneUtilSetOnce_init());
  JreStrongAssignAndConsume(&self->offsetGap_, new_OrgApacheLuceneUtilSetOnce_init());
  self->componentsAdded_ = false;
  JreStrongAssign(&self->loader_, loader);
}

OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder *new_OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder_initWithOrgApacheLuceneAnalysisUtilResourceLoader_(id<OrgApacheLuceneAnalysisUtilResourceLoader> loader) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder, initWithOrgApacheLuceneAnalysisUtilResourceLoader_, loader)
}

OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder *create_OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder_initWithOrgApacheLuceneAnalysisUtilResourceLoader_(id<OrgApacheLuceneAnalysisUtilResourceLoader> loader) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder, initWithOrgApacheLuceneAnalysisUtilResourceLoader_, loader)
}

id<JavaUtilMap> OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder_applyDefaultParamsWithJavaUtilMap_(OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder *self, id<JavaUtilMap> map) {
  if ([((OrgApacheLuceneUtilSetOnce *) nil_chk(self->defaultMatchVersion_)) get] != nil && ![((id<JavaUtilMap>) nil_chk(map)) containsKeyWithId:OrgApacheLuceneAnalysisUtilAbstractAnalysisFactory_LUCENE_MATCH_VERSION_PARAM]) {
    [((id<JavaUtilMap>) nil_chk(map)) putWithId:OrgApacheLuceneAnalysisUtilAbstractAnalysisFactory_LUCENE_MATCH_VERSION_PARAM withId:[((OrgApacheLuceneUtilVersion *) nil_chk([self->defaultMatchVersion_ get])) description]];
  }
  return map;
}

id<JavaUtilMap> OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder_paramsToMapWithNSStringArray_(OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder *self, IOSObjectArray *params) {
  if (JreIntMod(((IOSObjectArray *) nil_chk(params))->size_, 2) != 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Key-value pairs expected, so the number of params must be even.");
  }
  id<JavaUtilMap> map = create_JavaUtilHashMap_init();
  for (jint i = 0; i < params->size_; i += 2) {
    OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_withNSString_(IOSObjectArray_Get(params, i), @"Key of param may not be null.");
    [map putWithId:IOSObjectArray_Get(params, i) withId:IOSObjectArray_Get(params, i + 1)];
  }
  return map;
}

id OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder_applyResourceLoaderWithId_(OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder *self, id factory) {
  if ([OrgApacheLuceneAnalysisUtilResourceLoaderAware_class_() isInstance:factory]) {
    [((id<OrgApacheLuceneAnalysisUtilResourceLoaderAware>) nil_chk(((id<OrgApacheLuceneAnalysisUtilResourceLoaderAware>) cast_check(factory, OrgApacheLuceneAnalysisUtilResourceLoaderAware_class_())))) informWithOrgApacheLuceneAnalysisUtilResourceLoader:self->loader_];
  }
  return factory;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisCustomCustomAnalyzer_Builder)
