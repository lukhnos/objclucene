//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/reverse/ReverseStringFilter.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Character.h"
#include "org/apache/lucene/analysis/TokenFilter.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/reverse/ReverseStringFilter.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/reverse/ReverseStringFilter must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneAnalysisReverseReverseStringFilter () {
 @public
  id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAtt_;
  jchar marker_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisReverseReverseStringFilter, termAtt_, id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)

inline jchar OrgApacheLuceneAnalysisReverseReverseStringFilter_get_NOMARKER(void);
#define OrgApacheLuceneAnalysisReverseReverseStringFilter_NOMARKER 0xffff
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisReverseReverseStringFilter, NOMARKER, jchar)

@implementation OrgApacheLuceneAnalysisReverseReverseStringFilter

+ (jchar)START_OF_HEADING_MARKER {
  return OrgApacheLuceneAnalysisReverseReverseStringFilter_START_OF_HEADING_MARKER;
}

+ (jchar)INFORMATION_SEPARATOR_MARKER {
  return OrgApacheLuceneAnalysisReverseReverseStringFilter_INFORMATION_SEPARATOR_MARKER;
}

+ (jchar)PUA_EC00_MARKER {
  return OrgApacheLuceneAnalysisReverseReverseStringFilter_PUA_EC00_MARKER;
}

+ (jchar)RTL_DIRECTION_MARKER {
  return OrgApacheLuceneAnalysisReverseReverseStringFilter_RTL_DIRECTION_MARKER;
}

- (instancetype)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)inArg {
  OrgApacheLuceneAnalysisReverseReverseStringFilter_initWithOrgApacheLuceneAnalysisTokenStream_(self, inArg);
  return self;
}

- (instancetype)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)inArg
                                                  withChar:(jchar)marker {
  OrgApacheLuceneAnalysisReverseReverseStringFilter_initWithOrgApacheLuceneAnalysisTokenStream_withChar_(self, inArg, marker);
  return self;
}

- (jboolean)incrementToken {
  if ([((OrgApacheLuceneAnalysisTokenStream *) nil_chk(input_)) incrementToken]) {
    jint len = [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAtt_)) java_length];
    if (marker_ != OrgApacheLuceneAnalysisReverseReverseStringFilter_NOMARKER) {
      len++;
      [termAtt_ resizeBufferWithInt:len];
      *IOSCharArray_GetRef(nil_chk([termAtt_ buffer]), len - 1) = marker_;
    }
    OrgApacheLuceneAnalysisReverseReverseStringFilter_reverseWithCharArray_withInt_withInt_([termAtt_ buffer], 0, len);
    [termAtt_ setLengthWithInt:len];
    return true;
  }
  else {
    return false;
  }
}

+ (NSString *)reverseWithNSString:(NSString *)input {
  return OrgApacheLuceneAnalysisReverseReverseStringFilter_reverseWithNSString_(input);
}

+ (void)reverseWithCharArray:(IOSCharArray *)buffer {
  OrgApacheLuceneAnalysisReverseReverseStringFilter_reverseWithCharArray_(buffer);
}

+ (void)reverseWithCharArray:(IOSCharArray *)buffer
                     withInt:(jint)len {
  OrgApacheLuceneAnalysisReverseReverseStringFilter_reverseWithCharArray_withInt_(buffer, len);
}

+ (void)reverseWithCharArray:(IOSCharArray *)buffer
                     withInt:(jint)start
                     withInt:(jint)len {
  OrgApacheLuceneAnalysisReverseReverseStringFilter_reverseWithCharArray_withInt_withInt_(buffer, start, len);
}

- (void)dealloc {
  RELEASE_(termAtt_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 3, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 3, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 3, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneAnalysisTokenStream:);
  methods[1].selector = @selector(initWithOrgApacheLuceneAnalysisTokenStream:withChar:);
  methods[2].selector = @selector(incrementToken);
  methods[3].selector = @selector(reverseWithNSString:);
  methods[4].selector = @selector(reverseWithCharArray:);
  methods[5].selector = @selector(reverseWithCharArray:withInt:);
  methods[6].selector = @selector(reverseWithCharArray:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "termAtt_", "LOrgApacheLuceneAnalysisTokenattributesCharTermAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "marker_", "C", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "NOMARKER", "C", .constantValue.asUnichar = OrgApacheLuceneAnalysisReverseReverseStringFilter_NOMARKER, 0x1a, -1, -1, -1, -1 },
    { "START_OF_HEADING_MARKER", "C", .constantValue.asUnichar = OrgApacheLuceneAnalysisReverseReverseStringFilter_START_OF_HEADING_MARKER, 0x19, -1, -1, -1, -1 },
    { "INFORMATION_SEPARATOR_MARKER", "C", .constantValue.asUnichar = OrgApacheLuceneAnalysisReverseReverseStringFilter_INFORMATION_SEPARATOR_MARKER, 0x19, -1, -1, -1, -1 },
    { "PUA_EC00_MARKER", "C", .constantValue.asUnichar = OrgApacheLuceneAnalysisReverseReverseStringFilter_PUA_EC00_MARKER, 0x19, -1, -1, -1, -1 },
    { "RTL_DIRECTION_MARKER", "C", .constantValue.asUnichar = OrgApacheLuceneAnalysisReverseReverseStringFilter_RTL_DIRECTION_MARKER, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneAnalysisTokenStream;", "LOrgApacheLuceneAnalysisTokenStream;C", "LJavaIoIOException;", "reverse", "LNSString;", "[C", "[CI", "[CII" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisReverseReverseStringFilter = { "ReverseStringFilter", "org.apache.lucene.analysis.reverse", ptrTable, methods, fields, 7, 0x11, 7, 7, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisReverseReverseStringFilter;
}

@end

void OrgApacheLuceneAnalysisReverseReverseStringFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisReverseReverseStringFilter *self, OrgApacheLuceneAnalysisTokenStream *inArg) {
  OrgApacheLuceneAnalysisReverseReverseStringFilter_initWithOrgApacheLuceneAnalysisTokenStream_withChar_(self, inArg, OrgApacheLuceneAnalysisReverseReverseStringFilter_NOMARKER);
}

OrgApacheLuceneAnalysisReverseReverseStringFilter *new_OrgApacheLuceneAnalysisReverseReverseStringFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTokenStream *inArg) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisReverseReverseStringFilter, initWithOrgApacheLuceneAnalysisTokenStream_, inArg)
}

OrgApacheLuceneAnalysisReverseReverseStringFilter *create_OrgApacheLuceneAnalysisReverseReverseStringFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTokenStream *inArg) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisReverseReverseStringFilter, initWithOrgApacheLuceneAnalysisTokenStream_, inArg)
}

void OrgApacheLuceneAnalysisReverseReverseStringFilter_initWithOrgApacheLuceneAnalysisTokenStream_withChar_(OrgApacheLuceneAnalysisReverseReverseStringFilter *self, OrgApacheLuceneAnalysisTokenStream *inArg, jchar marker) {
  OrgApacheLuceneAnalysisTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_(self, inArg);
  JreStrongAssign(&self->termAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
  self->marker_ = marker;
}

OrgApacheLuceneAnalysisReverseReverseStringFilter *new_OrgApacheLuceneAnalysisReverseReverseStringFilter_initWithOrgApacheLuceneAnalysisTokenStream_withChar_(OrgApacheLuceneAnalysisTokenStream *inArg, jchar marker) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisReverseReverseStringFilter, initWithOrgApacheLuceneAnalysisTokenStream_withChar_, inArg, marker)
}

OrgApacheLuceneAnalysisReverseReverseStringFilter *create_OrgApacheLuceneAnalysisReverseReverseStringFilter_initWithOrgApacheLuceneAnalysisTokenStream_withChar_(OrgApacheLuceneAnalysisTokenStream *inArg, jchar marker) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisReverseReverseStringFilter, initWithOrgApacheLuceneAnalysisTokenStream_withChar_, inArg, marker)
}

NSString *OrgApacheLuceneAnalysisReverseReverseStringFilter_reverseWithNSString_(NSString *input) {
  OrgApacheLuceneAnalysisReverseReverseStringFilter_initialize();
  IOSCharArray *charInput = [((NSString *) nil_chk(input)) java_toCharArray];
  OrgApacheLuceneAnalysisReverseReverseStringFilter_reverseWithCharArray_withInt_withInt_(charInput, 0, ((IOSCharArray *) nil_chk(charInput))->size_);
  return [NSString java_stringWithCharacters:charInput];
}

void OrgApacheLuceneAnalysisReverseReverseStringFilter_reverseWithCharArray_(IOSCharArray *buffer) {
  OrgApacheLuceneAnalysisReverseReverseStringFilter_initialize();
  OrgApacheLuceneAnalysisReverseReverseStringFilter_reverseWithCharArray_withInt_withInt_(buffer, 0, ((IOSCharArray *) nil_chk(buffer))->size_);
}

void OrgApacheLuceneAnalysisReverseReverseStringFilter_reverseWithCharArray_withInt_(IOSCharArray *buffer, jint len) {
  OrgApacheLuceneAnalysisReverseReverseStringFilter_initialize();
  OrgApacheLuceneAnalysisReverseReverseStringFilter_reverseWithCharArray_withInt_withInt_(buffer, 0, len);
}

void OrgApacheLuceneAnalysisReverseReverseStringFilter_reverseWithCharArray_withInt_withInt_(IOSCharArray *buffer, jint start, jint len) {
  OrgApacheLuceneAnalysisReverseReverseStringFilter_initialize();
  if (len < 2) return;
  jint end = (start + len) - 1;
  jchar frontHigh = IOSCharArray_Get(nil_chk(buffer), start);
  jchar endLow = IOSCharArray_Get(buffer, end);
  jboolean allowFrontSur = true;
  jboolean allowEndSur = true;
  jint mid = start + (JreRShift32(len, 1));
  for (jint i = start; i < mid; ++i, --end) {
    jchar frontLow = IOSCharArray_Get(buffer, i + 1);
    jchar endHigh = IOSCharArray_Get(buffer, end - 1);
    jboolean surAtFront = allowFrontSur && JavaLangCharacter_isSurrogatePairWithChar_withChar_(frontHigh, frontLow);
    if (surAtFront && (len < 3)) {
      return;
    }
    jboolean surAtEnd = allowEndSur && JavaLangCharacter_isSurrogatePairWithChar_withChar_(endHigh, endLow);
    allowFrontSur = allowEndSur = true;
    if (surAtFront == surAtEnd) {
      if (surAtFront) {
        *IOSCharArray_GetRef(buffer, end) = frontLow;
        *IOSCharArray_GetRef(buffer, --end) = frontHigh;
        *IOSCharArray_GetRef(buffer, i) = endHigh;
        *IOSCharArray_GetRef(buffer, ++i) = endLow;
        frontHigh = IOSCharArray_Get(buffer, i + 1);
        endLow = IOSCharArray_Get(buffer, end - 1);
      }
      else {
        *IOSCharArray_GetRef(buffer, end) = frontHigh;
        *IOSCharArray_GetRef(buffer, i) = endLow;
        frontHigh = frontLow;
        endLow = endHigh;
      }
    }
    else {
      if (surAtFront) {
        *IOSCharArray_GetRef(buffer, end) = frontLow;
        *IOSCharArray_GetRef(buffer, i) = endLow;
        endLow = endHigh;
        allowFrontSur = false;
      }
      else {
        *IOSCharArray_GetRef(buffer, end) = frontHigh;
        *IOSCharArray_GetRef(buffer, i) = endHigh;
        frontHigh = frontLow;
        allowEndSur = false;
      }
    }
  }
  if ((len & (jint) 0x01) == 1 && !(allowFrontSur && allowEndSur)) {
    *IOSCharArray_GetRef(buffer, end) = allowFrontSur ? endLow : frontHigh;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisReverseReverseStringFilter)
