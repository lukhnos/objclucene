//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/commongrams/CommonGramsQueryFilter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/analysis/TokenFilter.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/commongrams/CommonGramsFilter.h"
#include "org/apache/lucene/analysis/commongrams/CommonGramsQueryFilter.h"
#include "org/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/TypeAttribute.h"
#include "org/apache/lucene/util/AttributeSource.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/commongrams/CommonGramsQueryFilter must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter () {
 @public
  id<OrgApacheLuceneAnalysisTokenattributesTypeAttribute> typeAttribute_;
  id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute> posIncAttribute_;
  OrgApacheLuceneUtilAttributeSource_State *previous_;
  NSString *previousType_;
  jboolean exhausted_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter, typeAttribute_, id<OrgApacheLuceneAnalysisTokenattributesTypeAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter, posIncAttribute_, id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter, previous_, OrgApacheLuceneUtilAttributeSource_State *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter, previousType_, NSString *)

@implementation OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter

- (instancetype)initWithOrgApacheLuceneAnalysisCommongramsCommonGramsFilter:(OrgApacheLuceneAnalysisCommongramsCommonGramsFilter *)input {
  OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter_initWithOrgApacheLuceneAnalysisCommongramsCommonGramsFilter_(self, input);
  return self;
}

- (void)reset {
  [super reset];
  JreStrongAssign(&previous_, nil);
  JreStrongAssign(&previousType_, nil);
  exhausted_ = false;
}

- (jboolean)incrementToken {
  while (!exhausted_ && [((OrgApacheLuceneAnalysisTokenStream *) nil_chk(input_)) incrementToken]) {
    OrgApacheLuceneUtilAttributeSource_State *current = JreRetainedLocalValue([self captureState]);
    if (previous_ != nil && ![self isGramType]) {
      [self restoreStateWithOrgApacheLuceneUtilAttributeSource_State:previous_];
      JreStrongAssign(&previous_, current);
      JreStrongAssign(&previousType_, [((id<OrgApacheLuceneAnalysisTokenattributesTypeAttribute>) nil_chk(typeAttribute_)) type]);
      if ([self isGramType]) {
        [((id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute>) nil_chk(posIncAttribute_)) setPositionIncrementWithInt:1];
      }
      return true;
    }
    JreStrongAssign(&previous_, current);
  }
  exhausted_ = true;
  if (previous_ == nil || [((NSString *) nil_chk(OrgApacheLuceneAnalysisCommongramsCommonGramsFilter_GRAM_TYPE)) isEqual:previousType_]) {
    return false;
  }
  [self restoreStateWithOrgApacheLuceneUtilAttributeSource_State:previous_];
  JreStrongAssign(&previous_, nil);
  if ([self isGramType]) {
    [((id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute>) nil_chk(posIncAttribute_)) setPositionIncrementWithInt:1];
  }
  return true;
}

- (jboolean)isGramType {
  return [((NSString *) nil_chk(OrgApacheLuceneAnalysisCommongramsCommonGramsFilter_GRAM_TYPE)) isEqual:[((id<OrgApacheLuceneAnalysisTokenattributesTypeAttribute>) nil_chk(typeAttribute_)) type]];
}

- (void)dealloc {
  RELEASE_(typeAttribute_);
  RELEASE_(posIncAttribute_);
  RELEASE_(previous_);
  RELEASE_(previousType_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneAnalysisCommongramsCommonGramsFilter:);
  methods[1].selector = @selector(reset);
  methods[2].selector = @selector(incrementToken);
  methods[3].selector = @selector(isGramType);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "typeAttribute_", "LOrgApacheLuceneAnalysisTokenattributesTypeAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "posIncAttribute_", "LOrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "previous_", "LOrgApacheLuceneUtilAttributeSource_State;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "previousType_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "exhausted_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneAnalysisCommongramsCommonGramsFilter;", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter = { "CommonGramsQueryFilter", "org.apache.lucene.analysis.commongrams", ptrTable, methods, fields, 7, 0x11, 4, 5, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter;
}

@end

void OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter_initWithOrgApacheLuceneAnalysisCommongramsCommonGramsFilter_(OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter *self, OrgApacheLuceneAnalysisCommongramsCommonGramsFilter *input) {
  OrgApacheLuceneAnalysisTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_(self, input);
  JreStrongAssign(&self->typeAttribute_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesTypeAttribute_class_()]);
  JreStrongAssign(&self->posIncAttribute_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute_class_()]);
}

OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter *new_OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter_initWithOrgApacheLuceneAnalysisCommongramsCommonGramsFilter_(OrgApacheLuceneAnalysisCommongramsCommonGramsFilter *input) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter, initWithOrgApacheLuceneAnalysisCommongramsCommonGramsFilter_, input)
}

OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter *create_OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter_initWithOrgApacheLuceneAnalysisCommongramsCommonGramsFilter_(OrgApacheLuceneAnalysisCommongramsCommonGramsFilter *input) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter, initWithOrgApacheLuceneAnalysisCommongramsCommonGramsFilter_, input)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisCommongramsCommonGramsQueryFilter)
