//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/fa/PersianCharFilter.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Reader.h"
#include "org/apache/lucene/analysis/CharFilter.h"
#include "org/apache/lucene/analysis/fa/PersianCharFilter.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/fa/PersianCharFilter must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneAnalysisFaPersianCharFilter

- (instancetype)initWithJavaIoReader:(JavaIoReader *)inArg {
  OrgApacheLuceneAnalysisFaPersianCharFilter_initWithJavaIoReader_(self, inArg);
  return self;
}

- (jint)readWithCharArray:(IOSCharArray *)cbuf
                  withInt:(jint)off
                  withInt:(jint)len {
  jint charsRead = [((JavaIoReader *) nil_chk(input_)) readWithCharArray:cbuf withInt:off withInt:len];
  if (charsRead > 0) {
    jint end = off + charsRead;
    while (off < end) {
      if (IOSCharArray_Get(nil_chk(cbuf), off) == 0x200c) *IOSCharArray_GetRef(cbuf, off) = ' ';
      off++;
    }
  }
  return charsRead;
}

- (jint)read {
  jint ch = [((JavaIoReader *) nil_chk(input_)) read];
  if (ch == 0x200c) {
    return ' ';
  }
  else {
    return ch;
  }
}

- (jint)correctWithInt:(jint)currentOff {
  return currentOff;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "I", 0x4, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoReader:);
  methods[1].selector = @selector(readWithCharArray:withInt:withInt:);
  methods[2].selector = @selector(read);
  methods[3].selector = @selector(correctWithInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaIoReader;", "read", "[CII", "LJavaIoIOException;", "correct", "I" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisFaPersianCharFilter = { "PersianCharFilter", "org.apache.lucene.analysis.fa", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisFaPersianCharFilter;
}

@end

void OrgApacheLuceneAnalysisFaPersianCharFilter_initWithJavaIoReader_(OrgApacheLuceneAnalysisFaPersianCharFilter *self, JavaIoReader *inArg) {
  OrgApacheLuceneAnalysisCharFilter_initWithJavaIoReader_(self, inArg);
}

OrgApacheLuceneAnalysisFaPersianCharFilter *new_OrgApacheLuceneAnalysisFaPersianCharFilter_initWithJavaIoReader_(JavaIoReader *inArg) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisFaPersianCharFilter, initWithJavaIoReader_, inArg)
}

OrgApacheLuceneAnalysisFaPersianCharFilter *create_OrgApacheLuceneAnalysisFaPersianCharFilter_initWithJavaIoReader_(JavaIoReader *inArg) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisFaPersianCharFilter, initWithJavaIoReader_, inArg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisFaPersianCharFilter)
