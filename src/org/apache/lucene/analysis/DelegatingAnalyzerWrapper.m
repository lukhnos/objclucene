//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/analysis/DelegatingAnalyzerWrapper.java
//

#include "J2ObjC_source.h"
#include "java/io/Reader.h"
#include "org/apache/lucene/analysis/Analyzer.h"
#include "org/apache/lucene/analysis/AnalyzerWrapper.h"
#include "org/apache/lucene/analysis/DelegatingAnalyzerWrapper.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/DelegatingAnalyzerWrapper must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy : OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy {
 @public
  OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper *wrapper_;
  OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *fallbackStrategy_;
}

- (instancetype)initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy:(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *)fallbackStrategy;

- (OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)getReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                                                                                       withNSString:(NSString *)fieldName;

- (void)setReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                                    withNSString:(NSString *)fieldName
       withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)components;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy)

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy, wrapper_, OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy, fallbackStrategy_, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *)

__attribute__((unused)) static void OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy *self, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *fallbackStrategy);

__attribute__((unused)) static OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy *new_OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *fallbackStrategy) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy *create_OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *fallbackStrategy);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy)

@implementation OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper

- (instancetype)initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy:(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *)fallbackStrategy {
  OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(self, fallbackStrategy);
  return self;
}

- (OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)wrapComponentsWithNSString:(NSString *)fieldName
                            withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)components {
  return [super wrapComponentsWithNSString:fieldName withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:components];
}

- (JavaIoReader *)wrapReaderWithNSString:(NSString *)fieldName
                        withJavaIoReader:(JavaIoReader *)reader {
  return [super wrapReaderWithNSString:fieldName withJavaIoReader:reader];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents;", 0x14, 1, 2, -1, -1, -1, -1 },
    { NULL, "LJavaIoReader;", 0x14, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy:);
  methods[1].selector = @selector(wrapComponentsWithNSString:withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:);
  methods[2].selector = @selector(wrapReaderWithNSString:withJavaIoReader:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy;", "wrapComponents", "LNSString;LOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents;", "wrapReader", "LNSString;LJavaIoReader;", "LOrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper = { "DelegatingAnalyzerWrapper", "org.apache.lucene.analysis", ptrTable, methods, NULL, 7, 0x401, 3, 0, -1, 5, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper;
}

@end

void OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper *self, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *fallbackStrategy) {
  OrgApacheLuceneAnalysisAnalyzerWrapper_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(self, create_OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(fallbackStrategy));
  JreStrongAssign(&((OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy *) nil_chk(((OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy *) cast_chk([self getReuseStrategy], [OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy class]))))->wrapper_, self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper)

@implementation OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy

- (instancetype)initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy:(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *)fallbackStrategy {
  OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(self, fallbackStrategy);
  return self;
}

- (OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)getReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                                                                                       withNSString:(NSString *)fieldName {
  if (JreObjectEqualsEquals(analyzer, wrapper_)) {
    OrgApacheLuceneAnalysisAnalyzer *wrappedAnalyzer = [((OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper *) nil_chk(wrapper_)) getWrappedAnalyzerWithNSString:fieldName];
    return [((OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *) nil_chk([((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(wrappedAnalyzer)) getReuseStrategy])) getReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:wrappedAnalyzer withNSString:fieldName];
  }
  else {
    return [((OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *) nil_chk(fallbackStrategy_)) getReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:analyzer withNSString:fieldName];
  }
}

- (void)setReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                                    withNSString:(NSString *)fieldName
       withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)components {
  if (JreObjectEqualsEquals(analyzer, wrapper_)) {
    OrgApacheLuceneAnalysisAnalyzer *wrappedAnalyzer = [((OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper *) nil_chk(wrapper_)) getWrappedAnalyzerWithNSString:fieldName];
    [((OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *) nil_chk([((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(wrappedAnalyzer)) getReuseStrategy])) setReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:wrappedAnalyzer withNSString:fieldName withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:components];
  }
  else {
    [((OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *) nil_chk(fallbackStrategy_)) setReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:analyzer withNSString:fieldName withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:components];
  }
}

- (void)dealloc {
  RELEASE_(wrapper_);
  RELEASE_(fallbackStrategy_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy:);
  methods[1].selector = @selector(getReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:withNSString:);
  methods[2].selector = @selector(setReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:withNSString:withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "wrapper_", "LOrgApacheLuceneAnalysisDelegatingAnalyzerWrapper;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "fallbackStrategy_", "LOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy;", "getReusableComponents", "LOrgApacheLuceneAnalysisAnalyzer;LNSString;", "setReusableComponents", "LOrgApacheLuceneAnalysisAnalyzer;LNSString;LOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents;", "LOrgApacheLuceneAnalysisDelegatingAnalyzerWrapper;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy = { "DelegatingReuseStrategy", "org.apache.lucene.analysis", ptrTable, methods, fields, 7, 0x1a, 3, 2, 5, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy;
}

@end

void OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy *self, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *fallbackStrategy) {
  OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_init(self);
  JreStrongAssign(&self->fallbackStrategy_, fallbackStrategy);
}

OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy *new_OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *fallbackStrategy) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy, initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_, fallbackStrategy)
}

OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy *create_OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *fallbackStrategy) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy, initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_, fallbackStrategy)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisDelegatingAnalyzerWrapper_DelegatingReuseStrategy)
