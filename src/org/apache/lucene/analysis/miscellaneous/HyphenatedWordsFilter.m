//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/HyphenatedWordsFilter.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/StringBuilder.h"
#include "org/apache/lucene/analysis/TokenFilter.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/miscellaneous/HyphenatedWordsFilter.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/OffsetAttribute.h"
#include "org/apache/lucene/util/AttributeSource.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/miscellaneous/HyphenatedWordsFilter must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter () {
 @public
  id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAttribute_;
  id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute> offsetAttribute_;
  JavaLangStringBuilder *hyphenated_;
  OrgApacheLuceneUtilAttributeSource_State *savedState_;
  jboolean exhausted_;
  jint lastEndOffset_;
}

/*!
 @brief Writes the joined unhyphenated term
 */
- (void)unhyphenate;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter, termAttribute_, id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter, offsetAttribute_, id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter, hyphenated_, JavaLangStringBuilder *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter, savedState_, OrgApacheLuceneUtilAttributeSource_State *)

__attribute__((unused)) static void OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter_unhyphenate(OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter *self);

@implementation OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter

- (instancetype)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)inArg {
  OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter_initWithOrgApacheLuceneAnalysisTokenStream_(self, inArg);
  return self;
}

- (jboolean)incrementToken {
  while (!exhausted_ && [((OrgApacheLuceneAnalysisTokenStream *) nil_chk(input_)) incrementToken]) {
    IOSCharArray *term = [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAttribute_)) buffer];
    jint termLength = [termAttribute_ java_length];
    lastEndOffset_ = [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(offsetAttribute_)) endOffset];
    if (termLength > 0 && IOSCharArray_Get(nil_chk(term), termLength - 1) == '-') {
      if (savedState_ == nil) {
        JreStrongAssign(&savedState_, [self captureState]);
      }
      [((JavaLangStringBuilder *) nil_chk(hyphenated_)) appendWithCharArray:term withInt:0 withInt:termLength - 1];
    }
    else if (savedState_ == nil) {
      return true;
    }
    else {
      [((JavaLangStringBuilder *) nil_chk(hyphenated_)) appendWithCharArray:term withInt:0 withInt:termLength];
      OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter_unhyphenate(self);
      return true;
    }
  }
  exhausted_ = true;
  if (savedState_ != nil) {
    [((JavaLangStringBuilder *) nil_chk(hyphenated_)) appendWithChar:'-'];
    OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter_unhyphenate(self);
    return true;
  }
  return false;
}

- (void)reset {
  [super reset];
  [((JavaLangStringBuilder *) nil_chk(hyphenated_)) setLengthWithInt:0];
  JreStrongAssign(&savedState_, nil);
  exhausted_ = false;
  lastEndOffset_ = 0;
}

- (void)unhyphenate {
  OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter_unhyphenate(self);
}

- (void)dealloc {
  RELEASE_(termAttribute_);
  RELEASE_(offsetAttribute_);
  RELEASE_(hyphenated_);
  RELEASE_(savedState_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneAnalysisTokenStream:);
  methods[1].selector = @selector(incrementToken);
  methods[2].selector = @selector(reset);
  methods[3].selector = @selector(unhyphenate);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "termAttribute_", "LOrgApacheLuceneAnalysisTokenattributesCharTermAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "offsetAttribute_", "LOrgApacheLuceneAnalysisTokenattributesOffsetAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "hyphenated_", "LJavaLangStringBuilder;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "savedState_", "LOrgApacheLuceneUtilAttributeSource_State;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "exhausted_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "lastEndOffset_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneAnalysisTokenStream;", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter = { "HyphenatedWordsFilter", "org.apache.lucene.analysis.miscellaneous", ptrTable, methods, fields, 7, 0x11, 4, 6, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter;
}

@end

void OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter *self, OrgApacheLuceneAnalysisTokenStream *inArg) {
  OrgApacheLuceneAnalysisTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_(self, inArg);
  JreStrongAssign(&self->termAttribute_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
  JreStrongAssign(&self->offsetAttribute_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_()]);
  JreStrongAssignAndConsume(&self->hyphenated_, new_JavaLangStringBuilder_init());
  self->exhausted_ = false;
  self->lastEndOffset_ = 0;
}

OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter *new_OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTokenStream *inArg) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter, initWithOrgApacheLuceneAnalysisTokenStream_, inArg)
}

OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter *create_OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTokenStream *inArg) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter, initWithOrgApacheLuceneAnalysisTokenStream_, inArg)
}

void OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter_unhyphenate(OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter *self) {
  [self restoreStateWithOrgApacheLuceneUtilAttributeSource_State:self->savedState_];
  JreStrongAssign(&self->savedState_, nil);
  IOSCharArray *term = [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(self->termAttribute_)) buffer];
  jint length = [((JavaLangStringBuilder *) nil_chk(self->hyphenated_)) java_length];
  if (length > [self->termAttribute_ java_length]) {
    term = [self->termAttribute_ resizeBufferWithInt:length];
  }
  [self->hyphenated_ getCharsWithInt:0 withInt:length withCharArray:term withInt:0];
  [self->termAttribute_ setLengthWithInt:length];
  [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(self->offsetAttribute_)) setOffsetWithInt:[self->offsetAttribute_ startOffset] withInt:self->lastEndOffset_];
  [self->hyphenated_ setLengthWithInt:0];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisMiscellaneousHyphenatedWordsFilter)
