//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LengthFilter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/miscellaneous/LengthFilter.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/analysis/util/FilteringTokenFilter.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/miscellaneous/LengthFilter must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneAnalysisMiscellaneousLengthFilter () {
 @public
  jint min_;
  jint max_;
  id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAtt_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisMiscellaneousLengthFilter, termAtt_, id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)

@implementation OrgApacheLuceneAnalysisMiscellaneousLengthFilter

- (instancetype)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)inArg
                                                   withInt:(jint)min
                                                   withInt:(jint)max {
  OrgApacheLuceneAnalysisMiscellaneousLengthFilter_initWithOrgApacheLuceneAnalysisTokenStream_withInt_withInt_(self, inArg, min, max);
  return self;
}

- (jboolean)accept {
  jint len = [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAtt_)) java_length];
  return (len >= min_ && len <= max_);
}

- (void)dealloc {
  RELEASE_(termAtt_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneAnalysisTokenStream:withInt:withInt:);
  methods[1].selector = @selector(accept);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "min_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "max_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "termAtt_", "LOrgApacheLuceneAnalysisTokenattributesCharTermAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneAnalysisTokenStream;II" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisMiscellaneousLengthFilter = { "LengthFilter", "org.apache.lucene.analysis.miscellaneous", ptrTable, methods, fields, 7, 0x11, 2, 3, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisMiscellaneousLengthFilter;
}

@end

void OrgApacheLuceneAnalysisMiscellaneousLengthFilter_initWithOrgApacheLuceneAnalysisTokenStream_withInt_withInt_(OrgApacheLuceneAnalysisMiscellaneousLengthFilter *self, OrgApacheLuceneAnalysisTokenStream *inArg, jint min, jint max) {
  OrgApacheLuceneAnalysisUtilFilteringTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_(self, inArg);
  JreStrongAssign(&self->termAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
  if (min < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"minimum length must be greater than or equal to zero");
  }
  if (min > max) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"maximum length must not be greater than minimum length");
  }
  self->min_ = min;
  self->max_ = max;
}

OrgApacheLuceneAnalysisMiscellaneousLengthFilter *new_OrgApacheLuceneAnalysisMiscellaneousLengthFilter_initWithOrgApacheLuceneAnalysisTokenStream_withInt_withInt_(OrgApacheLuceneAnalysisTokenStream *inArg, jint min, jint max) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisMiscellaneousLengthFilter, initWithOrgApacheLuceneAnalysisTokenStream_withInt_withInt_, inArg, min, max)
}

OrgApacheLuceneAnalysisMiscellaneousLengthFilter *create_OrgApacheLuceneAnalysisMiscellaneousLengthFilter_initWithOrgApacheLuceneAnalysisTokenStream_withInt_withInt_(OrgApacheLuceneAnalysisTokenStream *inArg, jint min, jint max) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisMiscellaneousLengthFilter, initWithOrgApacheLuceneAnalysisTokenStream_withInt_withInt_, inArg, min, max)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisMiscellaneousLengthFilter)
