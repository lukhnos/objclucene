//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/RemoveDuplicatesTokenFilter.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/System.h"
#include "org/apache/lucene/analysis/TokenFilter.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/miscellaneous/RemoveDuplicatesTokenFilter.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute.h"
#include "org/apache/lucene/analysis/util/CharArraySet.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/miscellaneous/RemoveDuplicatesTokenFilter must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneAnalysisMiscellaneousRemoveDuplicatesTokenFilter () {
 @public
  id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAttribute_;
  id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute> posIncAttribute_;
  OrgApacheLuceneAnalysisUtilCharArraySet *previous_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisMiscellaneousRemoveDuplicatesTokenFilter, termAttribute_, id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisMiscellaneousRemoveDuplicatesTokenFilter, posIncAttribute_, id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisMiscellaneousRemoveDuplicatesTokenFilter, previous_, OrgApacheLuceneAnalysisUtilCharArraySet *)

@implementation OrgApacheLuceneAnalysisMiscellaneousRemoveDuplicatesTokenFilter

- (instancetype)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)inArg {
  OrgApacheLuceneAnalysisMiscellaneousRemoveDuplicatesTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_(self, inArg);
  return self;
}

- (jboolean)incrementToken {
  while ([((OrgApacheLuceneAnalysisTokenStream *) nil_chk(input_)) incrementToken]) {
    IOSCharArray *term = [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAttribute_)) buffer];
    jint length = [termAttribute_ java_length];
    jint posIncrement = [((id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute>) nil_chk(posIncAttribute_)) getPositionIncrement];
    if (posIncrement > 0) {
      [((OrgApacheLuceneAnalysisUtilCharArraySet *) nil_chk(previous_)) clear];
    }
    jboolean duplicate = (posIncrement == 0 && [((OrgApacheLuceneAnalysisUtilCharArraySet *) nil_chk(previous_)) containsWithCharArray:term withInt:0 withInt:length]);
    IOSCharArray *saved = [IOSCharArray arrayWithLength:length];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(term, 0, saved, 0, length);
    [((OrgApacheLuceneAnalysisUtilCharArraySet *) nil_chk(previous_)) addWithCharArray:saved];
    if (!duplicate) {
      return true;
    }
  }
  return false;
}

- (void)reset {
  [super reset];
  [((OrgApacheLuceneAnalysisUtilCharArraySet *) nil_chk(previous_)) clear];
}

- (void)dealloc {
  RELEASE_(termAttribute_);
  RELEASE_(posIncAttribute_);
  RELEASE_(previous_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneAnalysisTokenStream:);
  methods[1].selector = @selector(incrementToken);
  methods[2].selector = @selector(reset);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "termAttribute_", "LOrgApacheLuceneAnalysisTokenattributesCharTermAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "posIncAttribute_", "LOrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "previous_", "LOrgApacheLuceneAnalysisUtilCharArraySet;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneAnalysisTokenStream;", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisMiscellaneousRemoveDuplicatesTokenFilter = { "RemoveDuplicatesTokenFilter", "org.apache.lucene.analysis.miscellaneous", ptrTable, methods, fields, 7, 0x11, 3, 3, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisMiscellaneousRemoveDuplicatesTokenFilter;
}

@end

void OrgApacheLuceneAnalysisMiscellaneousRemoveDuplicatesTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisMiscellaneousRemoveDuplicatesTokenFilter *self, OrgApacheLuceneAnalysisTokenStream *inArg) {
  OrgApacheLuceneAnalysisTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_(self, inArg);
  JreStrongAssign(&self->termAttribute_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
  JreStrongAssign(&self->posIncAttribute_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute_class_()]);
  JreStrongAssignAndConsume(&self->previous_, new_OrgApacheLuceneAnalysisUtilCharArraySet_initWithInt_withBoolean_(8, false));
}

OrgApacheLuceneAnalysisMiscellaneousRemoveDuplicatesTokenFilter *new_OrgApacheLuceneAnalysisMiscellaneousRemoveDuplicatesTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTokenStream *inArg) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisMiscellaneousRemoveDuplicatesTokenFilter, initWithOrgApacheLuceneAnalysisTokenStream_, inArg)
}

OrgApacheLuceneAnalysisMiscellaneousRemoveDuplicatesTokenFilter *create_OrgApacheLuceneAnalysisMiscellaneousRemoveDuplicatesTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTokenStream *inArg) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisMiscellaneousRemoveDuplicatesTokenFilter, initWithOrgApacheLuceneAnalysisTokenStream_, inArg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisMiscellaneousRemoveDuplicatesTokenFilter)
