//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/es/SpanishLightStemmer.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/analysis/es/SpanishLightStemmer.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/es/SpanishLightStemmer must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneAnalysisEsSpanishLightStemmer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisEsSpanishLightStemmer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)stemWithCharArray:(IOSCharArray *)s
                  withInt:(jint)len {
  if (len < 5) return len;
  for (jint i = 0; i < len; i++) switch (IOSCharArray_Get(nil_chk(s), i)) {
    case 0x00e0:
    case 0x00e1:
    case 0x00e2:
    case 0x00e4:
    *IOSCharArray_GetRef(s, i) = 'a';
    break;
    case 0x00f2:
    case 0x00f3:
    case 0x00f4:
    case 0x00f6:
    *IOSCharArray_GetRef(s, i) = 'o';
    break;
    case 0x00e8:
    case 0x00e9:
    case 0x00ea:
    case 0x00eb:
    *IOSCharArray_GetRef(s, i) = 'e';
    break;
    case 0x00f9:
    case 0x00fa:
    case 0x00fb:
    case 0x00fc:
    *IOSCharArray_GetRef(s, i) = 'u';
    break;
    case 0x00ec:
    case 0x00ed:
    case 0x00ee:
    case 0x00ef:
    *IOSCharArray_GetRef(s, i) = 'i';
    break;
  }
  switch (IOSCharArray_Get(nil_chk(s), len - 1)) {
    case 'o':
    case 'a':
    case 'e':
    return len - 1;
    case 's':
    if (IOSCharArray_Get(s, len - 2) == 'e' && IOSCharArray_Get(s, len - 3) == 's' && IOSCharArray_Get(s, len - 4) == 'e') return len - 2;
    if (IOSCharArray_Get(s, len - 2) == 'e' && IOSCharArray_Get(s, len - 3) == 'c') {
      *IOSCharArray_GetRef(s, len - 3) = 'z';
      return len - 2;
    }
    if (IOSCharArray_Get(s, len - 2) == 'o' || IOSCharArray_Get(s, len - 2) == 'a' || IOSCharArray_Get(s, len - 2) == 'e') return len - 2;
  }
  return len;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(stemWithCharArray:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "stem", "[CI" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisEsSpanishLightStemmer = { "SpanishLightStemmer", "org.apache.lucene.analysis.es", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisEsSpanishLightStemmer;
}

@end

void OrgApacheLuceneAnalysisEsSpanishLightStemmer_init(OrgApacheLuceneAnalysisEsSpanishLightStemmer *self) {
  NSObject_init(self);
}

OrgApacheLuceneAnalysisEsSpanishLightStemmer *new_OrgApacheLuceneAnalysisEsSpanishLightStemmer_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisEsSpanishLightStemmer, init)
}

OrgApacheLuceneAnalysisEsSpanishLightStemmer *create_OrgApacheLuceneAnalysisEsSpanishLightStemmer_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisEsSpanishLightStemmer, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisEsSpanishLightStemmer)
