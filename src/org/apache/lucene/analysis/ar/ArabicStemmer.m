//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/ar/ArabicStemmer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/analysis/ar/ArabicStemmer.h"
#include "org/apache/lucene/analysis/util/StemmerUtil.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/ar/ArabicStemmer must not be compiled with ARC (-fobjc-arc)"
#endif

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneAnalysisArArabicStemmer)

IOSObjectArray *OrgApacheLuceneAnalysisArArabicStemmer_prefixes;
IOSObjectArray *OrgApacheLuceneAnalysisArArabicStemmer_suffixes;

@implementation OrgApacheLuceneAnalysisArArabicStemmer

+ (jchar)ALEF {
  return OrgApacheLuceneAnalysisArArabicStemmer_ALEF;
}

+ (jchar)BEH {
  return OrgApacheLuceneAnalysisArArabicStemmer_BEH;
}

+ (jchar)TEH_MARBUTA {
  return OrgApacheLuceneAnalysisArArabicStemmer_TEH_MARBUTA;
}

+ (jchar)TEH {
  return OrgApacheLuceneAnalysisArArabicStemmer_TEH;
}

+ (jchar)FEH {
  return OrgApacheLuceneAnalysisArArabicStemmer_FEH;
}

+ (jchar)KAF {
  return OrgApacheLuceneAnalysisArArabicStemmer_KAF;
}

+ (jchar)LAM {
  return OrgApacheLuceneAnalysisArArabicStemmer_LAM;
}

+ (jchar)NOON {
  return OrgApacheLuceneAnalysisArArabicStemmer_NOON;
}

+ (jchar)HEH {
  return OrgApacheLuceneAnalysisArArabicStemmer_HEH;
}

+ (jchar)WAW {
  return OrgApacheLuceneAnalysisArArabicStemmer_WAW;
}

+ (jchar)YEH {
  return OrgApacheLuceneAnalysisArArabicStemmer_YEH;
}

+ (IOSObjectArray *)prefixes {
  return OrgApacheLuceneAnalysisArArabicStemmer_prefixes;
}

+ (IOSObjectArray *)suffixes {
  return OrgApacheLuceneAnalysisArArabicStemmer_suffixes;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisArArabicStemmer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)stemWithCharArray:(IOSCharArray *)s
                  withInt:(jint)len {
  len = [self stemPrefixWithCharArray:s withInt:len];
  len = [self stemSuffixWithCharArray:s withInt:len];
  return len;
}

- (jint)stemPrefixWithCharArray:(IOSCharArray *)s
                        withInt:(jint)len {
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(OrgApacheLuceneAnalysisArArabicStemmer_prefixes))->size_; i++) if ([self startsWithCheckLengthWithCharArray:s withInt:len withCharArray:IOSObjectArray_Get(OrgApacheLuceneAnalysisArArabicStemmer_prefixes, i)]) return OrgApacheLuceneAnalysisUtilStemmerUtil_deleteNWithCharArray_withInt_withInt_withInt_(s, 0, len, ((IOSCharArray *) nil_chk(IOSObjectArray_Get(OrgApacheLuceneAnalysisArArabicStemmer_prefixes, i)))->size_);
  return len;
}

- (jint)stemSuffixWithCharArray:(IOSCharArray *)s
                        withInt:(jint)len {
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(OrgApacheLuceneAnalysisArArabicStemmer_suffixes))->size_; i++) if ([self endsWithCheckLengthWithCharArray:s withInt:len withCharArray:IOSObjectArray_Get(OrgApacheLuceneAnalysisArArabicStemmer_suffixes, i)]) len = OrgApacheLuceneAnalysisUtilStemmerUtil_deleteNWithCharArray_withInt_withInt_withInt_(s, len - ((IOSCharArray *) nil_chk(IOSObjectArray_Get(OrgApacheLuceneAnalysisArArabicStemmer_suffixes, i)))->size_, len, ((IOSCharArray *) nil_chk(IOSObjectArray_Get(OrgApacheLuceneAnalysisArArabicStemmer_suffixes, i)))->size_);
  return len;
}

- (jboolean)startsWithCheckLengthWithCharArray:(IOSCharArray *)s
                                       withInt:(jint)len
                                 withCharArray:(IOSCharArray *)prefix {
  if (((IOSCharArray *) nil_chk(prefix))->size_ == 1 && len < 4) {
    return false;
  }
  else if (len < prefix->size_ + 2) {
    return false;
  }
  else {
    for (jint i = 0; i < prefix->size_; i++) if (IOSCharArray_Get(nil_chk(s), i) != IOSCharArray_Get(prefix, i)) return false;
    return true;
  }
}

- (jboolean)endsWithCheckLengthWithCharArray:(IOSCharArray *)s
                                     withInt:(jint)len
                               withCharArray:(IOSCharArray *)suffix {
  if (len < ((IOSCharArray *) nil_chk(suffix))->size_ + 2) {
    return false;
  }
  else {
    for (jint i = 0; i < suffix->size_; i++) if (IOSCharArray_Get(nil_chk(s), len - suffix->size_ + i) != IOSCharArray_Get(suffix, i)) return false;
    return true;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 4, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 6, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(stemWithCharArray:withInt:);
  methods[2].selector = @selector(stemPrefixWithCharArray:withInt:);
  methods[3].selector = @selector(stemSuffixWithCharArray:withInt:);
  methods[4].selector = @selector(startsWithCheckLengthWithCharArray:withInt:withCharArray:);
  methods[5].selector = @selector(endsWithCheckLengthWithCharArray:withInt:withCharArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ALEF", "C", .constantValue.asUnichar = OrgApacheLuceneAnalysisArArabicStemmer_ALEF, 0x19, -1, -1, -1, -1 },
    { "BEH", "C", .constantValue.asUnichar = OrgApacheLuceneAnalysisArArabicStemmer_BEH, 0x19, -1, -1, -1, -1 },
    { "TEH_MARBUTA", "C", .constantValue.asUnichar = OrgApacheLuceneAnalysisArArabicStemmer_TEH_MARBUTA, 0x19, -1, -1, -1, -1 },
    { "TEH", "C", .constantValue.asUnichar = OrgApacheLuceneAnalysisArArabicStemmer_TEH, 0x19, -1, -1, -1, -1 },
    { "FEH", "C", .constantValue.asUnichar = OrgApacheLuceneAnalysisArArabicStemmer_FEH, 0x19, -1, -1, -1, -1 },
    { "KAF", "C", .constantValue.asUnichar = OrgApacheLuceneAnalysisArArabicStemmer_KAF, 0x19, -1, -1, -1, -1 },
    { "LAM", "C", .constantValue.asUnichar = OrgApacheLuceneAnalysisArArabicStemmer_LAM, 0x19, -1, -1, -1, -1 },
    { "NOON", "C", .constantValue.asUnichar = OrgApacheLuceneAnalysisArArabicStemmer_NOON, 0x19, -1, -1, -1, -1 },
    { "HEH", "C", .constantValue.asUnichar = OrgApacheLuceneAnalysisArArabicStemmer_HEH, 0x19, -1, -1, -1, -1 },
    { "WAW", "C", .constantValue.asUnichar = OrgApacheLuceneAnalysisArArabicStemmer_WAW, 0x19, -1, -1, -1, -1 },
    { "YEH", "C", .constantValue.asUnichar = OrgApacheLuceneAnalysisArArabicStemmer_YEH, 0x19, -1, -1, -1, -1 },
    { "prefixes", "[[C", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
    { "suffixes", "[[C", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
  };
  static const void *ptrTable[] = { "stem", "[CI", "stemPrefix", "stemSuffix", "startsWithCheckLength", "[CI[C", "endsWithCheckLength", &OrgApacheLuceneAnalysisArArabicStemmer_prefixes, &OrgApacheLuceneAnalysisArArabicStemmer_suffixes };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisArArabicStemmer = { "ArabicStemmer", "org.apache.lucene.analysis.ar", ptrTable, methods, fields, 7, 0x1, 6, 13, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisArArabicStemmer;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneAnalysisArArabicStemmer class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneAnalysisArArabicStemmer_prefixes, [IOSObjectArray newArrayWithObjects:(id[]){ [(JreStrcat("CC", OrgApacheLuceneAnalysisArArabicStemmer_ALEF, OrgApacheLuceneAnalysisArArabicStemmer_LAM)) java_toCharArray], [(JreStrcat("CCC", OrgApacheLuceneAnalysisArArabicStemmer_WAW, OrgApacheLuceneAnalysisArArabicStemmer_ALEF, OrgApacheLuceneAnalysisArArabicStemmer_LAM)) java_toCharArray], [(JreStrcat("CCC", OrgApacheLuceneAnalysisArArabicStemmer_BEH, OrgApacheLuceneAnalysisArArabicStemmer_ALEF, OrgApacheLuceneAnalysisArArabicStemmer_LAM)) java_toCharArray], [(JreStrcat("CCC", OrgApacheLuceneAnalysisArArabicStemmer_KAF, OrgApacheLuceneAnalysisArArabicStemmer_ALEF, OrgApacheLuceneAnalysisArArabicStemmer_LAM)) java_toCharArray], [(JreStrcat("CCC", OrgApacheLuceneAnalysisArArabicStemmer_FEH, OrgApacheLuceneAnalysisArArabicStemmer_ALEF, OrgApacheLuceneAnalysisArArabicStemmer_LAM)) java_toCharArray], [(JreStrcat("CC", OrgApacheLuceneAnalysisArArabicStemmer_LAM, OrgApacheLuceneAnalysisArArabicStemmer_LAM)) java_toCharArray], [(JreStrcat("C", OrgApacheLuceneAnalysisArArabicStemmer_WAW)) java_toCharArray] } count:7 type:IOSClass_charArray(1)]);
    JreStrongAssignAndConsume(&OrgApacheLuceneAnalysisArArabicStemmer_suffixes, [IOSObjectArray newArrayWithObjects:(id[]){ [(JreStrcat("CC", OrgApacheLuceneAnalysisArArabicStemmer_HEH, OrgApacheLuceneAnalysisArArabicStemmer_ALEF)) java_toCharArray], [(JreStrcat("CC", OrgApacheLuceneAnalysisArArabicStemmer_ALEF, OrgApacheLuceneAnalysisArArabicStemmer_NOON)) java_toCharArray], [(JreStrcat("CC", OrgApacheLuceneAnalysisArArabicStemmer_ALEF, OrgApacheLuceneAnalysisArArabicStemmer_TEH)) java_toCharArray], [(JreStrcat("CC", OrgApacheLuceneAnalysisArArabicStemmer_WAW, OrgApacheLuceneAnalysisArArabicStemmer_NOON)) java_toCharArray], [(JreStrcat("CC", OrgApacheLuceneAnalysisArArabicStemmer_YEH, OrgApacheLuceneAnalysisArArabicStemmer_NOON)) java_toCharArray], [(JreStrcat("CC", OrgApacheLuceneAnalysisArArabicStemmer_YEH, OrgApacheLuceneAnalysisArArabicStemmer_HEH)) java_toCharArray], [(JreStrcat("CC", OrgApacheLuceneAnalysisArArabicStemmer_YEH, OrgApacheLuceneAnalysisArArabicStemmer_TEH_MARBUTA)) java_toCharArray], [(JreStrcat("C", OrgApacheLuceneAnalysisArArabicStemmer_HEH)) java_toCharArray], [(JreStrcat("C", OrgApacheLuceneAnalysisArArabicStemmer_TEH_MARBUTA)) java_toCharArray], [(JreStrcat("C", OrgApacheLuceneAnalysisArArabicStemmer_YEH)) java_toCharArray] } count:10 type:IOSClass_charArray(1)]);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneAnalysisArArabicStemmer)
  }
}

@end

void OrgApacheLuceneAnalysisArArabicStemmer_init(OrgApacheLuceneAnalysisArArabicStemmer *self) {
  NSObject_init(self);
}

OrgApacheLuceneAnalysisArArabicStemmer *new_OrgApacheLuceneAnalysisArArabicStemmer_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisArArabicStemmer, init)
}

OrgApacheLuceneAnalysisArArabicStemmer *create_OrgApacheLuceneAnalysisArArabicStemmer_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisArArabicStemmer, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisArArabicStemmer)
