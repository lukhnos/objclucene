//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/analysis/Analyzer.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/Reader.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "org/apache/lucene/analysis/Analyzer.h"
#include "org/apache/lucene/analysis/ReusableStringReader.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/Tokenizer.h"
#include "org/apache/lucene/store/AlreadyClosedException.h"
#include "org/apache/lucene/util/CloseableThreadLocal.h"
#include "org/apache/lucene/util/Version.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/analysis/Analyzer must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneAnalysisAnalyzer () {
 @public
  OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *reuseStrategy_;
  OrgApacheLuceneUtilVersion *version__;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisAnalyzer, reuseStrategy_, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisAnalyzer, version__, OrgApacheLuceneUtilVersion *)

__attribute__((unused)) static id OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_getStoredValueWithOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *self, OrgApacheLuceneAnalysisAnalyzer *analyzer);

__attribute__((unused)) static void OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_setStoredValueWithOrgApacheLuceneAnalysisAnalyzer_withId_(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *self, OrgApacheLuceneAnalysisAnalyzer *analyzer, id storedValue);

@interface OrgApacheLuceneAnalysisAnalyzer_1 : OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy

- (instancetype)init;

- (OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)getReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                                                                                       withNSString:(NSString *)fieldName;

- (void)setReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                                    withNSString:(NSString *)fieldName
       withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)components;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisAnalyzer_1)

__attribute__((unused)) static void OrgApacheLuceneAnalysisAnalyzer_1_init(OrgApacheLuceneAnalysisAnalyzer_1 *self);

__attribute__((unused)) static OrgApacheLuceneAnalysisAnalyzer_1 *new_OrgApacheLuceneAnalysisAnalyzer_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneAnalysisAnalyzer_1 *create_OrgApacheLuceneAnalysisAnalyzer_1_init(void);

@interface OrgApacheLuceneAnalysisAnalyzer_2 : OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy

- (instancetype)init;

- (OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)getReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                                                                                       withNSString:(NSString *)fieldName;

- (void)setReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                                    withNSString:(NSString *)fieldName
       withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)components;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisAnalyzer_2)

__attribute__((unused)) static void OrgApacheLuceneAnalysisAnalyzer_2_init(OrgApacheLuceneAnalysisAnalyzer_2 *self);

__attribute__((unused)) static OrgApacheLuceneAnalysisAnalyzer_2 *new_OrgApacheLuceneAnalysisAnalyzer_2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneAnalysisAnalyzer_2 *create_OrgApacheLuceneAnalysisAnalyzer_2_init(void);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneAnalysisAnalyzer)

OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *OrgApacheLuceneAnalysisAnalyzer_GLOBAL_REUSE_STRATEGY;
OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *OrgApacheLuceneAnalysisAnalyzer_PER_FIELD_REUSE_STRATEGY;

@implementation OrgApacheLuceneAnalysisAnalyzer

+ (OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *)GLOBAL_REUSE_STRATEGY {
  return OrgApacheLuceneAnalysisAnalyzer_GLOBAL_REUSE_STRATEGY;
}

+ (OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *)PER_FIELD_REUSE_STRATEGY {
  return OrgApacheLuceneAnalysisAnalyzer_PER_FIELD_REUSE_STRATEGY;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisAnalyzer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy:(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *)reuseStrategy {
  OrgApacheLuceneAnalysisAnalyzer_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(self, reuseStrategy);
  return self;
}

- (OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)createComponentsWithNSString:(NSString *)fieldName {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgApacheLuceneAnalysisTokenStream *)tokenStreamWithNSString:(NSString *)fieldName
                                               withJavaIoReader:(JavaIoReader *)reader {
  OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *components = JreRetainedLocalValue([((OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *) nil_chk(reuseStrategy_)) getReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:self withNSString:fieldName]);
  JavaIoReader *r = [self initReaderWithNSString:fieldName withJavaIoReader:reader];
  if (components == nil) {
    components = [self createComponentsWithNSString:fieldName];
    [reuseStrategy_ setReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:self withNSString:fieldName withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:components];
  }
  [((OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *) nil_chk(components)) setReaderWithJavaIoReader:r];
  return [components getTokenStream];
}

- (OrgApacheLuceneAnalysisTokenStream *)tokenStreamWithNSString:(NSString *)fieldName
                                                   withNSString:(NSString *)text {
  OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *components = JreRetainedLocalValue([((OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *) nil_chk(reuseStrategy_)) getReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:self withNSString:fieldName]);
  OrgApacheLuceneAnalysisReusableStringReader *strReader = (components == nil || components->reusableStringReader_ == nil) ? create_OrgApacheLuceneAnalysisReusableStringReader_initPackagePrivate() : ((OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *) nil_chk(components))->reusableStringReader_;
  [strReader setValueWithNSString:text];
  JavaIoReader *r = [self initReaderWithNSString:fieldName withJavaIoReader:strReader];
  if (components == nil) {
    components = [self createComponentsWithNSString:fieldName];
    [reuseStrategy_ setReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:self withNSString:fieldName withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:components];
  }
  [((OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *) nil_chk(components)) setReaderWithJavaIoReader:r];
  JreStrongAssign(&components->reusableStringReader_, strReader);
  return [components getTokenStream];
}

- (JavaIoReader *)initReaderWithNSString:(NSString *)fieldName
                        withJavaIoReader:(JavaIoReader *)reader {
  return reader;
}

- (jint)getPositionIncrementGapWithNSString:(NSString *)fieldName {
  return 0;
}

- (jint)getOffsetGapWithNSString:(NSString *)fieldName {
  return 1;
}

- (OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *)getReuseStrategy {
  return reuseStrategy_;
}

- (void)setVersionWithOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)v {
  JreStrongAssign(&version__, v);
}

- (OrgApacheLuceneUtilVersion *)getVersion {
  return version__;
}

- (void)close {
  if (storedValue_ != nil) {
    [storedValue_ close];
    JreStrongAssign(&storedValue_, nil);
  }
}

- (void)dealloc {
  RELEASE_(reuseStrategy_);
  RELEASE_(version__);
  RELEASE_(storedValue_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents;", 0x404, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisTokenStream;", 0x11, 3, 4, 5, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisTokenStream;", 0x11, 3, 6, 5, -1, -1, -1 },
    { NULL, "LJavaIoReader;", 0x4, 7, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 8, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 9, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilVersion;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy:);
  methods[2].selector = @selector(createComponentsWithNSString:);
  methods[3].selector = @selector(tokenStreamWithNSString:withJavaIoReader:);
  methods[4].selector = @selector(tokenStreamWithNSString:withNSString:);
  methods[5].selector = @selector(initReaderWithNSString:withJavaIoReader:);
  methods[6].selector = @selector(getPositionIncrementGapWithNSString:);
  methods[7].selector = @selector(getOffsetGapWithNSString:);
  methods[8].selector = @selector(getReuseStrategy);
  methods[9].selector = @selector(setVersionWithOrgApacheLuceneUtilVersion:);
  methods[10].selector = @selector(getVersion);
  methods[11].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "reuseStrategy_", "LOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "version__", "LOrgApacheLuceneUtilVersion;", .constantValue.asLong = 0, 0x2, 12, -1, -1, -1 },
    { "storedValue_", "LOrgApacheLuceneUtilCloseableThreadLocal;", .constantValue.asLong = 0, 0x0, -1, -1, 13, -1 },
    { "GLOBAL_REUSE_STRATEGY", "LOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy;", .constantValue.asLong = 0, 0x19, -1, 14, -1, -1 },
    { "PER_FIELD_REUSE_STRATEGY", "LOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy;", .constantValue.asLong = 0, 0x19, -1, 15, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy;", "createComponents", "LNSString;", "tokenStream", "LNSString;LJavaIoReader;", "LJavaIoIOException;", "LNSString;LNSString;", "initReader", "getPositionIncrementGap", "getOffsetGap", "setVersion", "LOrgApacheLuceneUtilVersion;", "version", "Lorg/apache/lucene/util/CloseableThreadLocal<Ljava/lang/Object;>;", &OrgApacheLuceneAnalysisAnalyzer_GLOBAL_REUSE_STRATEGY, &OrgApacheLuceneAnalysisAnalyzer_PER_FIELD_REUSE_STRATEGY, "LOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents;LOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisAnalyzer = { "Analyzer", "org.apache.lucene.analysis", ptrTable, methods, fields, 7, 0x401, 12, 5, -1, 16, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisAnalyzer;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneAnalysisAnalyzer class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneAnalysisAnalyzer_GLOBAL_REUSE_STRATEGY, new_OrgApacheLuceneAnalysisAnalyzer_1_init());
    JreStrongAssignAndConsume(&OrgApacheLuceneAnalysisAnalyzer_PER_FIELD_REUSE_STRATEGY, new_OrgApacheLuceneAnalysisAnalyzer_2_init());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneAnalysisAnalyzer)
  }
}

@end

void OrgApacheLuceneAnalysisAnalyzer_init(OrgApacheLuceneAnalysisAnalyzer *self) {
  OrgApacheLuceneAnalysisAnalyzer_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(self, OrgApacheLuceneAnalysisAnalyzer_GLOBAL_REUSE_STRATEGY);
}

void OrgApacheLuceneAnalysisAnalyzer_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneAnalysisAnalyzer *self, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *reuseStrategy) {
  NSObject_init(self);
  JreStrongAssign(&self->version__, JreLoadStatic(OrgApacheLuceneUtilVersion, LATEST));
  JreStrongAssignAndConsume(&self->storedValue_, new_OrgApacheLuceneUtilCloseableThreadLocal_init());
  JreStrongAssign(&self->reuseStrategy_, reuseStrategy);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisAnalyzer)

@implementation OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents

- (instancetype)initWithOrgApacheLuceneAnalysisTokenizer:(OrgApacheLuceneAnalysisTokenizer *)source
                  withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)result {
  OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents_initWithOrgApacheLuceneAnalysisTokenizer_withOrgApacheLuceneAnalysisTokenStream_(self, source, result);
  return self;
}

- (instancetype)initWithOrgApacheLuceneAnalysisTokenizer:(OrgApacheLuceneAnalysisTokenizer *)source {
  OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents_initWithOrgApacheLuceneAnalysisTokenizer_(self, source);
  return self;
}

- (void)setReaderWithJavaIoReader:(JavaIoReader *)reader {
  [((OrgApacheLuceneAnalysisTokenizer *) nil_chk(source_)) setReaderWithJavaIoReader:reader];
}

- (OrgApacheLuceneAnalysisTokenStream *)getTokenStream {
  return sink_;
}

- (OrgApacheLuceneAnalysisTokenizer *)getTokenizer {
  return source_;
}

- (void)dealloc {
  RELEASE_(source_);
  RELEASE_(sink_);
  RELEASE_(reusableStringReader_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisTokenStream;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisTokenizer;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneAnalysisTokenizer:withOrgApacheLuceneAnalysisTokenStream:);
  methods[1].selector = @selector(initWithOrgApacheLuceneAnalysisTokenizer:);
  methods[2].selector = @selector(setReaderWithJavaIoReader:);
  methods[3].selector = @selector(getTokenStream);
  methods[4].selector = @selector(getTokenizer);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "source_", "LOrgApacheLuceneAnalysisTokenizer;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "sink_", "LOrgApacheLuceneAnalysisTokenStream;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "reusableStringReader_", "LOrgApacheLuceneAnalysisReusableStringReader;", .constantValue.asLong = 0, 0x80, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneAnalysisTokenizer;LOrgApacheLuceneAnalysisTokenStream;", "LOrgApacheLuceneAnalysisTokenizer;", "setReader", "LJavaIoReader;", "LJavaIoIOException;", "LOrgApacheLuceneAnalysisAnalyzer;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents = { "TokenStreamComponents", "org.apache.lucene.analysis", ptrTable, methods, fields, 7, 0x9, 5, 3, 5, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents;
}

@end

void OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents_initWithOrgApacheLuceneAnalysisTokenizer_withOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *self, OrgApacheLuceneAnalysisTokenizer *source, OrgApacheLuceneAnalysisTokenStream *result) {
  NSObject_init(self);
  JreStrongAssign(&self->source_, source);
  JreStrongAssign(&self->sink_, result);
}

OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *new_OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents_initWithOrgApacheLuceneAnalysisTokenizer_withOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTokenizer *source, OrgApacheLuceneAnalysisTokenStream *result) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents, initWithOrgApacheLuceneAnalysisTokenizer_withOrgApacheLuceneAnalysisTokenStream_, source, result)
}

OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *create_OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents_initWithOrgApacheLuceneAnalysisTokenizer_withOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTokenizer *source, OrgApacheLuceneAnalysisTokenStream *result) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents, initWithOrgApacheLuceneAnalysisTokenizer_withOrgApacheLuceneAnalysisTokenStream_, source, result)
}

void OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents_initWithOrgApacheLuceneAnalysisTokenizer_(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *self, OrgApacheLuceneAnalysisTokenizer *source) {
  NSObject_init(self);
  JreStrongAssign(&self->source_, source);
  JreStrongAssign(&self->sink_, source);
}

OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *new_OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents_initWithOrgApacheLuceneAnalysisTokenizer_(OrgApacheLuceneAnalysisTokenizer *source) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents, initWithOrgApacheLuceneAnalysisTokenizer_, source)
}

OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *create_OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents_initWithOrgApacheLuceneAnalysisTokenizer_(OrgApacheLuceneAnalysisTokenizer *source) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents, initWithOrgApacheLuceneAnalysisTokenizer_, source)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents)

@implementation OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)getReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                                                                                       withNSString:(NSString *)fieldName {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)setReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                                    withNSString:(NSString *)fieldName
       withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)components {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (id)getStoredValueWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer {
  return OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_getStoredValueWithOrgApacheLuceneAnalysisAnalyzer_(self, analyzer);
}

- (void)setStoredValueWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                                   withId:(id)storedValue {
  OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_setStoredValueWithOrgApacheLuceneAnalysisAnalyzer_withId_(self, analyzer, storedValue);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents;", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x14, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x14, 6, 7, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:withNSString:);
  methods[2].selector = @selector(setReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:withNSString:withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:);
  methods[3].selector = @selector(getStoredValueWithOrgApacheLuceneAnalysisAnalyzer:);
  methods[4].selector = @selector(setStoredValueWithOrgApacheLuceneAnalysisAnalyzer:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getReusableComponents", "LOrgApacheLuceneAnalysisAnalyzer;LNSString;", "setReusableComponents", "LOrgApacheLuceneAnalysisAnalyzer;LNSString;LOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents;", "getStoredValue", "LOrgApacheLuceneAnalysisAnalyzer;", "setStoredValue", "LOrgApacheLuceneAnalysisAnalyzer;LNSObject;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy = { "ReuseStrategy", "org.apache.lucene.analysis", ptrTable, methods, NULL, 7, 0x409, 5, 0, 5, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy;
}

@end

void OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_init(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *self) {
  NSObject_init(self);
}

id OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_getStoredValueWithOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *self, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  if (((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(analyzer))->storedValue_ == nil) {
    @throw create_OrgApacheLuceneStoreAlreadyClosedException_initWithNSString_(@"this Analyzer is closed");
  }
  return [analyzer->storedValue_ get];
}

void OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_setStoredValueWithOrgApacheLuceneAnalysisAnalyzer_withId_(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *self, OrgApacheLuceneAnalysisAnalyzer *analyzer, id storedValue) {
  if (((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(analyzer))->storedValue_ == nil) {
    @throw create_OrgApacheLuceneStoreAlreadyClosedException_initWithNSString_(@"this Analyzer is closed");
  }
  [analyzer->storedValue_ setWithId:storedValue];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy)

@implementation OrgApacheLuceneAnalysisAnalyzer_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisAnalyzer_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)getReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                                                                                       withNSString:(NSString *)fieldName {
  return JreRetainedLocalValue((OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *) cast_chk(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_getStoredValueWithOrgApacheLuceneAnalysisAnalyzer_(self, analyzer), [OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents class]));
}

- (void)setReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                                    withNSString:(NSString *)fieldName
       withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)components {
  OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_setStoredValueWithOrgApacheLuceneAnalysisAnalyzer_withId_(self, analyzer, components);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:withNSString:);
  methods[2].selector = @selector(setReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:withNSString:withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getReusableComponents", "LOrgApacheLuceneAnalysisAnalyzer;LNSString;", "setReusableComponents", "LOrgApacheLuceneAnalysisAnalyzer;LNSString;LOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents;", "LOrgApacheLuceneAnalysisAnalyzer;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisAnalyzer_1 = { "", "org.apache.lucene.analysis", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 4, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisAnalyzer_1;
}

@end

void OrgApacheLuceneAnalysisAnalyzer_1_init(OrgApacheLuceneAnalysisAnalyzer_1 *self) {
  OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_init(self);
}

OrgApacheLuceneAnalysisAnalyzer_1 *new_OrgApacheLuceneAnalysisAnalyzer_1_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisAnalyzer_1, init)
}

OrgApacheLuceneAnalysisAnalyzer_1 *create_OrgApacheLuceneAnalysisAnalyzer_1_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisAnalyzer_1, init)
}

@implementation OrgApacheLuceneAnalysisAnalyzer_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneAnalysisAnalyzer_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)getReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                                                                                       withNSString:(NSString *)fieldName {
  id<JavaUtilMap> componentsPerField = (id<JavaUtilMap>) cast_check(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_getStoredValueWithOrgApacheLuceneAnalysisAnalyzer_(self, analyzer), JavaUtilMap_class_());
  return JreRetainedLocalValue(componentsPerField != nil ? [componentsPerField getWithId:fieldName] : nil);
}

- (void)setReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                                    withNSString:(NSString *)fieldName
       withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)components {
  id<JavaUtilMap> componentsPerField = (id<JavaUtilMap>) cast_check(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_getStoredValueWithOrgApacheLuceneAnalysisAnalyzer_(self, analyzer), JavaUtilMap_class_());
  if (componentsPerField == nil) {
    componentsPerField = create_JavaUtilHashMap_init();
    OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_setStoredValueWithOrgApacheLuceneAnalysisAnalyzer_withId_(self, analyzer, componentsPerField);
  }
  [componentsPerField putWithId:fieldName withId:components];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:withNSString:);
  methods[2].selector = @selector(setReusableComponentsWithOrgApacheLuceneAnalysisAnalyzer:withNSString:withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getReusableComponents", "LOrgApacheLuceneAnalysisAnalyzer;LNSString;", "setReusableComponents", "LOrgApacheLuceneAnalysisAnalyzer;LNSString;LOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents;", "LOrgApacheLuceneAnalysisAnalyzer;" };
  static const J2ObjcClassInfo _OrgApacheLuceneAnalysisAnalyzer_2 = { "", "org.apache.lucene.analysis", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 4, -1, -1, -1, -1 };
  return &_OrgApacheLuceneAnalysisAnalyzer_2;
}

@end

void OrgApacheLuceneAnalysisAnalyzer_2_init(OrgApacheLuceneAnalysisAnalyzer_2 *self) {
  OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_init(self);
}

OrgApacheLuceneAnalysisAnalyzer_2 *new_OrgApacheLuceneAnalysisAnalyzer_2_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneAnalysisAnalyzer_2, init)
}

OrgApacheLuceneAnalysisAnalyzer_2 *create_OrgApacheLuceneAnalysisAnalyzer_2_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneAnalysisAnalyzer_2, init)
}
