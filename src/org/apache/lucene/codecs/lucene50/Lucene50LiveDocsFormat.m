//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/codecs/lucene50/Lucene50LiveDocsFormat.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Character.h"
#include "java/lang/Long.h"
#include "java/lang/Throwable.h"
#include "java/util/Collection.h"
#include "org/apache/lucene/codecs/CodecUtil.h"
#include "org/apache/lucene/codecs/LiveDocsFormat.h"
#include "org/apache/lucene/codecs/lucene50/Lucene50LiveDocsFormat.h"
#include "org/apache/lucene/index/CorruptIndexException.h"
#include "org/apache/lucene/index/IndexFileNames.h"
#include "org/apache/lucene/index/SegmentCommitInfo.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/store/ChecksumIndexInput.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/util/Bits.h"
#include "org/apache/lucene/util/FixedBitSet.h"
#include "org/apache/lucene/util/MutableBits.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/codecs/lucene50/Lucene50LiveDocsFormat must not be compiled with ARC (-fobjc-arc)"
#endif

/*!
 @brief extension of live docs
 */
inline NSString *OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat_get_EXTENSION(void);
static NSString *OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat_EXTENSION = @"liv";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat, EXTENSION, NSString *)

/*!
 @brief codec of live docs
 */
inline NSString *OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat_get_CODEC_NAME(void);
static NSString *OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat_CODEC_NAME = @"Lucene50LiveDocs";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat, CODEC_NAME, NSString *)

/*!
 @brief supported version range
 */
inline jint OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat_get_VERSION_START(void);
#define OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat_VERSION_START 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat, VERSION_START, jint)

inline jint OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat_get_VERSION_CURRENT(void);
#define OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat_VERSION_CURRENT 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat, VERSION_CURRENT, jint)

@implementation OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<OrgApacheLuceneUtilMutableBits>)newLiveDocsWithInt:(jint)size {
  OrgApacheLuceneUtilFixedBitSet *bits = create_OrgApacheLuceneUtilFixedBitSet_initWithInt_(size);
  [bits setWithInt:0 withInt:size];
  return bits;
}

- (id<OrgApacheLuceneUtilMutableBits>)newLiveDocsWithOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)existing {
  OrgApacheLuceneUtilFixedBitSet *fbs = (OrgApacheLuceneUtilFixedBitSet *) cast_chk(existing, [OrgApacheLuceneUtilFixedBitSet class]);
  return [((OrgApacheLuceneUtilFixedBitSet *) nil_chk(fbs)) java_clone];
}

- (id<OrgApacheLuceneUtilBits>)readLiveDocsWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                                   withOrgApacheLuceneIndexSegmentCommitInfo:(OrgApacheLuceneIndexSegmentCommitInfo *)info
                                           withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context {
  jlong gen = [((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info)) getDelGen];
  NSString *name = OrgApacheLuceneIndexIndexFileNames_fileNameFromGenerationWithNSString_withNSString_withLong_(((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info->info_))->name_, OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat_EXTENSION, gen);
  jint length = [info->info_ maxDoc];
  {
    OrgApacheLuceneStoreChecksumIndexInput *input = [((OrgApacheLuceneStoreDirectory *) nil_chk(dir)) openChecksumInputWithNSString:name withOrgApacheLuceneStoreIOContext:context];
    JavaLangThrowable *__primaryException1 = nil;
    @try {
      JavaLangThrowable *priorE = nil;
      @try {
        OrgApacheLuceneCodecsCodecUtil_checkIndexHeaderWithOrgApacheLuceneStoreDataInput_withNSString_withInt_withInt_withByteArray_withNSString_(input, OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat_CODEC_NAME, OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat_VERSION_START, OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat_VERSION_CURRENT, [info->info_ getId], JavaLangLong_toStringWithLong_withInt_(gen, JavaLangCharacter_MAX_RADIX));
        IOSLongArray *data = [IOSLongArray arrayWithLength:OrgApacheLuceneUtilFixedBitSet_bits2wordsWithInt_(length)];
        for (jint i = 0; i < data->size_; i++) {
          *IOSLongArray_GetRef(data, i) = [((OrgApacheLuceneStoreChecksumIndexInput *) nil_chk(input)) readLong];
        }
        OrgApacheLuceneUtilFixedBitSet *fbs = create_OrgApacheLuceneUtilFixedBitSet_initWithLongArray_withInt_(data, length);
        if ([fbs length] - [fbs cardinality] != [info getDelCount]) {
          @throw create_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_(JreStrcat("$I$I", @"bits.deleted=", ([fbs length] - [fbs cardinality]), @" info.delcount=", [info getDelCount]), input);
        }
        return fbs;
      }
      @catch (JavaLangThrowable *exception) {
        priorE = exception;
      }
      @finally {
        OrgApacheLuceneCodecsCodecUtil_checkFooterWithOrgApacheLuceneStoreChecksumIndexInput_withJavaLangThrowable_(input, priorE);
      }
    }
    @catch (JavaLangThrowable *e) {
      __primaryException1 = e;
      @throw e;
    }
    @finally {
      if (input != nil) {
        if (__primaryException1 != nil) {
          @try {
            [input close];
          }
          @catch (JavaLangThrowable *e) {
            [__primaryException1 addSuppressedWithJavaLangThrowable:e];
          }
        }
        else {
          [input close];
        }
      }
    }
  }
  @throw create_JavaLangAssertionError_init();
}

- (void)writeLiveDocsWithOrgApacheLuceneUtilMutableBits:(id<OrgApacheLuceneUtilMutableBits>)bits
                      withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
              withOrgApacheLuceneIndexSegmentCommitInfo:(OrgApacheLuceneIndexSegmentCommitInfo *)info
                                                withInt:(jint)newDelCount
                      withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context {
  jlong gen = [((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info)) getNextDelGen];
  NSString *name = OrgApacheLuceneIndexIndexFileNames_fileNameFromGenerationWithNSString_withNSString_withLong_(((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info->info_))->name_, OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat_EXTENSION, gen);
  OrgApacheLuceneUtilFixedBitSet *fbs = (OrgApacheLuceneUtilFixedBitSet *) cast_chk(bits, [OrgApacheLuceneUtilFixedBitSet class]);
  if ([((OrgApacheLuceneUtilFixedBitSet *) nil_chk(fbs)) length] - [fbs cardinality] != [info getDelCount] + newDelCount) {
    @throw create_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withNSString_(JreStrcat("$I$I$I", @"bits.deleted=", ([fbs length] - [fbs cardinality]), @" info.delcount=", [info getDelCount], @" newdelcount=", newDelCount), name);
  }
  IOSLongArray *data = [fbs getBits];
  {
    OrgApacheLuceneStoreIndexOutput *output = [((OrgApacheLuceneStoreDirectory *) nil_chk(dir)) createOutputWithNSString:name withOrgApacheLuceneStoreIOContext:context];
    JavaLangThrowable *__primaryException1 = nil;
    @try {
      OrgApacheLuceneCodecsCodecUtil_writeIndexHeaderWithOrgApacheLuceneStoreDataOutput_withNSString_withInt_withByteArray_withNSString_(output, OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat_CODEC_NAME, OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat_VERSION_CURRENT, [info->info_ getId], JavaLangLong_toStringWithLong_withInt_(gen, JavaLangCharacter_MAX_RADIX));
      for (jint i = 0; i < ((IOSLongArray *) nil_chk(data))->size_; i++) {
        [((OrgApacheLuceneStoreIndexOutput *) nil_chk(output)) writeLongWithLong:IOSLongArray_Get(data, i)];
      }
      OrgApacheLuceneCodecsCodecUtil_writeFooterWithOrgApacheLuceneStoreIndexOutput_(output);
    }
    @catch (JavaLangThrowable *e) {
      __primaryException1 = e;
      @throw e;
    }
    @finally {
      if (output != nil) {
        if (__primaryException1 != nil) {
          @try {
            [output close];
          }
          @catch (JavaLangThrowable *e) {
            [__primaryException1 addSuppressedWithJavaLangThrowable:e];
          }
        }
        else {
          [output close];
        }
      }
    }
  }
}

- (void)filesWithOrgApacheLuceneIndexSegmentCommitInfo:(OrgApacheLuceneIndexSegmentCommitInfo *)info
                                withJavaUtilCollection:(id<JavaUtilCollection>)files {
  if ([((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info)) hasDeletions]) {
    [((id<JavaUtilCollection>) nil_chk(files)) addWithId:OrgApacheLuceneIndexIndexFileNames_fileNameFromGenerationWithNSString_withNSString_withLong_(((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info->info_))->name_, OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat_EXTENSION, [info getDelGen])];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilMutableBits;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilMutableBits;", 0x1, 0, 3, 2, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBits;", 0x1, 4, 5, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, 2, 10, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(newLiveDocsWithInt:);
  methods[2].selector = @selector(newLiveDocsWithOrgApacheLuceneUtilBits:);
  methods[3].selector = @selector(readLiveDocsWithOrgApacheLuceneStoreDirectory:withOrgApacheLuceneIndexSegmentCommitInfo:withOrgApacheLuceneStoreIOContext:);
  methods[4].selector = @selector(writeLiveDocsWithOrgApacheLuceneUtilMutableBits:withOrgApacheLuceneStoreDirectory:withOrgApacheLuceneIndexSegmentCommitInfo:withInt:withOrgApacheLuceneStoreIOContext:);
  methods[5].selector = @selector(filesWithOrgApacheLuceneIndexSegmentCommitInfo:withJavaUtilCollection:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EXTENSION", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 11, -1, -1 },
    { "CODEC_NAME", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 12, -1, -1 },
    { "VERSION_START", "I", .constantValue.asInt = OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat_VERSION_START, 0x1a, -1, -1, -1, -1 },
    { "VERSION_CURRENT", "I", .constantValue.asInt = OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat_VERSION_CURRENT, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "newLiveDocs", "I", "LJavaIoIOException;", "LOrgApacheLuceneUtilBits;", "readLiveDocs", "LOrgApacheLuceneStoreDirectory;LOrgApacheLuceneIndexSegmentCommitInfo;LOrgApacheLuceneStoreIOContext;", "writeLiveDocs", "LOrgApacheLuceneUtilMutableBits;LOrgApacheLuceneStoreDirectory;LOrgApacheLuceneIndexSegmentCommitInfo;ILOrgApacheLuceneStoreIOContext;", "files", "LOrgApacheLuceneIndexSegmentCommitInfo;LJavaUtilCollection;", "(Lorg/apache/lucene/index/SegmentCommitInfo;Ljava/util/Collection<Ljava/lang/String;>;)V", &OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat_EXTENSION, &OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat_CODEC_NAME };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat = { "Lucene50LiveDocsFormat", "org.apache.lucene.codecs.lucene50", ptrTable, methods, fields, 7, 0x11, 6, 4, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat;
}

@end

void OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat_init(OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat *self) {
  OrgApacheLuceneCodecsLiveDocsFormat_init(self);
}

OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat *new_OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat, init)
}

OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat *create_OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsLucene50Lucene50LiveDocsFormat)
