//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/codecs/lucene50/Lucene50PostingsFormat.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "org/apache/lucene/codecs/BlockTermState.h"
#include "org/apache/lucene/codecs/FieldsConsumer.h"
#include "org/apache/lucene/codecs/FieldsProducer.h"
#include "org/apache/lucene/codecs/PostingsFormat.h"
#include "org/apache/lucene/codecs/PostingsReaderBase.h"
#include "org/apache/lucene/codecs/PostingsWriterBase.h"
#include "org/apache/lucene/codecs/blocktree/BlockTreeTermsReader.h"
#include "org/apache/lucene/codecs/blocktree/BlockTreeTermsWriter.h"
#include "org/apache/lucene/codecs/lucene50/Lucene50PostingsFormat.h"
#include "org/apache/lucene/codecs/lucene50/Lucene50PostingsReader.h"
#include "org/apache/lucene/codecs/lucene50/Lucene50PostingsWriter.h"
#include "org/apache/lucene/index/SegmentReadState.h"
#include "org/apache/lucene/index/SegmentWriteState.h"
#include "org/apache/lucene/index/TermState.h"
#include "org/apache/lucene/util/IOUtils.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/codecs/lucene50/Lucene50PostingsFormat must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat () {
 @public
  jint minTermBlockSize_;
  jint maxTermBlockSize_;
}

@end

NSString *OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_DOC_EXTENSION = @"doc";
NSString *OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_POS_EXTENSION = @"pos";
NSString *OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_PAY_EXTENSION = @"pay";
NSString *OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_TERMS_CODEC = @"Lucene50PostingsWriterTerms";
NSString *OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_DOC_CODEC = @"Lucene50PostingsWriterDoc";
NSString *OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_POS_CODEC = @"Lucene50PostingsWriterPos";
NSString *OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_PAY_CODEC = @"Lucene50PostingsWriterPay";

@implementation OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat

+ (NSString *)DOC_EXTENSION {
  return OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_DOC_EXTENSION;
}

+ (NSString *)POS_EXTENSION {
  return OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_POS_EXTENSION;
}

+ (NSString *)PAY_EXTENSION {
  return OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_PAY_EXTENSION;
}

+ (jint)MAX_SKIP_LEVELS {
  return OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_MAX_SKIP_LEVELS;
}

+ (NSString *)TERMS_CODEC {
  return OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_TERMS_CODEC;
}

+ (NSString *)DOC_CODEC {
  return OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_DOC_CODEC;
}

+ (NSString *)POS_CODEC {
  return OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_POS_CODEC;
}

+ (NSString *)PAY_CODEC {
  return OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_PAY_CODEC;
}

+ (jint)VERSION_START {
  return OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_VERSION_START;
}

+ (jint)VERSION_CURRENT {
  return OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_VERSION_CURRENT;
}

+ (jint)BLOCK_SIZE {
  return OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_BLOCK_SIZE;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithInt:(jint)minTermBlockSize
                    withInt:(jint)maxTermBlockSize {
  OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_initWithInt_withInt_(self, minTermBlockSize, maxTermBlockSize);
  return self;
}

- (NSString *)description {
  return JreStrcat("$$IC", [self getName], @"(blocksize=", OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_BLOCK_SIZE, ')');
}

- (OrgApacheLuceneCodecsFieldsConsumer *)fieldsConsumerWithOrgApacheLuceneIndexSegmentWriteState:(OrgApacheLuceneIndexSegmentWriteState *)state {
  OrgApacheLuceneCodecsPostingsWriterBase *postingsWriter = create_OrgApacheLuceneCodecsLucene50Lucene50PostingsWriter_initWithOrgApacheLuceneIndexSegmentWriteState_(state);
  jboolean success = false;
  @try {
    OrgApacheLuceneCodecsFieldsConsumer *ret = create_OrgApacheLuceneCodecsBlocktreeBlockTreeTermsWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withOrgApacheLuceneCodecsPostingsWriterBase_withInt_withInt_(state, postingsWriter, minTermBlockSize_, maxTermBlockSize_);
    success = true;
    return ret;
  }
  @finally {
    if (!success) {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ postingsWriter } count:1 type:JavaIoCloseable_class_()]);
    }
  }
}

- (OrgApacheLuceneCodecsFieldsProducer *)fieldsProducerWithOrgApacheLuceneIndexSegmentReadState:(OrgApacheLuceneIndexSegmentReadState *)state {
  OrgApacheLuceneCodecsPostingsReaderBase *postingsReader = create_OrgApacheLuceneCodecsLucene50Lucene50PostingsReader_initWithOrgApacheLuceneIndexSegmentReadState_(state);
  jboolean success = false;
  @try {
    OrgApacheLuceneCodecsFieldsProducer *ret = create_OrgApacheLuceneCodecsBlocktreeBlockTreeTermsReader_initWithOrgApacheLuceneCodecsPostingsReaderBase_withOrgApacheLuceneIndexSegmentReadState_(postingsReader, state);
    success = true;
    return ret;
  }
  @finally {
    if (!success) {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ postingsReader } count:1 type:JavaIoCloseable_class_()]);
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneCodecsFieldsConsumer;", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneCodecsFieldsProducer;", 0x1, 5, 6, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithInt:withInt:);
  methods[2].selector = @selector(description);
  methods[3].selector = @selector(fieldsConsumerWithOrgApacheLuceneIndexSegmentWriteState:);
  methods[4].selector = @selector(fieldsProducerWithOrgApacheLuceneIndexSegmentReadState:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DOC_EXTENSION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 7, -1, -1 },
    { "POS_EXTENSION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 8, -1, -1 },
    { "PAY_EXTENSION", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 9, -1, -1 },
    { "MAX_SKIP_LEVELS", "I", .constantValue.asInt = OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_MAX_SKIP_LEVELS, 0x18, -1, -1, -1, -1 },
    { "TERMS_CODEC", "LNSString;", .constantValue.asLong = 0, 0x18, -1, 10, -1, -1 },
    { "DOC_CODEC", "LNSString;", .constantValue.asLong = 0, 0x18, -1, 11, -1, -1 },
    { "POS_CODEC", "LNSString;", .constantValue.asLong = 0, 0x18, -1, 12, -1, -1 },
    { "PAY_CODEC", "LNSString;", .constantValue.asLong = 0, 0x18, -1, 13, -1, -1 },
    { "VERSION_START", "I", .constantValue.asInt = OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_VERSION_START, 0x18, -1, -1, -1, -1 },
    { "VERSION_CURRENT", "I", .constantValue.asInt = OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_VERSION_CURRENT, 0x18, -1, -1, -1, -1 },
    { "minTermBlockSize_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "maxTermBlockSize_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "BLOCK_SIZE", "I", .constantValue.asInt = OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_BLOCK_SIZE, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "II", "toString", "fieldsConsumer", "LOrgApacheLuceneIndexSegmentWriteState;", "LJavaIoIOException;", "fieldsProducer", "LOrgApacheLuceneIndexSegmentReadState;", &OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_DOC_EXTENSION, &OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_POS_EXTENSION, &OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_PAY_EXTENSION, &OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_TERMS_CODEC, &OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_DOC_CODEC, &OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_POS_CODEC, &OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_PAY_CODEC, "LOrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_IntBlockTermState;" };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat = { "Lucene50PostingsFormat", "org.apache.lucene.codecs.lucene50", ptrTable, methods, fields, 7, 0x11, 5, 13, -1, 14, -1, -1, -1 };
  return &_OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat;
}

@end

void OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_init(OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat *self) {
  OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_initWithInt_withInt_(self, OrgApacheLuceneCodecsBlocktreeBlockTreeTermsWriter_DEFAULT_MIN_BLOCK_SIZE, OrgApacheLuceneCodecsBlocktreeBlockTreeTermsWriter_DEFAULT_MAX_BLOCK_SIZE);
}

OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat *new_OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat, init)
}

OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat *create_OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat, init)
}

void OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_initWithInt_withInt_(OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat *self, jint minTermBlockSize, jint maxTermBlockSize) {
  OrgApacheLuceneCodecsPostingsFormat_initWithNSString_(self, @"Lucene50");
  OrgApacheLuceneCodecsBlocktreeBlockTreeTermsWriter_validateSettingsWithInt_withInt_(minTermBlockSize, maxTermBlockSize);
  self->minTermBlockSize_ = minTermBlockSize;
  self->maxTermBlockSize_ = maxTermBlockSize;
}

OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat *new_OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_initWithInt_withInt_(jint minTermBlockSize, jint maxTermBlockSize) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat, initWithInt_withInt_, minTermBlockSize, maxTermBlockSize)
}

OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat *create_OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_initWithInt_withInt_(jint minTermBlockSize, jint maxTermBlockSize) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat, initWithInt_withInt_, minTermBlockSize, maxTermBlockSize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat)

@implementation OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_IntBlockTermState

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_IntBlockTermState_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_IntBlockTermState *)java_clone {
  OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_IntBlockTermState *other = create_OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_IntBlockTermState_init();
  [other copyFromWithOrgApacheLuceneIndexTermState:self];
  return other;
}

- (void)copyFromWithOrgApacheLuceneIndexTermState:(OrgApacheLuceneIndexTermState *)_other {
  [super copyFromWithOrgApacheLuceneIndexTermState:_other];
  OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_IntBlockTermState *other = (OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_IntBlockTermState *) cast_chk(_other, [OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_IntBlockTermState class]);
  docStartFP_ = ((OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_IntBlockTermState *) nil_chk(other))->docStartFP_;
  posStartFP_ = other->posStartFP_;
  payStartFP_ = other->payStartFP_;
  lastPosBlockOffset_ = other->lastPosBlockOffset_;
  skipOffset_ = other->skipOffset_;
  singletonDocID_ = other->singletonDocID_;
}

- (NSString *)description {
  return JreStrcat("$$J$J$J$J$I", [super description], @" docStartFP=", docStartFP_, @" posStartFP=", posStartFP_, @" payStartFP=", payStartFP_, @" lastPosBlockOffset=", lastPosBlockOffset_, @" singletonDocID=", singletonDocID_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_IntBlockTermState;", 0x1, 0, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(java_clone);
  methods[2].selector = @selector(copyFromWithOrgApacheLuceneIndexTermState:);
  methods[3].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "docStartFP_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "posStartFP_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "payStartFP_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "skipOffset_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "lastPosBlockOffset_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "singletonDocID_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "clone", "copyFrom", "LOrgApacheLuceneIndexTermState;", "toString", "LOrgApacheLuceneCodecsLucene50Lucene50PostingsFormat;" };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_IntBlockTermState = { "IntBlockTermState", "org.apache.lucene.codecs.lucene50", ptrTable, methods, fields, 7, 0x18, 4, 6, 4, -1, -1, -1, -1 };
  return &_OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_IntBlockTermState;
}

@end

void OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_IntBlockTermState_init(OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_IntBlockTermState *self) {
  OrgApacheLuceneCodecsBlockTermState_init(self);
  self->docStartFP_ = 0;
  self->posStartFP_ = 0;
  self->payStartFP_ = 0;
  self->skipOffset_ = -1;
  self->lastPosBlockOffset_ = -1;
  self->singletonDocID_ = -1;
}

OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_IntBlockTermState *new_OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_IntBlockTermState_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_IntBlockTermState, init)
}

OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_IntBlockTermState *create_OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_IntBlockTermState_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_IntBlockTermState, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsLucene50Lucene50PostingsFormat_IntBlockTermState)
