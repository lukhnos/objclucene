//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/codecs/lucene50/Lucene50DocValuesConsumer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Comparable.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/SortedSet.h"
#include "java/util/Spliterator.h"
#include "java/util/TreeSet.h"
#include "java/util/function/Consumer.h"
#include "org/apache/lucene/codecs/CodecUtil.h"
#include "org/apache/lucene/codecs/DocValuesConsumer.h"
#include "org/apache/lucene/codecs/lucene50/Lucene50DocValuesConsumer.h"
#include "org/apache/lucene/codecs/lucene50/Lucene50DocValuesFormat.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/IndexFileNames.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/index/SegmentWriteState.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/store/RAMOutputStream.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/LongsRef.h"
#include "org/apache/lucene/util/MathUtil.h"
#include "org/apache/lucene/util/PagedBytes.h"
#include "org/apache/lucene/util/StringHelper.h"
#include "org/apache/lucene/util/packed/DirectWriter.h"
#include "org/apache/lucene/util/packed/MonotonicBlockPackedWriter.h"
#include "org/apache/lucene/util/packed/PackedInts.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/codecs/lucene50/Lucene50DocValuesConsumer must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer ()

/*!
 @brief expert: writes a value dictionary for a sorted/sortedset field
 */
- (void)addTermsDictWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                 withJavaLangIterable:(id<JavaLangIterable>)values;

- (void)flushTermsDictBlockWithOrgApacheLuceneStoreRAMOutputStream:(OrgApacheLuceneStoreRAMOutputStream *)headerBuffer
                           withOrgApacheLuceneStoreRAMOutputStream:(OrgApacheLuceneStoreRAMOutputStream *)bytesBuffer
                                                      withIntArray:(IOSIntArray *)suffixDeltas;

- (void)addReverseTermIndexWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                        withJavaLangIterable:(id<JavaLangIterable>)values
                                                     withInt:(jint)maxLength;

- (id<JavaUtilSortedSet>)uniqueValueSetsWithJavaLangIterable:(id<JavaLangIterable>)docToValueCount
                                        withJavaLangIterable:(id<JavaLangIterable>)values;

- (void)writeDictionaryWithJavaUtilSortedSet:(id<JavaUtilSortedSet>)uniqueValueSets;

- (id<JavaLangIterable>)docToSetIdWithJavaUtilSortedSet:(id<JavaUtilSortedSet>)uniqueValueSets
                                   withJavaLangIterable:(id<JavaLangIterable>)docToValueCount
                                   withJavaLangIterable:(id<JavaLangIterable>)values;

- (void)addAddressesWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                 withJavaLangIterable:(id<JavaLangIterable>)values;

@end

__attribute__((unused)) static void OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_addTermsDictWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer *self, OrgApacheLuceneIndexFieldInfo *field, id<JavaLangIterable> values);

__attribute__((unused)) static void OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_flushTermsDictBlockWithOrgApacheLuceneStoreRAMOutputStream_withOrgApacheLuceneStoreRAMOutputStream_withIntArray_(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer *self, OrgApacheLuceneStoreRAMOutputStream *headerBuffer, OrgApacheLuceneStoreRAMOutputStream *bytesBuffer, IOSIntArray *suffixDeltas);

__attribute__((unused)) static void OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_addReverseTermIndexWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_withInt_(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer *self, OrgApacheLuceneIndexFieldInfo *field, id<JavaLangIterable> values, jint maxLength);

__attribute__((unused)) static id<JavaUtilSortedSet> OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_uniqueValueSetsWithJavaLangIterable_withJavaLangIterable_(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer *self, id<JavaLangIterable> docToValueCount, id<JavaLangIterable> values);

__attribute__((unused)) static void OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_writeDictionaryWithJavaUtilSortedSet_(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer *self, id<JavaUtilSortedSet> uniqueValueSets);

__attribute__((unused)) static id<JavaLangIterable> OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_docToSetIdWithJavaUtilSortedSet_withJavaLangIterable_withJavaLangIterable_(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer *self, id<JavaUtilSortedSet> uniqueValueSets, id<JavaLangIterable> docToValueCount, id<JavaLangIterable> values);

__attribute__((unused)) static void OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_addAddressesWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer *self, OrgApacheLuceneIndexFieldInfo *field, id<JavaLangIterable> values);

@interface OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1 : NSObject < JavaLangIterable > {
 @public
  id<JavaLangIterable> val$docToValueCount_;
  id<JavaLangIterable> val$values_;
  id<JavaUtilMap> val$setIds_;
}

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)capture$0
                    withJavaLangIterable:(id<JavaLangIterable>)capture$1
                         withJavaUtilMap:(id<JavaUtilMap>)capture$2;

- (id<JavaUtilIterator>)iterator;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1)

__attribute__((unused)) static void OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_initWithJavaLangIterable_withJavaLangIterable_withJavaUtilMap_(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1 *self, id<JavaLangIterable> capture$0, id<JavaLangIterable> capture$1, id<JavaUtilMap> capture$2);

__attribute__((unused)) static OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1 *new_OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_initWithJavaLangIterable_withJavaLangIterable_withJavaUtilMap_(id<JavaLangIterable> capture$0, id<JavaLangIterable> capture$1, id<JavaUtilMap> capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1 *create_OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_initWithJavaLangIterable_withJavaLangIterable_withJavaUtilMap_(id<JavaLangIterable> capture$0, id<JavaLangIterable> capture$1, id<JavaUtilMap> capture$2);

@interface OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_1 : NSObject < JavaUtilIterator > {
 @public
  OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1 *this$0_;
  id<JavaUtilIterator> val$valueCountIterator_;
  OrgApacheLuceneUtilLongsRef *val$docValues_;
  id<JavaUtilIterator> val$valueIterator_;
}

- (instancetype)initWithOrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1:(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1 *)outer$
                                                            withJavaUtilIterator:(id<JavaUtilIterator>)capture$0
                                                 withOrgApacheLuceneUtilLongsRef:(OrgApacheLuceneUtilLongsRef *)capture$1
                                                            withJavaUtilIterator:(id<JavaUtilIterator>)capture$2;

- (jboolean)hasNext;

- (NSNumber *)next;

- (void)remove;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_1)

__attribute__((unused)) static void OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_1_initWithOrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_withJavaUtilIterator_withOrgApacheLuceneUtilLongsRef_withJavaUtilIterator_(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_1 *self, OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1 *outer$, id<JavaUtilIterator> capture$0, OrgApacheLuceneUtilLongsRef *capture$1, id<JavaUtilIterator> capture$2);

__attribute__((unused)) static OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_1 *new_OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_1_initWithOrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_withJavaUtilIterator_withOrgApacheLuceneUtilLongsRef_withJavaUtilIterator_(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1 *outer$, id<JavaUtilIterator> capture$0, OrgApacheLuceneUtilLongsRef *capture$1, id<JavaUtilIterator> capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_1 *create_OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_1_initWithOrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_withJavaUtilIterator_withOrgApacheLuceneUtilLongsRef_withJavaUtilIterator_(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1 *outer$, id<JavaUtilIterator> capture$0, OrgApacheLuceneUtilLongsRef *capture$1, id<JavaUtilIterator> capture$2);

@implementation OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer

- (instancetype)initPackagePrivateWithOrgApacheLuceneIndexSegmentWriteState:(OrgApacheLuceneIndexSegmentWriteState *)state
                                                               withNSString:(NSString *)dataCodec
                                                               withNSString:(NSString *)dataExtension
                                                               withNSString:(NSString *)metaCodec
                                                               withNSString:(NSString *)metaExtension {
  OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_initPackagePrivateWithOrgApacheLuceneIndexSegmentWriteState_withNSString_withNSString_withNSString_withNSString_(self, state, dataCodec, dataExtension, metaCodec, metaExtension);
  return self;
}

- (void)addNumericFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                    withJavaLangIterable:(id<JavaLangIterable>)values {
  [self addNumericFieldWithOrgApacheLuceneIndexFieldInfo:field withJavaLangIterable:values withBoolean:true];
}

- (void)addNumericFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                    withJavaLangIterable:(id<JavaLangIterable>)values
                                             withBoolean:(jboolean)optimizeStorage {
  jlong count = 0;
  jlong minValue = JavaLangLong_MAX_VALUE;
  jlong maxValue = JavaLangLong_MIN_VALUE;
  jlong gcd = 0;
  jlong missingCount = 0;
  jlong zeroCount = 0;
  JavaUtilHashSet *uniqueValues = nil;
  if (optimizeStorage) {
    uniqueValues = create_JavaUtilHashSet_init();
    for (NSNumber * __strong nv in nil_chk(values)) {
      jlong v;
      if (nv == nil) {
        v = 0;
        missingCount++;
        zeroCount++;
      }
      else {
        v = [nv longLongValue];
        if (v == 0) {
          zeroCount++;
        }
      }
      if (gcd != 1) {
        if (v < JreLongDiv(JavaLangLong_MIN_VALUE, 2) || v > JreLongDiv(JavaLangLong_MAX_VALUE, 2)) {
          gcd = 1;
        }
        else if (count != 0) {
          gcd = OrgApacheLuceneUtilMathUtil_gcdWithLong_withLong_(gcd, v - minValue);
        }
      }
      minValue = JavaLangMath_minWithLong_withLong_(minValue, v);
      maxValue = JavaLangMath_maxWithLong_withLong_(maxValue, v);
      if (uniqueValues != nil) {
        if ([uniqueValues addWithId:JavaLangLong_valueOfWithLong_(v)]) {
          if ([uniqueValues size] > 256) {
            uniqueValues = nil;
          }
        }
      }
      ++count;
    }
  }
  else {
    for (NSNumber * __strong nv in nil_chk(values)) {
      jlong v = [((NSNumber *) nil_chk(nv)) longLongValue];
      minValue = JavaLangMath_minWithLong_withLong_(minValue, v);
      maxValue = JavaLangMath_maxWithLong_withLong_(maxValue, v);
      ++count;
    }
  }
  jlong delta = maxValue - minValue;
  jint deltaBitsRequired = OrgApacheLuceneUtilPackedDirectWriter_unsignedBitsRequiredWithLong_(delta);
  jint tableBitsRequired = uniqueValues == nil ? JavaLangInteger_MAX_VALUE : OrgApacheLuceneUtilPackedDirectWriter_bitsRequiredWithLong_([uniqueValues size] - 1);
  jint format;
  if (uniqueValues != nil && count <= JavaLangInteger_MAX_VALUE && ([uniqueValues size] == 1 || ([uniqueValues size] == 2 && missingCount > 0 && zeroCount == missingCount))) {
    format = OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_CONST_COMPRESSED;
  }
  else if (uniqueValues != nil && tableBitsRequired < deltaBitsRequired) {
    format = OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_TABLE_COMPRESSED;
  }
  else if (gcd != 0 && gcd != 1) {
    jlong gcdDelta = JreLongDiv((maxValue - minValue), gcd);
    jlong gcdBitsRequired = OrgApacheLuceneUtilPackedDirectWriter_unsignedBitsRequiredWithLong_(gcdDelta);
    format = gcdBitsRequired < deltaBitsRequired ? OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_GCD_COMPRESSED : OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_DELTA_COMPRESSED;
  }
  else {
    format = OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_DELTA_COMPRESSED;
  }
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:((OrgApacheLuceneIndexFieldInfo *) nil_chk(field))->number_];
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeByteWithByte:OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_NUMERIC];
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:format];
  if (missingCount == 0) {
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeLongWithLong:OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_ALL_LIVE];
  }
  else if (missingCount == count) {
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeLongWithLong:OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_ALL_MISSING];
  }
  else {
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeLongWithLong:[((OrgApacheLuceneStoreIndexOutput *) nil_chk(data_)) getFilePointer]];
    [self writeMissingBitsetWithJavaLangIterable:values];
  }
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeLongWithLong:[((OrgApacheLuceneStoreIndexOutput *) nil_chk(data_)) getFilePointer]];
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVLongWithLong:count];
  {
    jlong maxDelta;
    jint bits;
    OrgApacheLuceneUtilPackedDirectWriter *quotientWriter;
    jlong minDelta;
    OrgApacheLuceneUtilPackedDirectWriter *writer;
    IOSObjectArray *decode;
    JavaUtilHashMap *encode;
    OrgApacheLuceneUtilPackedDirectWriter *ordsWriter;
    switch (format) {
      case OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_CONST_COMPRESSED:
      [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeLongWithLong:minValue < 0 ? [((JavaLangLong *) nil_chk(JavaUtilCollections_minWithJavaUtilCollection_(uniqueValues))) longLongValue] : [((JavaLangLong *) nil_chk(JavaUtilCollections_maxWithJavaUtilCollection_(uniqueValues))) longLongValue]];
      break;
      case OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_GCD_COMPRESSED:
      [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeLongWithLong:minValue];
      [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeLongWithLong:gcd];
      maxDelta = JreLongDiv((maxValue - minValue), gcd);
      bits = OrgApacheLuceneUtilPackedDirectWriter_unsignedBitsRequiredWithLong_(maxDelta);
      [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:bits];
      quotientWriter = OrgApacheLuceneUtilPackedDirectWriter_getInstanceWithOrgApacheLuceneStoreIndexOutput_withLong_withInt_(data_, count, bits);
      for (NSNumber * __strong nv in values) {
        jlong value = nv == nil ? 0 : [nv longLongValue];
        [((OrgApacheLuceneUtilPackedDirectWriter *) nil_chk(quotientWriter)) addWithLong:JreLongDiv((value - minValue), gcd)];
      }
      [((OrgApacheLuceneUtilPackedDirectWriter *) nil_chk(quotientWriter)) finish];
      break;
      case OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_DELTA_COMPRESSED:
      minDelta = delta < 0 ? 0 : minValue;
      [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeLongWithLong:minDelta];
      [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:deltaBitsRequired];
      writer = OrgApacheLuceneUtilPackedDirectWriter_getInstanceWithOrgApacheLuceneStoreIndexOutput_withLong_withInt_(data_, count, deltaBitsRequired);
      for (NSNumber * __strong nv in values) {
        jlong v = nv == nil ? 0 : [nv longLongValue];
        [((OrgApacheLuceneUtilPackedDirectWriter *) nil_chk(writer)) addWithLong:v - minDelta];
      }
      [((OrgApacheLuceneUtilPackedDirectWriter *) nil_chk(writer)) finish];
      break;
      case OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_TABLE_COMPRESSED:
      decode = [((JavaUtilHashSet *) nil_chk(uniqueValues)) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[uniqueValues size] type:JavaLangLong_class_()]];
      JavaUtilArrays_sortWithNSObjectArray_(decode);
      encode = create_JavaUtilHashMap_init();
      [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:((IOSObjectArray *) nil_chk(decode))->size_];
      for (jint i = 0; i < decode->size_; i++) {
        [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeLongWithLong:[((JavaLangLong *) nil_chk(IOSObjectArray_Get(decode, i))) longLongValue]];
        [encode putWithId:IOSObjectArray_Get(decode, i) withId:JavaLangInteger_valueOfWithInt_(i)];
      }
      [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:tableBitsRequired];
      ordsWriter = OrgApacheLuceneUtilPackedDirectWriter_getInstanceWithOrgApacheLuceneStoreIndexOutput_withLong_withInt_(data_, count, tableBitsRequired);
      for (NSNumber * __strong nv in values) {
        [((OrgApacheLuceneUtilPackedDirectWriter *) nil_chk(ordsWriter)) addWithLong:[((JavaLangInteger *) nil_chk([encode getWithId:JavaLangLong_valueOfWithLong_(nv == nil ? 0 : [nv longLongValue])])) intValue]];
      }
      [((OrgApacheLuceneUtilPackedDirectWriter *) nil_chk(ordsWriter)) finish];
      break;
      default:
      @throw create_JavaLangAssertionError_init();
    }
  }
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeLongWithLong:[((OrgApacheLuceneStoreIndexOutput *) nil_chk(data_)) getFilePointer]];
}

- (void)writeMissingBitsetWithJavaLangIterable:(id<JavaLangIterable>)values {
  jbyte bits = 0;
  jint count = 0;
  for (id __strong v in nil_chk(values)) {
    if (count == 8) {
      [((OrgApacheLuceneStoreIndexOutput *) nil_chk(data_)) writeByteWithByte:bits];
      count = 0;
      bits = 0;
    }
    if (v != nil) {
      bits |= JreLShift32(1, (count & 7));
    }
    count++;
  }
  if (count > 0) {
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(data_)) writeByteWithByte:bits];
  }
}

- (void)addBinaryFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                   withJavaLangIterable:(id<JavaLangIterable>)values {
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:((OrgApacheLuceneIndexFieldInfo *) nil_chk(field))->number_];
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeByteWithByte:OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_BINARY];
  jint minLength = JavaLangInteger_MAX_VALUE;
  jint maxLength = JavaLangInteger_MIN_VALUE;
  jlong startFP = [((OrgApacheLuceneStoreIndexOutput *) nil_chk(data_)) getFilePointer];
  jlong count = 0;
  jlong missingCount = 0;
  for (OrgApacheLuceneUtilBytesRef * __strong v in nil_chk(values)) {
    jint length;
    if (v == nil) {
      length = 0;
      missingCount++;
    }
    else {
      length = v->length_;
    }
    minLength = JavaLangMath_minWithInt_withInt_(minLength, length);
    maxLength = JavaLangMath_maxWithInt_withInt_(maxLength, length);
    if (v != nil) {
      [((OrgApacheLuceneStoreIndexOutput *) nil_chk(data_)) writeBytesWithByteArray:v->bytes_ withInt:v->offset_ withInt:v->length_];
    }
    count++;
  }
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:minLength == maxLength ? OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_BINARY_FIXED_UNCOMPRESSED : OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_BINARY_VARIABLE_UNCOMPRESSED];
  if (missingCount == 0) {
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeLongWithLong:OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_ALL_LIVE];
  }
  else if (missingCount == count) {
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeLongWithLong:OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_ALL_MISSING];
  }
  else {
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeLongWithLong:[((OrgApacheLuceneStoreIndexOutput *) nil_chk(data_)) getFilePointer]];
    [self writeMissingBitsetWithJavaLangIterable:values];
  }
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:minLength];
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:maxLength];
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVLongWithLong:count];
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeLongWithLong:startFP];
  if (minLength != maxLength) {
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeLongWithLong:[((OrgApacheLuceneStoreIndexOutput *) nil_chk(data_)) getFilePointer]];
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:OrgApacheLuceneUtilPackedPackedInts_VERSION_CURRENT];
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_MONOTONIC_BLOCK_SIZE];
    OrgApacheLuceneUtilPackedMonotonicBlockPackedWriter *writer = create_OrgApacheLuceneUtilPackedMonotonicBlockPackedWriter_initWithOrgApacheLuceneStoreDataOutput_withInt_(data_, OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_MONOTONIC_BLOCK_SIZE);
    jlong addr = 0;
    [writer addWithLong:addr];
    for (OrgApacheLuceneUtilBytesRef * __strong v in values) {
      if (v != nil) {
        addr += v->length_;
      }
      [writer addWithLong:addr];
    }
    [writer finish];
  }
}

- (void)addTermsDictWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                 withJavaLangIterable:(id<JavaLangIterable>)values {
  OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_addTermsDictWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_(self, field, values);
}

- (void)flushTermsDictBlockWithOrgApacheLuceneStoreRAMOutputStream:(OrgApacheLuceneStoreRAMOutputStream *)headerBuffer
                           withOrgApacheLuceneStoreRAMOutputStream:(OrgApacheLuceneStoreRAMOutputStream *)bytesBuffer
                                                      withIntArray:(IOSIntArray *)suffixDeltas {
  OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_flushTermsDictBlockWithOrgApacheLuceneStoreRAMOutputStream_withOrgApacheLuceneStoreRAMOutputStream_withIntArray_(self, headerBuffer, bytesBuffer, suffixDeltas);
}

- (void)addReverseTermIndexWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                        withJavaLangIterable:(id<JavaLangIterable>)values
                                                     withInt:(jint)maxLength {
  OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_addReverseTermIndexWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_withInt_(self, field, values, maxLength);
}

- (void)addSortedFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                   withJavaLangIterable:(id<JavaLangIterable>)values
                                   withJavaLangIterable:(id<JavaLangIterable>)docToOrd {
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:((OrgApacheLuceneIndexFieldInfo *) nil_chk(field))->number_];
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeByteWithByte:OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_SORTED];
  OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_addTermsDictWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_(self, field, values);
  [self addNumericFieldWithOrgApacheLuceneIndexFieldInfo:field withJavaLangIterable:docToOrd withBoolean:false];
}

- (void)addSortedNumericFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                          withJavaLangIterable:(id<JavaLangIterable>)docToValueCount
                                          withJavaLangIterable:(id<JavaLangIterable>)values {
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:((OrgApacheLuceneIndexFieldInfo *) nil_chk(field))->number_];
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeByteWithByte:OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_SORTED_NUMERIC];
  if (OrgApacheLuceneCodecsDocValuesConsumer_isSingleValuedWithJavaLangIterable_(docToValueCount)) {
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_SORTED_SINGLE_VALUED];
    [self addNumericFieldWithOrgApacheLuceneIndexFieldInfo:field withJavaLangIterable:OrgApacheLuceneCodecsDocValuesConsumer_singletonViewWithJavaLangIterable_withJavaLangIterable_withNSNumber_(docToValueCount, values, nil)];
  }
  else {
    id<JavaUtilSortedSet> uniqueValueSets = OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_uniqueValueSetsWithJavaLangIterable_withJavaLangIterable_(self, docToValueCount, values);
    if (uniqueValueSets != nil) {
      [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_SORTED_SET_TABLE];
      OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_writeDictionaryWithJavaUtilSortedSet_(self, uniqueValueSets);
      [self addNumericFieldWithOrgApacheLuceneIndexFieldInfo:field withJavaLangIterable:OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_docToSetIdWithJavaUtilSortedSet_withJavaLangIterable_withJavaLangIterable_(self, uniqueValueSets, docToValueCount, values) withBoolean:false];
    }
    else {
      [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_SORTED_WITH_ADDRESSES];
      [self addNumericFieldWithOrgApacheLuceneIndexFieldInfo:field withJavaLangIterable:values withBoolean:true];
      OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_addAddressesWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_(self, field, docToValueCount);
    }
  }
}

- (void)addSortedSetFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                      withJavaLangIterable:(id<JavaLangIterable>)values
                                      withJavaLangIterable:(id<JavaLangIterable>)docToOrdCount
                                      withJavaLangIterable:(id<JavaLangIterable>)ords {
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:((OrgApacheLuceneIndexFieldInfo *) nil_chk(field))->number_];
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeByteWithByte:OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_SORTED_SET];
  if (OrgApacheLuceneCodecsDocValuesConsumer_isSingleValuedWithJavaLangIterable_(docToOrdCount)) {
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_SORTED_SINGLE_VALUED];
    [self addSortedFieldWithOrgApacheLuceneIndexFieldInfo:field withJavaLangIterable:values withJavaLangIterable:OrgApacheLuceneCodecsDocValuesConsumer_singletonViewWithJavaLangIterable_withJavaLangIterable_withNSNumber_(docToOrdCount, ords, JavaLangLong_valueOfWithLong_(-1LL))];
  }
  else {
    id<JavaUtilSortedSet> uniqueValueSets = OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_uniqueValueSetsWithJavaLangIterable_withJavaLangIterable_(self, docToOrdCount, ords);
    if (uniqueValueSets != nil) {
      [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_SORTED_SET_TABLE];
      OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_writeDictionaryWithJavaUtilSortedSet_(self, uniqueValueSets);
      OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_addTermsDictWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_(self, field, values);
      [self addNumericFieldWithOrgApacheLuceneIndexFieldInfo:field withJavaLangIterable:OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_docToSetIdWithJavaUtilSortedSet_withJavaLangIterable_withJavaLangIterable_(self, uniqueValueSets, docToOrdCount, ords) withBoolean:false];
    }
    else {
      [((OrgApacheLuceneStoreIndexOutput *) nil_chk(meta_)) writeVIntWithInt:OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_SORTED_WITH_ADDRESSES];
      OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_addTermsDictWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_(self, field, values);
      [self addNumericFieldWithOrgApacheLuceneIndexFieldInfo:field withJavaLangIterable:ords withBoolean:false];
      OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_addAddressesWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_(self, field, docToOrdCount);
    }
  }
}

- (id<JavaUtilSortedSet>)uniqueValueSetsWithJavaLangIterable:(id<JavaLangIterable>)docToValueCount
                                        withJavaLangIterable:(id<JavaLangIterable>)values {
  return OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_uniqueValueSetsWithJavaLangIterable_withJavaLangIterable_(self, docToValueCount, values);
}

- (void)writeDictionaryWithJavaUtilSortedSet:(id<JavaUtilSortedSet>)uniqueValueSets {
  OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_writeDictionaryWithJavaUtilSortedSet_(self, uniqueValueSets);
}

- (id<JavaLangIterable>)docToSetIdWithJavaUtilSortedSet:(id<JavaUtilSortedSet>)uniqueValueSets
                                   withJavaLangIterable:(id<JavaLangIterable>)docToValueCount
                                   withJavaLangIterable:(id<JavaLangIterable>)values {
  return OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_docToSetIdWithJavaUtilSortedSet_withJavaLangIterable_withJavaLangIterable_(self, uniqueValueSets, docToValueCount, values);
}

- (void)addAddressesWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field
                                 withJavaLangIterable:(id<JavaLangIterable>)values {
  OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_addAddressesWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_(self, field, values);
}

- (void)close {
  jboolean success = false;
  @try {
    if (meta_ != nil) {
      [meta_ writeVIntWithInt:-1];
      OrgApacheLuceneCodecsCodecUtil_writeFooterWithOrgApacheLuceneStoreIndexOutput_(meta_);
    }
    if (data_ != nil) {
      OrgApacheLuceneCodecsCodecUtil_writeFooterWithOrgApacheLuceneStoreIndexOutput_(data_);
    }
    success = true;
  }
  @finally {
    if (success) {
      OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ data_, meta_ } count:2 type:JavaIoCloseable_class_()]);
    }
    else {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ data_, meta_ } count:2 type:JavaIoCloseable_class_()]);
    }
    JreStrongAssign(&meta_, JreStrongAssign(&data_, nil));
  }
}

- (void)dealloc {
  RELEASE_(data_);
  RELEASE_(meta_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 1, 4, -1, -1 },
    { NULL, "V", 0x0, 2, 5, 1, 6, -1, -1 },
    { NULL, "V", 0x0, 7, 8, 1, 9, -1, -1 },
    { NULL, "V", 0x1, 10, 3, 1, 11, -1, -1 },
    { NULL, "V", 0x2, 12, 3, 1, 11, -1, -1 },
    { NULL, "V", 0x2, 13, 14, 1, -1, -1, -1 },
    { NULL, "V", 0x2, 15, 16, 1, 17, -1, -1 },
    { NULL, "V", 0x1, 18, 19, 1, 20, -1, -1 },
    { NULL, "V", 0x1, 21, 19, 1, 22, -1, -1 },
    { NULL, "V", 0x1, 23, 24, 1, 25, -1, -1 },
    { NULL, "LJavaUtilSortedSet;", 0x2, 26, 27, -1, 28, -1, -1 },
    { NULL, "V", 0x2, 29, 30, 1, 31, -1, -1 },
    { NULL, "LJavaLangIterable;", 0x2, 32, 33, -1, 34, -1, -1 },
    { NULL, "V", 0x2, 35, 3, 1, 4, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgApacheLuceneIndexSegmentWriteState:withNSString:withNSString:withNSString:withNSString:);
  methods[1].selector = @selector(addNumericFieldWithOrgApacheLuceneIndexFieldInfo:withJavaLangIterable:);
  methods[2].selector = @selector(addNumericFieldWithOrgApacheLuceneIndexFieldInfo:withJavaLangIterable:withBoolean:);
  methods[3].selector = @selector(writeMissingBitsetWithJavaLangIterable:);
  methods[4].selector = @selector(addBinaryFieldWithOrgApacheLuceneIndexFieldInfo:withJavaLangIterable:);
  methods[5].selector = @selector(addTermsDictWithOrgApacheLuceneIndexFieldInfo:withJavaLangIterable:);
  methods[6].selector = @selector(flushTermsDictBlockWithOrgApacheLuceneStoreRAMOutputStream:withOrgApacheLuceneStoreRAMOutputStream:withIntArray:);
  methods[7].selector = @selector(addReverseTermIndexWithOrgApacheLuceneIndexFieldInfo:withJavaLangIterable:withInt:);
  methods[8].selector = @selector(addSortedFieldWithOrgApacheLuceneIndexFieldInfo:withJavaLangIterable:withJavaLangIterable:);
  methods[9].selector = @selector(addSortedNumericFieldWithOrgApacheLuceneIndexFieldInfo:withJavaLangIterable:withJavaLangIterable:);
  methods[10].selector = @selector(addSortedSetFieldWithOrgApacheLuceneIndexFieldInfo:withJavaLangIterable:withJavaLangIterable:withJavaLangIterable:);
  methods[11].selector = @selector(uniqueValueSetsWithJavaLangIterable:withJavaLangIterable:);
  methods[12].selector = @selector(writeDictionaryWithJavaUtilSortedSet:);
  methods[13].selector = @selector(docToSetIdWithJavaUtilSortedSet:withJavaLangIterable:withJavaLangIterable:);
  methods[14].selector = @selector(addAddressesWithOrgApacheLuceneIndexFieldInfo:withJavaLangIterable:);
  methods[15].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "data_", "LOrgApacheLuceneStoreIndexOutput;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "meta_", "LOrgApacheLuceneStoreIndexOutput;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "maxDoc_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexSegmentWriteState;LNSString;LNSString;LNSString;LNSString;", "LJavaIoIOException;", "addNumericField", "LOrgApacheLuceneIndexFieldInfo;LJavaLangIterable;", "(Lorg/apache/lucene/index/FieldInfo;Ljava/lang/Iterable<Ljava/lang/Number;>;)V", "LOrgApacheLuceneIndexFieldInfo;LJavaLangIterable;Z", "(Lorg/apache/lucene/index/FieldInfo;Ljava/lang/Iterable<Ljava/lang/Number;>;Z)V", "writeMissingBitset", "LJavaLangIterable;", "(Ljava/lang/Iterable<*>;)V", "addBinaryField", "(Lorg/apache/lucene/index/FieldInfo;Ljava/lang/Iterable<Lorg/apache/lucene/util/BytesRef;>;)V", "addTermsDict", "flushTermsDictBlock", "LOrgApacheLuceneStoreRAMOutputStream;LOrgApacheLuceneStoreRAMOutputStream;[I", "addReverseTermIndex", "LOrgApacheLuceneIndexFieldInfo;LJavaLangIterable;I", "(Lorg/apache/lucene/index/FieldInfo;Ljava/lang/Iterable<Lorg/apache/lucene/util/BytesRef;>;I)V", "addSortedField", "LOrgApacheLuceneIndexFieldInfo;LJavaLangIterable;LJavaLangIterable;", "(Lorg/apache/lucene/index/FieldInfo;Ljava/lang/Iterable<Lorg/apache/lucene/util/BytesRef;>;Ljava/lang/Iterable<Ljava/lang/Number;>;)V", "addSortedNumericField", "(Lorg/apache/lucene/index/FieldInfo;Ljava/lang/Iterable<Ljava/lang/Number;>;Ljava/lang/Iterable<Ljava/lang/Number;>;)V", "addSortedSetField", "LOrgApacheLuceneIndexFieldInfo;LJavaLangIterable;LJavaLangIterable;LJavaLangIterable;", "(Lorg/apache/lucene/index/FieldInfo;Ljava/lang/Iterable<Lorg/apache/lucene/util/BytesRef;>;Ljava/lang/Iterable<Ljava/lang/Number;>;Ljava/lang/Iterable<Ljava/lang/Number;>;)V", "uniqueValueSets", "LJavaLangIterable;LJavaLangIterable;", "(Ljava/lang/Iterable<Ljava/lang/Number;>;Ljava/lang/Iterable<Ljava/lang/Number;>;)Ljava/util/SortedSet<Lorg/apache/lucene/util/LongsRef;>;", "writeDictionary", "LJavaUtilSortedSet;", "(Ljava/util/SortedSet<Lorg/apache/lucene/util/LongsRef;>;)V", "docToSetId", "LJavaUtilSortedSet;LJavaLangIterable;LJavaLangIterable;", "(Ljava/util/SortedSet<Lorg/apache/lucene/util/LongsRef;>;Ljava/lang/Iterable<Ljava/lang/Number;>;Ljava/lang/Iterable<Ljava/lang/Number;>;)Ljava/lang/Iterable<Ljava/lang/Number;>;", "addAddresses" };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer = { "Lucene50DocValuesConsumer", "org.apache.lucene.codecs.lucene50", ptrTable, methods, fields, 7, 0x0, 16, 3, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer;
}

@end

void OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_initPackagePrivateWithOrgApacheLuceneIndexSegmentWriteState_withNSString_withNSString_withNSString_withNSString_(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer *self, OrgApacheLuceneIndexSegmentWriteState *state, NSString *dataCodec, NSString *dataExtension, NSString *metaCodec, NSString *metaExtension) {
  OrgApacheLuceneCodecsDocValuesConsumer_init(self);
  jboolean success = false;
  @try {
    NSString *dataName = OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentWriteState *) nil_chk(state))->segmentInfo_))->name_, state->segmentSuffix_, dataExtension);
    JreStrongAssign(&self->data_, [((OrgApacheLuceneStoreDirectory *) nil_chk(state->directory_)) createOutputWithNSString:dataName withOrgApacheLuceneStoreIOContext:state->context_]);
    OrgApacheLuceneCodecsCodecUtil_writeIndexHeaderWithOrgApacheLuceneStoreDataOutput_withNSString_withInt_withByteArray_withNSString_(self->data_, dataCodec, OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_VERSION_CURRENT, [state->segmentInfo_ getId], state->segmentSuffix_);
    NSString *metaName = OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(state->segmentInfo_->name_, state->segmentSuffix_, metaExtension);
    JreStrongAssign(&self->meta_, [state->directory_ createOutputWithNSString:metaName withOrgApacheLuceneStoreIOContext:state->context_]);
    OrgApacheLuceneCodecsCodecUtil_writeIndexHeaderWithOrgApacheLuceneStoreDataOutput_withNSString_withInt_withByteArray_withNSString_(self->meta_, metaCodec, OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_VERSION_CURRENT, [state->segmentInfo_ getId], state->segmentSuffix_);
    self->maxDoc_ = [state->segmentInfo_ maxDoc];
    success = true;
  }
  @finally {
    if (!success) {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ self } count:1 type:JavaIoCloseable_class_()]);
    }
  }
}

OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer *new_OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_initPackagePrivateWithOrgApacheLuceneIndexSegmentWriteState_withNSString_withNSString_withNSString_withNSString_(OrgApacheLuceneIndexSegmentWriteState *state, NSString *dataCodec, NSString *dataExtension, NSString *metaCodec, NSString *metaExtension) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer, initPackagePrivateWithOrgApacheLuceneIndexSegmentWriteState_withNSString_withNSString_withNSString_withNSString_, state, dataCodec, dataExtension, metaCodec, metaExtension)
}

OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer *create_OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_initPackagePrivateWithOrgApacheLuceneIndexSegmentWriteState_withNSString_withNSString_withNSString_withNSString_(OrgApacheLuceneIndexSegmentWriteState *state, NSString *dataCodec, NSString *dataExtension, NSString *metaCodec, NSString *metaExtension) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer, initPackagePrivateWithOrgApacheLuceneIndexSegmentWriteState_withNSString_withNSString_withNSString_withNSString_, state, dataCodec, dataExtension, metaCodec, metaExtension)
}

void OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_addTermsDictWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer *self, OrgApacheLuceneIndexFieldInfo *field, id<JavaLangIterable> values) {
  jint minLength = JavaLangInteger_MAX_VALUE;
  jint maxLength = JavaLangInteger_MIN_VALUE;
  jlong numValues = 0;
  for (OrgApacheLuceneUtilBytesRef * __strong v in nil_chk(values)) {
    minLength = JavaLangMath_minWithInt_withInt_(minLength, ((OrgApacheLuceneUtilBytesRef *) nil_chk(v))->length_);
    maxLength = JavaLangMath_maxWithInt_withInt_(maxLength, v->length_);
    numValues++;
  }
  if (minLength == maxLength) {
    [self addBinaryFieldWithOrgApacheLuceneIndexFieldInfo:field withJavaLangIterable:values];
  }
  else if (numValues < OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_REVERSE_INTERVAL_COUNT) {
    [self addBinaryFieldWithOrgApacheLuceneIndexFieldInfo:field withJavaLangIterable:values];
  }
  else {
    JreAssert(numValues > 0, @"org/apache/lucene/codecs/lucene50/Lucene50DocValuesConsumer.java:326 condition failed: assert numValues > 0;");
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeVIntWithInt:((OrgApacheLuceneIndexFieldInfo *) nil_chk(field))->number_];
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeByteWithByte:OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_BINARY];
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeVIntWithInt:OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_BINARY_PREFIX_COMPRESSED];
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeLongWithLong:-1LL];
    jlong startFP = [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->data_)) getFilePointer];
    OrgApacheLuceneStoreRAMOutputStream *addressBuffer = create_OrgApacheLuceneStoreRAMOutputStream_init();
    OrgApacheLuceneUtilPackedMonotonicBlockPackedWriter *termAddresses = create_OrgApacheLuceneUtilPackedMonotonicBlockPackedWriter_initWithOrgApacheLuceneStoreDataOutput_withInt_(addressBuffer, OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_MONOTONIC_BLOCK_SIZE);
    OrgApacheLuceneStoreRAMOutputStream *bytesBuffer = create_OrgApacheLuceneStoreRAMOutputStream_init();
    OrgApacheLuceneStoreRAMOutputStream *headerBuffer = create_OrgApacheLuceneStoreRAMOutputStream_init();
    OrgApacheLuceneUtilBytesRefBuilder *lastTerm = create_OrgApacheLuceneUtilBytesRefBuilder_init();
    [lastTerm growWithInt:maxLength];
    jlong count = 0;
    IOSIntArray *suffixDeltas = [IOSIntArray arrayWithLength:OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_INTERVAL_COUNT];
    for (OrgApacheLuceneUtilBytesRef * __strong v in values) {
      jint termPosition = (jint) (count & OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_INTERVAL_MASK);
      if (termPosition == 0) {
        [termAddresses addWithLong:[((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->data_)) getFilePointer] - startFP];
        [headerBuffer writeVIntWithInt:((OrgApacheLuceneUtilBytesRef *) nil_chk(v))->length_];
        [headerBuffer writeBytesWithByteArray:v->bytes_ withInt:v->offset_ withInt:v->length_];
        [lastTerm copyBytesWithOrgApacheLuceneUtilBytesRef:v];
      }
      else {
        jint sharedPrefix = JavaLangMath_minWithInt_withInt_(255, OrgApacheLuceneUtilStringHelper_bytesDifferenceWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([lastTerm get], v));
        [bytesBuffer writeByteWithByte:(jbyte) sharedPrefix];
        [bytesBuffer writeBytesWithByteArray:((OrgApacheLuceneUtilBytesRef *) nil_chk(v))->bytes_ withInt:v->offset_ + sharedPrefix withInt:v->length_ - sharedPrefix];
        *IOSIntArray_GetRef(suffixDeltas, termPosition) = v->length_ - sharedPrefix - 1;
      }
      count++;
      if ((count & OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_INTERVAL_MASK) == 0) {
        OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_flushTermsDictBlockWithOrgApacheLuceneStoreRAMOutputStream_withOrgApacheLuceneStoreRAMOutputStream_withIntArray_(self, headerBuffer, bytesBuffer, suffixDeltas);
      }
    }
    jint leftover = (jint) (count & OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_INTERVAL_MASK);
    if (leftover > 0) {
      JavaUtilArrays_fillWithIntArray_withInt_withInt_withInt_(suffixDeltas, leftover, suffixDeltas->size_, 0);
      OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_flushTermsDictBlockWithOrgApacheLuceneStoreRAMOutputStream_withOrgApacheLuceneStoreRAMOutputStream_withIntArray_(self, headerBuffer, bytesBuffer, suffixDeltas);
    }
    jlong indexStartFP = [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->data_)) getFilePointer];
    [termAddresses finish];
    [addressBuffer writeToWithOrgApacheLuceneStoreDataOutput:self->data_];
    addressBuffer = nil;
    termAddresses = nil;
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeVIntWithInt:minLength];
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeVIntWithInt:maxLength];
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeVLongWithLong:count];
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeLongWithLong:startFP];
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeLongWithLong:indexStartFP];
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeVIntWithInt:OrgApacheLuceneUtilPackedPackedInts_VERSION_CURRENT];
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeVIntWithInt:OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_MONOTONIC_BLOCK_SIZE];
    OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_addReverseTermIndexWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_withInt_(self, field, values, maxLength);
  }
}

void OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_flushTermsDictBlockWithOrgApacheLuceneStoreRAMOutputStream_withOrgApacheLuceneStoreRAMOutputStream_withIntArray_(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer *self, OrgApacheLuceneStoreRAMOutputStream *headerBuffer, OrgApacheLuceneStoreRAMOutputStream *bytesBuffer, IOSIntArray *suffixDeltas) {
  jboolean twoByte = false;
  for (jint i = 1; i < ((IOSIntArray *) nil_chk(suffixDeltas))->size_; i++) {
    if (IOSIntArray_Get(suffixDeltas, i) > 254) {
      twoByte = true;
    }
  }
  if (twoByte) {
    [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(headerBuffer)) writeByteWithByte:(jbyte) 255];
    for (jint i = 1; i < suffixDeltas->size_; i++) {
      [headerBuffer writeShortWithShort:(jshort) IOSIntArray_Get(suffixDeltas, i)];
    }
  }
  else {
    for (jint i = 1; i < suffixDeltas->size_; i++) {
      [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(headerBuffer)) writeByteWithByte:(jbyte) IOSIntArray_Get(suffixDeltas, i)];
    }
  }
  [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(headerBuffer)) writeToWithOrgApacheLuceneStoreDataOutput:self->data_];
  [headerBuffer reset];
  [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(bytesBuffer)) writeToWithOrgApacheLuceneStoreDataOutput:self->data_];
  [bytesBuffer reset];
}

void OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_addReverseTermIndexWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_withInt_(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer *self, OrgApacheLuceneIndexFieldInfo *field, id<JavaLangIterable> values, jint maxLength) {
  jlong count = 0;
  OrgApacheLuceneUtilBytesRefBuilder *priorTerm = create_OrgApacheLuceneUtilBytesRefBuilder_init();
  [priorTerm growWithInt:maxLength];
  OrgApacheLuceneUtilBytesRef *indexTerm = create_OrgApacheLuceneUtilBytesRef_init();
  jlong startFP = [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->data_)) getFilePointer];
  OrgApacheLuceneUtilPagedBytes *pagedBytes = create_OrgApacheLuceneUtilPagedBytes_initWithInt_(15);
  OrgApacheLuceneUtilPackedMonotonicBlockPackedWriter *addresses = create_OrgApacheLuceneUtilPackedMonotonicBlockPackedWriter_initWithOrgApacheLuceneStoreDataOutput_withInt_(self->data_, OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_MONOTONIC_BLOCK_SIZE);
  for (OrgApacheLuceneUtilBytesRef * __strong b in nil_chk(values)) {
    jint termPosition = (jint) (count & OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_REVERSE_INTERVAL_MASK);
    if (termPosition == 0) {
      jint len = OrgApacheLuceneUtilStringHelper_sortKeyLengthWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_([priorTerm get], b);
      JreStrongAssign(&indexTerm->bytes_, ((OrgApacheLuceneUtilBytesRef *) nil_chk(b))->bytes_);
      indexTerm->offset_ = b->offset_;
      indexTerm->length_ = len;
      [addresses addWithLong:[pagedBytes copyUsingLengthPrefixWithOrgApacheLuceneUtilBytesRef:indexTerm]];
    }
    else if (termPosition == OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_REVERSE_INTERVAL_MASK) {
      [priorTerm copyBytesWithOrgApacheLuceneUtilBytesRef:b];
    }
    count++;
  }
  [addresses finish];
  jlong numBytes = [pagedBytes getPointer];
  [pagedBytes freezeWithBoolean:true];
  OrgApacheLuceneUtilPagedBytes_PagedBytesDataInput *in = JreRetainedLocalValue([pagedBytes getDataInput]);
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeLongWithLong:startFP];
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->data_)) writeVLongWithLong:numBytes];
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->data_)) copyBytesWithOrgApacheLuceneStoreDataInput:in withLong:numBytes];
}

id<JavaUtilSortedSet> OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_uniqueValueSetsWithJavaLangIterable_withJavaLangIterable_(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer *self, id<JavaLangIterable> docToValueCount, id<JavaLangIterable> values) {
  id<JavaUtilSet> uniqueValueSet = create_JavaUtilHashSet_init();
  OrgApacheLuceneUtilLongsRef *docValues = create_OrgApacheLuceneUtilLongsRef_initWithInt_(256);
  id<JavaUtilIterator> valueCountIterator = JreRetainedLocalValue([((id<JavaLangIterable>) nil_chk(docToValueCount)) iterator]);
  id<JavaUtilIterator> valueIterator = JreRetainedLocalValue([((id<JavaLangIterable>) nil_chk(values)) iterator]);
  jint totalDictSize = 0;
  while ([((id<JavaUtilIterator>) nil_chk(valueCountIterator)) hasNext]) {
    docValues->length_ = [((NSNumber *) nil_chk([valueCountIterator next])) intValue];
    if (docValues->length_ > 256) {
      return nil;
    }
    for (jint i = 0; i < docValues->length_; ++i) {
      *IOSLongArray_GetRef(nil_chk(docValues->longs_), i) = [((NSNumber *) nil_chk([((id<JavaUtilIterator>) nil_chk(valueIterator)) next])) longLongValue];
    }
    if ([uniqueValueSet containsWithId:docValues]) {
      continue;
    }
    totalDictSize += docValues->length_;
    if (totalDictSize > 256) {
      return nil;
    }
    [uniqueValueSet addWithId:create_OrgApacheLuceneUtilLongsRef_initWithLongArray_withInt_withInt_(JavaUtilArrays_copyOfWithLongArray_withInt_(docValues->longs_, docValues->length_), 0, docValues->length_)];
  }
  JreAssert([((id<JavaUtilIterator>) nil_chk(valueIterator)) hasNext] == false, @"org/apache/lucene/codecs/lucene50/Lucene50DocValuesConsumer.java:553 condition failed: assert valueIterator.hasNext() == false;");
  return create_JavaUtilTreeSet_initWithJavaUtilCollection_(uniqueValueSet);
}

void OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_writeDictionaryWithJavaUtilSortedSet_(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer *self, id<JavaUtilSortedSet> uniqueValueSets) {
  jint lengthSum = 0;
  for (OrgApacheLuceneUtilLongsRef * __strong longs in nil_chk(uniqueValueSets)) {
    lengthSum += ((OrgApacheLuceneUtilLongsRef *) nil_chk(longs))->length_;
  }
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeIntWithInt:lengthSum];
  for (OrgApacheLuceneUtilLongsRef * __strong valueSet in uniqueValueSets) {
    for (jint i = 0; i < ((OrgApacheLuceneUtilLongsRef *) nil_chk(valueSet))->length_; ++i) {
      [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeLongWithLong:IOSLongArray_Get(nil_chk(valueSet->longs_), valueSet->offset_ + i)];
    }
  }
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeIntWithInt:[uniqueValueSets size]];
  for (OrgApacheLuceneUtilLongsRef * __strong valueSet in uniqueValueSets) {
    [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeIntWithInt:((OrgApacheLuceneUtilLongsRef *) nil_chk(valueSet))->length_];
  }
}

id<JavaLangIterable> OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_docToSetIdWithJavaUtilSortedSet_withJavaLangIterable_withJavaLangIterable_(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer *self, id<JavaUtilSortedSet> uniqueValueSets, id<JavaLangIterable> docToValueCount, id<JavaLangIterable> values) {
  id<JavaUtilMap> setIds = create_JavaUtilHashMap_init();
  jint i = 0;
  for (OrgApacheLuceneUtilLongsRef * __strong set in nil_chk(uniqueValueSets)) {
    [setIds putWithId:set withId:JavaLangInteger_valueOfWithInt_(i++)];
  }
  JreAssert(i == [uniqueValueSets size], @"org/apache/lucene/codecs/lucene50/Lucene50DocValuesConsumer.java:582 condition failed: assert i == uniqueValueSets.size();");
  return create_OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_initWithJavaLangIterable_withJavaLangIterable_withJavaUtilMap_(docToValueCount, values, setIds);
}

void OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_addAddressesWithOrgApacheLuceneIndexFieldInfo_withJavaLangIterable_(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer *self, OrgApacheLuceneIndexFieldInfo *field, id<JavaLangIterable> values) {
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeVIntWithInt:((OrgApacheLuceneIndexFieldInfo *) nil_chk(field))->number_];
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeByteWithByte:OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_NUMERIC];
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeVIntWithInt:OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_MONOTONIC_COMPRESSED];
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeLongWithLong:-1LL];
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeLongWithLong:[((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->data_)) getFilePointer]];
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeVLongWithLong:self->maxDoc_];
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeVIntWithInt:OrgApacheLuceneUtilPackedPackedInts_VERSION_CURRENT];
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeVIntWithInt:OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_MONOTONIC_BLOCK_SIZE];
  OrgApacheLuceneUtilPackedMonotonicBlockPackedWriter *writer = create_OrgApacheLuceneUtilPackedMonotonicBlockPackedWriter_initWithOrgApacheLuceneStoreDataOutput_withInt_(self->data_, OrgApacheLuceneCodecsLucene50Lucene50DocValuesFormat_MONOTONIC_BLOCK_SIZE);
  jlong addr = 0;
  [writer addWithLong:addr];
  for (NSNumber * __strong v in nil_chk(values)) {
    addr += [((NSNumber *) nil_chk(v)) longLongValue];
    [writer addWithLong:addr];
  }
  [writer finish];
  [((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->meta_)) writeLongWithLong:[((OrgApacheLuceneStoreIndexOutput *) nil_chk(self->data_)) getFilePointer]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer)

@implementation OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1

- (instancetype)initWithJavaLangIterable:(id<JavaLangIterable>)capture$0
                    withJavaLangIterable:(id<JavaLangIterable>)capture$1
                         withJavaUtilMap:(id<JavaUtilMap>)capture$2 {
  OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_initWithJavaLangIterable_withJavaLangIterable_withJavaUtilMap_(self, capture$0, capture$1, capture$2);
  return self;
}

- (id<JavaUtilIterator>)iterator {
  id<JavaUtilIterator> valueCountIterator = [((id<JavaLangIterable>) nil_chk(val$docToValueCount_)) iterator];
  id<JavaUtilIterator> valueIterator = [((id<JavaLangIterable>) nil_chk(val$values_)) iterator];
  OrgApacheLuceneUtilLongsRef *docValues = create_OrgApacheLuceneUtilLongsRef_initWithInt_(256);
  return create_OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_1_initWithOrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_withJavaUtilIterator_withOrgApacheLuceneUtilLongsRef_withJavaUtilIterator_(self, valueCountIterator, docValues, valueIterator);
}

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

- (void)dealloc {
  RELEASE_(val$docToValueCount_);
  RELEASE_(val$values_);
  RELEASE_(val$setIds_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaLangIterable:withJavaLangIterable:withJavaUtilMap:);
  methods[1].selector = @selector(iterator);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$docToValueCount_", "LJavaLangIterable;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
    { "val$values_", "LJavaLangIterable;", .constantValue.asLong = 0, 0x1012, -1, -1, 2, -1 },
    { "val$setIds_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1012, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangIterable;LJavaLangIterable;LJavaUtilMap;", "()Ljava/util/Iterator<Ljava/lang/Number;>;", "Ljava/lang/Iterable<Ljava/lang/Number;>;", "Ljava/util/Map<Lorg/apache/lucene/util/LongsRef;Ljava/lang/Integer;>;", "LOrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer;", "docToSetIdWithJavaUtilSortedSet:withJavaLangIterable:withJavaLangIterable:", "Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1 = { "", "org.apache.lucene.codecs.lucene50", ptrTable, methods, fields, 7, 0x8010, 2, 3, 4, -1, 5, 6, -1 };
  return &_OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1;
}

@end

void OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_initWithJavaLangIterable_withJavaLangIterable_withJavaUtilMap_(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1 *self, id<JavaLangIterable> capture$0, id<JavaLangIterable> capture$1, id<JavaUtilMap> capture$2) {
  JreStrongAssign(&self->val$docToValueCount_, capture$0);
  JreStrongAssign(&self->val$values_, capture$1);
  JreStrongAssign(&self->val$setIds_, capture$2);
  NSObject_init(self);
}

OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1 *new_OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_initWithJavaLangIterable_withJavaLangIterable_withJavaUtilMap_(id<JavaLangIterable> capture$0, id<JavaLangIterable> capture$1, id<JavaUtilMap> capture$2) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1, initWithJavaLangIterable_withJavaLangIterable_withJavaUtilMap_, capture$0, capture$1, capture$2)
}

OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1 *create_OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_initWithJavaLangIterable_withJavaLangIterable_withJavaUtilMap_(id<JavaLangIterable> capture$0, id<JavaLangIterable> capture$1, id<JavaUtilMap> capture$2) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1, initWithJavaLangIterable_withJavaLangIterable_withJavaUtilMap_, capture$0, capture$1, capture$2)
}

@implementation OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_1

- (instancetype)initWithOrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1:(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1 *)outer$
                                                            withJavaUtilIterator:(id<JavaUtilIterator>)capture$0
                                                 withOrgApacheLuceneUtilLongsRef:(OrgApacheLuceneUtilLongsRef *)capture$1
                                                            withJavaUtilIterator:(id<JavaUtilIterator>)capture$2 {
  OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_1_initWithOrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_withJavaUtilIterator_withOrgApacheLuceneUtilLongsRef_withJavaUtilIterator_(self, outer$, capture$0, capture$1, capture$2);
  return self;
}

- (jboolean)hasNext {
  return [((id<JavaUtilIterator>) nil_chk(val$valueCountIterator_)) hasNext];
}

- (NSNumber *)next {
  ((OrgApacheLuceneUtilLongsRef *) nil_chk(val$docValues_))->length_ = [((NSNumber *) nil_chk([((id<JavaUtilIterator>) nil_chk(val$valueCountIterator_)) next])) intValue];
  for (jint i = 0; i < val$docValues_->length_; ++i) {
    *IOSLongArray_GetRef(nil_chk(val$docValues_->longs_), i) = [((NSNumber *) nil_chk([((id<JavaUtilIterator>) nil_chk(val$valueIterator_)) next])) longLongValue];
  }
  JavaLangInteger *id_ = [((id<JavaUtilMap>) nil_chk(this$0_->val$setIds_)) getWithId:val$docValues_];
  JreAssert(id_ != nil, @"org/apache/lucene/codecs/lucene50/Lucene50DocValuesConsumer.java:605 condition failed: assert id != null;");
  return JreRetainedLocalValue(id_);
}

- (void)remove {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$valueCountIterator_);
  RELEASE_(val$docValues_);
  RELEASE_(val$valueIterator_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1:withJavaUtilIterator:withOrgApacheLuceneUtilLongsRef:withJavaUtilIterator:);
  methods[1].selector = @selector(hasNext);
  methods[2].selector = @selector(next);
  methods[3].selector = @selector(remove);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$valueCountIterator_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
    { "val$docValues_", "LOrgApacheLuceneUtilLongsRef;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$valueIterator_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1;LJavaUtilIterator;LOrgApacheLuceneUtilLongsRef;LJavaUtilIterator;", "Ljava/util/Iterator<Ljava/lang/Number;>;", "LOrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1;", "iterator", "Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_1 = { "", "org.apache.lucene.codecs.lucene50", ptrTable, methods, fields, 7, 0x8010, 4, 4, 2, -1, 3, 4, -1 };
  return &_OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_1;
}

@end

void OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_1_initWithOrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_withJavaUtilIterator_withOrgApacheLuceneUtilLongsRef_withJavaUtilIterator_(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_1 *self, OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1 *outer$, id<JavaUtilIterator> capture$0, OrgApacheLuceneUtilLongsRef *capture$1, id<JavaUtilIterator> capture$2) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$valueCountIterator_, capture$0);
  JreStrongAssign(&self->val$docValues_, capture$1);
  JreStrongAssign(&self->val$valueIterator_, capture$2);
  NSObject_init(self);
}

OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_1 *new_OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_1_initWithOrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_withJavaUtilIterator_withOrgApacheLuceneUtilLongsRef_withJavaUtilIterator_(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1 *outer$, id<JavaUtilIterator> capture$0, OrgApacheLuceneUtilLongsRef *capture$1, id<JavaUtilIterator> capture$2) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_1, initWithOrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_withJavaUtilIterator_withOrgApacheLuceneUtilLongsRef_withJavaUtilIterator_, outer$, capture$0, capture$1, capture$2)
}

OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_1 *create_OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_1_initWithOrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_withJavaUtilIterator_withOrgApacheLuceneUtilLongsRef_withJavaUtilIterator_(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1 *outer$, id<JavaUtilIterator> capture$0, OrgApacheLuceneUtilLongsRef *capture$1, id<JavaUtilIterator> capture$2) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_1, initWithOrgApacheLuceneCodecsLucene50Lucene50DocValuesConsumer_1_withJavaUtilIterator_withOrgApacheLuceneUtilLongsRef_withJavaUtilIterator_, outer$, capture$0, capture$1, capture$2)
}
