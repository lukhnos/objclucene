//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/codecs/PushPostingsWriterBase.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/codecs/BlockTermState.h"
#include "org/apache/lucene/codecs/PostingsWriterBase.h"
#include "org/apache/lucene/codecs/PushPostingsWriterBase.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/IndexOptions.h"
#include "org/apache/lucene/index/PostingsEnum.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/FixedBitSet.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/codecs/PushPostingsWriterBase must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneCodecsPushPostingsWriterBase () {
 @public
  OrgApacheLuceneIndexPostingsEnum *postingsEnum_;
  jint enumFlags_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsPushPostingsWriterBase, postingsEnum_, OrgApacheLuceneIndexPostingsEnum *)

@implementation OrgApacheLuceneCodecsPushPostingsWriterBase

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneCodecsPushPostingsWriterBase_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgApacheLuceneCodecsBlockTermState *)newTermState {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)startTerm {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)finishTermWithOrgApacheLuceneCodecsBlockTermState:(OrgApacheLuceneCodecsBlockTermState *)state {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jint)setFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo {
  JreStrongAssign(&self->fieldInfo_, fieldInfo);
  JreStrongAssign(&indexOptions_, [((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo)) getIndexOptions]);
  writeFreqs_ = ([((OrgApacheLuceneIndexIndexOptions *) nil_chk(indexOptions_)) compareToWithId:JreLoadEnum(OrgApacheLuceneIndexIndexOptions, DOCS_AND_FREQS)] >= 0);
  writePositions_ = ([((OrgApacheLuceneIndexIndexOptions *) nil_chk(indexOptions_)) compareToWithId:JreLoadEnum(OrgApacheLuceneIndexIndexOptions, DOCS_AND_FREQS_AND_POSITIONS)] >= 0);
  writeOffsets_ = ([((OrgApacheLuceneIndexIndexOptions *) nil_chk(indexOptions_)) compareToWithId:JreLoadEnum(OrgApacheLuceneIndexIndexOptions, DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS)] >= 0);
  writePayloads_ = [fieldInfo hasPayloads];
  if (writeFreqs_ == false) {
    enumFlags_ = 0;
  }
  else if (writePositions_ == false) {
    enumFlags_ = OrgApacheLuceneIndexPostingsEnum_FREQS;
  }
  else if (writeOffsets_ == false) {
    if (writePayloads_) {
      enumFlags_ = OrgApacheLuceneIndexPostingsEnum_PAYLOADS;
    }
    else {
      enumFlags_ = OrgApacheLuceneIndexPostingsEnum_POSITIONS;
    }
  }
  else {
    if (writePayloads_) {
      enumFlags_ = OrgApacheLuceneIndexPostingsEnum_PAYLOADS | OrgApacheLuceneIndexPostingsEnum_OFFSETS;
    }
    else {
      enumFlags_ = OrgApacheLuceneIndexPostingsEnum_OFFSETS;
    }
  }
  return 0;
}

- (OrgApacheLuceneCodecsBlockTermState *)writeTermWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term
                                                withOrgApacheLuceneIndexTermsEnum:(OrgApacheLuceneIndexTermsEnum *)termsEnum
                                               withOrgApacheLuceneUtilFixedBitSet:(OrgApacheLuceneUtilFixedBitSet *)docsSeen {
  [self startTerm];
  JreStrongAssign(&postingsEnum_, [((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum)) postingsWithOrgApacheLuceneIndexPostingsEnum:postingsEnum_ withInt:enumFlags_]);
  JreAssert(postingsEnum_ != nil, @"org/apache/lucene/codecs/PushPostingsWriterBase.java:123 condition failed: assert postingsEnum != null;");
  jint docFreq = 0;
  jlong totalTermFreq = 0;
  while (true) {
    jint docID = [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(postingsEnum_)) nextDoc];
    if (docID == OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
      break;
    }
    docFreq++;
    [((OrgApacheLuceneUtilFixedBitSet *) nil_chk(docsSeen)) setWithInt:docID];
    jint freq;
    if (writeFreqs_) {
      freq = [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(postingsEnum_)) freq];
      totalTermFreq += freq;
    }
    else {
      freq = -1;
    }
    [self startDocWithInt:docID withInt:freq];
    if (writePositions_) {
      for (jint i = 0; i < freq; i++) {
        jint pos = [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(postingsEnum_)) nextPosition];
        OrgApacheLuceneUtilBytesRef *payload = writePayloads_ ? [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(postingsEnum_)) getPayload] : nil;
        jint startOffset;
        jint endOffset;
        if (writeOffsets_) {
          startOffset = [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(postingsEnum_)) startOffset];
          endOffset = [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(postingsEnum_)) endOffset];
        }
        else {
          startOffset = -1;
          endOffset = -1;
        }
        [self addPositionWithInt:pos withOrgApacheLuceneUtilBytesRef:payload withInt:startOffset withInt:endOffset];
      }
    }
    [self finishDoc];
  }
  if (docFreq == 0) {
    return nil;
  }
  else {
    OrgApacheLuceneCodecsBlockTermState *state = JreRetainedLocalValue([self newTermState]);
    ((OrgApacheLuceneCodecsBlockTermState *) nil_chk(state))->docFreq_ = docFreq;
    state->totalTermFreq_ = writeFreqs_ ? totalTermFreq : -1;
    [self finishTermWithOrgApacheLuceneCodecsBlockTermState:state];
    return state;
  }
}

- (void)startDocWithInt:(jint)docID
                withInt:(jint)freq {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)addPositionWithInt:(jint)position
withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)payload
                   withInt:(jint)startOffset
                   withInt:(jint)endOffset {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)finishDoc {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)dealloc {
  RELEASE_(postingsEnum_);
  RELEASE_(fieldInfo_);
  RELEASE_(indexOptions_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneCodecsBlockTermState;", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x401, 1, 2, 0, -1, -1, -1 },
    { NULL, "I", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneCodecsBlockTermState;", 0x11, 5, 6, 0, -1, -1, -1 },
    { NULL, "V", 0x401, 7, 8, 0, -1, -1, -1 },
    { NULL, "V", 0x401, 9, 10, 0, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(newTermState);
  methods[2].selector = @selector(startTerm);
  methods[3].selector = @selector(finishTermWithOrgApacheLuceneCodecsBlockTermState:);
  methods[4].selector = @selector(setFieldWithOrgApacheLuceneIndexFieldInfo:);
  methods[5].selector = @selector(writeTermWithOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneIndexTermsEnum:withOrgApacheLuceneUtilFixedBitSet:);
  methods[6].selector = @selector(startDocWithInt:withInt:);
  methods[7].selector = @selector(addPositionWithInt:withOrgApacheLuceneUtilBytesRef:withInt:withInt:);
  methods[8].selector = @selector(finishDoc);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "postingsEnum_", "LOrgApacheLuceneIndexPostingsEnum;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "enumFlags_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fieldInfo_", "LOrgApacheLuceneIndexFieldInfo;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "indexOptions_", "LOrgApacheLuceneIndexIndexOptions;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "writeFreqs_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "writePositions_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "writePayloads_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "writeOffsets_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoIOException;", "finishTerm", "LOrgApacheLuceneCodecsBlockTermState;", "setField", "LOrgApacheLuceneIndexFieldInfo;", "writeTerm", "LOrgApacheLuceneUtilBytesRef;LOrgApacheLuceneIndexTermsEnum;LOrgApacheLuceneUtilFixedBitSet;", "startDoc", "II", "addPosition", "ILOrgApacheLuceneUtilBytesRef;II" };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsPushPostingsWriterBase = { "PushPostingsWriterBase", "org.apache.lucene.codecs", ptrTable, methods, fields, 7, 0x401, 9, 8, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneCodecsPushPostingsWriterBase;
}

@end

void OrgApacheLuceneCodecsPushPostingsWriterBase_init(OrgApacheLuceneCodecsPushPostingsWriterBase *self) {
  OrgApacheLuceneCodecsPostingsWriterBase_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsPushPostingsWriterBase)
