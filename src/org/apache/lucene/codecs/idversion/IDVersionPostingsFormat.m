//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsFormat.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/apache/lucene/codecs/FieldsConsumer.h"
#include "org/apache/lucene/codecs/FieldsProducer.h"
#include "org/apache/lucene/codecs/PostingsFormat.h"
#include "org/apache/lucene/codecs/PostingsReaderBase.h"
#include "org/apache/lucene/codecs/PostingsWriterBase.h"
#include "org/apache/lucene/codecs/blocktree/BlockTreeTermsWriter.h"
#include "org/apache/lucene/codecs/idversion/IDVersionPostingsFormat.h"
#include "org/apache/lucene/codecs/idversion/IDVersionPostingsReader.h"
#include "org/apache/lucene/codecs/idversion/IDVersionPostingsWriter.h"
#include "org/apache/lucene/codecs/idversion/VersionBlockTreeTermsReader.h"
#include "org/apache/lucene/codecs/idversion/VersionBlockTreeTermsWriter.h"
#include "org/apache/lucene/index/SegmentReadState.h"
#include "org/apache/lucene/index/SegmentWriteState.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/MutableBits.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/codecs/idversion/IDVersionPostingsFormat must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat () {
 @public
  jint minTermsInBlock_;
  jint maxTermsInBlock_;
}

@end

@implementation OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat

+ (jlong)MIN_VERSION {
  return OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_MIN_VERSION;
}

+ (jlong)MAX_VERSION {
  return OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_MAX_VERSION;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithInt:(jint)minTermsInBlock
                    withInt:(jint)maxTermsInBlock {
  OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_initWithInt_withInt_(self, minTermsInBlock, maxTermsInBlock);
  return self;
}

- (OrgApacheLuceneCodecsFieldsConsumer *)fieldsConsumerWithOrgApacheLuceneIndexSegmentWriteState:(OrgApacheLuceneIndexSegmentWriteState *)state {
  OrgApacheLuceneCodecsPostingsWriterBase *postingsWriter = create_OrgApacheLuceneCodecsIdversionIDVersionPostingsWriter_initPackagePrivateWithOrgApacheLuceneUtilBits_(((OrgApacheLuceneIndexSegmentWriteState *) nil_chk(state))->liveDocs_);
  jboolean success = false;
  @try {
    OrgApacheLuceneCodecsFieldsConsumer *ret = create_OrgApacheLuceneCodecsIdversionVersionBlockTreeTermsWriter_initWithOrgApacheLuceneIndexSegmentWriteState_withOrgApacheLuceneCodecsPostingsWriterBase_withInt_withInt_(state, postingsWriter, minTermsInBlock_, maxTermsInBlock_);
    success = true;
    return ret;
  }
  @finally {
    if (!success) {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ postingsWriter } count:1 type:JavaIoCloseable_class_()]);
    }
  }
}

- (OrgApacheLuceneCodecsFieldsProducer *)fieldsProducerWithOrgApacheLuceneIndexSegmentReadState:(OrgApacheLuceneIndexSegmentReadState *)state {
  OrgApacheLuceneCodecsPostingsReaderBase *postingsReader = create_OrgApacheLuceneCodecsIdversionIDVersionPostingsReader_initPackagePrivate();
  jboolean success = false;
  @try {
    OrgApacheLuceneCodecsFieldsProducer *ret = create_OrgApacheLuceneCodecsIdversionVersionBlockTreeTermsReader_initWithOrgApacheLuceneCodecsPostingsReaderBase_withOrgApacheLuceneIndexSegmentReadState_(postingsReader, state);
    success = true;
    return ret;
  }
  @finally {
    if (!success) {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ postingsReader } count:1 type:JavaIoCloseable_class_()]);
    }
  }
}

+ (jlong)bytesToLongWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)bytes {
  return OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_bytesToLongWithOrgApacheLuceneUtilBytesRef_(bytes);
}

+ (void)longToBytesWithLong:(jlong)v
withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)bytes {
  OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_longToBytesWithLong_withOrgApacheLuceneUtilBytesRef_(v, bytes);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneCodecsFieldsConsumer;", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneCodecsFieldsProducer;", 0x1, 4, 5, 3, -1, -1, -1 },
    { NULL, "J", 0x9, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 8, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithInt:withInt:);
  methods[2].selector = @selector(fieldsConsumerWithOrgApacheLuceneIndexSegmentWriteState:);
  methods[3].selector = @selector(fieldsProducerWithOrgApacheLuceneIndexSegmentReadState:);
  methods[4].selector = @selector(bytesToLongWithOrgApacheLuceneUtilBytesRef:);
  methods[5].selector = @selector(longToBytesWithLong:withOrgApacheLuceneUtilBytesRef:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MIN_VERSION", "J", .constantValue.asLong = OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_MIN_VERSION, 0x19, -1, -1, -1, -1 },
    { "MAX_VERSION", "J", .constantValue.asLong = OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_MAX_VERSION, 0x19, -1, -1, -1, -1 },
    { "minTermsInBlock_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "maxTermsInBlock_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "II", "fieldsConsumer", "LOrgApacheLuceneIndexSegmentWriteState;", "LJavaIoIOException;", "fieldsProducer", "LOrgApacheLuceneIndexSegmentReadState;", "bytesToLong", "LOrgApacheLuceneUtilBytesRef;", "longToBytes", "JLOrgApacheLuceneUtilBytesRef;" };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat = { "IDVersionPostingsFormat", "org.apache.lucene.codecs.idversion", ptrTable, methods, fields, 7, 0x1, 6, 4, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat;
}

@end

void OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_init(OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat *self) {
  OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_initWithInt_withInt_(self, OrgApacheLuceneCodecsBlocktreeBlockTreeTermsWriter_DEFAULT_MIN_BLOCK_SIZE, OrgApacheLuceneCodecsBlocktreeBlockTreeTermsWriter_DEFAULT_MAX_BLOCK_SIZE);
}

OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat *new_OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat, init)
}

OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat *create_OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat, init)
}

void OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_initWithInt_withInt_(OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat *self, jint minTermsInBlock, jint maxTermsInBlock) {
  OrgApacheLuceneCodecsPostingsFormat_initWithNSString_(self, @"IDVersion");
  self->minTermsInBlock_ = minTermsInBlock;
  self->maxTermsInBlock_ = maxTermsInBlock;
  OrgApacheLuceneCodecsBlocktreeBlockTreeTermsWriter_validateSettingsWithInt_withInt_(minTermsInBlock, maxTermsInBlock);
}

OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat *new_OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_initWithInt_withInt_(jint minTermsInBlock, jint maxTermsInBlock) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat, initWithInt_withInt_, minTermsInBlock, maxTermsInBlock)
}

OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat *create_OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_initWithInt_withInt_(jint minTermsInBlock, jint maxTermsInBlock) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat, initWithInt_withInt_, minTermsInBlock, maxTermsInBlock)
}

jlong OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_bytesToLongWithOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneUtilBytesRef *bytes) {
  OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_initialize();
  return (JreLShift64((IOSByteArray_Get(nil_chk(((OrgApacheLuceneUtilBytesRef *) nil_chk(bytes))->bytes_), bytes->offset_) & (jlong) 0xFFLL), 56)) | (JreLShift64((IOSByteArray_Get(bytes->bytes_, bytes->offset_ + 1) & (jlong) 0xFFLL), 48)) | (JreLShift64((IOSByteArray_Get(bytes->bytes_, bytes->offset_ + 2) & (jlong) 0xFFLL), 40)) | (JreLShift64((IOSByteArray_Get(bytes->bytes_, bytes->offset_ + 3) & (jlong) 0xFFLL), 32)) | (JreLShift64((IOSByteArray_Get(bytes->bytes_, bytes->offset_ + 4) & (jlong) 0xFFLL), 24)) | (JreLShift64((IOSByteArray_Get(bytes->bytes_, bytes->offset_ + 5) & (jlong) 0xFFLL), 16)) | (JreLShift64((IOSByteArray_Get(bytes->bytes_, bytes->offset_ + 6) & (jlong) 0xFFLL), 8)) | (IOSByteArray_Get(bytes->bytes_, bytes->offset_ + 7) & (jlong) 0xFFLL);
}

void OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_longToBytesWithLong_withOrgApacheLuceneUtilBytesRef_(jlong v, OrgApacheLuceneUtilBytesRef *bytes) {
  OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_initialize();
  if (v > OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_MAX_VERSION || v < OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_MIN_VERSION) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$J$J$JC", @"version must be >= MIN_VERSION=", OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_MIN_VERSION, @" and <= MAX_VERSION=", OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_MAX_VERSION, @" (got: ", v, ')'));
  }
  ((OrgApacheLuceneUtilBytesRef *) nil_chk(bytes))->offset_ = 0;
  bytes->length_ = 8;
  *IOSByteArray_GetRef(nil_chk(bytes->bytes_), 0) = (jbyte) (JreRShift64(v, 56));
  *IOSByteArray_GetRef(bytes->bytes_, 1) = (jbyte) (JreRShift64(v, 48));
  *IOSByteArray_GetRef(bytes->bytes_, 2) = (jbyte) (JreRShift64(v, 40));
  *IOSByteArray_GetRef(bytes->bytes_, 3) = (jbyte) (JreRShift64(v, 32));
  *IOSByteArray_GetRef(bytes->bytes_, 4) = (jbyte) (JreRShift64(v, 24));
  *IOSByteArray_GetRef(bytes->bytes_, 5) = (jbyte) (JreRShift64(v, 16));
  *IOSByteArray_GetRef(bytes->bytes_, 6) = (jbyte) (JreRShift64(v, 8));
  *IOSByteArray_GetRef(bytes->bytes_, 7) = (jbyte) v;
  JreAssert(OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_bytesToLongWithOrgApacheLuceneUtilBytesRef_(bytes) == v, JreStrcat("J$J$@", OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat_bytesToLongWithOrgApacheLuceneUtilBytesRef_(bytes), @" vs ", v, @" bytes=", bytes));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsIdversionIDVersionPostingsFormat)
