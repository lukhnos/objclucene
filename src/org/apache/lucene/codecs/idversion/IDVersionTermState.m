//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionTermState.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/codecs/BlockTermState.h"
#include "org/apache/lucene/codecs/idversion/IDVersionTermState.h"
#include "org/apache/lucene/index/TermState.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/codecs/idversion/IDVersionTermState must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneCodecsIdversionIDVersionTermState

- (instancetype)initPackagePrivate {
  OrgApacheLuceneCodecsIdversionIDVersionTermState_initPackagePrivate(self);
  return self;
}

- (OrgApacheLuceneCodecsIdversionIDVersionTermState *)java_clone {
  OrgApacheLuceneCodecsIdversionIDVersionTermState *other = create_OrgApacheLuceneCodecsIdversionIDVersionTermState_initPackagePrivate();
  [other copyFromWithOrgApacheLuceneIndexTermState:self];
  return other;
}

- (void)copyFromWithOrgApacheLuceneIndexTermState:(OrgApacheLuceneIndexTermState *)_other {
  [super copyFromWithOrgApacheLuceneIndexTermState:_other];
  OrgApacheLuceneCodecsIdversionIDVersionTermState *other = (OrgApacheLuceneCodecsIdversionIDVersionTermState *) cast_chk(_other, [OrgApacheLuceneCodecsIdversionIDVersionTermState class]);
  idVersion_ = ((OrgApacheLuceneCodecsIdversionIDVersionTermState *) nil_chk(other))->idVersion_;
  docID_ = other->docID_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneCodecsIdversionIDVersionTermState;", 0x1, 0, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(java_clone);
  methods[2].selector = @selector(copyFromWithOrgApacheLuceneIndexTermState:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "idVersion_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "docID_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "clone", "copyFrom", "LOrgApacheLuceneIndexTermState;" };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsIdversionIDVersionTermState = { "IDVersionTermState", "org.apache.lucene.codecs.idversion", ptrTable, methods, fields, 7, 0x10, 3, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneCodecsIdversionIDVersionTermState;
}

@end

void OrgApacheLuceneCodecsIdversionIDVersionTermState_initPackagePrivate(OrgApacheLuceneCodecsIdversionIDVersionTermState *self) {
  OrgApacheLuceneCodecsBlockTermState_init(self);
}

OrgApacheLuceneCodecsIdversionIDVersionTermState *new_OrgApacheLuceneCodecsIdversionIDVersionTermState_initPackagePrivate() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneCodecsIdversionIDVersionTermState, initPackagePrivate)
}

OrgApacheLuceneCodecsIdversionIDVersionTermState *create_OrgApacheLuceneCodecsIdversionIDVersionTermState_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneCodecsIdversionIDVersionTermState, initPackagePrivate)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsIdversionIDVersionTermState)
