//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/codecs/BlockTermState.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/codecs/BlockTermState.h"
#include "org/apache/lucene/index/OrdTermState.h"
#include "org/apache/lucene/index/TermState.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/codecs/BlockTermState must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneCodecsBlockTermState

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneCodecsBlockTermState_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)copyFromWithOrgApacheLuceneIndexTermState:(OrgApacheLuceneIndexTermState *)_other {
  JreAssert([_other isKindOfClass:[OrgApacheLuceneCodecsBlockTermState class]], JreStrcat("$$", @"can not copy from ", [[((OrgApacheLuceneIndexTermState *) nil_chk(_other)) java_getClass] getName]));
  OrgApacheLuceneCodecsBlockTermState *other = (OrgApacheLuceneCodecsBlockTermState *) cast_chk(_other, [OrgApacheLuceneCodecsBlockTermState class]);
  [super copyFromWithOrgApacheLuceneIndexTermState:_other];
  docFreq_ = other->docFreq_;
  totalTermFreq_ = other->totalTermFreq_;
  termBlockOrd_ = other->termBlockOrd_;
  blockFilePointer_ = other->blockFilePointer_;
  isRealTerm_ = other->isRealTerm_;
}

- (jboolean)isRealTerm {
  return isRealTerm_;
}

- (NSString *)description {
  return JreStrcat("$I$J$I$J$Z", @"docFreq=", docFreq_, @" totalTermFreq=", totalTermFreq_, @" termBlockOrd=", termBlockOrd_, @" blockFP=", blockFilePointer_, @" isRealTerm=", isRealTerm_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(copyFromWithOrgApacheLuceneIndexTermState:);
  methods[2].selector = @selector(isRealTerm);
  methods[3].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "docFreq_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "totalTermFreq_", "J", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "termBlockOrd_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "blockFilePointer_", "J", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "isRealTerm_", "Z", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "copyFrom", "LOrgApacheLuceneIndexTermState;", "toString" };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsBlockTermState = { "BlockTermState", "org.apache.lucene.codecs", ptrTable, methods, fields, 7, 0x1, 4, 5, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneCodecsBlockTermState;
}

@end

void OrgApacheLuceneCodecsBlockTermState_init(OrgApacheLuceneCodecsBlockTermState *self) {
  OrgApacheLuceneIndexOrdTermState_init(self);
  self->isRealTerm_ = true;
}

OrgApacheLuceneCodecsBlockTermState *new_OrgApacheLuceneCodecsBlockTermState_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneCodecsBlockTermState, init)
}

OrgApacheLuceneCodecsBlockTermState *create_OrgApacheLuceneCodecsBlockTermState_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneCodecsBlockTermState, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsBlockTermState)
