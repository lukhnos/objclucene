//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/EOFException.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Set.h"
#include "org/apache/lucene/codecs/CodecUtil.h"
#include "org/apache/lucene/codecs/StoredFieldsReader.h"
#include "org/apache/lucene/codecs/compressing/CompressingStoredFieldsIndexReader.h"
#include "org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader.h"
#include "org/apache/lucene/codecs/compressing/CompressingStoredFieldsWriter.h"
#include "org/apache/lucene/codecs/compressing/CompressionMode.h"
#include "org/apache/lucene/codecs/compressing/Decompressor.h"
#include "org/apache/lucene/index/CorruptIndexException.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/FieldInfos.h"
#include "org/apache/lucene/index/IndexFileNames.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/index/StoredFieldVisitor.h"
#include "org/apache/lucene/store/AlreadyClosedException.h"
#include "org/apache/lucene/store/ByteArrayDataInput.h"
#include "org/apache/lucene/store/ChecksumIndexInput.h"
#include "org/apache/lucene/store/DataInput.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/store/IndexInput.h"
#include "org/apache/lucene/util/Accountable.h"
#include "org/apache/lucene/util/Accountables.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/BitUtil.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/IntsRef.h"
#include "org/apache/lucene/util/packed/PackedInts.h"

@class OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState;

#if __has_feature(objc_arc)
#error "org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader must not be compiled with ARC (-fobjc-arc)"
#if !__has_feature(objc_arc_weak)
#error "org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader must be compiled with weak references support (-fobjc-weak)"
#endif
#endif

@interface OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader () {
 @public
  jint version__;
  OrgApacheLuceneIndexFieldInfos *fieldInfos_;
  OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader *indexReader_;
  jlong maxPointer_;
  OrgApacheLuceneStoreIndexInput *fieldsStream_;
  jint chunkSize_;
  jint packedIntsVersion_;
  OrgApacheLuceneCodecsCompressingCompressionMode *compressionMode_;
  OrgApacheLuceneCodecsCompressingDecompressor *decompressor_;
  jint numDocs_;
  jboolean merging_;
  OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState *state_;
  jlong numChunks_;
  jlong numDirtyChunks_;
  jboolean closed_;
}

- (instancetype)initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader:(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *)reader
                                                                          withBoolean:(jboolean)merging;

/*!
 @throw AlreadyClosedExceptionif this FieldsReader is closed
 */
- (void)ensureOpen;

+ (void)readFieldWithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)inArg
        withOrgApacheLuceneIndexStoredFieldVisitor:(OrgApacheLuceneIndexStoredFieldVisitor *)visitor
                 withOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)info
                                           withInt:(jint)bits;

+ (void)skipFieldWithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)inArg
                                           withInt:(jint)bits;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader, fieldInfos_, OrgApacheLuceneIndexFieldInfos *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader, indexReader_, OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader, fieldsStream_, OrgApacheLuceneStoreIndexInput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader, compressionMode_, OrgApacheLuceneCodecsCompressingCompressionMode *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader, decompressor_, OrgApacheLuceneCodecsCompressingDecompressor *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader, state_, OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState *)

__attribute__((unused)) static void OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_withBoolean_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *self, OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *reader, jboolean merging);

__attribute__((unused)) static OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *new_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_withBoolean_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *reader, jboolean merging) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *create_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_withBoolean_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *reader, jboolean merging);

__attribute__((unused)) static void OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_ensureOpen(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *self);

__attribute__((unused)) static void OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_readFieldWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneIndexStoredFieldVisitor_withOrgApacheLuceneIndexFieldInfo_withInt_(OrgApacheLuceneStoreDataInput *inArg, OrgApacheLuceneIndexStoredFieldVisitor *visitor, OrgApacheLuceneIndexFieldInfo *info, jint bits);

__attribute__((unused)) static void OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_skipFieldWithOrgApacheLuceneStoreDataInput_withInt_(OrgApacheLuceneStoreDataInput *inArg, jint bits);

@interface OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument ()

- (instancetype)initWithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)inArg
                                              withInt:(jint)length
                                              withInt:(jint)numStoredFields;

@end

__attribute__((unused)) static void OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument_initWithOrgApacheLuceneStoreDataInput_withInt_withInt_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument *self, OrgApacheLuceneStoreDataInput *inArg, jint length, jint numStoredFields);

__attribute__((unused)) static OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument *new_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument_initWithOrgApacheLuceneStoreDataInput_withInt_withInt_(OrgApacheLuceneStoreDataInput *inArg, jint length, jint numStoredFields) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument *create_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument_initWithOrgApacheLuceneStoreDataInput_withInt_withInt_(OrgApacheLuceneStoreDataInput *inArg, jint length, jint numStoredFields);

/*!
 @brief Keeps state about the current block of documents.
 */
@interface OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState : NSObject {
 @public
  WEAK_ OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *this$0_;
  jint docBase_;
  jint chunkDocs_;
  jboolean sliced_;
  IOSIntArray *offsets_;
  IOSIntArray *numStoredFields_;
  jlong startPointer_;
  OrgApacheLuceneUtilBytesRef *spare_;
  OrgApacheLuceneUtilBytesRef *bytes_;
}

- (instancetype)initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader:(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *)outer$;

- (jboolean)containsWithInt:(jint)docID;

/*!
 @brief Reset this block so that it stores state for the block
  that contains the given doc id.
 */
- (void)resetWithInt:(jint)docID;

- (void)doResetWithInt:(jint)docID;

/*!
 @brief Get the serialized representation of the given docID.This docID has
  to be contained in the current block.
 */
- (OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument *)documentWithInt:(jint)docID;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState, offsets_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState, numStoredFields_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState, spare_, OrgApacheLuceneUtilBytesRef *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState, bytes_, OrgApacheLuceneUtilBytesRef *)

__attribute__((unused)) static void OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState *self, OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *outer$);

__attribute__((unused)) static OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState *new_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState *create_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *outer$);

__attribute__((unused)) static void OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_doResetWithInt_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState *self, jint docID);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState)

@interface OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_1 : OrgApacheLuceneStoreDataInput {
 @public
  OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState *this$0_;
  jint val$length_;
  jint decompressed_;
}

- (instancetype)initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState:(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState *)outer$
                                                                                         withInt:(jint)capture$0;

- (void)fillBuffer;

- (jbyte)readByte;

- (void)readBytesWithByteArray:(IOSByteArray *)b
                       withInt:(jint)offset
                       withInt:(jint)len;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_1)

__attribute__((unused)) static void OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_1_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_withInt_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_1 *self, OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState *outer$, jint capture$0);

__attribute__((unused)) static OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_1 *new_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_1_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_withInt_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState *outer$, jint capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_1 *create_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_1_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_withInt_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState *outer$, jint capture$0);

@implementation OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader

- (instancetype)initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader:(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *)reader
                                                                          withBoolean:(jboolean)merging {
  OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_withBoolean_(self, reader, merging);
  return self;
}

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)d
                  withOrgApacheLuceneIndexSegmentInfo:(OrgApacheLuceneIndexSegmentInfo *)si
                                         withNSString:(NSString *)segmentSuffix
                   withOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)fn
                    withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context
                                         withNSString:(NSString *)formatName
  withOrgApacheLuceneCodecsCompressingCompressionMode:(OrgApacheLuceneCodecsCompressingCompressionMode *)compressionMode {
  OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentInfo_withNSString_withOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneStoreIOContext_withNSString_withOrgApacheLuceneCodecsCompressingCompressionMode_(self, d, si, segmentSuffix, fn, context, formatName, compressionMode);
  return self;
}

- (void)ensureOpen {
  OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_ensureOpen(self);
}

- (void)close {
  if (!closed_) {
    OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ fieldsStream_ } count:1 type:JavaIoCloseable_class_()]);
    closed_ = true;
  }
}

+ (void)readFieldWithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)inArg
        withOrgApacheLuceneIndexStoredFieldVisitor:(OrgApacheLuceneIndexStoredFieldVisitor *)visitor
                 withOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)info
                                           withInt:(jint)bits {
  OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_readFieldWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneIndexStoredFieldVisitor_withOrgApacheLuceneIndexFieldInfo_withInt_(inArg, visitor, info, bits);
}

+ (void)skipFieldWithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)inArg
                                           withInt:(jint)bits {
  OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_skipFieldWithOrgApacheLuceneStoreDataInput_withInt_(inArg, bits);
}

+ (jfloat)readZFloatWithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)inArg {
  return OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_readZFloatWithOrgApacheLuceneStoreDataInput_(inArg);
}

+ (jdouble)readZDoubleWithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)inArg {
  return OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_readZDoubleWithOrgApacheLuceneStoreDataInput_(inArg);
}

+ (jlong)readTLongWithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)inArg {
  return OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_readTLongWithOrgApacheLuceneStoreDataInput_(inArg);
}

- (OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument *)documentWithInt:(jint)docID {
  if ([((OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState *) nil_chk(state_)) containsWithInt:docID] == false) {
    [((OrgApacheLuceneStoreIndexInput *) nil_chk(fieldsStream_)) seekWithLong:[((OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader *) nil_chk(indexReader_)) getStartPointerWithInt:docID]];
    [state_ resetWithInt:docID];
  }
  JreAssert([state_ containsWithInt:docID], @"org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader.java:579 condition failed: assert state.contains(docID);");
  return [state_ documentWithInt:docID];
}

- (void)visitDocumentWithInt:(jint)docID
withOrgApacheLuceneIndexStoredFieldVisitor:(OrgApacheLuceneIndexStoredFieldVisitor *)visitor {
  OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument *doc = [self documentWithInt:docID];
  for (jint fieldIDX = 0; fieldIDX < ((OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument *) nil_chk(doc))->numStoredFields_; fieldIDX++) {
    jlong infoAndBits = [((OrgApacheLuceneStoreDataInput *) nil_chk(doc->in_)) readVLong];
    jint fieldNumber = (jint) (JreURShift64(infoAndBits, JreLoadStatic(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter, TYPE_BITS)));
    OrgApacheLuceneIndexFieldInfo *fieldInfo = [((OrgApacheLuceneIndexFieldInfos *) nil_chk(fieldInfos_)) fieldInfoWithInt:fieldNumber];
    jint bits = (jint) (infoAndBits & JreLoadStatic(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter, TYPE_MASK));
    JreAssert(bits <= OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_NUMERIC_DOUBLE, JreStrcat("$$", @"bits=", JavaLangInteger_toHexStringWithInt_(bits)));
    switch ([[((OrgApacheLuceneIndexStoredFieldVisitor *) nil_chk(visitor)) needsFieldWithOrgApacheLuceneIndexFieldInfo:fieldInfo] ordinal]) {
      case OrgApacheLuceneIndexStoredFieldVisitor_Status_Enum_YES:
      OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_readFieldWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneIndexStoredFieldVisitor_withOrgApacheLuceneIndexFieldInfo_withInt_(doc->in_, visitor, fieldInfo, bits);
      break;
      case OrgApacheLuceneIndexStoredFieldVisitor_Status_Enum_NO:
      OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_skipFieldWithOrgApacheLuceneStoreDataInput_withInt_(doc->in_, bits);
      break;
      case OrgApacheLuceneIndexStoredFieldVisitor_Status_Enum_STOP:
      return;
    }
  }
}

- (OrgApacheLuceneCodecsStoredFieldsReader *)java_clone {
  OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_ensureOpen(self);
  return create_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_withBoolean_(self, false);
}

- (OrgApacheLuceneCodecsStoredFieldsReader *)getMergeInstance {
  OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_ensureOpen(self);
  return create_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_withBoolean_(self, true);
}

- (jint)getVersion {
  return version__;
}

- (OrgApacheLuceneCodecsCompressingCompressionMode *)getCompressionMode {
  return compressionMode_;
}

- (OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader *)getIndexReader {
  return indexReader_;
}

- (jlong)getMaxPointer {
  return maxPointer_;
}

- (OrgApacheLuceneStoreIndexInput *)getFieldsStream {
  return fieldsStream_;
}

- (jint)getChunkSize {
  return chunkSize_;
}

- (jlong)getNumChunks {
  return numChunks_;
}

- (jlong)getNumDirtyChunks {
  return numDirtyChunks_;
}

- (jint)getPackedIntsVersion {
  return packedIntsVersion_;
}

- (jlong)ramBytesUsed {
  return [((OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader *) nil_chk(indexReader_)) ramBytesUsed];
}

- (id<JavaUtilCollection>)getChildResources {
  return JavaUtilCollections_singletonWithId_(OrgApacheLuceneUtilAccountables_namedAccountableWithNSString_withOrgApacheLuceneUtilAccountable_(@"stored field index", indexReader_));
}

- (void)checkIntegrity {
  OrgApacheLuceneCodecsCodecUtil_checksumEntireFileWithOrgApacheLuceneStoreIndexInput_(fieldsStream_);
}

- (NSString *)description {
  return JreStrcat("$$@$IC", [[self java_getClass] getSimpleName], @"(mode=", compressionMode_, @",chunksize=", chunkSize_, ')');
}

- (void)dealloc {
  RELEASE_(fieldInfos_);
  RELEASE_(indexReader_);
  RELEASE_(fieldsStream_);
  RELEASE_(compressionMode_);
  RELEASE_(decompressor_);
  RELEASE_(state_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 3, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0xa, 4, 5, 2, -1, -1, -1 },
    { NULL, "V", 0xa, 6, 7, 2, -1, -1, -1 },
    { NULL, "F", 0x8, 8, 9, 2, -1, -1, -1 },
    { NULL, "D", 0x8, 10, 9, 2, -1, -1, -1 },
    { NULL, "J", 0x8, 11, 9, 2, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument;", 0x0, 12, 13, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 15, 2, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneCodecsStoredFieldsReader;", 0x1, 16, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneCodecsStoredFieldsReader;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneCodecsCompressingCompressionMode;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreIndexInput;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, 17, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 18, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader:withBoolean:);
  methods[1].selector = @selector(initWithOrgApacheLuceneStoreDirectory:withOrgApacheLuceneIndexSegmentInfo:withNSString:withOrgApacheLuceneIndexFieldInfos:withOrgApacheLuceneStoreIOContext:withNSString:withOrgApacheLuceneCodecsCompressingCompressionMode:);
  methods[2].selector = @selector(ensureOpen);
  methods[3].selector = @selector(close);
  methods[4].selector = @selector(readFieldWithOrgApacheLuceneStoreDataInput:withOrgApacheLuceneIndexStoredFieldVisitor:withOrgApacheLuceneIndexFieldInfo:withInt:);
  methods[5].selector = @selector(skipFieldWithOrgApacheLuceneStoreDataInput:withInt:);
  methods[6].selector = @selector(readZFloatWithOrgApacheLuceneStoreDataInput:);
  methods[7].selector = @selector(readZDoubleWithOrgApacheLuceneStoreDataInput:);
  methods[8].selector = @selector(readTLongWithOrgApacheLuceneStoreDataInput:);
  methods[9].selector = @selector(documentWithInt:);
  methods[10].selector = @selector(visitDocumentWithInt:withOrgApacheLuceneIndexStoredFieldVisitor:);
  methods[11].selector = @selector(java_clone);
  methods[12].selector = @selector(getMergeInstance);
  methods[13].selector = @selector(getVersion);
  methods[14].selector = @selector(getCompressionMode);
  methods[15].selector = @selector(getIndexReader);
  methods[16].selector = @selector(getMaxPointer);
  methods[17].selector = @selector(getFieldsStream);
  methods[18].selector = @selector(getChunkSize);
  methods[19].selector = @selector(getNumChunks);
  methods[20].selector = @selector(getNumDirtyChunks);
  methods[21].selector = @selector(getPackedIntsVersion);
  methods[22].selector = @selector(ramBytesUsed);
  methods[23].selector = @selector(getChildResources);
  methods[24].selector = @selector(checkIntegrity);
  methods[25].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "version__", "I", .constantValue.asLong = 0, 0x12, 19, -1, -1, -1 },
    { "fieldInfos_", "LOrgApacheLuceneIndexFieldInfos;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "indexReader_", "LOrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "maxPointer_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "fieldsStream_", "LOrgApacheLuceneStoreIndexInput;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "chunkSize_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "packedIntsVersion_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "compressionMode_", "LOrgApacheLuceneCodecsCompressingCompressionMode;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "decompressor_", "LOrgApacheLuceneCodecsCompressingDecompressor;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "numDocs_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "merging_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "state_", "LOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "numChunks_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "numDirtyChunks_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "closed_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader;Z", "LOrgApacheLuceneStoreDirectory;LOrgApacheLuceneIndexSegmentInfo;LNSString;LOrgApacheLuceneIndexFieldInfos;LOrgApacheLuceneStoreIOContext;LNSString;LOrgApacheLuceneCodecsCompressingCompressionMode;", "LJavaIoIOException;", "LOrgApacheLuceneStoreAlreadyClosedException;", "readField", "LOrgApacheLuceneStoreDataInput;LOrgApacheLuceneIndexStoredFieldVisitor;LOrgApacheLuceneIndexFieldInfo;I", "skipField", "LOrgApacheLuceneStoreDataInput;I", "readZFloat", "LOrgApacheLuceneStoreDataInput;", "readZDouble", "readTLong", "document", "I", "visitDocument", "ILOrgApacheLuceneIndexStoredFieldVisitor;", "clone", "()Ljava/util/Collection<Lorg/apache/lucene/util/Accountable;>;", "toString", "version", "LOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument;LOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState;" };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader = { "CompressingStoredFieldsReader", "org.apache.lucene.codecs.compressing", ptrTable, methods, fields, 7, 0x11, 26, 15, -1, 20, -1, -1, -1 };
  return &_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader;
}

@end

void OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_withBoolean_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *self, OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *reader, jboolean merging) {
  OrgApacheLuceneCodecsStoredFieldsReader_init(self);
  self->version__ = ((OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *) nil_chk(reader))->version__;
  JreStrongAssign(&self->fieldInfos_, reader->fieldInfos_);
  JreStrongAssign(&self->fieldsStream_, [((OrgApacheLuceneStoreIndexInput *) nil_chk(reader->fieldsStream_)) java_clone]);
  JreStrongAssign(&self->indexReader_, [((OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader *) nil_chk(reader->indexReader_)) java_clone]);
  self->maxPointer_ = reader->maxPointer_;
  self->chunkSize_ = reader->chunkSize_;
  self->packedIntsVersion_ = reader->packedIntsVersion_;
  JreStrongAssign(&self->compressionMode_, reader->compressionMode_);
  JreStrongAssign(&self->decompressor_, [((OrgApacheLuceneCodecsCompressingDecompressor *) nil_chk(reader->decompressor_)) java_clone]);
  self->numDocs_ = reader->numDocs_;
  self->numChunks_ = reader->numChunks_;
  self->numDirtyChunks_ = reader->numDirtyChunks_;
  self->merging_ = merging;
  JreStrongAssignAndConsume(&self->state_, new_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_(self));
  self->closed_ = false;
}

OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *new_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_withBoolean_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *reader, jboolean merging) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader, initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_withBoolean_, reader, merging)
}

OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *create_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_withBoolean_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *reader, jboolean merging) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader, initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_withBoolean_, reader, merging)
}

void OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentInfo_withNSString_withOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneStoreIOContext_withNSString_withOrgApacheLuceneCodecsCompressingCompressionMode_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *self, OrgApacheLuceneStoreDirectory *d, OrgApacheLuceneIndexSegmentInfo *si, NSString *segmentSuffix, OrgApacheLuceneIndexFieldInfos *fn, OrgApacheLuceneStoreIOContext *context, NSString *formatName, OrgApacheLuceneCodecsCompressingCompressionMode *compressionMode) {
  OrgApacheLuceneCodecsStoredFieldsReader_init(self);
  JreStrongAssign(&self->compressionMode_, compressionMode);
  NSString *segment = ((OrgApacheLuceneIndexSegmentInfo *) nil_chk(si))->name_;
  jboolean success = false;
  JreStrongAssign(&self->fieldInfos_, fn);
  self->numDocs_ = [si maxDoc];
  jint version_ = -1;
  jlong maxPointer = -1;
  OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader *indexReader = nil;
  NSString *indexName = OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(segment, segmentSuffix, OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_FIELDS_INDEX_EXTENSION);
  {
    OrgApacheLuceneStoreChecksumIndexInput *indexStream = [((OrgApacheLuceneStoreDirectory *) nil_chk(d)) openChecksumInputWithNSString:indexName withOrgApacheLuceneStoreIOContext:context];
    JavaLangThrowable *__primaryException1 = nil;
    @try {
      JavaLangThrowable *priorE = nil;
      @try {
        NSString *codecNameIdx = JreStrcat("$$", formatName, OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_CODEC_SFX_IDX);
        version_ = OrgApacheLuceneCodecsCodecUtil_checkIndexHeaderWithOrgApacheLuceneStoreDataInput_withNSString_withInt_withInt_withByteArray_withNSString_(indexStream, codecNameIdx, OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_VERSION_START, OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_VERSION_CURRENT, [si getId], segmentSuffix);
        JreAssert(OrgApacheLuceneCodecsCodecUtil_indexHeaderLengthWithNSString_withNSString_(codecNameIdx, segmentSuffix) == [((OrgApacheLuceneStoreChecksumIndexInput *) nil_chk(indexStream)) getFilePointer], @"org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader.java:137 condition failed: assert CodecUtil.indexHeaderLength(codecNameIdx, segmentSuffix) == indexStream.getFilePointer();");
        indexReader = create_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsIndexReader_initWithOrgApacheLuceneStoreIndexInput_withOrgApacheLuceneIndexSegmentInfo_(indexStream, si);
        maxPointer = [indexStream readVLong];
      }
      @catch (JavaLangThrowable *exception) {
        priorE = exception;
      }
      @finally {
        OrgApacheLuceneCodecsCodecUtil_checkFooterWithOrgApacheLuceneStoreChecksumIndexInput_withJavaLangThrowable_(indexStream, priorE);
      }
    }
    @catch (JavaLangThrowable *e) {
      __primaryException1 = e;
      @throw e;
    }
    @finally {
      if (indexStream != nil) {
        if (__primaryException1 != nil) {
          @try {
            [indexStream close];
          }
          @catch (JavaLangThrowable *e) {
            [__primaryException1 addSuppressedWithJavaLangThrowable:e];
          }
        }
        else {
          [indexStream close];
        }
      }
    }
  }
  self->version__ = version_;
  self->maxPointer_ = maxPointer;
  JreStrongAssign(&self->indexReader_, indexReader);
  NSString *fieldsStreamFN = OrgApacheLuceneIndexIndexFileNames_segmentFileNameWithNSString_withNSString_withNSString_(segment, segmentSuffix, OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_FIELDS_EXTENSION);
  @try {
    JreStrongAssign(&self->fieldsStream_, [d openInputWithNSString:fieldsStreamFN withOrgApacheLuceneStoreIOContext:context]);
    NSString *codecNameDat = JreStrcat("$$", formatName, OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_CODEC_SFX_DAT);
    jint fieldsVersion = OrgApacheLuceneCodecsCodecUtil_checkIndexHeaderWithOrgApacheLuceneStoreDataInput_withNSString_withInt_withInt_withByteArray_withNSString_(self->fieldsStream_, codecNameDat, OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_VERSION_START, OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_VERSION_CURRENT, [si getId], segmentSuffix);
    if (version_ != fieldsVersion) {
      @throw create_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_(JreStrcat("$I$I", @"Version mismatch between stored fields index and data: ", version_, @" != ", fieldsVersion), self->fieldsStream_);
    }
    JreAssert(OrgApacheLuceneCodecsCodecUtil_indexHeaderLengthWithNSString_withNSString_(codecNameDat, segmentSuffix) == [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->fieldsStream_)) getFilePointer], @"org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader.java:160 condition failed: assert CodecUtil.indexHeaderLength(codecNameDat, segmentSuffix) == fieldsStream.getFilePointer();");
    self->chunkSize_ = [self->fieldsStream_ readVInt];
    self->packedIntsVersion_ = [self->fieldsStream_ readVInt];
    JreStrongAssign(&self->decompressor_, [((OrgApacheLuceneCodecsCompressingCompressionMode *) nil_chk(compressionMode)) newDecompressor]);
    self->merging_ = false;
    JreStrongAssignAndConsume(&self->state_, new_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_(self));
    if (version_ >= OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_VERSION_CHUNK_STATS) {
      [self->fieldsStream_ seekWithLong:maxPointer];
      self->numChunks_ = [self->fieldsStream_ readVLong];
      self->numDirtyChunks_ = [self->fieldsStream_ readVLong];
      if (self->numDirtyChunks_ > self->numChunks_) {
        @throw create_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_(JreStrcat("$J$J", @"invalid chunk counts: dirty=", self->numDirtyChunks_, @", total=", self->numChunks_), self->fieldsStream_);
      }
    }
    else {
      self->numChunks_ = self->numDirtyChunks_ = -1;
    }
    OrgApacheLuceneCodecsCodecUtil_retrieveChecksumWithOrgApacheLuceneStoreIndexInput_(self->fieldsStream_);
    success = true;
  }
  @finally {
    if (!success) {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ self } count:1 type:JavaIoCloseable_class_()]);
    }
  }
}

OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *new_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentInfo_withNSString_withOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneStoreIOContext_withNSString_withOrgApacheLuceneCodecsCompressingCompressionMode_(OrgApacheLuceneStoreDirectory *d, OrgApacheLuceneIndexSegmentInfo *si, NSString *segmentSuffix, OrgApacheLuceneIndexFieldInfos *fn, OrgApacheLuceneStoreIOContext *context, NSString *formatName, OrgApacheLuceneCodecsCompressingCompressionMode *compressionMode) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader, initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentInfo_withNSString_withOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneStoreIOContext_withNSString_withOrgApacheLuceneCodecsCompressingCompressionMode_, d, si, segmentSuffix, fn, context, formatName, compressionMode)
}

OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *create_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentInfo_withNSString_withOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneStoreIOContext_withNSString_withOrgApacheLuceneCodecsCompressingCompressionMode_(OrgApacheLuceneStoreDirectory *d, OrgApacheLuceneIndexSegmentInfo *si, NSString *segmentSuffix, OrgApacheLuceneIndexFieldInfos *fn, OrgApacheLuceneStoreIOContext *context, NSString *formatName, OrgApacheLuceneCodecsCompressingCompressionMode *compressionMode) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader, initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentInfo_withNSString_withOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneStoreIOContext_withNSString_withOrgApacheLuceneCodecsCompressingCompressionMode_, d, si, segmentSuffix, fn, context, formatName, compressionMode)
}

void OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_ensureOpen(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *self) {
  if (self->closed_) {
    @throw create_OrgApacheLuceneStoreAlreadyClosedException_initWithNSString_(@"this FieldsReader is closed");
  }
}

void OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_readFieldWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneIndexStoredFieldVisitor_withOrgApacheLuceneIndexFieldInfo_withInt_(OrgApacheLuceneStoreDataInput *inArg, OrgApacheLuceneIndexStoredFieldVisitor *visitor, OrgApacheLuceneIndexFieldInfo *info, jint bits) {
  OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_initialize();
  {
    jint length;
    IOSByteArray *data;
    switch (bits & JreLoadStatic(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter, TYPE_MASK)) {
      case OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_BYTE_ARR:
      length = [((OrgApacheLuceneStoreDataInput *) nil_chk(inArg)) readVInt];
      data = [IOSByteArray arrayWithLength:length];
      [inArg readBytesWithByteArray:data withInt:0 withInt:length];
      [((OrgApacheLuceneIndexStoredFieldVisitor *) nil_chk(visitor)) binaryFieldWithOrgApacheLuceneIndexFieldInfo:info withByteArray:data];
      break;
      case OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_STRING:
      length = [((OrgApacheLuceneStoreDataInput *) nil_chk(inArg)) readVInt];
      data = [IOSByteArray arrayWithLength:length];
      [inArg readBytesWithByteArray:data withInt:0 withInt:length];
      [((OrgApacheLuceneIndexStoredFieldVisitor *) nil_chk(visitor)) stringFieldWithOrgApacheLuceneIndexFieldInfo:info withByteArray:data];
      break;
      case OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_NUMERIC_INT:
      [((OrgApacheLuceneIndexStoredFieldVisitor *) nil_chk(visitor)) intFieldWithOrgApacheLuceneIndexFieldInfo:info withInt:[((OrgApacheLuceneStoreDataInput *) nil_chk(inArg)) readZInt]];
      break;
      case OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_NUMERIC_FLOAT:
      [((OrgApacheLuceneIndexStoredFieldVisitor *) nil_chk(visitor)) floatFieldWithOrgApacheLuceneIndexFieldInfo:info withFloat:OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_readZFloatWithOrgApacheLuceneStoreDataInput_(inArg)];
      break;
      case OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_NUMERIC_LONG:
      [((OrgApacheLuceneIndexStoredFieldVisitor *) nil_chk(visitor)) longFieldWithOrgApacheLuceneIndexFieldInfo:info withLong:OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_readTLongWithOrgApacheLuceneStoreDataInput_(inArg)];
      break;
      case OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_NUMERIC_DOUBLE:
      [((OrgApacheLuceneIndexStoredFieldVisitor *) nil_chk(visitor)) doubleFieldWithOrgApacheLuceneIndexFieldInfo:info withDouble:OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_readZDoubleWithOrgApacheLuceneStoreDataInput_(inArg)];
      break;
      default:
      @throw create_JavaLangAssertionError_initWithId_(JreStrcat("$$", @"Unknown type flag: ", JavaLangInteger_toHexStringWithInt_(bits)));
    }
  }
}

void OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_skipFieldWithOrgApacheLuceneStoreDataInput_withInt_(OrgApacheLuceneStoreDataInput *inArg, jint bits) {
  OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_initialize();
  {
    jint length;
    switch (bits & JreLoadStatic(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter, TYPE_MASK)) {
      case OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_BYTE_ARR:
      case OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_STRING:
      length = [((OrgApacheLuceneStoreDataInput *) nil_chk(inArg)) readVInt];
      [inArg skipBytesWithLong:length];
      break;
      case OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_NUMERIC_INT:
      [((OrgApacheLuceneStoreDataInput *) nil_chk(inArg)) readZInt];
      break;
      case OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_NUMERIC_FLOAT:
      OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_readZFloatWithOrgApacheLuceneStoreDataInput_(inArg);
      break;
      case OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_NUMERIC_LONG:
      OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_readTLongWithOrgApacheLuceneStoreDataInput_(inArg);
      break;
      case OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_NUMERIC_DOUBLE:
      OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_readZDoubleWithOrgApacheLuceneStoreDataInput_(inArg);
      break;
      default:
      @throw create_JavaLangAssertionError_initWithId_(JreStrcat("$$", @"Unknown type flag: ", JavaLangInteger_toHexStringWithInt_(bits)));
    }
  }
}

jfloat OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_readZFloatWithOrgApacheLuceneStoreDataInput_(OrgApacheLuceneStoreDataInput *inArg) {
  OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_initialize();
  jint b = [((OrgApacheLuceneStoreDataInput *) nil_chk(inArg)) readByte] & (jint) 0xFF;
  if (b == (jint) 0xFF) {
    return JavaLangFloat_intBitsToFloatWithInt_([inArg readInt]);
  }
  else if ((b & (jint) 0x80) != 0) {
    return (b & (jint) 0x7f) - 1;
  }
  else {
    jint bits = (JreLShift32(b, 24)) | (JreLShift32(([inArg readShort] & (jint) 0xFFFF), 8)) | ([inArg readByte] & (jint) 0xFF);
    return JavaLangFloat_intBitsToFloatWithInt_(bits);
  }
}

jdouble OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_readZDoubleWithOrgApacheLuceneStoreDataInput_(OrgApacheLuceneStoreDataInput *inArg) {
  OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_initialize();
  jint b = [((OrgApacheLuceneStoreDataInput *) nil_chk(inArg)) readByte] & (jint) 0xFF;
  if (b == (jint) 0xFF) {
    return JavaLangDouble_longBitsToDoubleWithLong_([inArg readLong]);
  }
  else if (b == (jint) 0xFE) {
    return JavaLangFloat_intBitsToFloatWithInt_([inArg readInt]);
  }
  else if ((b & (jint) 0x80) != 0) {
    return (b & (jint) 0x7f) - 1;
  }
  else {
    jlong bits = (JreLShift64(((jlong) b), 56)) | (JreLShift64(([inArg readInt] & (jlong) 0xFFFFFFFFLL), 24)) | (JreLShift64(([inArg readShort] & (jlong) 0xFFFFLL), 8)) | ([inArg readByte] & (jlong) 0xFFLL);
    return JavaLangDouble_longBitsToDoubleWithLong_(bits);
  }
}

jlong OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_readTLongWithOrgApacheLuceneStoreDataInput_(OrgApacheLuceneStoreDataInput *inArg) {
  OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_initialize();
  jint header = [((OrgApacheLuceneStoreDataInput *) nil_chk(inArg)) readByte] & (jint) 0xFF;
  jlong bits = header & (jint) 0x1F;
  if ((header & (jint) 0x20) != 0) {
    bits |= JreLShift64([inArg readVLong], 5);
  }
  jlong l = OrgApacheLuceneUtilBitUtil_zigZagDecodeWithLong_(bits);
  switch (header & OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_DAY_ENCODING) {
    case OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_SECOND_ENCODING:
    l *= OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_SECOND;
    break;
    case OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_HOUR_ENCODING:
    l *= OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_HOUR;
    break;
    case OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_DAY_ENCODING:
    l *= OrgApacheLuceneCodecsCompressingCompressingStoredFieldsWriter_DAY;
    break;
    case 0:
    break;
    default:
    @throw create_JavaLangAssertionError_init();
  }
  return l;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader)

@implementation OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument

- (instancetype)initWithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)inArg
                                              withInt:(jint)length
                                              withInt:(jint)numStoredFields {
  OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument_initWithOrgApacheLuceneStoreDataInput_withInt_withInt_(self, inArg, length, numStoredFields);
  return self;
}

- (void)dealloc {
  RELEASE_(in_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneStoreDataInput:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "in_", "LOrgApacheLuceneStoreDataInput;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "length_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "numStoredFields_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneStoreDataInput;II", "LOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader;" };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument = { "SerializedDocument", "org.apache.lucene.codecs.compressing", ptrTable, methods, fields, 7, 0x8, 1, 3, 1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument;
}

@end

void OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument_initWithOrgApacheLuceneStoreDataInput_withInt_withInt_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument *self, OrgApacheLuceneStoreDataInput *inArg, jint length, jint numStoredFields) {
  NSObject_init(self);
  JreStrongAssign(&self->in_, inArg);
  self->length_ = length;
  self->numStoredFields_ = numStoredFields;
}

OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument *new_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument_initWithOrgApacheLuceneStoreDataInput_withInt_withInt_(OrgApacheLuceneStoreDataInput *inArg, jint length, jint numStoredFields) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument, initWithOrgApacheLuceneStoreDataInput_withInt_withInt_, inArg, length, numStoredFields)
}

OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument *create_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument_initWithOrgApacheLuceneStoreDataInput_withInt_withInt_(OrgApacheLuceneStoreDataInput *inArg, jint length, jint numStoredFields) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument, initWithOrgApacheLuceneStoreDataInput_withInt_withInt_, inArg, length, numStoredFields)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument)

@implementation OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState

- (instancetype)initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader:(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *)outer$ {
  OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_(self, outer$);
  return self;
}

- (jboolean)containsWithInt:(jint)docID {
  return docID >= docBase_ && docID < docBase_ + chunkDocs_;
}

- (void)resetWithInt:(jint)docID {
  jboolean success = false;
  @try {
    OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_doResetWithInt_(self, docID);
    success = true;
  }
  @finally {
    if (success == false) {
      chunkDocs_ = 0;
    }
  }
}

- (void)doResetWithInt:(jint)docID {
  OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_doResetWithInt_(self, docID);
}

- (OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument *)documentWithInt:(jint)docID {
  if ([self containsWithInt:docID] == false) {
    @throw create_JavaLangIllegalArgumentException_init();
  }
  jint index = docID - docBase_;
  jint offset = IOSIntArray_Get(nil_chk(offsets_), index);
  jint length = IOSIntArray_Get(offsets_, index + 1) - offset;
  jint totalLength = IOSIntArray_Get(offsets_, chunkDocs_);
  jint numStoredFields = IOSIntArray_Get(nil_chk(self->numStoredFields_), index);
  OrgApacheLuceneStoreDataInput *documentInput;
  if (length == 0) {
    documentInput = create_OrgApacheLuceneStoreByteArrayDataInput_init();
  }
  else if (this$0_->merging_) {
    documentInput = create_OrgApacheLuceneStoreByteArrayDataInput_initWithByteArray_withInt_withInt_(((OrgApacheLuceneUtilBytesRef *) nil_chk(bytes_))->bytes_, bytes_->offset_ + offset, length);
  }
  else if (sliced_) {
    [((OrgApacheLuceneStoreIndexInput *) nil_chk(this$0_->fieldsStream_)) seekWithLong:startPointer_];
    [((OrgApacheLuceneCodecsCompressingDecompressor *) nil_chk(this$0_->decompressor_)) decompressWithOrgApacheLuceneStoreDataInput:this$0_->fieldsStream_ withInt:this$0_->chunkSize_ withInt:offset withInt:JavaLangMath_minWithInt_withInt_(length, this$0_->chunkSize_ - offset) withOrgApacheLuceneUtilBytesRef:bytes_];
    documentInput = create_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_1_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_withInt_(self, length);
  }
  else {
    [((OrgApacheLuceneStoreIndexInput *) nil_chk(this$0_->fieldsStream_)) seekWithLong:startPointer_];
    [((OrgApacheLuceneCodecsCompressingDecompressor *) nil_chk(this$0_->decompressor_)) decompressWithOrgApacheLuceneStoreDataInput:this$0_->fieldsStream_ withInt:totalLength withInt:offset withInt:length withOrgApacheLuceneUtilBytesRef:bytes_];
    JreAssert(((OrgApacheLuceneUtilBytesRef *) nil_chk(bytes_))->length_ == length, @"org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader.java:565 condition failed: assert bytes.length == length;");
    documentInput = create_OrgApacheLuceneStoreByteArrayDataInput_initWithByteArray_withInt_withInt_(bytes_->bytes_, bytes_->offset_, bytes_->length_);
  }
  return create_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument_initWithOrgApacheLuceneStoreDataInput_withInt_withInt_(documentInput, length, numStoredFields);
}

- (void)__javaClone:(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState *)original {
  [super __javaClone:original];
  [this$0_ release];
}

- (void)dealloc {
  RELEASE_(offsets_);
  RELEASE_(numStoredFields_);
  RELEASE_(spare_);
  RELEASE_(bytes_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 3, 2, 4, -1, -1, -1 },
    { NULL, "V", 0x2, 5, 2, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_SerializedDocument;", 0x0, 6, 2, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader:);
  methods[1].selector = @selector(containsWithInt:);
  methods[2].selector = @selector(resetWithInt:);
  methods[3].selector = @selector(doResetWithInt:);
  methods[4].selector = @selector(documentWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "docBase_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "chunkDocs_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sliced_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "offsets_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "numStoredFields_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "startPointer_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "spare_", "LOrgApacheLuceneUtilBytesRef;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "bytes_", "LOrgApacheLuceneUtilBytesRef;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader;", "contains", "I", "reset", "LJavaIoIOException;", "doReset", "document" };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState = { "BlockState", "org.apache.lucene.codecs.compressing", ptrTable, methods, fields, 7, 0x2, 5, 9, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState;
}

@end

void OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState *self, OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
  JreStrongAssign(&self->offsets_, JreLoadStatic(OrgApacheLuceneUtilIntsRef, EMPTY_INTS));
  JreStrongAssign(&self->numStoredFields_, JreLoadStatic(OrgApacheLuceneUtilIntsRef, EMPTY_INTS));
  JreStrongAssignAndConsume(&self->spare_, new_OrgApacheLuceneUtilBytesRef_init());
  JreStrongAssignAndConsume(&self->bytes_, new_OrgApacheLuceneUtilBytesRef_init());
}

OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState *new_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState, initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_, outer$)
}

OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState *create_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState, initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_, outer$)
}

void OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_doResetWithInt_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState *self, jint docID) {
  self->docBase_ = [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->this$0_->fieldsStream_)) readVInt];
  jint token = [self->this$0_->fieldsStream_ readVInt];
  self->chunkDocs_ = JreURShift32(token, 1);
  if ([self containsWithInt:docID] == false || self->docBase_ + self->chunkDocs_ > self->this$0_->numDocs_) {
    @throw create_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_(JreStrcat("$I$I$I$I", @"Corrupted: docID=", docID, @", docBase=", self->docBase_, @", chunkDocs=", self->chunkDocs_, @", numDocs=", self->this$0_->numDocs_), self->this$0_->fieldsStream_);
  }
  self->sliced_ = ((token & 1) != 0);
  JreStrongAssign(&self->offsets_, OrgApacheLuceneUtilArrayUtil_growWithIntArray_withInt_(self->offsets_, self->chunkDocs_ + 1));
  JreStrongAssign(&self->numStoredFields_, OrgApacheLuceneUtilArrayUtil_growWithIntArray_withInt_(self->numStoredFields_, self->chunkDocs_));
  if (self->chunkDocs_ == 1) {
    *IOSIntArray_GetRef(nil_chk(self->numStoredFields_), 0) = [self->this$0_->fieldsStream_ readVInt];
    *IOSIntArray_GetRef(nil_chk(self->offsets_), 1) = [self->this$0_->fieldsStream_ readVInt];
  }
  else {
    jint bitsPerStoredFields = [self->this$0_->fieldsStream_ readVInt];
    if (bitsPerStoredFields == 0) {
      JavaUtilArrays_fillWithIntArray_withInt_withInt_withInt_(self->numStoredFields_, 0, self->chunkDocs_, [self->this$0_->fieldsStream_ readVInt]);
    }
    else if (bitsPerStoredFields > 31) {
      @throw create_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_(JreStrcat("$I", @"bitsPerStoredFields=", bitsPerStoredFields), self->this$0_->fieldsStream_);
    }
    else {
      id<OrgApacheLuceneUtilPackedPackedInts_ReaderIterator> it = OrgApacheLuceneUtilPackedPackedInts_getReaderIteratorNoHeaderWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilPackedPackedInts_Format_withInt_withInt_withInt_withInt_(self->this$0_->fieldsStream_, JreLoadEnum(OrgApacheLuceneUtilPackedPackedInts_Format, PACKED), self->this$0_->packedIntsVersion_, self->chunkDocs_, bitsPerStoredFields, 1);
      for (jint i = 0; i < self->chunkDocs_; ++i) {
        *IOSIntArray_GetRef(nil_chk(self->numStoredFields_), i) = (jint) [((id<OrgApacheLuceneUtilPackedPackedInts_ReaderIterator>) nil_chk(it)) next];
      }
    }
    jint bitsPerLength = [self->this$0_->fieldsStream_ readVInt];
    if (bitsPerLength == 0) {
      jint length = [self->this$0_->fieldsStream_ readVInt];
      for (jint i = 0; i < self->chunkDocs_; ++i) {
        *IOSIntArray_GetRef(nil_chk(self->offsets_), 1 + i) = (1 + i) * length;
      }
    }
    else if (bitsPerStoredFields > 31) {
      @throw create_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_(JreStrcat("$I", @"bitsPerLength=", bitsPerLength), self->this$0_->fieldsStream_);
    }
    else {
      id<OrgApacheLuceneUtilPackedPackedInts_ReaderIterator> it = OrgApacheLuceneUtilPackedPackedInts_getReaderIteratorNoHeaderWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilPackedPackedInts_Format_withInt_withInt_withInt_withInt_(self->this$0_->fieldsStream_, JreLoadEnum(OrgApacheLuceneUtilPackedPackedInts_Format, PACKED), self->this$0_->packedIntsVersion_, self->chunkDocs_, bitsPerLength, 1);
      for (jint i = 0; i < self->chunkDocs_; ++i) {
        *IOSIntArray_GetRef(nil_chk(self->offsets_), i + 1) = (jint) [((id<OrgApacheLuceneUtilPackedPackedInts_ReaderIterator>) nil_chk(it)) next];
      }
      for (jint i = 0; i < self->chunkDocs_; ++i) {
        *IOSIntArray_GetRef(nil_chk(self->offsets_), i + 1) += IOSIntArray_Get(self->offsets_, i);
      }
    }
    for (jint i = 0; i < self->chunkDocs_; ++i) {
      jint len = IOSIntArray_Get(nil_chk(self->offsets_), i + 1) - IOSIntArray_Get(self->offsets_, i);
      jint storedFields = IOSIntArray_Get(nil_chk(self->numStoredFields_), i);
      if ((len == 0) != (storedFields == 0)) {
        @throw create_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_(JreStrcat("$I$I", @"length=", len, @", numStoredFields=", storedFields), self->this$0_->fieldsStream_);
      }
    }
  }
  self->startPointer_ = [self->this$0_->fieldsStream_ getFilePointer];
  if (self->this$0_->merging_) {
    jint totalLength = IOSIntArray_Get(nil_chk(self->offsets_), self->chunkDocs_);
    if (self->sliced_) {
      ((OrgApacheLuceneUtilBytesRef *) nil_chk(self->bytes_))->offset_ = self->bytes_->length_ = 0;
      for (jint decompressed = 0; decompressed < totalLength; ) {
        jint toDecompress = JavaLangMath_minWithInt_withInt_(totalLength - decompressed, self->this$0_->chunkSize_);
        [((OrgApacheLuceneCodecsCompressingDecompressor *) nil_chk(self->this$0_->decompressor_)) decompressWithOrgApacheLuceneStoreDataInput:self->this$0_->fieldsStream_ withInt:toDecompress withInt:0 withInt:toDecompress withOrgApacheLuceneUtilBytesRef:self->spare_];
        JreStrongAssign(&self->bytes_->bytes_, OrgApacheLuceneUtilArrayUtil_growWithByteArray_withInt_(self->bytes_->bytes_, self->bytes_->length_ + ((OrgApacheLuceneUtilBytesRef *) nil_chk(self->spare_))->length_));
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(self->spare_->bytes_, self->spare_->offset_, self->bytes_->bytes_, self->bytes_->length_, self->spare_->length_);
        self->bytes_->length_ += self->spare_->length_;
        decompressed += toDecompress;
      }
    }
    else {
      [((OrgApacheLuceneCodecsCompressingDecompressor *) nil_chk(self->this$0_->decompressor_)) decompressWithOrgApacheLuceneStoreDataInput:self->this$0_->fieldsStream_ withInt:totalLength withInt:0 withInt:totalLength withOrgApacheLuceneUtilBytesRef:self->bytes_];
    }
    if (((OrgApacheLuceneUtilBytesRef *) nil_chk(self->bytes_))->length_ != totalLength) {
      @throw create_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_(JreStrcat("$I$I", @"Corrupted: expected chunk size = ", totalLength, @", got ", self->bytes_->length_), self->this$0_->fieldsStream_);
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState)

@implementation OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_1

- (instancetype)initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState:(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState *)outer$
                                                                                         withInt:(jint)capture$0 {
  OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_1_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_withInt_(self, outer$, capture$0);
  return self;
}

- (void)fillBuffer {
  JreAssert(decompressed_ <= val$length_, @"org/apache/lucene/codecs/compressing/CompressingStoredFieldsReader.java:530 condition failed: assert decompressed <= length;");
  if (decompressed_ == val$length_) {
    @throw create_JavaIoEOFException_init();
  }
  jint toDecompress = JavaLangMath_minWithInt_withInt_(val$length_ - decompressed_, this$0_->this$0_->chunkSize_);
  [((OrgApacheLuceneCodecsCompressingDecompressor *) nil_chk(this$0_->this$0_->decompressor_)) decompressWithOrgApacheLuceneStoreDataInput:this$0_->this$0_->fieldsStream_ withInt:toDecompress withInt:0 withInt:toDecompress withOrgApacheLuceneUtilBytesRef:this$0_->bytes_];
  decompressed_ += toDecompress;
}

- (jbyte)readByte {
  if (((OrgApacheLuceneUtilBytesRef *) nil_chk(this$0_->bytes_))->length_ == 0) {
    [self fillBuffer];
  }
  --this$0_->bytes_->length_;
  return IOSByteArray_Get(nil_chk(this$0_->bytes_->bytes_), this$0_->bytes_->offset_++);
}

- (void)readBytesWithByteArray:(IOSByteArray *)b
                       withInt:(jint)offset
                       withInt:(jint)len {
  while (len > ((OrgApacheLuceneUtilBytesRef *) nil_chk(this$0_->bytes_))->length_) {
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(this$0_->bytes_->bytes_, this$0_->bytes_->offset_, b, offset, this$0_->bytes_->length_);
    len -= this$0_->bytes_->length_;
    offset += this$0_->bytes_->length_;
    [self fillBuffer];
  }
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(this$0_->bytes_->bytes_, this$0_->bytes_->offset_, b, offset, len);
  this$0_->bytes_->offset_ += len;
  this$0_->bytes_->length_ -= len;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, 1, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState:withInt:);
  methods[1].selector = @selector(fillBuffer);
  methods[2].selector = @selector(readByte);
  methods[3].selector = @selector(readBytesWithByteArray:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$length_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "decompressed_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState;I", "LJavaIoIOException;", "readBytes", "[BII", "LOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState;", "documentWithInt:" };
  static const J2ObjcClassInfo _OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_1 = { "", "org.apache.lucene.codecs.compressing", ptrTable, methods, fields, 7, 0x8010, 4, 3, 4, -1, 5, -1, -1 };
  return &_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_1;
}

@end

void OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_1_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_withInt_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_1 *self, OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState *outer$, jint capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  self->val$length_ = capture$0;
  OrgApacheLuceneStoreDataInput_init(self);
  self->decompressed_ = ((OrgApacheLuceneUtilBytesRef *) nil_chk(outer$->bytes_))->length_;
}

OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_1 *new_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_1_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_withInt_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState *outer$, jint capture$0) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_1, initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_withInt_, outer$, capture$0)
}

OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_1 *create_OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_1_initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_withInt_(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState *outer$, jint capture$0) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_1, initWithOrgApacheLuceneCodecsCompressingCompressingStoredFieldsReader_BlockState_withInt_, outer$, capture$0)
}
