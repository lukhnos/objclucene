//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./sandbox/src/java/org/apache/lucene/rangetree/RangeTreeWriter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/Throwable.h"
#include "java/util/Arrays.h"
#include "java/util/Comparator.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"
#include "org/apache/lucene/rangetree/GrowingHeapSliceWriter.h"
#include "org/apache/lucene/rangetree/HeapSliceWriter.h"
#include "org/apache/lucene/rangetree/OfflineSliceWriter.h"
#include "org/apache/lucene/rangetree/RangeTreeWriter.h"
#include "org/apache/lucene/rangetree/SliceReader.h"
#include "org/apache/lucene/rangetree/SliceWriter.h"
#include "org/apache/lucene/store/ByteArrayDataInput.h"
#include "org/apache/lucene/store/ByteArrayDataOutput.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/InPlaceMergeSorter.h"
#include "org/apache/lucene/util/OfflineSorter.h"
#include "org/lukhnos/portmobile/file/DirectoryStream.h"
#include "org/lukhnos/portmobile/file/Files.h"
#include "org/lukhnos/portmobile/file/Path.h"

@class OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice;

#if __has_feature(objc_arc)
#error "org/apache/lucene/rangetree/RangeTreeWriter must not be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgApacheLuceneRangetreeRangeTreeWriter () {
 @public
  IOSByteArray *scratchBytes_;
  OrgApacheLuceneStoreByteArrayDataOutput *scratchBytesOutput_;
  OrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter *writer_;
  OrgApacheLuceneRangetreeGrowingHeapSliceWriter *heapWriter_;
  OrgLukhnosPortmobileFilePath *tempInput_;
  OrgLukhnosPortmobileFilePath *tempDir_;
  jint maxValuesInLeafNode_;
  jint maxValuesSortInHeap_;
  jlong valueCount_;
  jlong globalMinValue_;
  jlong globalMaxValue_;
}

/*!
 @brief If the current segment has too many points then we switchover to temp files / offline sort.
 */
- (void)switchToOffline;

/*!
 @brief Changes incoming <code>ByteSequencesWriter</code> file to to fixed-width-per-entry file, because we need to be able to slice
   as we recurse in <code>build</code>.
 */
- (id<OrgApacheLuceneRangetreeSliceWriter>)convertToFixedWidthWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)inArg;

- (id<OrgApacheLuceneRangetreeSliceWriter>)sort;

- (jboolean)directoryIsEmptyWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)inArg;

- (jlong)getSplitValueWithOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice:(OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *)source
                                                                   withLong:(jlong)leftCount
                                                                   withLong:(jlong)minValue
                                                                   withLong:(jlong)maxValue;

/*!
 @brief The incoming PathSlice for the dim we will split is already partitioned/sorted.
 */
- (void)buildWithInt:(jint)nodeID
             withInt:(jint)leafNodeOffset
withOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice:(OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *)source
withOrgApacheLuceneStoreIndexOutput:(OrgApacheLuceneStoreIndexOutput *)outArg
            withLong:(jlong)minValue
            withLong:(jlong)maxValue
       withLongArray:(IOSLongArray *)blockMinValues
       withLongArray:(IOSLongArray *)leafBlockFPs;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneRangetreeRangeTreeWriter, scratchBytes_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneRangetreeRangeTreeWriter, scratchBytesOutput_, OrgApacheLuceneStoreByteArrayDataOutput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneRangetreeRangeTreeWriter, writer_, OrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneRangetreeRangeTreeWriter, heapWriter_, OrgApacheLuceneRangetreeGrowingHeapSliceWriter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneRangetreeRangeTreeWriter, tempInput_, OrgLukhnosPortmobileFilePath *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneRangetreeRangeTreeWriter, tempDir_, OrgLukhnosPortmobileFilePath *)

__attribute__((unused)) static void OrgApacheLuceneRangetreeRangeTreeWriter_switchToOffline(OrgApacheLuceneRangetreeRangeTreeWriter *self);

__attribute__((unused)) static id<OrgApacheLuceneRangetreeSliceWriter> OrgApacheLuceneRangetreeRangeTreeWriter_convertToFixedWidthWithOrgLukhnosPortmobileFilePath_(OrgApacheLuceneRangetreeRangeTreeWriter *self, OrgLukhnosPortmobileFilePath *inArg);

__attribute__((unused)) static id<OrgApacheLuceneRangetreeSliceWriter> OrgApacheLuceneRangetreeRangeTreeWriter_sort(OrgApacheLuceneRangetreeRangeTreeWriter *self);

__attribute__((unused)) static jboolean OrgApacheLuceneRangetreeRangeTreeWriter_directoryIsEmptyWithOrgLukhnosPortmobileFilePath_(OrgApacheLuceneRangetreeRangeTreeWriter *self, OrgLukhnosPortmobileFilePath *inArg);

__attribute__((unused)) static jlong OrgApacheLuceneRangetreeRangeTreeWriter_getSplitValueWithOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_withLong_withLong_withLong_(OrgApacheLuceneRangetreeRangeTreeWriter *self, OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *source, jlong leftCount, jlong minValue, jlong maxValue);

__attribute__((unused)) static void OrgApacheLuceneRangetreeRangeTreeWriter_buildWithInt_withInt_withOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_withOrgApacheLuceneStoreIndexOutput_withLong_withLong_withLongArray_withLongArray_(OrgApacheLuceneRangetreeRangeTreeWriter *self, jint nodeID, jint leafNodeOffset, OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *source, OrgApacheLuceneStoreIndexOutput *outArg, jlong minValue, jlong maxValue, IOSLongArray *blockMinValues, IOSLongArray *leafBlockFPs);

@interface OrgApacheLuceneRangetreeRangeTreeWriter_1 : OrgApacheLuceneUtilInPlaceMergeSorter {
 @public
  OrgApacheLuceneRangetreeRangeTreeWriter *this$0_;
}

- (instancetype)initWithOrgApacheLuceneRangetreeRangeTreeWriter:(OrgApacheLuceneRangetreeRangeTreeWriter *)outer$;

- (void)swapWithInt:(jint)i
            withInt:(jint)j;

- (jint)compareWithInt:(jint)i
               withInt:(jint)j;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneRangetreeRangeTreeWriter_1)

__attribute__((unused)) static void OrgApacheLuceneRangetreeRangeTreeWriter_1_initWithOrgApacheLuceneRangetreeRangeTreeWriter_(OrgApacheLuceneRangetreeRangeTreeWriter_1 *self, OrgApacheLuceneRangetreeRangeTreeWriter *outer$);

__attribute__((unused)) static OrgApacheLuceneRangetreeRangeTreeWriter_1 *new_OrgApacheLuceneRangetreeRangeTreeWriter_1_initWithOrgApacheLuceneRangetreeRangeTreeWriter_(OrgApacheLuceneRangetreeRangeTreeWriter *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneRangetreeRangeTreeWriter_1 *create_OrgApacheLuceneRangetreeRangeTreeWriter_1_initWithOrgApacheLuceneRangetreeRangeTreeWriter_(OrgApacheLuceneRangetreeRangeTreeWriter *outer$);

@interface OrgApacheLuceneRangetreeRangeTreeWriter_2 : NSObject < JavaUtilComparator > {
 @public
  OrgApacheLuceneStoreByteArrayDataInput *val$reader_;
  OrgApacheLuceneStoreByteArrayDataInput *readerB_;
}

- (instancetype)initWithOrgApacheLuceneStoreByteArrayDataInput:(OrgApacheLuceneStoreByteArrayDataInput *)capture$0;

- (jint)compareWithId:(OrgApacheLuceneUtilBytesRef *)a
               withId:(OrgApacheLuceneUtilBytesRef *)b;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneRangetreeRangeTreeWriter_2)

J2OBJC_FIELD_SETTER(OrgApacheLuceneRangetreeRangeTreeWriter_2, readerB_, OrgApacheLuceneStoreByteArrayDataInput *)

__attribute__((unused)) static void OrgApacheLuceneRangetreeRangeTreeWriter_2_initWithOrgApacheLuceneStoreByteArrayDataInput_(OrgApacheLuceneRangetreeRangeTreeWriter_2 *self, OrgApacheLuceneStoreByteArrayDataInput *capture$0);

__attribute__((unused)) static OrgApacheLuceneRangetreeRangeTreeWriter_2 *new_OrgApacheLuceneRangetreeRangeTreeWriter_2_initWithOrgApacheLuceneStoreByteArrayDataInput_(OrgApacheLuceneStoreByteArrayDataInput *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneRangetreeRangeTreeWriter_2 *create_OrgApacheLuceneRangetreeRangeTreeWriter_2_initWithOrgApacheLuceneStoreByteArrayDataInput_(OrgApacheLuceneStoreByteArrayDataInput *capture$0);

/*!
 @brief Sliced reference to points in an OfflineSorter.ByteSequencesWriter file.
 */
@interface OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice : NSObject {
 @public
  id<OrgApacheLuceneRangetreeSliceWriter> writer_;
  jlong start_;
  jlong count_;
}

- (instancetype)initWithOrgApacheLuceneRangetreeSliceWriter:(id<OrgApacheLuceneRangetreeSliceWriter>)writer
                                                   withLong:(jlong)start
                                                   withLong:(jlong)count;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice)

J2OBJC_FIELD_SETTER(OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice, writer_, id<OrgApacheLuceneRangetreeSliceWriter>)

__attribute__((unused)) static void OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_(OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *self, id<OrgApacheLuceneRangetreeSliceWriter> writer, jlong start, jlong count);

__attribute__((unused)) static OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *new_OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_(id<OrgApacheLuceneRangetreeSliceWriter> writer, jlong start, jlong count) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *create_OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_(id<OrgApacheLuceneRangetreeSliceWriter> writer, jlong start, jlong count);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice)

@implementation OrgApacheLuceneRangetreeRangeTreeWriter

+ (jint)BYTES_PER_DOC {
  return OrgApacheLuceneRangetreeRangeTreeWriter_BYTES_PER_DOC;
}

+ (jint)DEFAULT_MAX_VALUES_IN_LEAF_NODE {
  return OrgApacheLuceneRangetreeRangeTreeWriter_DEFAULT_MAX_VALUES_IN_LEAF_NODE;
}

+ (jint)DEFAULT_MAX_VALUES_SORT_IN_HEAP {
  return OrgApacheLuceneRangetreeRangeTreeWriter_DEFAULT_MAX_VALUES_SORT_IN_HEAP;
}

- (instancetype)initPackagePrivate {
  OrgApacheLuceneRangetreeRangeTreeWriter_initPackagePrivate(self);
  return self;
}

- (instancetype)initPackagePrivateWithInt:(jint)maxValuesInLeafNode
                                  withInt:(jint)maxValuesSortInHeap {
  OrgApacheLuceneRangetreeRangeTreeWriter_initPackagePrivateWithInt_withInt_(self, maxValuesInLeafNode, maxValuesSortInHeap);
  return self;
}

+ (void)verifyParamsWithInt:(jint)maxValuesInLeafNode
                    withInt:(jint)maxValuesSortInHeap {
  OrgApacheLuceneRangetreeRangeTreeWriter_verifyParamsWithInt_withInt_(maxValuesInLeafNode, maxValuesSortInHeap);
}

- (void)switchToOffline {
  OrgApacheLuceneRangetreeRangeTreeWriter_switchToOffline(self);
}

- (void)addWithLong:(jlong)value
            withInt:(jint)docID {
  if (valueCount_ >= maxValuesSortInHeap_) {
    if (writer_ == nil) {
      OrgApacheLuceneRangetreeRangeTreeWriter_switchToOffline(self);
    }
    [((OrgApacheLuceneStoreByteArrayDataOutput *) nil_chk(scratchBytesOutput_)) resetWithByteArray:scratchBytes_];
    [scratchBytesOutput_ writeLongWithLong:value];
    [scratchBytesOutput_ writeVIntWithInt:docID];
    [scratchBytesOutput_ writeVLongWithLong:valueCount_];
    [((OrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter *) nil_chk(writer_)) writeWithByteArray:scratchBytes_ withInt:0 withInt:((IOSByteArray *) nil_chk(scratchBytes_))->size_];
  }
  else {
    [((OrgApacheLuceneRangetreeGrowingHeapSliceWriter *) nil_chk(heapWriter_)) appendWithLong:value withLong:valueCount_ withInt:docID];
  }
  valueCount_++;
  globalMaxValue_ = JavaLangMath_maxWithLong_withLong_(value, globalMaxValue_);
  globalMinValue_ = JavaLangMath_minWithLong_withLong_(value, globalMinValue_);
}

- (id<OrgApacheLuceneRangetreeSliceWriter>)convertToFixedWidthWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)inArg {
  return OrgApacheLuceneRangetreeRangeTreeWriter_convertToFixedWidthWithOrgLukhnosPortmobileFilePath_(self, inArg);
}

- (id<OrgApacheLuceneRangetreeSliceWriter>)sort {
  return OrgApacheLuceneRangetreeRangeTreeWriter_sort(self);
}

- (jlong)finishWithOrgApacheLuceneStoreIndexOutput:(OrgApacheLuceneStoreIndexOutput *)outArg {
  if (writer_ != nil) {
    [writer_ close];
  }
  if (valueCount_ == 0) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"at least one value must be indexed");
  }
  jlong countPerLeaf = valueCount_;
  jlong innerNodeCount = 1;
  while (countPerLeaf > maxValuesInLeafNode_) {
    countPerLeaf /= 2;
    innerNodeCount *= 2;
  }
  if (1 + 2 * innerNodeCount >= JavaLangInteger_MAX_VALUE) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I$", @"too many nodes; increase maxValuesInLeafNode (currently ", maxValuesInLeafNode_, @") and reindex"));
  }
  innerNodeCount--;
  jint numLeaves = (jint) (innerNodeCount + 1);
  IOSLongArray *blockMinValues = [IOSLongArray arrayWithLength:numLeaves];
  IOSLongArray *leafBlockFPs = [IOSLongArray arrayWithLength:numLeaves];
  JreAssert(JreLongDiv(valueCount_, blockMinValues->size_) <= maxValuesInLeafNode_, JreStrcat("$J$I$I", @"valueCount=", valueCount_, @" blockMinValues.length=", blockMinValues->size_, @" maxValuesInLeafNode=", maxValuesInLeafNode_));
  id<OrgApacheLuceneRangetreeSliceWriter> sortedWriter = nil;
  jboolean success = false;
  @try {
    sortedWriter = OrgApacheLuceneRangetreeRangeTreeWriter_sort(self);
    JreStrongAssign(&heapWriter_, nil);
    OrgApacheLuceneRangetreeRangeTreeWriter_buildWithInt_withInt_withOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_withOrgApacheLuceneStoreIndexOutput_withLong_withLong_withLongArray_withLongArray_(self, 1, numLeaves, create_OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_(sortedWriter, 0, valueCount_), outArg, globalMinValue_, globalMaxValue_, blockMinValues, leafBlockFPs);
    success = true;
  }
  @finally {
    if (success) {
      [((id<OrgApacheLuceneRangetreeSliceWriter>) nil_chk(sortedWriter)) destroy];
      OrgApacheLuceneUtilIOUtils_rmWithOrgLukhnosPortmobileFilePathArray_([IOSObjectArray arrayWithObjects:(id[]){ tempInput_ } count:1 type:OrgLukhnosPortmobileFilePath_class_()]);
    }
    else {
      @try {
        [((id<OrgApacheLuceneRangetreeSliceWriter>) nil_chk(sortedWriter)) destroy];
      }
      @catch (JavaLangThrowable *t) {
      }
      OrgApacheLuceneUtilIOUtils_deleteFilesIgnoringExceptionsWithOrgLukhnosPortmobileFilePathArray_([IOSObjectArray arrayWithObjects:(id[]){ tempInput_ } count:1 type:OrgLukhnosPortmobileFilePath_class_()]);
    }
  }
  jlong indexFP = [((OrgApacheLuceneStoreIndexOutput *) nil_chk(outArg)) getFilePointer];
  [outArg writeVIntWithInt:numLeaves];
  [outArg writeVIntWithInt:(jint) (JreLongDiv(valueCount_, numLeaves))];
  for (jint i = 0; i < blockMinValues->size_; i++) {
    [outArg writeLongWithLong:IOSLongArray_Get(blockMinValues, i)];
  }
  for (jint i = 0; i < leafBlockFPs->size_; i++) {
    [outArg writeVLongWithLong:IOSLongArray_Get(leafBlockFPs, i)];
  }
  [outArg writeLongWithLong:globalMaxValue_];
  if (tempDir_ != nil) {
    JreAssert(OrgApacheLuceneRangetreeRangeTreeWriter_directoryIsEmptyWithOrgLukhnosPortmobileFilePath_(self, tempDir_), @"org/apache/lucene/rangetree/RangeTreeWriter.java:391 condition failed: assert directoryIsEmpty(tempDir);");
    OrgApacheLuceneUtilIOUtils_rmWithOrgLukhnosPortmobileFilePathArray_([IOSObjectArray arrayWithObjects:(id[]){ tempDir_ } count:1 type:OrgLukhnosPortmobileFilePath_class_()]);
  }
  return indexFP;
}

- (jboolean)directoryIsEmptyWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)inArg {
  return OrgApacheLuceneRangetreeRangeTreeWriter_directoryIsEmptyWithOrgLukhnosPortmobileFilePath_(self, inArg);
}

- (jlong)getSplitValueWithOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice:(OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *)source
                                                                   withLong:(jlong)leftCount
                                                                   withLong:(jlong)minValue
                                                                   withLong:(jlong)maxValue {
  return OrgApacheLuceneRangetreeRangeTreeWriter_getSplitValueWithOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_withLong_withLong_withLong_(self, source, leftCount, minValue, maxValue);
}

- (void)buildWithInt:(jint)nodeID
             withInt:(jint)leafNodeOffset
withOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice:(OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *)source
withOrgApacheLuceneStoreIndexOutput:(OrgApacheLuceneStoreIndexOutput *)outArg
            withLong:(jlong)minValue
            withLong:(jlong)maxValue
       withLongArray:(IOSLongArray *)blockMinValues
       withLongArray:(IOSLongArray *)leafBlockFPs {
  OrgApacheLuceneRangetreeRangeTreeWriter_buildWithInt_withInt_withOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_withOrgApacheLuceneStoreIndexOutput_withLong_withLong_withLongArray_withLongArray_(self, nodeID, leafNodeOffset, source, outArg, minValue, maxValue, blockMinValues, leafBlockFPs);
}

- (id<OrgApacheLuceneRangetreeSliceWriter>)getWriterWithLong:(jlong)count {
  if (count < maxValuesSortInHeap_) {
    return create_OrgApacheLuceneRangetreeHeapSliceWriter_initPackagePrivateWithInt_((jint) count);
  }
  else {
    return create_OrgApacheLuceneRangetreeOfflineSliceWriter_initPackagePrivateWithOrgLukhnosPortmobileFilePath_withLong_(tempDir_, count);
  }
}

- (void)dealloc {
  RELEASE_(scratchBytes_);
  RELEASE_(scratchBytesOutput_);
  RELEASE_(writer_);
  RELEASE_(heapWriter_);
  RELEASE_(tempInput_);
  RELEASE_(tempDir_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, 0, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x0, 3, 4, 0, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneRangetreeSliceWriter;", 0x2, 5, 6, 0, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneRangetreeSliceWriter;", 0x2, -1, -1, 0, -1, -1, -1 },
    { NULL, "J", 0x1, 7, 8, 0, -1, -1, -1 },
    { NULL, "Z", 0x2, 9, 6, -1, -1, -1, -1 },
    { NULL, "J", 0x2, 10, 11, 0, -1, -1, -1 },
    { NULL, "V", 0x2, 12, 13, 0, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneRangetreeSliceWriter;", 0x0, 14, 15, 0, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(initPackagePrivateWithInt:withInt:);
  methods[2].selector = @selector(verifyParamsWithInt:withInt:);
  methods[3].selector = @selector(switchToOffline);
  methods[4].selector = @selector(addWithLong:withInt:);
  methods[5].selector = @selector(convertToFixedWidthWithOrgLukhnosPortmobileFilePath:);
  methods[6].selector = @selector(sort);
  methods[7].selector = @selector(finishWithOrgApacheLuceneStoreIndexOutput:);
  methods[8].selector = @selector(directoryIsEmptyWithOrgLukhnosPortmobileFilePath:);
  methods[9].selector = @selector(getSplitValueWithOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice:withLong:withLong:withLong:);
  methods[10].selector = @selector(buildWithInt:withInt:withOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice:withOrgApacheLuceneStoreIndexOutput:withLong:withLong:withLongArray:withLongArray:);
  methods[11].selector = @selector(getWriterWithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BYTES_PER_DOC", "I", .constantValue.asInt = OrgApacheLuceneRangetreeRangeTreeWriter_BYTES_PER_DOC, 0x18, -1, -1, -1, -1 },
    { "DEFAULT_MAX_VALUES_IN_LEAF_NODE", "I", .constantValue.asInt = OrgApacheLuceneRangetreeRangeTreeWriter_DEFAULT_MAX_VALUES_IN_LEAF_NODE, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_MAX_VALUES_SORT_IN_HEAP", "I", .constantValue.asInt = OrgApacheLuceneRangetreeRangeTreeWriter_DEFAULT_MAX_VALUES_SORT_IN_HEAP, 0x19, -1, -1, -1, -1 },
    { "scratchBytes_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "scratchBytesOutput_", "LOrgApacheLuceneStoreByteArrayDataOutput;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "writer_", "LOrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "heapWriter_", "LOrgApacheLuceneRangetreeGrowingHeapSliceWriter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "tempInput_", "LOrgLukhnosPortmobileFilePath;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "tempDir_", "LOrgLukhnosPortmobileFilePath;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "maxValuesInLeafNode_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "maxValuesSortInHeap_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "valueCount_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "globalMinValue_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "globalMaxValue_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoIOException;", "II", "verifyParams", "add", "JI", "convertToFixedWidth", "LOrgLukhnosPortmobileFilePath;", "finish", "LOrgApacheLuceneStoreIndexOutput;", "directoryIsEmpty", "getSplitValue", "LOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice;JJJ", "build", "IILOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice;LOrgApacheLuceneStoreIndexOutput;JJ[J[J", "getWriter", "J", "LOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice;" };
  static const J2ObjcClassInfo _OrgApacheLuceneRangetreeRangeTreeWriter = { "RangeTreeWriter", "org.apache.lucene.rangetree", ptrTable, methods, fields, 7, 0x0, 12, 14, -1, 16, -1, -1, -1 };
  return &_OrgApacheLuceneRangetreeRangeTreeWriter;
}

@end

void OrgApacheLuceneRangetreeRangeTreeWriter_initPackagePrivate(OrgApacheLuceneRangetreeRangeTreeWriter *self) {
  OrgApacheLuceneRangetreeRangeTreeWriter_initPackagePrivateWithInt_withInt_(self, OrgApacheLuceneRangetreeRangeTreeWriter_DEFAULT_MAX_VALUES_IN_LEAF_NODE, OrgApacheLuceneRangetreeRangeTreeWriter_DEFAULT_MAX_VALUES_SORT_IN_HEAP);
}

OrgApacheLuceneRangetreeRangeTreeWriter *new_OrgApacheLuceneRangetreeRangeTreeWriter_initPackagePrivate() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneRangetreeRangeTreeWriter, initPackagePrivate)
}

OrgApacheLuceneRangetreeRangeTreeWriter *create_OrgApacheLuceneRangetreeRangeTreeWriter_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneRangetreeRangeTreeWriter, initPackagePrivate)
}

void OrgApacheLuceneRangetreeRangeTreeWriter_initPackagePrivateWithInt_withInt_(OrgApacheLuceneRangetreeRangeTreeWriter *self, jint maxValuesInLeafNode, jint maxValuesSortInHeap) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->scratchBytes_, [IOSByteArray newArrayWithLength:OrgApacheLuceneRangetreeRangeTreeWriter_BYTES_PER_DOC]);
  JreStrongAssignAndConsume(&self->scratchBytesOutput_, new_OrgApacheLuceneStoreByteArrayDataOutput_initWithByteArray_(self->scratchBytes_));
  self->globalMinValue_ = JavaLangLong_MAX_VALUE;
  self->globalMaxValue_ = JavaLangLong_MIN_VALUE;
  OrgApacheLuceneRangetreeRangeTreeWriter_verifyParamsWithInt_withInt_(maxValuesInLeafNode, maxValuesSortInHeap);
  self->maxValuesInLeafNode_ = maxValuesInLeafNode;
  self->maxValuesSortInHeap_ = maxValuesSortInHeap;
  JreStrongAssignAndConsume(&self->heapWriter_, new_OrgApacheLuceneRangetreeGrowingHeapSliceWriter_initPackagePrivateWithInt_(maxValuesSortInHeap));
}

OrgApacheLuceneRangetreeRangeTreeWriter *new_OrgApacheLuceneRangetreeRangeTreeWriter_initPackagePrivateWithInt_withInt_(jint maxValuesInLeafNode, jint maxValuesSortInHeap) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneRangetreeRangeTreeWriter, initPackagePrivateWithInt_withInt_, maxValuesInLeafNode, maxValuesSortInHeap)
}

OrgApacheLuceneRangetreeRangeTreeWriter *create_OrgApacheLuceneRangetreeRangeTreeWriter_initPackagePrivateWithInt_withInt_(jint maxValuesInLeafNode, jint maxValuesSortInHeap) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneRangetreeRangeTreeWriter, initPackagePrivateWithInt_withInt_, maxValuesInLeafNode, maxValuesSortInHeap)
}

void OrgApacheLuceneRangetreeRangeTreeWriter_verifyParamsWithInt_withInt_(jint maxValuesInLeafNode, jint maxValuesSortInHeap) {
  OrgApacheLuceneRangetreeRangeTreeWriter_initialize();
  if (maxValuesInLeafNode <= 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"maxValuesInLeafNode must be > 0; got ", maxValuesInLeafNode));
  }
  if (maxValuesInLeafNode > JreLoadStatic(OrgApacheLuceneUtilArrayUtil, MAX_ARRAY_LENGTH)) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$I", @"maxValuesInLeafNode must be <= ArrayUtil.MAX_ARRAY_LENGTH (= ", JreLoadStatic(OrgApacheLuceneUtilArrayUtil, MAX_ARRAY_LENGTH), @"); got ", maxValuesInLeafNode));
  }
  if (maxValuesSortInHeap < maxValuesInLeafNode) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$I", @"maxValuesSortInHeap must be >= maxValuesInLeafNode; got ", maxValuesSortInHeap, @" vs maxValuesInLeafNode=", maxValuesInLeafNode));
  }
  if (maxValuesSortInHeap > JreLoadStatic(OrgApacheLuceneUtilArrayUtil, MAX_ARRAY_LENGTH)) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$I", @"maxValuesSortInHeap must be <= ArrayUtil.MAX_ARRAY_LENGTH (= ", JreLoadStatic(OrgApacheLuceneUtilArrayUtil, MAX_ARRAY_LENGTH), @"); got ", maxValuesSortInHeap));
  }
}

void OrgApacheLuceneRangetreeRangeTreeWriter_switchToOffline(OrgApacheLuceneRangetreeRangeTreeWriter *self) {
  JreStrongAssign(&self->tempDir_, OrgLukhnosPortmobileFileFiles_createTempDirectoryWithOrgLukhnosPortmobileFilePath_withNSString_(OrgApacheLuceneUtilOfflineSorter_defaultTempDir(), [OrgApacheLuceneRangetreeRangeTreeWriter_class_() getSimpleName]));
  JreStrongAssign(&self->tempInput_, [((OrgLukhnosPortmobileFilePath *) nil_chk(self->tempDir_)) resolveWithNSString:@"in"]);
  JreStrongAssignAndConsume(&self->writer_, new_OrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter_initWithOrgLukhnosPortmobileFilePath_(self->tempInput_));
  for (jint i = 0; i < self->valueCount_; i++) {
    [((OrgApacheLuceneStoreByteArrayDataOutput *) nil_chk(self->scratchBytesOutput_)) resetWithByteArray:self->scratchBytes_];
    [self->scratchBytesOutput_ writeLongWithLong:IOSLongArray_Get(nil_chk(((OrgApacheLuceneRangetreeGrowingHeapSliceWriter *) nil_chk(self->heapWriter_))->values_), i)];
    [self->scratchBytesOutput_ writeVIntWithInt:IOSIntArray_Get(nil_chk(((OrgApacheLuceneRangetreeGrowingHeapSliceWriter *) nil_chk(self->heapWriter_))->docIDs_), i)];
    [self->scratchBytesOutput_ writeVLongWithLong:i];
    [((OrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter *) nil_chk(self->writer_)) writeWithByteArray:self->scratchBytes_ withInt:0 withInt:((IOSByteArray *) nil_chk(self->scratchBytes_))->size_];
  }
  JreStrongAssign(&self->heapWriter_, nil);
}

id<OrgApacheLuceneRangetreeSliceWriter> OrgApacheLuceneRangetreeRangeTreeWriter_convertToFixedWidthWithOrgLukhnosPortmobileFilePath_(OrgApacheLuceneRangetreeRangeTreeWriter *self, OrgLukhnosPortmobileFilePath *inArg) {
  OrgApacheLuceneUtilBytesRefBuilder *scratch = create_OrgApacheLuceneUtilBytesRefBuilder_init();
  [scratch growWithInt:OrgApacheLuceneRangetreeRangeTreeWriter_BYTES_PER_DOC];
  OrgApacheLuceneUtilBytesRef *bytes = JreRetainedLocalValue([scratch get]);
  OrgApacheLuceneStoreByteArrayDataInput *dataReader = create_OrgApacheLuceneStoreByteArrayDataInput_init();
  OrgApacheLuceneUtilOfflineSorter_ByteSequencesReader *reader = nil;
  id<OrgApacheLuceneRangetreeSliceWriter> sortedWriter = nil;
  jboolean success = false;
  @try {
    reader = create_OrgApacheLuceneUtilOfflineSorter_ByteSequencesReader_initWithOrgLukhnosPortmobileFilePath_(inArg);
    sortedWriter = [self getWriterWithLong:self->valueCount_];
    for (jlong i = 0; i < self->valueCount_; i++) {
      jboolean result = [reader readWithOrgApacheLuceneUtilBytesRefBuilder:scratch];
      JreAssert(result, @"org/apache/lucene/rangetree/RangeTreeWriter.java:178 condition failed: assert result;");
      [dataReader resetWithByteArray:((OrgApacheLuceneUtilBytesRef *) nil_chk(bytes))->bytes_ withInt:bytes->offset_ withInt:bytes->length_];
      jlong value = [dataReader readLong];
      jint docID = [dataReader readVInt];
      JreAssert(docID >= 0, JreStrcat("$I", @"docID=", docID));
      jlong ord = [dataReader readVLong];
      [((id<OrgApacheLuceneRangetreeSliceWriter>) nil_chk(sortedWriter)) appendWithLong:value withLong:ord withInt:docID];
    }
    success = true;
  }
  @finally {
    if (success) {
      OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ sortedWriter, reader } count:2 type:JavaIoCloseable_class_()]);
    }
    else {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader } count:1 type:JavaIoCloseable_class_()]);
      @try {
        [((id<OrgApacheLuceneRangetreeSliceWriter>) nil_chk(sortedWriter)) destroy];
      }
      @catch (JavaLangThrowable *t) {
      }
    }
  }
  return sortedWriter;
}

id<OrgApacheLuceneRangetreeSliceWriter> OrgApacheLuceneRangetreeRangeTreeWriter_sort(OrgApacheLuceneRangetreeRangeTreeWriter *self) {
  if (self->heapWriter_ != nil) {
    JreAssert(self->valueCount_ < JavaLangInteger_MAX_VALUE, @"org/apache/lucene/rangetree/RangeTreeWriter.java:206 condition failed: assert valueCount < Integer.MAX_VALUE;");
    [create_OrgApacheLuceneRangetreeRangeTreeWriter_1_initWithOrgApacheLuceneRangetreeRangeTreeWriter_(self) sortWithInt:0 withInt:(jint) self->valueCount_];
    OrgApacheLuceneRangetreeHeapSliceWriter *sorted = create_OrgApacheLuceneRangetreeHeapSliceWriter_initPackagePrivateWithInt_((jint) self->valueCount_);
    for (jint i = 0; i < self->valueCount_; i++) {
      [sorted appendWithLong:IOSLongArray_Get(nil_chk(((OrgApacheLuceneRangetreeGrowingHeapSliceWriter *) nil_chk(self->heapWriter_))->values_), i) withLong:IOSLongArray_Get(nil_chk(self->heapWriter_->ords_), i) withInt:IOSIntArray_Get(nil_chk(self->heapWriter_->docIDs_), i)];
    }
    return sorted;
  }
  else {
    JreAssert(self->tempDir_ != nil, @"org/apache/lucene/rangetree/RangeTreeWriter.java:253 condition failed: assert tempDir != null;");
    OrgApacheLuceneStoreByteArrayDataInput *reader = create_OrgApacheLuceneStoreByteArrayDataInput_init();
    id<JavaUtilComparator> cmp = create_OrgApacheLuceneRangetreeRangeTreeWriter_2_initWithOrgApacheLuceneStoreByteArrayDataInput_(reader);
    OrgLukhnosPortmobileFilePath *sorted = JreRetainedLocalValue([((OrgLukhnosPortmobileFilePath *) nil_chk(self->tempDir_)) resolveWithNSString:@"sorted"]);
    jboolean success = false;
    @try {
      OrgApacheLuceneUtilOfflineSorter *sorter = create_OrgApacheLuceneUtilOfflineSorter_initWithJavaUtilComparator_withOrgApacheLuceneUtilOfflineSorter_BufferSize_withOrgLukhnosPortmobileFilePath_withInt_(cmp, OrgApacheLuceneUtilOfflineSorter_BufferSize_automatic(), self->tempDir_, OrgApacheLuceneUtilOfflineSorter_MAX_TEMPFILES);
      [sorter sortWithOrgLukhnosPortmobileFilePath:self->tempInput_ withOrgLukhnosPortmobileFilePath:sorted];
      id<OrgApacheLuceneRangetreeSliceWriter> writer = OrgApacheLuceneRangetreeRangeTreeWriter_convertToFixedWidthWithOrgLukhnosPortmobileFilePath_(self, sorted);
      success = true;
      return writer;
    }
    @finally {
      if (success) {
        OrgApacheLuceneUtilIOUtils_rmWithOrgLukhnosPortmobileFilePathArray_([IOSObjectArray arrayWithObjects:(id[]){ sorted } count:1 type:OrgLukhnosPortmobileFilePath_class_()]);
      }
      else {
        OrgApacheLuceneUtilIOUtils_deleteFilesIgnoringExceptionsWithOrgLukhnosPortmobileFilePathArray_([IOSObjectArray arrayWithObjects:(id[]){ sorted } count:1 type:OrgLukhnosPortmobileFilePath_class_()]);
      }
    }
  }
}

jboolean OrgApacheLuceneRangetreeRangeTreeWriter_directoryIsEmptyWithOrgLukhnosPortmobileFilePath_(OrgApacheLuceneRangetreeRangeTreeWriter *self, OrgLukhnosPortmobileFilePath *inArg) {
  @try {
    id<OrgLukhnosPortmobileFileDirectoryStream> dir = OrgLukhnosPortmobileFileFiles_newDirectoryStreamWithOrgLukhnosPortmobileFilePath_(inArg);
    JavaLangThrowable *__primaryException1 = nil;
    @try {
      for (OrgLukhnosPortmobileFilePath * __strong path in nil_chk(dir)) {
        JreAssert(false, JreStrcat("$@$@", @"dir=", inArg, @" still has file=", path));
        return false;
      }
    }
    @catch (JavaLangThrowable *e) {
      __primaryException1 = e;
      @throw e;
    }
    @finally {
      if (dir != nil) {
        if (__primaryException1 != nil) {
          @try {
            [dir close];
          }
          @catch (JavaLangThrowable *e) {
            [__primaryException1 addSuppressedWithJavaLangThrowable:e];
          }
        }
        else {
          [dir close];
        }
      }
    }
  }
  @catch (JavaIoIOException *ioe) {
  }
  return true;
}

jlong OrgApacheLuceneRangetreeRangeTreeWriter_getSplitValueWithOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_withLong_withLong_withLong_(OrgApacheLuceneRangetreeRangeTreeWriter *self, OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *source, jlong leftCount, jlong minValue, jlong maxValue) {
  id<OrgApacheLuceneRangetreeSliceReader> reader = JreRetainedLocalValue([((id<OrgApacheLuceneRangetreeSliceWriter>) nil_chk(((OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *) nil_chk(source))->writer_)) getReaderWithLong:source->start_ + leftCount]);
  jboolean success = false;
  jlong splitValue;
  @try {
    jboolean result = [((id<OrgApacheLuceneRangetreeSliceReader>) nil_chk(reader)) next];
    JreAssert(result, @"org/apache/lucene/rangetree/RangeTreeWriter.java:437 condition failed: assert result;");
    splitValue = [reader value];
    JreAssert(splitValue >= minValue && splitValue <= maxValue, JreStrcat("$J$J$J$@", @"splitValue=", splitValue, @" minValue=", minValue, @" maxValue=", maxValue, @" reader=", reader));
    success = true;
  }
  @finally {
    if (success) {
      OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader } count:1 type:JavaIoCloseable_class_()]);
    }
    else {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader } count:1 type:JavaIoCloseable_class_()]);
    }
  }
  return splitValue;
}

void OrgApacheLuceneRangetreeRangeTreeWriter_buildWithInt_withInt_withOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_withOrgApacheLuceneStoreIndexOutput_withLong_withLong_withLongArray_withLongArray_(OrgApacheLuceneRangetreeRangeTreeWriter *self, jint nodeID, jint leafNodeOffset, OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *source, OrgApacheLuceneStoreIndexOutput *outArg, jlong minValue, jlong maxValue, IOSLongArray *blockMinValues, IOSLongArray *leafBlockFPs) {
  jlong count = ((OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *) nil_chk(source))->count_;
  if ([source->writer_ isKindOfClass:[OrgApacheLuceneRangetreeOfflineSliceWriter class]] && count <= self->maxValuesSortInHeap_) {
    id<OrgApacheLuceneRangetreeSliceWriter> writer = create_OrgApacheLuceneRangetreeHeapSliceWriter_initPackagePrivateWithInt_((jint) count);
    id<OrgApacheLuceneRangetreeSliceReader> reader = JreRetainedLocalValue([((id<OrgApacheLuceneRangetreeSliceWriter>) nil_chk(source->writer_)) getReaderWithLong:source->start_]);
    for (jint i = 0; i < count; i++) {
      jboolean hasNext = [((id<OrgApacheLuceneRangetreeSliceReader>) nil_chk(reader)) next];
      JreAssert(hasNext, @"org/apache/lucene/rangetree/RangeTreeWriter.java:468 condition failed: assert hasNext;");
      [writer appendWithLong:[reader value] withLong:[reader ord] withInt:[reader docID]];
    }
    source = create_OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_(writer, 0, count);
  }
  JreAssert(count > 0, @"org/apache/lucene/rangetree/RangeTreeWriter.java:475 condition failed: assert count > 0;");
  if (nodeID >= leafNodeOffset) {
    JreAssert(maxValue >= minValue, @"org/apache/lucene/rangetree/RangeTreeWriter.java:479 condition failed: assert maxValue >= minValue;");
    id<OrgApacheLuceneRangetreeSliceReader> reader = JreRetainedLocalValue([((id<OrgApacheLuceneRangetreeSliceWriter>) nil_chk(source->writer_)) getReaderWithLong:source->start_]);
    IOSIntArray *docIDs = [IOSIntArray arrayWithLength:(jint) count];
    jboolean success = false;
    @try {
      for (jint i = 0; i < source->count_; i++) {
        jboolean result = [((id<OrgApacheLuceneRangetreeSliceReader>) nil_chk(reader)) next];
        JreAssert(result, @"org/apache/lucene/rangetree/RangeTreeWriter.java:501 condition failed: assert result;");
        *IOSIntArray_GetRef(docIDs, i) = [reader docID];
      }
      success = true;
    }
    @finally {
      if (success) {
        OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader } count:1 type:JavaIoCloseable_class_()]);
      }
      else {
        OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader } count:1 type:JavaIoCloseable_class_()]);
      }
    }
    JavaUtilArrays_sortWithIntArray_(docIDs);
    jint lastDocID = -1;
    jint uniqueCount = 0;
    for (jint i = 0; i < docIDs->size_; i++) {
      jint docID = IOSIntArray_Get(docIDs, i);
      if (docID != lastDocID) {
        uniqueCount++;
        lastDocID = docID;
      }
    }
    JreAssert(uniqueCount <= count, @"org/apache/lucene/rangetree/RangeTreeWriter.java:529 condition failed: assert uniqueCount <= count;");
    jlong startFP = [((OrgApacheLuceneStoreIndexOutput *) nil_chk(outArg)) getFilePointer];
    [outArg writeVIntWithInt:uniqueCount];
    jint blockID = nodeID - leafNodeOffset;
    *IOSLongArray_GetRef(nil_chk(leafBlockFPs), blockID) = startFP;
    *IOSLongArray_GetRef(nil_chk(blockMinValues), blockID) = minValue;
    lastDocID = -1;
    for (jint i = 0; i < docIDs->size_; i++) {
      jint docID = IOSIntArray_Get(docIDs, i);
      if (docID != lastDocID) {
        [outArg writeIntWithInt:docID];
        lastDocID = docID;
      }
    }
  }
  else {
    JreAssert(nodeID < ((IOSLongArray *) nil_chk(blockMinValues))->size_, JreStrcat("$I$I", @"nodeID=", nodeID, @" blockMinValues.length=", blockMinValues->size_));
    JreAssert(source->count_ == count, @"org/apache/lucene/rangetree/RangeTreeWriter.java:562 condition failed: assert source.count == count;");
    jlong leftCount = JreLongDiv(source->count_, 2);
    jlong splitValue = OrgApacheLuceneRangetreeRangeTreeWriter_getSplitValueWithOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_withLong_withLong_withLong_(self, source, leftCount, minValue, maxValue);
    OrgApacheLuceneRangetreeRangeTreeWriter_buildWithInt_withInt_withOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_withOrgApacheLuceneStoreIndexOutput_withLong_withLong_withLongArray_withLongArray_(self, 2 * nodeID, leafNodeOffset, create_OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_(source->writer_, source->start_, leftCount), outArg, minValue, splitValue, blockMinValues, leafBlockFPs);
    OrgApacheLuceneRangetreeRangeTreeWriter_buildWithInt_withInt_withOrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_withOrgApacheLuceneStoreIndexOutput_withLong_withLong_withLongArray_withLongArray_(self, 2 * nodeID + 1, leafNodeOffset, create_OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_(source->writer_, source->start_ + leftCount, count - leftCount), outArg, splitValue, maxValue, blockMinValues, leafBlockFPs);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneRangetreeRangeTreeWriter)

@implementation OrgApacheLuceneRangetreeRangeTreeWriter_1

- (instancetype)initWithOrgApacheLuceneRangetreeRangeTreeWriter:(OrgApacheLuceneRangetreeRangeTreeWriter *)outer$ {
  OrgApacheLuceneRangetreeRangeTreeWriter_1_initWithOrgApacheLuceneRangetreeRangeTreeWriter_(self, outer$);
  return self;
}

- (void)swapWithInt:(jint)i
            withInt:(jint)j {
  jint docID = IOSIntArray_Get(nil_chk(((OrgApacheLuceneRangetreeGrowingHeapSliceWriter *) nil_chk(this$0_->heapWriter_))->docIDs_), i);
  *IOSIntArray_GetRef(this$0_->heapWriter_->docIDs_, i) = IOSIntArray_Get(this$0_->heapWriter_->docIDs_, j);
  *IOSIntArray_GetRef(this$0_->heapWriter_->docIDs_, j) = docID;
  jlong ord = IOSLongArray_Get(nil_chk(this$0_->heapWriter_->ords_), i);
  *IOSLongArray_GetRef(this$0_->heapWriter_->ords_, i) = IOSLongArray_Get(this$0_->heapWriter_->ords_, j);
  *IOSLongArray_GetRef(this$0_->heapWriter_->ords_, j) = ord;
  jlong value = IOSLongArray_Get(nil_chk(this$0_->heapWriter_->values_), i);
  *IOSLongArray_GetRef(this$0_->heapWriter_->values_, i) = IOSLongArray_Get(this$0_->heapWriter_->values_, j);
  *IOSLongArray_GetRef(this$0_->heapWriter_->values_, j) = value;
}

- (jint)compareWithInt:(jint)i
               withInt:(jint)j {
  jint cmp = JavaLangLong_compareWithLong_withLong_(IOSLongArray_Get(nil_chk(((OrgApacheLuceneRangetreeGrowingHeapSliceWriter *) nil_chk(this$0_->heapWriter_))->values_), i), IOSLongArray_Get(this$0_->heapWriter_->values_, j));
  if (cmp != 0) {
    return cmp;
  }
  cmp = JavaLangInteger_compareWithInt_withInt_(IOSIntArray_Get(nil_chk(((OrgApacheLuceneRangetreeGrowingHeapSliceWriter *) nil_chk(this$0_->heapWriter_))->docIDs_), i), IOSIntArray_Get(this$0_->heapWriter_->docIDs_, j));
  if (cmp != 0) {
    return cmp;
  }
  return JavaLangLong_compareWithLong_withLong_(IOSLongArray_Get(nil_chk(((OrgApacheLuceneRangetreeGrowingHeapSliceWriter *) nil_chk(this$0_->heapWriter_))->ords_), i), IOSLongArray_Get(this$0_->heapWriter_->ords_, j));
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x4, 3, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneRangetreeRangeTreeWriter:);
  methods[1].selector = @selector(swapWithInt:withInt:);
  methods[2].selector = @selector(compareWithInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneRangetreeRangeTreeWriter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneRangetreeRangeTreeWriter;", "swap", "II", "compare", "sort" };
  static const J2ObjcClassInfo _OrgApacheLuceneRangetreeRangeTreeWriter_1 = { "", "org.apache.lucene.rangetree", ptrTable, methods, fields, 7, 0x8010, 3, 1, 0, -1, 4, -1, -1 };
  return &_OrgApacheLuceneRangetreeRangeTreeWriter_1;
}

@end

void OrgApacheLuceneRangetreeRangeTreeWriter_1_initWithOrgApacheLuceneRangetreeRangeTreeWriter_(OrgApacheLuceneRangetreeRangeTreeWriter_1 *self, OrgApacheLuceneRangetreeRangeTreeWriter *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneUtilInPlaceMergeSorter_init(self);
}

OrgApacheLuceneRangetreeRangeTreeWriter_1 *new_OrgApacheLuceneRangetreeRangeTreeWriter_1_initWithOrgApacheLuceneRangetreeRangeTreeWriter_(OrgApacheLuceneRangetreeRangeTreeWriter *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneRangetreeRangeTreeWriter_1, initWithOrgApacheLuceneRangetreeRangeTreeWriter_, outer$)
}

OrgApacheLuceneRangetreeRangeTreeWriter_1 *create_OrgApacheLuceneRangetreeRangeTreeWriter_1_initWithOrgApacheLuceneRangetreeRangeTreeWriter_(OrgApacheLuceneRangetreeRangeTreeWriter *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneRangetreeRangeTreeWriter_1, initWithOrgApacheLuceneRangetreeRangeTreeWriter_, outer$)
}

@implementation OrgApacheLuceneRangetreeRangeTreeWriter_2

- (instancetype)initWithOrgApacheLuceneStoreByteArrayDataInput:(OrgApacheLuceneStoreByteArrayDataInput *)capture$0 {
  OrgApacheLuceneRangetreeRangeTreeWriter_2_initWithOrgApacheLuceneStoreByteArrayDataInput_(self, capture$0);
  return self;
}

- (jint)compareWithId:(OrgApacheLuceneUtilBytesRef *)a
               withId:(OrgApacheLuceneUtilBytesRef *)b {
  [((OrgApacheLuceneStoreByteArrayDataInput *) nil_chk(val$reader_)) resetWithByteArray:((OrgApacheLuceneUtilBytesRef *) nil_chk(a))->bytes_ withInt:a->offset_ withInt:a->length_];
  jlong valueA = [val$reader_ readLong];
  jint docIDA = [val$reader_ readVInt];
  jlong ordA = [val$reader_ readVLong];
  [val$reader_ resetWithByteArray:((OrgApacheLuceneUtilBytesRef *) nil_chk(b))->bytes_ withInt:b->offset_ withInt:b->length_];
  jlong valueB = [val$reader_ readLong];
  jint docIDB = [val$reader_ readVInt];
  jlong ordB = [val$reader_ readVLong];
  jint cmp = JavaLangLong_compareWithLong_withLong_(valueA, valueB);
  if (cmp != 0) {
    return cmp;
  }
  cmp = JavaLangInteger_compareWithInt_withInt_(docIDA, docIDB);
  if (cmp != 0) {
    return cmp;
  }
  return JavaLangLong_compareWithLong_withLong_(ordA, ordB);
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (void)dealloc {
  RELEASE_(val$reader_);
  RELEASE_(readerB_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneStoreByteArrayDataInput:);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$reader_", "LOrgApacheLuceneStoreByteArrayDataInput;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "readerB_", "LOrgApacheLuceneStoreByteArrayDataInput;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneStoreByteArrayDataInput;", "compare", "LOrgApacheLuceneUtilBytesRef;LOrgApacheLuceneUtilBytesRef;", "LOrgApacheLuceneRangetreeRangeTreeWriter;", "sort", "Ljava/lang/Object;Ljava/util/Comparator<Lorg/apache/lucene/util/BytesRef;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneRangetreeRangeTreeWriter_2 = { "", "org.apache.lucene.rangetree", ptrTable, methods, fields, 7, 0x8010, 2, 2, 3, -1, 4, 5, -1 };
  return &_OrgApacheLuceneRangetreeRangeTreeWriter_2;
}

@end

void OrgApacheLuceneRangetreeRangeTreeWriter_2_initWithOrgApacheLuceneStoreByteArrayDataInput_(OrgApacheLuceneRangetreeRangeTreeWriter_2 *self, OrgApacheLuceneStoreByteArrayDataInput *capture$0) {
  JreStrongAssign(&self->val$reader_, capture$0);
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->readerB_, new_OrgApacheLuceneStoreByteArrayDataInput_init());
}

OrgApacheLuceneRangetreeRangeTreeWriter_2 *new_OrgApacheLuceneRangetreeRangeTreeWriter_2_initWithOrgApacheLuceneStoreByteArrayDataInput_(OrgApacheLuceneStoreByteArrayDataInput *capture$0) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneRangetreeRangeTreeWriter_2, initWithOrgApacheLuceneStoreByteArrayDataInput_, capture$0)
}

OrgApacheLuceneRangetreeRangeTreeWriter_2 *create_OrgApacheLuceneRangetreeRangeTreeWriter_2_initWithOrgApacheLuceneStoreByteArrayDataInput_(OrgApacheLuceneStoreByteArrayDataInput *capture$0) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneRangetreeRangeTreeWriter_2, initWithOrgApacheLuceneStoreByteArrayDataInput_, capture$0)
}

@implementation OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice

- (instancetype)initWithOrgApacheLuceneRangetreeSliceWriter:(id<OrgApacheLuceneRangetreeSliceWriter>)writer
                                                   withLong:(jlong)start
                                                   withLong:(jlong)count {
  OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_(self, writer, start, count);
  return self;
}

- (NSString *)description {
  return JreStrcat("$J$J$@C", @"PathSlice(start=", start_, @" count=", count_, @" writer=", writer_, ')');
}

- (void)dealloc {
  RELEASE_(writer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneRangetreeSliceWriter:withLong:withLong:);
  methods[1].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "writer_", "LOrgApacheLuceneRangetreeSliceWriter;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "start_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "count_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneRangetreeSliceWriter;JJ", "toString", "LOrgApacheLuceneRangetreeRangeTreeWriter;" };
  static const J2ObjcClassInfo _OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice = { "PathSlice", "org.apache.lucene.rangetree", ptrTable, methods, fields, 7, 0x1a, 2, 3, 2, -1, -1, -1, -1 };
  return &_OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice;
}

@end

void OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_(OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *self, id<OrgApacheLuceneRangetreeSliceWriter> writer, jlong start, jlong count) {
  NSObject_init(self);
  JreStrongAssign(&self->writer_, writer);
  self->start_ = start;
  self->count_ = count;
}

OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *new_OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_(id<OrgApacheLuceneRangetreeSliceWriter> writer, jlong start, jlong count) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice, initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_, writer, start, count)
}

OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice *create_OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice_initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_(id<OrgApacheLuceneRangetreeSliceWriter> writer, jlong start, jlong count) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice, initWithOrgApacheLuceneRangetreeSliceWriter_withLong_withLong_, writer, start, count)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneRangetreeRangeTreeWriter_PathSlice)
