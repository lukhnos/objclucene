//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./sandbox/src/java/org/apache/lucene/rangetree/RangeTreeReader.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "org/apache/lucene/index/SortedNumericDocValues.h"
#include "org/apache/lucene/rangetree/RangeTreeReader.h"
#include "org/apache/lucene/search/DocIdSet.h"
#include "org/apache/lucene/store/IndexInput.h"
#include "org/apache/lucene/util/DocIdSetBuilder.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"

@class OrgApacheLuceneRangetreeRangeTreeReader_QueryState;

#if __has_feature(objc_arc)
#error "org/apache/lucene/rangetree/RangeTreeReader must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneRangetreeRangeTreeReader () {
 @public
  IOSLongArray *blockFPs_;
  IOSLongArray *blockMinValues_;
}

/*!
 @brief Adds all docs from the current block.
 */
- (jint)addAllWithOrgApacheLuceneRangetreeRangeTreeReader_QueryState:(OrgApacheLuceneRangetreeRangeTreeReader_QueryState *)state;

/*!
 @brief Adds docs from the current block, filtering each hit against the query min/max.This
   is only needed on the boundary blocks.
 */
- (jint)addSomeWithOrgApacheLuceneRangetreeRangeTreeReader_QueryState:(OrgApacheLuceneRangetreeRangeTreeReader_QueryState *)state;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneRangetreeRangeTreeReader, blockFPs_, IOSLongArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneRangetreeRangeTreeReader, blockMinValues_, IOSLongArray *)

__attribute__((unused)) static jint OrgApacheLuceneRangetreeRangeTreeReader_addAllWithOrgApacheLuceneRangetreeRangeTreeReader_QueryState_(OrgApacheLuceneRangetreeRangeTreeReader *self, OrgApacheLuceneRangetreeRangeTreeReader_QueryState *state);

__attribute__((unused)) static jint OrgApacheLuceneRangetreeRangeTreeReader_addSomeWithOrgApacheLuceneRangetreeRangeTreeReader_QueryState_(OrgApacheLuceneRangetreeRangeTreeReader *self, OrgApacheLuceneRangetreeRangeTreeReader_QueryState *state);

@interface OrgApacheLuceneRangetreeRangeTreeReader_QueryState : NSObject {
 @public
  OrgApacheLuceneStoreIndexInput *in_;
  OrgApacheLuceneUtilDocIdSetBuilder *docs_;
  jlong minValueIncl_;
  jlong maxValueIncl_;
  OrgApacheLuceneIndexSortedNumericDocValues *sndv_;
}

- (instancetype)initWithOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)inArg
                                               withInt:(jint)maxDoc
                                              withLong:(jlong)minValueIncl
                                              withLong:(jlong)maxValueIncl
        withOrgApacheLuceneIndexSortedNumericDocValues:(OrgApacheLuceneIndexSortedNumericDocValues *)sndv;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneRangetreeRangeTreeReader_QueryState)

J2OBJC_FIELD_SETTER(OrgApacheLuceneRangetreeRangeTreeReader_QueryState, in_, OrgApacheLuceneStoreIndexInput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneRangetreeRangeTreeReader_QueryState, docs_, OrgApacheLuceneUtilDocIdSetBuilder *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneRangetreeRangeTreeReader_QueryState, sndv_, OrgApacheLuceneIndexSortedNumericDocValues *)

__attribute__((unused)) static void OrgApacheLuceneRangetreeRangeTreeReader_QueryState_initWithOrgApacheLuceneStoreIndexInput_withInt_withLong_withLong_withOrgApacheLuceneIndexSortedNumericDocValues_(OrgApacheLuceneRangetreeRangeTreeReader_QueryState *self, OrgApacheLuceneStoreIndexInput *inArg, jint maxDoc, jlong minValueIncl, jlong maxValueIncl, OrgApacheLuceneIndexSortedNumericDocValues *sndv);

__attribute__((unused)) static OrgApacheLuceneRangetreeRangeTreeReader_QueryState *new_OrgApacheLuceneRangetreeRangeTreeReader_QueryState_initWithOrgApacheLuceneStoreIndexInput_withInt_withLong_withLong_withOrgApacheLuceneIndexSortedNumericDocValues_(OrgApacheLuceneStoreIndexInput *inArg, jint maxDoc, jlong minValueIncl, jlong maxValueIncl, OrgApacheLuceneIndexSortedNumericDocValues *sndv) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneRangetreeRangeTreeReader_QueryState *create_OrgApacheLuceneRangetreeRangeTreeReader_QueryState_initWithOrgApacheLuceneStoreIndexInput_withInt_withLong_withLong_withOrgApacheLuceneIndexSortedNumericDocValues_(OrgApacheLuceneStoreIndexInput *inArg, jint maxDoc, jlong minValueIncl, jlong maxValueIncl, OrgApacheLuceneIndexSortedNumericDocValues *sndv);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneRangetreeRangeTreeReader_QueryState)

@implementation OrgApacheLuceneRangetreeRangeTreeReader

- (instancetype)initPackagePrivateWithOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)inArg {
  OrgApacheLuceneRangetreeRangeTreeReader_initPackagePrivateWithOrgApacheLuceneStoreIndexInput_(self, inArg);
  return self;
}

- (jlong)getMinValue {
  return IOSLongArray_Get(nil_chk(blockMinValues_), 0);
}

- (jlong)getMaxValue {
  return globalMaxValue_;
}

- (OrgApacheLuceneSearchDocIdSet *)intersectWithLong:(jlong)minIncl
                                            withLong:(jlong)maxIncl
      withOrgApacheLuceneIndexSortedNumericDocValues:(OrgApacheLuceneIndexSortedNumericDocValues *)sndv
                                             withInt:(jint)maxDoc {
  if (minIncl > maxIncl) {
    return JreLoadStatic(OrgApacheLuceneSearchDocIdSet, EMPTY);
  }
  if (minIncl > globalMaxValue_ || maxIncl < IOSLongArray_Get(nil_chk(blockMinValues_), 0)) {
    return JreLoadStatic(OrgApacheLuceneSearchDocIdSet, EMPTY);
  }
  OrgApacheLuceneRangetreeRangeTreeReader_QueryState *state = create_OrgApacheLuceneRangetreeRangeTreeReader_QueryState_initWithOrgApacheLuceneStoreIndexInput_withInt_withLong_withLong_withOrgApacheLuceneIndexSortedNumericDocValues_([((OrgApacheLuceneStoreIndexInput *) nil_chk(in_)) java_clone], maxDoc, minIncl, maxIncl, sndv);
  jint startBlockIncl = JavaUtilArrays_binarySearchWithLongArray_withLong_(blockMinValues_, minIncl);
  if (startBlockIncl >= 0) {
    while (startBlockIncl > 0 && IOSLongArray_Get(nil_chk(blockMinValues_), startBlockIncl) == minIncl) {
      startBlockIncl--;
    }
  }
  else {
    startBlockIncl = JavaLangMath_maxWithInt_withInt_(-startBlockIncl - 2, 0);
  }
  jint endBlockIncl = JavaUtilArrays_binarySearchWithLongArray_withLong_(blockMinValues_, maxIncl);
  if (endBlockIncl >= 0) {
    while (endBlockIncl < ((IOSLongArray *) nil_chk(blockMinValues_))->size_ - 1 && IOSLongArray_Get(blockMinValues_, endBlockIncl) == maxIncl) {
      endBlockIncl++;
    }
  }
  else {
    endBlockIncl = JavaLangMath_maxWithInt_withInt_(-endBlockIncl - 2, 0);
  }
  JreAssert(startBlockIncl <= endBlockIncl, @"org/apache/lucene/rangetree/RangeTreeReader.java:124 condition failed: assert startBlockIncl <= endBlockIncl;");
  [((OrgApacheLuceneStoreIndexInput *) nil_chk(state->in_)) seekWithLong:IOSLongArray_Get(nil_chk(blockFPs_), startBlockIncl)];
  [((OrgApacheLuceneUtilDocIdSetBuilder *) nil_chk(state->docs_)) growWithInt:approxDocsPerBlock_ * (endBlockIncl - startBlockIncl + 1)];
  jint hitCount = 0;
  for (jint block = startBlockIncl; block <= endBlockIncl; block++) {
    jboolean doFilter = IOSLongArray_Get(nil_chk(blockMinValues_), block) <= minIncl || block == blockMinValues_->size_ - 1 || IOSLongArray_Get(blockMinValues_, block + 1) >= maxIncl;
    jint newCount;
    if (doFilter) {
      newCount = OrgApacheLuceneRangetreeRangeTreeReader_addSomeWithOrgApacheLuceneRangetreeRangeTreeReader_QueryState_(self, state);
    }
    else {
      newCount = OrgApacheLuceneRangetreeRangeTreeReader_addAllWithOrgApacheLuceneRangetreeRangeTreeReader_QueryState_(self, state);
    }
    hitCount += newCount;
  }
  return [state->docs_ buildWithLong:hitCount];
}

- (jint)addAllWithOrgApacheLuceneRangetreeRangeTreeReader_QueryState:(OrgApacheLuceneRangetreeRangeTreeReader_QueryState *)state {
  return OrgApacheLuceneRangetreeRangeTreeReader_addAllWithOrgApacheLuceneRangetreeRangeTreeReader_QueryState_(self, state);
}

- (jint)addSomeWithOrgApacheLuceneRangetreeRangeTreeReader_QueryState:(OrgApacheLuceneRangetreeRangeTreeReader_QueryState *)state {
  return OrgApacheLuceneRangetreeRangeTreeReader_addSomeWithOrgApacheLuceneRangetreeRangeTreeReader_QueryState_(self, state);
}

- (jlong)ramBytesUsed {
  return ((IOSLongArray *) nil_chk(blockMinValues_))->size_ * OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_LONG + ((IOSLongArray *) nil_chk(blockFPs_))->size_ * OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_LONG;
}

- (id<JavaUtilCollection>)getChildResources {
  return JavaUtilCollections_emptyList();
}

- (void)dealloc {
  RELEASE_(blockFPs_);
  RELEASE_(blockMinValues_);
  RELEASE_(in_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchDocIdSet;", 0x1, 2, 3, 1, -1, -1, -1 },
    { NULL, "I", 0x2, 4, 5, 1, -1, -1, -1 },
    { NULL, "I", 0x2, 6, 5, 1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, 7, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgApacheLuceneStoreIndexInput:);
  methods[1].selector = @selector(getMinValue);
  methods[2].selector = @selector(getMaxValue);
  methods[3].selector = @selector(intersectWithLong:withLong:withOrgApacheLuceneIndexSortedNumericDocValues:withInt:);
  methods[4].selector = @selector(addAllWithOrgApacheLuceneRangetreeRangeTreeReader_QueryState:);
  methods[5].selector = @selector(addSomeWithOrgApacheLuceneRangetreeRangeTreeReader_QueryState:);
  methods[6].selector = @selector(ramBytesUsed);
  methods[7].selector = @selector(getChildResources);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "blockFPs_", "[J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "blockMinValues_", "[J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "in_", "LOrgApacheLuceneStoreIndexInput;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "globalMaxValue_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "approxDocsPerBlock_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneStoreIndexInput;", "LJavaIoIOException;", "intersect", "JJLOrgApacheLuceneIndexSortedNumericDocValues;I", "addAll", "LOrgApacheLuceneRangetreeRangeTreeReader_QueryState;", "addSome", "()Ljava/util/Collection<Lorg/apache/lucene/util/Accountable;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneRangetreeRangeTreeReader = { "RangeTreeReader", "org.apache.lucene.rangetree", ptrTable, methods, fields, 7, 0x10, 8, 5, -1, 5, -1, -1, -1 };
  return &_OrgApacheLuceneRangetreeRangeTreeReader;
}

@end

void OrgApacheLuceneRangetreeRangeTreeReader_initPackagePrivateWithOrgApacheLuceneStoreIndexInput_(OrgApacheLuceneRangetreeRangeTreeReader *self, OrgApacheLuceneStoreIndexInput *inArg) {
  NSObject_init(self);
  jint numLeaves = [((OrgApacheLuceneStoreIndexInput *) nil_chk(inArg)) readVInt];
  self->approxDocsPerBlock_ = [inArg readVInt];
  JreStrongAssignAndConsume(&self->blockMinValues_, [IOSLongArray newArrayWithLength:numLeaves]);
  for (jint i = 0; i < numLeaves; i++) {
    *IOSLongArray_GetRef(self->blockMinValues_, i) = [inArg readLong];
  }
  JreStrongAssignAndConsume(&self->blockFPs_, [IOSLongArray newArrayWithLength:numLeaves]);
  for (jint i = 0; i < numLeaves; i++) {
    *IOSLongArray_GetRef(self->blockFPs_, i) = [inArg readVLong];
  }
  self->globalMaxValue_ = [inArg readLong];
  JreStrongAssign(&self->in_, inArg);
}

OrgApacheLuceneRangetreeRangeTreeReader *new_OrgApacheLuceneRangetreeRangeTreeReader_initPackagePrivateWithOrgApacheLuceneStoreIndexInput_(OrgApacheLuceneStoreIndexInput *inArg) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneRangetreeRangeTreeReader, initPackagePrivateWithOrgApacheLuceneStoreIndexInput_, inArg)
}

OrgApacheLuceneRangetreeRangeTreeReader *create_OrgApacheLuceneRangetreeRangeTreeReader_initPackagePrivateWithOrgApacheLuceneStoreIndexInput_(OrgApacheLuceneStoreIndexInput *inArg) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneRangetreeRangeTreeReader, initPackagePrivateWithOrgApacheLuceneStoreIndexInput_, inArg)
}

jint OrgApacheLuceneRangetreeRangeTreeReader_addAllWithOrgApacheLuceneRangetreeRangeTreeReader_QueryState_(OrgApacheLuceneRangetreeRangeTreeReader *self, OrgApacheLuceneRangetreeRangeTreeReader_QueryState *state) {
  jint count = [((OrgApacheLuceneStoreIndexInput *) nil_chk(((OrgApacheLuceneRangetreeRangeTreeReader_QueryState *) nil_chk(state))->in_)) readVInt];
  [((OrgApacheLuceneUtilDocIdSetBuilder *) nil_chk(state->docs_)) growWithInt:count];
  for (jint i = 0; i < count; i++) {
    jint docID = [state->in_ readInt];
    [state->docs_ addWithInt:docID];
  }
  return count;
}

jint OrgApacheLuceneRangetreeRangeTreeReader_addSomeWithOrgApacheLuceneRangetreeRangeTreeReader_QueryState_(OrgApacheLuceneRangetreeRangeTreeReader *self, OrgApacheLuceneRangetreeRangeTreeReader_QueryState *state) {
  jint hitCount = 0;
  jint count = [((OrgApacheLuceneStoreIndexInput *) nil_chk(((OrgApacheLuceneRangetreeRangeTreeReader_QueryState *) nil_chk(state))->in_)) readVInt];
  [((OrgApacheLuceneUtilDocIdSetBuilder *) nil_chk(state->docs_)) growWithInt:count];
  for (jint i = 0; i < count; i++) {
    jint docID = [state->in_ readInt];
    [((OrgApacheLuceneIndexSortedNumericDocValues *) nil_chk(state->sndv_)) setDocumentWithInt:docID];
    jint docValueCount = [state->sndv_ count];
    for (jint j = 0; j < docValueCount; j++) {
      jlong value = [state->sndv_ valueAtWithInt:j];
      if (value >= state->minValueIncl_ && value <= state->maxValueIncl_) {
        [state->docs_ addWithInt:docID];
        hitCount++;
        break;
      }
    }
  }
  return hitCount;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneRangetreeRangeTreeReader)

@implementation OrgApacheLuceneRangetreeRangeTreeReader_QueryState

- (instancetype)initWithOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)inArg
                                               withInt:(jint)maxDoc
                                              withLong:(jlong)minValueIncl
                                              withLong:(jlong)maxValueIncl
        withOrgApacheLuceneIndexSortedNumericDocValues:(OrgApacheLuceneIndexSortedNumericDocValues *)sndv {
  OrgApacheLuceneRangetreeRangeTreeReader_QueryState_initWithOrgApacheLuceneStoreIndexInput_withInt_withLong_withLong_withOrgApacheLuceneIndexSortedNumericDocValues_(self, inArg, maxDoc, minValueIncl, maxValueIncl, sndv);
  return self;
}

- (void)dealloc {
  RELEASE_(in_);
  RELEASE_(docs_);
  RELEASE_(sndv_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneStoreIndexInput:withInt:withLong:withLong:withOrgApacheLuceneIndexSortedNumericDocValues:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "in_", "LOrgApacheLuceneStoreIndexInput;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "docs_", "LOrgApacheLuceneUtilDocIdSetBuilder;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "minValueIncl_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "maxValueIncl_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "sndv_", "LOrgApacheLuceneIndexSortedNumericDocValues;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneStoreIndexInput;IJJLOrgApacheLuceneIndexSortedNumericDocValues;", "LOrgApacheLuceneRangetreeRangeTreeReader;" };
  static const J2ObjcClassInfo _OrgApacheLuceneRangetreeRangeTreeReader_QueryState = { "QueryState", "org.apache.lucene.rangetree", ptrTable, methods, fields, 7, 0x1a, 1, 5, 1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneRangetreeRangeTreeReader_QueryState;
}

@end

void OrgApacheLuceneRangetreeRangeTreeReader_QueryState_initWithOrgApacheLuceneStoreIndexInput_withInt_withLong_withLong_withOrgApacheLuceneIndexSortedNumericDocValues_(OrgApacheLuceneRangetreeRangeTreeReader_QueryState *self, OrgApacheLuceneStoreIndexInput *inArg, jint maxDoc, jlong minValueIncl, jlong maxValueIncl, OrgApacheLuceneIndexSortedNumericDocValues *sndv) {
  NSObject_init(self);
  JreStrongAssign(&self->in_, inArg);
  JreStrongAssignAndConsume(&self->docs_, new_OrgApacheLuceneUtilDocIdSetBuilder_initWithInt_(maxDoc));
  self->minValueIncl_ = minValueIncl;
  self->maxValueIncl_ = maxValueIncl;
  JreStrongAssign(&self->sndv_, sndv);
}

OrgApacheLuceneRangetreeRangeTreeReader_QueryState *new_OrgApacheLuceneRangetreeRangeTreeReader_QueryState_initWithOrgApacheLuceneStoreIndexInput_withInt_withLong_withLong_withOrgApacheLuceneIndexSortedNumericDocValues_(OrgApacheLuceneStoreIndexInput *inArg, jint maxDoc, jlong minValueIncl, jlong maxValueIncl, OrgApacheLuceneIndexSortedNumericDocValues *sndv) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneRangetreeRangeTreeReader_QueryState, initWithOrgApacheLuceneStoreIndexInput_withInt_withLong_withLong_withOrgApacheLuceneIndexSortedNumericDocValues_, inArg, maxDoc, minValueIncl, maxValueIncl, sndv)
}

OrgApacheLuceneRangetreeRangeTreeReader_QueryState *create_OrgApacheLuceneRangetreeRangeTreeReader_QueryState_initWithOrgApacheLuceneStoreIndexInput_withInt_withLong_withLong_withOrgApacheLuceneIndexSortedNumericDocValues_(OrgApacheLuceneStoreIndexInput *inArg, jint maxDoc, jlong minValueIncl, jlong maxValueIncl, OrgApacheLuceneIndexSortedNumericDocValues *sndv) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneRangetreeRangeTreeReader_QueryState, initWithOrgApacheLuceneStoreIndexInput_withInt_withLong_withLong_withOrgApacheLuceneIndexSortedNumericDocValues_, inArg, maxDoc, minValueIncl, maxValueIncl, sndv)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneRangetreeRangeTreeReader_QueryState)
