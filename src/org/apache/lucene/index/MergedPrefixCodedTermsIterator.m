//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/MergedPrefixCodedTermsIterator.java
//

#include "J2ObjC_source.h"
#include "java/util/List.h"
#include "org/apache/lucene/index/FieldTermIterator.h"
#include "org/apache/lucene/index/MergedPrefixCodedTermsIterator.h"
#include "org/apache/lucene/index/PrefixCodedTerms.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/PriorityQueue.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/index/MergedPrefixCodedTermsIterator must not be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation OrgApacheLuceneIndexMergedPrefixCodedTermsIterator

- (instancetype)initPackagePrivateWithJavaUtilList:(id<JavaUtilList>)termsList {
  OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_initPackagePrivateWithJavaUtilList_(self, termsList);
  return self;
}

- (OrgApacheLuceneUtilBytesRef *)next {
  if ([((OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue *) nil_chk(termQueue_)) size] == 0) {
    if ([((OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue *) nil_chk(fieldQueue_)) size] == 0) {
      JreStrongAssign(&field_, nil);
      return nil;
    }
    OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *top = JreRetainedLocalValue([fieldQueue_ pop]);
    [termQueue_ addWithId:top];
    JreStrongAssign(&field_, ((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk(top))->field_);
    JreAssert(field_ != nil, @"org/apache/lucene/index/MergedPrefixCodedTermsIterator.java:90 condition failed: assert field != null;");
    while ([fieldQueue_ size] != 0 && [((NSString *) nil_chk(((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk([fieldQueue_ top]))->field_)) isEqual:top->field_]) {
      OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *iter = JreRetainedLocalValue([fieldQueue_ pop]);
      JreAssert([((NSString *) nil_chk(((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk(iter))->field_)) isEqual:field_], @"org/apache/lucene/index/MergedPrefixCodedTermsIterator.java:94 condition failed: assert iter.field.equals(field);");
      JreStrongAssign(&iter->field_, field_);
      [termQueue_ addWithId:iter];
    }
    return ((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk([termQueue_ top]))->bytes_;
  }
  else {
    OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *top = JreRetainedLocalValue([termQueue_ top]);
    if ([((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk(top)) next] == nil) {
      [termQueue_ pop];
    }
    else if (!JreStringEqualsEquals([top field], field_)) {
      [termQueue_ pop];
      [((OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue *) nil_chk(fieldQueue_)) addWithId:top];
    }
    else {
      [termQueue_ updateTop];
    }
    if ([termQueue_ size] == 0) {
      return [self next];
    }
    else {
      return ((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk([termQueue_ top]))->bytes_;
    }
  }
}

- (NSString *)field {
  return field_;
}

- (jlong)delGen {
  return [((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk([((OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue *) nil_chk(termQueue_)) top])) delGen];
}

- (void)dealloc {
  RELEASE_(termQueue_);
  RELEASE_(fieldQueue_);
  RELEASE_(field_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRef;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithJavaUtilList:);
  methods[1].selector = @selector(next);
  methods[2].selector = @selector(field);
  methods[3].selector = @selector(delGen);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "termQueue_", "LOrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "fieldQueue_", "LOrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "field_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilList;", "(Ljava/util/List<Lorg/apache/lucene/index/PrefixCodedTerms;>;)V", "LOrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue;LOrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMergedPrefixCodedTermsIterator = { "MergedPrefixCodedTermsIterator", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x0, 4, 3, -1, 2, -1, -1, -1 };
  return &_OrgApacheLuceneIndexMergedPrefixCodedTermsIterator;
}

@end

void OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_initPackagePrivateWithJavaUtilList_(OrgApacheLuceneIndexMergedPrefixCodedTermsIterator *self, id<JavaUtilList> termsList) {
  OrgApacheLuceneIndexFieldTermIterator_initPackagePrivate(self);
  JreStrongAssignAndConsume(&self->fieldQueue_, new_OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue_initWithInt_([((id<JavaUtilList>) nil_chk(termsList)) size]));
  for (OrgApacheLuceneIndexPrefixCodedTerms * __strong terms in termsList) {
    OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *iter = JreRetainedLocalValue([((OrgApacheLuceneIndexPrefixCodedTerms *) nil_chk(terms)) iterator]);
    [((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk(iter)) next];
    if (iter->field_ != nil) {
      [self->fieldQueue_ addWithId:iter];
    }
  }
  JreStrongAssignAndConsume(&self->termQueue_, new_OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue_initWithInt_([termsList size]));
}

OrgApacheLuceneIndexMergedPrefixCodedTermsIterator *new_OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_initPackagePrivateWithJavaUtilList_(id<JavaUtilList> termsList) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMergedPrefixCodedTermsIterator, initPackagePrivateWithJavaUtilList_, termsList)
}

OrgApacheLuceneIndexMergedPrefixCodedTermsIterator *create_OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_initPackagePrivateWithJavaUtilList_(id<JavaUtilList> termsList) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMergedPrefixCodedTermsIterator, initPackagePrivateWithJavaUtilList_, termsList)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMergedPrefixCodedTermsIterator)

@implementation OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue

- (instancetype)initWithInt:(jint)size {
  OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue_initWithInt_(self, size);
  return self;
}

- (jboolean)lessThanWithId:(OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *)a
                    withId:(OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *)b {
  jint cmp = [((OrgApacheLuceneUtilBytesRef *) nil_chk(((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk(a))->bytes_)) compareToWithId:((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk(b))->bytes_];
  if (cmp < 0) {
    return true;
  }
  else if (cmp > 0) {
    return false;
  }
  else {
    return [a delGen] > [b delGen];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(lessThanWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "I", "lessThan", "LOrgApacheLuceneIndexPrefixCodedTerms_TermIterator;LOrgApacheLuceneIndexPrefixCodedTerms_TermIterator;", "LOrgApacheLuceneIndexMergedPrefixCodedTermsIterator;", "Lorg/apache/lucene/util/PriorityQueue<Lorg/apache/lucene/index/PrefixCodedTerms$TermIterator;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue = { "TermMergeQueue", "org.apache.lucene.index", ptrTable, methods, NULL, 7, 0xa, 2, 0, 3, -1, -1, 4, -1 };
  return &_OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue;
}

@end

void OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue_initWithInt_(OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue *self, jint size) {
  OrgApacheLuceneUtilPriorityQueue_initWithInt_(self, size);
}

OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue *new_OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue_initWithInt_(jint size) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue, initWithInt_, size)
}

OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue *create_OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue_initWithInt_(jint size) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue, initWithInt_, size)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_TermMergeQueue)

@implementation OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue

- (instancetype)initWithInt:(jint)size {
  OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue_initWithInt_(self, size);
  return self;
}

- (jboolean)lessThanWithId:(OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *)a
                    withId:(OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *)b {
  return [((NSString *) nil_chk(((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk(a))->field_)) compareToWithId:((OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *) nil_chk(b))->field_] < 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(lessThanWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "I", "lessThan", "LOrgApacheLuceneIndexPrefixCodedTerms_TermIterator;LOrgApacheLuceneIndexPrefixCodedTerms_TermIterator;", "LOrgApacheLuceneIndexMergedPrefixCodedTermsIterator;", "Lorg/apache/lucene/util/PriorityQueue<Lorg/apache/lucene/index/PrefixCodedTerms$TermIterator;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue = { "FieldMergeQueue", "org.apache.lucene.index", ptrTable, methods, NULL, 7, 0xa, 2, 0, 3, -1, -1, 4, -1 };
  return &_OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue;
}

@end

void OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue_initWithInt_(OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue *self, jint size) {
  OrgApacheLuceneUtilPriorityQueue_initWithInt_(self, size);
}

OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue *new_OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue_initWithInt_(jint size) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue, initWithInt_, size)
}

OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue *create_OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue_initWithInt_(jint size) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue, initWithInt_, size)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMergedPrefixCodedTermsIterator_FieldMergeQueue)
