//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/BufferedUpdatesStream.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/List.h"
#include "java/util/Locale.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "java/util/concurrent/atomic/AtomicLong.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"
#include "org/apache/lucene/index/BufferedUpdatesStream.h"
#include "org/apache/lucene/index/CoalescedUpdates.h"
#include "org/apache/lucene/index/DocValuesFieldUpdates.h"
#include "org/apache/lucene/index/DocValuesType.h"
#include "org/apache/lucene/index/DocValuesUpdate.h"
#include "org/apache/lucene/index/FieldTermIterator.h"
#include "org/apache/lucene/index/Fields.h"
#include "org/apache/lucene/index/FrozenBufferedUpdates.h"
#include "org/apache/lucene/index/IndexWriter.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/index/PostingsEnum.h"
#include "org/apache/lucene/index/ReadersAndUpdates.h"
#include "org/apache/lucene/index/SegmentCommitInfo.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/index/SegmentInfos.h"
#include "org/apache/lucene/index/SegmentReader.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/index/Terms.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/Weight.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/util/Bits.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/InfoStream.h"
#include "org/apache/lucene/util/PriorityQueue.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/index/BufferedUpdatesStream must not be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wprotocol"
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface OrgApacheLuceneIndexBufferedUpdatesStream () {
 @public
  id<JavaUtilList> updates_;
  jlong nextGen_;
  OrgApacheLuceneUtilBytesRef *lastDeleteTerm_;
  OrgApacheLuceneUtilInfoStream *infoStream_;
  JavaUtilConcurrentAtomicAtomicLong *bytesUsed_;
  JavaUtilConcurrentAtomicAtomicInteger *numTerms_;
}

- (id<JavaUtilList>)sortByDelGenWithJavaUtilList:(id<JavaUtilList>)infos;

- (void)pruneWithInt:(jint)count;

/*!
 @brief Opens SegmentReader and inits SegmentState for each segment.
 */
- (IOSObjectArray *)openSegmentStatesWithOrgApacheLuceneIndexIndexWriter_ReaderPool:(OrgApacheLuceneIndexIndexWriter_ReaderPool *)pool
                                                                   withJavaUtilList:(id<JavaUtilList>)infos;

/*!
 @brief Close segment states previously opened with openSegmentStates.
 */
- (OrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult *)closeSegmentStatesWithOrgApacheLuceneIndexIndexWriter_ReaderPool:(OrgApacheLuceneIndexIndexWriter_ReaderPool *)pool
                                                                   withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentStateArray:(IOSObjectArray *)segStates
                                                                                                                       withBoolean:(jboolean)success
                                                                                                                          withLong:(jlong)gen;

/*!
 @brief Merge sorts the deleted terms and all segments to resolve terms to docIDs for deletion.
 */
- (jlong)applyTermDeletesWithOrgApacheLuceneIndexCoalescedUpdates:(OrgApacheLuceneIndexCoalescedUpdates *)updates
  withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentStateArray:(IOSObjectArray *)segStates;

- (void)applyDocValuesUpdatesWithJavaLangIterable:(id<JavaLangIterable>)updates
withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState:(OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *)segState
withOrgApacheLuceneIndexDocValuesFieldUpdates_Container:(OrgApacheLuceneIndexDocValuesFieldUpdates_Container *)dvUpdatesContainer;

+ (jlong)applyQueryDeletesWithJavaLangIterable:(id<JavaLangIterable>)queriesIter
withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState:(OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *)segState;

- (jboolean)checkDeleteTermWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term;

- (jboolean)checkDeleteStats;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexBufferedUpdatesStream, updates_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexBufferedUpdatesStream, lastDeleteTerm_, OrgApacheLuceneUtilBytesRef *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexBufferedUpdatesStream, infoStream_, OrgApacheLuceneUtilInfoStream *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexBufferedUpdatesStream, bytesUsed_, JavaUtilConcurrentAtomicAtomicLong *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexBufferedUpdatesStream, numTerms_, JavaUtilConcurrentAtomicAtomicInteger *)

inline id<JavaUtilComparator> OrgApacheLuceneIndexBufferedUpdatesStream_get_sortSegInfoByDelGen(void);
static id<JavaUtilComparator> OrgApacheLuceneIndexBufferedUpdatesStream_sortSegInfoByDelGen;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneIndexBufferedUpdatesStream, sortSegInfoByDelGen, id<JavaUtilComparator>)

__attribute__((unused)) static id<JavaUtilList> OrgApacheLuceneIndexBufferedUpdatesStream_sortByDelGenWithJavaUtilList_(OrgApacheLuceneIndexBufferedUpdatesStream *self, id<JavaUtilList> infos);

__attribute__((unused)) static void OrgApacheLuceneIndexBufferedUpdatesStream_pruneWithInt_(OrgApacheLuceneIndexBufferedUpdatesStream *self, jint count);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneIndexBufferedUpdatesStream_openSegmentStatesWithOrgApacheLuceneIndexIndexWriter_ReaderPool_withJavaUtilList_(OrgApacheLuceneIndexBufferedUpdatesStream *self, OrgApacheLuceneIndexIndexWriter_ReaderPool *pool, id<JavaUtilList> infos);

__attribute__((unused)) static OrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult *OrgApacheLuceneIndexBufferedUpdatesStream_closeSegmentStatesWithOrgApacheLuceneIndexIndexWriter_ReaderPool_withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentStateArray_withBoolean_withLong_(OrgApacheLuceneIndexBufferedUpdatesStream *self, OrgApacheLuceneIndexIndexWriter_ReaderPool *pool, IOSObjectArray *segStates, jboolean success, jlong gen);

__attribute__((unused)) static jlong OrgApacheLuceneIndexBufferedUpdatesStream_applyTermDeletesWithOrgApacheLuceneIndexCoalescedUpdates_withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentStateArray_(OrgApacheLuceneIndexBufferedUpdatesStream *self, OrgApacheLuceneIndexCoalescedUpdates *updates, IOSObjectArray *segStates);

__attribute__((unused)) static void OrgApacheLuceneIndexBufferedUpdatesStream_applyDocValuesUpdatesWithJavaLangIterable_withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState_withOrgApacheLuceneIndexDocValuesFieldUpdates_Container_(OrgApacheLuceneIndexBufferedUpdatesStream *self, id<JavaLangIterable> updates, OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *segState, OrgApacheLuceneIndexDocValuesFieldUpdates_Container *dvUpdatesContainer);

__attribute__((unused)) static jlong OrgApacheLuceneIndexBufferedUpdatesStream_applyQueryDeletesWithJavaLangIterable_withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState_(id<JavaLangIterable> queriesIter, OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *segState);

__attribute__((unused)) static jboolean OrgApacheLuceneIndexBufferedUpdatesStream_checkDeleteTermWithOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneIndexBufferedUpdatesStream *self, OrgApacheLuceneUtilBytesRef *term);

__attribute__((unused)) static jboolean OrgApacheLuceneIndexBufferedUpdatesStream_checkDeleteStats(OrgApacheLuceneIndexBufferedUpdatesStream *self);

@interface OrgApacheLuceneIndexBufferedUpdatesStream_1 : NSObject < JavaUtilComparator >

- (instancetype)init;

- (jint)compareWithId:(OrgApacheLuceneIndexSegmentCommitInfo *)si1
               withId:(OrgApacheLuceneIndexSegmentCommitInfo *)si2;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexBufferedUpdatesStream_1)

__attribute__((unused)) static void OrgApacheLuceneIndexBufferedUpdatesStream_1_init(OrgApacheLuceneIndexBufferedUpdatesStream_1 *self);

__attribute__((unused)) static OrgApacheLuceneIndexBufferedUpdatesStream_1 *new_OrgApacheLuceneIndexBufferedUpdatesStream_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexBufferedUpdatesStream_1 *create_OrgApacheLuceneIndexBufferedUpdatesStream_1_init(void);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneIndexBufferedUpdatesStream)

@implementation OrgApacheLuceneIndexBufferedUpdatesStream

- (instancetype)initPackagePrivateWithOrgApacheLuceneUtilInfoStream:(OrgApacheLuceneUtilInfoStream *)infoStream {
  OrgApacheLuceneIndexBufferedUpdatesStream_initPackagePrivateWithOrgApacheLuceneUtilInfoStream_(self, infoStream);
  return self;
}

- (jlong)pushWithOrgApacheLuceneIndexFrozenBufferedUpdates:(OrgApacheLuceneIndexFrozenBufferedUpdates *)packet {
  @synchronized(self) {
    [((OrgApacheLuceneIndexFrozenBufferedUpdates *) nil_chk(packet)) setDelGenWithLong:nextGen_++];
    JreAssert([packet any], @"org/apache/lucene/index/BufferedUpdatesStream.java:90 condition failed: assert packet.any();");
    JreAssert(OrgApacheLuceneIndexBufferedUpdatesStream_checkDeleteStats(self), @"org/apache/lucene/index/BufferedUpdatesStream.java:91 condition failed: assert checkDeleteStats();");
    JreAssert([packet delGen] < nextGen_, @"org/apache/lucene/index/BufferedUpdatesStream.java:92 condition failed: assert packet.delGen() < nextGen;");
    JreAssert([((id<JavaUtilList>) nil_chk(updates_)) isEmpty] || [((OrgApacheLuceneIndexFrozenBufferedUpdates *) nil_chk([updates_ getWithInt:[updates_ size] - 1])) delGen] < [packet delGen], @"Delete packets must be in order");
    [updates_ addWithId:packet];
    [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(numTerms_)) addAndGetWithInt:packet->numTermDeletes_];
    [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(bytesUsed_)) addAndGetWithLong:packet->bytesUsed_];
    if ([((OrgApacheLuceneUtilInfoStream *) nil_chk(infoStream_)) isEnabledWithNSString:@"BD"]) {
      [infoStream_ messageWithNSString:@"BD" withNSString:JreStrcat("$@$Z$J$I$J", @"push deletes ", packet, @" segmentPrivate?=", packet->isSegmentPrivate_, @" delGen=", [packet delGen], @" packetCount=", [updates_ size], @" totBytesUsed=", [bytesUsed_ get])];
    }
    JreAssert(OrgApacheLuceneIndexBufferedUpdatesStream_checkDeleteStats(self), @"org/apache/lucene/index/BufferedUpdatesStream.java:100 condition failed: assert checkDeleteStats();");
    return [packet delGen];
  }
}

- (void)clear {
  @synchronized(self) {
    [((id<JavaUtilList>) nil_chk(updates_)) clear];
    nextGen_ = 1;
    [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(numTerms_)) setWithInt:0];
    [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(bytesUsed_)) setWithLong:0];
  }
}

- (jboolean)any {
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(bytesUsed_)) get] != 0;
}

- (jint)numTerms {
  return [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(numTerms_)) get];
}

- (jlong)ramBytesUsed {
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(bytesUsed_)) get];
}

- (id<JavaUtilCollection>)getChildResources {
  return JavaUtilCollections_emptyList();
}

- (OrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult *)applyDeletesAndUpdatesWithOrgApacheLuceneIndexIndexWriter_ReaderPool:(OrgApacheLuceneIndexIndexWriter_ReaderPool *)pool
                                                                                                                      withJavaUtilList:(id<JavaUtilList>)infos {
  @synchronized(self) {
    jlong t0 = JavaLangSystem_currentTimeMillis();
    jlong gen = nextGen_++;
    if ([((id<JavaUtilList>) nil_chk(infos)) size] == 0) {
      return create_OrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult_initWithBoolean_withLong_withJavaUtilList_(false, gen, nil);
    }
    IOSObjectArray *segStates = nil;
    jlong totDelCount = 0;
    jlong totTermVisitedCount = 0;
    jboolean success = false;
    OrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult *result = nil;
    @try {
      if ([((OrgApacheLuceneUtilInfoStream *) nil_chk(infoStream_)) isEnabledWithNSString:@"BD"]) {
        [infoStream_ messageWithNSString:@"BD" withNSString:NSString_java_formatWithJavaUtilLocale_withNSString_withNSObjectArray_(JreLoadStatic(JavaUtilLocale, ROOT), @"applyDeletes: open segment readers took %d msec", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(JavaLangSystem_currentTimeMillis() - t0) } count:1 type:NSObject_class_()])];
      }
      JreAssert(OrgApacheLuceneIndexBufferedUpdatesStream_checkDeleteStats(self), @"org/apache/lucene/index/BufferedUpdatesStream.java:182 condition failed: assert checkDeleteStats();");
      if (![self any]) {
        if ([infoStream_ isEnabledWithNSString:@"BD"]) {
          [infoStream_ messageWithNSString:@"BD" withNSString:@"applyDeletes: no segments; skipping"];
        }
        return create_OrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult_initWithBoolean_withLong_withJavaUtilList_(false, gen, nil);
      }
      if ([infoStream_ isEnabledWithNSString:@"BD"]) {
        [infoStream_ messageWithNSString:@"BD" withNSString:JreStrcat("$@$I", @"applyDeletes: infos=", infos, @" packetCount=", [((id<JavaUtilList>) nil_chk(updates_)) size])];
      }
      infos = OrgApacheLuceneIndexBufferedUpdatesStream_sortByDelGenWithJavaUtilList_(self, infos);
      OrgApacheLuceneIndexCoalescedUpdates *coalescedUpdates = nil;
      jint infosIDX = [((id<JavaUtilList>) nil_chk(infos)) size] - 1;
      jint delIDX = [((id<JavaUtilList>) nil_chk(updates_)) size] - 1;
      while (infosIDX >= 0) {
        OrgApacheLuceneIndexFrozenBufferedUpdates *packet = delIDX >= 0 ? [updates_ getWithInt:delIDX] : nil;
        OrgApacheLuceneIndexSegmentCommitInfo *info = [infos getWithInt:infosIDX];
        jlong segGen = [((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info)) getBufferedDeletesGen];
        if (packet != nil && segGen < [packet delGen]) {
          if (!packet->isSegmentPrivate_ && [packet any]) {
            if (coalescedUpdates == nil) {
              coalescedUpdates = create_OrgApacheLuceneIndexCoalescedUpdates_initPackagePrivate();
            }
            [coalescedUpdates updateWithOrgApacheLuceneIndexFrozenBufferedUpdates:packet];
          }
          delIDX--;
        }
        else if (packet != nil && segGen == [packet delGen]) {
          JreAssert(packet->isSegmentPrivate_, JreStrcat("$J", @"Packet and Segments deletegen can only match on a segment private del packet gen=", segGen));
          if (segStates == nil) {
            segStates = OrgApacheLuceneIndexBufferedUpdatesStream_openSegmentStatesWithOrgApacheLuceneIndexIndexWriter_ReaderPool_withJavaUtilList_(self, pool, infos);
          }
          OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *segState = IOSObjectArray_Get(nil_chk(segStates), infosIDX);
          JreAssert([((OrgApacheLuceneIndexIndexWriter_ReaderPool *) nil_chk(pool)) infoIsLiveWithOrgApacheLuceneIndexSegmentCommitInfo:info], @"org/apache/lucene/index/BufferedUpdatesStream.java:233 condition failed: assert pool.infoIsLive(info);");
          jint delCount = 0;
          OrgApacheLuceneIndexDocValuesFieldUpdates_Container *dvUpdates = create_OrgApacheLuceneIndexDocValuesFieldUpdates_Container_init();
          if (coalescedUpdates != nil) {
            delCount += OrgApacheLuceneIndexBufferedUpdatesStream_applyQueryDeletesWithJavaLangIterable_withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState_([coalescedUpdates queriesIterable], segState);
            OrgApacheLuceneIndexBufferedUpdatesStream_applyDocValuesUpdatesWithJavaLangIterable_withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState_withOrgApacheLuceneIndexDocValuesFieldUpdates_Container_(self, coalescedUpdates->numericDVUpdates_, segState, dvUpdates);
            OrgApacheLuceneIndexBufferedUpdatesStream_applyDocValuesUpdatesWithJavaLangIterable_withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState_withOrgApacheLuceneIndexDocValuesFieldUpdates_Container_(self, coalescedUpdates->binaryDVUpdates_, segState, dvUpdates);
          }
          delCount += OrgApacheLuceneIndexBufferedUpdatesStream_applyQueryDeletesWithJavaLangIterable_withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState_([packet queriesIterable], segState);
          OrgApacheLuceneIndexBufferedUpdatesStream_applyDocValuesUpdatesWithJavaLangIterable_withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState_withOrgApacheLuceneIndexDocValuesFieldUpdates_Container_(self, JavaUtilArrays_asListWithNSObjectArray_(packet->numericDVUpdates_), segState, dvUpdates);
          OrgApacheLuceneIndexBufferedUpdatesStream_applyDocValuesUpdatesWithJavaLangIterable_withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState_withOrgApacheLuceneIndexDocValuesFieldUpdates_Container_(self, JavaUtilArrays_asListWithNSObjectArray_(packet->binaryDVUpdates_), segState, dvUpdates);
          if ([dvUpdates any]) {
            [((OrgApacheLuceneIndexReadersAndUpdates *) nil_chk(((OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *) nil_chk(segState))->rld_)) writeFieldUpdatesWithOrgApacheLuceneStoreDirectory:((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info->info_))->dir_ withOrgApacheLuceneIndexDocValuesFieldUpdates_Container:dvUpdates];
          }
          totDelCount += delCount;
          delIDX--;
          infosIDX--;
        }
        else {
          if (coalescedUpdates != nil) {
            if (segStates == nil) {
              segStates = OrgApacheLuceneIndexBufferedUpdatesStream_openSegmentStatesWithOrgApacheLuceneIndexIndexWriter_ReaderPool_withJavaUtilList_(self, pool, infos);
            }
            OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *segState = IOSObjectArray_Get(nil_chk(segStates), infosIDX);
            JreAssert([((OrgApacheLuceneIndexIndexWriter_ReaderPool *) nil_chk(pool)) infoIsLiveWithOrgApacheLuceneIndexSegmentCommitInfo:info], @"org/apache/lucene/index/BufferedUpdatesStream.java:265 condition failed: assert pool.infoIsLive(info);");
            jint delCount = 0;
            delCount += OrgApacheLuceneIndexBufferedUpdatesStream_applyQueryDeletesWithJavaLangIterable_withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState_([coalescedUpdates queriesIterable], segState);
            OrgApacheLuceneIndexDocValuesFieldUpdates_Container *dvUpdates = create_OrgApacheLuceneIndexDocValuesFieldUpdates_Container_init();
            OrgApacheLuceneIndexBufferedUpdatesStream_applyDocValuesUpdatesWithJavaLangIterable_withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState_withOrgApacheLuceneIndexDocValuesFieldUpdates_Container_(self, coalescedUpdates->numericDVUpdates_, segState, dvUpdates);
            OrgApacheLuceneIndexBufferedUpdatesStream_applyDocValuesUpdatesWithJavaLangIterable_withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState_withOrgApacheLuceneIndexDocValuesFieldUpdates_Container_(self, coalescedUpdates->binaryDVUpdates_, segState, dvUpdates);
            if ([dvUpdates any]) {
              [((OrgApacheLuceneIndexReadersAndUpdates *) nil_chk(((OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *) nil_chk(segState))->rld_)) writeFieldUpdatesWithOrgApacheLuceneStoreDirectory:((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info->info_))->dir_ withOrgApacheLuceneIndexDocValuesFieldUpdates_Container:dvUpdates];
            }
            totDelCount += delCount;
          }
          infosIDX--;
        }
      }
      if (coalescedUpdates != nil && coalescedUpdates->totalTermCount_ != 0) {
        if (segStates == nil) {
          segStates = OrgApacheLuceneIndexBufferedUpdatesStream_openSegmentStatesWithOrgApacheLuceneIndexIndexWriter_ReaderPool_withJavaUtilList_(self, pool, infos);
        }
        totTermVisitedCount += OrgApacheLuceneIndexBufferedUpdatesStream_applyTermDeletesWithOrgApacheLuceneIndexCoalescedUpdates_withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentStateArray_(self, coalescedUpdates, segStates);
      }
      JreAssert(OrgApacheLuceneIndexBufferedUpdatesStream_checkDeleteStats(self), @"org/apache/lucene/index/BufferedUpdatesStream.java:290 condition failed: assert checkDeleteStats();");
      success = true;
    }
    @finally {
      if (segStates != nil) {
        result = OrgApacheLuceneIndexBufferedUpdatesStream_closeSegmentStatesWithOrgApacheLuceneIndexIndexWriter_ReaderPool_withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentStateArray_withBoolean_withLong_(self, pool, segStates, success, gen);
      }
    }
    if (result == nil) {
      result = create_OrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult_initWithBoolean_withLong_withJavaUtilList_(false, gen, nil);
    }
    if ([infoStream_ isEnabledWithNSString:@"BD"]) {
      [infoStream_ messageWithNSString:@"BD" withNSString:NSString_java_formatWithJavaUtilLocale_withNSString_withNSObjectArray_(JreLoadStatic(JavaUtilLocale, ROOT), @"applyDeletes took %d msec for %d segments, %d newly deleted docs (query deletes), %d visited terms, allDeleted=%s", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(JavaLangSystem_currentTimeMillis() - t0), JavaLangInteger_valueOfWithInt_([infos size]), JavaLangLong_valueOfWithLong_(totDelCount), JavaLangLong_valueOfWithLong_(totTermVisitedCount), result->allDeleted_ } count:5 type:NSObject_class_()])];
    }
    return JreRetainedLocalValue(result);
  }
}

- (id<JavaUtilList>)sortByDelGenWithJavaUtilList:(id<JavaUtilList>)infos {
  return OrgApacheLuceneIndexBufferedUpdatesStream_sortByDelGenWithJavaUtilList_(self, infos);
}

- (jlong)getNextGen {
  @synchronized(self) {
    return nextGen_++;
  }
}

- (void)pruneWithOrgApacheLuceneIndexSegmentInfos:(OrgApacheLuceneIndexSegmentInfos *)segmentInfos {
  @synchronized(self) {
    JreAssert(OrgApacheLuceneIndexBufferedUpdatesStream_checkDeleteStats(self), @"org/apache/lucene/index/BufferedUpdatesStream.java:330 condition failed: assert checkDeleteStats();");
    jlong minGen = JavaLangLong_MAX_VALUE;
    for (OrgApacheLuceneIndexSegmentCommitInfo * __strong info in nil_chk(segmentInfos)) {
      minGen = JavaLangMath_minWithLong_withLong_([((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info)) getBufferedDeletesGen], minGen);
    }
    if ([((OrgApacheLuceneUtilInfoStream *) nil_chk(infoStream_)) isEnabledWithNSString:@"BD"]) {
      [infoStream_ messageWithNSString:@"BD" withNSString:JreStrcat("$@$J$I", @"prune sis=", segmentInfos, @" minGen=", minGen, @" packetCount=", [((id<JavaUtilList>) nil_chk(updates_)) size])];
    }
    jint limit = [((id<JavaUtilList>) nil_chk(updates_)) size];
    for (jint delIDX = 0; delIDX < limit; delIDX++) {
      if ([((OrgApacheLuceneIndexFrozenBufferedUpdates *) nil_chk([updates_ getWithInt:delIDX])) delGen] >= minGen) {
        OrgApacheLuceneIndexBufferedUpdatesStream_pruneWithInt_(self, delIDX);
        JreAssert(OrgApacheLuceneIndexBufferedUpdatesStream_checkDeleteStats(self), @"org/apache/lucene/index/BufferedUpdatesStream.java:343 condition failed: assert checkDeleteStats();");
        return;
      }
    }
    OrgApacheLuceneIndexBufferedUpdatesStream_pruneWithInt_(self, limit);
    JreAssert(![self any], @"org/apache/lucene/index/BufferedUpdatesStream.java:350 condition failed: assert !any();");
    JreAssert(OrgApacheLuceneIndexBufferedUpdatesStream_checkDeleteStats(self), @"org/apache/lucene/index/BufferedUpdatesStream.java:351 condition failed: assert checkDeleteStats();");
  }
}

- (void)pruneWithInt:(jint)count {
  OrgApacheLuceneIndexBufferedUpdatesStream_pruneWithInt_(self, count);
}

- (IOSObjectArray *)openSegmentStatesWithOrgApacheLuceneIndexIndexWriter_ReaderPool:(OrgApacheLuceneIndexIndexWriter_ReaderPool *)pool
                                                                   withJavaUtilList:(id<JavaUtilList>)infos {
  return OrgApacheLuceneIndexBufferedUpdatesStream_openSegmentStatesWithOrgApacheLuceneIndexIndexWriter_ReaderPool_withJavaUtilList_(self, pool, infos);
}

- (OrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult *)closeSegmentStatesWithOrgApacheLuceneIndexIndexWriter_ReaderPool:(OrgApacheLuceneIndexIndexWriter_ReaderPool *)pool
                                                                   withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentStateArray:(IOSObjectArray *)segStates
                                                                                                                       withBoolean:(jboolean)success
                                                                                                                          withLong:(jlong)gen {
  return OrgApacheLuceneIndexBufferedUpdatesStream_closeSegmentStatesWithOrgApacheLuceneIndexIndexWriter_ReaderPool_withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentStateArray_withBoolean_withLong_(self, pool, segStates, success, gen);
}

- (jlong)applyTermDeletesWithOrgApacheLuceneIndexCoalescedUpdates:(OrgApacheLuceneIndexCoalescedUpdates *)updates
  withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentStateArray:(IOSObjectArray *)segStates {
  return OrgApacheLuceneIndexBufferedUpdatesStream_applyTermDeletesWithOrgApacheLuceneIndexCoalescedUpdates_withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentStateArray_(self, updates, segStates);
}

- (void)applyDocValuesUpdatesWithJavaLangIterable:(id<JavaLangIterable>)updates
withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState:(OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *)segState
withOrgApacheLuceneIndexDocValuesFieldUpdates_Container:(OrgApacheLuceneIndexDocValuesFieldUpdates_Container *)dvUpdatesContainer {
  OrgApacheLuceneIndexBufferedUpdatesStream_applyDocValuesUpdatesWithJavaLangIterable_withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState_withOrgApacheLuceneIndexDocValuesFieldUpdates_Container_(self, updates, segState, dvUpdatesContainer);
}

+ (jlong)applyQueryDeletesWithJavaLangIterable:(id<JavaLangIterable>)queriesIter
withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState:(OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *)segState {
  return OrgApacheLuceneIndexBufferedUpdatesStream_applyQueryDeletesWithJavaLangIterable_withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState_(queriesIter, segState);
}

- (jboolean)checkDeleteTermWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term {
  return OrgApacheLuceneIndexBufferedUpdatesStream_checkDeleteTermWithOrgApacheLuceneUtilBytesRef_(self, term);
}

- (jboolean)checkDeleteStats {
  return OrgApacheLuceneIndexBufferedUpdatesStream_checkDeleteStats(self);
}

- (void)dealloc {
  RELEASE_(updates_);
  RELEASE_(lastDeleteTerm_);
  RELEASE_(infoStream_);
  RELEASE_(bytesUsed_);
  RELEASE_(numTerms_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "J", 0x21, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult;", 0x21, 4, 5, 6, 7, -1, -1 },
    { NULL, "LJavaUtilList;", 0x2, 8, 9, -1, 10, -1, -1 },
    { NULL, "J", 0x20, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x21, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x22, 11, 13, -1, -1, -1, -1 },
    { NULL, "[LOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState;", 0x2, 14, 5, 6, 15, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult;", 0x2, 16, 17, 6, -1, -1, -1 },
    { NULL, "J", 0x22, 18, 19, 6, -1, -1, -1 },
    { NULL, "V", 0x22, 20, 21, 6, 22, -1, -1 },
    { NULL, "J", 0xa, 23, 24, 6, 25, -1, -1 },
    { NULL, "Z", 0x2, 26, 27, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgApacheLuceneUtilInfoStream:);
  methods[1].selector = @selector(pushWithOrgApacheLuceneIndexFrozenBufferedUpdates:);
  methods[2].selector = @selector(clear);
  methods[3].selector = @selector(any);
  methods[4].selector = @selector(numTerms);
  methods[5].selector = @selector(ramBytesUsed);
  methods[6].selector = @selector(getChildResources);
  methods[7].selector = @selector(applyDeletesAndUpdatesWithOrgApacheLuceneIndexIndexWriter_ReaderPool:withJavaUtilList:);
  methods[8].selector = @selector(sortByDelGenWithJavaUtilList:);
  methods[9].selector = @selector(getNextGen);
  methods[10].selector = @selector(pruneWithOrgApacheLuceneIndexSegmentInfos:);
  methods[11].selector = @selector(pruneWithInt:);
  methods[12].selector = @selector(openSegmentStatesWithOrgApacheLuceneIndexIndexWriter_ReaderPool:withJavaUtilList:);
  methods[13].selector = @selector(closeSegmentStatesWithOrgApacheLuceneIndexIndexWriter_ReaderPool:withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentStateArray:withBoolean:withLong:);
  methods[14].selector = @selector(applyTermDeletesWithOrgApacheLuceneIndexCoalescedUpdates:withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentStateArray:);
  methods[15].selector = @selector(applyDocValuesUpdatesWithJavaLangIterable:withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState:withOrgApacheLuceneIndexDocValuesFieldUpdates_Container:);
  methods[16].selector = @selector(applyQueryDeletesWithJavaLangIterable:withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState:);
  methods[17].selector = @selector(checkDeleteTermWithOrgApacheLuceneUtilBytesRef:);
  methods[18].selector = @selector(checkDeleteStats);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "updates_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 28, -1 },
    { "nextGen_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "lastDeleteTerm_", "LOrgApacheLuceneUtilBytesRef;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "infoStream_", "LOrgApacheLuceneUtilInfoStream;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "bytesUsed_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "numTerms_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "sortSegInfoByDelGen", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x1a, -1, 29, 30, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneUtilInfoStream;", "push", "LOrgApacheLuceneIndexFrozenBufferedUpdates;", "()Ljava/util/Collection<Lorg/apache/lucene/util/Accountable;>;", "applyDeletesAndUpdates", "LOrgApacheLuceneIndexIndexWriter_ReaderPool;LJavaUtilList;", "LJavaIoIOException;", "(Lorg/apache/lucene/index/IndexWriter$ReaderPool;Ljava/util/List<Lorg/apache/lucene/index/SegmentCommitInfo;>;)Lorg/apache/lucene/index/BufferedUpdatesStream$ApplyDeletesResult;", "sortByDelGen", "LJavaUtilList;", "(Ljava/util/List<Lorg/apache/lucene/index/SegmentCommitInfo;>;)Ljava/util/List<Lorg/apache/lucene/index/SegmentCommitInfo;>;", "prune", "LOrgApacheLuceneIndexSegmentInfos;", "I", "openSegmentStates", "(Lorg/apache/lucene/index/IndexWriter$ReaderPool;Ljava/util/List<Lorg/apache/lucene/index/SegmentCommitInfo;>;)[Lorg/apache/lucene/index/BufferedUpdatesStream$SegmentState;", "closeSegmentStates", "LOrgApacheLuceneIndexIndexWriter_ReaderPool;[LOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState;ZJ", "applyTermDeletes", "LOrgApacheLuceneIndexCoalescedUpdates;[LOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState;", "applyDocValuesUpdates", "LJavaLangIterable;LOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState;LOrgApacheLuceneIndexDocValuesFieldUpdates_Container;", "(Ljava/lang/Iterable<+Lorg/apache/lucene/index/DocValuesUpdate;>;Lorg/apache/lucene/index/BufferedUpdatesStream$SegmentState;Lorg/apache/lucene/index/DocValuesFieldUpdates$Container;)V", "applyQueryDeletes", "LJavaLangIterable;LOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState;", "(Ljava/lang/Iterable<Lorg/apache/lucene/index/BufferedUpdatesStream$QueryAndLimit;>;Lorg/apache/lucene/index/BufferedUpdatesStream$SegmentState;)J", "checkDeleteTerm", "LOrgApacheLuceneUtilBytesRef;", "Ljava/util/List<Lorg/apache/lucene/index/FrozenBufferedUpdates;>;", &OrgApacheLuceneIndexBufferedUpdatesStream_sortSegInfoByDelGen, "Ljava/util/Comparator<Lorg/apache/lucene/index/SegmentCommitInfo;>;", "LOrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult;LOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState;LOrgApacheLuceneIndexBufferedUpdatesStream_SegmentQueue;LOrgApacheLuceneIndexBufferedUpdatesStream_QueryAndLimit;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexBufferedUpdatesStream = { "BufferedUpdatesStream", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x0, 19, 7, -1, 31, -1, -1, -1 };
  return &_OrgApacheLuceneIndexBufferedUpdatesStream;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneIndexBufferedUpdatesStream class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneIndexBufferedUpdatesStream_sortSegInfoByDelGen, new_OrgApacheLuceneIndexBufferedUpdatesStream_1_init());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneIndexBufferedUpdatesStream)
  }
}

@end

void OrgApacheLuceneIndexBufferedUpdatesStream_initPackagePrivateWithOrgApacheLuceneUtilInfoStream_(OrgApacheLuceneIndexBufferedUpdatesStream *self, OrgApacheLuceneUtilInfoStream *infoStream) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->updates_, new_JavaUtilArrayList_init());
  self->nextGen_ = 1;
  JreStrongAssignAndConsume(&self->bytesUsed_, new_JavaUtilConcurrentAtomicAtomicLong_init());
  JreStrongAssignAndConsume(&self->numTerms_, new_JavaUtilConcurrentAtomicAtomicInteger_init());
  JreStrongAssign(&self->infoStream_, infoStream);
}

OrgApacheLuceneIndexBufferedUpdatesStream *new_OrgApacheLuceneIndexBufferedUpdatesStream_initPackagePrivateWithOrgApacheLuceneUtilInfoStream_(OrgApacheLuceneUtilInfoStream *infoStream) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexBufferedUpdatesStream, initPackagePrivateWithOrgApacheLuceneUtilInfoStream_, infoStream)
}

OrgApacheLuceneIndexBufferedUpdatesStream *create_OrgApacheLuceneIndexBufferedUpdatesStream_initPackagePrivateWithOrgApacheLuceneUtilInfoStream_(OrgApacheLuceneUtilInfoStream *infoStream) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexBufferedUpdatesStream, initPackagePrivateWithOrgApacheLuceneUtilInfoStream_, infoStream)
}

id<JavaUtilList> OrgApacheLuceneIndexBufferedUpdatesStream_sortByDelGenWithJavaUtilList_(OrgApacheLuceneIndexBufferedUpdatesStream *self, id<JavaUtilList> infos) {
  infos = create_JavaUtilArrayList_initWithJavaUtilCollection_(infos);
  JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(infos, OrgApacheLuceneIndexBufferedUpdatesStream_sortSegInfoByDelGen);
  return infos;
}

void OrgApacheLuceneIndexBufferedUpdatesStream_pruneWithInt_(OrgApacheLuceneIndexBufferedUpdatesStream *self, jint count) {
  @synchronized(self) {
    if (count > 0) {
      if ([((OrgApacheLuceneUtilInfoStream *) nil_chk(self->infoStream_)) isEnabledWithNSString:@"BD"]) {
        [self->infoStream_ messageWithNSString:@"BD" withNSString:JreStrcat("$I$I$", @"pruneDeletes: prune ", count, @" packets; ", ([((id<JavaUtilList>) nil_chk(self->updates_)) size] - count), @" packets remain")];
      }
      for (jint delIDX = 0; delIDX < count; delIDX++) {
        OrgApacheLuceneIndexFrozenBufferedUpdates *packet = [((id<JavaUtilList>) nil_chk(self->updates_)) getWithInt:delIDX];
        [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(self->numTerms_)) addAndGetWithInt:-((OrgApacheLuceneIndexFrozenBufferedUpdates *) nil_chk(packet))->numTermDeletes_];
        JreAssert([self->numTerms_ get] >= 0, @"org/apache/lucene/index/BufferedUpdatesStream.java:362 condition failed: assert numTerms.get() >= 0;");
        [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(self->bytesUsed_)) addAndGetWithLong:-packet->bytesUsed_];
        JreAssert([self->bytesUsed_ get] >= 0, @"org/apache/lucene/index/BufferedUpdatesStream.java:364 condition failed: assert bytesUsed.get() >= 0;");
      }
      [((id<JavaUtilList>) nil_chk([((id<JavaUtilList>) nil_chk(self->updates_)) subListWithInt:0 withInt:count])) clear];
    }
  }
}

IOSObjectArray *OrgApacheLuceneIndexBufferedUpdatesStream_openSegmentStatesWithOrgApacheLuceneIndexIndexWriter_ReaderPool_withJavaUtilList_(OrgApacheLuceneIndexBufferedUpdatesStream *self, OrgApacheLuceneIndexIndexWriter_ReaderPool *pool, id<JavaUtilList> infos) {
  jint numReaders = [((id<JavaUtilList>) nil_chk(infos)) size];
  IOSObjectArray *segStates = [IOSObjectArray arrayWithLength:numReaders type:OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState_class_()];
  jboolean success = false;
  @try {
    for (jint i = 0; i < numReaders; i++) {
      IOSObjectArray_SetAndConsume(segStates, i, new_OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState_initWithOrgApacheLuceneIndexIndexWriter_ReaderPool_withOrgApacheLuceneIndexSegmentCommitInfo_(pool, [infos getWithInt:i]));
    }
    success = true;
  }
  @finally {
    if (success == false) {
      for (jint j = 0; j < numReaders; j++) {
        if (IOSObjectArray_Get(segStates, j) != nil) {
          @try {
            [((OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *) nil_chk(IOSObjectArray_Get(segStates, j))) finishWithOrgApacheLuceneIndexIndexWriter_ReaderPool:pool];
          }
          @catch (JavaLangThrowable *th) {
          }
        }
      }
    }
  }
  return segStates;
}

OrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult *OrgApacheLuceneIndexBufferedUpdatesStream_closeSegmentStatesWithOrgApacheLuceneIndexIndexWriter_ReaderPool_withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentStateArray_withBoolean_withLong_(OrgApacheLuceneIndexBufferedUpdatesStream *self, OrgApacheLuceneIndexIndexWriter_ReaderPool *pool, IOSObjectArray *segStates, jboolean success, jlong gen) {
  jint numReaders = ((IOSObjectArray *) nil_chk(segStates))->size_;
  JavaLangThrowable *firstExc = nil;
  id<JavaUtilList> allDeleted = nil;
  jlong totDelCount = 0;
  for (jint j = 0; j < numReaders; j++) {
    OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *segState = IOSObjectArray_Get(segStates, j);
    if (success) {
      totDelCount += [((OrgApacheLuceneIndexReadersAndUpdates *) nil_chk(((OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *) nil_chk(segState))->rld_)) getPendingDeleteCount] - segState->startDelCount_;
      [((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk([((OrgApacheLuceneIndexSegmentReader *) nil_chk(segState->reader_)) getSegmentInfo])) setBufferedDeletesGenWithLong:gen];
      jint fullDelCount = [((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(segState->rld_->info_)) getDelCount] + [segState->rld_ getPendingDeleteCount];
      JreAssert(fullDelCount <= [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(segState->rld_->info_->info_)) maxDoc], @"org/apache/lucene/index/BufferedUpdatesStream.java:448 condition failed: assert fullDelCount <= segState.rld.info.info.maxDoc();");
      if (fullDelCount == [segState->rld_->info_->info_ maxDoc]) {
        if (allDeleted == nil) {
          allDeleted = create_JavaUtilArrayList_init();
        }
        [allDeleted addWithId:[segState->reader_ getSegmentInfo]];
      }
    }
    @try {
      [((OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *) nil_chk(IOSObjectArray_Get(segStates, j))) finishWithOrgApacheLuceneIndexIndexWriter_ReaderPool:pool];
    }
    @catch (JavaLangThrowable *th) {
      if (firstExc != nil) {
        firstExc = th;
      }
    }
  }
  if (success) {
    OrgApacheLuceneUtilIOUtils_reThrowWithJavaLangThrowable_(firstExc);
  }
  if ([((OrgApacheLuceneUtilInfoStream *) nil_chk(self->infoStream_)) isEnabledWithNSString:@"BD"]) {
    [self->infoStream_ messageWithNSString:@"BD" withNSString:JreStrcat("$J$", @"applyDeletes: ", totDelCount, @" new deleted documents")];
  }
  return create_OrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult_initWithBoolean_withLong_withJavaUtilList_(totDelCount > 0, gen, allDeleted);
}

jlong OrgApacheLuceneIndexBufferedUpdatesStream_applyTermDeletesWithOrgApacheLuceneIndexCoalescedUpdates_withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentStateArray_(OrgApacheLuceneIndexBufferedUpdatesStream *self, OrgApacheLuceneIndexCoalescedUpdates *updates, IOSObjectArray *segStates) {
  @synchronized(self) {
    jlong startNS = JavaLangSystem_nanoTime();
    jint numReaders = ((IOSObjectArray *) nil_chk(segStates))->size_;
    jlong delTermVisitedCount = 0;
    jlong segTermVisitedCount = 0;
    OrgApacheLuceneIndexFieldTermIterator *iter = JreRetainedLocalValue([((OrgApacheLuceneIndexCoalescedUpdates *) nil_chk(updates)) termIterator]);
    NSString *field = nil;
    OrgApacheLuceneIndexBufferedUpdatesStream_SegmentQueue *queue = nil;
    OrgApacheLuceneUtilBytesRef *term;
    while ((term = [((OrgApacheLuceneIndexFieldTermIterator *) nil_chk(iter)) next]) != nil) {
      if (!JreStringEqualsEquals([iter field], field)) {
        field = [iter field];
        queue = create_OrgApacheLuceneIndexBufferedUpdatesStream_SegmentQueue_initWithInt_(numReaders);
        jlong segTermCount = 0;
        for (jint i = 0; i < numReaders; i++) {
          OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *state = IOSObjectArray_Get(segStates, i);
          OrgApacheLuceneIndexTerms *terms = JreRetainedLocalValue([((OrgApacheLuceneIndexFields *) nil_chk([((OrgApacheLuceneIndexSegmentReader *) nil_chk(((OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *) nil_chk(state))->reader_)) fields])) termsWithNSString:field]);
          if (terms != nil) {
            segTermCount += [terms size];
            JreStrongAssign(&state->termsEnum_, [terms iterator]);
            JreStrongAssign(&state->term_, [((OrgApacheLuceneIndexTermsEnum *) nil_chk(state->termsEnum_)) next]);
            if (state->term_ != nil) {
              [queue addWithId:state];
            }
          }
        }
        JreAssert(OrgApacheLuceneIndexBufferedUpdatesStream_checkDeleteTermWithOrgApacheLuceneUtilBytesRef_(self, nil), @"org/apache/lucene/index/BufferedUpdatesStream.java:516 condition failed: assert checkDeleteTerm(null);");
      }
      JreAssert(OrgApacheLuceneIndexBufferedUpdatesStream_checkDeleteTermWithOrgApacheLuceneUtilBytesRef_(self, term), @"org/apache/lucene/index/BufferedUpdatesStream.java:519 condition failed: assert checkDeleteTerm(term);");
      delTermVisitedCount++;
      jlong delGen = [iter delGen];
      while ([((OrgApacheLuceneIndexBufferedUpdatesStream_SegmentQueue *) nil_chk(queue)) size] != 0) {
        OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *state = JreRetainedLocalValue([queue top]);
        segTermVisitedCount++;
        jint cmp = [((OrgApacheLuceneUtilBytesRef *) nil_chk(term)) compareToWithId:((OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *) nil_chk(state))->term_];
        if (cmp < 0) {
          break;
        }
        else if (cmp == 0) {
        }
        else {
          OrgApacheLuceneIndexTermsEnum_SeekStatus *status = JreRetainedLocalValue([((OrgApacheLuceneIndexTermsEnum *) nil_chk(state->termsEnum_)) seekCeilWithOrgApacheLuceneUtilBytesRef:term]);
          if (status == JreLoadEnum(OrgApacheLuceneIndexTermsEnum_SeekStatus, FOUND)) {
          }
          else {
            if (status == JreLoadEnum(OrgApacheLuceneIndexTermsEnum_SeekStatus, NOT_FOUND)) {
              JreStrongAssign(&state->term_, [((OrgApacheLuceneIndexTermsEnum *) nil_chk(state->termsEnum_)) term]);
              [queue updateTop];
            }
            else {
              [queue pop];
            }
            continue;
          }
        }
        JreAssert(state->delGen_ != delGen, @"org/apache/lucene/index/BufferedUpdatesStream.java:554 condition failed: assert state.delGen != delGen;");
        if (state->delGen_ < delGen) {
          id<OrgApacheLuceneUtilBits> acceptDocs = [((OrgApacheLuceneIndexReadersAndUpdates *) nil_chk(state->rld_)) getLiveDocs];
          JreStrongAssign(&state->postingsEnum_, [((OrgApacheLuceneIndexTermsEnum *) nil_chk(state->termsEnum_)) postingsWithOrgApacheLuceneIndexPostingsEnum:state->postingsEnum_ withInt:OrgApacheLuceneIndexPostingsEnum_NONE]);
          JreAssert(state->postingsEnum_ != nil, @"org/apache/lucene/index/BufferedUpdatesStream.java:562 condition failed: assert state.postingsEnum != null;");
          while (true) {
            jint docID = [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(state->postingsEnum_)) nextDoc];
            if (docID == OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
              break;
            }
            if (acceptDocs != nil && [acceptDocs getWithInt:docID] == false) {
              continue;
            }
            if (!state->any_) {
              [state->rld_ initWritableLiveDocs];
              state->any_ = true;
            }
            [state->rld_ delete__WithInt:docID];
          }
        }
        JreStrongAssign(&state->term_, [((OrgApacheLuceneIndexTermsEnum *) nil_chk(state->termsEnum_)) next]);
        if (state->term_ == nil) {
          [queue pop];
        }
        else {
          [queue updateTop];
        }
      }
    }
    if ([((OrgApacheLuceneUtilInfoStream *) nil_chk(self->infoStream_)) isEnabledWithNSString:@"BD"]) {
      [self->infoStream_ messageWithNSString:@"BD" withNSString:NSString_java_formatWithJavaUtilLocale_withNSString_withNSObjectArray_(JreLoadStatic(JavaUtilLocale, ROOT), @"applyTermDeletes took %.1f msec for %d segments and %d packets; %d del terms visited; %d seg terms visited", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangDouble_valueOfWithDouble_((JavaLangSystem_nanoTime() - startNS) / 1000000.), JavaLangInteger_valueOfWithInt_(numReaders), JavaLangInteger_valueOfWithInt_([((id<JavaUtilList>) nil_chk(updates->terms_)) size]), JavaLangLong_valueOfWithLong_(delTermVisitedCount), JavaLangLong_valueOfWithLong_(segTermVisitedCount) } count:5 type:NSObject_class_()])];
    }
    return delTermVisitedCount;
  }
}

void OrgApacheLuceneIndexBufferedUpdatesStream_applyDocValuesUpdatesWithJavaLangIterable_withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState_withOrgApacheLuceneIndexDocValuesFieldUpdates_Container_(OrgApacheLuceneIndexBufferedUpdatesStream *self, id<JavaLangIterable> updates, OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *segState, OrgApacheLuceneIndexDocValuesFieldUpdates_Container *dvUpdatesContainer) {
  @synchronized(self) {
    OrgApacheLuceneIndexFields *fields = JreRetainedLocalValue([((OrgApacheLuceneIndexSegmentReader *) nil_chk(((OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *) nil_chk(segState))->reader_)) fields]);
    NSString *currentField = nil;
    OrgApacheLuceneIndexTermsEnum *termsEnum = nil;
    OrgApacheLuceneIndexPostingsEnum *postingsEnum = nil;
    for (OrgApacheLuceneIndexDocValuesUpdate * __strong update in nil_chk(updates)) {
      OrgApacheLuceneIndexTerm *term = JreRetainedLocalValue(((OrgApacheLuceneIndexDocValuesUpdate *) nil_chk(update))->term_);
      jint limit = update->docIDUpto_;
      if (![((NSString *) nil_chk([((OrgApacheLuceneIndexTerm *) nil_chk(term)) field])) isEqual:currentField]) {
        currentField = [term field];
        OrgApacheLuceneIndexTerms *terms = JreRetainedLocalValue([((OrgApacheLuceneIndexFields *) nil_chk(fields)) termsWithNSString:currentField]);
        if (terms != nil) {
          termsEnum = [terms iterator];
        }
        else {
          termsEnum = nil;
        }
      }
      if (termsEnum == nil) {
        continue;
      }
      if ([termsEnum seekExactWithOrgApacheLuceneUtilBytesRef:[term bytes]]) {
        id<OrgApacheLuceneUtilBits> acceptDocs = [((OrgApacheLuceneIndexReadersAndUpdates *) nil_chk(segState->rld_)) getLiveDocs];
        postingsEnum = [termsEnum postingsWithOrgApacheLuceneIndexPostingsEnum:postingsEnum withInt:OrgApacheLuceneIndexPostingsEnum_NONE];
        OrgApacheLuceneIndexDocValuesFieldUpdates *dvUpdates = JreRetainedLocalValue([((OrgApacheLuceneIndexDocValuesFieldUpdates_Container *) nil_chk(dvUpdatesContainer)) getUpdatesWithNSString:update->field_ withOrgApacheLuceneIndexDocValuesType:update->type_]);
        if (dvUpdates == nil) {
          dvUpdates = [dvUpdatesContainer newUpdatesWithNSString:update->field_ withOrgApacheLuceneIndexDocValuesType:update->type_ withInt:[segState->reader_ maxDoc]];
        }
        jint doc;
        while ((doc = [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(postingsEnum)) nextDoc]) != OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
          if (doc >= limit) {
            break;
          }
          if (acceptDocs != nil && [acceptDocs getWithInt:doc] == false) {
            continue;
          }
          [((OrgApacheLuceneIndexDocValuesFieldUpdates *) nil_chk(dvUpdates)) addWithInt:doc withId:update->value_];
        }
      }
    }
  }
}

jlong OrgApacheLuceneIndexBufferedUpdatesStream_applyQueryDeletesWithJavaLangIterable_withOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState_(id<JavaLangIterable> queriesIter, OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *segState) {
  OrgApacheLuceneIndexBufferedUpdatesStream_initialize();
  jlong delCount = 0;
  OrgApacheLuceneIndexLeafReaderContext *readerContext = [((OrgApacheLuceneIndexSegmentReader *) nil_chk(((OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *) nil_chk(segState))->reader_)) getContext];
  for (OrgApacheLuceneIndexBufferedUpdatesStream_QueryAndLimit * __strong ent in nil_chk(queriesIter)) {
    OrgApacheLuceneSearchQuery *query = JreRetainedLocalValue(((OrgApacheLuceneIndexBufferedUpdatesStream_QueryAndLimit *) nil_chk(ent))->query_);
    jint limit = ent->limit_;
    OrgApacheLuceneSearchIndexSearcher *searcher = create_OrgApacheLuceneSearchIndexSearcher_initWithOrgApacheLuceneIndexIndexReader_([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(readerContext)) reader]);
    [searcher setQueryCacheWithOrgApacheLuceneSearchQueryCache:nil];
    OrgApacheLuceneSearchWeight *weight = [searcher createNormalizedWeightWithOrgApacheLuceneSearchQuery:query withBoolean:false];
    OrgApacheLuceneSearchDocIdSetIterator *it = [((OrgApacheLuceneSearchWeight *) nil_chk(weight)) scorerWithOrgApacheLuceneIndexLeafReaderContext:readerContext];
    if (it != nil) {
      id<OrgApacheLuceneUtilBits> liveDocs = [((OrgApacheLuceneIndexLeafReader *) nil_chk([readerContext reader])) getLiveDocs];
      while (true) {
        jint doc = [it nextDoc];
        if (doc >= limit) {
          break;
        }
        if (liveDocs != nil && [liveDocs getWithInt:doc] == false) {
          continue;
        }
        if (!segState->any_) {
          [((OrgApacheLuceneIndexReadersAndUpdates *) nil_chk(segState->rld_)) initWritableLiveDocs];
          segState->any_ = true;
        }
        if ([((OrgApacheLuceneIndexReadersAndUpdates *) nil_chk(segState->rld_)) delete__WithInt:doc]) {
          delCount++;
        }
      }
    }
  }
  return delCount;
}

jboolean OrgApacheLuceneIndexBufferedUpdatesStream_checkDeleteTermWithOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneIndexBufferedUpdatesStream *self, OrgApacheLuceneUtilBytesRef *term) {
  if (term != nil) {
    JreAssert(self->lastDeleteTerm_ == nil || [term compareToWithId:self->lastDeleteTerm_] >= 0, JreStrcat("$@$@", @"lastTerm=", self->lastDeleteTerm_, @" vs term=", term));
  }
  JreStrongAssign(&self->lastDeleteTerm_, term == nil ? nil : OrgApacheLuceneUtilBytesRef_deepCopyOfWithOrgApacheLuceneUtilBytesRef_(term));
  return true;
}

jboolean OrgApacheLuceneIndexBufferedUpdatesStream_checkDeleteStats(OrgApacheLuceneIndexBufferedUpdatesStream *self) {
  jint numTerms2 = 0;
  jlong bytesUsed2 = 0;
  for (OrgApacheLuceneIndexFrozenBufferedUpdates * __strong packet in nil_chk(self->updates_)) {
    numTerms2 += ((OrgApacheLuceneIndexFrozenBufferedUpdates *) nil_chk(packet))->numTermDeletes_;
    bytesUsed2 += packet->bytesUsed_;
  }
  JreAssert(numTerms2 == [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(self->numTerms_)) get], JreStrcat("$I$I", @"numTerms2=", numTerms2, @" vs ", [self->numTerms_ get]));
  JreAssert(bytesUsed2 == [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(self->bytesUsed_)) get], JreStrcat("$J$@", @"bytesUsed2=", bytesUsed2, @" vs ", self->bytesUsed_));
  return true;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexBufferedUpdatesStream)

@implementation OrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult

- (instancetype)initWithBoolean:(jboolean)anyDeletes
                       withLong:(jlong)gen
               withJavaUtilList:(id<JavaUtilList>)allDeleted {
  OrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult_initWithBoolean_withLong_withJavaUtilList_(self, anyDeletes, gen, allDeleted);
  return self;
}

- (void)dealloc {
  RELEASE_(allDeleted_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithBoolean:withLong:withJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "anyDeletes_", "Z", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "gen_", "J", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "allDeleted_", "LJavaUtilList;", .constantValue.asLong = 0, 0x11, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "ZJLJavaUtilList;", "(ZJLjava/util/List<Lorg/apache/lucene/index/SegmentCommitInfo;>;)V", "Ljava/util/List<Lorg/apache/lucene/index/SegmentCommitInfo;>;", "LOrgApacheLuceneIndexBufferedUpdatesStream;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult = { "ApplyDeletesResult", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x9, 1, 3, 3, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult;
}

@end

void OrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult_initWithBoolean_withLong_withJavaUtilList_(OrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult *self, jboolean anyDeletes, jlong gen, id<JavaUtilList> allDeleted) {
  NSObject_init(self);
  self->anyDeletes_ = anyDeletes;
  self->gen_ = gen;
  JreStrongAssign(&self->allDeleted_, allDeleted);
}

OrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult *new_OrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult_initWithBoolean_withLong_withJavaUtilList_(jboolean anyDeletes, jlong gen, id<JavaUtilList> allDeleted) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult, initWithBoolean_withLong_withJavaUtilList_, anyDeletes, gen, allDeleted)
}

OrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult *create_OrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult_initWithBoolean_withLong_withJavaUtilList_(jboolean anyDeletes, jlong gen, id<JavaUtilList> allDeleted) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult, initWithBoolean_withLong_withJavaUtilList_, anyDeletes, gen, allDeleted)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexBufferedUpdatesStream_ApplyDeletesResult)

@implementation OrgApacheLuceneIndexBufferedUpdatesStream_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneIndexBufferedUpdatesStream_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)compareWithId:(OrgApacheLuceneIndexSegmentCommitInfo *)si1
               withId:(OrgApacheLuceneIndexSegmentCommitInfo *)si2 {
  return JavaLangLong_compareWithLong_withLong_([((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(si1)) getBufferedDeletesGen], [((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(si2)) getBufferedDeletesGen]);
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compare", "LOrgApacheLuceneIndexSegmentCommitInfo;LOrgApacheLuceneIndexSegmentCommitInfo;", "LOrgApacheLuceneIndexBufferedUpdatesStream;", "Ljava/lang/Object;Ljava/util/Comparator<Lorg/apache/lucene/index/SegmentCommitInfo;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexBufferedUpdatesStream_1 = { "", "org.apache.lucene.index", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, -1, 3, -1 };
  return &_OrgApacheLuceneIndexBufferedUpdatesStream_1;
}

@end

void OrgApacheLuceneIndexBufferedUpdatesStream_1_init(OrgApacheLuceneIndexBufferedUpdatesStream_1 *self) {
  NSObject_init(self);
}

OrgApacheLuceneIndexBufferedUpdatesStream_1 *new_OrgApacheLuceneIndexBufferedUpdatesStream_1_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexBufferedUpdatesStream_1, init)
}

OrgApacheLuceneIndexBufferedUpdatesStream_1 *create_OrgApacheLuceneIndexBufferedUpdatesStream_1_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexBufferedUpdatesStream_1, init)
}

@implementation OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState

- (instancetype)initWithOrgApacheLuceneIndexIndexWriter_ReaderPool:(OrgApacheLuceneIndexIndexWriter_ReaderPool *)pool
                         withOrgApacheLuceneIndexSegmentCommitInfo:(OrgApacheLuceneIndexSegmentCommitInfo *)info {
  OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState_initWithOrgApacheLuceneIndexIndexWriter_ReaderPool_withOrgApacheLuceneIndexSegmentCommitInfo_(self, pool, info);
  return self;
}

- (void)finishWithOrgApacheLuceneIndexIndexWriter_ReaderPool:(OrgApacheLuceneIndexIndexWriter_ReaderPool *)pool {
  @try {
    [((OrgApacheLuceneIndexReadersAndUpdates *) nil_chk(rld_)) release__WithOrgApacheLuceneIndexSegmentReader:reader_];
  }
  @finally {
    [((OrgApacheLuceneIndexIndexWriter_ReaderPool *) nil_chk(pool)) release__WithOrgApacheLuceneIndexReadersAndUpdates:rld_];
  }
}

- (void)dealloc {
  RELEASE_(rld_);
  RELEASE_(reader_);
  RELEASE_(termsEnum_);
  RELEASE_(postingsEnum_);
  RELEASE_(term_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexIndexWriter_ReaderPool:withOrgApacheLuceneIndexSegmentCommitInfo:);
  methods[1].selector = @selector(finishWithOrgApacheLuceneIndexIndexWriter_ReaderPool:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "delGen_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "rld_", "LOrgApacheLuceneIndexReadersAndUpdates;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "reader_", "LOrgApacheLuceneIndexSegmentReader;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "startDelCount_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "termsEnum_", "LOrgApacheLuceneIndexTermsEnum;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "postingsEnum_", "LOrgApacheLuceneIndexPostingsEnum;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "term_", "LOrgApacheLuceneUtilBytesRef;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "any_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexIndexWriter_ReaderPool;LOrgApacheLuceneIndexSegmentCommitInfo;", "LJavaIoIOException;", "finish", "LOrgApacheLuceneIndexIndexWriter_ReaderPool;", "LOrgApacheLuceneIndexBufferedUpdatesStream;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState = { "SegmentState", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x8, 2, 8, 4, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState;
}

@end

void OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState_initWithOrgApacheLuceneIndexIndexWriter_ReaderPool_withOrgApacheLuceneIndexSegmentCommitInfo_(OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *self, OrgApacheLuceneIndexIndexWriter_ReaderPool *pool, OrgApacheLuceneIndexSegmentCommitInfo *info) {
  NSObject_init(self);
  JreStrongAssign(&self->rld_, [((OrgApacheLuceneIndexIndexWriter_ReaderPool *) nil_chk(pool)) getWithOrgApacheLuceneIndexSegmentCommitInfo:info withBoolean:true]);
  self->startDelCount_ = [((OrgApacheLuceneIndexReadersAndUpdates *) nil_chk(self->rld_)) getPendingDeleteCount];
  JreStrongAssign(&self->reader_, [self->rld_ getReaderWithOrgApacheLuceneStoreIOContext:JreLoadStatic(OrgApacheLuceneStoreIOContext, READ)]);
  self->delGen_ = [((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info)) getBufferedDeletesGen];
}

OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *new_OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState_initWithOrgApacheLuceneIndexIndexWriter_ReaderPool_withOrgApacheLuceneIndexSegmentCommitInfo_(OrgApacheLuceneIndexIndexWriter_ReaderPool *pool, OrgApacheLuceneIndexSegmentCommitInfo *info) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState, initWithOrgApacheLuceneIndexIndexWriter_ReaderPool_withOrgApacheLuceneIndexSegmentCommitInfo_, pool, info)
}

OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *create_OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState_initWithOrgApacheLuceneIndexIndexWriter_ReaderPool_withOrgApacheLuceneIndexSegmentCommitInfo_(OrgApacheLuceneIndexIndexWriter_ReaderPool *pool, OrgApacheLuceneIndexSegmentCommitInfo *info) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState, initWithOrgApacheLuceneIndexIndexWriter_ReaderPool_withOrgApacheLuceneIndexSegmentCommitInfo_, pool, info)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState)

@implementation OrgApacheLuceneIndexBufferedUpdatesStream_SegmentQueue

- (instancetype)initWithInt:(jint)size {
  OrgApacheLuceneIndexBufferedUpdatesStream_SegmentQueue_initWithInt_(self, size);
  return self;
}

- (jboolean)lessThanWithId:(OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *)a
                    withId:(OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *)b {
  return [((OrgApacheLuceneUtilBytesRef *) nil_chk(((OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *) nil_chk(a))->term_)) compareToWithId:((OrgApacheLuceneIndexBufferedUpdatesStream_SegmentState *) nil_chk(b))->term_] < 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(lessThanWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "I", "lessThan", "LOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState;LOrgApacheLuceneIndexBufferedUpdatesStream_SegmentState;", "LOrgApacheLuceneIndexBufferedUpdatesStream;", "Lorg/apache/lucene/util/PriorityQueue<Lorg/apache/lucene/index/BufferedUpdatesStream$SegmentState;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexBufferedUpdatesStream_SegmentQueue = { "SegmentQueue", "org.apache.lucene.index", ptrTable, methods, NULL, 7, 0x8, 2, 0, 3, -1, -1, 4, -1 };
  return &_OrgApacheLuceneIndexBufferedUpdatesStream_SegmentQueue;
}

@end

void OrgApacheLuceneIndexBufferedUpdatesStream_SegmentQueue_initWithInt_(OrgApacheLuceneIndexBufferedUpdatesStream_SegmentQueue *self, jint size) {
  OrgApacheLuceneUtilPriorityQueue_initWithInt_(self, size);
}

OrgApacheLuceneIndexBufferedUpdatesStream_SegmentQueue *new_OrgApacheLuceneIndexBufferedUpdatesStream_SegmentQueue_initWithInt_(jint size) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexBufferedUpdatesStream_SegmentQueue, initWithInt_, size)
}

OrgApacheLuceneIndexBufferedUpdatesStream_SegmentQueue *create_OrgApacheLuceneIndexBufferedUpdatesStream_SegmentQueue_initWithInt_(jint size) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexBufferedUpdatesStream_SegmentQueue, initWithInt_, size)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexBufferedUpdatesStream_SegmentQueue)

@implementation OrgApacheLuceneIndexBufferedUpdatesStream_QueryAndLimit

- (instancetype)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
                                           withInt:(jint)limit {
  OrgApacheLuceneIndexBufferedUpdatesStream_QueryAndLimit_initWithOrgApacheLuceneSearchQuery_withInt_(self, query, limit);
  return self;
}

- (void)dealloc {
  RELEASE_(query_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchQuery:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "query_", "LOrgApacheLuceneSearchQuery;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "limit_", "I", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchQuery;I", "LOrgApacheLuceneIndexBufferedUpdatesStream;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexBufferedUpdatesStream_QueryAndLimit = { "QueryAndLimit", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x9, 1, 2, 1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexBufferedUpdatesStream_QueryAndLimit;
}

@end

void OrgApacheLuceneIndexBufferedUpdatesStream_QueryAndLimit_initWithOrgApacheLuceneSearchQuery_withInt_(OrgApacheLuceneIndexBufferedUpdatesStream_QueryAndLimit *self, OrgApacheLuceneSearchQuery *query, jint limit) {
  NSObject_init(self);
  JreStrongAssign(&self->query_, query);
  self->limit_ = limit;
}

OrgApacheLuceneIndexBufferedUpdatesStream_QueryAndLimit *new_OrgApacheLuceneIndexBufferedUpdatesStream_QueryAndLimit_initWithOrgApacheLuceneSearchQuery_withInt_(OrgApacheLuceneSearchQuery *query, jint limit) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexBufferedUpdatesStream_QueryAndLimit, initWithOrgApacheLuceneSearchQuery_withInt_, query, limit)
}

OrgApacheLuceneIndexBufferedUpdatesStream_QueryAndLimit *create_OrgApacheLuceneIndexBufferedUpdatesStream_QueryAndLimit_initWithOrgApacheLuceneSearchQuery_withInt_(OrgApacheLuceneSearchQuery *query, jint limit) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexBufferedUpdatesStream_QueryAndLimit, initWithOrgApacheLuceneSearchQuery_withInt_, query, limit)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexBufferedUpdatesStream_QueryAndLimit)
