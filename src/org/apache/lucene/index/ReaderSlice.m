//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/ReaderSlice.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/index/ReaderSlice.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/index/ReaderSlice must not be compiled with ARC (-fobjc-arc)"
#endif

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneIndexReaderSlice)

IOSObjectArray *OrgApacheLuceneIndexReaderSlice_EMPTY_ARRAY;

@implementation OrgApacheLuceneIndexReaderSlice

+ (IOSObjectArray *)EMPTY_ARRAY {
  return OrgApacheLuceneIndexReaderSlice_EMPTY_ARRAY;
}

- (instancetype)initWithInt:(jint)start
                    withInt:(jint)length
                    withInt:(jint)readerIndex {
  OrgApacheLuceneIndexReaderSlice_initWithInt_withInt_withInt_(self, start, length, readerIndex);
  return self;
}

- (NSString *)description {
  return JreStrcat("$I$I$I", @"slice start=", start_, @" length=", length_, @" readerIndex=", readerIndex_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withInt:withInt:);
  methods[1].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EMPTY_ARRAY", "[LOrgApacheLuceneIndexReaderSlice;", .constantValue.asLong = 0, 0x19, -1, 2, -1, -1 },
    { "start_", "I", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "length_", "I", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "readerIndex_", "I", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "III", "toString", &OrgApacheLuceneIndexReaderSlice_EMPTY_ARRAY };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexReaderSlice = { "ReaderSlice", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x11, 2, 4, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexReaderSlice;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneIndexReaderSlice class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneIndexReaderSlice_EMPTY_ARRAY, [IOSObjectArray newArrayWithLength:0 type:OrgApacheLuceneIndexReaderSlice_class_()]);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneIndexReaderSlice)
  }
}

@end

void OrgApacheLuceneIndexReaderSlice_initWithInt_withInt_withInt_(OrgApacheLuceneIndexReaderSlice *self, jint start, jint length, jint readerIndex) {
  NSObject_init(self);
  self->start_ = start;
  self->length_ = length;
  self->readerIndex_ = readerIndex;
}

OrgApacheLuceneIndexReaderSlice *new_OrgApacheLuceneIndexReaderSlice_initWithInt_withInt_withInt_(jint start, jint length, jint readerIndex) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexReaderSlice, initWithInt_withInt_withInt_, start, length, readerIndex)
}

OrgApacheLuceneIndexReaderSlice *create_OrgApacheLuceneIndexReaderSlice_initWithInt_withInt_withInt_(jint start, jint length, jint readerIndex) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexReaderSlice, initWithInt_withInt_withInt_, start, length, readerIndex)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexReaderSlice)
