//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/IndexWriterConfig.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/PrintStream.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "org/apache/lucene/analysis/Analyzer.h"
#include "org/apache/lucene/codecs/Codec.h"
#include "org/apache/lucene/index/DocumentsWriterPerThread.h"
#include "org/apache/lucene/index/DocumentsWriterPerThreadPool.h"
#include "org/apache/lucene/index/FlushPolicy.h"
#include "org/apache/lucene/index/IndexCommit.h"
#include "org/apache/lucene/index/IndexDeletionPolicy.h"
#include "org/apache/lucene/index/IndexWriter.h"
#include "org/apache/lucene/index/IndexWriterConfig.h"
#include "org/apache/lucene/index/LiveIndexWriterConfig.h"
#include "org/apache/lucene/index/MergePolicy.h"
#include "org/apache/lucene/index/MergeScheduler.h"
#include "org/apache/lucene/search/similarities/Similarity.h"
#include "org/apache/lucene/util/InfoStream.h"
#include "org/apache/lucene/util/PrintStreamInfoStream.h"
#include "org/lukhnos/portmobile/lucene/WeakSetOnce.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/index/IndexWriterConfig must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneIndexIndexWriterConfig () {
 @public
  OrgLukhnosPortmobileLuceneWeakSetOnce *writer_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexIndexWriterConfig, writer_, OrgLukhnosPortmobileLuceneWeakSetOnce *)

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneIndexIndexWriterConfig__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneIndexIndexWriterConfig__Annotations$1(void);

__attribute__((unused)) static void OrgApacheLuceneIndexIndexWriterConfig_OpenMode_initWithNSString_withInt_(OrgApacheLuceneIndexIndexWriterConfig_OpenMode *self, NSString *__name, jint __ordinal);

@implementation OrgApacheLuceneIndexIndexWriterConfig

+ (jint)DISABLE_AUTO_FLUSH {
  return OrgApacheLuceneIndexIndexWriterConfig_DISABLE_AUTO_FLUSH;
}

+ (jint)DEFAULT_MAX_BUFFERED_DELETE_TERMS {
  return OrgApacheLuceneIndexIndexWriterConfig_DEFAULT_MAX_BUFFERED_DELETE_TERMS;
}

+ (jint)DEFAULT_MAX_BUFFERED_DOCS {
  return OrgApacheLuceneIndexIndexWriterConfig_DEFAULT_MAX_BUFFERED_DOCS;
}

+ (jdouble)DEFAULT_RAM_BUFFER_SIZE_MB {
  return OrgApacheLuceneIndexIndexWriterConfig_DEFAULT_RAM_BUFFER_SIZE_MB;
}

+ (jlong)WRITE_LOCK_TIMEOUT {
  return OrgApacheLuceneIndexIndexWriterConfig_WRITE_LOCK_TIMEOUT;
}

+ (jboolean)DEFAULT_READER_POOLING {
  return OrgApacheLuceneIndexIndexWriterConfig_DEFAULT_READER_POOLING;
}

+ (jint)DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB {
  return OrgApacheLuceneIndexIndexWriterConfig_DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB;
}

+ (jboolean)DEFAULT_USE_COMPOUND_FILE_SYSTEM {
  return OrgApacheLuceneIndexIndexWriterConfig_DEFAULT_USE_COMPOUND_FILE_SYSTEM;
}

+ (jboolean)DEFAULT_COMMIT_ON_CLOSE {
  return OrgApacheLuceneIndexIndexWriterConfig_DEFAULT_COMMIT_ON_CLOSE;
}

- (OrgApacheLuceneIndexIndexWriterConfig *)setIndexWriterWithOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer {
  if ([((OrgLukhnosPortmobileLuceneWeakSetOnce *) nil_chk(self->writer_)) get] != nil) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"do not share IndexWriterConfig instances across IndexWriters");
  }
  [((OrgLukhnosPortmobileLuceneWeakSetOnce *) nil_chk(self->writer_)) setWithId:writer];
  return self;
}

- (instancetype)initWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer {
  OrgApacheLuceneIndexIndexWriterConfig_initWithOrgApacheLuceneAnalysisAnalyzer_(self, analyzer);
  return self;
}

- (OrgApacheLuceneIndexIndexWriterConfig *)setOpenModeWithOrgApacheLuceneIndexIndexWriterConfig_OpenMode:(OrgApacheLuceneIndexIndexWriterConfig_OpenMode *)openMode {
  if (openMode == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"openMode must not be null");
  }
  JreVolatileStrongAssign(&self->openMode_, openMode);
  return self;
}

- (OrgApacheLuceneIndexIndexWriterConfig_OpenMode *)getOpenMode {
  return JreLoadVolatileId(&openMode_);
}

- (OrgApacheLuceneIndexIndexWriterConfig *)setIndexDeletionPolicyWithOrgApacheLuceneIndexIndexDeletionPolicy:(OrgApacheLuceneIndexIndexDeletionPolicy *)delPolicy {
  if (delPolicy == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"indexDeletionPolicy must not be null");
  }
  JreVolatileStrongAssign(&self->delPolicy_, delPolicy);
  return self;
}

- (OrgApacheLuceneIndexIndexDeletionPolicy *)getIndexDeletionPolicy {
  return JreLoadVolatileId(&delPolicy_);
}

- (OrgApacheLuceneIndexIndexWriterConfig *)setIndexCommitWithOrgApacheLuceneIndexIndexCommit:(OrgApacheLuceneIndexIndexCommit *)commit {
  JreVolatileStrongAssign(&self->commit_, commit);
  return self;
}

- (OrgApacheLuceneIndexIndexCommit *)getIndexCommit {
  return JreLoadVolatileId(&commit_);
}

- (OrgApacheLuceneIndexIndexWriterConfig *)setSimilarityWithOrgApacheLuceneSearchSimilaritiesSimilarity:(OrgApacheLuceneSearchSimilaritiesSimilarity *)similarity {
  if (similarity == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"similarity must not be null");
  }
  JreVolatileStrongAssign(&self->similarity_, similarity);
  return self;
}

- (OrgApacheLuceneSearchSimilaritiesSimilarity *)getSimilarity {
  return JreLoadVolatileId(&similarity_);
}

- (OrgApacheLuceneIndexIndexWriterConfig *)setMergeSchedulerWithOrgApacheLuceneIndexMergeScheduler:(OrgApacheLuceneIndexMergeScheduler *)mergeScheduler {
  if (mergeScheduler == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"mergeScheduler must not be null");
  }
  JreVolatileStrongAssign(&self->mergeScheduler_, mergeScheduler);
  return self;
}

- (OrgApacheLuceneIndexMergeScheduler *)getMergeScheduler {
  return JreLoadVolatileId(&mergeScheduler_);
}

- (OrgApacheLuceneIndexIndexWriterConfig *)setWriteLockTimeoutWithLong:(jlong)writeLockTimeout {
  JreAssignVolatileLong(&self->writeLockTimeout_, writeLockTimeout);
  return self;
}

- (jlong)getWriteLockTimeout {
  return JreLoadVolatileLong(&writeLockTimeout_);
}

- (OrgApacheLuceneIndexIndexWriterConfig *)setCodecWithOrgApacheLuceneCodecsCodec:(OrgApacheLuceneCodecsCodec *)codec {
  if (codec == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"codec must not be null");
  }
  JreVolatileStrongAssign(&self->codec_, codec);
  return self;
}

- (OrgApacheLuceneCodecsCodec *)getCodec {
  return JreLoadVolatileId(&codec_);
}

- (OrgApacheLuceneIndexMergePolicy *)getMergePolicy {
  return JreLoadVolatileId(&mergePolicy_);
}

- (OrgApacheLuceneIndexIndexWriterConfig *)setIndexerThreadPoolWithOrgApacheLuceneIndexDocumentsWriterPerThreadPool:(OrgApacheLuceneIndexDocumentsWriterPerThreadPool *)threadPool {
  if (threadPool == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"threadPool must not be null");
  }
  JreVolatileStrongAssign(&self->indexerThreadPool_, threadPool);
  return self;
}

- (OrgApacheLuceneIndexDocumentsWriterPerThreadPool *)getIndexerThreadPool {
  return JreLoadVolatileId(&indexerThreadPool_);
}

- (OrgApacheLuceneIndexIndexWriterConfig *)setReaderPoolingWithBoolean:(jboolean)readerPooling {
  JreAssignVolatileBoolean(&self->readerPooling_, readerPooling);
  return self;
}

- (jboolean)getReaderPooling {
  return JreLoadVolatileBoolean(&readerPooling_);
}

- (OrgApacheLuceneIndexIndexWriterConfig *)setIndexingChainWithOrgApacheLuceneIndexDocumentsWriterPerThread_IndexingChain:(OrgApacheLuceneIndexDocumentsWriterPerThread_IndexingChain *)indexingChain {
  if (indexingChain == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"indexingChain must not be null");
  }
  JreVolatileStrongAssign(&self->indexingChain_, indexingChain);
  return self;
}

- (OrgApacheLuceneIndexDocumentsWriterPerThread_IndexingChain *)getIndexingChain {
  return JreLoadVolatileId(&indexingChain_);
}

- (OrgApacheLuceneIndexIndexWriterConfig *)setFlushPolicyWithOrgApacheLuceneIndexFlushPolicy:(OrgApacheLuceneIndexFlushPolicy *)flushPolicy {
  if (flushPolicy == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"flushPolicy must not be null");
  }
  JreVolatileStrongAssign(&self->flushPolicy_, flushPolicy);
  return self;
}

- (OrgApacheLuceneIndexIndexWriterConfig *)setRAMPerThreadHardLimitMBWithInt:(jint)perThreadHardLimitMB {
  if (perThreadHardLimitMB <= 0 || perThreadHardLimitMB >= 2048) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"PerThreadHardLimit must be greater than 0 and less than 2048MB");
  }
  JreAssignVolatileInt(&self->perThreadHardLimitMB_, perThreadHardLimitMB);
  return self;
}

- (jint)getRAMPerThreadHardLimitMB {
  return JreLoadVolatileInt(&perThreadHardLimitMB_);
}

- (OrgApacheLuceneIndexFlushPolicy *)getFlushPolicy {
  return JreLoadVolatileId(&flushPolicy_);
}

- (OrgApacheLuceneUtilInfoStream *)getInfoStream {
  return JreLoadVolatileId(&infoStream_);
}

- (OrgApacheLuceneAnalysisAnalyzer *)getAnalyzer {
  return [super getAnalyzer];
}

- (jint)getMaxBufferedDeleteTerms {
  return [super getMaxBufferedDeleteTerms];
}

- (jint)getMaxBufferedDocs {
  return [super getMaxBufferedDocs];
}

- (OrgApacheLuceneIndexIndexWriter_IndexReaderWarmer *)getMergedSegmentWarmer {
  return [super getMergedSegmentWarmer];
}

- (jdouble)getRAMBufferSizeMB {
  return [super getRAMBufferSizeMB];
}

- (OrgApacheLuceneIndexIndexWriterConfig *)setInfoStreamWithOrgApacheLuceneUtilInfoStream:(OrgApacheLuceneUtilInfoStream *)infoStream {
  if (infoStream == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Cannot set InfoStream implementation to null. To disable logging use InfoStream.NO_OUTPUT");
  }
  JreVolatileStrongAssign(&self->infoStream_, infoStream);
  return self;
}

- (OrgApacheLuceneIndexIndexWriterConfig *)setInfoStreamWithJavaIoPrintStream:(JavaIoPrintStream *)printStream {
  if (printStream == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"printStream must not be null");
  }
  return [self setInfoStreamWithOrgApacheLuceneUtilInfoStream:create_OrgApacheLuceneUtilPrintStreamInfoStream_initWithJavaIoPrintStream_(printStream)];
}

- (OrgApacheLuceneIndexIndexWriterConfig *)setMergePolicyWithOrgApacheLuceneIndexMergePolicy:(OrgApacheLuceneIndexMergePolicy *)mergePolicy {
  return (OrgApacheLuceneIndexIndexWriterConfig *) cast_chk([super setMergePolicyWithOrgApacheLuceneIndexMergePolicy:mergePolicy], [OrgApacheLuceneIndexIndexWriterConfig class]);
}

- (OrgApacheLuceneIndexIndexWriterConfig *)setMaxBufferedDeleteTermsWithInt:(jint)maxBufferedDeleteTerms {
  return (OrgApacheLuceneIndexIndexWriterConfig *) cast_chk([super setMaxBufferedDeleteTermsWithInt:maxBufferedDeleteTerms], [OrgApacheLuceneIndexIndexWriterConfig class]);
}

- (OrgApacheLuceneIndexIndexWriterConfig *)setMaxBufferedDocsWithInt:(jint)maxBufferedDocs {
  return (OrgApacheLuceneIndexIndexWriterConfig *) cast_chk([super setMaxBufferedDocsWithInt:maxBufferedDocs], [OrgApacheLuceneIndexIndexWriterConfig class]);
}

- (OrgApacheLuceneIndexIndexWriterConfig *)setMergedSegmentWarmerWithOrgApacheLuceneIndexIndexWriter_IndexReaderWarmer:(OrgApacheLuceneIndexIndexWriter_IndexReaderWarmer *)mergeSegmentWarmer {
  return (OrgApacheLuceneIndexIndexWriterConfig *) cast_chk([super setMergedSegmentWarmerWithOrgApacheLuceneIndexIndexWriter_IndexReaderWarmer:mergeSegmentWarmer], [OrgApacheLuceneIndexIndexWriterConfig class]);
}

- (OrgApacheLuceneIndexIndexWriterConfig *)setRAMBufferSizeMBWithDouble:(jdouble)ramBufferSizeMB {
  return (OrgApacheLuceneIndexIndexWriterConfig *) cast_chk([super setRAMBufferSizeMBWithDouble:ramBufferSizeMB], [OrgApacheLuceneIndexIndexWriterConfig class]);
}

- (OrgApacheLuceneIndexIndexWriterConfig *)setUseCompoundFileWithBoolean:(jboolean)useCompoundFile {
  return (OrgApacheLuceneIndexIndexWriterConfig *) cast_chk([super setUseCompoundFileWithBoolean:useCompoundFile], [OrgApacheLuceneIndexIndexWriterConfig class]);
}

- (OrgApacheLuceneIndexIndexWriterConfig *)setCommitOnCloseWithBoolean:(jboolean)commitOnClose {
  self->commitOnClose_ = commitOnClose;
  return self;
}

- (NSString *)description {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_initWithNSString_([super description]);
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"writer="])) appendWithId:[((OrgLukhnosPortmobileLuceneWeakSetOnce *) nil_chk(writer_)) get]])) appendWithNSString:@"\n"];
  return [sb description];
}

- (void)dealloc {
  RELEASE_(writer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig;", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig_OpenMode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexDeletionPolicy;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig;", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexCommit;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig;", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchSimilaritiesSimilarity;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig;", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexMergeScheduler;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig;", 0x1, 13, 14, -1, -1, 15, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig;", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneCodecsCodec;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexMergePolicy;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig;", 0x0, 18, 19, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexDocumentsWriterPerThreadPool;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig;", 0x1, 20, 21, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig;", 0x0, 22, 23, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexDocumentsWriterPerThread_IndexingChain;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig;", 0x0, 24, 25, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig;", 0x1, 26, 27, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexFlushPolicy;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilInfoStream;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisAnalyzer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriter_IndexReaderWarmer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig;", 0x1, 28, 29, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig;", 0x1, 28, 30, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig;", 0x1, 31, 32, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig;", 0x1, 33, 27, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig;", 0x1, 34, 27, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig;", 0x1, 35, 36, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig;", 0x1, 37, 38, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig;", 0x1, 39, 21, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig;", 0x1, 40, 21, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 41, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(setIndexWriterWithOrgApacheLuceneIndexIndexWriter:);
  methods[1].selector = @selector(initWithOrgApacheLuceneAnalysisAnalyzer:);
  methods[2].selector = @selector(setOpenModeWithOrgApacheLuceneIndexIndexWriterConfig_OpenMode:);
  methods[3].selector = @selector(getOpenMode);
  methods[4].selector = @selector(setIndexDeletionPolicyWithOrgApacheLuceneIndexIndexDeletionPolicy:);
  methods[5].selector = @selector(getIndexDeletionPolicy);
  methods[6].selector = @selector(setIndexCommitWithOrgApacheLuceneIndexIndexCommit:);
  methods[7].selector = @selector(getIndexCommit);
  methods[8].selector = @selector(setSimilarityWithOrgApacheLuceneSearchSimilaritiesSimilarity:);
  methods[9].selector = @selector(getSimilarity);
  methods[10].selector = @selector(setMergeSchedulerWithOrgApacheLuceneIndexMergeScheduler:);
  methods[11].selector = @selector(getMergeScheduler);
  methods[12].selector = @selector(setWriteLockTimeoutWithLong:);
  methods[13].selector = @selector(getWriteLockTimeout);
  methods[14].selector = @selector(setCodecWithOrgApacheLuceneCodecsCodec:);
  methods[15].selector = @selector(getCodec);
  methods[16].selector = @selector(getMergePolicy);
  methods[17].selector = @selector(setIndexerThreadPoolWithOrgApacheLuceneIndexDocumentsWriterPerThreadPool:);
  methods[18].selector = @selector(getIndexerThreadPool);
  methods[19].selector = @selector(setReaderPoolingWithBoolean:);
  methods[20].selector = @selector(getReaderPooling);
  methods[21].selector = @selector(setIndexingChainWithOrgApacheLuceneIndexDocumentsWriterPerThread_IndexingChain:);
  methods[22].selector = @selector(getIndexingChain);
  methods[23].selector = @selector(setFlushPolicyWithOrgApacheLuceneIndexFlushPolicy:);
  methods[24].selector = @selector(setRAMPerThreadHardLimitMBWithInt:);
  methods[25].selector = @selector(getRAMPerThreadHardLimitMB);
  methods[26].selector = @selector(getFlushPolicy);
  methods[27].selector = @selector(getInfoStream);
  methods[28].selector = @selector(getAnalyzer);
  methods[29].selector = @selector(getMaxBufferedDeleteTerms);
  methods[30].selector = @selector(getMaxBufferedDocs);
  methods[31].selector = @selector(getMergedSegmentWarmer);
  methods[32].selector = @selector(getRAMBufferSizeMB);
  methods[33].selector = @selector(setInfoStreamWithOrgApacheLuceneUtilInfoStream:);
  methods[34].selector = @selector(setInfoStreamWithJavaIoPrintStream:);
  methods[35].selector = @selector(setMergePolicyWithOrgApacheLuceneIndexMergePolicy:);
  methods[36].selector = @selector(setMaxBufferedDeleteTermsWithInt:);
  methods[37].selector = @selector(setMaxBufferedDocsWithInt:);
  methods[38].selector = @selector(setMergedSegmentWarmerWithOrgApacheLuceneIndexIndexWriter_IndexReaderWarmer:);
  methods[39].selector = @selector(setRAMBufferSizeMBWithDouble:);
  methods[40].selector = @selector(setUseCompoundFileWithBoolean:);
  methods[41].selector = @selector(setCommitOnCloseWithBoolean:);
  methods[42].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DISABLE_AUTO_FLUSH", "I", .constantValue.asInt = OrgApacheLuceneIndexIndexWriterConfig_DISABLE_AUTO_FLUSH, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_MAX_BUFFERED_DELETE_TERMS", "I", .constantValue.asInt = OrgApacheLuceneIndexIndexWriterConfig_DEFAULT_MAX_BUFFERED_DELETE_TERMS, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_MAX_BUFFERED_DOCS", "I", .constantValue.asInt = OrgApacheLuceneIndexIndexWriterConfig_DEFAULT_MAX_BUFFERED_DOCS, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_RAM_BUFFER_SIZE_MB", "D", .constantValue.asDouble = OrgApacheLuceneIndexIndexWriterConfig_DEFAULT_RAM_BUFFER_SIZE_MB, 0x19, -1, -1, -1, -1 },
    { "WRITE_LOCK_TIMEOUT", "J", .constantValue.asLong = OrgApacheLuceneIndexIndexWriterConfig_WRITE_LOCK_TIMEOUT, 0x19, -1, -1, -1, 42 },
    { "DEFAULT_READER_POOLING", "Z", .constantValue.asBOOL = OrgApacheLuceneIndexIndexWriterConfig_DEFAULT_READER_POOLING, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB", "I", .constantValue.asInt = OrgApacheLuceneIndexIndexWriterConfig_DEFAULT_RAM_PER_THREAD_HARD_LIMIT_MB, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_USE_COMPOUND_FILE_SYSTEM", "Z", .constantValue.asBOOL = OrgApacheLuceneIndexIndexWriterConfig_DEFAULT_USE_COMPOUND_FILE_SYSTEM, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_COMMIT_ON_CLOSE", "Z", .constantValue.asBOOL = OrgApacheLuceneIndexIndexWriterConfig_DEFAULT_COMMIT_ON_CLOSE, 0x19, -1, -1, -1, -1 },
    { "writer_", "LOrgLukhnosPortmobileLuceneWeakSetOnce;", .constantValue.asLong = 0, 0x2, -1, -1, 43, -1 },
  };
  static const void *ptrTable[] = { "setIndexWriter", "LOrgApacheLuceneIndexIndexWriter;", "LOrgApacheLuceneAnalysisAnalyzer;", "setOpenMode", "LOrgApacheLuceneIndexIndexWriterConfig_OpenMode;", "setIndexDeletionPolicy", "LOrgApacheLuceneIndexIndexDeletionPolicy;", "setIndexCommit", "LOrgApacheLuceneIndexIndexCommit;", "setSimilarity", "LOrgApacheLuceneSearchSimilaritiesSimilarity;", "setMergeScheduler", "LOrgApacheLuceneIndexMergeScheduler;", "setWriteLockTimeout", "J", (void *)&OrgApacheLuceneIndexIndexWriterConfig__Annotations$0, "setCodec", "LOrgApacheLuceneCodecsCodec;", "setIndexerThreadPool", "LOrgApacheLuceneIndexDocumentsWriterPerThreadPool;", "setReaderPooling", "Z", "setIndexingChain", "LOrgApacheLuceneIndexDocumentsWriterPerThread_IndexingChain;", "setFlushPolicy", "LOrgApacheLuceneIndexFlushPolicy;", "setRAMPerThreadHardLimitMB", "I", "setInfoStream", "LOrgApacheLuceneUtilInfoStream;", "LJavaIoPrintStream;", "setMergePolicy", "LOrgApacheLuceneIndexMergePolicy;", "setMaxBufferedDeleteTerms", "setMaxBufferedDocs", "setMergedSegmentWarmer", "LOrgApacheLuceneIndexIndexWriter_IndexReaderWarmer;", "setRAMBufferSizeMB", "D", "setUseCompoundFile", "setCommitOnClose", "toString", (void *)&OrgApacheLuceneIndexIndexWriterConfig__Annotations$1, "Lorg/lukhnos/portmobile/lucene/WeakSetOnce<Lorg/apache/lucene/index/IndexWriter;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexIndexWriterConfig = { "IndexWriterConfig", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x11, 43, 10, -1, 4, -1, -1, -1 };
  return &_OrgApacheLuceneIndexIndexWriterConfig;
}

@end

void OrgApacheLuceneIndexIndexWriterConfig_initWithOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneIndexIndexWriterConfig *self, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  OrgApacheLuceneIndexLiveIndexWriterConfig_initWithOrgApacheLuceneAnalysisAnalyzer_(self, analyzer);
  JreStrongAssignAndConsume(&self->writer_, new_OrgLukhnosPortmobileLuceneWeakSetOnce_init());
}

OrgApacheLuceneIndexIndexWriterConfig *new_OrgApacheLuceneIndexIndexWriterConfig_initWithOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexIndexWriterConfig, initWithOrgApacheLuceneAnalysisAnalyzer_, analyzer)
}

OrgApacheLuceneIndexIndexWriterConfig *create_OrgApacheLuceneIndexIndexWriterConfig_initWithOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexIndexWriterConfig, initWithOrgApacheLuceneAnalysisAnalyzer_, analyzer)
}

IOSObjectArray *OrgApacheLuceneIndexIndexWriterConfig__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneIndexIndexWriterConfig__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexIndexWriterConfig)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneIndexIndexWriterConfig_OpenMode)

OrgApacheLuceneIndexIndexWriterConfig_OpenMode *OrgApacheLuceneIndexIndexWriterConfig_OpenMode_values_[3];

@implementation OrgApacheLuceneIndexIndexWriterConfig_OpenMode

+ (OrgApacheLuceneIndexIndexWriterConfig_OpenMode *)CREATE {
  return JreEnum(OrgApacheLuceneIndexIndexWriterConfig_OpenMode, CREATE);
}

+ (OrgApacheLuceneIndexIndexWriterConfig_OpenMode *)APPEND {
  return JreEnum(OrgApacheLuceneIndexIndexWriterConfig_OpenMode, APPEND);
}

+ (OrgApacheLuceneIndexIndexWriterConfig_OpenMode *)CREATE_OR_APPEND {
  return JreEnum(OrgApacheLuceneIndexIndexWriterConfig_OpenMode, CREATE_OR_APPEND);
}

+ (IOSObjectArray *)values {
  return OrgApacheLuceneIndexIndexWriterConfig_OpenMode_values();
}

+ (OrgApacheLuceneIndexIndexWriterConfig_OpenMode *)valueOfWithNSString:(NSString *)name {
  return OrgApacheLuceneIndexIndexWriterConfig_OpenMode_valueOfWithNSString_(name);
}

- (OrgApacheLuceneIndexIndexWriterConfig_OpenMode_Enum)toNSEnum {
  return (OrgApacheLuceneIndexIndexWriterConfig_OpenMode_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgApacheLuceneIndexIndexWriterConfig_OpenMode;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig_OpenMode;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "CREATE", "LOrgApacheLuceneIndexIndexWriterConfig_OpenMode;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "APPEND", "LOrgApacheLuceneIndexIndexWriterConfig_OpenMode;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "CREATE_OR_APPEND", "LOrgApacheLuceneIndexIndexWriterConfig_OpenMode;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgApacheLuceneIndexIndexWriterConfig_OpenMode, CREATE), &JreEnum(OrgApacheLuceneIndexIndexWriterConfig_OpenMode, APPEND), &JreEnum(OrgApacheLuceneIndexIndexWriterConfig_OpenMode, CREATE_OR_APPEND), "LOrgApacheLuceneIndexIndexWriterConfig;", "Ljava/lang/Enum<Lorg/apache/lucene/index/IndexWriterConfig$OpenMode;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexIndexWriterConfig_OpenMode = { "OpenMode", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x4019, 2, 3, 5, -1, -1, 6, -1 };
  return &_OrgApacheLuceneIndexIndexWriterConfig_OpenMode;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneIndexIndexWriterConfig_OpenMode class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 3 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 3; i++) {
      ((void)(OrgApacheLuceneIndexIndexWriterConfig_OpenMode_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      OrgApacheLuceneIndexIndexWriterConfig_OpenMode_initWithNSString_withInt_(e, JreEnumConstantName(OrgApacheLuceneIndexIndexWriterConfig_OpenMode_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneIndexIndexWriterConfig_OpenMode)
  }
}

@end

void OrgApacheLuceneIndexIndexWriterConfig_OpenMode_initWithNSString_withInt_(OrgApacheLuceneIndexIndexWriterConfig_OpenMode *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *OrgApacheLuceneIndexIndexWriterConfig_OpenMode_values() {
  OrgApacheLuceneIndexIndexWriterConfig_OpenMode_initialize();
  return [IOSObjectArray arrayWithObjects:OrgApacheLuceneIndexIndexWriterConfig_OpenMode_values_ count:3 type:OrgApacheLuceneIndexIndexWriterConfig_OpenMode_class_()];
}

OrgApacheLuceneIndexIndexWriterConfig_OpenMode *OrgApacheLuceneIndexIndexWriterConfig_OpenMode_valueOfWithNSString_(NSString *name) {
  OrgApacheLuceneIndexIndexWriterConfig_OpenMode_initialize();
  for (int i = 0; i < 3; i++) {
    OrgApacheLuceneIndexIndexWriterConfig_OpenMode *e = OrgApacheLuceneIndexIndexWriterConfig_OpenMode_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgApacheLuceneIndexIndexWriterConfig_OpenMode *OrgApacheLuceneIndexIndexWriterConfig_OpenMode_fromOrdinal(NSUInteger ordinal) {
  OrgApacheLuceneIndexIndexWriterConfig_OpenMode_initialize();
  if (ordinal >= 3) {
    return nil;
  }
  return OrgApacheLuceneIndexIndexWriterConfig_OpenMode_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexIndexWriterConfig_OpenMode)
