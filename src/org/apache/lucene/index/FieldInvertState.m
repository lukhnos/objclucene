//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/FieldInvertState.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/analysis/tokenattributes/OffsetAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/PayloadAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/TermToBytesRefAttribute.h"
#include "org/apache/lucene/index/FieldInvertState.h"
#include "org/apache/lucene/util/AttributeSource.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/index/FieldInvertState must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneIndexFieldInvertState

- (instancetype)initWithNSString:(NSString *)name {
  OrgApacheLuceneIndexFieldInvertState_initWithNSString_(self, name);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                         withInt:(jint)position
                         withInt:(jint)length
                         withInt:(jint)numOverlap
                         withInt:(jint)offset
                       withFloat:(jfloat)boost {
  OrgApacheLuceneIndexFieldInvertState_initWithNSString_withInt_withInt_withInt_withInt_withFloat_(self, name, position, length, numOverlap, offset, boost);
  return self;
}

- (void)reset {
  position_ = -1;
  length_ = 0;
  numOverlap_ = 0;
  offset_ = 0;
  maxTermFrequency_ = 0;
  uniqueTermCount_ = 0;
  boost_ = 1.0f;
  lastStartOffset_ = 0;
  lastPosition_ = 0;
}

- (void)setAttributeSourceWithOrgApacheLuceneUtilAttributeSource:(OrgApacheLuceneUtilAttributeSource *)attributeSource {
  if (!JreObjectEqualsEquals(self->attributeSource_, attributeSource)) {
    JreStrongAssign(&self->attributeSource_, attributeSource);
    JreStrongAssign(&termAttribute_, [((OrgApacheLuceneUtilAttributeSource *) nil_chk(attributeSource)) getAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesTermToBytesRefAttribute_class_()]);
    JreStrongAssign(&posIncrAttribute_, [attributeSource addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute_class_()]);
    JreStrongAssign(&offsetAttribute_, [attributeSource addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_()]);
    JreStrongAssign(&payloadAttribute_, [attributeSource getAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesPayloadAttribute_class_()]);
  }
}

- (jint)getPosition {
  return position_;
}

- (jint)getLength {
  return length_;
}

- (void)setLengthWithInt:(jint)length {
  self->length_ = length;
}

- (jint)getNumOverlap {
  return numOverlap_;
}

- (void)setNumOverlapWithInt:(jint)numOverlap {
  self->numOverlap_ = numOverlap;
}

- (jint)getOffset {
  return offset_;
}

- (jfloat)getBoost {
  return boost_;
}

- (void)setBoostWithFloat:(jfloat)boost {
  self->boost_ = boost;
}

- (jint)getMaxTermFrequency {
  return maxTermFrequency_;
}

- (jint)getUniqueTermCount {
  return uniqueTermCount_;
}

- (OrgApacheLuceneUtilAttributeSource *)getAttributeSource {
  return attributeSource_;
}

- (NSString *)getName {
  return name_;
}

- (void)dealloc {
  RELEASE_(name_);
  RELEASE_(attributeSource_);
  RELEASE_(offsetAttribute_);
  RELEASE_(posIncrAttribute_);
  RELEASE_(payloadAttribute_);
  RELEASE_(termAttribute_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilAttributeSource;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithNSString:withInt:withInt:withInt:withInt:withFloat:);
  methods[2].selector = @selector(reset);
  methods[3].selector = @selector(setAttributeSourceWithOrgApacheLuceneUtilAttributeSource:);
  methods[4].selector = @selector(getPosition);
  methods[5].selector = @selector(getLength);
  methods[6].selector = @selector(setLengthWithInt:);
  methods[7].selector = @selector(getNumOverlap);
  methods[8].selector = @selector(setNumOverlapWithInt:);
  methods[9].selector = @selector(getOffset);
  methods[10].selector = @selector(getBoost);
  methods[11].selector = @selector(setBoostWithFloat:);
  methods[12].selector = @selector(getMaxTermFrequency);
  methods[13].selector = @selector(getUniqueTermCount);
  methods[14].selector = @selector(getAttributeSource);
  methods[15].selector = @selector(getName);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "position_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "length_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "numOverlap_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "offset_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "maxTermFrequency_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "uniqueTermCount_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "boost_", "F", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "lastStartOffset_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "lastPosition_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "attributeSource_", "LOrgApacheLuceneUtilAttributeSource;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "offsetAttribute_", "LOrgApacheLuceneAnalysisTokenattributesOffsetAttribute;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "posIncrAttribute_", "LOrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "payloadAttribute_", "LOrgApacheLuceneAnalysisTokenattributesPayloadAttribute;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "termAttribute_", "LOrgApacheLuceneAnalysisTokenattributesTermToBytesRefAttribute;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LNSString;IIIIF", "setAttributeSource", "LOrgApacheLuceneUtilAttributeSource;", "setLength", "I", "setNumOverlap", "setBoost", "F" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexFieldInvertState = { "FieldInvertState", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x11, 16, 15, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexFieldInvertState;
}

@end

void OrgApacheLuceneIndexFieldInvertState_initWithNSString_(OrgApacheLuceneIndexFieldInvertState *self, NSString *name) {
  NSObject_init(self);
  self->lastStartOffset_ = 0;
  self->lastPosition_ = 0;
  JreStrongAssign(&self->name_, name);
}

OrgApacheLuceneIndexFieldInvertState *new_OrgApacheLuceneIndexFieldInvertState_initWithNSString_(NSString *name) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexFieldInvertState, initWithNSString_, name)
}

OrgApacheLuceneIndexFieldInvertState *create_OrgApacheLuceneIndexFieldInvertState_initWithNSString_(NSString *name) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexFieldInvertState, initWithNSString_, name)
}

void OrgApacheLuceneIndexFieldInvertState_initWithNSString_withInt_withInt_withInt_withInt_withFloat_(OrgApacheLuceneIndexFieldInvertState *self, NSString *name, jint position, jint length, jint numOverlap, jint offset, jfloat boost) {
  NSObject_init(self);
  self->lastStartOffset_ = 0;
  self->lastPosition_ = 0;
  JreStrongAssign(&self->name_, name);
  self->position_ = position;
  self->length_ = length;
  self->numOverlap_ = numOverlap;
  self->offset_ = offset;
  self->boost_ = boost;
}

OrgApacheLuceneIndexFieldInvertState *new_OrgApacheLuceneIndexFieldInvertState_initWithNSString_withInt_withInt_withInt_withInt_withFloat_(NSString *name, jint position, jint length, jint numOverlap, jint offset, jfloat boost) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexFieldInvertState, initWithNSString_withInt_withInt_withInt_withInt_withFloat_, name, position, length, numOverlap, offset, boost)
}

OrgApacheLuceneIndexFieldInvertState *create_OrgApacheLuceneIndexFieldInvertState_initWithNSString_withInt_withInt_withInt_withInt_withFloat_(NSString *name, jint position, jint length, jint numOverlap, jint offset, jfloat boost) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexFieldInvertState, initWithNSString_withInt_withInt_withInt_withInt_withFloat_, name, position, length, numOverlap, offset, boost)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexFieldInvertState)
