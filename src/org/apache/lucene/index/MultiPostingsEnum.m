//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/MultiPostingsEnum.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/Arrays.h"
#include "org/apache/lucene/index/MultiPostingsEnum.h"
#include "org/apache/lucene/index/MultiTermsEnum.h"
#include "org/apache/lucene/index/PostingsEnum.h"
#include "org/apache/lucene/index/ReaderSlice.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/util/BytesRef.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/index/MultiPostingsEnum must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneIndexMultiPostingsEnum () {
 @public
  OrgApacheLuceneIndexMultiTermsEnum *parent_;
  IOSObjectArray *subs_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMultiPostingsEnum, parent_, OrgApacheLuceneIndexMultiTermsEnum *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMultiPostingsEnum, subs_, IOSObjectArray *)

@implementation OrgApacheLuceneIndexMultiPostingsEnum

- (instancetype)initWithOrgApacheLuceneIndexMultiTermsEnum:(OrgApacheLuceneIndexMultiTermsEnum *)parent
                                                   withInt:(jint)subReaderCount {
  OrgApacheLuceneIndexMultiPostingsEnum_initWithOrgApacheLuceneIndexMultiTermsEnum_withInt_(self, parent, subReaderCount);
  return self;
}

- (jboolean)canReuseWithOrgApacheLuceneIndexMultiTermsEnum:(OrgApacheLuceneIndexMultiTermsEnum *)parent {
  return JreObjectEqualsEquals(self->parent_, parent);
}

- (OrgApacheLuceneIndexMultiPostingsEnum *)resetWithOrgApacheLuceneIndexMultiPostingsEnum_EnumWithSliceArray:(IOSObjectArray *)subs
                                                                                                     withInt:(jint)numSubs {
  self->numSubs_ = numSubs;
  for (jint i = 0; i < numSubs; i++) {
    JreStrongAssign(&((OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice *) nil_chk(IOSObjectArray_Get(nil_chk(self->subs_), i)))->postingsEnum_, ((OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice *) nil_chk(IOSObjectArray_Get(nil_chk(subs), i)))->postingsEnum_);
    JreStrongAssign(&((OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice *) nil_chk(IOSObjectArray_Get(self->subs_, i)))->slice_, ((OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice *) nil_chk(IOSObjectArray_Get(subs, i)))->slice_);
  }
  upto_ = -1;
  doc_ = -1;
  JreStrongAssign(&current_, nil);
  return self;
}

- (jint)getNumSubs {
  return numSubs_;
}

- (IOSObjectArray *)getSubs {
  return subs_;
}

- (jint)freq {
  JreAssert(current_ != nil, @"org/apache/lucene/index/MultiPostingsEnum.java:86 condition failed: assert current != null;");
  return [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(current_)) freq];
}

- (jint)docID {
  return doc_;
}

- (jint)advanceWithInt:(jint)target {
  JreAssert(target > doc_, @"org/apache/lucene/index/MultiPostingsEnum.java:97 condition failed: assert target > doc;");
  while (true) {
    if (current_ != nil) {
      jint doc;
      if (target < currentBase_) {
        doc = [current_ nextDoc];
      }
      else {
        doc = [current_ advanceWithInt:target - currentBase_];
      }
      if (doc == OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
        JreStrongAssign(&current_, nil);
      }
      else {
        return self->doc_ = doc + currentBase_;
      }
    }
    else if (upto_ == numSubs_ - 1) {
      return self->doc_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
    }
    else {
      upto_++;
      JreStrongAssign(&current_, ((OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice *) nil_chk(IOSObjectArray_Get(nil_chk(subs_), upto_)))->postingsEnum_);
      currentBase_ = ((OrgApacheLuceneIndexReaderSlice *) nil_chk(((OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice *) nil_chk(IOSObjectArray_Get(subs_, upto_)))->slice_))->start_;
    }
  }
}

- (jint)nextDoc {
  while (true) {
    if (current_ == nil) {
      if (upto_ == numSubs_ - 1) {
        return self->doc_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
      }
      else {
        upto_++;
        JreStrongAssign(&current_, ((OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice *) nil_chk(IOSObjectArray_Get(nil_chk(subs_), upto_)))->postingsEnum_);
        currentBase_ = ((OrgApacheLuceneIndexReaderSlice *) nil_chk(((OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice *) nil_chk(IOSObjectArray_Get(subs_, upto_)))->slice_))->start_;
      }
    }
    jint doc = [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(current_)) nextDoc];
    if (doc != OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
      return self->doc_ = currentBase_ + doc;
    }
    else {
      JreStrongAssign(&current_, nil);
    }
  }
}

- (jint)nextPosition {
  return [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(current_)) nextPosition];
}

- (jint)startOffset {
  return [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(current_)) startOffset];
}

- (jint)endOffset {
  return [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(current_)) endOffset];
}

- (OrgApacheLuceneUtilBytesRef *)getPayload {
  return [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(current_)) getPayload];
}

- (jlong)cost {
  jlong cost = 0;
  for (jint i = 0; i < numSubs_; i++) {
    cost += [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(((OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice *) nil_chk(IOSObjectArray_Get(nil_chk(subs_), i)))->postingsEnum_)) cost];
  }
  return cost;
}

- (NSString *)description {
  return JreStrcat("$$C", @"MultiDocsAndPositionsEnum(", JavaUtilArrays_toStringWithNSObjectArray_([self getSubs]), ')');
}

- (void)dealloc {
  RELEASE_(parent_);
  RELEASE_(subPostingsEnums_);
  RELEASE_(subs_);
  RELEASE_(current_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexMultiPostingsEnum;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, 7, 5, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRef;", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 8, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexMultiTermsEnum:withInt:);
  methods[1].selector = @selector(canReuseWithOrgApacheLuceneIndexMultiTermsEnum:);
  methods[2].selector = @selector(resetWithOrgApacheLuceneIndexMultiPostingsEnum_EnumWithSliceArray:withInt:);
  methods[3].selector = @selector(getNumSubs);
  methods[4].selector = @selector(getSubs);
  methods[5].selector = @selector(freq);
  methods[6].selector = @selector(docID);
  methods[7].selector = @selector(advanceWithInt:);
  methods[8].selector = @selector(nextDoc);
  methods[9].selector = @selector(nextPosition);
  methods[10].selector = @selector(startOffset);
  methods[11].selector = @selector(endOffset);
  methods[12].selector = @selector(getPayload);
  methods[13].selector = @selector(cost);
  methods[14].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "parent_", "LOrgApacheLuceneIndexMultiTermsEnum;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "subPostingsEnums_", "[LOrgApacheLuceneIndexPostingsEnum;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "subs_", "[LOrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "numSubs_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "upto_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "current_", "LOrgApacheLuceneIndexPostingsEnum;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "currentBase_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "doc_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexMultiTermsEnum;I", "canReuse", "LOrgApacheLuceneIndexMultiTermsEnum;", "reset", "[LOrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice;I", "LJavaIoIOException;", "advance", "I", "toString", "LOrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMultiPostingsEnum = { "MultiPostingsEnum", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x11, 15, 8, -1, 9, -1, -1, -1 };
  return &_OrgApacheLuceneIndexMultiPostingsEnum;
}

@end

void OrgApacheLuceneIndexMultiPostingsEnum_initWithOrgApacheLuceneIndexMultiTermsEnum_withInt_(OrgApacheLuceneIndexMultiPostingsEnum *self, OrgApacheLuceneIndexMultiTermsEnum *parent, jint subReaderCount) {
  OrgApacheLuceneIndexPostingsEnum_init(self);
  self->doc_ = -1;
  JreStrongAssign(&self->parent_, parent);
  JreStrongAssignAndConsume(&self->subPostingsEnums_, [IOSObjectArray newArrayWithLength:subReaderCount type:OrgApacheLuceneIndexPostingsEnum_class_()]);
  JreStrongAssignAndConsume(&self->subs_, [IOSObjectArray newArrayWithLength:subReaderCount type:OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice_class_()]);
  for (jint i = 0; i < self->subs_->size_; i++) {
    IOSObjectArray_SetAndConsume(self->subs_, i, new_OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice_init());
  }
}

OrgApacheLuceneIndexMultiPostingsEnum *new_OrgApacheLuceneIndexMultiPostingsEnum_initWithOrgApacheLuceneIndexMultiTermsEnum_withInt_(OrgApacheLuceneIndexMultiTermsEnum *parent, jint subReaderCount) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMultiPostingsEnum, initWithOrgApacheLuceneIndexMultiTermsEnum_withInt_, parent, subReaderCount)
}

OrgApacheLuceneIndexMultiPostingsEnum *create_OrgApacheLuceneIndexMultiPostingsEnum_initWithOrgApacheLuceneIndexMultiTermsEnum_withInt_(OrgApacheLuceneIndexMultiTermsEnum *parent, jint subReaderCount) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMultiPostingsEnum, initWithOrgApacheLuceneIndexMultiTermsEnum_withInt_, parent, subReaderCount)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMultiPostingsEnum)

@implementation OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)description {
  return JreStrcat("$C@", [((OrgApacheLuceneIndexReaderSlice *) nil_chk(slice_)) description], ':', postingsEnum_);
}

- (void)dealloc {
  RELEASE_(postingsEnum_);
  RELEASE_(slice_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "postingsEnum_", "LOrgApacheLuceneIndexPostingsEnum;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "slice_", "LOrgApacheLuceneIndexReaderSlice;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "toString", "LOrgApacheLuceneIndexMultiPostingsEnum;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice = { "EnumWithSlice", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x19, 2, 2, 1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice;
}

@end

void OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice_init(OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice *self) {
  NSObject_init(self);
}

OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice *new_OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice, init)
}

OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice *create_OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice)
