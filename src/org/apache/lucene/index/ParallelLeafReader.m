//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/ParallelLeafReader.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuilder.h"
#include "java/util/Collections.h"
#include "java/util/IdentityHashMap.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/SortedMap.h"
#include "java/util/TreeMap.h"
#include "org/apache/lucene/index/BinaryDocValues.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/FieldInfos.h"
#include "org/apache/lucene/index/Fields.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/NumericDocValues.h"
#include "org/apache/lucene/index/ParallelLeafReader.h"
#include "org/apache/lucene/index/SortedDocValues.h"
#include "org/apache/lucene/index/SortedNumericDocValues.h"
#include "org/apache/lucene/index/SortedSetDocValues.h"
#include "org/apache/lucene/index/StoredFieldVisitor.h"
#include "org/apache/lucene/index/Terms.h"
#include "org/apache/lucene/util/Bits.h"

@class OrgApacheLuceneIndexParallelLeafReader_ParallelFields;

#if __has_feature(objc_arc)
#error "org/apache/lucene/index/ParallelLeafReader must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneIndexParallelLeafReader () {
 @public
  OrgApacheLuceneIndexFieldInfos *fieldInfos_;
  OrgApacheLuceneIndexParallelLeafReader_ParallelFields *fields_;
  IOSObjectArray *parallelReaders_;
  IOSObjectArray *storedFieldsReaders_;
  id<JavaUtilSet> completeReaderSet_;
  jboolean closeSubReaders_;
  jint maxDoc_;
  jint numDocs_;
  jboolean hasDeletions_;
  id<JavaUtilSortedMap> fieldToReader_;
  id<JavaUtilSortedMap> tvFieldToReader_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexParallelLeafReader, fieldInfos_, OrgApacheLuceneIndexFieldInfos *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexParallelLeafReader, fields_, OrgApacheLuceneIndexParallelLeafReader_ParallelFields *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexParallelLeafReader, parallelReaders_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexParallelLeafReader, storedFieldsReaders_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexParallelLeafReader, completeReaderSet_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexParallelLeafReader, fieldToReader_, id<JavaUtilSortedMap>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexParallelLeafReader, tvFieldToReader_, id<JavaUtilSortedMap>)

@interface OrgApacheLuceneIndexParallelLeafReader_ParallelFields : OrgApacheLuceneIndexFields {
 @public
  id<JavaUtilMap> fields_;
}

- (instancetype)initWithOrgApacheLuceneIndexParallelLeafReader:(OrgApacheLuceneIndexParallelLeafReader *)outer$;

- (void)addFieldWithNSString:(NSString *)fieldName
withOrgApacheLuceneIndexTerms:(OrgApacheLuceneIndexTerms *)terms;

- (id<JavaUtilIterator>)iterator;

- (OrgApacheLuceneIndexTerms *)termsWithNSString:(NSString *)field;

- (jint)size;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexParallelLeafReader_ParallelFields)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexParallelLeafReader_ParallelFields, fields_, id<JavaUtilMap>)

__attribute__((unused)) static void OrgApacheLuceneIndexParallelLeafReader_ParallelFields_initWithOrgApacheLuceneIndexParallelLeafReader_(OrgApacheLuceneIndexParallelLeafReader_ParallelFields *self, OrgApacheLuceneIndexParallelLeafReader *outer$);

__attribute__((unused)) static OrgApacheLuceneIndexParallelLeafReader_ParallelFields *new_OrgApacheLuceneIndexParallelLeafReader_ParallelFields_initWithOrgApacheLuceneIndexParallelLeafReader_(OrgApacheLuceneIndexParallelLeafReader *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexParallelLeafReader_ParallelFields *create_OrgApacheLuceneIndexParallelLeafReader_ParallelFields_initWithOrgApacheLuceneIndexParallelLeafReader_(OrgApacheLuceneIndexParallelLeafReader *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexParallelLeafReader_ParallelFields)

@implementation OrgApacheLuceneIndexParallelLeafReader

- (instancetype)initWithOrgApacheLuceneIndexLeafReaderArray:(IOSObjectArray *)readers {
  OrgApacheLuceneIndexParallelLeafReader_initWithOrgApacheLuceneIndexLeafReaderArray_(self, readers);
  return self;
}

- (instancetype)initWithBoolean:(jboolean)closeSubReaders
withOrgApacheLuceneIndexLeafReaderArray:(IOSObjectArray *)readers {
  OrgApacheLuceneIndexParallelLeafReader_initWithBoolean_withOrgApacheLuceneIndexLeafReaderArray_(self, closeSubReaders, readers);
  return self;
}

- (instancetype)initWithBoolean:(jboolean)closeSubReaders
withOrgApacheLuceneIndexLeafReaderArray:(IOSObjectArray *)readers
withOrgApacheLuceneIndexLeafReaderArray:(IOSObjectArray *)storedFieldsReaders {
  OrgApacheLuceneIndexParallelLeafReader_initWithBoolean_withOrgApacheLuceneIndexLeafReaderArray_withOrgApacheLuceneIndexLeafReaderArray_(self, closeSubReaders, readers, storedFieldsReaders);
  return self;
}

- (NSString *)description {
  JavaLangStringBuilder *buffer = create_JavaLangStringBuilder_initWithNSString_(@"ParallelLeafReader(");
  for (id<JavaUtilIterator> iter = [((id<JavaUtilSet>) nil_chk(completeReaderSet_)) iterator]; [((id<JavaUtilIterator>) nil_chk(iter)) hasNext]; ) {
    [buffer appendWithId:[iter next]];
    if ([iter hasNext]) [buffer appendWithNSString:@", "];
  }
  return [((JavaLangStringBuilder *) nil_chk([buffer appendWithChar:')'])) description];
}

- (void)addCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:(id<OrgApacheLuceneIndexLeafReader_CoreClosedListener>)listener {
  OrgApacheLuceneIndexLeafReader_addCoreClosedListenerAsReaderClosedListenerWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexLeafReader_CoreClosedListener_(self, listener);
}

- (void)removeCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:(id<OrgApacheLuceneIndexLeafReader_CoreClosedListener>)listener {
  OrgApacheLuceneIndexLeafReader_removeCoreClosedListenerAsReaderClosedListenerWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexLeafReader_CoreClosedListener_(self, listener);
}

- (OrgApacheLuceneIndexFieldInfos *)getFieldInfos {
  return fieldInfos_;
}

- (id<OrgApacheLuceneUtilBits>)getLiveDocs {
  [self ensureOpen];
  return hasDeletions_ ? [((OrgApacheLuceneIndexLeafReader *) nil_chk(IOSObjectArray_Get(nil_chk(parallelReaders_), 0))) getLiveDocs] : nil;
}

- (OrgApacheLuceneIndexFields *)fields {
  [self ensureOpen];
  return fields_;
}

- (jint)numDocs {
  return numDocs_;
}

- (jint)maxDoc {
  return maxDoc_;
}

- (void)documentWithInt:(jint)docID
withOrgApacheLuceneIndexStoredFieldVisitor:(OrgApacheLuceneIndexStoredFieldVisitor *)visitor {
  [self ensureOpen];
  {
    IOSObjectArray *a__ = storedFieldsReaders_;
    OrgApacheLuceneIndexLeafReader * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgApacheLuceneIndexLeafReader * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneIndexLeafReader *reader = *b__++;
      [((OrgApacheLuceneIndexLeafReader *) nil_chk(reader)) documentWithInt:docID withOrgApacheLuceneIndexStoredFieldVisitor:visitor];
    }
  }
}

- (OrgApacheLuceneIndexFields *)getTermVectorsWithInt:(jint)docID {
  [self ensureOpen];
  OrgApacheLuceneIndexParallelLeafReader_ParallelFields *fields = nil;
  for (id<JavaUtilMap_Entry> __strong ent in nil_chk([((id<JavaUtilSortedMap>) nil_chk(tvFieldToReader_)) entrySet])) {
    NSString *fieldName = JreRetainedLocalValue([((id<JavaUtilMap_Entry>) nil_chk(ent)) getKey]);
    OrgApacheLuceneIndexTerms *vector = JreRetainedLocalValue([((OrgApacheLuceneIndexLeafReader *) nil_chk([ent getValue])) getTermVectorWithInt:docID withNSString:fieldName]);
    if (vector != nil) {
      if (fields == nil) {
        fields = create_OrgApacheLuceneIndexParallelLeafReader_ParallelFields_initWithOrgApacheLuceneIndexParallelLeafReader_(self);
      }
      [fields addFieldWithNSString:fieldName withOrgApacheLuceneIndexTerms:vector];
    }
  }
  return fields;
}

- (void)doClose {
  @synchronized(self) {
    JavaIoIOException *ioe = nil;
    for (OrgApacheLuceneIndexLeafReader * __strong reader in nil_chk(completeReaderSet_)) {
      @try {
        if (closeSubReaders_) {
          [((OrgApacheLuceneIndexLeafReader *) nil_chk(reader)) close];
        }
        else {
          [((OrgApacheLuceneIndexLeafReader *) nil_chk(reader)) decRef];
        }
      }
      @catch (JavaIoIOException *e) {
        if (ioe == nil) ioe = e;
      }
    }
    if (ioe != nil) @throw ioe;
  }
}

- (OrgApacheLuceneIndexNumericDocValues *)getNumericDocValuesWithNSString:(NSString *)field {
  [self ensureOpen];
  OrgApacheLuceneIndexLeafReader *reader = JreRetainedLocalValue([((id<JavaUtilSortedMap>) nil_chk(fieldToReader_)) getWithId:field]);
  return reader == nil ? nil : [reader getNumericDocValuesWithNSString:field];
}

- (OrgApacheLuceneIndexBinaryDocValues *)getBinaryDocValuesWithNSString:(NSString *)field {
  [self ensureOpen];
  OrgApacheLuceneIndexLeafReader *reader = JreRetainedLocalValue([((id<JavaUtilSortedMap>) nil_chk(fieldToReader_)) getWithId:field]);
  return reader == nil ? nil : [reader getBinaryDocValuesWithNSString:field];
}

- (OrgApacheLuceneIndexSortedDocValues *)getSortedDocValuesWithNSString:(NSString *)field {
  [self ensureOpen];
  OrgApacheLuceneIndexLeafReader *reader = JreRetainedLocalValue([((id<JavaUtilSortedMap>) nil_chk(fieldToReader_)) getWithId:field]);
  return reader == nil ? nil : [reader getSortedDocValuesWithNSString:field];
}

- (OrgApacheLuceneIndexSortedNumericDocValues *)getSortedNumericDocValuesWithNSString:(NSString *)field {
  [self ensureOpen];
  OrgApacheLuceneIndexLeafReader *reader = JreRetainedLocalValue([((id<JavaUtilSortedMap>) nil_chk(fieldToReader_)) getWithId:field]);
  return reader == nil ? nil : [reader getSortedNumericDocValuesWithNSString:field];
}

- (OrgApacheLuceneIndexSortedSetDocValues *)getSortedSetDocValuesWithNSString:(NSString *)field {
  [self ensureOpen];
  OrgApacheLuceneIndexLeafReader *reader = JreRetainedLocalValue([((id<JavaUtilSortedMap>) nil_chk(fieldToReader_)) getWithId:field]);
  return reader == nil ? nil : [reader getSortedSetDocValuesWithNSString:field];
}

- (id<OrgApacheLuceneUtilBits>)getDocsWithFieldWithNSString:(NSString *)field {
  [self ensureOpen];
  OrgApacheLuceneIndexLeafReader *reader = JreRetainedLocalValue([((id<JavaUtilSortedMap>) nil_chk(fieldToReader_)) getWithId:field]);
  return reader == nil ? nil : [reader getDocsWithFieldWithNSString:field];
}

- (OrgApacheLuceneIndexNumericDocValues *)getNormValuesWithNSString:(NSString *)field {
  [self ensureOpen];
  OrgApacheLuceneIndexLeafReader *reader = JreRetainedLocalValue([((id<JavaUtilSortedMap>) nil_chk(fieldToReader_)) getWithId:field]);
  OrgApacheLuceneIndexNumericDocValues *values = reader == nil ? nil : [reader getNormValuesWithNSString:field];
  return values;
}

- (void)checkIntegrity {
  [self ensureOpen];
  for (OrgApacheLuceneIndexLeafReader * __strong reader in nil_chk(completeReaderSet_)) {
    [((OrgApacheLuceneIndexLeafReader *) nil_chk(reader)) checkIntegrity];
  }
}

- (IOSObjectArray *)getParallelReaders {
  [self ensureOpen];
  return parallelReaders_;
}

- (void)dealloc {
  RELEASE_(fieldInfos_);
  RELEASE_(fields_);
  RELEASE_(parallelReaders_);
  RELEASE_(storedFieldsReaders_);
  RELEASE_(completeReaderSet_);
  RELEASE_(fieldToReader_);
  RELEASE_(tvFieldToReader_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x81, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x81, -1, 2, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, 1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 6, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexFieldInfos;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBits;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexFields;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexFields;", 0x1, 10, 11, 1, -1, -1, -1 },
    { NULL, "V", 0x24, -1, -1, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexNumericDocValues;", 0x1, 12, 13, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexBinaryDocValues;", 0x1, 14, 13, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexSortedDocValues;", 0x1, 15, 13, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexSortedNumericDocValues;", 0x1, 16, 13, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexSortedSetDocValues;", 0x1, 17, 13, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBits;", 0x1, 18, 13, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexNumericDocValues;", 0x1, 19, 13, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "[LOrgApacheLuceneIndexLeafReader;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexLeafReaderArray:);
  methods[1].selector = @selector(initWithBoolean:withOrgApacheLuceneIndexLeafReaderArray:);
  methods[2].selector = @selector(initWithBoolean:withOrgApacheLuceneIndexLeafReaderArray:withOrgApacheLuceneIndexLeafReaderArray:);
  methods[3].selector = @selector(description);
  methods[4].selector = @selector(addCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:);
  methods[5].selector = @selector(removeCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:);
  methods[6].selector = @selector(getFieldInfos);
  methods[7].selector = @selector(getLiveDocs);
  methods[8].selector = @selector(fields);
  methods[9].selector = @selector(numDocs);
  methods[10].selector = @selector(maxDoc);
  methods[11].selector = @selector(documentWithInt:withOrgApacheLuceneIndexStoredFieldVisitor:);
  methods[12].selector = @selector(getTermVectorsWithInt:);
  methods[13].selector = @selector(doClose);
  methods[14].selector = @selector(getNumericDocValuesWithNSString:);
  methods[15].selector = @selector(getBinaryDocValuesWithNSString:);
  methods[16].selector = @selector(getSortedDocValuesWithNSString:);
  methods[17].selector = @selector(getSortedNumericDocValuesWithNSString:);
  methods[18].selector = @selector(getSortedSetDocValuesWithNSString:);
  methods[19].selector = @selector(getDocsWithFieldWithNSString:);
  methods[20].selector = @selector(getNormValuesWithNSString:);
  methods[21].selector = @selector(checkIntegrity);
  methods[22].selector = @selector(getParallelReaders);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "fieldInfos_", "LOrgApacheLuceneIndexFieldInfos;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "fields_", "LOrgApacheLuceneIndexParallelLeafReader_ParallelFields;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "parallelReaders_", "[LOrgApacheLuceneIndexLeafReader;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "storedFieldsReaders_", "[LOrgApacheLuceneIndexLeafReader;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "completeReaderSet_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x12, -1, -1, 20, -1 },
    { "closeSubReaders_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "maxDoc_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "numDocs_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "hasDeletions_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "fieldToReader_", "LJavaUtilSortedMap;", .constantValue.asLong = 0, 0x12, -1, -1, 21, -1 },
    { "tvFieldToReader_", "LJavaUtilSortedMap;", .constantValue.asLong = 0, 0x12, -1, -1, 21, -1 },
  };
  static const void *ptrTable[] = { "[LOrgApacheLuceneIndexLeafReader;", "LJavaIoIOException;", "Z[LOrgApacheLuceneIndexLeafReader;", "Z[LOrgApacheLuceneIndexLeafReader;[LOrgApacheLuceneIndexLeafReader;", "toString", "addCoreClosedListener", "LOrgApacheLuceneIndexLeafReader_CoreClosedListener;", "removeCoreClosedListener", "document", "ILOrgApacheLuceneIndexStoredFieldVisitor;", "getTermVectors", "I", "getNumericDocValues", "LNSString;", "getBinaryDocValues", "getSortedDocValues", "getSortedNumericDocValues", "getSortedSetDocValues", "getDocsWithField", "getNormValues", "Ljava/util/Set<Lorg/apache/lucene/index/LeafReader;>;", "Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/lucene/index/LeafReader;>;", "LOrgApacheLuceneIndexParallelLeafReader_ParallelFields;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexParallelLeafReader = { "ParallelLeafReader", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x1, 23, 11, -1, 22, -1, -1, -1 };
  return &_OrgApacheLuceneIndexParallelLeafReader;
}

@end

void OrgApacheLuceneIndexParallelLeafReader_initWithOrgApacheLuceneIndexLeafReaderArray_(OrgApacheLuceneIndexParallelLeafReader *self, IOSObjectArray *readers) {
  OrgApacheLuceneIndexParallelLeafReader_initWithBoolean_withOrgApacheLuceneIndexLeafReaderArray_(self, true, readers);
}

OrgApacheLuceneIndexParallelLeafReader *new_OrgApacheLuceneIndexParallelLeafReader_initWithOrgApacheLuceneIndexLeafReaderArray_(IOSObjectArray *readers) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexParallelLeafReader, initWithOrgApacheLuceneIndexLeafReaderArray_, readers)
}

OrgApacheLuceneIndexParallelLeafReader *create_OrgApacheLuceneIndexParallelLeafReader_initWithOrgApacheLuceneIndexLeafReaderArray_(IOSObjectArray *readers) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexParallelLeafReader, initWithOrgApacheLuceneIndexLeafReaderArray_, readers)
}

void OrgApacheLuceneIndexParallelLeafReader_initWithBoolean_withOrgApacheLuceneIndexLeafReaderArray_(OrgApacheLuceneIndexParallelLeafReader *self, jboolean closeSubReaders, IOSObjectArray *readers) {
  OrgApacheLuceneIndexParallelLeafReader_initWithBoolean_withOrgApacheLuceneIndexLeafReaderArray_withOrgApacheLuceneIndexLeafReaderArray_(self, closeSubReaders, readers, readers);
}

OrgApacheLuceneIndexParallelLeafReader *new_OrgApacheLuceneIndexParallelLeafReader_initWithBoolean_withOrgApacheLuceneIndexLeafReaderArray_(jboolean closeSubReaders, IOSObjectArray *readers) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexParallelLeafReader, initWithBoolean_withOrgApacheLuceneIndexLeafReaderArray_, closeSubReaders, readers)
}

OrgApacheLuceneIndexParallelLeafReader *create_OrgApacheLuceneIndexParallelLeafReader_initWithBoolean_withOrgApacheLuceneIndexLeafReaderArray_(jboolean closeSubReaders, IOSObjectArray *readers) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexParallelLeafReader, initWithBoolean_withOrgApacheLuceneIndexLeafReaderArray_, closeSubReaders, readers)
}

void OrgApacheLuceneIndexParallelLeafReader_initWithBoolean_withOrgApacheLuceneIndexLeafReaderArray_withOrgApacheLuceneIndexLeafReaderArray_(OrgApacheLuceneIndexParallelLeafReader *self, jboolean closeSubReaders, IOSObjectArray *readers, IOSObjectArray *storedFieldsReaders) {
  OrgApacheLuceneIndexLeafReader_init(self);
  JreStrongAssignAndConsume(&self->fields_, new_OrgApacheLuceneIndexParallelLeafReader_ParallelFields_initWithOrgApacheLuceneIndexParallelLeafReader_(self));
  JreStrongAssign(&self->completeReaderSet_, JavaUtilCollections_newSetFromMapWithJavaUtilMap_(create_JavaUtilIdentityHashMap_init()));
  JreStrongAssignAndConsume(&self->fieldToReader_, new_JavaUtilTreeMap_init());
  JreStrongAssignAndConsume(&self->tvFieldToReader_, new_JavaUtilTreeMap_init());
  self->closeSubReaders_ = closeSubReaders;
  if (((IOSObjectArray *) nil_chk(readers))->size_ == 0 && ((IOSObjectArray *) nil_chk(storedFieldsReaders))->size_ > 0) @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"There must be at least one main reader if storedFieldsReaders are used.");
  JreStrongAssign(&self->parallelReaders_, [readers java_clone]);
  JreStrongAssign(&self->storedFieldsReaders_, [((IOSObjectArray *) nil_chk(storedFieldsReaders)) java_clone]);
  if (((IOSObjectArray *) nil_chk(self->parallelReaders_))->size_ > 0) {
    OrgApacheLuceneIndexLeafReader *first = IOSObjectArray_Get(self->parallelReaders_, 0);
    self->maxDoc_ = [((OrgApacheLuceneIndexLeafReader *) nil_chk(first)) maxDoc];
    self->numDocs_ = [first numDocs];
    self->hasDeletions_ = [first hasDeletions];
  }
  else {
    self->maxDoc_ = self->numDocs_ = 0;
    self->hasDeletions_ = false;
  }
  JavaUtilCollections_addAllWithJavaUtilCollection_withNSObjectArray_(self->completeReaderSet_, self->parallelReaders_);
  JavaUtilCollections_addAllWithJavaUtilCollection_withNSObjectArray_(self->completeReaderSet_, self->storedFieldsReaders_);
  for (OrgApacheLuceneIndexLeafReader * __strong reader in nil_chk(self->completeReaderSet_)) {
    if ([((OrgApacheLuceneIndexLeafReader *) nil_chk(reader)) maxDoc] != self->maxDoc_) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$I", @"All readers must have same maxDoc: ", self->maxDoc_, @"!=", [reader maxDoc]));
    }
  }
  OrgApacheLuceneIndexFieldInfos_Builder *builder = create_OrgApacheLuceneIndexFieldInfos_Builder_init();
  {
    IOSObjectArray *a__ = self->parallelReaders_;
    OrgApacheLuceneIndexLeafReader * const *b__ = a__->buffer_;
    OrgApacheLuceneIndexLeafReader * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneIndexLeafReader *reader = *b__++;
      OrgApacheLuceneIndexFieldInfos *readerFieldInfos = [((OrgApacheLuceneIndexLeafReader *) nil_chk(reader)) getFieldInfos];
      for (OrgApacheLuceneIndexFieldInfo * __strong fieldInfo in nil_chk(readerFieldInfos)) {
        if (![self->fieldToReader_ containsKeyWithId:((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo))->name_]) {
          [builder addWithOrgApacheLuceneIndexFieldInfo:fieldInfo];
          [self->fieldToReader_ putWithId:fieldInfo->name_ withId:reader];
          if ([fieldInfo hasVectors]) {
            [self->tvFieldToReader_ putWithId:fieldInfo->name_ withId:reader];
          }
        }
      }
    }
  }
  JreStrongAssign(&self->fieldInfos_, [builder finish]);
  {
    IOSObjectArray *a__ = self->parallelReaders_;
    OrgApacheLuceneIndexLeafReader * const *b__ = a__->buffer_;
    OrgApacheLuceneIndexLeafReader * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneIndexLeafReader *reader = *b__++;
      OrgApacheLuceneIndexFields *readerFields = [((OrgApacheLuceneIndexLeafReader *) nil_chk(reader)) fields];
      for (NSString * __strong field in nil_chk(readerFields)) {
        if (JreObjectEqualsEquals([self->fieldToReader_ getWithId:field], reader)) {
          [self->fields_ addFieldWithNSString:field withOrgApacheLuceneIndexTerms:[readerFields termsWithNSString:field]];
        }
      }
    }
  }
  for (OrgApacheLuceneIndexLeafReader * __strong reader in self->completeReaderSet_) {
    if (!closeSubReaders) {
      [((OrgApacheLuceneIndexLeafReader *) nil_chk(reader)) incRef];
    }
    [((OrgApacheLuceneIndexLeafReader *) nil_chk(reader)) registerParentReaderWithOrgApacheLuceneIndexIndexReader:self];
  }
}

OrgApacheLuceneIndexParallelLeafReader *new_OrgApacheLuceneIndexParallelLeafReader_initWithBoolean_withOrgApacheLuceneIndexLeafReaderArray_withOrgApacheLuceneIndexLeafReaderArray_(jboolean closeSubReaders, IOSObjectArray *readers, IOSObjectArray *storedFieldsReaders) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexParallelLeafReader, initWithBoolean_withOrgApacheLuceneIndexLeafReaderArray_withOrgApacheLuceneIndexLeafReaderArray_, closeSubReaders, readers, storedFieldsReaders)
}

OrgApacheLuceneIndexParallelLeafReader *create_OrgApacheLuceneIndexParallelLeafReader_initWithBoolean_withOrgApacheLuceneIndexLeafReaderArray_withOrgApacheLuceneIndexLeafReaderArray_(jboolean closeSubReaders, IOSObjectArray *readers, IOSObjectArray *storedFieldsReaders) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexParallelLeafReader, initWithBoolean_withOrgApacheLuceneIndexLeafReaderArray_withOrgApacheLuceneIndexLeafReaderArray_, closeSubReaders, readers, storedFieldsReaders)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexParallelLeafReader)

@implementation OrgApacheLuceneIndexParallelLeafReader_ParallelFields

- (instancetype)initWithOrgApacheLuceneIndexParallelLeafReader:(OrgApacheLuceneIndexParallelLeafReader *)outer$ {
  OrgApacheLuceneIndexParallelLeafReader_ParallelFields_initWithOrgApacheLuceneIndexParallelLeafReader_(self, outer$);
  return self;
}

- (void)addFieldWithNSString:(NSString *)fieldName
withOrgApacheLuceneIndexTerms:(OrgApacheLuceneIndexTerms *)terms {
  [((id<JavaUtilMap>) nil_chk(fields_)) putWithId:fieldName withId:terms];
}

- (id<JavaUtilIterator>)iterator {
  return [((id<JavaUtilSet>) nil_chk(JavaUtilCollections_unmodifiableSetWithJavaUtilSet_([((id<JavaUtilMap>) nil_chk(fields_)) keySet]))) iterator];
}

- (OrgApacheLuceneIndexTerms *)termsWithNSString:(NSString *)field {
  return [((id<JavaUtilMap>) nil_chk(fields_)) getWithId:field];
}

- (jint)size {
  return [((id<JavaUtilMap>) nil_chk(fields_)) size];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

- (void)dealloc {
  RELEASE_(fields_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTerms;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexParallelLeafReader:);
  methods[1].selector = @selector(addFieldWithNSString:withOrgApacheLuceneIndexTerms:);
  methods[2].selector = @selector(iterator);
  methods[3].selector = @selector(termsWithNSString:);
  methods[4].selector = @selector(size);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "fields_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x10, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexParallelLeafReader;", "addField", "LNSString;LOrgApacheLuceneIndexTerms;", "()Ljava/util/Iterator<Ljava/lang/String;>;", "terms", "LNSString;", "Ljava/util/Map<Ljava/lang/String;Lorg/apache/lucene/index/Terms;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexParallelLeafReader_ParallelFields = { "ParallelFields", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x12, 5, 1, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexParallelLeafReader_ParallelFields;
}

@end

void OrgApacheLuceneIndexParallelLeafReader_ParallelFields_initWithOrgApacheLuceneIndexParallelLeafReader_(OrgApacheLuceneIndexParallelLeafReader_ParallelFields *self, OrgApacheLuceneIndexParallelLeafReader *outer$) {
  OrgApacheLuceneIndexFields_init(self);
  JreStrongAssignAndConsume(&self->fields_, new_JavaUtilTreeMap_init());
}

OrgApacheLuceneIndexParallelLeafReader_ParallelFields *new_OrgApacheLuceneIndexParallelLeafReader_ParallelFields_initWithOrgApacheLuceneIndexParallelLeafReader_(OrgApacheLuceneIndexParallelLeafReader *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexParallelLeafReader_ParallelFields, initWithOrgApacheLuceneIndexParallelLeafReader_, outer$)
}

OrgApacheLuceneIndexParallelLeafReader_ParallelFields *create_OrgApacheLuceneIndexParallelLeafReader_ParallelFields_initWithOrgApacheLuceneIndexParallelLeafReader_(OrgApacheLuceneIndexParallelLeafReader *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexParallelLeafReader_ParallelFields, initWithOrgApacheLuceneIndexParallelLeafReader_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexParallelLeafReader_ParallelFields)
