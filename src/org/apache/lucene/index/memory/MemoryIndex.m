//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./memory/src/java/org/apache/lucene/index/memory/MemoryIndex.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/Throwable.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/SortedMap.h"
#include "java/util/TreeMap.h"
#include "org/apache/lucene/analysis/Analyzer.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/OffsetAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/PayloadAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/TermToBytesRefAttribute.h"
#include "org/apache/lucene/index/BinaryDocValues.h"
#include "org/apache/lucene/index/DocValuesType.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/FieldInfos.h"
#include "org/apache/lucene/index/FieldInvertState.h"
#include "org/apache/lucene/index/Fields.h"
#include "org/apache/lucene/index/IndexOptions.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/NumericDocValues.h"
#include "org/apache/lucene/index/OrdTermState.h"
#include "org/apache/lucene/index/PostingsEnum.h"
#include "org/apache/lucene/index/SortedDocValues.h"
#include "org/apache/lucene/index/SortedNumericDocValues.h"
#include "org/apache/lucene/index/SortedSetDocValues.h"
#include "org/apache/lucene/index/StoredFieldVisitor.h"
#include "org/apache/lucene/index/TermState.h"
#include "org/apache/lucene/index/Terms.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/index/memory/MemoryIndex.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/SimpleCollector.h"
#include "org/apache/lucene/search/similarities/Similarity.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/Bits.h"
#include "org/apache/lucene/util/ByteBlockPool.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefArray.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"
#include "org/apache/lucene/util/BytesRefHash.h"
#include "org/apache/lucene/util/Counter.h"
#include "org/apache/lucene/util/IntBlockPool.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"
#include "org/apache/lucene/util/RecyclingByteBlockAllocator.h"
#include "org/apache/lucene/util/RecyclingIntBlockAllocator.h"

@class OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray;

#if __has_feature(objc_arc)
#error "org/apache/lucene/index/memory/MemoryIndex must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneIndexMemoryMemoryIndex () {
 @public
  /*!
   @brief info for each field: Map&lt;String fieldName, Info field&gt;
   */
  id<JavaUtilSortedMap> fields_;
  jboolean storeOffsets_;
  jboolean storePayloads_;
  OrgApacheLuceneUtilByteBlockPool *byteBlockPool_;
  OrgApacheLuceneUtilIntBlockPool *intBlockPool_;
  OrgApacheLuceneUtilIntBlockPool_SliceWriter *postingsWriter_;
  OrgApacheLuceneUtilBytesRefArray *payloadsBytesRefs_;
  OrgApacheLuceneUtilCounter *bytesUsed_;
  jboolean frozen_;
  OrgApacheLuceneSearchSimilaritiesSimilarity *normSimilarity_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex, fields_, id<JavaUtilSortedMap>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex, byteBlockPool_, OrgApacheLuceneUtilByteBlockPool *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex, intBlockPool_, OrgApacheLuceneUtilIntBlockPool *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex, postingsWriter_, OrgApacheLuceneUtilIntBlockPool_SliceWriter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex, payloadsBytesRefs_, OrgApacheLuceneUtilBytesRefArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex, bytesUsed_, OrgApacheLuceneUtilCounter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex, normSimilarity_, OrgApacheLuceneSearchSimilaritiesSimilarity *)

inline jboolean OrgApacheLuceneIndexMemoryMemoryIndex_get_DEBUG(void);
#define OrgApacheLuceneIndexMemoryMemoryIndex_DEBUG false
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneIndexMemoryMemoryIndex, DEBUG, jboolean)

@interface OrgApacheLuceneIndexMemoryMemoryIndex_1 : OrgApacheLuceneAnalysisTokenStream {
 @public
  id<JavaUtilIterator> iter_;
  jint start_;
  id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAtt_;
  id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute> offsetAtt_;
}

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)capture$0;

- (jboolean)incrementToken;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMemoryMemoryIndex_1)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_1, iter_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_1, termAtt_, id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_1, offsetAtt_, id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>)

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_1_initWithJavaUtilCollection_(OrgApacheLuceneIndexMemoryMemoryIndex_1 *self, id<JavaUtilCollection> capture$0);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_1 *new_OrgApacheLuceneIndexMemoryMemoryIndex_1_initWithJavaUtilCollection_(id<JavaUtilCollection> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_1 *create_OrgApacheLuceneIndexMemoryMemoryIndex_1_initWithJavaUtilCollection_(id<JavaUtilCollection> capture$0);

@interface OrgApacheLuceneIndexMemoryMemoryIndex_2 : OrgApacheLuceneSearchSimpleCollector {
 @public
  IOSFloatArray *val$scores_;
  OrgApacheLuceneSearchScorer *scorer_;
}

- (instancetype)initWithFloatArray:(IOSFloatArray *)capture$0;

- (void)collectWithInt:(jint)doc;

- (void)setScorerWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)scorer;

- (jboolean)needsScores;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMemoryMemoryIndex_2)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_2, scorer_, OrgApacheLuceneSearchScorer *)

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_2_initWithFloatArray_(OrgApacheLuceneIndexMemoryMemoryIndex_2 *self, IOSFloatArray *capture$0);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_2 *new_OrgApacheLuceneIndexMemoryMemoryIndex_2_initWithFloatArray_(IOSFloatArray *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_2 *create_OrgApacheLuceneIndexMemoryMemoryIndex_2_initWithFloatArray_(IOSFloatArray *capture$0);

/*!
 @brief Index data structure for a field; contains the tokenized term texts and
  their positions.
 */
@interface OrgApacheLuceneIndexMemoryMemoryIndex_Info : NSObject {
 @public
  OrgApacheLuceneIndexMemoryMemoryIndex *this$0_;
  OrgApacheLuceneIndexFieldInfo *fieldInfo_;
  /*!
   @brief The norms for this field; computed on demand.
   */
  OrgApacheLuceneIndexNumericDocValues *norms_;
  /*!
   @brief Term strings and their positions for this field: Map &lt;String
  termText, ArrayIntList positions&gt;
   */
  OrgApacheLuceneUtilBytesRefHash *terms_;
  OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray *sliceArray_;
  /*!
   @brief Terms sorted ascending by term text; computed on demand
   */
  IOSIntArray *sortedTerms_;
  /*!
   @brief Number of added tokens for this field
   */
  jint numTokens_;
  /*!
   @brief Number of overlapping tokens for this field
   */
  jint numOverlapTokens_;
  /*!
   @brief Boost factor for hits for this field
   */
  jfloat boost_;
  jlong sumTotalTermFreq_;
  /*!
   @brief the last position encountered in this field for multi field support
   */
  jint lastPosition_;
  /*!
   @brief the last offset encountered in this field for multi field support
   */
  jint lastOffset_;
}

- (instancetype)initWithOrgApacheLuceneIndexMemoryMemoryIndex:(OrgApacheLuceneIndexMemoryMemoryIndex *)outer$
                            withOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo
                          withOrgApacheLuceneUtilBytesRefHash:(OrgApacheLuceneUtilBytesRefHash *)terms
withOrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray:(OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray *)sliceArray
                                                      withInt:(jint)numTokens
                                                      withInt:(jint)numOverlapTokens
                                                    withFloat:(jfloat)boost
                                                      withInt:(jint)lastPosition
                                                      withInt:(jint)lastOffset
                                                     withLong:(jlong)sumTotalTermFreq;

/*!
 @brief Sorts hashed terms into ascending order, reusing memory along the
  way.Note that sorting is lazily delayed until required (often it's
  not required at all).
 If a sorted view is required then hashing +
  sort + binary search is still faster and smaller than TreeMap usage
  (which would be an alternative and somewhat more elegant approach,
  apart from more sophisticated Tries / prefix trees).
 */
- (void)sortTerms;

- (OrgApacheLuceneIndexNumericDocValues *)getNormDocValues;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMemoryMemoryIndex_Info)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_Info, fieldInfo_, OrgApacheLuceneIndexFieldInfo *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_Info, norms_, OrgApacheLuceneIndexNumericDocValues *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_Info, terms_, OrgApacheLuceneUtilBytesRefHash *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_Info, sliceArray_, OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_Info, sortedTerms_, IOSIntArray *)

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_Info_initWithOrgApacheLuceneIndexMemoryMemoryIndex_withOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneUtilBytesRefHash_withOrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray_withInt_withInt_withFloat_withInt_withInt_withLong_(OrgApacheLuceneIndexMemoryMemoryIndex_Info *self, OrgApacheLuceneIndexMemoryMemoryIndex *outer$, OrgApacheLuceneIndexFieldInfo *fieldInfo, OrgApacheLuceneUtilBytesRefHash *terms, OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray *sliceArray, jint numTokens, jint numOverlapTokens, jfloat boost, jint lastPosition, jint lastOffset, jlong sumTotalTermFreq);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_Info *new_OrgApacheLuceneIndexMemoryMemoryIndex_Info_initWithOrgApacheLuceneIndexMemoryMemoryIndex_withOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneUtilBytesRefHash_withOrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray_withInt_withInt_withFloat_withInt_withInt_withLong_(OrgApacheLuceneIndexMemoryMemoryIndex *outer$, OrgApacheLuceneIndexFieldInfo *fieldInfo, OrgApacheLuceneUtilBytesRefHash *terms, OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray *sliceArray, jint numTokens, jint numOverlapTokens, jfloat boost, jint lastPosition, jint lastOffset, jlong sumTotalTermFreq) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_Info *create_OrgApacheLuceneIndexMemoryMemoryIndex_Info_initWithOrgApacheLuceneIndexMemoryMemoryIndex_withOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneUtilBytesRefHash_withOrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray_withInt_withInt_withFloat_withInt_withInt_withLong_(OrgApacheLuceneIndexMemoryMemoryIndex *outer$, OrgApacheLuceneIndexFieldInfo *fieldInfo, OrgApacheLuceneUtilBytesRefHash *terms, OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray *sliceArray, jint numTokens, jint numOverlapTokens, jfloat boost, jint lastPosition, jint lastOffset, jlong sumTotalTermFreq);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexMemoryMemoryIndex_Info)

@interface OrgApacheLuceneIndexMemoryMemoryIndex_Info_1 : OrgApacheLuceneIndexNumericDocValues {
 @public
  jlong val$value_;
}

- (instancetype)initWithLong:(jlong)capture$0;

- (jlong)getWithInt:(jint)docID;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMemoryMemoryIndex_Info_1)

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_Info_1_initWithLong_(OrgApacheLuceneIndexMemoryMemoryIndex_Info_1 *self, jlong capture$0);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_Info_1 *new_OrgApacheLuceneIndexMemoryMemoryIndex_Info_1_initWithLong_(jlong capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_Info_1 *create_OrgApacheLuceneIndexMemoryMemoryIndex_Info_1_initWithLong_(jlong capture$0);

/*!
 @brief Search support for Lucene framework integration; implements all methods
  required by the Lucene IndexReader contracts.
 */
@interface OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader : OrgApacheLuceneIndexLeafReader {
 @public
  OrgApacheLuceneIndexMemoryMemoryIndex *this$0_;
}

- (instancetype)initWithOrgApacheLuceneIndexMemoryMemoryIndex:(OrgApacheLuceneIndexMemoryMemoryIndex *)outer$;

- (void)addCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:(id<OrgApacheLuceneIndexLeafReader_CoreClosedListener>)listener;

- (void)removeCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:(id<OrgApacheLuceneIndexLeafReader_CoreClosedListener>)listener;

- (OrgApacheLuceneIndexMemoryMemoryIndex_Info *)getInfoWithNSString:(NSString *)fieldName;

- (id<OrgApacheLuceneUtilBits>)getLiveDocs;

- (OrgApacheLuceneIndexFieldInfos *)getFieldInfos;

- (OrgApacheLuceneIndexNumericDocValues *)getNumericDocValuesWithNSString:(NSString *)field;

- (OrgApacheLuceneIndexBinaryDocValues *)getBinaryDocValuesWithNSString:(NSString *)field;

- (OrgApacheLuceneIndexSortedDocValues *)getSortedDocValuesWithNSString:(NSString *)field;

- (OrgApacheLuceneIndexSortedNumericDocValues *)getSortedNumericDocValuesWithNSString:(NSString *)field;

- (OrgApacheLuceneIndexSortedSetDocValues *)getSortedSetDocValuesWithNSString:(NSString *)field;

- (id<OrgApacheLuceneUtilBits>)getDocsWithFieldWithNSString:(NSString *)field;

- (void)checkIntegrity;

- (OrgApacheLuceneIndexFields *)fields;

- (OrgApacheLuceneIndexFields *)getTermVectorsWithInt:(jint)docID;

- (jint)numDocs;

- (jint)maxDoc;

- (void)documentWithInt:(jint)docID
withOrgApacheLuceneIndexStoredFieldVisitor:(OrgApacheLuceneIndexStoredFieldVisitor *)visitor;

- (void)doClose;

- (OrgApacheLuceneIndexNumericDocValues *)getNormValuesWithNSString:(NSString *)field;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader)

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_initWithOrgApacheLuceneIndexMemoryMemoryIndex_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *self, OrgApacheLuceneIndexMemoryMemoryIndex *outer$);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *new_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_initWithOrgApacheLuceneIndexMemoryMemoryIndex_(OrgApacheLuceneIndexMemoryMemoryIndex *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *create_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_initWithOrgApacheLuceneIndexMemoryMemoryIndex_(OrgApacheLuceneIndexMemoryMemoryIndex *outer$);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_Info *OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getInfoWithNSString_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *self, NSString *fieldName);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader)

@interface OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields : OrgApacheLuceneIndexFields {
 @public
  OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *this$0_;
}

- (instancetype)initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader:(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *)outer$;

- (id<JavaUtilIterator>)iterator;

- (OrgApacheLuceneIndexTerms *)termsWithNSString:(NSString *)field;

- (jint)size;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields)

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields *self, OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields *new_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields *create_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields)

@interface OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_1 : OrgApacheLuceneIndexTerms {
 @public
  OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields *this$0_;
  OrgApacheLuceneIndexMemoryMemoryIndex_Info *val$info_;
}

- (instancetype)initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields:(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields *)outer$
                                              withOrgApacheLuceneIndexMemoryMemoryIndex_Info:(OrgApacheLuceneIndexMemoryMemoryIndex_Info *)capture$0;

- (OrgApacheLuceneIndexTermsEnum *)iterator;

- (jlong)size;

- (jlong)getSumTotalTermFreq;

- (jlong)getSumDocFreq;

- (jint)getDocCount;

- (jboolean)hasFreqs;

- (jboolean)hasOffsets;

- (jboolean)hasPositions;

- (jboolean)hasPayloads;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_1)

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_1_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_1 *self, OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields *outer$, OrgApacheLuceneIndexMemoryMemoryIndex_Info *capture$0);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_1 *new_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_1_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields *outer$, OrgApacheLuceneIndexMemoryMemoryIndex_Info *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_1 *create_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_1_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields *outer$, OrgApacheLuceneIndexMemoryMemoryIndex_Info *capture$0);

@interface OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum : OrgApacheLuceneIndexTermsEnum {
 @public
  OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *this$0_;
  OrgApacheLuceneIndexMemoryMemoryIndex_Info *info_;
  OrgApacheLuceneUtilBytesRef *br_;
  jint termUpto_;
}

- (instancetype)initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader:(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *)outer$
                                 withOrgApacheLuceneIndexMemoryMemoryIndex_Info:(OrgApacheLuceneIndexMemoryMemoryIndex_Info *)info;

- (jint)binarySearchWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)b
                    withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)bytesRef
                                            withInt:(jint)low
                                            withInt:(jint)high
                withOrgApacheLuceneUtilBytesRefHash:(OrgApacheLuceneUtilBytesRefHash *)hash_
                                       withIntArray:(IOSIntArray *)ords
                             withJavaUtilComparator:(id<JavaUtilComparator>)comparator;

- (jboolean)seekExactWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text;

- (OrgApacheLuceneIndexTermsEnum_SeekStatus *)seekCeilWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text;

- (void)seekExactWithLong:(jlong)ord;

- (OrgApacheLuceneUtilBytesRef *)next;

- (OrgApacheLuceneUtilBytesRef *)term;

- (jlong)ord;

- (jint)docFreq;

- (jlong)totalTermFreq;

- (OrgApacheLuceneIndexPostingsEnum *)postingsWithOrgApacheLuceneIndexPostingsEnum:(OrgApacheLuceneIndexPostingsEnum *)reuse
                                                                           withInt:(jint)flags;

- (void)seekExactWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term
               withOrgApacheLuceneIndexTermState:(OrgApacheLuceneIndexTermState *)state;

- (OrgApacheLuceneIndexTermState *)termState;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum, info_, OrgApacheLuceneIndexMemoryMemoryIndex_Info *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum, br_, OrgApacheLuceneUtilBytesRef *)

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum *self, OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$, OrgApacheLuceneIndexMemoryMemoryIndex_Info *info);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum *new_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$, OrgApacheLuceneIndexMemoryMemoryIndex_Info *info) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum *create_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$, OrgApacheLuceneIndexMemoryMemoryIndex_Info *info);

__attribute__((unused)) static jint OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum_binarySearchWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_withInt_withInt_withOrgApacheLuceneUtilBytesRefHash_withIntArray_withJavaUtilComparator_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum *self, OrgApacheLuceneUtilBytesRef *b, OrgApacheLuceneUtilBytesRef *bytesRef, jint low, jint high, OrgApacheLuceneUtilBytesRefHash *hash_, IOSIntArray *ords, id<JavaUtilComparator> comparator);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum)

@interface OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum : OrgApacheLuceneIndexPostingsEnum {
 @public
  OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *this$0_;
  OrgApacheLuceneUtilIntBlockPool_SliceReader *sliceReader_;
  jint posUpto_;
  jboolean hasNext_;
  jint doc_;
  jint freq_;
  jint pos_;
  jint startOffset_;
  jint endOffset_;
  jint payloadIndex_;
  OrgApacheLuceneUtilBytesRefBuilder *payloadBuilder_;
}

- (instancetype)initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader:(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *)outer$;

- (OrgApacheLuceneIndexPostingsEnum *)resetWithInt:(jint)start
                                           withInt:(jint)end
                                           withInt:(jint)freq;

- (jint)docID;

- (jint)nextDoc;

- (jint)advanceWithInt:(jint)target;

- (jint)freq;

- (jint)nextPosition;

- (jint)startOffset;

- (jint)endOffset;

- (OrgApacheLuceneUtilBytesRef *)getPayload;

- (jlong)cost;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum, sliceReader_, OrgApacheLuceneUtilIntBlockPool_SliceReader *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum, payloadBuilder_, OrgApacheLuceneUtilBytesRefBuilder *)

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum *self, OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum *new_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum *create_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum)

@interface OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray : OrgApacheLuceneUtilBytesRefHash_DirectBytesStartArray {
 @public
  IOSIntArray *start_;
  IOSIntArray *end_;
  IOSIntArray *freq_;
}

- (instancetype)initWithInt:(jint)initSize;

- (IOSIntArray *)init__ OBJC_METHOD_FAMILY_NONE;

- (IOSIntArray *)grow;

- (IOSIntArray *)clear;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray, start_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray, end_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray, freq_, IOSIntArray *)

__attribute__((unused)) static void OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray_initWithInt_(OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray *self, jint initSize);

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray *new_OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray_initWithInt_(jint initSize) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray *create_OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray_initWithInt_(jint initSize);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray)

@implementation OrgApacheLuceneIndexMemoryMemoryIndex

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneIndexMemoryMemoryIndex_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithBoolean:(jboolean)storeOffsets {
  OrgApacheLuceneIndexMemoryMemoryIndex_initWithBoolean_(self, storeOffsets);
  return self;
}

- (instancetype)initWithBoolean:(jboolean)storeOffsets
                    withBoolean:(jboolean)storePayloads {
  OrgApacheLuceneIndexMemoryMemoryIndex_initWithBoolean_withBoolean_(self, storeOffsets, storePayloads);
  return self;
}

- (instancetype)initWithBoolean:(jboolean)storeOffsets
                    withBoolean:(jboolean)storePayloads
                       withLong:(jlong)maxReusedBytes {
  OrgApacheLuceneIndexMemoryMemoryIndex_initWithBoolean_withBoolean_withLong_(self, storeOffsets, storePayloads, maxReusedBytes);
  return self;
}

- (void)addFieldWithNSString:(NSString *)fieldName
                withNSString:(NSString *)text
withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer {
  if (fieldName == nil) @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"fieldName must not be null");
  if (text == nil) @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"text must not be null");
  if (analyzer == nil) @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"analyzer must not be null");
  OrgApacheLuceneAnalysisTokenStream *stream;
  @try {
    stream = [analyzer tokenStreamWithNSString:fieldName withNSString:text];
  }
  @catch (JavaIoIOException *ex) {
    @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(ex);
  }
  [self addFieldWithNSString:fieldName withOrgApacheLuceneAnalysisTokenStream:stream withFloat:1.0f withInt:[analyzer getPositionIncrementGapWithNSString:fieldName] withInt:[analyzer getOffsetGapWithNSString:fieldName]];
}

- (OrgApacheLuceneAnalysisTokenStream *)keywordTokenStreamWithJavaUtilCollection:(id<JavaUtilCollection>)keywords {
  if (keywords == nil) @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"keywords must not be null");
  return create_OrgApacheLuceneIndexMemoryMemoryIndex_1_initWithJavaUtilCollection_(keywords);
}

- (void)addFieldWithNSString:(NSString *)fieldName
withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)stream {
  [self addFieldWithNSString:fieldName withOrgApacheLuceneAnalysisTokenStream:stream withFloat:1.0f];
}

- (void)addFieldWithNSString:(NSString *)fieldName
withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)stream
                   withFloat:(jfloat)boost {
  [self addFieldWithNSString:fieldName withOrgApacheLuceneAnalysisTokenStream:stream withFloat:boost withInt:0];
}

- (void)addFieldWithNSString:(NSString *)fieldName
withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)stream
                   withFloat:(jfloat)boost
                     withInt:(jint)positionIncrementGap {
  [self addFieldWithNSString:fieldName withOrgApacheLuceneAnalysisTokenStream:stream withFloat:boost withInt:positionIncrementGap withInt:1];
}

- (void)addFieldWithNSString:(NSString *)fieldName
withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)tokenStream
                   withFloat:(jfloat)boost
                     withInt:(jint)positionIncrementGap
                     withInt:(jint)offsetGap {
  @try {
    OrgApacheLuceneAnalysisTokenStream *stream = tokenStream;
    JavaLangThrowable *__primaryException1 = nil;
    @try {
      if (frozen_) @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Cannot call addField() when MemoryIndex is frozen");
      if (fieldName == nil) @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"fieldName must not be null");
      if (stream == nil) @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"token stream must not be null");
      if (boost <= 0.0f) @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"boost factor must be greater than 0.0");
      jint numTokens = 0;
      jint numOverlapTokens = 0;
      jint pos = -1;
      OrgApacheLuceneUtilBytesRefHash *terms;
      OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray *sliceArray;
      OrgApacheLuceneIndexMemoryMemoryIndex_Info *info;
      jlong sumTotalTermFreq = 0;
      jint offset = 0;
      OrgApacheLuceneIndexFieldInfo *fieldInfo;
      if ((info = [((id<JavaUtilSortedMap>) nil_chk(fields_)) getWithId:fieldName]) != nil) {
        fieldInfo = ((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(info))->fieldInfo_;
        numTokens = info->numTokens_;
        numOverlapTokens = info->numOverlapTokens_;
        pos = info->lastPosition_ + positionIncrementGap;
        offset = info->lastOffset_ + offsetGap;
        terms = info->terms_;
        JreTimesAssignFloatF(&boost, info->boost_);
        sliceArray = info->sliceArray_;
        sumTotalTermFreq = info->sumTotalTermFreq_;
      }
      else {
        fieldInfo = create_OrgApacheLuceneIndexFieldInfo_initWithNSString_withInt_withBoolean_withBoolean_withBoolean_withOrgApacheLuceneIndexIndexOptions_withOrgApacheLuceneIndexDocValuesType_withLong_withJavaUtilMap_(fieldName, [fields_ size], true, false, self->storePayloads_, self->storeOffsets_ ? JreLoadEnum(OrgApacheLuceneIndexIndexOptions, DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) : JreLoadEnum(OrgApacheLuceneIndexIndexOptions, DOCS_AND_FREQS_AND_POSITIONS), JreLoadEnum(OrgApacheLuceneIndexDocValuesType, NONE), -1, JavaUtilCollections_emptyMap());
        sliceArray = create_OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray_initWithInt_(OrgApacheLuceneUtilBytesRefHash_DEFAULT_CAPACITY);
        terms = create_OrgApacheLuceneUtilBytesRefHash_initWithOrgApacheLuceneUtilByteBlockPool_withInt_withOrgApacheLuceneUtilBytesRefHash_BytesStartArray_(byteBlockPool_, OrgApacheLuceneUtilBytesRefHash_DEFAULT_CAPACITY, sliceArray);
      }
      id<OrgApacheLuceneAnalysisTokenattributesTermToBytesRefAttribute> termAtt = JreRetainedLocalValue([stream getAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesTermToBytesRefAttribute_class_()]);
      id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute> posIncrAttribute = JreRetainedLocalValue([stream addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute_class_()]);
      id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute> offsetAtt = JreRetainedLocalValue([stream addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_()]);
      id<OrgApacheLuceneAnalysisTokenattributesPayloadAttribute> payloadAtt = storePayloads_ ? ((id<OrgApacheLuceneAnalysisTokenattributesPayloadAttribute>) [stream addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesPayloadAttribute_class_()]) : nil;
      [stream reset];
      while ([stream incrementToken]) {
        numTokens++;
        jint posIncr = [((id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute>) nil_chk(posIncrAttribute)) getPositionIncrement];
        if (posIncr == 0) numOverlapTokens++;
        pos += posIncr;
        jint ord = [((OrgApacheLuceneUtilBytesRefHash *) nil_chk(terms)) addWithOrgApacheLuceneUtilBytesRef:[((id<OrgApacheLuceneAnalysisTokenattributesTermToBytesRefAttribute>) nil_chk(termAtt)) getBytesRef]];
        if (ord < 0) {
          ord = (-ord) - 1;
          [((OrgApacheLuceneUtilIntBlockPool_SliceWriter *) nil_chk(postingsWriter_)) resetWithInt:IOSIntArray_Get(nil_chk(((OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray *) nil_chk(sliceArray))->end_), ord)];
        }
        else {
          *IOSIntArray_GetRef(nil_chk(((OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray *) nil_chk(sliceArray))->start_), ord) = [((OrgApacheLuceneUtilIntBlockPool_SliceWriter *) nil_chk(postingsWriter_)) startNewSlice];
        }
        (*IOSIntArray_GetRef(nil_chk(sliceArray->freq_), ord))++;
        sumTotalTermFreq++;
        [postingsWriter_ writeIntWithInt:pos];
        if (storeOffsets_) {
          [postingsWriter_ writeIntWithInt:[((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(offsetAtt)) startOffset] + offset];
          [postingsWriter_ writeIntWithInt:[offsetAtt endOffset] + offset];
        }
        if (storePayloads_) {
          OrgApacheLuceneUtilBytesRef *payload = [payloadAtt getPayload];
          jint pIndex;
          if (payload == nil || payload->length_ == 0) {
            pIndex = -1;
          }
          else {
            pIndex = [((OrgApacheLuceneUtilBytesRefArray *) nil_chk(payloadsBytesRefs_)) appendWithOrgApacheLuceneUtilBytesRef:payload];
          }
          [postingsWriter_ writeIntWithInt:pIndex];
        }
        *IOSIntArray_GetRef(nil_chk(sliceArray->end_), ord) = [postingsWriter_ getCurrentOffset];
      }
      [stream end];
      if (numTokens > 0) {
        [fields_ putWithId:fieldName withId:create_OrgApacheLuceneIndexMemoryMemoryIndex_Info_initWithOrgApacheLuceneIndexMemoryMemoryIndex_withOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneUtilBytesRefHash_withOrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray_withInt_withInt_withFloat_withInt_withInt_withLong_(self, fieldInfo, terms, sliceArray, numTokens, numOverlapTokens, boost, pos, [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(offsetAtt)) endOffset] + offset, sumTotalTermFreq)];
      }
    }
    @catch (JavaLangThrowable *e) {
      __primaryException1 = e;
      @throw e;
    }
    @finally {
      if (stream != nil) {
        if (__primaryException1 != nil) {
          @try {
            [stream close];
          }
          @catch (JavaLangThrowable *e) {
            [__primaryException1 addSuppressedWithJavaLangThrowable:e];
          }
        }
        else {
          [stream close];
        }
      }
    }
  }
  @catch (JavaIoIOException *e) {
    @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(e);
  }
}

- (void)setSimilarityWithOrgApacheLuceneSearchSimilaritiesSimilarity:(OrgApacheLuceneSearchSimilaritiesSimilarity *)similarity {
  if (frozen_) @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Cannot set Similarity when MemoryIndex is frozen");
  if (JreObjectEqualsEquals(self->normSimilarity_, similarity)) return;
  JreStrongAssign(&self->normSimilarity_, similarity);
  for (OrgApacheLuceneIndexMemoryMemoryIndex_Info * __strong info in nil_chk([((id<JavaUtilSortedMap>) nil_chk(fields_)) values])) {
    JreStrongAssign(&((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(info))->norms_, nil);
  }
}

- (OrgApacheLuceneSearchIndexSearcher *)createSearcher {
  OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *reader = create_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_initWithOrgApacheLuceneIndexMemoryMemoryIndex_(self);
  OrgApacheLuceneSearchIndexSearcher *searcher = create_OrgApacheLuceneSearchIndexSearcher_initWithOrgApacheLuceneIndexIndexReader_(reader);
  [searcher setSimilarityWithOrgApacheLuceneSearchSimilaritiesSimilarity:normSimilarity_];
  return searcher;
}

- (void)freeze {
  self->frozen_ = true;
  for (OrgApacheLuceneIndexMemoryMemoryIndex_Info * __strong info in nil_chk([((id<JavaUtilSortedMap>) nil_chk(fields_)) values])) {
    [((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(info)) sortTerms];
    [info getNormDocValues];
  }
}

- (jfloat)searchWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query {
  if (query == nil) @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"query must not be null");
  OrgApacheLuceneSearchIndexSearcher *searcher = JreRetainedLocalValue([self createSearcher]);
  @try {
    IOSFloatArray *scores = [IOSFloatArray arrayWithLength:1];
    [((OrgApacheLuceneSearchIndexSearcher *) nil_chk(searcher)) searchWithOrgApacheLuceneSearchQuery:query withOrgApacheLuceneSearchCollector:create_OrgApacheLuceneIndexMemoryMemoryIndex_2_initWithFloatArray_(scores)];
    jfloat score = IOSFloatArray_Get(scores, 0);
    return score;
  }
  @catch (JavaIoIOException *e) {
    @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(e);
  }
  @finally {
  }
}

- (NSString *)description {
  JavaLangStringBuilder *result = create_JavaLangStringBuilder_initWithInt_(256);
  jint sumPositions = 0;
  jint sumTerms = 0;
  OrgApacheLuceneUtilBytesRef *spare = create_OrgApacheLuceneUtilBytesRef_init();
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilSortedMap>) nil_chk(fields_)) entrySet])) {
    NSString *fieldName = JreRetainedLocalValue([((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey]);
    OrgApacheLuceneIndexMemoryMemoryIndex_Info *info = JreRetainedLocalValue([entry_ getValue]);
    [((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(info)) sortTerms];
    [result appendWithNSString:JreStrcat("$$", fieldName, @":\n")];
    OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray *sliceArray = JreRetainedLocalValue(info->sliceArray_);
    jint numPositions = 0;
    OrgApacheLuceneUtilIntBlockPool_SliceReader *postingsReader = create_OrgApacheLuceneUtilIntBlockPool_SliceReader_initWithOrgApacheLuceneUtilIntBlockPool_(intBlockPool_);
    for (jint j = 0; j < [((OrgApacheLuceneUtilBytesRefHash *) nil_chk(info->terms_)) size]; j++) {
      jint ord = IOSIntArray_Get(nil_chk(info->sortedTerms_), j);
      [info->terms_ getWithInt:ord withOrgApacheLuceneUtilBytesRef:spare];
      jint freq = IOSIntArray_Get(nil_chk(((OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray *) nil_chk(sliceArray))->freq_), ord);
      [result appendWithNSString:JreStrcat("$@$IC", @"\t'", spare, @"':", freq, ':')];
      [postingsReader resetWithInt:IOSIntArray_Get(nil_chk(sliceArray->start_), ord) withInt:IOSIntArray_Get(nil_chk(sliceArray->end_), ord)];
      [result appendWithNSString:@" ["];
      jint iters = storeOffsets_ ? 3 : 1;
      while (![postingsReader endOfSlice]) {
        [result appendWithNSString:@"("];
        for (jint k = 0; k < iters; k++) {
          [result appendWithInt:[postingsReader readInt]];
          if (k < iters - 1) {
            [result appendWithNSString:@", "];
          }
        }
        [result appendWithNSString:@")"];
        if (![postingsReader endOfSlice]) {
          [result appendWithNSString:@","];
        }
      }
      [result appendWithNSString:@"]"];
      [result appendWithNSString:@"\n"];
      numPositions += freq;
    }
    [result appendWithNSString:JreStrcat("$I", @"\tterms=", [info->terms_ size])];
    [result appendWithNSString:JreStrcat("$I", @", positions=", numPositions)];
    [result appendWithNSString:@"\n"];
    sumPositions += numPositions;
    sumTerms += [info->terms_ size];
  }
  [result appendWithNSString:JreStrcat("$I", @"\nfields=", [fields_ size])];
  [result appendWithNSString:JreStrcat("$I", @", terms=", sumTerms)];
  [result appendWithNSString:JreStrcat("$I", @", positions=", sumPositions)];
  return [result description];
}

- (void)reset {
  [((id<JavaUtilSortedMap>) nil_chk(fields_)) clear];
  JreStrongAssign(&self->normSimilarity_, OrgApacheLuceneSearchIndexSearcher_getDefaultSimilarity());
  [((OrgApacheLuceneUtilByteBlockPool *) nil_chk(byteBlockPool_)) resetWithBoolean:false withBoolean:false];
  [((OrgApacheLuceneUtilIntBlockPool *) nil_chk(intBlockPool_)) resetWithBoolean:true withBoolean:false];
  if (payloadsBytesRefs_ != nil) {
    [payloadsBytesRefs_ clear];
  }
  self->frozen_ = false;
}

- (void)dealloc {
  RELEASE_(fields_);
  RELEASE_(byteBlockPool_);
  RELEASE_(intBlockPool_);
  RELEASE_(postingsWriter_);
  RELEASE_(payloadsBytesRefs_);
  RELEASE_(bytesUsed_);
  RELEASE_(normSimilarity_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisTokenStream;", 0x1, 5, 6, -1, 7, -1, -1 },
    { NULL, "V", 0x1, 3, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 13, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchIndexSearcher;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 16, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithBoolean:);
  methods[2].selector = @selector(initWithBoolean:withBoolean:);
  methods[3].selector = @selector(initWithBoolean:withBoolean:withLong:);
  methods[4].selector = @selector(addFieldWithNSString:withNSString:withOrgApacheLuceneAnalysisAnalyzer:);
  methods[5].selector = @selector(keywordTokenStreamWithJavaUtilCollection:);
  methods[6].selector = @selector(addFieldWithNSString:withOrgApacheLuceneAnalysisTokenStream:);
  methods[7].selector = @selector(addFieldWithNSString:withOrgApacheLuceneAnalysisTokenStream:withFloat:);
  methods[8].selector = @selector(addFieldWithNSString:withOrgApacheLuceneAnalysisTokenStream:withFloat:withInt:);
  methods[9].selector = @selector(addFieldWithNSString:withOrgApacheLuceneAnalysisTokenStream:withFloat:withInt:withInt:);
  methods[10].selector = @selector(setSimilarityWithOrgApacheLuceneSearchSimilaritiesSimilarity:);
  methods[11].selector = @selector(createSearcher);
  methods[12].selector = @selector(freeze);
  methods[13].selector = @selector(searchWithOrgApacheLuceneSearchQuery:);
  methods[14].selector = @selector(description);
  methods[15].selector = @selector(reset);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEBUG", "Z", .constantValue.asBOOL = OrgApacheLuceneIndexMemoryMemoryIndex_DEBUG, 0x1a, -1, -1, -1, -1 },
    { "fields_", "LJavaUtilSortedMap;", .constantValue.asLong = 0, 0x12, -1, -1, 17, -1 },
    { "storeOffsets_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "storePayloads_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "byteBlockPool_", "LOrgApacheLuceneUtilByteBlockPool;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "intBlockPool_", "LOrgApacheLuceneUtilIntBlockPool;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "postingsWriter_", "LOrgApacheLuceneUtilIntBlockPool_SliceWriter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "payloadsBytesRefs_", "LOrgApacheLuceneUtilBytesRefArray;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "bytesUsed_", "LOrgApacheLuceneUtilCounter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "frozen_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "normSimilarity_", "LOrgApacheLuceneSearchSimilaritiesSimilarity;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "Z", "ZZ", "ZZJ", "addField", "LNSString;LNSString;LOrgApacheLuceneAnalysisAnalyzer;", "keywordTokenStream", "LJavaUtilCollection;", "<T:Ljava/lang/Object;>(Ljava/util/Collection<TT;>;)Lorg/apache/lucene/analysis/TokenStream;", "LNSString;LOrgApacheLuceneAnalysisTokenStream;", "LNSString;LOrgApacheLuceneAnalysisTokenStream;F", "LNSString;LOrgApacheLuceneAnalysisTokenStream;FI", "LNSString;LOrgApacheLuceneAnalysisTokenStream;FII", "setSimilarity", "LOrgApacheLuceneSearchSimilaritiesSimilarity;", "search", "LOrgApacheLuceneSearchQuery;", "toString", "Ljava/util/SortedMap<Ljava/lang/String;Lorg/apache/lucene/index/memory/MemoryIndex$Info;>;", "LOrgApacheLuceneIndexMemoryMemoryIndex_Info;LOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader;LOrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMemoryMemoryIndex = { "MemoryIndex", "org.apache.lucene.index.memory", ptrTable, methods, fields, 7, 0x1, 16, 11, -1, 18, -1, -1, -1 };
  return &_OrgApacheLuceneIndexMemoryMemoryIndex;
}

@end

void OrgApacheLuceneIndexMemoryMemoryIndex_init(OrgApacheLuceneIndexMemoryMemoryIndex *self) {
  OrgApacheLuceneIndexMemoryMemoryIndex_initWithBoolean_(self, false);
}

OrgApacheLuceneIndexMemoryMemoryIndex *new_OrgApacheLuceneIndexMemoryMemoryIndex_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex, init)
}

OrgApacheLuceneIndexMemoryMemoryIndex *create_OrgApacheLuceneIndexMemoryMemoryIndex_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex, init)
}

void OrgApacheLuceneIndexMemoryMemoryIndex_initWithBoolean_(OrgApacheLuceneIndexMemoryMemoryIndex *self, jboolean storeOffsets) {
  OrgApacheLuceneIndexMemoryMemoryIndex_initWithBoolean_withBoolean_(self, storeOffsets, false);
}

OrgApacheLuceneIndexMemoryMemoryIndex *new_OrgApacheLuceneIndexMemoryMemoryIndex_initWithBoolean_(jboolean storeOffsets) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex, initWithBoolean_, storeOffsets)
}

OrgApacheLuceneIndexMemoryMemoryIndex *create_OrgApacheLuceneIndexMemoryMemoryIndex_initWithBoolean_(jboolean storeOffsets) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex, initWithBoolean_, storeOffsets)
}

void OrgApacheLuceneIndexMemoryMemoryIndex_initWithBoolean_withBoolean_(OrgApacheLuceneIndexMemoryMemoryIndex *self, jboolean storeOffsets, jboolean storePayloads) {
  OrgApacheLuceneIndexMemoryMemoryIndex_initWithBoolean_withBoolean_withLong_(self, storeOffsets, storePayloads, 0);
}

OrgApacheLuceneIndexMemoryMemoryIndex *new_OrgApacheLuceneIndexMemoryMemoryIndex_initWithBoolean_withBoolean_(jboolean storeOffsets, jboolean storePayloads) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex, initWithBoolean_withBoolean_, storeOffsets, storePayloads)
}

OrgApacheLuceneIndexMemoryMemoryIndex *create_OrgApacheLuceneIndexMemoryMemoryIndex_initWithBoolean_withBoolean_(jboolean storeOffsets, jboolean storePayloads) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex, initWithBoolean_withBoolean_, storeOffsets, storePayloads)
}

void OrgApacheLuceneIndexMemoryMemoryIndex_initWithBoolean_withBoolean_withLong_(OrgApacheLuceneIndexMemoryMemoryIndex *self, jboolean storeOffsets, jboolean storePayloads, jlong maxReusedBytes) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->fields_, new_JavaUtilTreeMap_init());
  self->frozen_ = false;
  JreStrongAssign(&self->normSimilarity_, OrgApacheLuceneSearchIndexSearcher_getDefaultSimilarity());
  self->storeOffsets_ = storeOffsets;
  self->storePayloads_ = storePayloads;
  JreStrongAssign(&self->bytesUsed_, OrgApacheLuceneUtilCounter_newCounter());
  jint maxBufferedByteBlocks = (jint) (JreLongDiv((JreLongDiv(maxReusedBytes, 2)), OrgApacheLuceneUtilByteBlockPool_BYTE_BLOCK_SIZE));
  jint maxBufferedIntBlocks = (jint) (JreLongDiv((maxReusedBytes - (maxBufferedByteBlocks * OrgApacheLuceneUtilByteBlockPool_BYTE_BLOCK_SIZE)), (OrgApacheLuceneUtilIntBlockPool_INT_BLOCK_SIZE * OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_INT)));
  JreAssert((maxBufferedByteBlocks * OrgApacheLuceneUtilByteBlockPool_BYTE_BLOCK_SIZE) + (maxBufferedIntBlocks * OrgApacheLuceneUtilIntBlockPool_INT_BLOCK_SIZE * OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_INT) <= maxReusedBytes, @"org/apache/lucene/index/memory/MemoryIndex.java:257 condition failed: assert (maxBufferedByteBlocks * ByteBlockPool.BYTE_BLOCK_SIZE) + (maxBufferedIntBlocks * IntBlockPool.INT_BLOCK_SIZE * RamUsageEstimator.NUM_BYTES_INT) <= maxReusedBytes;");
  JreStrongAssignAndConsume(&self->byteBlockPool_, new_OrgApacheLuceneUtilByteBlockPool_initWithOrgApacheLuceneUtilByteBlockPool_Allocator_(create_OrgApacheLuceneUtilRecyclingByteBlockAllocator_initWithInt_withInt_withOrgApacheLuceneUtilCounter_(OrgApacheLuceneUtilByteBlockPool_BYTE_BLOCK_SIZE, maxBufferedByteBlocks, self->bytesUsed_)));
  JreStrongAssignAndConsume(&self->intBlockPool_, new_OrgApacheLuceneUtilIntBlockPool_initWithOrgApacheLuceneUtilIntBlockPool_Allocator_(create_OrgApacheLuceneUtilRecyclingIntBlockAllocator_initWithInt_withInt_withOrgApacheLuceneUtilCounter_(OrgApacheLuceneUtilIntBlockPool_INT_BLOCK_SIZE, maxBufferedIntBlocks, self->bytesUsed_)));
  JreStrongAssignAndConsume(&self->postingsWriter_, new_OrgApacheLuceneUtilIntBlockPool_SliceWriter_initWithOrgApacheLuceneUtilIntBlockPool_(self->intBlockPool_));
  JreStrongAssign(&self->payloadsBytesRefs_, storePayloads ? create_OrgApacheLuceneUtilBytesRefArray_initWithOrgApacheLuceneUtilCounter_(self->bytesUsed_) : nil);
}

OrgApacheLuceneIndexMemoryMemoryIndex *new_OrgApacheLuceneIndexMemoryMemoryIndex_initWithBoolean_withBoolean_withLong_(jboolean storeOffsets, jboolean storePayloads, jlong maxReusedBytes) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex, initWithBoolean_withBoolean_withLong_, storeOffsets, storePayloads, maxReusedBytes)
}

OrgApacheLuceneIndexMemoryMemoryIndex *create_OrgApacheLuceneIndexMemoryMemoryIndex_initWithBoolean_withBoolean_withLong_(jboolean storeOffsets, jboolean storePayloads, jlong maxReusedBytes) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex, initWithBoolean_withBoolean_withLong_, storeOffsets, storePayloads, maxReusedBytes)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMemoryMemoryIndex)

@implementation OrgApacheLuceneIndexMemoryMemoryIndex_1

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)capture$0 {
  OrgApacheLuceneIndexMemoryMemoryIndex_1_initWithJavaUtilCollection_(self, capture$0);
  return self;
}

- (jboolean)incrementToken {
  if (![((id<JavaUtilIterator>) nil_chk(iter_)) hasNext]) return false;
  id obj = JreRetainedLocalValue([((id<JavaUtilIterator>) nil_chk(iter_)) next]);
  if (obj == nil) @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"keyword must not be null");
  NSString *term = [obj description];
  [self clearAttributes];
  [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk([((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAtt_)) setEmpty])) appendWithNSString:term];
  [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(offsetAtt_)) setOffsetWithInt:start_ withInt:start_ + [termAtt_ java_length]];
  start_ += [((NSString *) nil_chk(term)) java_length] + 1;
  return true;
}

- (void)dealloc {
  RELEASE_(iter_);
  RELEASE_(termAtt_);
  RELEASE_(offsetAtt_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilCollection:);
  methods[1].selector = @selector(incrementToken);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "iter_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x2, -1, -1, 1, -1 },
    { "start_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "termAtt_", "LOrgApacheLuceneAnalysisTokenattributesCharTermAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "offsetAtt_", "LOrgApacheLuceneAnalysisTokenattributesOffsetAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilCollection;", "Ljava/util/Iterator<TT;>;", "LOrgApacheLuceneIndexMemoryMemoryIndex;", "keywordTokenStreamWithJavaUtilCollection:" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMemoryMemoryIndex_1 = { "", "org.apache.lucene.index.memory", ptrTable, methods, fields, 7, 0x8010, 2, 4, 2, -1, 3, -1, -1 };
  return &_OrgApacheLuceneIndexMemoryMemoryIndex_1;
}

@end

void OrgApacheLuceneIndexMemoryMemoryIndex_1_initWithJavaUtilCollection_(OrgApacheLuceneIndexMemoryMemoryIndex_1 *self, id<JavaUtilCollection> capture$0) {
  OrgApacheLuceneAnalysisTokenStream_init(self);
  JreStrongAssign(&self->iter_, [((id<JavaUtilCollection>) nil_chk(capture$0)) iterator]);
  self->start_ = 0;
  JreStrongAssign(&self->termAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
  JreStrongAssign(&self->offsetAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_()]);
}

OrgApacheLuceneIndexMemoryMemoryIndex_1 *new_OrgApacheLuceneIndexMemoryMemoryIndex_1_initWithJavaUtilCollection_(id<JavaUtilCollection> capture$0) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_1, initWithJavaUtilCollection_, capture$0)
}

OrgApacheLuceneIndexMemoryMemoryIndex_1 *create_OrgApacheLuceneIndexMemoryMemoryIndex_1_initWithJavaUtilCollection_(id<JavaUtilCollection> capture$0) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_1, initWithJavaUtilCollection_, capture$0)
}

@implementation OrgApacheLuceneIndexMemoryMemoryIndex_2

- (instancetype)initWithFloatArray:(IOSFloatArray *)capture$0 {
  OrgApacheLuceneIndexMemoryMemoryIndex_2_initWithFloatArray_(self, capture$0);
  return self;
}

- (void)collectWithInt:(jint)doc {
  *IOSFloatArray_GetRef(nil_chk(val$scores_), 0) = [((OrgApacheLuceneSearchScorer *) nil_chk(scorer_)) score];
}

- (void)setScorerWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)scorer {
  JreStrongAssign(&self->scorer_, scorer);
}

- (jboolean)needsScores {
  return true;
}

- (void)dealloc {
  RELEASE_(val$scores_);
  RELEASE_(scorer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithFloatArray:);
  methods[1].selector = @selector(collectWithInt:);
  methods[2].selector = @selector(setScorerWithOrgApacheLuceneSearchScorer:);
  methods[3].selector = @selector(needsScores);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$scores_", "[F", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "scorer_", "LOrgApacheLuceneSearchScorer;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[F", "collect", "I", "LJavaIoIOException;", "setScorer", "LOrgApacheLuceneSearchScorer;", "LOrgApacheLuceneIndexMemoryMemoryIndex;", "searchWithOrgApacheLuceneSearchQuery:" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMemoryMemoryIndex_2 = { "", "org.apache.lucene.index.memory", ptrTable, methods, fields, 7, 0x8010, 4, 2, 6, -1, 7, -1, -1 };
  return &_OrgApacheLuceneIndexMemoryMemoryIndex_2;
}

@end

void OrgApacheLuceneIndexMemoryMemoryIndex_2_initWithFloatArray_(OrgApacheLuceneIndexMemoryMemoryIndex_2 *self, IOSFloatArray *capture$0) {
  JreStrongAssign(&self->val$scores_, capture$0);
  OrgApacheLuceneSearchSimpleCollector_init(self);
}

OrgApacheLuceneIndexMemoryMemoryIndex_2 *new_OrgApacheLuceneIndexMemoryMemoryIndex_2_initWithFloatArray_(IOSFloatArray *capture$0) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_2, initWithFloatArray_, capture$0)
}

OrgApacheLuceneIndexMemoryMemoryIndex_2 *create_OrgApacheLuceneIndexMemoryMemoryIndex_2_initWithFloatArray_(IOSFloatArray *capture$0) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_2, initWithFloatArray_, capture$0)
}

@implementation OrgApacheLuceneIndexMemoryMemoryIndex_Info

- (instancetype)initWithOrgApacheLuceneIndexMemoryMemoryIndex:(OrgApacheLuceneIndexMemoryMemoryIndex *)outer$
                            withOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo
                          withOrgApacheLuceneUtilBytesRefHash:(OrgApacheLuceneUtilBytesRefHash *)terms
withOrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray:(OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray *)sliceArray
                                                      withInt:(jint)numTokens
                                                      withInt:(jint)numOverlapTokens
                                                    withFloat:(jfloat)boost
                                                      withInt:(jint)lastPosition
                                                      withInt:(jint)lastOffset
                                                     withLong:(jlong)sumTotalTermFreq {
  OrgApacheLuceneIndexMemoryMemoryIndex_Info_initWithOrgApacheLuceneIndexMemoryMemoryIndex_withOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneUtilBytesRefHash_withOrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray_withInt_withInt_withFloat_withInt_withInt_withLong_(self, outer$, fieldInfo, terms, sliceArray, numTokens, numOverlapTokens, boost, lastPosition, lastOffset, sumTotalTermFreq);
  return self;
}

- (void)sortTerms {
  if (sortedTerms_ == nil) {
    JreStrongAssign(&sortedTerms_, [((OrgApacheLuceneUtilBytesRefHash *) nil_chk(terms_)) sortWithJavaUtilComparator:OrgApacheLuceneUtilBytesRef_getUTF8SortedAsUnicodeComparator()]);
  }
}

- (OrgApacheLuceneIndexNumericDocValues *)getNormDocValues {
  if (norms_ == nil) {
    OrgApacheLuceneIndexFieldInvertState *invertState = create_OrgApacheLuceneIndexFieldInvertState_initWithNSString_withInt_withInt_withInt_withInt_withFloat_(((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo_))->name_, fieldInfo_->number_, numTokens_, numOverlapTokens_, 0, boost_);
    jlong value = [((OrgApacheLuceneSearchSimilaritiesSimilarity *) nil_chk(this$0_->normSimilarity_)) computeNormWithOrgApacheLuceneIndexFieldInvertState:invertState];
    JreStrongAssignAndConsume(&norms_, new_OrgApacheLuceneIndexMemoryMemoryIndex_Info_1_initWithLong_(value));
  }
  return norms_;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(fieldInfo_);
  RELEASE_(norms_);
  RELEASE_(terms_);
  RELEASE_(sliceArray_);
  RELEASE_(sortedTerms_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexNumericDocValues;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexMemoryMemoryIndex:withOrgApacheLuceneIndexFieldInfo:withOrgApacheLuceneUtilBytesRefHash:withOrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray:withInt:withInt:withFloat:withInt:withInt:withLong:);
  methods[1].selector = @selector(sortTerms);
  methods[2].selector = @selector(getNormDocValues);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneIndexMemoryMemoryIndex;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "fieldInfo_", "LOrgApacheLuceneIndexFieldInfo;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "norms_", "LOrgApacheLuceneIndexNumericDocValues;", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "terms_", "LOrgApacheLuceneUtilBytesRefHash;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "sliceArray_", "LOrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "sortedTerms_", "[I", .constantValue.asLong = 0, 0x82, -1, -1, -1, -1 },
    { "numTokens_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "numOverlapTokens_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "boost_", "F", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "sumTotalTermFreq_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "lastPosition_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "lastOffset_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexMemoryMemoryIndex;LOrgApacheLuceneIndexFieldInfo;LOrgApacheLuceneUtilBytesRefHash;LOrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray;IIFIIJ", "LOrgApacheLuceneIndexMemoryMemoryIndex;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMemoryMemoryIndex_Info = { "Info", "org.apache.lucene.index.memory", ptrTable, methods, fields, 7, 0x12, 3, 12, 1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexMemoryMemoryIndex_Info;
}

@end

void OrgApacheLuceneIndexMemoryMemoryIndex_Info_initWithOrgApacheLuceneIndexMemoryMemoryIndex_withOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneUtilBytesRefHash_withOrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray_withInt_withInt_withFloat_withInt_withInt_withLong_(OrgApacheLuceneIndexMemoryMemoryIndex_Info *self, OrgApacheLuceneIndexMemoryMemoryIndex *outer$, OrgApacheLuceneIndexFieldInfo *fieldInfo, OrgApacheLuceneUtilBytesRefHash *terms, OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray *sliceArray, jint numTokens, jint numOverlapTokens, jfloat boost, jint lastPosition, jint lastOffset, jlong sumTotalTermFreq) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  JreStrongAssign(&self->fieldInfo_, fieldInfo);
  JreStrongAssign(&self->terms_, terms);
  JreStrongAssign(&self->sliceArray_, sliceArray);
  self->numTokens_ = numTokens;
  self->numOverlapTokens_ = numOverlapTokens;
  self->boost_ = boost;
  self->sumTotalTermFreq_ = sumTotalTermFreq;
  self->lastPosition_ = lastPosition;
  self->lastOffset_ = lastOffset;
}

OrgApacheLuceneIndexMemoryMemoryIndex_Info *new_OrgApacheLuceneIndexMemoryMemoryIndex_Info_initWithOrgApacheLuceneIndexMemoryMemoryIndex_withOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneUtilBytesRefHash_withOrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray_withInt_withInt_withFloat_withInt_withInt_withLong_(OrgApacheLuceneIndexMemoryMemoryIndex *outer$, OrgApacheLuceneIndexFieldInfo *fieldInfo, OrgApacheLuceneUtilBytesRefHash *terms, OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray *sliceArray, jint numTokens, jint numOverlapTokens, jfloat boost, jint lastPosition, jint lastOffset, jlong sumTotalTermFreq) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_Info, initWithOrgApacheLuceneIndexMemoryMemoryIndex_withOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneUtilBytesRefHash_withOrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray_withInt_withInt_withFloat_withInt_withInt_withLong_, outer$, fieldInfo, terms, sliceArray, numTokens, numOverlapTokens, boost, lastPosition, lastOffset, sumTotalTermFreq)
}

OrgApacheLuceneIndexMemoryMemoryIndex_Info *create_OrgApacheLuceneIndexMemoryMemoryIndex_Info_initWithOrgApacheLuceneIndexMemoryMemoryIndex_withOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneUtilBytesRefHash_withOrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray_withInt_withInt_withFloat_withInt_withInt_withLong_(OrgApacheLuceneIndexMemoryMemoryIndex *outer$, OrgApacheLuceneIndexFieldInfo *fieldInfo, OrgApacheLuceneUtilBytesRefHash *terms, OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray *sliceArray, jint numTokens, jint numOverlapTokens, jfloat boost, jint lastPosition, jint lastOffset, jlong sumTotalTermFreq) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_Info, initWithOrgApacheLuceneIndexMemoryMemoryIndex_withOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneUtilBytesRefHash_withOrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray_withInt_withInt_withFloat_withInt_withInt_withLong_, outer$, fieldInfo, terms, sliceArray, numTokens, numOverlapTokens, boost, lastPosition, lastOffset, sumTotalTermFreq)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMemoryMemoryIndex_Info)

@implementation OrgApacheLuceneIndexMemoryMemoryIndex_Info_1

- (instancetype)initWithLong:(jlong)capture$0 {
  OrgApacheLuceneIndexMemoryMemoryIndex_Info_1_initWithLong_(self, capture$0);
  return self;
}

- (jlong)getWithInt:(jint)docID {
  if (docID != 0) @throw create_JavaLangIndexOutOfBoundsException_init();
  else return val$value_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLong:);
  methods[1].selector = @selector(getWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$value_", "J", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "J", "get", "I", "LOrgApacheLuceneIndexMemoryMemoryIndex_Info;", "getNormDocValues" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMemoryMemoryIndex_Info_1 = { "", "org.apache.lucene.index.memory", ptrTable, methods, fields, 7, 0x8010, 2, 1, 3, -1, 4, -1, -1 };
  return &_OrgApacheLuceneIndexMemoryMemoryIndex_Info_1;
}

@end

void OrgApacheLuceneIndexMemoryMemoryIndex_Info_1_initWithLong_(OrgApacheLuceneIndexMemoryMemoryIndex_Info_1 *self, jlong capture$0) {
  self->val$value_ = capture$0;
  OrgApacheLuceneIndexNumericDocValues_init(self);
}

OrgApacheLuceneIndexMemoryMemoryIndex_Info_1 *new_OrgApacheLuceneIndexMemoryMemoryIndex_Info_1_initWithLong_(jlong capture$0) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_Info_1, initWithLong_, capture$0)
}

OrgApacheLuceneIndexMemoryMemoryIndex_Info_1 *create_OrgApacheLuceneIndexMemoryMemoryIndex_Info_1_initWithLong_(jlong capture$0) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_Info_1, initWithLong_, capture$0)
}

@implementation OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader

- (instancetype)initWithOrgApacheLuceneIndexMemoryMemoryIndex:(OrgApacheLuceneIndexMemoryMemoryIndex *)outer$ {
  OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_initWithOrgApacheLuceneIndexMemoryMemoryIndex_(self, outer$);
  return self;
}

- (void)addCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:(id<OrgApacheLuceneIndexLeafReader_CoreClosedListener>)listener {
  OrgApacheLuceneIndexLeafReader_addCoreClosedListenerAsReaderClosedListenerWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexLeafReader_CoreClosedListener_(self, listener);
}

- (void)removeCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:(id<OrgApacheLuceneIndexLeafReader_CoreClosedListener>)listener {
  OrgApacheLuceneIndexLeafReader_removeCoreClosedListenerAsReaderClosedListenerWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexLeafReader_CoreClosedListener_(self, listener);
}

- (OrgApacheLuceneIndexMemoryMemoryIndex_Info *)getInfoWithNSString:(NSString *)fieldName {
  return OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getInfoWithNSString_(self, fieldName);
}

- (id<OrgApacheLuceneUtilBits>)getLiveDocs {
  return nil;
}

- (OrgApacheLuceneIndexFieldInfos *)getFieldInfos {
  IOSObjectArray *fieldInfos = [IOSObjectArray arrayWithLength:[((id<JavaUtilSortedMap>) nil_chk(this$0_->fields_)) size] type:OrgApacheLuceneIndexFieldInfo_class_()];
  jint i = 0;
  for (OrgApacheLuceneIndexMemoryMemoryIndex_Info * __strong info in nil_chk([this$0_->fields_ values])) {
    IOSObjectArray_Set(fieldInfos, i++, ((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(info))->fieldInfo_);
  }
  return create_OrgApacheLuceneIndexFieldInfos_initWithOrgApacheLuceneIndexFieldInfoArray_(fieldInfos);
}

- (OrgApacheLuceneIndexNumericDocValues *)getNumericDocValuesWithNSString:(NSString *)field {
  return nil;
}

- (OrgApacheLuceneIndexBinaryDocValues *)getBinaryDocValuesWithNSString:(NSString *)field {
  return nil;
}

- (OrgApacheLuceneIndexSortedDocValues *)getSortedDocValuesWithNSString:(NSString *)field {
  return nil;
}

- (OrgApacheLuceneIndexSortedNumericDocValues *)getSortedNumericDocValuesWithNSString:(NSString *)field {
  return nil;
}

- (OrgApacheLuceneIndexSortedSetDocValues *)getSortedSetDocValuesWithNSString:(NSString *)field {
  return nil;
}

- (id<OrgApacheLuceneUtilBits>)getDocsWithFieldWithNSString:(NSString *)field {
  return nil;
}

- (void)checkIntegrity {
}

- (OrgApacheLuceneIndexFields *)fields {
  return create_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_(self);
}

- (OrgApacheLuceneIndexFields *)getTermVectorsWithInt:(jint)docID {
  if (docID == 0) {
    return [self fields];
  }
  else {
    return nil;
  }
}

- (jint)numDocs {
  return 1;
}

- (jint)maxDoc {
  return 1;
}

- (void)documentWithInt:(jint)docID
withOrgApacheLuceneIndexStoredFieldVisitor:(OrgApacheLuceneIndexStoredFieldVisitor *)visitor {
}

- (void)doClose {
}

- (OrgApacheLuceneIndexNumericDocValues *)getNormValuesWithNSString:(NSString *)field {
  OrgApacheLuceneIndexMemoryMemoryIndex_Info *info = JreRetainedLocalValue([((id<JavaUtilSortedMap>) nil_chk(this$0_->fields_)) getWithId:field]);
  if (info == nil) {
    return nil;
  }
  return [info getNormDocValues];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexMemoryMemoryIndex_Info;", 0x2, 4, 5, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBits;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexFieldInfos;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexNumericDocValues;", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexBinaryDocValues;", 0x1, 7, 5, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexSortedDocValues;", 0x1, 8, 5, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexSortedNumericDocValues;", 0x1, 9, 5, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexSortedSetDocValues;", 0x1, 10, 5, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBits;", 0x1, 11, 5, 12, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 12, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexFields;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexFields;", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexNumericDocValues;", 0x1, 17, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexMemoryMemoryIndex:);
  methods[1].selector = @selector(addCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:);
  methods[2].selector = @selector(removeCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:);
  methods[3].selector = @selector(getInfoWithNSString:);
  methods[4].selector = @selector(getLiveDocs);
  methods[5].selector = @selector(getFieldInfos);
  methods[6].selector = @selector(getNumericDocValuesWithNSString:);
  methods[7].selector = @selector(getBinaryDocValuesWithNSString:);
  methods[8].selector = @selector(getSortedDocValuesWithNSString:);
  methods[9].selector = @selector(getSortedNumericDocValuesWithNSString:);
  methods[10].selector = @selector(getSortedSetDocValuesWithNSString:);
  methods[11].selector = @selector(getDocsWithFieldWithNSString:);
  methods[12].selector = @selector(checkIntegrity);
  methods[13].selector = @selector(fields);
  methods[14].selector = @selector(getTermVectorsWithInt:);
  methods[15].selector = @selector(numDocs);
  methods[16].selector = @selector(maxDoc);
  methods[17].selector = @selector(documentWithInt:withOrgApacheLuceneIndexStoredFieldVisitor:);
  methods[18].selector = @selector(doClose);
  methods[19].selector = @selector(getNormValuesWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneIndexMemoryMemoryIndex;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexMemoryMemoryIndex;", "addCoreClosedListener", "LOrgApacheLuceneIndexLeafReader_CoreClosedListener;", "removeCoreClosedListener", "getInfo", "LNSString;", "getNumericDocValues", "getBinaryDocValues", "getSortedDocValues", "getSortedNumericDocValues", "getSortedSetDocValues", "getDocsWithField", "LJavaIoIOException;", "getTermVectors", "I", "document", "ILOrgApacheLuceneIndexStoredFieldVisitor;", "getNormValues", "LOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields;LOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum;LOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader = { "MemoryIndexReader", "org.apache.lucene.index.memory", ptrTable, methods, fields, 7, 0x12, 20, 1, 0, 18, -1, -1, -1 };
  return &_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader;
}

@end

void OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_initWithOrgApacheLuceneIndexMemoryMemoryIndex_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *self, OrgApacheLuceneIndexMemoryMemoryIndex *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneIndexLeafReader_init(self);
}

OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *new_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_initWithOrgApacheLuceneIndexMemoryMemoryIndex_(OrgApacheLuceneIndexMemoryMemoryIndex *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader, initWithOrgApacheLuceneIndexMemoryMemoryIndex_, outer$)
}

OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *create_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_initWithOrgApacheLuceneIndexMemoryMemoryIndex_(OrgApacheLuceneIndexMemoryMemoryIndex *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader, initWithOrgApacheLuceneIndexMemoryMemoryIndex_, outer$)
}

OrgApacheLuceneIndexMemoryMemoryIndex_Info *OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_getInfoWithNSString_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *self, NSString *fieldName) {
  return [((id<JavaUtilSortedMap>) nil_chk(self->this$0_->fields_)) getWithId:fieldName];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader)

@implementation OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields

- (instancetype)initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader:(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *)outer$ {
  OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_(self, outer$);
  return self;
}

- (id<JavaUtilIterator>)iterator {
  return [((id<JavaUtilSet>) nil_chk([((id<JavaUtilSortedMap>) nil_chk(this$0_->this$0_->fields_)) keySet])) iterator];
}

- (OrgApacheLuceneIndexTerms *)termsWithNSString:(NSString *)field {
  OrgApacheLuceneIndexMemoryMemoryIndex_Info *info = [((id<JavaUtilSortedMap>) nil_chk(this$0_->this$0_->fields_)) getWithId:field];
  if (info == nil) return nil;
  return create_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_1_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_(self, info);
}

- (jint)size {
  return [((id<JavaUtilSortedMap>) nil_chk(this$0_->this$0_->fields_)) size];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTerms;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader:);
  methods[1].selector = @selector(iterator);
  methods[2].selector = @selector(termsWithNSString:);
  methods[3].selector = @selector(size);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader;", "()Ljava/util/Iterator<Ljava/lang/String;>;", "terms", "LNSString;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields = { "MemoryFields", "org.apache.lucene.index.memory", ptrTable, methods, fields, 7, 0x2, 4, 1, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields;
}

@end

void OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields *self, OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneIndexFields_init(self);
}

OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields *new_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields, initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_, outer$)
}

OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields *create_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields, initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields)

@implementation OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_1

- (instancetype)initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields:(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields *)outer$
                                              withOrgApacheLuceneIndexMemoryMemoryIndex_Info:(OrgApacheLuceneIndexMemoryMemoryIndex_Info *)capture$0 {
  OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_1_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_(self, outer$, capture$0);
  return self;
}

- (OrgApacheLuceneIndexTermsEnum *)iterator {
  return create_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_(this$0_->this$0_, val$info_);
}

- (jlong)size {
  return [((OrgApacheLuceneUtilBytesRefHash *) nil_chk(((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(val$info_))->terms_)) size];
}

- (jlong)getSumTotalTermFreq {
  return ((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(val$info_))->sumTotalTermFreq_;
}

- (jlong)getSumDocFreq {
  return [((OrgApacheLuceneUtilBytesRefHash *) nil_chk(((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(val$info_))->terms_)) size];
}

- (jint)getDocCount {
  return [self size] > 0 ? 1 : 0;
}

- (jboolean)hasFreqs {
  return true;
}

- (jboolean)hasOffsets {
  return this$0_->this$0_->this$0_->storeOffsets_;
}

- (jboolean)hasPositions {
  return true;
}

- (jboolean)hasPayloads {
  return this$0_->this$0_->this$0_->storePayloads_;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$info_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTermsEnum;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields:withOrgApacheLuceneIndexMemoryMemoryIndex_Info:);
  methods[1].selector = @selector(iterator);
  methods[2].selector = @selector(size);
  methods[3].selector = @selector(getSumTotalTermFreq);
  methods[4].selector = @selector(getSumDocFreq);
  methods[5].selector = @selector(getDocCount);
  methods[6].selector = @selector(hasFreqs);
  methods[7].selector = @selector(hasOffsets);
  methods[8].selector = @selector(hasPositions);
  methods[9].selector = @selector(hasPayloads);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$info_", "LOrgApacheLuceneIndexMemoryMemoryIndex_Info;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields;LOrgApacheLuceneIndexMemoryMemoryIndex_Info;", "LOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields;", "termsWithNSString:" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_1 = { "", "org.apache.lucene.index.memory", ptrTable, methods, fields, 7, 0x8010, 10, 2, 1, -1, 2, -1, -1 };
  return &_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_1;
}

@end

void OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_1_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_1 *self, OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields *outer$, OrgApacheLuceneIndexMemoryMemoryIndex_Info *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$info_, capture$0);
  OrgApacheLuceneIndexTerms_init(self);
}

OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_1 *new_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_1_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields *outer$, OrgApacheLuceneIndexMemoryMemoryIndex_Info *capture$0) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_1, initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_, outer$, capture$0)
}

OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_1 *create_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_1_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields *outer$, OrgApacheLuceneIndexMemoryMemoryIndex_Info *capture$0) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_1, initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryFields_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_, outer$, capture$0)
}

@implementation OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum

- (instancetype)initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader:(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *)outer$
                                 withOrgApacheLuceneIndexMemoryMemoryIndex_Info:(OrgApacheLuceneIndexMemoryMemoryIndex_Info *)info {
  OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_(self, outer$, info);
  return self;
}

- (jint)binarySearchWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)b
                    withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)bytesRef
                                            withInt:(jint)low
                                            withInt:(jint)high
                withOrgApacheLuceneUtilBytesRefHash:(OrgApacheLuceneUtilBytesRefHash *)hash_
                                       withIntArray:(IOSIntArray *)ords
                             withJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  return OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum_binarySearchWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_withInt_withInt_withOrgApacheLuceneUtilBytesRefHash_withIntArray_withJavaUtilComparator_(self, b, bytesRef, low, high, hash_, ords, comparator);
}

- (jboolean)seekExactWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text {
  termUpto_ = OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum_binarySearchWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_withInt_withInt_withOrgApacheLuceneUtilBytesRefHash_withIntArray_withJavaUtilComparator_(self, text, br_, 0, [((OrgApacheLuceneUtilBytesRefHash *) nil_chk(((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(info_))->terms_)) size] - 1, info_->terms_, info_->sortedTerms_, OrgApacheLuceneUtilBytesRef_getUTF8SortedAsUnicodeComparator());
  return termUpto_ >= 0;
}

- (OrgApacheLuceneIndexTermsEnum_SeekStatus *)seekCeilWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text {
  termUpto_ = OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum_binarySearchWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_withInt_withInt_withOrgApacheLuceneUtilBytesRefHash_withIntArray_withJavaUtilComparator_(self, text, br_, 0, [((OrgApacheLuceneUtilBytesRefHash *) nil_chk(((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(info_))->terms_)) size] - 1, info_->terms_, info_->sortedTerms_, OrgApacheLuceneUtilBytesRef_getUTF8SortedAsUnicodeComparator());
  if (termUpto_ < 0) {
    termUpto_ = -termUpto_ - 1;
    if (termUpto_ >= [info_->terms_ size]) {
      return JreLoadEnum(OrgApacheLuceneIndexTermsEnum_SeekStatus, END);
    }
    else {
      [info_->terms_ getWithInt:IOSIntArray_Get(nil_chk(info_->sortedTerms_), termUpto_) withOrgApacheLuceneUtilBytesRef:br_];
      return JreLoadEnum(OrgApacheLuceneIndexTermsEnum_SeekStatus, NOT_FOUND);
    }
  }
  else {
    return JreLoadEnum(OrgApacheLuceneIndexTermsEnum_SeekStatus, FOUND);
  }
}

- (void)seekExactWithLong:(jlong)ord {
  JreAssert(ord < [((OrgApacheLuceneUtilBytesRefHash *) nil_chk(((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(info_))->terms_)) size], @"org/apache/lucene/index/memory/MemoryIndex.java:953 condition failed: assert ord < info.terms.size();");
  termUpto_ = (jint) ord;
  [info_->terms_ getWithInt:IOSIntArray_Get(nil_chk(info_->sortedTerms_), termUpto_) withOrgApacheLuceneUtilBytesRef:br_];
}

- (OrgApacheLuceneUtilBytesRef *)next {
  termUpto_++;
  if (termUpto_ >= [((OrgApacheLuceneUtilBytesRefHash *) nil_chk(((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(info_))->terms_)) size]) {
    return nil;
  }
  else {
    [info_->terms_ getWithInt:IOSIntArray_Get(nil_chk(info_->sortedTerms_), termUpto_) withOrgApacheLuceneUtilBytesRef:br_];
    return br_;
  }
}

- (OrgApacheLuceneUtilBytesRef *)term {
  return br_;
}

- (jlong)ord {
  return termUpto_;
}

- (jint)docFreq {
  return 1;
}

- (jlong)totalTermFreq {
  return IOSIntArray_Get(nil_chk(((OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray *) nil_chk(((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(info_))->sliceArray_))->freq_), IOSIntArray_Get(nil_chk(info_->sortedTerms_), termUpto_));
}

- (OrgApacheLuceneIndexPostingsEnum *)postingsWithOrgApacheLuceneIndexPostingsEnum:(OrgApacheLuceneIndexPostingsEnum *)reuse
                                                                           withInt:(jint)flags {
  if (reuse == nil || !([reuse isKindOfClass:[OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum class]])) {
    reuse = create_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_(this$0_);
  }
  jint ord = IOSIntArray_Get(nil_chk(((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(info_))->sortedTerms_), termUpto_);
  return [((OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum *) cast_chk(reuse, [OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum class])) resetWithInt:IOSIntArray_Get(nil_chk(((OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray *) nil_chk(info_->sliceArray_))->start_), ord) withInt:IOSIntArray_Get(nil_chk(info_->sliceArray_->end_), ord) withInt:IOSIntArray_Get(nil_chk(info_->sliceArray_->freq_), ord)];
}

- (void)seekExactWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term
               withOrgApacheLuceneIndexTermState:(OrgApacheLuceneIndexTermState *)state {
  JreAssert(state != nil, @"org/apache/lucene/index/memory/MemoryIndex.java:1000 condition failed: assert state != null;");
  [self seekExactWithLong:((OrgApacheLuceneIndexOrdTermState *) nil_chk(((OrgApacheLuceneIndexOrdTermState *) cast_chk(state, [OrgApacheLuceneIndexOrdTermState class]))))->ord_];
}

- (OrgApacheLuceneIndexTermState *)termState {
  OrgApacheLuceneIndexOrdTermState *ts = create_OrgApacheLuceneIndexOrdTermState_init();
  ts->ord_ = termUpto_;
  return ts;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(info_);
  RELEASE_(br_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x12, 1, 2, -1, 3, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTermsEnum_SeekStatus;", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 7, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRef;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRef;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexPostingsEnum;", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 10, 11, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTermState;", 0x1, -1, -1, 11, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader:withOrgApacheLuceneIndexMemoryMemoryIndex_Info:);
  methods[1].selector = @selector(binarySearchWithOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneUtilBytesRef:withInt:withInt:withOrgApacheLuceneUtilBytesRefHash:withIntArray:withJavaUtilComparator:);
  methods[2].selector = @selector(seekExactWithOrgApacheLuceneUtilBytesRef:);
  methods[3].selector = @selector(seekCeilWithOrgApacheLuceneUtilBytesRef:);
  methods[4].selector = @selector(seekExactWithLong:);
  methods[5].selector = @selector(next);
  methods[6].selector = @selector(term);
  methods[7].selector = @selector(ord);
  methods[8].selector = @selector(docFreq);
  methods[9].selector = @selector(totalTermFreq);
  methods[10].selector = @selector(postingsWithOrgApacheLuceneIndexPostingsEnum:withInt:);
  methods[11].selector = @selector(seekExactWithOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneIndexTermState:);
  methods[12].selector = @selector(termState);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "info_", "LOrgApacheLuceneIndexMemoryMemoryIndex_Info;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "br_", "LOrgApacheLuceneUtilBytesRef;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "termUpto_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader;LOrgApacheLuceneIndexMemoryMemoryIndex_Info;", "binarySearch", "LOrgApacheLuceneUtilBytesRef;LOrgApacheLuceneUtilBytesRef;IILOrgApacheLuceneUtilBytesRefHash;[ILJavaUtilComparator;", "(Lorg/apache/lucene/util/BytesRef;Lorg/apache/lucene/util/BytesRef;IILorg/apache/lucene/util/BytesRefHash;[ILjava/util/Comparator<Lorg/apache/lucene/util/BytesRef;>;)I", "seekExact", "LOrgApacheLuceneUtilBytesRef;", "seekCeil", "J", "postings", "LOrgApacheLuceneIndexPostingsEnum;I", "LOrgApacheLuceneUtilBytesRef;LOrgApacheLuceneIndexTermState;", "LJavaIoIOException;", "LOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum = { "MemoryTermsEnum", "org.apache.lucene.index.memory", ptrTable, methods, fields, 7, 0x2, 13, 4, 12, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum;
}

@end

void OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum *self, OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$, OrgApacheLuceneIndexMemoryMemoryIndex_Info *info) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneIndexTermsEnum_init(self);
  JreStrongAssignAndConsume(&self->br_, new_OrgApacheLuceneUtilBytesRef_init());
  self->termUpto_ = -1;
  JreStrongAssign(&self->info_, info);
  [((OrgApacheLuceneIndexMemoryMemoryIndex_Info *) nil_chk(info)) sortTerms];
}

OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum *new_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$, OrgApacheLuceneIndexMemoryMemoryIndex_Info *info) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum, initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_, outer$, info)
}

OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum *create_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$, OrgApacheLuceneIndexMemoryMemoryIndex_Info *info) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum, initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_withOrgApacheLuceneIndexMemoryMemoryIndex_Info_, outer$, info)
}

jint OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum_binarySearchWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_withInt_withInt_withOrgApacheLuceneUtilBytesRefHash_withIntArray_withJavaUtilComparator_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum *self, OrgApacheLuceneUtilBytesRef *b, OrgApacheLuceneUtilBytesRef *bytesRef, jint low, jint high, OrgApacheLuceneUtilBytesRefHash *hash_, IOSIntArray *ords, id<JavaUtilComparator> comparator) {
  jint mid = 0;
  while (low <= high) {
    mid = JreURShift32((low + high), 1);
    [((OrgApacheLuceneUtilBytesRefHash *) nil_chk(hash_)) getWithInt:IOSIntArray_Get(nil_chk(ords), mid) withOrgApacheLuceneUtilBytesRef:bytesRef];
    jint cmp = [((id<JavaUtilComparator>) nil_chk(comparator)) compareWithId:bytesRef withId:b];
    if (cmp < 0) {
      low = mid + 1;
    }
    else if (cmp > 0) {
      high = mid - 1;
    }
    else {
      return mid;
    }
  }
  JreAssert([((id<JavaUtilComparator>) nil_chk(comparator)) compareWithId:bytesRef withId:b] != 0, @"org/apache/lucene/index/memory/MemoryIndex.java:924 condition failed: assert comparator.compare(bytesRef, b) != 0;");
  return -(low + 1);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryTermsEnum)

@implementation OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum

- (instancetype)initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader:(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *)outer$ {
  OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_(self, outer$);
  return self;
}

- (OrgApacheLuceneIndexPostingsEnum *)resetWithInt:(jint)start
                                           withInt:(jint)end
                                           withInt:(jint)freq {
  [((OrgApacheLuceneUtilIntBlockPool_SliceReader *) nil_chk(self->sliceReader_)) resetWithInt:start withInt:end];
  posUpto_ = 0;
  hasNext_ = true;
  doc_ = -1;
  self->freq_ = freq;
  return self;
}

- (jint)docID {
  return doc_;
}

- (jint)nextDoc {
  pos_ = -1;
  if (hasNext_) {
    hasNext_ = false;
    return doc_ = 0;
  }
  else {
    return doc_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
  }
}

- (jint)advanceWithInt:(jint)target {
  return [self slowAdvanceWithInt:target];
}

- (jint)freq {
  return freq_;
}

- (jint)nextPosition {
  posUpto_++;
  JreAssert(posUpto_ <= freq_, @"org/apache/lucene/index/memory/MemoryIndex.java:1069 condition failed: assert posUpto <= freq;");
  JreAssert(![((OrgApacheLuceneUtilIntBlockPool_SliceReader *) nil_chk(sliceReader_)) endOfSlice], JreStrcat("$I", @" stores offsets : ", startOffset_));
  jint pos = [sliceReader_ readInt];
  if (this$0_->this$0_->storeOffsets_) {
    startOffset_ = [sliceReader_ readInt];
    endOffset_ = [sliceReader_ readInt];
  }
  if (this$0_->this$0_->storePayloads_) {
    payloadIndex_ = [sliceReader_ readInt];
  }
  return pos;
}

- (jint)startOffset {
  return startOffset_;
}

- (jint)endOffset {
  return endOffset_;
}

- (OrgApacheLuceneUtilBytesRef *)getPayload {
  if (payloadBuilder_ == nil || payloadIndex_ == -1) {
    return nil;
  }
  return [((OrgApacheLuceneUtilBytesRefArray *) nil_chk(this$0_->this$0_->payloadsBytesRefs_)) getWithOrgApacheLuceneUtilBytesRefBuilder:payloadBuilder_ withInt:payloadIndex_];
}

- (jlong)cost {
  return 1;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(sliceReader_);
  RELEASE_(payloadBuilder_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexPostingsEnum;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 5, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRef;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader:);
  methods[1].selector = @selector(resetWithInt:withInt:withInt:);
  methods[2].selector = @selector(docID);
  methods[3].selector = @selector(nextDoc);
  methods[4].selector = @selector(advanceWithInt:);
  methods[5].selector = @selector(freq);
  methods[6].selector = @selector(nextPosition);
  methods[7].selector = @selector(startOffset);
  methods[8].selector = @selector(endOffset);
  methods[9].selector = @selector(getPayload);
  methods[10].selector = @selector(cost);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "sliceReader_", "LOrgApacheLuceneUtilIntBlockPool_SliceReader;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "posUpto_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hasNext_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "doc_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "freq_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pos_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "startOffset_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "endOffset_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "payloadIndex_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "payloadBuilder_", "LOrgApacheLuceneUtilBytesRefBuilder;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader;", "reset", "III", "advance", "I", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum = { "MemoryPostingsEnum", "org.apache.lucene.index.memory", ptrTable, methods, fields, 7, 0x2, 11, 11, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum;
}

@end

void OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum *self, OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneIndexPostingsEnum_init(self);
  self->doc_ = -1;
  JreStrongAssignAndConsume(&self->sliceReader_, new_OrgApacheLuceneUtilIntBlockPool_SliceReader_initWithOrgApacheLuceneUtilIntBlockPool_(outer$->this$0_->intBlockPool_));
  JreStrongAssign(&self->payloadBuilder_, outer$->this$0_->storePayloads_ ? create_OrgApacheLuceneUtilBytesRefBuilder_init() : nil);
}

OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum *new_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum, initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_, outer$)
}

OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum *create_OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum_initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum, initWithOrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMemoryMemoryIndex_MemoryIndexReader_MemoryPostingsEnum)

@implementation OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray

- (instancetype)initWithInt:(jint)initSize {
  OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray_initWithInt_(self, initSize);
  return self;
}

- (IOSIntArray *)init__ {
  IOSIntArray *ord = [super init__];
  JreStrongAssignAndConsume(&start_, [IOSIntArray newArrayWithLength:OrgApacheLuceneUtilArrayUtil_oversizeWithInt_withInt_(((IOSIntArray *) nil_chk(ord))->size_, OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_INT)]);
  JreStrongAssignAndConsume(&end_, [IOSIntArray newArrayWithLength:OrgApacheLuceneUtilArrayUtil_oversizeWithInt_withInt_(ord->size_, OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_INT)]);
  JreStrongAssignAndConsume(&freq_, [IOSIntArray newArrayWithLength:OrgApacheLuceneUtilArrayUtil_oversizeWithInt_withInt_(ord->size_, OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_INT)]);
  JreAssert(((IOSIntArray *) nil_chk(start_))->size_ >= ord->size_, @"org/apache/lucene/index/memory/MemoryIndex.java:1179 condition failed: assert start.length >= ord.length;");
  JreAssert(((IOSIntArray *) nil_chk(end_))->size_ >= ord->size_, @"org/apache/lucene/index/memory/MemoryIndex.java:1180 condition failed: assert end.length >= ord.length;");
  JreAssert(freq_->size_ >= ord->size_, @"org/apache/lucene/index/memory/MemoryIndex.java:1181 condition failed: assert freq.length >= ord.length;");
  return ord;
}

- (IOSIntArray *)grow {
  IOSIntArray *ord = [super grow];
  if (((IOSIntArray *) nil_chk(start_))->size_ < ((IOSIntArray *) nil_chk(ord))->size_) {
    JreStrongAssign(&start_, OrgApacheLuceneUtilArrayUtil_growWithIntArray_withInt_(start_, ord->size_));
    JreStrongAssign(&end_, OrgApacheLuceneUtilArrayUtil_growWithIntArray_withInt_(end_, ord->size_));
    JreStrongAssign(&freq_, OrgApacheLuceneUtilArrayUtil_growWithIntArray_withInt_(freq_, ord->size_));
  }
  JreAssert(((IOSIntArray *) nil_chk(start_))->size_ >= ord->size_, @"org/apache/lucene/index/memory/MemoryIndex.java:1193 condition failed: assert start.length >= ord.length;");
  JreAssert(((IOSIntArray *) nil_chk(end_))->size_ >= ord->size_, @"org/apache/lucene/index/memory/MemoryIndex.java:1194 condition failed: assert end.length >= ord.length;");
  JreAssert(((IOSIntArray *) nil_chk(freq_))->size_ >= ord->size_, @"org/apache/lucene/index/memory/MemoryIndex.java:1195 condition failed: assert freq.length >= ord.length;");
  return ord;
}

- (IOSIntArray *)clear {
  JreStrongAssign(&start_, JreStrongAssign(&end_, nil));
  return [super clear];
}

- (void)dealloc {
  RELEASE_(start_);
  RELEASE_(end_);
  RELEASE_(freq_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(init__);
  methods[2].selector = @selector(grow);
  methods[3].selector = @selector(clear);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "start_", "[I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "end_", "[I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "freq_", "[I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "init", "LOrgApacheLuceneIndexMemoryMemoryIndex;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray = { "SliceByteStartArray", "org.apache.lucene.index.memory", ptrTable, methods, fields, 7, 0x1a, 4, 3, 2, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray;
}

@end

void OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray_initWithInt_(OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray *self, jint initSize) {
  OrgApacheLuceneUtilBytesRefHash_DirectBytesStartArray_initWithInt_(self, initSize);
}

OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray *new_OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray_initWithInt_(jint initSize) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray, initWithInt_, initSize)
}

OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray *create_OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray_initWithInt_(jint initSize) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray, initWithInt_, initSize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMemoryMemoryIndex_SliceByteStartArray)
