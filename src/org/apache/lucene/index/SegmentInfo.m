//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/SegmentInfo.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/HashSet.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/regex/Matcher.h"
#include "java/util/regex/Pattern.h"
#include "org/apache/lucene/codecs/Codec.h"
#include "org/apache/lucene/index/IndexFileNames.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/TrackingDirectoryWrapper.h"
#include "org/apache/lucene/util/StringHelper.h"
#include "org/apache/lucene/util/Version.h"
#include "org/lukhnos/portmobile/util/Objects.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/index/SegmentInfo must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneIndexSegmentInfo () {
 @public
  jint maxDoc_;
  jboolean isCompoundFile_;
  /*!
   @brief Id that uniquely identifies this segment.
   */
  IOSByteArray *id__;
  OrgApacheLuceneCodecsCodec *codec_;
  id<JavaUtilMap> diagnostics_;
  id<JavaUtilMap> attributes_;
  OrgApacheLuceneUtilVersion *version__;
  id<JavaUtilSet> setFiles_;
}

- (void)checkFileNamesWithJavaUtilCollection:(id<JavaUtilCollection>)files;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentInfo, id__, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentInfo, codec_, OrgApacheLuceneCodecsCodec *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentInfo, diagnostics_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentInfo, attributes_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentInfo, version__, OrgApacheLuceneUtilVersion *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentInfo, setFiles_, id<JavaUtilSet>)

__attribute__((unused)) static void OrgApacheLuceneIndexSegmentInfo_checkFileNamesWithJavaUtilCollection_(OrgApacheLuceneIndexSegmentInfo *self, id<JavaUtilCollection> files);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneIndexSegmentInfo__Annotations$0(void);

@implementation OrgApacheLuceneIndexSegmentInfo

+ (jint)NO_ {
  return OrgApacheLuceneIndexSegmentInfo_NO;
}

+ (jint)YES_ {
  return OrgApacheLuceneIndexSegmentInfo_YES;
}

- (void)setDiagnosticsWithJavaUtilMap:(id<JavaUtilMap>)diagnostics {
  JreStrongAssign(&self->diagnostics_, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_(diagnostics));
}

- (id<JavaUtilMap>)getDiagnostics {
  return diagnostics_;
}

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                       withOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)version_
                                         withNSString:(NSString *)name
                                              withInt:(jint)maxDoc
                                          withBoolean:(jboolean)isCompoundFile
                       withOrgApacheLuceneCodecsCodec:(OrgApacheLuceneCodecsCodec *)codec
                                      withJavaUtilMap:(id<JavaUtilMap>)diagnostics
                                        withByteArray:(IOSByteArray *)id_
                                      withJavaUtilMap:(id<JavaUtilMap>)attributes {
  OrgApacheLuceneIndexSegmentInfo_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneUtilVersion_withNSString_withInt_withBoolean_withOrgApacheLuceneCodecsCodec_withJavaUtilMap_withByteArray_withJavaUtilMap_(self, dir, version_, name, maxDoc, isCompoundFile, codec, diagnostics, id_, attributes);
  return self;
}

- (void)setUseCompoundFileWithBoolean:(jboolean)isCompoundFile {
  self->isCompoundFile_ = isCompoundFile;
}

- (jboolean)getUseCompoundFile {
  return isCompoundFile_;
}

- (void)setCodecWithOrgApacheLuceneCodecsCodec:(OrgApacheLuceneCodecsCodec *)codec {
  JreAssert(self->codec_ == nil, @"org/apache/lucene/index/SegmentInfo.java:131 condition failed: assert this.codec == null;");
  if (codec == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"codec must be non-null");
  }
  JreStrongAssign(&self->codec_, codec);
}

- (OrgApacheLuceneCodecsCodec *)getCodec {
  return codec_;
}

- (jint)maxDoc {
  if (self->maxDoc_ == -1) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"maxDoc isn't set yet");
  }
  return maxDoc_;
}

- (void)setMaxDocWithInt:(jint)maxDoc {
  if (self->maxDoc_ != -1) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I$I", @"maxDoc was already set: this.maxDoc=", self->maxDoc_, @" vs maxDoc=", maxDoc));
  }
  self->maxDoc_ = maxDoc;
}

- (id<JavaUtilSet>)files {
  if (setFiles_ == nil) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"files were not computed yet");
  }
  return JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(setFiles_);
}

- (NSString *)description {
  return [self toStringWithInt:0];
}

- (NSString *)toStringWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                                                withInt:(jint)delCount {
  return [self toStringWithInt:delCount];
}

- (NSString *)toStringWithInt:(jint)delCount {
  JavaLangStringBuilder *s = create_JavaLangStringBuilder_init();
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([s appendWithNSString:name_])) appendWithChar:'('])) appendWithId:version__ == nil ? @"?" : (id) version__])) appendWithChar:')'])) appendWithChar:':'];
  jchar cfs = [self getUseCompoundFile] ? 'c' : 'C';
  [s appendWithChar:cfs];
  [s appendWithInt:maxDoc_];
  if (delCount != 0) {
    [((JavaLangStringBuilder *) nil_chk([s appendWithChar:'/'])) appendWithInt:delCount];
  }
  NSString *sorter_key = @"sorter";
  NSString *sorter_val = [((id<JavaUtilMap>) nil_chk(diagnostics_)) getWithId:sorter_key];
  if (sorter_val != nil) {
    [s appendWithNSString:@":["];
    [s appendWithNSString:sorter_key];
    [s appendWithChar:'='];
    [s appendWithNSString:sorter_val];
    [s appendWithChar:']'];
  }
  return [s description];
}

- (jboolean)isEqual:(id)obj {
  if (JreObjectEqualsEquals(self, obj)) return true;
  if ([obj isKindOfClass:[OrgApacheLuceneIndexSegmentInfo class]]) {
    OrgApacheLuceneIndexSegmentInfo *other = (OrgApacheLuceneIndexSegmentInfo *) obj;
    return JreObjectEqualsEquals(((OrgApacheLuceneIndexSegmentInfo *) nil_chk(other))->dir_, dir_) && [((NSString *) nil_chk(other->name_)) isEqual:name_];
  }
  else {
    return false;
  }
}

- (NSUInteger)hash {
  return ((jint) [((OrgApacheLuceneStoreDirectory *) nil_chk(dir_)) hash]) + ((jint) [((NSString *) nil_chk(name_)) hash]);
}

- (OrgApacheLuceneUtilVersion *)getVersion {
  return version__;
}

- (IOSByteArray *)getId {
  return id__ == nil ? nil : [id__ java_clone];
}

- (void)setFilesWithJavaUtilCollection:(id<JavaUtilCollection>)files {
  JreStrongAssignAndConsume(&setFiles_, new_JavaUtilHashSet_init());
  [self addFilesWithJavaUtilCollection:files];
}

- (void)addFilesWithJavaUtilCollection:(id<JavaUtilCollection>)files {
  OrgApacheLuceneIndexSegmentInfo_checkFileNamesWithJavaUtilCollection_(self, files);
  for (NSString * __strong f in nil_chk(files)) {
    [((id<JavaUtilSet>) nil_chk(setFiles_)) addWithId:[self namedForThisSegmentWithNSString:f]];
  }
}

- (void)addFileWithNSString:(NSString *)file {
  OrgApacheLuceneIndexSegmentInfo_checkFileNamesWithJavaUtilCollection_(self, JavaUtilCollections_singletonWithId_(file));
  [((id<JavaUtilSet>) nil_chk(setFiles_)) addWithId:[self namedForThisSegmentWithNSString:file]];
}

- (void)checkFileNamesWithJavaUtilCollection:(id<JavaUtilCollection>)files {
  OrgApacheLuceneIndexSegmentInfo_checkFileNamesWithJavaUtilCollection_(self, files);
}

- (NSString *)namedForThisSegmentWithNSString:(NSString *)file {
  return JreStrcat("$$", name_, OrgApacheLuceneIndexIndexFileNames_stripSegmentNameWithNSString_(file));
}

- (NSString *)getAttributeWithNSString:(NSString *)key {
  return [((id<JavaUtilMap>) nil_chk(attributes_)) getWithId:key];
}

- (NSString *)putAttributeWithNSString:(NSString *)key
                          withNSString:(NSString *)value {
  return [((id<JavaUtilMap>) nil_chk(attributes_)) putWithId:key withId:value];
}

- (id<JavaUtilMap>)getAttributes {
  return attributes_;
}

- (void)dealloc {
  RELEASE_(name_);
  RELEASE_(dir_);
  RELEASE_(id__);
  RELEASE_(codec_);
  RELEASE_(diagnostics_);
  RELEASE_(attributes_);
  RELEASE_(version__);
  RELEASE_(setFiles_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x0, 0, 1, -1, 2, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, 5, -1, -1 },
    { NULL, "V", 0x0, 6, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneCodecsCodec;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 10, 11, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 12, -1, -1 },
    { NULL, "LNSString;", 0x1, 13, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 13, 14, -1, -1, 15, -1 },
    { NULL, "LNSString;", 0x1, 13, 11, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 18, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilVersion;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 20, -1, 21, -1, -1 },
    { NULL, "V", 0x1, 22, 20, -1, 21, -1, -1 },
    { NULL, "V", 0x1, 23, 24, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 25, 20, -1, 21, -1, -1 },
    { NULL, "LNSString;", 0x0, 26, 24, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 27, 24, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 28, 29, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(setDiagnosticsWithJavaUtilMap:);
  methods[1].selector = @selector(getDiagnostics);
  methods[2].selector = @selector(initWithOrgApacheLuceneStoreDirectory:withOrgApacheLuceneUtilVersion:withNSString:withInt:withBoolean:withOrgApacheLuceneCodecsCodec:withJavaUtilMap:withByteArray:withJavaUtilMap:);
  methods[3].selector = @selector(setUseCompoundFileWithBoolean:);
  methods[4].selector = @selector(getUseCompoundFile);
  methods[5].selector = @selector(setCodecWithOrgApacheLuceneCodecsCodec:);
  methods[6].selector = @selector(getCodec);
  methods[7].selector = @selector(maxDoc);
  methods[8].selector = @selector(setMaxDocWithInt:);
  methods[9].selector = @selector(files);
  methods[10].selector = @selector(description);
  methods[11].selector = @selector(toStringWithOrgApacheLuceneStoreDirectory:withInt:);
  methods[12].selector = @selector(toStringWithInt:);
  methods[13].selector = @selector(isEqual:);
  methods[14].selector = @selector(hash);
  methods[15].selector = @selector(getVersion);
  methods[16].selector = @selector(getId);
  methods[17].selector = @selector(setFilesWithJavaUtilCollection:);
  methods[18].selector = @selector(addFilesWithJavaUtilCollection:);
  methods[19].selector = @selector(addFileWithNSString:);
  methods[20].selector = @selector(checkFileNamesWithJavaUtilCollection:);
  methods[21].selector = @selector(namedForThisSegmentWithNSString:);
  methods[22].selector = @selector(getAttributeWithNSString:);
  methods[23].selector = @selector(putAttributeWithNSString:withNSString:);
  methods[24].selector = @selector(getAttributes);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NO", "I", .constantValue.asInt = OrgApacheLuceneIndexSegmentInfo_NO, 0x19, -1, -1, -1, -1 },
    { "YES", "I", .constantValue.asInt = OrgApacheLuceneIndexSegmentInfo_YES, 0x19, -1, -1, -1, -1 },
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "maxDoc_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "dir_", "LOrgApacheLuceneStoreDirectory;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "isCompoundFile_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "id__", "[B", .constantValue.asLong = 0, 0x12, 30, -1, -1, -1 },
    { "codec_", "LOrgApacheLuceneCodecsCodec;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "diagnostics_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x2, -1, -1, 31, -1 },
    { "attributes_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 31, -1 },
    { "version__", "LOrgApacheLuceneUtilVersion;", .constantValue.asLong = 0, 0x2, 32, -1, -1, -1 },
    { "setFiles_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x2, -1, -1, 33, -1 },
  };
  static const void *ptrTable[] = { "setDiagnostics", "LJavaUtilMap;", "(Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V", "()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", "LOrgApacheLuceneStoreDirectory;LOrgApacheLuceneUtilVersion;LNSString;IZLOrgApacheLuceneCodecsCodec;LJavaUtilMap;[BLJavaUtilMap;", "(Lorg/apache/lucene/store/Directory;Lorg/apache/lucene/util/Version;Ljava/lang/String;IZLorg/apache/lucene/codecs/Codec;Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;[BLjava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V", "setUseCompoundFile", "Z", "setCodec", "LOrgApacheLuceneCodecsCodec;", "setMaxDoc", "I", "()Ljava/util/Set<Ljava/lang/String;>;", "toString", "LOrgApacheLuceneStoreDirectory;I", (void *)&OrgApacheLuceneIndexSegmentInfo__Annotations$0, "equals", "LNSObject;", "hashCode", "setFiles", "LJavaUtilCollection;", "(Ljava/util/Collection<Ljava/lang/String;>;)V", "addFiles", "addFile", "LNSString;", "checkFileNames", "namedForThisSegment", "getAttribute", "putAttribute", "LNSString;LNSString;", "id", "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", "version", "Ljava/util/Set<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexSegmentInfo = { "SegmentInfo", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x11, 25, 12, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexSegmentInfo;
}

@end

void OrgApacheLuceneIndexSegmentInfo_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneUtilVersion_withNSString_withInt_withBoolean_withOrgApacheLuceneCodecsCodec_withJavaUtilMap_withByteArray_withJavaUtilMap_(OrgApacheLuceneIndexSegmentInfo *self, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneUtilVersion *version_, NSString *name, jint maxDoc, jboolean isCompoundFile, OrgApacheLuceneCodecsCodec *codec, id<JavaUtilMap> diagnostics, IOSByteArray *id_, id<JavaUtilMap> attributes) {
  NSObject_init(self);
  JreAssert(!([dir isKindOfClass:[OrgApacheLuceneStoreTrackingDirectoryWrapper class]]), @"org/apache/lucene/index/SegmentInfo.java:96 condition failed: assert !(dir instanceof TrackingDirectoryWrapper);");
  JreStrongAssign(&self->dir_, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_(dir));
  JreStrongAssign(&self->version__, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_(version_));
  JreStrongAssign(&self->name_, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_(name));
  self->maxDoc_ = maxDoc;
  self->isCompoundFile_ = isCompoundFile;
  JreStrongAssign(&self->codec_, codec);
  JreStrongAssign(&self->diagnostics_, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_(diagnostics));
  JreStrongAssign(&self->id__, id_);
  if (id_ != nil && id_->size_ != OrgApacheLuceneUtilStringHelper_ID_LENGTH) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"invalid id: ", JavaUtilArrays_toStringWithByteArray_(id_)));
  }
  JreStrongAssign(&self->attributes_, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_(attributes));
}

OrgApacheLuceneIndexSegmentInfo *new_OrgApacheLuceneIndexSegmentInfo_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneUtilVersion_withNSString_withInt_withBoolean_withOrgApacheLuceneCodecsCodec_withJavaUtilMap_withByteArray_withJavaUtilMap_(OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneUtilVersion *version_, NSString *name, jint maxDoc, jboolean isCompoundFile, OrgApacheLuceneCodecsCodec *codec, id<JavaUtilMap> diagnostics, IOSByteArray *id_, id<JavaUtilMap> attributes) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexSegmentInfo, initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneUtilVersion_withNSString_withInt_withBoolean_withOrgApacheLuceneCodecsCodec_withJavaUtilMap_withByteArray_withJavaUtilMap_, dir, version_, name, maxDoc, isCompoundFile, codec, diagnostics, id_, attributes)
}

OrgApacheLuceneIndexSegmentInfo *create_OrgApacheLuceneIndexSegmentInfo_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneUtilVersion_withNSString_withInt_withBoolean_withOrgApacheLuceneCodecsCodec_withJavaUtilMap_withByteArray_withJavaUtilMap_(OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneUtilVersion *version_, NSString *name, jint maxDoc, jboolean isCompoundFile, OrgApacheLuceneCodecsCodec *codec, id<JavaUtilMap> diagnostics, IOSByteArray *id_, id<JavaUtilMap> attributes) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexSegmentInfo, initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneUtilVersion_withNSString_withInt_withBoolean_withOrgApacheLuceneCodecsCodec_withJavaUtilMap_withByteArray_withJavaUtilMap_, dir, version_, name, maxDoc, isCompoundFile, codec, diagnostics, id_, attributes)
}

void OrgApacheLuceneIndexSegmentInfo_checkFileNamesWithJavaUtilCollection_(OrgApacheLuceneIndexSegmentInfo *self, id<JavaUtilCollection> files) {
  JavaUtilRegexMatcher *m = JreRetainedLocalValue([((JavaUtilRegexPattern *) nil_chk(JreLoadStatic(OrgApacheLuceneIndexIndexFileNames, CODEC_FILE_PATTERN))) matcherWithJavaLangCharSequence:@""]);
  for (NSString * __strong file in nil_chk(files)) {
    [((JavaUtilRegexMatcher *) nil_chk(m)) resetWithJavaLangCharSequence:file];
    if (![m matches]) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$$", @"invalid codec filename '", file, @"', must match: ", [JreLoadStatic(OrgApacheLuceneIndexIndexFileNames, CODEC_FILE_PATTERN) pattern]));
    }
  }
}

IOSObjectArray *OrgApacheLuceneIndexSegmentInfo__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexSegmentInfo)
