//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/PrefixCodedTerms.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Math.h"
#include "java/lang/RuntimeException.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "org/apache/lucene/index/FieldTermIterator.h"
#include "org/apache/lucene/index/PrefixCodedTerms.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/store/IndexInput.h"
#include "org/apache/lucene/store/RAMFile.h"
#include "org/apache/lucene/store/RAMInputStream.h"
#include "org/apache/lucene/store/RAMOutputStream.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"
#include "org/lukhnos/portmobile/util/Objects.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/index/PrefixCodedTerms must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneIndexPrefixCodedTerms () {
 @public
  jlong size_;
  jlong delGen_;
}

- (instancetype)initWithOrgApacheLuceneStoreRAMFile:(OrgApacheLuceneStoreRAMFile *)buffer
                                           withLong:(jlong)size;

@end

__attribute__((unused)) static void OrgApacheLuceneIndexPrefixCodedTerms_initWithOrgApacheLuceneStoreRAMFile_withLong_(OrgApacheLuceneIndexPrefixCodedTerms *self, OrgApacheLuceneStoreRAMFile *buffer, jlong size);

__attribute__((unused)) static OrgApacheLuceneIndexPrefixCodedTerms *new_OrgApacheLuceneIndexPrefixCodedTerms_initWithOrgApacheLuceneStoreRAMFile_withLong_(OrgApacheLuceneStoreRAMFile *buffer, jlong size) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexPrefixCodedTerms *create_OrgApacheLuceneIndexPrefixCodedTerms_initWithOrgApacheLuceneStoreRAMFile_withLong_(OrgApacheLuceneStoreRAMFile *buffer, jlong size);

@interface OrgApacheLuceneIndexPrefixCodedTerms_Builder () {
 @public
  OrgApacheLuceneStoreRAMFile *buffer_;
  OrgApacheLuceneStoreRAMOutputStream *output_;
  OrgApacheLuceneIndexTerm *lastTerm_;
  OrgApacheLuceneUtilBytesRefBuilder *lastTermBytes_;
  jlong size_;
}

- (jint)sharedPrefixWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term1
                    withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term2;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexPrefixCodedTerms_Builder, buffer_, OrgApacheLuceneStoreRAMFile *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexPrefixCodedTerms_Builder, output_, OrgApacheLuceneStoreRAMOutputStream *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexPrefixCodedTerms_Builder, lastTerm_, OrgApacheLuceneIndexTerm *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexPrefixCodedTerms_Builder, lastTermBytes_, OrgApacheLuceneUtilBytesRefBuilder *)

__attribute__((unused)) static jint OrgApacheLuceneIndexPrefixCodedTerms_Builder_sharedPrefixWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneIndexPrefixCodedTerms_Builder *self, OrgApacheLuceneUtilBytesRef *term1, OrgApacheLuceneUtilBytesRef *term2);

@interface OrgApacheLuceneIndexPrefixCodedTerms_TermIterator ()

- (instancetype)initWithLong:(jlong)delGen
withOrgApacheLuceneStoreRAMFile:(OrgApacheLuceneStoreRAMFile *)buffer;

- (void)readTermBytesWithInt:(jint)prefix
                     withInt:(jint)suffix;

@end

__attribute__((unused)) static void OrgApacheLuceneIndexPrefixCodedTerms_TermIterator_initWithLong_withOrgApacheLuceneStoreRAMFile_(OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *self, jlong delGen, OrgApacheLuceneStoreRAMFile *buffer);

__attribute__((unused)) static OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *new_OrgApacheLuceneIndexPrefixCodedTerms_TermIterator_initWithLong_withOrgApacheLuceneStoreRAMFile_(jlong delGen, OrgApacheLuceneStoreRAMFile *buffer) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *create_OrgApacheLuceneIndexPrefixCodedTerms_TermIterator_initWithLong_withOrgApacheLuceneStoreRAMFile_(jlong delGen, OrgApacheLuceneStoreRAMFile *buffer);

__attribute__((unused)) static void OrgApacheLuceneIndexPrefixCodedTerms_TermIterator_readTermBytesWithInt_withInt_(OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *self, jint prefix, jint suffix);

@implementation OrgApacheLuceneIndexPrefixCodedTerms

- (instancetype)initWithOrgApacheLuceneStoreRAMFile:(OrgApacheLuceneStoreRAMFile *)buffer
                                           withLong:(jlong)size {
  OrgApacheLuceneIndexPrefixCodedTerms_initWithOrgApacheLuceneStoreRAMFile_withLong_(self, buffer, size);
  return self;
}

- (jlong)ramBytesUsed {
  return [((OrgApacheLuceneStoreRAMFile *) nil_chk(buffer_)) ramBytesUsed] + 2 * OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_LONG;
}

- (id<JavaUtilCollection>)getChildResources {
  return JavaUtilCollections_emptyList();
}

- (void)setDelGenWithLong:(jlong)delGen {
  self->delGen_ = delGen;
}

- (OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *)iterator {
  return create_OrgApacheLuceneIndexPrefixCodedTerms_TermIterator_initWithLong_withOrgApacheLuceneStoreRAMFile_(delGen_, buffer_);
}

- (jlong)size {
  return size_;
}

- (NSUInteger)hash {
  jint h = ((jint) [((OrgApacheLuceneStoreRAMFile *) nil_chk(buffer_)) hash]);
  h = 31 * h + (jint) (delGen_ ^ (JreURShift64(delGen_, 32)));
  return h;
}

- (jboolean)isEqual:(id)obj {
  if (JreObjectEqualsEquals(self, obj)) return true;
  if (obj == nil) return false;
  if (!JreObjectEqualsEquals([self java_getClass], [obj java_getClass])) return false;
  OrgApacheLuceneIndexPrefixCodedTerms *other = (OrgApacheLuceneIndexPrefixCodedTerms *) cast_chk(obj, [OrgApacheLuceneIndexPrefixCodedTerms class]);
  return [((OrgApacheLuceneStoreRAMFile *) nil_chk(buffer_)) isEqual:other->buffer_] && delGen_ == other->delGen_;
}

- (void)dealloc {
  RELEASE_(buffer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexPrefixCodedTerms_TermIterator;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneStoreRAMFile:withLong:);
  methods[1].selector = @selector(ramBytesUsed);
  methods[2].selector = @selector(getChildResources);
  methods[3].selector = @selector(setDelGenWithLong:);
  methods[4].selector = @selector(iterator);
  methods[5].selector = @selector(size);
  methods[6].selector = @selector(hash);
  methods[7].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "buffer_", "LOrgApacheLuceneStoreRAMFile;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "size_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "delGen_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneStoreRAMFile;J", "()Ljava/util/Collection<Lorg/apache/lucene/util/Accountable;>;", "setDelGen", "J", "hashCode", "equals", "LNSObject;", "LOrgApacheLuceneIndexPrefixCodedTerms_Builder;LOrgApacheLuceneIndexPrefixCodedTerms_TermIterator;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexPrefixCodedTerms = { "PrefixCodedTerms", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x1, 8, 3, -1, 7, -1, -1, -1 };
  return &_OrgApacheLuceneIndexPrefixCodedTerms;
}

@end

void OrgApacheLuceneIndexPrefixCodedTerms_initWithOrgApacheLuceneStoreRAMFile_withLong_(OrgApacheLuceneIndexPrefixCodedTerms *self, OrgApacheLuceneStoreRAMFile *buffer, jlong size) {
  NSObject_init(self);
  JreStrongAssign(&self->buffer_, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_(buffer));
  self->size_ = size;
}

OrgApacheLuceneIndexPrefixCodedTerms *new_OrgApacheLuceneIndexPrefixCodedTerms_initWithOrgApacheLuceneStoreRAMFile_withLong_(OrgApacheLuceneStoreRAMFile *buffer, jlong size) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexPrefixCodedTerms, initWithOrgApacheLuceneStoreRAMFile_withLong_, buffer, size)
}

OrgApacheLuceneIndexPrefixCodedTerms *create_OrgApacheLuceneIndexPrefixCodedTerms_initWithOrgApacheLuceneStoreRAMFile_withLong_(OrgApacheLuceneStoreRAMFile *buffer, jlong size) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexPrefixCodedTerms, initWithOrgApacheLuceneStoreRAMFile_withLong_, buffer, size)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexPrefixCodedTerms)

@implementation OrgApacheLuceneIndexPrefixCodedTerms_Builder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneIndexPrefixCodedTerms_Builder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)addWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term {
  JreAssert([((OrgApacheLuceneIndexTerm *) nil_chk(lastTerm_)) isEqual:create_OrgApacheLuceneIndexTerm_initWithNSString_(@"")] || [((OrgApacheLuceneIndexTerm *) nil_chk(term)) compareToWithId:lastTerm_] > 0, @"org/apache/lucene/index/PrefixCodedTerms.java:76 condition failed: assert lastTerm.equals(new Term(\"\")) || term.compareTo(lastTerm) > 0;");
  @try {
    jint prefix = OrgApacheLuceneIndexPrefixCodedTerms_Builder_sharedPrefixWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_(self, ((OrgApacheLuceneIndexTerm *) nil_chk(lastTerm_))->bytes_, ((OrgApacheLuceneIndexTerm *) nil_chk(term))->bytes_);
    jint suffix = ((OrgApacheLuceneUtilBytesRef *) nil_chk(term->bytes_))->length_ - prefix;
    if ([((NSString *) nil_chk(term->field_)) isEqual:((OrgApacheLuceneIndexTerm *) nil_chk(lastTerm_))->field_]) {
      [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(output_)) writeVIntWithInt:JreLShift32(prefix, 1)];
    }
    else {
      [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(output_)) writeVIntWithInt:(JreLShift32(prefix, 1)) | 1];
      [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(output_)) writeStringWithNSString:term->field_];
    }
    [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(output_)) writeVIntWithInt:suffix];
    [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(output_)) writeBytesWithByteArray:((OrgApacheLuceneUtilBytesRef *) nil_chk(term->bytes_))->bytes_ withInt:term->bytes_->offset_ + prefix withInt:suffix];
    [((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(lastTermBytes_)) copyBytesWithOrgApacheLuceneUtilBytesRef:term->bytes_];
    JreStrongAssign(&((OrgApacheLuceneIndexTerm *) nil_chk(lastTerm_))->bytes_, [((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(lastTermBytes_)) get]);
    JreStrongAssign(&((OrgApacheLuceneIndexTerm *) nil_chk(lastTerm_))->field_, term->field_);
    size_ += 1;
  }
  @catch (JavaIoIOException *e) {
    @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(e);
  }
}

- (OrgApacheLuceneIndexPrefixCodedTerms *)finish {
  @try {
    [((OrgApacheLuceneStoreRAMOutputStream *) nil_chk(output_)) close];
    return create_OrgApacheLuceneIndexPrefixCodedTerms_initWithOrgApacheLuceneStoreRAMFile_withLong_(buffer_, size_);
  }
  @catch (JavaIoIOException *e) {
    @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(e);
  }
}

- (jint)sharedPrefixWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term1
                    withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term2 {
  return OrgApacheLuceneIndexPrefixCodedTerms_Builder_sharedPrefixWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_(self, term1, term2);
}

- (void)dealloc {
  RELEASE_(buffer_);
  RELEASE_(output_);
  RELEASE_(lastTerm_);
  RELEASE_(lastTermBytes_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexPrefixCodedTerms;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addWithOrgApacheLuceneIndexTerm:);
  methods[2].selector = @selector(finish);
  methods[3].selector = @selector(sharedPrefixWithOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneUtilBytesRef:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "buffer_", "LOrgApacheLuceneStoreRAMFile;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "output_", "LOrgApacheLuceneStoreRAMOutputStream;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "lastTerm_", "LOrgApacheLuceneIndexTerm;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "lastTermBytes_", "LOrgApacheLuceneUtilBytesRefBuilder;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "size_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "add", "LOrgApacheLuceneIndexTerm;", "sharedPrefix", "LOrgApacheLuceneUtilBytesRef;LOrgApacheLuceneUtilBytesRef;", "LOrgApacheLuceneIndexPrefixCodedTerms;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexPrefixCodedTerms_Builder = { "Builder", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x9, 4, 5, 4, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexPrefixCodedTerms_Builder;
}

@end

void OrgApacheLuceneIndexPrefixCodedTerms_Builder_init(OrgApacheLuceneIndexPrefixCodedTerms_Builder *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->buffer_, new_OrgApacheLuceneStoreRAMFile_init());
  JreStrongAssignAndConsume(&self->output_, new_OrgApacheLuceneStoreRAMOutputStream_initWithOrgApacheLuceneStoreRAMFile_withBoolean_(self->buffer_, false));
  JreStrongAssignAndConsume(&self->lastTerm_, new_OrgApacheLuceneIndexTerm_initWithNSString_(@""));
  JreStrongAssignAndConsume(&self->lastTermBytes_, new_OrgApacheLuceneUtilBytesRefBuilder_init());
}

OrgApacheLuceneIndexPrefixCodedTerms_Builder *new_OrgApacheLuceneIndexPrefixCodedTerms_Builder_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexPrefixCodedTerms_Builder, init)
}

OrgApacheLuceneIndexPrefixCodedTerms_Builder *create_OrgApacheLuceneIndexPrefixCodedTerms_Builder_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexPrefixCodedTerms_Builder, init)
}

jint OrgApacheLuceneIndexPrefixCodedTerms_Builder_sharedPrefixWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneIndexPrefixCodedTerms_Builder *self, OrgApacheLuceneUtilBytesRef *term1, OrgApacheLuceneUtilBytesRef *term2) {
  jint pos1 = 0;
  jint pos1End = pos1 + JavaLangMath_minWithInt_withInt_(((OrgApacheLuceneUtilBytesRef *) nil_chk(term1))->length_, ((OrgApacheLuceneUtilBytesRef *) nil_chk(term2))->length_);
  jint pos2 = 0;
  while (pos1 < pos1End) {
    if (IOSByteArray_Get(nil_chk(term1->bytes_), term1->offset_ + pos1) != IOSByteArray_Get(term2->bytes_, term2->offset_ + pos2)) {
      return pos1;
    }
    pos1++;
    pos2++;
  }
  return pos1;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexPrefixCodedTerms_Builder)

@implementation OrgApacheLuceneIndexPrefixCodedTerms_TermIterator

- (instancetype)initWithLong:(jlong)delGen
withOrgApacheLuceneStoreRAMFile:(OrgApacheLuceneStoreRAMFile *)buffer {
  OrgApacheLuceneIndexPrefixCodedTerms_TermIterator_initWithLong_withOrgApacheLuceneStoreRAMFile_(self, delGen, buffer);
  return self;
}

- (OrgApacheLuceneUtilBytesRef *)next {
  if ([((OrgApacheLuceneStoreIndexInput *) nil_chk(input_)) getFilePointer] < end_) {
    @try {
      jint code = [input_ readVInt];
      jboolean newField = (code & 1) != 0;
      if (newField) {
        JreStrongAssign(&field_, [input_ readString]);
      }
      jint prefix = JreURShift32(code, 1);
      jint suffix = [input_ readVInt];
      OrgApacheLuceneIndexPrefixCodedTerms_TermIterator_readTermBytesWithInt_withInt_(self, prefix, suffix);
      return bytes_;
    }
    @catch (JavaIoIOException *e) {
      @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(e);
    }
  }
  else {
    JreStrongAssign(&field_, nil);
    return nil;
  }
}

- (void)readTermBytesWithInt:(jint)prefix
                     withInt:(jint)suffix {
  OrgApacheLuceneIndexPrefixCodedTerms_TermIterator_readTermBytesWithInt_withInt_(self, prefix, suffix);
}

- (NSString *)field {
  return field_;
}

- (jlong)delGen {
  return delGen_;
}

- (void)dealloc {
  RELEASE_(input_);
  RELEASE_(builder_);
  RELEASE_(bytes_);
  RELEASE_(field_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRef;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 1, 2, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLong:withOrgApacheLuceneStoreRAMFile:);
  methods[1].selector = @selector(next);
  methods[2].selector = @selector(readTermBytesWithInt:withInt:);
  methods[3].selector = @selector(field);
  methods[4].selector = @selector(delGen);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "input_", "LOrgApacheLuceneStoreIndexInput;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "builder_", "LOrgApacheLuceneUtilBytesRefBuilder;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "bytes_", "LOrgApacheLuceneUtilBytesRef;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "end_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "delGen_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "field_", "LNSString;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "JLOrgApacheLuceneStoreRAMFile;", "readTermBytes", "II", "LJavaIoIOException;", "LOrgApacheLuceneIndexPrefixCodedTerms;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexPrefixCodedTerms_TermIterator = { "TermIterator", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x9, 5, 6, 4, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexPrefixCodedTerms_TermIterator;
}

@end

void OrgApacheLuceneIndexPrefixCodedTerms_TermIterator_initWithLong_withOrgApacheLuceneStoreRAMFile_(OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *self, jlong delGen, OrgApacheLuceneStoreRAMFile *buffer) {
  OrgApacheLuceneIndexFieldTermIterator_initPackagePrivate(self);
  JreStrongAssignAndConsume(&self->builder_, new_OrgApacheLuceneUtilBytesRefBuilder_init());
  JreStrongAssign(&self->bytes_, [self->builder_ get]);
  JreStrongAssign(&self->field_, @"");
  @try {
    JreStrongAssignAndConsume(&self->input_, new_OrgApacheLuceneStoreRAMInputStream_initWithNSString_withOrgApacheLuceneStoreRAMFile_(@"MergedPrefixCodedTermsIterator", buffer));
  }
  @catch (JavaIoIOException *e) {
    @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(e);
  }
  self->end_ = [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->input_)) length];
  self->delGen_ = delGen;
}

OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *new_OrgApacheLuceneIndexPrefixCodedTerms_TermIterator_initWithLong_withOrgApacheLuceneStoreRAMFile_(jlong delGen, OrgApacheLuceneStoreRAMFile *buffer) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexPrefixCodedTerms_TermIterator, initWithLong_withOrgApacheLuceneStoreRAMFile_, delGen, buffer)
}

OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *create_OrgApacheLuceneIndexPrefixCodedTerms_TermIterator_initWithLong_withOrgApacheLuceneStoreRAMFile_(jlong delGen, OrgApacheLuceneStoreRAMFile *buffer) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexPrefixCodedTerms_TermIterator, initWithLong_withOrgApacheLuceneStoreRAMFile_, delGen, buffer)
}

void OrgApacheLuceneIndexPrefixCodedTerms_TermIterator_readTermBytesWithInt_withInt_(OrgApacheLuceneIndexPrefixCodedTerms_TermIterator *self, jint prefix, jint suffix) {
  [((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(self->builder_)) growWithInt:prefix + suffix];
  [((OrgApacheLuceneStoreIndexInput *) nil_chk(self->input_)) readBytesWithByteArray:[self->builder_ bytes] withInt:prefix withInt:suffix];
  [self->builder_ setLengthWithInt:prefix + suffix];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexPrefixCodedTerms_TermIterator)
