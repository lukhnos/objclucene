//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/SegmentCommitInfo.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/apache/lucene/codecs/Codec.h"
#include "org/apache/lucene/codecs/LiveDocsFormat.h"
#include "org/apache/lucene/index/SegmentCommitInfo.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/store/Directory.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/index/SegmentCommitInfo must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneIndexSegmentCommitInfo () {
 @public
  jint delCount_;
  jlong delGen_;
  jlong nextWriteDelGen_;
  jlong fieldInfosGen_;
  jlong nextWriteFieldInfosGen_;
  jlong docValuesGen_;
  jlong nextWriteDocValuesGen_;
  id<JavaUtilMap> dvUpdatesFiles_;
  id<JavaUtilSet> fieldInfosFiles_;
  id<JavaUtilMap> genUpdatesFiles_;
  volatile_jlong sizeInBytes_;
  jlong bufferedDeletesGen_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentCommitInfo, dvUpdatesFiles_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentCommitInfo, fieldInfosFiles_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentCommitInfo, genUpdatesFiles_, id<JavaUtilMap>)

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneIndexSegmentCommitInfo__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneIndexSegmentCommitInfo__Annotations$1(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneIndexSegmentCommitInfo__Annotations$2(void);

@implementation OrgApacheLuceneIndexSegmentCommitInfo

- (instancetype)initWithOrgApacheLuceneIndexSegmentInfo:(OrgApacheLuceneIndexSegmentInfo *)info
                                                withInt:(jint)delCount
                                               withLong:(jlong)delGen
                                               withLong:(jlong)fieldInfosGen
                                               withLong:(jlong)docValuesGen {
  OrgApacheLuceneIndexSegmentCommitInfo_initWithOrgApacheLuceneIndexSegmentInfo_withInt_withLong_withLong_withLong_(self, info, delCount, delGen, fieldInfosGen, docValuesGen);
  return self;
}

- (void)setGenUpdatesFilesWithJavaUtilMap:(id<JavaUtilMap>)genUpdatesFiles {
  [((id<JavaUtilMap>) nil_chk(self->genUpdatesFiles_)) clear];
  for (id<JavaUtilMap_Entry> __strong kv in nil_chk([((id<JavaUtilMap>) nil_chk(genUpdatesFiles)) entrySet])) {
    id<JavaUtilSet> set = create_JavaUtilHashSet_init();
    for (NSString * __strong file in nil_chk([((id<JavaUtilMap_Entry>) nil_chk(kv)) getValue])) {
      [set addWithId:[((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info_)) namedForThisSegmentWithNSString:file]];
    }
    [self->genUpdatesFiles_ putWithId:[kv getKey] withId:set];
  }
}

- (id<JavaUtilMap>)getDocValuesUpdatesFiles {
  return JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(dvUpdatesFiles_);
}

- (void)setDocValuesUpdatesFilesWithJavaUtilMap:(id<JavaUtilMap>)dvUpdatesFiles {
  [((id<JavaUtilMap>) nil_chk(self->dvUpdatesFiles_)) clear];
  for (id<JavaUtilMap_Entry> __strong kv in nil_chk([((id<JavaUtilMap>) nil_chk(dvUpdatesFiles)) entrySet])) {
    id<JavaUtilSet> set = create_JavaUtilHashSet_init();
    for (NSString * __strong file in nil_chk([((id<JavaUtilMap_Entry>) nil_chk(kv)) getValue])) {
      [set addWithId:[((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info_)) namedForThisSegmentWithNSString:file]];
    }
    [self->dvUpdatesFiles_ putWithId:[kv getKey] withId:set];
  }
}

- (id<JavaUtilSet>)getFieldInfosFiles {
  return JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(fieldInfosFiles_);
}

- (void)setFieldInfosFilesWithJavaUtilSet:(id<JavaUtilSet>)fieldInfosFiles {
  [((id<JavaUtilSet>) nil_chk(self->fieldInfosFiles_)) clear];
  for (NSString * __strong file in nil_chk(fieldInfosFiles)) {
    [self->fieldInfosFiles_ addWithId:[((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info_)) namedForThisSegmentWithNSString:file]];
  }
}

- (void)advanceDelGen {
  delGen_ = nextWriteDelGen_;
  nextWriteDelGen_ = delGen_ + 1;
  JreAssignVolatileLong(&sizeInBytes_, -1);
}

- (void)advanceNextWriteDelGen {
  nextWriteDelGen_++;
}

- (jlong)getNextWriteDelGen {
  return nextWriteDelGen_;
}

- (void)setNextWriteDelGenWithLong:(jlong)v {
  nextWriteDelGen_ = v;
}

- (void)advanceFieldInfosGen {
  fieldInfosGen_ = nextWriteFieldInfosGen_;
  nextWriteFieldInfosGen_ = fieldInfosGen_ + 1;
  JreAssignVolatileLong(&sizeInBytes_, -1);
}

- (void)advanceNextWriteFieldInfosGen {
  nextWriteFieldInfosGen_++;
}

- (jlong)getNextWriteFieldInfosGen {
  return nextWriteFieldInfosGen_;
}

- (void)setNextWriteFieldInfosGenWithLong:(jlong)v {
  nextWriteFieldInfosGen_ = v;
}

- (void)advanceDocValuesGen {
  docValuesGen_ = nextWriteDocValuesGen_;
  nextWriteDocValuesGen_ = docValuesGen_ + 1;
  JreAssignVolatileLong(&sizeInBytes_, -1);
}

- (void)advanceNextWriteDocValuesGen {
  nextWriteDocValuesGen_++;
}

- (jlong)getNextWriteDocValuesGen {
  return nextWriteDocValuesGen_;
}

- (void)setNextWriteDocValuesGenWithLong:(jlong)v {
  nextWriteDocValuesGen_ = v;
}

- (jlong)sizeInBytes {
  if (JreLoadVolatileLong(&sizeInBytes_) == -1) {
    jlong sum = 0;
    for (NSString * __strong fileName in nil_chk([self files])) {
      sum += [((OrgApacheLuceneStoreDirectory *) nil_chk(((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info_))->dir_)) fileLengthWithNSString:fileName];
    }
    JreAssignVolatileLong(&sizeInBytes_, sum);
  }
  return JreLoadVolatileLong(&sizeInBytes_);
}

- (id<JavaUtilCollection>)files {
  id<JavaUtilCollection> files = create_JavaUtilHashSet_initWithJavaUtilCollection_([((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info_)) files]);
  [((OrgApacheLuceneCodecsLiveDocsFormat *) nil_chk([((OrgApacheLuceneCodecsCodec *) nil_chk([info_ getCodec])) liveDocsFormat])) filesWithOrgApacheLuceneIndexSegmentCommitInfo:self withJavaUtilCollection:files];
  for (id<JavaUtilSet> __strong updateFiles in nil_chk([((id<JavaUtilMap>) nil_chk(genUpdatesFiles_)) values])) {
    [files addAllWithJavaUtilCollection:updateFiles];
  }
  for (id<JavaUtilSet> __strong updatefiles in nil_chk([((id<JavaUtilMap>) nil_chk(dvUpdatesFiles_)) values])) {
    [files addAllWithJavaUtilCollection:updatefiles];
  }
  [files addAllWithJavaUtilCollection:fieldInfosFiles_];
  return files;
}

- (jlong)getBufferedDeletesGen {
  return bufferedDeletesGen_;
}

- (void)setBufferedDeletesGenWithLong:(jlong)v {
  bufferedDeletesGen_ = v;
  JreAssignVolatileLong(&sizeInBytes_, -1);
}

- (jboolean)hasDeletions {
  return delGen_ != -1;
}

- (jboolean)hasFieldUpdates {
  return fieldInfosGen_ != -1;
}

- (jlong)getNextFieldInfosGen {
  return nextWriteFieldInfosGen_;
}

- (jlong)getFieldInfosGen {
  return fieldInfosGen_;
}

- (jlong)getNextDocValuesGen {
  return nextWriteDocValuesGen_;
}

- (jlong)getDocValuesGen {
  return docValuesGen_;
}

- (jlong)getNextDelGen {
  return nextWriteDelGen_;
}

- (jlong)getDelGen {
  return delGen_;
}

- (jint)getDelCount {
  return delCount_;
}

- (void)setDelCountWithInt:(jint)delCount {
  if (delCount < 0 || delCount > [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info_)) maxDoc]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$IC", @"invalid delCount=", delCount, @" (maxDoc=", [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info_)) maxDoc], ')'));
  }
  self->delCount_ = delCount;
}

- (NSString *)toStringWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                                                withInt:(jint)pendingDelCount {
  return [self toStringWithInt:pendingDelCount];
}

- (NSString *)toStringWithInt:(jint)pendingDelCount {
  NSString *s = JreRetainedLocalValue([((OrgApacheLuceneIndexSegmentInfo *) nil_chk(info_)) toStringWithInt:delCount_ + pendingDelCount]);
  if (delGen_ != -1) {
    JreStrAppend(&s, "$J", @":delGen=", delGen_);
  }
  if (fieldInfosGen_ != -1) {
    JreStrAppend(&s, "$J", @":fieldInfosGen=", fieldInfosGen_);
  }
  if (docValuesGen_ != -1) {
    JreStrAppend(&s, "$J", @":dvGen=", docValuesGen_);
  }
  return s;
}

- (NSString *)description {
  return [self toStringWithInt:0];
}

- (OrgApacheLuceneIndexSegmentCommitInfo *)java_clone {
  OrgApacheLuceneIndexSegmentCommitInfo *other = create_OrgApacheLuceneIndexSegmentCommitInfo_initWithOrgApacheLuceneIndexSegmentInfo_withInt_withLong_withLong_withLong_(info_, delCount_, delGen_, fieldInfosGen_, docValuesGen_);
  other->nextWriteDelGen_ = nextWriteDelGen_;
  other->nextWriteFieldInfosGen_ = nextWriteFieldInfosGen_;
  other->nextWriteDocValuesGen_ = nextWriteDocValuesGen_;
  for (id<JavaUtilMap_Entry> __strong e in nil_chk([((id<JavaUtilMap>) nil_chk(genUpdatesFiles_)) entrySet])) {
    [other->genUpdatesFiles_ putWithId:[((id<JavaUtilMap_Entry>) nil_chk(e)) getKey] withId:create_JavaUtilHashSet_initWithJavaUtilCollection_([e getValue])];
  }
  for (id<JavaUtilMap_Entry> __strong e in nil_chk([((id<JavaUtilMap>) nil_chk(dvUpdatesFiles_)) entrySet])) {
    [other->dvUpdatesFiles_ putWithId:[((id<JavaUtilMap_Entry>) nil_chk(e)) getKey] withId:create_JavaUtilHashSet_initWithJavaUtilCollection_([e getValue])];
  }
  [((id<JavaUtilSet>) nil_chk(other->fieldInfosFiles_)) addAllWithJavaUtilCollection:fieldInfosFiles_];
  return other;
}

- (void)dealloc {
  RELEASE_(info_);
  RELEASE_(dvUpdatesFiles_);
  RELEASE_(fieldInfosFiles_);
  RELEASE_(genUpdatesFiles_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, 3, 4, -1 },
    { NULL, "LJavaUtilMap;", 0x1, -1, -1, -1, 5, -1, -1 },
    { NULL, "V", 0x1, 6, 2, -1, 7, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 8, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, 11, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 12, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 14, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 15, 13, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, 16, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, 16, 17, -1, -1 },
    { NULL, "J", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 18, 13, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 19, 20, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 21, 22, -1, -1, 23, -1 },
    { NULL, "LNSString;", 0x1, 21, 20, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 21, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexSegmentCommitInfo;", 0x1, 24, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexSegmentInfo:withInt:withLong:withLong:withLong:);
  methods[1].selector = @selector(setGenUpdatesFilesWithJavaUtilMap:);
  methods[2].selector = @selector(getDocValuesUpdatesFiles);
  methods[3].selector = @selector(setDocValuesUpdatesFilesWithJavaUtilMap:);
  methods[4].selector = @selector(getFieldInfosFiles);
  methods[5].selector = @selector(setFieldInfosFilesWithJavaUtilSet:);
  methods[6].selector = @selector(advanceDelGen);
  methods[7].selector = @selector(advanceNextWriteDelGen);
  methods[8].selector = @selector(getNextWriteDelGen);
  methods[9].selector = @selector(setNextWriteDelGenWithLong:);
  methods[10].selector = @selector(advanceFieldInfosGen);
  methods[11].selector = @selector(advanceNextWriteFieldInfosGen);
  methods[12].selector = @selector(getNextWriteFieldInfosGen);
  methods[13].selector = @selector(setNextWriteFieldInfosGenWithLong:);
  methods[14].selector = @selector(advanceDocValuesGen);
  methods[15].selector = @selector(advanceNextWriteDocValuesGen);
  methods[16].selector = @selector(getNextWriteDocValuesGen);
  methods[17].selector = @selector(setNextWriteDocValuesGenWithLong:);
  methods[18].selector = @selector(sizeInBytes);
  methods[19].selector = @selector(files);
  methods[20].selector = @selector(getBufferedDeletesGen);
  methods[21].selector = @selector(setBufferedDeletesGenWithLong:);
  methods[22].selector = @selector(hasDeletions);
  methods[23].selector = @selector(hasFieldUpdates);
  methods[24].selector = @selector(getNextFieldInfosGen);
  methods[25].selector = @selector(getFieldInfosGen);
  methods[26].selector = @selector(getNextDocValuesGen);
  methods[27].selector = @selector(getDocValuesGen);
  methods[28].selector = @selector(getNextDelGen);
  methods[29].selector = @selector(getDelGen);
  methods[30].selector = @selector(getDelCount);
  methods[31].selector = @selector(setDelCountWithInt:);
  methods[32].selector = @selector(toStringWithOrgApacheLuceneStoreDirectory:withInt:);
  methods[33].selector = @selector(toStringWithInt:);
  methods[34].selector = @selector(description);
  methods[35].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "info_", "LOrgApacheLuceneIndexSegmentInfo;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "delCount_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "delGen_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "nextWriteDelGen_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fieldInfosGen_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "nextWriteFieldInfosGen_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "docValuesGen_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "nextWriteDocValuesGen_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "dvUpdatesFiles_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 25, -1 },
    { "fieldInfosFiles_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x12, -1, -1, 26, -1 },
    { "genUpdatesFiles_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 27, 28 },
    { "sizeInBytes_", "J", .constantValue.asLong = 0, 0x42, -1, -1, -1, -1 },
    { "bufferedDeletesGen_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexSegmentInfo;IJJJ", "setGenUpdatesFiles", "LJavaUtilMap;", "(Ljava/util/Map<Ljava/lang/Long;Ljava/util/Set<Ljava/lang/String;>;>;)V", (void *)&OrgApacheLuceneIndexSegmentCommitInfo__Annotations$0, "()Ljava/util/Map<Ljava/lang/Integer;Ljava/util/Set<Ljava/lang/String;>;>;", "setDocValuesUpdatesFiles", "(Ljava/util/Map<Ljava/lang/Integer;Ljava/util/Set<Ljava/lang/String;>;>;)V", "()Ljava/util/Set<Ljava/lang/String;>;", "setFieldInfosFiles", "LJavaUtilSet;", "(Ljava/util/Set<Ljava/lang/String;>;)V", "setNextWriteDelGen", "J", "setNextWriteFieldInfosGen", "setNextWriteDocValuesGen", "LJavaIoIOException;", "()Ljava/util/Collection<Ljava/lang/String;>;", "setBufferedDeletesGen", "setDelCount", "I", "toString", "LOrgApacheLuceneStoreDirectory;I", (void *)&OrgApacheLuceneIndexSegmentCommitInfo__Annotations$1, "clone", "Ljava/util/Map<Ljava/lang/Integer;Ljava/util/Set<Ljava/lang/String;>;>;", "Ljava/util/Set<Ljava/lang/String;>;", "Ljava/util/Map<Ljava/lang/Long;Ljava/util/Set<Ljava/lang/String;>;>;", (void *)&OrgApacheLuceneIndexSegmentCommitInfo__Annotations$2 };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexSegmentCommitInfo = { "SegmentCommitInfo", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x1, 36, 13, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexSegmentCommitInfo;
}

@end

void OrgApacheLuceneIndexSegmentCommitInfo_initWithOrgApacheLuceneIndexSegmentInfo_withInt_withLong_withLong_withLong_(OrgApacheLuceneIndexSegmentCommitInfo *self, OrgApacheLuceneIndexSegmentInfo *info, jint delCount, jlong delGen, jlong fieldInfosGen, jlong docValuesGen) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->dvUpdatesFiles_, new_JavaUtilHashMap_init());
  JreStrongAssignAndConsume(&self->fieldInfosFiles_, new_JavaUtilHashSet_init());
  JreStrongAssignAndConsume(&self->genUpdatesFiles_, new_JavaUtilHashMap_init());
  JreAssignVolatileLong(&self->sizeInBytes_, -1);
  JreStrongAssign(&self->info_, info);
  self->delCount_ = delCount;
  self->delGen_ = delGen;
  self->nextWriteDelGen_ = delGen == -1 ? 1 : delGen + 1;
  self->fieldInfosGen_ = fieldInfosGen;
  self->nextWriteFieldInfosGen_ = fieldInfosGen == -1 ? 1 : fieldInfosGen + 1;
  self->docValuesGen_ = docValuesGen;
  self->nextWriteDocValuesGen_ = docValuesGen == -1 ? 1 : docValuesGen + 1;
}

OrgApacheLuceneIndexSegmentCommitInfo *new_OrgApacheLuceneIndexSegmentCommitInfo_initWithOrgApacheLuceneIndexSegmentInfo_withInt_withLong_withLong_withLong_(OrgApacheLuceneIndexSegmentInfo *info, jint delCount, jlong delGen, jlong fieldInfosGen, jlong docValuesGen) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexSegmentCommitInfo, initWithOrgApacheLuceneIndexSegmentInfo_withInt_withLong_withLong_withLong_, info, delCount, delGen, fieldInfosGen, docValuesGen)
}

OrgApacheLuceneIndexSegmentCommitInfo *create_OrgApacheLuceneIndexSegmentCommitInfo_initWithOrgApacheLuceneIndexSegmentInfo_withInt_withLong_withLong_withLong_(OrgApacheLuceneIndexSegmentInfo *info, jint delCount, jlong delGen, jlong fieldInfosGen, jlong docValuesGen) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexSegmentCommitInfo, initWithOrgApacheLuceneIndexSegmentInfo_withInt_withLong_withLong_withLong_, info, delCount, delGen, fieldInfosGen, docValuesGen)
}

IOSObjectArray *OrgApacheLuceneIndexSegmentCommitInfo__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneIndexSegmentCommitInfo__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneIndexSegmentCommitInfo__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexSegmentCommitInfo)
