//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/TrackingIndexWriter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Iterable.h"
#include "java/util/concurrent/atomic/AtomicLong.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/IndexWriter.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/index/TrackingIndexWriter.h"
#include "org/apache/lucene/search/Query.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/index/TrackingIndexWriter must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneIndexTrackingIndexWriter () {
 @public
  OrgApacheLuceneIndexIndexWriter *writer_;
  JavaUtilConcurrentAtomicAtomicLong *indexingGen_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexTrackingIndexWriter, writer_, OrgApacheLuceneIndexIndexWriter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexTrackingIndexWriter, indexingGen_, JavaUtilConcurrentAtomicAtomicLong *)

@implementation OrgApacheLuceneIndexTrackingIndexWriter

- (instancetype)initWithOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer {
  OrgApacheLuceneIndexTrackingIndexWriter_initWithOrgApacheLuceneIndexIndexWriter_(self, writer);
  return self;
}

- (jlong)updateDocumentWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)t
                               withJavaLangIterable:(id<JavaLangIterable>)d {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) updateDocumentWithOrgApacheLuceneIndexTerm:t withJavaLangIterable:d];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)updateDocumentsWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)t
                                withJavaLangIterable:(id<JavaLangIterable>)docs {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) updateDocumentsWithOrgApacheLuceneIndexTerm:t withJavaLangIterable:docs];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)deleteDocumentsWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)t {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) deleteDocumentsWithOrgApacheLuceneIndexTermArray:[IOSObjectArray arrayWithObjects:(id[]){ t } count:1 type:OrgApacheLuceneIndexTerm_class_()]];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)deleteDocumentsWithOrgApacheLuceneIndexTermArray:(IOSObjectArray *)terms {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) deleteDocumentsWithOrgApacheLuceneIndexTermArray:terms];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)deleteDocumentsWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)q {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) deleteDocumentsWithOrgApacheLuceneSearchQueryArray:[IOSObjectArray arrayWithObjects:(id[]){ q } count:1 type:OrgApacheLuceneSearchQuery_class_()]];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)deleteDocumentsWithOrgApacheLuceneSearchQueryArray:(IOSObjectArray *)queries {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) deleteDocumentsWithOrgApacheLuceneSearchQueryArray:queries];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)deleteAll {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) deleteAll];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)addDocumentWithJavaLangIterable:(id<JavaLangIterable>)d {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) addDocumentWithJavaLangIterable:d];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)addDocumentsWithJavaLangIterable:(id<JavaLangIterable>)docs {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) addDocumentsWithJavaLangIterable:docs];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)addIndexesWithOrgApacheLuceneStoreDirectoryArray:(IOSObjectArray *)dirs {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) addIndexesWithOrgApacheLuceneStoreDirectoryArray:dirs];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)addIndexesWithOrgApacheLuceneIndexCodecReaderArray:(IOSObjectArray *)readers {
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) addIndexesWithOrgApacheLuceneIndexCodecReaderArray:readers];
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (jlong)getGeneration {
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
}

- (OrgApacheLuceneIndexIndexWriter *)getIndexWriter {
  return writer_;
}

- (jlong)getAndIncrementGeneration {
  return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) getAndIncrement];
}

- (jlong)tryDeleteDocumentWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                      withInt:(jint)docID {
  if ([((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) tryDeleteDocumentWithOrgApacheLuceneIndexIndexReader:reader withInt:docID]) {
    return [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(indexingGen_)) get];
  }
  else {
    return -1;
  }
}

- (void)dealloc {
  RELEASE_(writer_);
  RELEASE_(indexingGen_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 1, 2, 3, 4, -1, -1 },
    { NULL, "J", 0x1, 5, 2, 3, 6, -1, -1 },
    { NULL, "J", 0x1, 7, 8, 3, -1, -1, -1 },
    { NULL, "J", 0x81, 7, 9, 3, -1, -1, -1 },
    { NULL, "J", 0x1, 7, 10, 3, -1, -1, -1 },
    { NULL, "J", 0x81, 7, 11, 3, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "J", 0x1, 12, 13, 3, 14, -1, -1 },
    { NULL, "J", 0x1, 15, 13, 3, 16, -1, -1 },
    { NULL, "J", 0x81, 17, 18, 3, -1, -1, -1 },
    { NULL, "J", 0x81, 17, 19, 3, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriter;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 20, 21, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexIndexWriter:);
  methods[1].selector = @selector(updateDocumentWithOrgApacheLuceneIndexTerm:withJavaLangIterable:);
  methods[2].selector = @selector(updateDocumentsWithOrgApacheLuceneIndexTerm:withJavaLangIterable:);
  methods[3].selector = @selector(deleteDocumentsWithOrgApacheLuceneIndexTerm:);
  methods[4].selector = @selector(deleteDocumentsWithOrgApacheLuceneIndexTermArray:);
  methods[5].selector = @selector(deleteDocumentsWithOrgApacheLuceneSearchQuery:);
  methods[6].selector = @selector(deleteDocumentsWithOrgApacheLuceneSearchQueryArray:);
  methods[7].selector = @selector(deleteAll);
  methods[8].selector = @selector(addDocumentWithJavaLangIterable:);
  methods[9].selector = @selector(addDocumentsWithJavaLangIterable:);
  methods[10].selector = @selector(addIndexesWithOrgApacheLuceneStoreDirectoryArray:);
  methods[11].selector = @selector(addIndexesWithOrgApacheLuceneIndexCodecReaderArray:);
  methods[12].selector = @selector(getGeneration);
  methods[13].selector = @selector(getIndexWriter);
  methods[14].selector = @selector(getAndIncrementGeneration);
  methods[15].selector = @selector(tryDeleteDocumentWithOrgApacheLuceneIndexIndexReader:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "writer_", "LOrgApacheLuceneIndexIndexWriter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "indexingGen_", "LJavaUtilConcurrentAtomicAtomicLong;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexIndexWriter;", "updateDocument", "LOrgApacheLuceneIndexTerm;LJavaLangIterable;", "LJavaIoIOException;", "(Lorg/apache/lucene/index/Term;Ljava/lang/Iterable<+Lorg/apache/lucene/index/IndexableField;>;)J", "updateDocuments", "(Lorg/apache/lucene/index/Term;Ljava/lang/Iterable<+Ljava/lang/Iterable<+Lorg/apache/lucene/index/IndexableField;>;>;)J", "deleteDocuments", "LOrgApacheLuceneIndexTerm;", "[LOrgApacheLuceneIndexTerm;", "LOrgApacheLuceneSearchQuery;", "[LOrgApacheLuceneSearchQuery;", "addDocument", "LJavaLangIterable;", "(Ljava/lang/Iterable<+Lorg/apache/lucene/index/IndexableField;>;)J", "addDocuments", "(Ljava/lang/Iterable<+Ljava/lang/Iterable<+Lorg/apache/lucene/index/IndexableField;>;>;)J", "addIndexes", "[LOrgApacheLuceneStoreDirectory;", "[LOrgApacheLuceneIndexCodecReader;", "tryDeleteDocument", "LOrgApacheLuceneIndexIndexReader;I" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexTrackingIndexWriter = { "TrackingIndexWriter", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x1, 16, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexTrackingIndexWriter;
}

@end

void OrgApacheLuceneIndexTrackingIndexWriter_initWithOrgApacheLuceneIndexIndexWriter_(OrgApacheLuceneIndexTrackingIndexWriter *self, OrgApacheLuceneIndexIndexWriter *writer) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->indexingGen_, new_JavaUtilConcurrentAtomicAtomicLong_initWithLong_(1));
  JreStrongAssign(&self->writer_, writer);
}

OrgApacheLuceneIndexTrackingIndexWriter *new_OrgApacheLuceneIndexTrackingIndexWriter_initWithOrgApacheLuceneIndexIndexWriter_(OrgApacheLuceneIndexIndexWriter *writer) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexTrackingIndexWriter, initWithOrgApacheLuceneIndexIndexWriter_, writer)
}

OrgApacheLuceneIndexTrackingIndexWriter *create_OrgApacheLuceneIndexTrackingIndexWriter_initWithOrgApacheLuceneIndexIndexWriter_(OrgApacheLuceneIndexIndexWriter *writer) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexTrackingIndexWriter, initWithOrgApacheLuceneIndexIndexWriter_, writer)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexTrackingIndexWriter)
