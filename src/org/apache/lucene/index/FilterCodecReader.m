//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/FilterCodecReader.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/codecs/DocValuesProducer.h"
#include "org/apache/lucene/codecs/FieldsProducer.h"
#include "org/apache/lucene/codecs/NormsProducer.h"
#include "org/apache/lucene/codecs/StoredFieldsReader.h"
#include "org/apache/lucene/codecs/TermVectorsReader.h"
#include "org/apache/lucene/index/CodecReader.h"
#include "org/apache/lucene/index/FieldInfos.h"
#include "org/apache/lucene/index/FilterCodecReader.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/util/Bits.h"
#include "org/lukhnos/portmobile/util/Objects.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/index/FilterCodecReader must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneIndexFilterCodecReader

- (instancetype)initWithOrgApacheLuceneIndexCodecReader:(OrgApacheLuceneIndexCodecReader *)inArg {
  OrgApacheLuceneIndexFilterCodecReader_initWithOrgApacheLuceneIndexCodecReader_(self, inArg);
  return self;
}

- (OrgApacheLuceneCodecsStoredFieldsReader *)getFieldsReader {
  return [((OrgApacheLuceneIndexCodecReader *) nil_chk(in_)) getFieldsReader];
}

- (OrgApacheLuceneCodecsTermVectorsReader *)getTermVectorsReader {
  return [((OrgApacheLuceneIndexCodecReader *) nil_chk(in_)) getTermVectorsReader];
}

- (OrgApacheLuceneCodecsNormsProducer *)getNormsReader {
  return [((OrgApacheLuceneIndexCodecReader *) nil_chk(in_)) getNormsReader];
}

- (OrgApacheLuceneCodecsDocValuesProducer *)getDocValuesReader {
  return [((OrgApacheLuceneIndexCodecReader *) nil_chk(in_)) getDocValuesReader];
}

- (OrgApacheLuceneCodecsFieldsProducer *)getPostingsReader {
  return [((OrgApacheLuceneIndexCodecReader *) nil_chk(in_)) getPostingsReader];
}

- (id<OrgApacheLuceneUtilBits>)getLiveDocs {
  return [((OrgApacheLuceneIndexCodecReader *) nil_chk(in_)) getLiveDocs];
}

- (OrgApacheLuceneIndexFieldInfos *)getFieldInfos {
  return [((OrgApacheLuceneIndexCodecReader *) nil_chk(in_)) getFieldInfos];
}

- (jint)numDocs {
  return [((OrgApacheLuceneIndexCodecReader *) nil_chk(in_)) numDocs];
}

- (jint)maxDoc {
  return [((OrgApacheLuceneIndexCodecReader *) nil_chk(in_)) maxDoc];
}

- (void)addCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:(id<OrgApacheLuceneIndexLeafReader_CoreClosedListener>)listener {
  [((OrgApacheLuceneIndexCodecReader *) nil_chk(in_)) addCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:listener];
}

- (void)removeCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:(id<OrgApacheLuceneIndexLeafReader_CoreClosedListener>)listener {
  [((OrgApacheLuceneIndexCodecReader *) nil_chk(in_)) removeCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:listener];
}

- (void)dealloc {
  RELEASE_(in_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneCodecsStoredFieldsReader;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneCodecsTermVectorsReader;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneCodecsNormsProducer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneCodecsDocValuesProducer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneCodecsFieldsProducer;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBits;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexFieldInfos;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexCodecReader:);
  methods[1].selector = @selector(getFieldsReader);
  methods[2].selector = @selector(getTermVectorsReader);
  methods[3].selector = @selector(getNormsReader);
  methods[4].selector = @selector(getDocValuesReader);
  methods[5].selector = @selector(getPostingsReader);
  methods[6].selector = @selector(getLiveDocs);
  methods[7].selector = @selector(getFieldInfos);
  methods[8].selector = @selector(numDocs);
  methods[9].selector = @selector(maxDoc);
  methods[10].selector = @selector(addCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:);
  methods[11].selector = @selector(removeCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "in_", "LOrgApacheLuceneIndexCodecReader;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexCodecReader;", "addCoreClosedListener", "LOrgApacheLuceneIndexLeafReader_CoreClosedListener;", "removeCoreClosedListener" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexFilterCodecReader = { "FilterCodecReader", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x1, 12, 1, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexFilterCodecReader;
}

@end

void OrgApacheLuceneIndexFilterCodecReader_initWithOrgApacheLuceneIndexCodecReader_(OrgApacheLuceneIndexFilterCodecReader *self, OrgApacheLuceneIndexCodecReader *inArg) {
  OrgApacheLuceneIndexCodecReader_init(self);
  JreStrongAssign(&self->in_, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_(inArg));
}

OrgApacheLuceneIndexFilterCodecReader *new_OrgApacheLuceneIndexFilterCodecReader_initWithOrgApacheLuceneIndexCodecReader_(OrgApacheLuceneIndexCodecReader *inArg) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexFilterCodecReader, initWithOrgApacheLuceneIndexCodecReader_, inArg)
}

OrgApacheLuceneIndexFilterCodecReader *create_OrgApacheLuceneIndexFilterCodecReader_initWithOrgApacheLuceneIndexCodecReader_(OrgApacheLuceneIndexCodecReader *inArg) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexFilterCodecReader, initWithOrgApacheLuceneIndexCodecReader_, inArg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexFilterCodecReader)
