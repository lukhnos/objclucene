//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/NormValuesWriter.java
//

#include "J2ObjC_source.h"
#include "java/lang/Iterable.h"
#include "java/lang/Long.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/Iterator.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/Spliterator.h"
#include "java/util/function/Consumer.h"
#include "org/apache/lucene/codecs/NormsConsumer.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/NormValuesWriter.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/index/SegmentWriteState.h"
#include "org/apache/lucene/util/Counter.h"
#include "org/apache/lucene/util/packed/PackedInts.h"
#include "org/apache/lucene/util/packed/PackedLongValues.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/index/NormValuesWriter must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneIndexNormValuesWriter () {
 @public
  OrgApacheLuceneUtilPackedPackedLongValues_Builder *pending_;
  OrgApacheLuceneUtilCounter *iwBytesUsed_;
  jlong bytesUsed_;
  OrgApacheLuceneIndexFieldInfo *fieldInfo_;
}

- (void)updateBytesUsed;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexNormValuesWriter, pending_, OrgApacheLuceneUtilPackedPackedLongValues_Builder *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexNormValuesWriter, iwBytesUsed_, OrgApacheLuceneUtilCounter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexNormValuesWriter, fieldInfo_, OrgApacheLuceneIndexFieldInfo *)

inline jlong OrgApacheLuceneIndexNormValuesWriter_get_MISSING(void);
#define OrgApacheLuceneIndexNormValuesWriter_MISSING 0LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneIndexNormValuesWriter, MISSING, jlong)

__attribute__((unused)) static void OrgApacheLuceneIndexNormValuesWriter_updateBytesUsed(OrgApacheLuceneIndexNormValuesWriter *self);

@interface OrgApacheLuceneIndexNormValuesWriter_1 : NSObject < JavaLangIterable > {
 @public
  jint val$maxDoc_;
  OrgApacheLuceneUtilPackedPackedLongValues *val$values_;
}

- (instancetype)initWithInt:(jint)capture$0
withOrgApacheLuceneUtilPackedPackedLongValues:(OrgApacheLuceneUtilPackedPackedLongValues *)capture$1;

- (id<JavaUtilIterator>)iterator;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexNormValuesWriter_1)

__attribute__((unused)) static void OrgApacheLuceneIndexNormValuesWriter_1_initWithInt_withOrgApacheLuceneUtilPackedPackedLongValues_(OrgApacheLuceneIndexNormValuesWriter_1 *self, jint capture$0, OrgApacheLuceneUtilPackedPackedLongValues *capture$1);

__attribute__((unused)) static OrgApacheLuceneIndexNormValuesWriter_1 *new_OrgApacheLuceneIndexNormValuesWriter_1_initWithInt_withOrgApacheLuceneUtilPackedPackedLongValues_(jint capture$0, OrgApacheLuceneUtilPackedPackedLongValues *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexNormValuesWriter_1 *create_OrgApacheLuceneIndexNormValuesWriter_1_initWithInt_withOrgApacheLuceneUtilPackedPackedLongValues_(jint capture$0, OrgApacheLuceneUtilPackedPackedLongValues *capture$1);

@interface OrgApacheLuceneIndexNormValuesWriter_NumericIterator : NSObject < JavaUtilIterator > {
 @public
  OrgApacheLuceneUtilPackedPackedLongValues_Iterator *iter_;
  jint size_;
  jint maxDoc_;
  jint upto_;
}

- (instancetype)initWithInt:(jint)maxDoc
withOrgApacheLuceneUtilPackedPackedLongValues:(OrgApacheLuceneUtilPackedPackedLongValues *)values;

- (jboolean)hasNext;

- (NSNumber *)next;

- (void)remove;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexNormValuesWriter_NumericIterator)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexNormValuesWriter_NumericIterator, iter_, OrgApacheLuceneUtilPackedPackedLongValues_Iterator *)

__attribute__((unused)) static void OrgApacheLuceneIndexNormValuesWriter_NumericIterator_initWithInt_withOrgApacheLuceneUtilPackedPackedLongValues_(OrgApacheLuceneIndexNormValuesWriter_NumericIterator *self, jint maxDoc, OrgApacheLuceneUtilPackedPackedLongValues *values);

__attribute__((unused)) static OrgApacheLuceneIndexNormValuesWriter_NumericIterator *new_OrgApacheLuceneIndexNormValuesWriter_NumericIterator_initWithInt_withOrgApacheLuceneUtilPackedPackedLongValues_(jint maxDoc, OrgApacheLuceneUtilPackedPackedLongValues *values) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexNormValuesWriter_NumericIterator *create_OrgApacheLuceneIndexNormValuesWriter_NumericIterator_initWithInt_withOrgApacheLuceneUtilPackedPackedLongValues_(jint maxDoc, OrgApacheLuceneUtilPackedPackedLongValues *values);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexNormValuesWriter_NumericIterator)

@implementation OrgApacheLuceneIndexNormValuesWriter

- (instancetype)initPackagePrivateWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo
                                     withOrgApacheLuceneUtilCounter:(OrgApacheLuceneUtilCounter *)iwBytesUsed {
  OrgApacheLuceneIndexNormValuesWriter_initPackagePrivateWithOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneUtilCounter_(self, fieldInfo, iwBytesUsed);
  return self;
}

- (void)addValueWithInt:(jint)docID
               withLong:(jlong)value {
  for (jint i = (jint) [((OrgApacheLuceneUtilPackedPackedLongValues_Builder *) nil_chk(pending_)) size]; i < docID; ++i) {
    [((OrgApacheLuceneUtilPackedPackedLongValues_Builder *) nil_chk(pending_)) addWithLong:OrgApacheLuceneIndexNormValuesWriter_MISSING];
  }
  [((OrgApacheLuceneUtilPackedPackedLongValues_Builder *) nil_chk(pending_)) addWithLong:value];
  OrgApacheLuceneIndexNormValuesWriter_updateBytesUsed(self);
}

- (void)updateBytesUsed {
  OrgApacheLuceneIndexNormValuesWriter_updateBytesUsed(self);
}

- (void)finishWithInt:(jint)maxDoc {
}

- (void)flushWithOrgApacheLuceneIndexSegmentWriteState:(OrgApacheLuceneIndexSegmentWriteState *)state
                withOrgApacheLuceneCodecsNormsConsumer:(OrgApacheLuceneCodecsNormsConsumer *)normsConsumer {
  jint maxDoc = [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentWriteState *) nil_chk(state))->segmentInfo_)) maxDoc];
  OrgApacheLuceneUtilPackedPackedLongValues *values = [((OrgApacheLuceneUtilPackedPackedLongValues_Builder *) nil_chk(pending_)) build];
  [((OrgApacheLuceneCodecsNormsConsumer *) nil_chk(normsConsumer)) addNormsFieldWithOrgApacheLuceneIndexFieldInfo:fieldInfo_ withJavaLangIterable:create_OrgApacheLuceneIndexNormValuesWriter_1_initWithInt_withOrgApacheLuceneUtilPackedPackedLongValues_(maxDoc, values)];
}

- (void)dealloc {
  RELEASE_(pending_);
  RELEASE_(iwBytesUsed_);
  RELEASE_(fieldInfo_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, 7, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgApacheLuceneIndexFieldInfo:withOrgApacheLuceneUtilCounter:);
  methods[1].selector = @selector(addValueWithInt:withLong:);
  methods[2].selector = @selector(updateBytesUsed);
  methods[3].selector = @selector(finishWithInt:);
  methods[4].selector = @selector(flushWithOrgApacheLuceneIndexSegmentWriteState:withOrgApacheLuceneCodecsNormsConsumer:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MISSING", "J", .constantValue.asLong = OrgApacheLuceneIndexNormValuesWriter_MISSING, 0x1a, -1, -1, -1, -1 },
    { "pending_", "LOrgApacheLuceneUtilPackedPackedLongValues_Builder;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "iwBytesUsed_", "LOrgApacheLuceneUtilCounter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "bytesUsed_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fieldInfo_", "LOrgApacheLuceneIndexFieldInfo;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexFieldInfo;LOrgApacheLuceneUtilCounter;", "addValue", "IJ", "finish", "I", "flush", "LOrgApacheLuceneIndexSegmentWriteState;LOrgApacheLuceneCodecsNormsConsumer;", "LJavaIoIOException;", "LOrgApacheLuceneIndexNormValuesWriter_NumericIterator;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexNormValuesWriter = { "NormValuesWriter", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x0, 5, 5, -1, 8, -1, -1, -1 };
  return &_OrgApacheLuceneIndexNormValuesWriter;
}

@end

void OrgApacheLuceneIndexNormValuesWriter_initPackagePrivateWithOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneUtilCounter_(OrgApacheLuceneIndexNormValuesWriter *self, OrgApacheLuceneIndexFieldInfo *fieldInfo, OrgApacheLuceneUtilCounter *iwBytesUsed) {
  NSObject_init(self);
  JreStrongAssign(&self->pending_, OrgApacheLuceneUtilPackedPackedLongValues_deltaPackedBuilderWithFloat_(OrgApacheLuceneUtilPackedPackedInts_COMPACT));
  self->bytesUsed_ = [((OrgApacheLuceneUtilPackedPackedLongValues_Builder *) nil_chk(self->pending_)) ramBytesUsed];
  JreStrongAssign(&self->fieldInfo_, fieldInfo);
  JreStrongAssign(&self->iwBytesUsed_, iwBytesUsed);
  [((OrgApacheLuceneUtilCounter *) nil_chk(iwBytesUsed)) addAndGetWithLong:self->bytesUsed_];
}

OrgApacheLuceneIndexNormValuesWriter *new_OrgApacheLuceneIndexNormValuesWriter_initPackagePrivateWithOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneUtilCounter_(OrgApacheLuceneIndexFieldInfo *fieldInfo, OrgApacheLuceneUtilCounter *iwBytesUsed) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexNormValuesWriter, initPackagePrivateWithOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneUtilCounter_, fieldInfo, iwBytesUsed)
}

OrgApacheLuceneIndexNormValuesWriter *create_OrgApacheLuceneIndexNormValuesWriter_initPackagePrivateWithOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneUtilCounter_(OrgApacheLuceneIndexFieldInfo *fieldInfo, OrgApacheLuceneUtilCounter *iwBytesUsed) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexNormValuesWriter, initPackagePrivateWithOrgApacheLuceneIndexFieldInfo_withOrgApacheLuceneUtilCounter_, fieldInfo, iwBytesUsed)
}

void OrgApacheLuceneIndexNormValuesWriter_updateBytesUsed(OrgApacheLuceneIndexNormValuesWriter *self) {
  jlong newBytesUsed = [((OrgApacheLuceneUtilPackedPackedLongValues_Builder *) nil_chk(self->pending_)) ramBytesUsed];
  [((OrgApacheLuceneUtilCounter *) nil_chk(self->iwBytesUsed_)) addAndGetWithLong:newBytesUsed - self->bytesUsed_];
  self->bytesUsed_ = newBytesUsed;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexNormValuesWriter)

@implementation OrgApacheLuceneIndexNormValuesWriter_1

- (instancetype)initWithInt:(jint)capture$0
withOrgApacheLuceneUtilPackedPackedLongValues:(OrgApacheLuceneUtilPackedPackedLongValues *)capture$1 {
  OrgApacheLuceneIndexNormValuesWriter_1_initWithInt_withOrgApacheLuceneUtilPackedPackedLongValues_(self, capture$0, capture$1);
  return self;
}

- (id<JavaUtilIterator>)iterator {
  return create_OrgApacheLuceneIndexNormValuesWriter_NumericIterator_initWithInt_withOrgApacheLuceneUtilPackedPackedLongValues_(val$maxDoc_, val$values_);
}

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

- (void)dealloc {
  RELEASE_(val$values_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withOrgApacheLuceneUtilPackedPackedLongValues:);
  methods[1].selector = @selector(iterator);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$maxDoc_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$values_", "LOrgApacheLuceneUtilPackedPackedLongValues;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ILOrgApacheLuceneUtilPackedPackedLongValues;", "()Ljava/util/Iterator<Ljava/lang/Number;>;", "LOrgApacheLuceneIndexNormValuesWriter;", "flushWithOrgApacheLuceneIndexSegmentWriteState:withOrgApacheLuceneCodecsNormsConsumer:", "Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexNormValuesWriter_1 = { "", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x8010, 2, 2, 2, -1, 3, 4, -1 };
  return &_OrgApacheLuceneIndexNormValuesWriter_1;
}

@end

void OrgApacheLuceneIndexNormValuesWriter_1_initWithInt_withOrgApacheLuceneUtilPackedPackedLongValues_(OrgApacheLuceneIndexNormValuesWriter_1 *self, jint capture$0, OrgApacheLuceneUtilPackedPackedLongValues *capture$1) {
  self->val$maxDoc_ = capture$0;
  JreStrongAssign(&self->val$values_, capture$1);
  NSObject_init(self);
}

OrgApacheLuceneIndexNormValuesWriter_1 *new_OrgApacheLuceneIndexNormValuesWriter_1_initWithInt_withOrgApacheLuceneUtilPackedPackedLongValues_(jint capture$0, OrgApacheLuceneUtilPackedPackedLongValues *capture$1) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexNormValuesWriter_1, initWithInt_withOrgApacheLuceneUtilPackedPackedLongValues_, capture$0, capture$1)
}

OrgApacheLuceneIndexNormValuesWriter_1 *create_OrgApacheLuceneIndexNormValuesWriter_1_initWithInt_withOrgApacheLuceneUtilPackedPackedLongValues_(jint capture$0, OrgApacheLuceneUtilPackedPackedLongValues *capture$1) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexNormValuesWriter_1, initWithInt_withOrgApacheLuceneUtilPackedPackedLongValues_, capture$0, capture$1)
}

@implementation OrgApacheLuceneIndexNormValuesWriter_NumericIterator

- (instancetype)initWithInt:(jint)maxDoc
withOrgApacheLuceneUtilPackedPackedLongValues:(OrgApacheLuceneUtilPackedPackedLongValues *)values {
  OrgApacheLuceneIndexNormValuesWriter_NumericIterator_initWithInt_withOrgApacheLuceneUtilPackedPackedLongValues_(self, maxDoc, values);
  return self;
}

- (jboolean)hasNext {
  return upto_ < maxDoc_;
}

- (NSNumber *)next {
  if (![self hasNext]) {
    @throw create_JavaUtilNoSuchElementException_init();
  }
  JavaLangLong *value;
  if (upto_ < size_) {
    value = JavaLangLong_valueOfWithLong_([((OrgApacheLuceneUtilPackedPackedLongValues_Iterator *) nil_chk(iter_)) next]);
  }
  else {
    value = JavaLangLong_valueOfWithLong_(OrgApacheLuceneIndexNormValuesWriter_MISSING);
  }
  upto_++;
  return value;
}

- (void)remove {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

- (void)dealloc {
  RELEASE_(iter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withOrgApacheLuceneUtilPackedPackedLongValues:);
  methods[1].selector = @selector(hasNext);
  methods[2].selector = @selector(next);
  methods[3].selector = @selector(remove);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "iter_", "LOrgApacheLuceneUtilPackedPackedLongValues_Iterator;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "size_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "maxDoc_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "upto_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ILOrgApacheLuceneUtilPackedPackedLongValues;", "LOrgApacheLuceneIndexNormValuesWriter;", "Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexNormValuesWriter_NumericIterator = { "NumericIterator", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0xa, 4, 4, 1, -1, -1, 2, -1 };
  return &_OrgApacheLuceneIndexNormValuesWriter_NumericIterator;
}

@end

void OrgApacheLuceneIndexNormValuesWriter_NumericIterator_initWithInt_withOrgApacheLuceneUtilPackedPackedLongValues_(OrgApacheLuceneIndexNormValuesWriter_NumericIterator *self, jint maxDoc, OrgApacheLuceneUtilPackedPackedLongValues *values) {
  NSObject_init(self);
  self->maxDoc_ = maxDoc;
  JreStrongAssign(&self->iter_, [((OrgApacheLuceneUtilPackedPackedLongValues *) nil_chk(values)) iterator]);
  self->size_ = (jint) [values size];
}

OrgApacheLuceneIndexNormValuesWriter_NumericIterator *new_OrgApacheLuceneIndexNormValuesWriter_NumericIterator_initWithInt_withOrgApacheLuceneUtilPackedPackedLongValues_(jint maxDoc, OrgApacheLuceneUtilPackedPackedLongValues *values) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexNormValuesWriter_NumericIterator, initWithInt_withOrgApacheLuceneUtilPackedPackedLongValues_, maxDoc, values)
}

OrgApacheLuceneIndexNormValuesWriter_NumericIterator *create_OrgApacheLuceneIndexNormValuesWriter_NumericIterator_initWithInt_withOrgApacheLuceneUtilPackedPackedLongValues_(jint maxDoc, OrgApacheLuceneUtilPackedPackedLongValues *values) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexNormValuesWriter_NumericIterator, initWithInt_withOrgApacheLuceneUtilPackedPackedLongValues_, maxDoc, values)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexNormValuesWriter_NumericIterator)
