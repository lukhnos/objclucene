//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/IndexUpgrader.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/PrintStream.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Package.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/util/Collection.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "org/apache/lucene/index/DirectoryReader.h"
#include "org/apache/lucene/index/IndexNotFoundException.h"
#include "org/apache/lucene/index/IndexUpgrader.h"
#include "org/apache/lucene/index/IndexWriter.h"
#include "org/apache/lucene/index/IndexWriterConfig.h"
#include "org/apache/lucene/index/KeepOnlyLastCommitDeletionPolicy.h"
#include "org/apache/lucene/index/MergePolicy.h"
#include "org/apache/lucene/index/UpgradeIndexMergePolicy.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/FSDirectory.h"
#include "org/apache/lucene/util/CommandLineUtil.h"
#include "org/apache/lucene/util/InfoStream.h"
#include "org/apache/lucene/util/PrintStreamInfoStream.h"
#include "org/apache/lucene/util/Version.h"
#include "org/lukhnos/portmobile/file/Path.h"
#include "org/lukhnos/portmobile/file/Paths.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/index/IndexUpgrader must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneIndexIndexUpgrader () {
 @public
  OrgApacheLuceneStoreDirectory *dir_;
  OrgApacheLuceneIndexIndexWriterConfig *iwc_;
  jboolean deletePriorCommits_;
}

+ (void)printUsage;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexIndexUpgrader, dir_, OrgApacheLuceneStoreDirectory *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexIndexUpgrader, iwc_, OrgApacheLuceneIndexIndexWriterConfig *)

inline NSString *OrgApacheLuceneIndexIndexUpgrader_get_LOG_PREFIX(void);
static NSString *OrgApacheLuceneIndexIndexUpgrader_LOG_PREFIX = @"IndexUpgrader";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneIndexIndexUpgrader, LOG_PREFIX, NSString *)

__attribute__((unused)) static void OrgApacheLuceneIndexIndexUpgrader_printUsage(void);

@implementation OrgApacheLuceneIndexIndexUpgrader

+ (void)printUsage {
  OrgApacheLuceneIndexIndexUpgrader_printUsage();
}

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  OrgApacheLuceneIndexIndexUpgrader_mainWithNSStringArray_(args);
}

+ (OrgApacheLuceneIndexIndexUpgrader *)parseArgsWithNSStringArray:(IOSObjectArray *)args {
  return OrgApacheLuceneIndexIndexUpgrader_parseArgsWithNSStringArray_(args);
}

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir {
  OrgApacheLuceneIndexIndexUpgrader_initWithOrgApacheLuceneStoreDirectory_(self, dir);
  return self;
}

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                    withOrgApacheLuceneUtilInfoStream:(OrgApacheLuceneUtilInfoStream *)infoStream
                                          withBoolean:(jboolean)deletePriorCommits {
  OrgApacheLuceneIndexIndexUpgrader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneUtilInfoStream_withBoolean_(self, dir, infoStream, deletePriorCommits);
  return self;
}

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
            withOrgApacheLuceneIndexIndexWriterConfig:(OrgApacheLuceneIndexIndexWriterConfig *)iwc
                                          withBoolean:(jboolean)deletePriorCommits {
  OrgApacheLuceneIndexIndexUpgrader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexIndexWriterConfig_withBoolean_(self, dir, iwc, deletePriorCommits);
  return self;
}

- (void)upgrade {
  if (!OrgApacheLuceneIndexDirectoryReader_indexExistsWithOrgApacheLuceneStoreDirectory_(dir_)) {
    @throw create_OrgApacheLuceneIndexIndexNotFoundException_initWithNSString_([((OrgApacheLuceneStoreDirectory *) nil_chk(dir_)) description]);
  }
  if (!deletePriorCommits_) {
    id<JavaUtilCollection> commits = OrgApacheLuceneIndexDirectoryReader_listCommitsWithOrgApacheLuceneStoreDirectory_(dir_);
    if ([((id<JavaUtilCollection>) nil_chk(commits)) size] > 1) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"This tool was invoked to not delete prior commit points, but the following commits were found: ", commits));
    }
  }
  [((OrgApacheLuceneIndexIndexWriterConfig *) nil_chk(iwc_)) setMergePolicyWithOrgApacheLuceneIndexMergePolicy:create_OrgApacheLuceneIndexUpgradeIndexMergePolicy_initWithOrgApacheLuceneIndexMergePolicy_([iwc_ getMergePolicy])];
  [iwc_ setIndexDeletionPolicyWithOrgApacheLuceneIndexIndexDeletionPolicy:create_OrgApacheLuceneIndexKeepOnlyLastCommitDeletionPolicy_init()];
  {
    OrgApacheLuceneIndexIndexWriter *w = create_OrgApacheLuceneIndexIndexWriter_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexIndexWriterConfig_(dir_, iwc_);
    JavaLangThrowable *__primaryException1 = nil;
    @try {
      OrgApacheLuceneUtilInfoStream *infoStream = JreRetainedLocalValue([iwc_ getInfoStream]);
      if ([((OrgApacheLuceneUtilInfoStream *) nil_chk(infoStream)) isEnabledWithNSString:OrgApacheLuceneIndexIndexUpgrader_LOG_PREFIX]) {
        [infoStream messageWithNSString:OrgApacheLuceneIndexIndexUpgrader_LOG_PREFIX withNSString:JreStrcat("$@$@$@$", @"Upgrading all pre-", JreLoadStatic(OrgApacheLuceneUtilVersion, LATEST), @" segments of index directory '", dir_, @"' to version ", JreLoadStatic(OrgApacheLuceneUtilVersion, LATEST), @"...")];
      }
      [w forceMergeWithInt:1];
      if ([infoStream isEnabledWithNSString:OrgApacheLuceneIndexIndexUpgrader_LOG_PREFIX]) {
        [infoStream messageWithNSString:OrgApacheLuceneIndexIndexUpgrader_LOG_PREFIX withNSString:JreStrcat("$@", @"All segments upgraded to version ", JreLoadStatic(OrgApacheLuceneUtilVersion, LATEST))];
        [infoStream messageWithNSString:OrgApacheLuceneIndexIndexUpgrader_LOG_PREFIX withNSString:@"Enforcing commit to rewrite all index metadata..."];
      }
      [w setCommitDataWithJavaUtilMap:[w getCommitData]];
      JreAssert([w hasUncommittedChanges], @"org/apache/lucene/index/IndexUpgrader.java:178 condition failed: assert w.hasUncommittedChanges();");
      [w commit];
      if ([infoStream isEnabledWithNSString:OrgApacheLuceneIndexIndexUpgrader_LOG_PREFIX]) {
        [infoStream messageWithNSString:OrgApacheLuceneIndexIndexUpgrader_LOG_PREFIX withNSString:@"Committed upgraded metadata to index."];
      }
    }
    @catch (JavaLangThrowable *e) {
      __primaryException1 = e;
      @throw e;
    }
    @finally {
      if (w != nil) {
        if (__primaryException1 != nil) {
          @try {
            [w close];
          }
          @catch (JavaLangThrowable *e) {
            [__primaryException1 addSuppressedWithJavaLangThrowable:e];
          }
        }
        else {
          [w close];
        }
      }
    }
  }
}

- (void)dealloc {
  RELEASE_(dir_);
  RELEASE_(iwc_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, 2, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexUpgrader;", 0x8, 3, 1, 2, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(printUsage);
  methods[1].selector = @selector(mainWithNSStringArray:);
  methods[2].selector = @selector(parseArgsWithNSStringArray:);
  methods[3].selector = @selector(initWithOrgApacheLuceneStoreDirectory:);
  methods[4].selector = @selector(initWithOrgApacheLuceneStoreDirectory:withOrgApacheLuceneUtilInfoStream:withBoolean:);
  methods[5].selector = @selector(initWithOrgApacheLuceneStoreDirectory:withOrgApacheLuceneIndexIndexWriterConfig:withBoolean:);
  methods[6].selector = @selector(upgrade);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LOG_PREFIX", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
    { "dir_", "LOrgApacheLuceneStoreDirectory;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "iwc_", "LOrgApacheLuceneIndexIndexWriterConfig;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "deletePriorCommits_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "main", "[LNSString;", "LJavaIoIOException;", "parseArgs", "LOrgApacheLuceneStoreDirectory;", "LOrgApacheLuceneStoreDirectory;LOrgApacheLuceneUtilInfoStream;Z", "LOrgApacheLuceneStoreDirectory;LOrgApacheLuceneIndexIndexWriterConfig;Z", &OrgApacheLuceneIndexIndexUpgrader_LOG_PREFIX };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexIndexUpgrader = { "IndexUpgrader", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x11, 7, 4, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexIndexUpgrader;
}

@end

void OrgApacheLuceneIndexIndexUpgrader_printUsage() {
  OrgApacheLuceneIndexIndexUpgrader_initialize();
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:@"Upgrades an index so all segments created with a previous Lucene version are rewritten."];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:@"Usage:"];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$$$", @"  java ", [OrgApacheLuceneIndexIndexUpgrader_class_() getName], @" [-delete-prior-commits] [-verbose] [-dir-impl X] indexDir")];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:@"This tool keeps only the last commit in an index; for this"];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:@"reason, if the incoming index has more than one commit, the tool"];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:@"refuses to run by default. Specify -delete-prior-commits to override"];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:@"this, allowing the tool to delete all but the last commit."];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$$$$$", @"Specify a ", [OrgApacheLuceneStoreFSDirectory_class_() getSimpleName], @" implementation through the -dir-impl option to force its use. If no package is specified the ", [((JavaLangPackage *) nil_chk([OrgApacheLuceneStoreFSDirectory_class_() getPackage])) getName], @" package will be used.")];
  [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:@"WARNING: This tool may reorder document IDs!"];
  JavaLangSystem_exitWithInt_(1);
}

void OrgApacheLuceneIndexIndexUpgrader_mainWithNSStringArray_(IOSObjectArray *args) {
  OrgApacheLuceneIndexIndexUpgrader_initialize();
  [((OrgApacheLuceneIndexIndexUpgrader *) nil_chk(OrgApacheLuceneIndexIndexUpgrader_parseArgsWithNSStringArray_(args))) upgrade];
}

OrgApacheLuceneIndexIndexUpgrader *OrgApacheLuceneIndexIndexUpgrader_parseArgsWithNSStringArray_(IOSObjectArray *args) {
  OrgApacheLuceneIndexIndexUpgrader_initialize();
  NSString *path = nil;
  jboolean deletePriorCommits = false;
  OrgApacheLuceneUtilInfoStream *out = nil;
  NSString *dirImpl = nil;
  jint i = 0;
  while (i < ((IOSObjectArray *) nil_chk(args))->size_) {
    NSString *arg = IOSObjectArray_Get(args, i);
    if ([@"-delete-prior-commits" isEqual:arg]) {
      deletePriorCommits = true;
    }
    else if ([@"-verbose" isEqual:arg]) {
      out = create_OrgApacheLuceneUtilPrintStreamInfoStream_initWithJavaIoPrintStream_(JreLoadStatic(JavaLangSystem, out));
    }
    else if ([@"-dir-impl" isEqual:arg]) {
      if (i == args->size_ - 1) {
        [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:@"ERROR: missing value for -dir-impl option"];
        JavaLangSystem_exitWithInt_(1);
      }
      i++;
      dirImpl = IOSObjectArray_Get(args, i);
    }
    else if (path == nil) {
      path = arg;
    }
    else {
      OrgApacheLuceneIndexIndexUpgrader_printUsage();
    }
    i++;
  }
  if (path == nil) {
    OrgApacheLuceneIndexIndexUpgrader_printUsage();
  }
  OrgLukhnosPortmobileFilePath *p = OrgLukhnosPortmobileFilePaths_getWithNSString_(path);
  OrgApacheLuceneStoreDirectory *dir = nil;
  if (dirImpl == nil) {
    dir = OrgApacheLuceneStoreFSDirectory_openWithOrgLukhnosPortmobileFilePath_(p);
  }
  else {
    dir = OrgApacheLuceneUtilCommandLineUtil_newFSDirectoryWithNSString_withOrgLukhnosPortmobileFilePath_(dirImpl, p);
  }
  return create_OrgApacheLuceneIndexIndexUpgrader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneUtilInfoStream_withBoolean_(dir, out, deletePriorCommits);
}

void OrgApacheLuceneIndexIndexUpgrader_initWithOrgApacheLuceneStoreDirectory_(OrgApacheLuceneIndexIndexUpgrader *self, OrgApacheLuceneStoreDirectory *dir) {
  OrgApacheLuceneIndexIndexUpgrader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexIndexWriterConfig_withBoolean_(self, dir, create_OrgApacheLuceneIndexIndexWriterConfig_initWithOrgApacheLuceneAnalysisAnalyzer_(nil), false);
}

OrgApacheLuceneIndexIndexUpgrader *new_OrgApacheLuceneIndexIndexUpgrader_initWithOrgApacheLuceneStoreDirectory_(OrgApacheLuceneStoreDirectory *dir) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexIndexUpgrader, initWithOrgApacheLuceneStoreDirectory_, dir)
}

OrgApacheLuceneIndexIndexUpgrader *create_OrgApacheLuceneIndexIndexUpgrader_initWithOrgApacheLuceneStoreDirectory_(OrgApacheLuceneStoreDirectory *dir) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexIndexUpgrader, initWithOrgApacheLuceneStoreDirectory_, dir)
}

void OrgApacheLuceneIndexIndexUpgrader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneUtilInfoStream_withBoolean_(OrgApacheLuceneIndexIndexUpgrader *self, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneUtilInfoStream *infoStream, jboolean deletePriorCommits) {
  OrgApacheLuceneIndexIndexUpgrader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexIndexWriterConfig_withBoolean_(self, dir, create_OrgApacheLuceneIndexIndexWriterConfig_initWithOrgApacheLuceneAnalysisAnalyzer_(nil), deletePriorCommits);
  if (nil != infoStream) {
    [((OrgApacheLuceneIndexIndexWriterConfig *) nil_chk(self->iwc_)) setInfoStreamWithOrgApacheLuceneUtilInfoStream:infoStream];
  }
}

OrgApacheLuceneIndexIndexUpgrader *new_OrgApacheLuceneIndexIndexUpgrader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneUtilInfoStream_withBoolean_(OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneUtilInfoStream *infoStream, jboolean deletePriorCommits) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexIndexUpgrader, initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneUtilInfoStream_withBoolean_, dir, infoStream, deletePriorCommits)
}

OrgApacheLuceneIndexIndexUpgrader *create_OrgApacheLuceneIndexIndexUpgrader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneUtilInfoStream_withBoolean_(OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneUtilInfoStream *infoStream, jboolean deletePriorCommits) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexIndexUpgrader, initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneUtilInfoStream_withBoolean_, dir, infoStream, deletePriorCommits)
}

void OrgApacheLuceneIndexIndexUpgrader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexIndexWriterConfig_withBoolean_(OrgApacheLuceneIndexIndexUpgrader *self, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneIndexIndexWriterConfig *iwc, jboolean deletePriorCommits) {
  NSObject_init(self);
  JreStrongAssign(&self->dir_, dir);
  JreStrongAssign(&self->iwc_, iwc);
  self->deletePriorCommits_ = deletePriorCommits;
}

OrgApacheLuceneIndexIndexUpgrader *new_OrgApacheLuceneIndexIndexUpgrader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexIndexWriterConfig_withBoolean_(OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneIndexIndexWriterConfig *iwc, jboolean deletePriorCommits) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexIndexUpgrader, initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexIndexWriterConfig_withBoolean_, dir, iwc, deletePriorCommits)
}

OrgApacheLuceneIndexIndexUpgrader *create_OrgApacheLuceneIndexIndexUpgrader_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexIndexWriterConfig_withBoolean_(OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneIndexIndexWriterConfig *iwc, jboolean deletePriorCommits) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexIndexUpgrader, initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexIndexWriterConfig_withBoolean_, dir, iwc, deletePriorCommits)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexIndexUpgrader)
