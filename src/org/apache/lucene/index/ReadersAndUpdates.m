//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/ReadersAndUpdates.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Character.h"
#include "java/lang/Integer.h"
#include "java/lang/Iterable.h"
#include "java/lang/Long.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/Thread.h"
#include "java/lang/Throwable.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/Set.h"
#include "java/util/Spliterator.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "java/util/function/Consumer.h"
#include "org/apache/lucene/codecs/Codec.h"
#include "org/apache/lucene/codecs/DocValuesConsumer.h"
#include "org/apache/lucene/codecs/DocValuesFormat.h"
#include "org/apache/lucene/codecs/FieldInfosFormat.h"
#include "org/apache/lucene/codecs/LiveDocsFormat.h"
#include "org/apache/lucene/index/BinaryDocValues.h"
#include "org/apache/lucene/index/BinaryDocValuesFieldUpdates.h"
#include "org/apache/lucene/index/DocValuesFieldUpdates.h"
#include "org/apache/lucene/index/DocValuesType.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/FieldInfos.h"
#include "org/apache/lucene/index/IndexWriter.h"
#include "org/apache/lucene/index/NumericDocValues.h"
#include "org/apache/lucene/index/NumericDocValuesFieldUpdates.h"
#include "org/apache/lucene/index/ReadersAndUpdates.h"
#include "org/apache/lucene/index/SegmentCommitInfo.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/index/SegmentReader.h"
#include "org/apache/lucene/index/SegmentWriteState.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/FlushInfo.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/store/TrackingDirectoryWrapper.h"
#include "org/apache/lucene/util/Bits.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/MutableBits.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/index/ReadersAndUpdates must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneIndexReadersAndUpdates () {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *refCount_;
  OrgApacheLuceneIndexIndexWriter *writer_;
  OrgApacheLuceneIndexSegmentReader *reader_;
  id<OrgApacheLuceneUtilBits> liveDocs_;
  jint pendingDeleteCount_;
  jboolean liveDocsShared_;
  jboolean isMerging_;
  id<JavaUtilMap> mergingDVUpdates_;
}

- (void)handleNumericDVUpdatesWithOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)infos
                                                 withJavaUtilMap:(id<JavaUtilMap>)updates
                               withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                        withOrgApacheLuceneCodecsDocValuesFormat:(OrgApacheLuceneCodecsDocValuesFormat *)dvFormat
                           withOrgApacheLuceneIndexSegmentReader:(OrgApacheLuceneIndexSegmentReader *)reader
                                                 withJavaUtilMap:(id<JavaUtilMap>)fieldFiles;

- (void)handleBinaryDVUpdatesWithOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)infos
                                                withJavaUtilMap:(id<JavaUtilMap>)updates
               withOrgApacheLuceneStoreTrackingDirectoryWrapper:(OrgApacheLuceneStoreTrackingDirectoryWrapper *)dir
                       withOrgApacheLuceneCodecsDocValuesFormat:(OrgApacheLuceneCodecsDocValuesFormat *)dvFormat
                          withOrgApacheLuceneIndexSegmentReader:(OrgApacheLuceneIndexSegmentReader *)reader
                                                withJavaUtilMap:(id<JavaUtilMap>)fieldFiles;

- (id<JavaUtilSet>)writeFieldInfosGenWithOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)fieldInfos
                                      withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                               withOrgApacheLuceneCodecsDocValuesFormat:(OrgApacheLuceneCodecsDocValuesFormat *)dvFormat
                              withOrgApacheLuceneCodecsFieldInfosFormat:(OrgApacheLuceneCodecsFieldInfosFormat *)infosFormat;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates, refCount_, JavaUtilConcurrentAtomicAtomicInteger *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates, writer_, OrgApacheLuceneIndexIndexWriter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates, reader_, OrgApacheLuceneIndexSegmentReader *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates, liveDocs_, id<OrgApacheLuceneUtilBits>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates, mergingDVUpdates_, id<JavaUtilMap>)

__attribute__((unused)) static void OrgApacheLuceneIndexReadersAndUpdates_handleNumericDVUpdatesWithOrgApacheLuceneIndexFieldInfos_withJavaUtilMap_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneCodecsDocValuesFormat_withOrgApacheLuceneIndexSegmentReader_withJavaUtilMap_(OrgApacheLuceneIndexReadersAndUpdates *self, OrgApacheLuceneIndexFieldInfos *infos, id<JavaUtilMap> updates, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneCodecsDocValuesFormat *dvFormat, OrgApacheLuceneIndexSegmentReader *reader, id<JavaUtilMap> fieldFiles);

__attribute__((unused)) static void OrgApacheLuceneIndexReadersAndUpdates_handleBinaryDVUpdatesWithOrgApacheLuceneIndexFieldInfos_withJavaUtilMap_withOrgApacheLuceneStoreTrackingDirectoryWrapper_withOrgApacheLuceneCodecsDocValuesFormat_withOrgApacheLuceneIndexSegmentReader_withJavaUtilMap_(OrgApacheLuceneIndexReadersAndUpdates *self, OrgApacheLuceneIndexFieldInfos *infos, id<JavaUtilMap> updates, OrgApacheLuceneStoreTrackingDirectoryWrapper *dir, OrgApacheLuceneCodecsDocValuesFormat *dvFormat, OrgApacheLuceneIndexSegmentReader *reader, id<JavaUtilMap> fieldFiles);

__attribute__((unused)) static id<JavaUtilSet> OrgApacheLuceneIndexReadersAndUpdates_writeFieldInfosGenWithOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneCodecsDocValuesFormat_withOrgApacheLuceneCodecsFieldInfosFormat_(OrgApacheLuceneIndexReadersAndUpdates *self, OrgApacheLuceneIndexFieldInfos *fieldInfos, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneCodecsDocValuesFormat *dvFormat, OrgApacheLuceneCodecsFieldInfosFormat *infosFormat);

@interface OrgApacheLuceneIndexReadersAndUpdates_1 : NSObject < JavaLangIterable > {
 @public
  OrgApacheLuceneIndexNumericDocValues *currentValues_;
  id<OrgApacheLuceneUtilBits> docsWithField_;
  jint maxDoc_;
  OrgApacheLuceneIndexNumericDocValuesFieldUpdates_Iterator *updatesIter_;
}

- (instancetype)initWithOrgApacheLuceneIndexSegmentReader:(OrgApacheLuceneIndexSegmentReader *)capture$0
                                             withNSString:(NSString *)capture$1
     withOrgApacheLuceneIndexNumericDocValuesFieldUpdates:(OrgApacheLuceneIndexNumericDocValuesFieldUpdates *)capture$2;

- (id<JavaUtilIterator>)iterator;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexReadersAndUpdates_1)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates_1, currentValues_, OrgApacheLuceneIndexNumericDocValues *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates_1, docsWithField_, id<OrgApacheLuceneUtilBits>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates_1, updatesIter_, OrgApacheLuceneIndexNumericDocValuesFieldUpdates_Iterator *)

__attribute__((unused)) static void OrgApacheLuceneIndexReadersAndUpdates_1_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexNumericDocValuesFieldUpdates_(OrgApacheLuceneIndexReadersAndUpdates_1 *self, OrgApacheLuceneIndexSegmentReader *capture$0, NSString *capture$1, OrgApacheLuceneIndexNumericDocValuesFieldUpdates *capture$2);

__attribute__((unused)) static OrgApacheLuceneIndexReadersAndUpdates_1 *new_OrgApacheLuceneIndexReadersAndUpdates_1_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexNumericDocValuesFieldUpdates_(OrgApacheLuceneIndexSegmentReader *capture$0, NSString *capture$1, OrgApacheLuceneIndexNumericDocValuesFieldUpdates *capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexReadersAndUpdates_1 *create_OrgApacheLuceneIndexReadersAndUpdates_1_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexNumericDocValuesFieldUpdates_(OrgApacheLuceneIndexSegmentReader *capture$0, NSString *capture$1, OrgApacheLuceneIndexNumericDocValuesFieldUpdates *capture$2);

@interface OrgApacheLuceneIndexReadersAndUpdates_1_1 : NSObject < JavaUtilIterator > {
 @public
  OrgApacheLuceneIndexReadersAndUpdates_1 *this$0_;
  jint curDoc_;
  jint updateDoc_;
}

- (instancetype)initWithOrgApacheLuceneIndexReadersAndUpdates_1:(OrgApacheLuceneIndexReadersAndUpdates_1 *)outer$;

- (jboolean)hasNext;

- (NSNumber *)next;

- (void)remove;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexReadersAndUpdates_1_1)

__attribute__((unused)) static void OrgApacheLuceneIndexReadersAndUpdates_1_1_initWithOrgApacheLuceneIndexReadersAndUpdates_1_(OrgApacheLuceneIndexReadersAndUpdates_1_1 *self, OrgApacheLuceneIndexReadersAndUpdates_1 *outer$);

__attribute__((unused)) static OrgApacheLuceneIndexReadersAndUpdates_1_1 *new_OrgApacheLuceneIndexReadersAndUpdates_1_1_initWithOrgApacheLuceneIndexReadersAndUpdates_1_(OrgApacheLuceneIndexReadersAndUpdates_1 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexReadersAndUpdates_1_1 *create_OrgApacheLuceneIndexReadersAndUpdates_1_1_initWithOrgApacheLuceneIndexReadersAndUpdates_1_(OrgApacheLuceneIndexReadersAndUpdates_1 *outer$);

@interface OrgApacheLuceneIndexReadersAndUpdates_2 : NSObject < JavaLangIterable > {
 @public
  OrgApacheLuceneIndexBinaryDocValues *currentValues_;
  id<OrgApacheLuceneUtilBits> docsWithField_;
  jint maxDoc_;
  OrgApacheLuceneIndexBinaryDocValuesFieldUpdates_Iterator *updatesIter_;
}

- (instancetype)initWithOrgApacheLuceneIndexSegmentReader:(OrgApacheLuceneIndexSegmentReader *)capture$0
                                             withNSString:(NSString *)capture$1
      withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates:(OrgApacheLuceneIndexBinaryDocValuesFieldUpdates *)capture$2;

- (id<JavaUtilIterator>)iterator;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexReadersAndUpdates_2)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates_2, currentValues_, OrgApacheLuceneIndexBinaryDocValues *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates_2, docsWithField_, id<OrgApacheLuceneUtilBits>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexReadersAndUpdates_2, updatesIter_, OrgApacheLuceneIndexBinaryDocValuesFieldUpdates_Iterator *)

__attribute__((unused)) static void OrgApacheLuceneIndexReadersAndUpdates_2_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates_(OrgApacheLuceneIndexReadersAndUpdates_2 *self, OrgApacheLuceneIndexSegmentReader *capture$0, NSString *capture$1, OrgApacheLuceneIndexBinaryDocValuesFieldUpdates *capture$2);

__attribute__((unused)) static OrgApacheLuceneIndexReadersAndUpdates_2 *new_OrgApacheLuceneIndexReadersAndUpdates_2_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates_(OrgApacheLuceneIndexSegmentReader *capture$0, NSString *capture$1, OrgApacheLuceneIndexBinaryDocValuesFieldUpdates *capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexReadersAndUpdates_2 *create_OrgApacheLuceneIndexReadersAndUpdates_2_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates_(OrgApacheLuceneIndexSegmentReader *capture$0, NSString *capture$1, OrgApacheLuceneIndexBinaryDocValuesFieldUpdates *capture$2);

@interface OrgApacheLuceneIndexReadersAndUpdates_2_1 : NSObject < JavaUtilIterator > {
 @public
  OrgApacheLuceneIndexReadersAndUpdates_2 *this$0_;
  jint curDoc_;
  jint updateDoc_;
}

- (instancetype)initWithOrgApacheLuceneIndexReadersAndUpdates_2:(OrgApacheLuceneIndexReadersAndUpdates_2 *)outer$;

- (jboolean)hasNext;

- (OrgApacheLuceneUtilBytesRef *)next;

- (void)remove;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexReadersAndUpdates_2_1)

__attribute__((unused)) static void OrgApacheLuceneIndexReadersAndUpdates_2_1_initWithOrgApacheLuceneIndexReadersAndUpdates_2_(OrgApacheLuceneIndexReadersAndUpdates_2_1 *self, OrgApacheLuceneIndexReadersAndUpdates_2 *outer$);

__attribute__((unused)) static OrgApacheLuceneIndexReadersAndUpdates_2_1 *new_OrgApacheLuceneIndexReadersAndUpdates_2_1_initWithOrgApacheLuceneIndexReadersAndUpdates_2_(OrgApacheLuceneIndexReadersAndUpdates_2 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneIndexReadersAndUpdates_2_1 *create_OrgApacheLuceneIndexReadersAndUpdates_2_1_initWithOrgApacheLuceneIndexReadersAndUpdates_2_(OrgApacheLuceneIndexReadersAndUpdates_2 *outer$);

@implementation OrgApacheLuceneIndexReadersAndUpdates

- (instancetype)initPackagePrivateWithOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer
                            withOrgApacheLuceneIndexSegmentCommitInfo:(OrgApacheLuceneIndexSegmentCommitInfo *)info {
  OrgApacheLuceneIndexReadersAndUpdates_initPackagePrivateWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentCommitInfo_(self, writer, info);
  return self;
}

- (instancetype)initPackagePrivateWithOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer
                                withOrgApacheLuceneIndexSegmentReader:(OrgApacheLuceneIndexSegmentReader *)reader {
  OrgApacheLuceneIndexReadersAndUpdates_initPackagePrivateWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentReader_(self, writer, reader);
  return self;
}

- (void)incRef {
  jint rc = [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(refCount_)) incrementAndGet];
  JreAssert(rc > 1, @"org/apache/lucene/index/ReadersAndUpdates.java:105 condition failed: assert rc > 1;");
}

- (void)decRef {
  jint rc = [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(refCount_)) decrementAndGet];
  JreAssert(rc >= 0, @"org/apache/lucene/index/ReadersAndUpdates.java:110 condition failed: assert rc >= 0;");
}

- (jint)refCount {
  jint rc = [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(refCount_)) get];
  JreAssert(rc >= 0, @"org/apache/lucene/index/ReadersAndUpdates.java:115 condition failed: assert rc >= 0;");
  return rc;
}

- (jint)getPendingDeleteCount {
  @synchronized(self) {
    return pendingDeleteCount_;
  }
}

- (jboolean)verifyDocCounts {
  @synchronized(self) {
    jint count;
    if (liveDocs_ != nil) {
      count = 0;
      for (jint docID = 0; docID < [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info_))->info_)) maxDoc]; docID++) {
        if ([((id<OrgApacheLuceneUtilBits>) nil_chk(liveDocs_)) getWithInt:docID]) {
          count++;
        }
      }
    }
    else {
      count = [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info_))->info_)) maxDoc];
    }
    JreAssert([info_->info_ maxDoc] - [info_ getDelCount] - pendingDeleteCount_ == count, JreStrcat("$I$I$I$I", @"info.maxDoc=", [info_->info_ maxDoc], @" info.getDelCount()=", [info_ getDelCount], @" pendingDeleteCount=", pendingDeleteCount_, @" count=", count));
    return true;
  }
}

- (OrgApacheLuceneIndexSegmentReader *)getReaderWithOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context {
  if (reader_ == nil) {
    JreStrongAssignAndConsume(&reader_, new_OrgApacheLuceneIndexSegmentReader_initWithOrgApacheLuceneIndexSegmentCommitInfo_withOrgApacheLuceneStoreIOContext_(info_, context));
    if (liveDocs_ == nil) {
      JreStrongAssign(&liveDocs_, [reader_ getLiveDocs]);
    }
  }
  [((OrgApacheLuceneIndexSegmentReader *) nil_chk(reader_)) incRef];
  return reader_;
}

- (void)release__WithOrgApacheLuceneIndexSegmentReader:(OrgApacheLuceneIndexSegmentReader *)sr {
  @synchronized(self) {
    JreAssert(JreObjectEqualsEquals(info_, [((OrgApacheLuceneIndexSegmentReader *) nil_chk(sr)) getSegmentInfo]), @"org/apache/lucene/index/ReadersAndUpdates.java:157 condition failed: assert info == sr.getSegmentInfo();");
    [sr decRef];
  }
}

- (jboolean)delete__WithInt:(jint)docID {
  @synchronized(self) {
    JreAssert(liveDocs_ != nil, @"org/apache/lucene/index/ReadersAndUpdates.java:162 condition failed: assert liveDocs != null;");
    JreAssert(JavaLangThread_holdsLockWithId_(writer_), @"org/apache/lucene/index/ReadersAndUpdates.java:163 condition failed: assert Thread.holdsLock(writer);");
    JreAssert(docID >= 0 && docID < [((id<OrgApacheLuceneUtilBits>) nil_chk(liveDocs_)) length], JreStrcat("$I$I$$$I", @"out of bounds: docid=", docID, @" liveDocsLength=", [((id<OrgApacheLuceneUtilBits>) nil_chk(liveDocs_)) length], @" seg=", ((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info_))->info_))->name_, @" maxDoc=", [info_->info_ maxDoc]));
    JreAssert(!liveDocsShared_, @"org/apache/lucene/index/ReadersAndUpdates.java:165 condition failed: assert !liveDocsShared;");
    jboolean didDelete = [((id<OrgApacheLuceneUtilBits>) nil_chk(liveDocs_)) getWithInt:docID];
    if (didDelete) {
      [((id<OrgApacheLuceneUtilMutableBits>) nil_chk(((id<OrgApacheLuceneUtilMutableBits>) cast_check(liveDocs_, OrgApacheLuceneUtilMutableBits_class_())))) clearWithInt:docID];
      pendingDeleteCount_++;
    }
    return didDelete;
  }
}

- (void)dropReaders {
  @synchronized(self) {
    if (reader_ != nil) {
      @try {
        [reader_ decRef];
      }
      @finally {
        JreStrongAssign(&reader_, nil);
      }
    }
    [self decRef];
  }
}

- (OrgApacheLuceneIndexSegmentReader *)getReadOnlyCloneWithOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context {
  @synchronized(self) {
    if (reader_ == nil) {
      [((OrgApacheLuceneIndexSegmentReader *) nil_chk([self getReaderWithOrgApacheLuceneStoreIOContext:context])) decRef];
      JreAssert(reader_ != nil, @"org/apache/lucene/index/ReadersAndUpdates.java:198 condition failed: assert reader != null;");
    }
    liveDocsShared_ = true;
    if (liveDocs_ != nil) {
      return create_OrgApacheLuceneIndexSegmentReader_initWithOrgApacheLuceneIndexSegmentCommitInfo_withOrgApacheLuceneIndexSegmentReader_withOrgApacheLuceneUtilBits_withInt_([((OrgApacheLuceneIndexSegmentReader *) nil_chk(reader_)) getSegmentInfo], reader_, liveDocs_, [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info_))->info_)) maxDoc] - [info_ getDelCount] - pendingDeleteCount_);
    }
    else {
      JreAssert([((OrgApacheLuceneIndexSegmentReader *) nil_chk(reader_)) getLiveDocs] == nil, @"org/apache/lucene/index/ReadersAndUpdates.java:206 condition failed: assert reader.getLiveDocs() == null;");
      [((OrgApacheLuceneIndexSegmentReader *) nil_chk(reader_)) incRef];
      return JreRetainedLocalValue(reader_);
    }
  }
}

- (void)initWritableLiveDocs {
  @synchronized(self) {
    JreAssert(JavaLangThread_holdsLockWithId_(writer_), @"org/apache/lucene/index/ReadersAndUpdates.java:213 condition failed: assert Thread.holdsLock(writer);");
    JreAssert([((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info_))->info_)) maxDoc] > 0, @"org/apache/lucene/index/ReadersAndUpdates.java:214 condition failed: assert info.info.maxDoc() > 0;");
    if (liveDocsShared_) {
      OrgApacheLuceneCodecsLiveDocsFormat *liveDocsFormat = JreRetainedLocalValue([((OrgApacheLuceneCodecsCodec *) nil_chk([info_->info_ getCodec])) liveDocsFormat]);
      if (liveDocs_ == nil) {
        JreStrongAssign(&liveDocs_, [((OrgApacheLuceneCodecsLiveDocsFormat *) nil_chk(liveDocsFormat)) newLiveDocsWithInt:[info_->info_ maxDoc]]);
      }
      else {
        JreStrongAssign(&liveDocs_, [((OrgApacheLuceneCodecsLiveDocsFormat *) nil_chk(liveDocsFormat)) newLiveDocsWithOrgApacheLuceneUtilBits:liveDocs_]);
      }
      liveDocsShared_ = false;
    }
  }
}

- (id<OrgApacheLuceneUtilBits>)getLiveDocs {
  @synchronized(self) {
    JreAssert(JavaLangThread_holdsLockWithId_(writer_), @"org/apache/lucene/index/ReadersAndUpdates.java:233 condition failed: assert Thread.holdsLock(writer);");
    return JreRetainedLocalValue(liveDocs_);
  }
}

- (id<OrgApacheLuceneUtilBits>)getReadOnlyLiveDocs {
  @synchronized(self) {
    JreAssert(JavaLangThread_holdsLockWithId_(writer_), @"org/apache/lucene/index/ReadersAndUpdates.java:239 condition failed: assert Thread.holdsLock(writer);");
    liveDocsShared_ = true;
    return JreRetainedLocalValue(liveDocs_);
  }
}

- (void)dropChanges {
  @synchronized(self) {
    pendingDeleteCount_ = 0;
    [self dropMergingUpdates];
  }
}

- (jboolean)writeLiveDocsWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir {
  @synchronized(self) {
    JreAssert(JavaLangThread_holdsLockWithId_(writer_), @"org/apache/lucene/index/ReadersAndUpdates.java:263 condition failed: assert Thread.holdsLock(writer);");
    if (pendingDeleteCount_ == 0) {
      return false;
    }
    JreAssert([((id<OrgApacheLuceneUtilBits>) nil_chk(liveDocs_)) length] == [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info_))->info_)) maxDoc], @"org/apache/lucene/index/ReadersAndUpdates.java:270 condition failed: assert liveDocs.length() == info.info.maxDoc();");
    OrgApacheLuceneStoreTrackingDirectoryWrapper *trackingDir = create_OrgApacheLuceneStoreTrackingDirectoryWrapper_initWithOrgApacheLuceneStoreDirectory_(dir);
    jboolean success = false;
    @try {
      OrgApacheLuceneCodecsCodec *codec = JreRetainedLocalValue([info_->info_ getCodec]);
      [((OrgApacheLuceneCodecsLiveDocsFormat *) nil_chk([((OrgApacheLuceneCodecsCodec *) nil_chk(codec)) liveDocsFormat])) writeLiveDocsWithOrgApacheLuceneUtilMutableBits:(id<OrgApacheLuceneUtilMutableBits>) cast_check(liveDocs_, OrgApacheLuceneUtilMutableBits_class_()) withOrgApacheLuceneStoreDirectory:trackingDir withOrgApacheLuceneIndexSegmentCommitInfo:info_ withInt:pendingDeleteCount_ withOrgApacheLuceneStoreIOContext:JreLoadStatic(OrgApacheLuceneStoreIOContext, DEFAULT)];
      success = true;
    }
    @finally {
      if (!success) {
        [info_ advanceNextWriteDelGen];
        for (NSString * __strong fileName in nil_chk([trackingDir getCreatedFiles])) {
          OrgApacheLuceneUtilIOUtils_deleteFilesIgnoringExceptionsWithOrgApacheLuceneStoreDirectory_withNSStringArray_(dir, [IOSObjectArray arrayWithObjects:(id[]){ fileName } count:1 type:NSString_class_()]);
        }
      }
    }
    [info_ advanceDelGen];
    [info_ setDelCountWithInt:[info_ getDelCount] + pendingDeleteCount_];
    pendingDeleteCount_ = 0;
    return true;
  }
}

- (void)handleNumericDVUpdatesWithOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)infos
                                                 withJavaUtilMap:(id<JavaUtilMap>)updates
                               withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                        withOrgApacheLuceneCodecsDocValuesFormat:(OrgApacheLuceneCodecsDocValuesFormat *)dvFormat
                           withOrgApacheLuceneIndexSegmentReader:(OrgApacheLuceneIndexSegmentReader *)reader
                                                 withJavaUtilMap:(id<JavaUtilMap>)fieldFiles {
  OrgApacheLuceneIndexReadersAndUpdates_handleNumericDVUpdatesWithOrgApacheLuceneIndexFieldInfos_withJavaUtilMap_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneCodecsDocValuesFormat_withOrgApacheLuceneIndexSegmentReader_withJavaUtilMap_(self, infos, updates, dir, dvFormat, reader, fieldFiles);
}

- (void)handleBinaryDVUpdatesWithOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)infos
                                                withJavaUtilMap:(id<JavaUtilMap>)updates
               withOrgApacheLuceneStoreTrackingDirectoryWrapper:(OrgApacheLuceneStoreTrackingDirectoryWrapper *)dir
                       withOrgApacheLuceneCodecsDocValuesFormat:(OrgApacheLuceneCodecsDocValuesFormat *)dvFormat
                          withOrgApacheLuceneIndexSegmentReader:(OrgApacheLuceneIndexSegmentReader *)reader
                                                withJavaUtilMap:(id<JavaUtilMap>)fieldFiles {
  OrgApacheLuceneIndexReadersAndUpdates_handleBinaryDVUpdatesWithOrgApacheLuceneIndexFieldInfos_withJavaUtilMap_withOrgApacheLuceneStoreTrackingDirectoryWrapper_withOrgApacheLuceneCodecsDocValuesFormat_withOrgApacheLuceneIndexSegmentReader_withJavaUtilMap_(self, infos, updates, dir, dvFormat, reader, fieldFiles);
}

- (id<JavaUtilSet>)writeFieldInfosGenWithOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)fieldInfos
                                      withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                               withOrgApacheLuceneCodecsDocValuesFormat:(OrgApacheLuceneCodecsDocValuesFormat *)dvFormat
                              withOrgApacheLuceneCodecsFieldInfosFormat:(OrgApacheLuceneCodecsFieldInfosFormat *)infosFormat {
  return OrgApacheLuceneIndexReadersAndUpdates_writeFieldInfosGenWithOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneCodecsDocValuesFormat_withOrgApacheLuceneCodecsFieldInfosFormat_(self, fieldInfos, dir, dvFormat, infosFormat);
}

- (void)writeFieldUpdatesWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
   withOrgApacheLuceneIndexDocValuesFieldUpdates_Container:(OrgApacheLuceneIndexDocValuesFieldUpdates_Container *)dvUpdates {
  @synchronized(self) {
    JreAssert(JavaLangThread_holdsLockWithId_(writer_), @"org/apache/lucene/index/ReadersAndUpdates.java:472 condition failed: assert Thread.holdsLock(writer);");
    JreAssert([((OrgApacheLuceneIndexDocValuesFieldUpdates_Container *) nil_chk(dvUpdates)) any], @"org/apache/lucene/index/ReadersAndUpdates.java:475 condition failed: assert dvUpdates.any();");
    OrgApacheLuceneStoreTrackingDirectoryWrapper *trackingDir = create_OrgApacheLuceneStoreTrackingDirectoryWrapper_initWithOrgApacheLuceneStoreDirectory_(dir);
    id<JavaUtilMap> newDVFiles = create_JavaUtilHashMap_init();
    id<JavaUtilSet> fieldInfosFiles = nil;
    OrgApacheLuceneIndexFieldInfos *fieldInfos = nil;
    jboolean success = false;
    @try {
      OrgApacheLuceneCodecsCodec *codec = [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(info_))->info_)) getCodec];
      OrgApacheLuceneIndexSegmentReader *reader = self->reader_ == nil ? create_OrgApacheLuceneIndexSegmentReader_initWithOrgApacheLuceneIndexSegmentCommitInfo_withOrgApacheLuceneStoreIOContext_(info_, JreLoadStatic(OrgApacheLuceneStoreIOContext, READONCE)) : self->reader_;
      @try {
        OrgApacheLuceneIndexFieldInfos_Builder *builder = create_OrgApacheLuceneIndexFieldInfos_Builder_initWithOrgApacheLuceneIndexFieldInfos_FieldNumbers_(((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_))->globalFieldNumberMap_);
        for (OrgApacheLuceneIndexFieldInfo * __strong fi in nil_chk([reader getFieldInfos])) {
          OrgApacheLuceneIndexFieldInfo *clone = JreRetainedLocalValue([builder addWithOrgApacheLuceneIndexFieldInfo:fi]);
          for (id<JavaUtilMap_Entry> __strong e in nil_chk([((id<JavaUtilMap>) nil_chk([((OrgApacheLuceneIndexFieldInfo *) nil_chk(fi)) attributes])) entrySet])) {
            [((OrgApacheLuceneIndexFieldInfo *) nil_chk(clone)) putAttributeWithNSString:[((id<JavaUtilMap_Entry>) nil_chk(e)) getKey] withNSString:[e getValue]];
          }
          [((OrgApacheLuceneIndexFieldInfo *) nil_chk(clone)) setDocValuesGenWithLong:[fi getDocValuesGen]];
        }
        for (NSString * __strong f in nil_chk([((id<JavaUtilMap>) nil_chk(dvUpdates->numericDVUpdates_)) keySet])) {
          OrgApacheLuceneIndexFieldInfo *fieldInfo = JreRetainedLocalValue([builder getOrAddWithNSString:f]);
          [((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo)) setDocValuesTypeWithOrgApacheLuceneIndexDocValuesType:JreLoadEnum(OrgApacheLuceneIndexDocValuesType, NUMERIC)];
        }
        for (NSString * __strong f in nil_chk([((id<JavaUtilMap>) nil_chk(dvUpdates->binaryDVUpdates_)) keySet])) {
          OrgApacheLuceneIndexFieldInfo *fieldInfo = JreRetainedLocalValue([builder getOrAddWithNSString:f]);
          [((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo)) setDocValuesTypeWithOrgApacheLuceneIndexDocValuesType:JreLoadEnum(OrgApacheLuceneIndexDocValuesType, BINARY)];
        }
        fieldInfos = [builder finish];
        OrgApacheLuceneCodecsDocValuesFormat *docValuesFormat = [((OrgApacheLuceneCodecsCodec *) nil_chk(codec)) docValuesFormat];
        OrgApacheLuceneIndexReadersAndUpdates_handleNumericDVUpdatesWithOrgApacheLuceneIndexFieldInfos_withJavaUtilMap_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneCodecsDocValuesFormat_withOrgApacheLuceneIndexSegmentReader_withJavaUtilMap_(self, fieldInfos, dvUpdates->numericDVUpdates_, trackingDir, docValuesFormat, reader, newDVFiles);
        OrgApacheLuceneIndexReadersAndUpdates_handleBinaryDVUpdatesWithOrgApacheLuceneIndexFieldInfos_withJavaUtilMap_withOrgApacheLuceneStoreTrackingDirectoryWrapper_withOrgApacheLuceneCodecsDocValuesFormat_withOrgApacheLuceneIndexSegmentReader_withJavaUtilMap_(self, fieldInfos, dvUpdates->binaryDVUpdates_, trackingDir, docValuesFormat, reader, newDVFiles);
        fieldInfosFiles = OrgApacheLuceneIndexReadersAndUpdates_writeFieldInfosGenWithOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneCodecsDocValuesFormat_withOrgApacheLuceneCodecsFieldInfosFormat_(self, fieldInfos, trackingDir, docValuesFormat, [codec fieldInfosFormat]);
      }
      @finally {
        if (!JreObjectEqualsEquals(reader, self->reader_)) {
          [reader close];
        }
      }
      success = true;
    }
    @finally {
      if (!success) {
        [info_ advanceNextWriteFieldInfosGen];
        [info_ advanceNextWriteDocValuesGen];
        for (NSString * __strong fileName in nil_chk([trackingDir getCreatedFiles])) {
          OrgApacheLuceneUtilIOUtils_deleteFilesIgnoringExceptionsWithOrgApacheLuceneStoreDirectory_withNSStringArray_(dir, [IOSObjectArray arrayWithObjects:(id[]){ fileName } count:1 type:NSString_class_()]);
        }
      }
    }
    if (isMerging_) {
      for (id<JavaUtilMap_Entry> __strong e in nil_chk([((id<JavaUtilMap>) nil_chk(dvUpdates->numericDVUpdates_)) entrySet])) {
        OrgApacheLuceneIndexDocValuesFieldUpdates *updates = JreRetainedLocalValue([((id<JavaUtilMap>) nil_chk(mergingDVUpdates_)) getWithId:[((id<JavaUtilMap_Entry>) nil_chk(e)) getKey]]);
        if (updates == nil) {
          [mergingDVUpdates_ putWithId:[e getKey] withId:[e getValue]];
        }
        else {
          [updates mergeWithOrgApacheLuceneIndexDocValuesFieldUpdates:[e getValue]];
        }
      }
      for (id<JavaUtilMap_Entry> __strong e in nil_chk([((id<JavaUtilMap>) nil_chk(dvUpdates->binaryDVUpdates_)) entrySet])) {
        OrgApacheLuceneIndexDocValuesFieldUpdates *updates = JreRetainedLocalValue([((id<JavaUtilMap>) nil_chk(mergingDVUpdates_)) getWithId:[((id<JavaUtilMap_Entry>) nil_chk(e)) getKey]]);
        if (updates == nil) {
          [mergingDVUpdates_ putWithId:[e getKey] withId:[e getValue]];
        }
        else {
          [updates mergeWithOrgApacheLuceneIndexDocValuesFieldUpdates:[e getValue]];
        }
      }
    }
    JreAssert(fieldInfosFiles != nil, @"org/apache/lucene/index/ReadersAndUpdates.java:571 condition failed: assert fieldInfosFiles != null;");
    [info_ setFieldInfosFilesWithJavaUtilSet:fieldInfosFiles];
    JreAssert(![newDVFiles isEmpty], @"org/apache/lucene/index/ReadersAndUpdates.java:578 condition failed: assert !newDVFiles.isEmpty();");
    for (id<JavaUtilMap_Entry> __strong e in nil_chk([((id<JavaUtilMap>) nil_chk([info_ getDocValuesUpdatesFiles])) entrySet])) {
      if (![newDVFiles containsKeyWithId:[((id<JavaUtilMap_Entry>) nil_chk(e)) getKey]]) {
        [newDVFiles putWithId:[e getKey] withId:[e getValue]];
      }
    }
    [info_ setDocValuesUpdatesFilesWithJavaUtilMap:newDVFiles];
    [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) checkpoint];
    if (reader_ != nil) {
      OrgApacheLuceneIndexSegmentReader *newReader = create_OrgApacheLuceneIndexSegmentReader_initWithOrgApacheLuceneIndexSegmentCommitInfo_withOrgApacheLuceneIndexSegmentReader_withOrgApacheLuceneUtilBits_withInt_(info_, reader_, liveDocs_, [info_->info_ maxDoc] - [info_ getDelCount] - pendingDeleteCount_);
      jboolean reopened = false;
      @try {
        [((OrgApacheLuceneIndexSegmentReader *) nil_chk(reader_)) decRef];
        JreStrongAssign(&reader_, newReader);
        reopened = true;
      }
      @finally {
        if (!reopened) {
          [newReader decRef];
        }
      }
    }
  }
}

- (OrgApacheLuceneIndexSegmentReader *)getReaderForMergeWithOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context {
  @synchronized(self) {
    JreAssert(JavaLangThread_holdsLockWithId_(writer_), @"org/apache/lucene/index/ReadersAndUpdates.java:610 condition failed: assert Thread.holdsLock(writer);");
    isMerging_ = true;
    return JreRetainedLocalValue([self getReaderWithOrgApacheLuceneStoreIOContext:context]);
  }
}

- (void)dropMergingUpdates {
  @synchronized(self) {
    [((id<JavaUtilMap>) nil_chk(mergingDVUpdates_)) clear];
    isMerging_ = false;
  }
}

- (id<JavaUtilMap>)getMergingFieldUpdates {
  @synchronized(self) {
    return JreRetainedLocalValue(mergingDVUpdates_);
  }
}

- (NSString *)description {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"ReadersAndLiveDocs(seg="])) appendWithId:info_];
  [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@" pendingDeleteCount="])) appendWithInt:pendingDeleteCount_];
  [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@" liveDocsShared="])) appendWithBoolean:liveDocsShared_];
  return [sb description];
}

- (void)dealloc {
  RELEASE_(info_);
  RELEASE_(refCount_);
  RELEASE_(writer_);
  RELEASE_(reader_);
  RELEASE_(liveDocs_);
  RELEASE_(mergingDVUpdates_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexSegmentReader;", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x21, 5, 6, 4, -1, -1, -1 },
    { NULL, "Z", 0x21, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x21, -1, -1, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexSegmentReader;", 0x21, 9, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x21, -1, -1, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBits;", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBits;", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x21, 10, 11, 4, -1, -1, -1 },
    { NULL, "V", 0x2, 12, 13, 4, 14, -1, -1 },
    { NULL, "V", 0x2, 15, 16, 4, 17, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x2, 18, 19, 4, 20, -1, -1 },
    { NULL, "V", 0x21, 21, 22, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexSegmentReader;", 0x20, 23, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x21, -1, -1, -1, 24, -1, -1 },
    { NULL, "LNSString;", 0x1, 25, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgApacheLuceneIndexIndexWriter:withOrgApacheLuceneIndexSegmentCommitInfo:);
  methods[1].selector = @selector(initPackagePrivateWithOrgApacheLuceneIndexIndexWriter:withOrgApacheLuceneIndexSegmentReader:);
  methods[2].selector = @selector(incRef);
  methods[3].selector = @selector(decRef);
  methods[4].selector = @selector(refCount);
  methods[5].selector = @selector(getPendingDeleteCount);
  methods[6].selector = @selector(verifyDocCounts);
  methods[7].selector = @selector(getReaderWithOrgApacheLuceneStoreIOContext:);
  methods[8].selector = @selector(release__WithOrgApacheLuceneIndexSegmentReader:);
  methods[9].selector = @selector(delete__WithInt:);
  methods[10].selector = @selector(dropReaders);
  methods[11].selector = @selector(getReadOnlyCloneWithOrgApacheLuceneStoreIOContext:);
  methods[12].selector = @selector(initWritableLiveDocs);
  methods[13].selector = @selector(getLiveDocs);
  methods[14].selector = @selector(getReadOnlyLiveDocs);
  methods[15].selector = @selector(dropChanges);
  methods[16].selector = @selector(writeLiveDocsWithOrgApacheLuceneStoreDirectory:);
  methods[17].selector = @selector(handleNumericDVUpdatesWithOrgApacheLuceneIndexFieldInfos:withJavaUtilMap:withOrgApacheLuceneStoreDirectory:withOrgApacheLuceneCodecsDocValuesFormat:withOrgApacheLuceneIndexSegmentReader:withJavaUtilMap:);
  methods[18].selector = @selector(handleBinaryDVUpdatesWithOrgApacheLuceneIndexFieldInfos:withJavaUtilMap:withOrgApacheLuceneStoreTrackingDirectoryWrapper:withOrgApacheLuceneCodecsDocValuesFormat:withOrgApacheLuceneIndexSegmentReader:withJavaUtilMap:);
  methods[19].selector = @selector(writeFieldInfosGenWithOrgApacheLuceneIndexFieldInfos:withOrgApacheLuceneStoreDirectory:withOrgApacheLuceneCodecsDocValuesFormat:withOrgApacheLuceneCodecsFieldInfosFormat:);
  methods[20].selector = @selector(writeFieldUpdatesWithOrgApacheLuceneStoreDirectory:withOrgApacheLuceneIndexDocValuesFieldUpdates_Container:);
  methods[21].selector = @selector(getReaderForMergeWithOrgApacheLuceneStoreIOContext:);
  methods[22].selector = @selector(dropMergingUpdates);
  methods[23].selector = @selector(getMergingFieldUpdates);
  methods[24].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "info_", "LOrgApacheLuceneIndexSegmentCommitInfo;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "refCount_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "writer_", "LOrgApacheLuceneIndexIndexWriter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "reader_", "LOrgApacheLuceneIndexSegmentReader;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "liveDocs_", "LOrgApacheLuceneUtilBits;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pendingDeleteCount_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "liveDocsShared_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "isMerging_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "mergingDVUpdates_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 26, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexIndexWriter;LOrgApacheLuceneIndexSegmentCommitInfo;", "LOrgApacheLuceneIndexIndexWriter;LOrgApacheLuceneIndexSegmentReader;", "getReader", "LOrgApacheLuceneStoreIOContext;", "LJavaIoIOException;", "release", "LOrgApacheLuceneIndexSegmentReader;", "delete", "I", "getReadOnlyClone", "writeLiveDocs", "LOrgApacheLuceneStoreDirectory;", "handleNumericDVUpdates", "LOrgApacheLuceneIndexFieldInfos;LJavaUtilMap;LOrgApacheLuceneStoreDirectory;LOrgApacheLuceneCodecsDocValuesFormat;LOrgApacheLuceneIndexSegmentReader;LJavaUtilMap;", "(Lorg/apache/lucene/index/FieldInfos;Ljava/util/Map<Ljava/lang/String;Lorg/apache/lucene/index/NumericDocValuesFieldUpdates;>;Lorg/apache/lucene/store/Directory;Lorg/apache/lucene/codecs/DocValuesFormat;Lorg/apache/lucene/index/SegmentReader;Ljava/util/Map<Ljava/lang/Integer;Ljava/util/Set<Ljava/lang/String;>;>;)V", "handleBinaryDVUpdates", "LOrgApacheLuceneIndexFieldInfos;LJavaUtilMap;LOrgApacheLuceneStoreTrackingDirectoryWrapper;LOrgApacheLuceneCodecsDocValuesFormat;LOrgApacheLuceneIndexSegmentReader;LJavaUtilMap;", "(Lorg/apache/lucene/index/FieldInfos;Ljava/util/Map<Ljava/lang/String;Lorg/apache/lucene/index/BinaryDocValuesFieldUpdates;>;Lorg/apache/lucene/store/TrackingDirectoryWrapper;Lorg/apache/lucene/codecs/DocValuesFormat;Lorg/apache/lucene/index/SegmentReader;Ljava/util/Map<Ljava/lang/Integer;Ljava/util/Set<Ljava/lang/String;>;>;)V", "writeFieldInfosGen", "LOrgApacheLuceneIndexFieldInfos;LOrgApacheLuceneStoreDirectory;LOrgApacheLuceneCodecsDocValuesFormat;LOrgApacheLuceneCodecsFieldInfosFormat;", "(Lorg/apache/lucene/index/FieldInfos;Lorg/apache/lucene/store/Directory;Lorg/apache/lucene/codecs/DocValuesFormat;Lorg/apache/lucene/codecs/FieldInfosFormat;)Ljava/util/Set<Ljava/lang/String;>;", "writeFieldUpdates", "LOrgApacheLuceneStoreDirectory;LOrgApacheLuceneIndexDocValuesFieldUpdates_Container;", "getReaderForMerge", "()Ljava/util/Map<Ljava/lang/String;Lorg/apache/lucene/index/DocValuesFieldUpdates;>;", "toString", "Ljava/util/Map<Ljava/lang/String;Lorg/apache/lucene/index/DocValuesFieldUpdates;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexReadersAndUpdates = { "ReadersAndUpdates", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x0, 25, 9, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexReadersAndUpdates;
}

@end

void OrgApacheLuceneIndexReadersAndUpdates_initPackagePrivateWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentCommitInfo_(OrgApacheLuceneIndexReadersAndUpdates *self, OrgApacheLuceneIndexIndexWriter *writer, OrgApacheLuceneIndexSegmentCommitInfo *info) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->refCount_, new_JavaUtilConcurrentAtomicAtomicInteger_initWithInt_(1));
  self->isMerging_ = false;
  JreStrongAssignAndConsume(&self->mergingDVUpdates_, new_JavaUtilHashMap_init());
  JreStrongAssign(&self->writer_, writer);
  JreStrongAssign(&self->info_, info);
  self->liveDocsShared_ = true;
}

OrgApacheLuceneIndexReadersAndUpdates *new_OrgApacheLuceneIndexReadersAndUpdates_initPackagePrivateWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentCommitInfo_(OrgApacheLuceneIndexIndexWriter *writer, OrgApacheLuceneIndexSegmentCommitInfo *info) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexReadersAndUpdates, initPackagePrivateWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentCommitInfo_, writer, info)
}

OrgApacheLuceneIndexReadersAndUpdates *create_OrgApacheLuceneIndexReadersAndUpdates_initPackagePrivateWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentCommitInfo_(OrgApacheLuceneIndexIndexWriter *writer, OrgApacheLuceneIndexSegmentCommitInfo *info) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexReadersAndUpdates, initPackagePrivateWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentCommitInfo_, writer, info)
}

void OrgApacheLuceneIndexReadersAndUpdates_initPackagePrivateWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentReader_(OrgApacheLuceneIndexReadersAndUpdates *self, OrgApacheLuceneIndexIndexWriter *writer, OrgApacheLuceneIndexSegmentReader *reader) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->refCount_, new_JavaUtilConcurrentAtomicAtomicInteger_initWithInt_(1));
  self->isMerging_ = false;
  JreStrongAssignAndConsume(&self->mergingDVUpdates_, new_JavaUtilHashMap_init());
  JreStrongAssign(&self->writer_, writer);
  JreStrongAssign(&self->reader_, reader);
  JreStrongAssign(&self->info_, [((OrgApacheLuceneIndexSegmentReader *) nil_chk(reader)) getSegmentInfo]);
  JreStrongAssign(&self->liveDocs_, [reader getLiveDocs]);
  self->liveDocsShared_ = true;
  self->pendingDeleteCount_ = [reader numDeletedDocs] - [((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(self->info_)) getDelCount];
  JreAssert(self->pendingDeleteCount_ >= 0, JreStrcat("$I$I$I$I$I", @"got ", self->pendingDeleteCount_, @" reader.numDeletedDocs()=", [reader numDeletedDocs], @" info.getDelCount()=", [self->info_ getDelCount], @" maxDoc=", [reader maxDoc], @" numDocs=", [reader numDocs]));
}

OrgApacheLuceneIndexReadersAndUpdates *new_OrgApacheLuceneIndexReadersAndUpdates_initPackagePrivateWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentReader_(OrgApacheLuceneIndexIndexWriter *writer, OrgApacheLuceneIndexSegmentReader *reader) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexReadersAndUpdates, initPackagePrivateWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentReader_, writer, reader)
}

OrgApacheLuceneIndexReadersAndUpdates *create_OrgApacheLuceneIndexReadersAndUpdates_initPackagePrivateWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentReader_(OrgApacheLuceneIndexIndexWriter *writer, OrgApacheLuceneIndexSegmentReader *reader) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexReadersAndUpdates, initPackagePrivateWithOrgApacheLuceneIndexIndexWriter_withOrgApacheLuceneIndexSegmentReader_, writer, reader)
}

void OrgApacheLuceneIndexReadersAndUpdates_handleNumericDVUpdatesWithOrgApacheLuceneIndexFieldInfos_withJavaUtilMap_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneCodecsDocValuesFormat_withOrgApacheLuceneIndexSegmentReader_withJavaUtilMap_(OrgApacheLuceneIndexReadersAndUpdates *self, OrgApacheLuceneIndexFieldInfos *infos, id<JavaUtilMap> updates, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneCodecsDocValuesFormat *dvFormat, OrgApacheLuceneIndexSegmentReader *reader, id<JavaUtilMap> fieldFiles) {
  for (id<JavaUtilMap_Entry> __strong e in nil_chk([((id<JavaUtilMap>) nil_chk(updates)) entrySet])) {
    NSString *field = [((id<JavaUtilMap_Entry>) nil_chk(e)) getKey];
    OrgApacheLuceneIndexNumericDocValuesFieldUpdates *fieldUpdates = [e getValue];
    jlong nextDocValuesGen = [((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(self->info_)) getNextDocValuesGen];
    NSString *segmentSuffix = JavaLangLong_toStringWithLong_withInt_(nextDocValuesGen, JavaLangCharacter_MAX_RADIX);
    jlong estUpdatesSize = [((OrgApacheLuceneIndexNumericDocValuesFieldUpdates *) nil_chk(fieldUpdates)) ramBytesPerDoc] * [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(self->info_->info_)) maxDoc];
    OrgApacheLuceneStoreIOContext *updatesContext = create_OrgApacheLuceneStoreIOContext_initWithOrgApacheLuceneStoreFlushInfo_(create_OrgApacheLuceneStoreFlushInfo_initWithInt_withLong_([self->info_->info_ maxDoc], estUpdatesSize));
    OrgApacheLuceneIndexFieldInfo *fieldInfo = [((OrgApacheLuceneIndexFieldInfos *) nil_chk(infos)) fieldInfoWithNSString:field];
    JreAssert(fieldInfo != nil, @"org/apache/lucene/index/ReadersAndUpdates.java:320 condition failed: assert fieldInfo != null;");
    [((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo)) setDocValuesGenWithLong:nextDocValuesGen];
    OrgApacheLuceneIndexFieldInfos *fieldInfos = create_OrgApacheLuceneIndexFieldInfos_initWithOrgApacheLuceneIndexFieldInfoArray_([IOSObjectArray arrayWithObjects:(id[]){ fieldInfo } count:1 type:OrgApacheLuceneIndexFieldInfo_class_()]);
    OrgApacheLuceneStoreTrackingDirectoryWrapper *trackingDir = create_OrgApacheLuceneStoreTrackingDirectoryWrapper_initWithOrgApacheLuceneStoreDirectory_(dir);
    OrgApacheLuceneIndexSegmentWriteState *state = create_OrgApacheLuceneIndexSegmentWriteState_initWithOrgApacheLuceneUtilInfoStream_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentInfo_withOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneIndexBufferedUpdates_withOrgApacheLuceneStoreIOContext_withNSString_(nil, trackingDir, self->info_->info_, fieldInfos, nil, updatesContext, segmentSuffix);
    {
      OrgApacheLuceneCodecsDocValuesConsumer *fieldsConsumer = [((OrgApacheLuceneCodecsDocValuesFormat *) nil_chk(dvFormat)) fieldsConsumerWithOrgApacheLuceneIndexSegmentWriteState:state];
      JavaLangThrowable *__primaryException1 = nil;
      @try {
        [((OrgApacheLuceneCodecsDocValuesConsumer *) nil_chk(fieldsConsumer)) addNumericFieldWithOrgApacheLuceneIndexFieldInfo:fieldInfo withJavaLangIterable:create_OrgApacheLuceneIndexReadersAndUpdates_1_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexNumericDocValuesFieldUpdates_(reader, field, fieldUpdates)];
      }
      @catch (JavaLangThrowable *e) {
        __primaryException1 = e;
        @throw e;
      }
      @finally {
        if (fieldsConsumer != nil) {
          if (__primaryException1 != nil) {
            @try {
              [fieldsConsumer close];
            }
            @catch (JavaLangThrowable *e) {
              [__primaryException1 addSuppressedWithJavaLangThrowable:e];
            }
          }
          else {
            [fieldsConsumer close];
          }
        }
      }
    }
    [self->info_ advanceDocValuesGen];
    JreAssert(![((id<JavaUtilMap>) nil_chk(fieldFiles)) containsKeyWithId:JavaLangInteger_valueOfWithInt_(fieldInfo->number_)], @"org/apache/lucene/index/ReadersAndUpdates.java:376 condition failed: assert !fieldFiles.containsKey(fieldInfo.number);");
    [fieldFiles putWithId:JavaLangInteger_valueOfWithInt_(fieldInfo->number_) withId:[trackingDir getCreatedFiles]];
  }
}

void OrgApacheLuceneIndexReadersAndUpdates_handleBinaryDVUpdatesWithOrgApacheLuceneIndexFieldInfos_withJavaUtilMap_withOrgApacheLuceneStoreTrackingDirectoryWrapper_withOrgApacheLuceneCodecsDocValuesFormat_withOrgApacheLuceneIndexSegmentReader_withJavaUtilMap_(OrgApacheLuceneIndexReadersAndUpdates *self, OrgApacheLuceneIndexFieldInfos *infos, id<JavaUtilMap> updates, OrgApacheLuceneStoreTrackingDirectoryWrapper *dir, OrgApacheLuceneCodecsDocValuesFormat *dvFormat, OrgApacheLuceneIndexSegmentReader *reader, id<JavaUtilMap> fieldFiles) {
  for (id<JavaUtilMap_Entry> __strong e in nil_chk([((id<JavaUtilMap>) nil_chk(updates)) entrySet])) {
    NSString *field = [((id<JavaUtilMap_Entry>) nil_chk(e)) getKey];
    OrgApacheLuceneIndexBinaryDocValuesFieldUpdates *fieldUpdates = [e getValue];
    jlong nextDocValuesGen = [((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(self->info_)) getNextDocValuesGen];
    NSString *segmentSuffix = JavaLangLong_toStringWithLong_withInt_(nextDocValuesGen, JavaLangCharacter_MAX_RADIX);
    jlong estUpdatesSize = [((OrgApacheLuceneIndexBinaryDocValuesFieldUpdates *) nil_chk(fieldUpdates)) ramBytesPerDoc] * [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(self->info_->info_)) maxDoc];
    OrgApacheLuceneStoreIOContext *updatesContext = create_OrgApacheLuceneStoreIOContext_initWithOrgApacheLuceneStoreFlushInfo_(create_OrgApacheLuceneStoreFlushInfo_initWithInt_withLong_([self->info_->info_ maxDoc], estUpdatesSize));
    OrgApacheLuceneIndexFieldInfo *fieldInfo = [((OrgApacheLuceneIndexFieldInfos *) nil_chk(infos)) fieldInfoWithNSString:field];
    JreAssert(fieldInfo != nil, @"org/apache/lucene/index/ReadersAndUpdates.java:393 condition failed: assert fieldInfo != null;");
    [((OrgApacheLuceneIndexFieldInfo *) nil_chk(fieldInfo)) setDocValuesGenWithLong:nextDocValuesGen];
    OrgApacheLuceneIndexFieldInfos *fieldInfos = create_OrgApacheLuceneIndexFieldInfos_initWithOrgApacheLuceneIndexFieldInfoArray_([IOSObjectArray arrayWithObjects:(id[]){ fieldInfo } count:1 type:OrgApacheLuceneIndexFieldInfo_class_()]);
    OrgApacheLuceneStoreTrackingDirectoryWrapper *trackingDir = create_OrgApacheLuceneStoreTrackingDirectoryWrapper_initWithOrgApacheLuceneStoreDirectory_(dir);
    OrgApacheLuceneIndexSegmentWriteState *state = create_OrgApacheLuceneIndexSegmentWriteState_initWithOrgApacheLuceneUtilInfoStream_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentInfo_withOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneIndexBufferedUpdates_withOrgApacheLuceneStoreIOContext_withNSString_(nil, trackingDir, self->info_->info_, fieldInfos, nil, updatesContext, segmentSuffix);
    {
      OrgApacheLuceneCodecsDocValuesConsumer *fieldsConsumer = [((OrgApacheLuceneCodecsDocValuesFormat *) nil_chk(dvFormat)) fieldsConsumerWithOrgApacheLuceneIndexSegmentWriteState:state];
      JavaLangThrowable *__primaryException1 = nil;
      @try {
        [((OrgApacheLuceneCodecsDocValuesConsumer *) nil_chk(fieldsConsumer)) addBinaryFieldWithOrgApacheLuceneIndexFieldInfo:fieldInfo withJavaLangIterable:create_OrgApacheLuceneIndexReadersAndUpdates_2_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates_(reader, field, fieldUpdates)];
      }
      @catch (JavaLangThrowable *e) {
        __primaryException1 = e;
        @throw e;
      }
      @finally {
        if (fieldsConsumer != nil) {
          if (__primaryException1 != nil) {
            @try {
              [fieldsConsumer close];
            }
            @catch (JavaLangThrowable *e) {
              [__primaryException1 addSuppressedWithJavaLangThrowable:e];
            }
          }
          else {
            [fieldsConsumer close];
          }
        }
      }
    }
    [self->info_ advanceDocValuesGen];
    JreAssert(![((id<JavaUtilMap>) nil_chk(fieldFiles)) containsKeyWithId:JavaLangInteger_valueOfWithInt_(fieldInfo->number_)], @"org/apache/lucene/index/ReadersAndUpdates.java:449 condition failed: assert !fieldFiles.containsKey(fieldInfo.number);");
    [fieldFiles putWithId:JavaLangInteger_valueOfWithInt_(fieldInfo->number_) withId:[trackingDir getCreatedFiles]];
  }
}

id<JavaUtilSet> OrgApacheLuceneIndexReadersAndUpdates_writeFieldInfosGenWithOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneCodecsDocValuesFormat_withOrgApacheLuceneCodecsFieldInfosFormat_(OrgApacheLuceneIndexReadersAndUpdates *self, OrgApacheLuceneIndexFieldInfos *fieldInfos, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneCodecsDocValuesFormat *dvFormat, OrgApacheLuceneCodecsFieldInfosFormat *infosFormat) {
  jlong nextFieldInfosGen = [((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(self->info_)) getNextFieldInfosGen];
  NSString *segmentSuffix = JavaLangLong_toStringWithLong_withInt_(nextFieldInfosGen, JavaLangCharacter_MAX_RADIX);
  jlong estInfosSize = 40 + 90 * [((OrgApacheLuceneIndexFieldInfos *) nil_chk(fieldInfos)) size];
  OrgApacheLuceneStoreIOContext *infosContext = create_OrgApacheLuceneStoreIOContext_initWithOrgApacheLuceneStoreFlushInfo_(create_OrgApacheLuceneStoreFlushInfo_initWithInt_withLong_([((OrgApacheLuceneIndexSegmentInfo *) nil_chk(self->info_->info_)) maxDoc], estInfosSize));
  OrgApacheLuceneStoreTrackingDirectoryWrapper *trackingDir = create_OrgApacheLuceneStoreTrackingDirectoryWrapper_initWithOrgApacheLuceneStoreDirectory_(dir);
  [((OrgApacheLuceneCodecsFieldInfosFormat *) nil_chk(infosFormat)) writeWithOrgApacheLuceneStoreDirectory:trackingDir withOrgApacheLuceneIndexSegmentInfo:self->info_->info_ withNSString:segmentSuffix withOrgApacheLuceneIndexFieldInfos:fieldInfos withOrgApacheLuceneStoreIOContext:infosContext];
  [self->info_ advanceFieldInfosGen];
  return [trackingDir getCreatedFiles];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexReadersAndUpdates)

@implementation OrgApacheLuceneIndexReadersAndUpdates_1

- (instancetype)initWithOrgApacheLuceneIndexSegmentReader:(OrgApacheLuceneIndexSegmentReader *)capture$0
                                             withNSString:(NSString *)capture$1
     withOrgApacheLuceneIndexNumericDocValuesFieldUpdates:(OrgApacheLuceneIndexNumericDocValuesFieldUpdates *)capture$2 {
  OrgApacheLuceneIndexReadersAndUpdates_1_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexNumericDocValuesFieldUpdates_(self, capture$0, capture$1, capture$2);
  return self;
}

- (id<JavaUtilIterator>)iterator {
  [((OrgApacheLuceneIndexNumericDocValuesFieldUpdates_Iterator *) nil_chk(updatesIter_)) reset];
  return create_OrgApacheLuceneIndexReadersAndUpdates_1_1_initWithOrgApacheLuceneIndexReadersAndUpdates_1_(self);
}

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

- (void)dealloc {
  RELEASE_(currentValues_);
  RELEASE_(docsWithField_);
  RELEASE_(updatesIter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, 1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexSegmentReader:withNSString:withOrgApacheLuceneIndexNumericDocValuesFieldUpdates:);
  methods[1].selector = @selector(iterator);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "currentValues_", "LOrgApacheLuceneIndexNumericDocValues;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "docsWithField_", "LOrgApacheLuceneUtilBits;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "maxDoc_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "updatesIter_", "LOrgApacheLuceneIndexNumericDocValuesFieldUpdates_Iterator;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexSegmentReader;LNSString;LOrgApacheLuceneIndexNumericDocValuesFieldUpdates;", "LJavaIoIOException;", "()Ljava/util/Iterator<Ljava/lang/Number;>;", "LOrgApacheLuceneIndexReadersAndUpdates;", "handleNumericDVUpdatesWithOrgApacheLuceneIndexFieldInfos:withJavaUtilMap:withOrgApacheLuceneStoreDirectory:withOrgApacheLuceneCodecsDocValuesFormat:withOrgApacheLuceneIndexSegmentReader:withJavaUtilMap:", "Ljava/lang/Object;Ljava/lang/Iterable<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexReadersAndUpdates_1 = { "", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x8010, 2, 4, 3, -1, 4, 5, -1 };
  return &_OrgApacheLuceneIndexReadersAndUpdates_1;
}

@end

void OrgApacheLuceneIndexReadersAndUpdates_1_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexNumericDocValuesFieldUpdates_(OrgApacheLuceneIndexReadersAndUpdates_1 *self, OrgApacheLuceneIndexSegmentReader *capture$0, NSString *capture$1, OrgApacheLuceneIndexNumericDocValuesFieldUpdates *capture$2) {
  NSObject_init(self);
  JreStrongAssign(&self->currentValues_, [((OrgApacheLuceneIndexSegmentReader *) nil_chk(capture$0)) getNumericDocValuesWithNSString:capture$1]);
  JreStrongAssign(&self->docsWithField_, [capture$0 getDocsWithFieldWithNSString:capture$1]);
  self->maxDoc_ = [capture$0 maxDoc];
  JreStrongAssign(&self->updatesIter_, [((OrgApacheLuceneIndexNumericDocValuesFieldUpdates *) nil_chk(capture$2)) iterator]);
}

OrgApacheLuceneIndexReadersAndUpdates_1 *new_OrgApacheLuceneIndexReadersAndUpdates_1_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexNumericDocValuesFieldUpdates_(OrgApacheLuceneIndexSegmentReader *capture$0, NSString *capture$1, OrgApacheLuceneIndexNumericDocValuesFieldUpdates *capture$2) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexReadersAndUpdates_1, initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexNumericDocValuesFieldUpdates_, capture$0, capture$1, capture$2)
}

OrgApacheLuceneIndexReadersAndUpdates_1 *create_OrgApacheLuceneIndexReadersAndUpdates_1_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexNumericDocValuesFieldUpdates_(OrgApacheLuceneIndexSegmentReader *capture$0, NSString *capture$1, OrgApacheLuceneIndexNumericDocValuesFieldUpdates *capture$2) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexReadersAndUpdates_1, initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexNumericDocValuesFieldUpdates_, capture$0, capture$1, capture$2)
}

@implementation OrgApacheLuceneIndexReadersAndUpdates_1_1

- (instancetype)initWithOrgApacheLuceneIndexReadersAndUpdates_1:(OrgApacheLuceneIndexReadersAndUpdates_1 *)outer$ {
  OrgApacheLuceneIndexReadersAndUpdates_1_1_initWithOrgApacheLuceneIndexReadersAndUpdates_1_(self, outer$);
  return self;
}

- (jboolean)hasNext {
  return curDoc_ < this$0_->maxDoc_ - 1;
}

- (NSNumber *)next {
  if (++curDoc_ >= this$0_->maxDoc_) {
    @throw create_JavaUtilNoSuchElementException_initWithNSString_(@"no more documents to return values for");
  }
  if (curDoc_ == updateDoc_) {
    JavaLangLong *value = JreRetainedLocalValue([((OrgApacheLuceneIndexNumericDocValuesFieldUpdates_Iterator *) nil_chk(this$0_->updatesIter_)) value]);
    updateDoc_ = [this$0_->updatesIter_ nextDoc];
    return JreRetainedLocalValue(value);
  }
  else {
    JreAssert(curDoc_ < updateDoc_, @"org/apache/lucene/index/ReadersAndUpdates.java:357 condition failed: assert curDoc < updateDoc;");
    if (this$0_->currentValues_ != nil && [((id<OrgApacheLuceneUtilBits>) nil_chk(this$0_->docsWithField_)) getWithInt:curDoc_]) {
      return JavaLangLong_valueOfWithLong_([this$0_->currentValues_ getWithInt:curDoc_]);
    }
    else {
      return JreRetainedLocalValue(nil);
    }
  }
}

- (void)remove {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"this iterator does not support removing elements");
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexReadersAndUpdates_1:);
  methods[1].selector = @selector(hasNext);
  methods[2].selector = @selector(next);
  methods[3].selector = @selector(remove);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneIndexReadersAndUpdates_1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "curDoc_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "updateDoc_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexReadersAndUpdates_1;", "iterator", "Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/Number;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexReadersAndUpdates_1_1 = { "", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x8010, 4, 3, 0, -1, 1, 2, -1 };
  return &_OrgApacheLuceneIndexReadersAndUpdates_1_1;
}

@end

void OrgApacheLuceneIndexReadersAndUpdates_1_1_initWithOrgApacheLuceneIndexReadersAndUpdates_1_(OrgApacheLuceneIndexReadersAndUpdates_1_1 *self, OrgApacheLuceneIndexReadersAndUpdates_1 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  self->curDoc_ = -1;
  self->updateDoc_ = [((OrgApacheLuceneIndexNumericDocValuesFieldUpdates_Iterator *) nil_chk(outer$->updatesIter_)) nextDoc];
}

OrgApacheLuceneIndexReadersAndUpdates_1_1 *new_OrgApacheLuceneIndexReadersAndUpdates_1_1_initWithOrgApacheLuceneIndexReadersAndUpdates_1_(OrgApacheLuceneIndexReadersAndUpdates_1 *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexReadersAndUpdates_1_1, initWithOrgApacheLuceneIndexReadersAndUpdates_1_, outer$)
}

OrgApacheLuceneIndexReadersAndUpdates_1_1 *create_OrgApacheLuceneIndexReadersAndUpdates_1_1_initWithOrgApacheLuceneIndexReadersAndUpdates_1_(OrgApacheLuceneIndexReadersAndUpdates_1 *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexReadersAndUpdates_1_1, initWithOrgApacheLuceneIndexReadersAndUpdates_1_, outer$)
}

@implementation OrgApacheLuceneIndexReadersAndUpdates_2

- (instancetype)initWithOrgApacheLuceneIndexSegmentReader:(OrgApacheLuceneIndexSegmentReader *)capture$0
                                             withNSString:(NSString *)capture$1
      withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates:(OrgApacheLuceneIndexBinaryDocValuesFieldUpdates *)capture$2 {
  OrgApacheLuceneIndexReadersAndUpdates_2_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates_(self, capture$0, capture$1, capture$2);
  return self;
}

- (id<JavaUtilIterator>)iterator {
  [((OrgApacheLuceneIndexBinaryDocValuesFieldUpdates_Iterator *) nil_chk(updatesIter_)) reset];
  return create_OrgApacheLuceneIndexReadersAndUpdates_2_1_initWithOrgApacheLuceneIndexReadersAndUpdates_2_(self);
}

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

- (void)dealloc {
  RELEASE_(currentValues_);
  RELEASE_(docsWithField_);
  RELEASE_(updatesIter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, 1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexSegmentReader:withNSString:withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates:);
  methods[1].selector = @selector(iterator);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "currentValues_", "LOrgApacheLuceneIndexBinaryDocValues;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "docsWithField_", "LOrgApacheLuceneUtilBits;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "maxDoc_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "updatesIter_", "LOrgApacheLuceneIndexBinaryDocValuesFieldUpdates_Iterator;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexSegmentReader;LNSString;LOrgApacheLuceneIndexBinaryDocValuesFieldUpdates;", "LJavaIoIOException;", "()Ljava/util/Iterator<Lorg/apache/lucene/util/BytesRef;>;", "LOrgApacheLuceneIndexReadersAndUpdates;", "handleBinaryDVUpdatesWithOrgApacheLuceneIndexFieldInfos:withJavaUtilMap:withOrgApacheLuceneStoreTrackingDirectoryWrapper:withOrgApacheLuceneCodecsDocValuesFormat:withOrgApacheLuceneIndexSegmentReader:withJavaUtilMap:", "Ljava/lang/Object;Ljava/lang/Iterable<Lorg/apache/lucene/util/BytesRef;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexReadersAndUpdates_2 = { "", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x8010, 2, 4, 3, -1, 4, 5, -1 };
  return &_OrgApacheLuceneIndexReadersAndUpdates_2;
}

@end

void OrgApacheLuceneIndexReadersAndUpdates_2_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates_(OrgApacheLuceneIndexReadersAndUpdates_2 *self, OrgApacheLuceneIndexSegmentReader *capture$0, NSString *capture$1, OrgApacheLuceneIndexBinaryDocValuesFieldUpdates *capture$2) {
  NSObject_init(self);
  JreStrongAssign(&self->currentValues_, [((OrgApacheLuceneIndexSegmentReader *) nil_chk(capture$0)) getBinaryDocValuesWithNSString:capture$1]);
  JreStrongAssign(&self->docsWithField_, [capture$0 getDocsWithFieldWithNSString:capture$1]);
  self->maxDoc_ = [capture$0 maxDoc];
  JreStrongAssign(&self->updatesIter_, [((OrgApacheLuceneIndexBinaryDocValuesFieldUpdates *) nil_chk(capture$2)) iterator]);
}

OrgApacheLuceneIndexReadersAndUpdates_2 *new_OrgApacheLuceneIndexReadersAndUpdates_2_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates_(OrgApacheLuceneIndexSegmentReader *capture$0, NSString *capture$1, OrgApacheLuceneIndexBinaryDocValuesFieldUpdates *capture$2) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexReadersAndUpdates_2, initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates_, capture$0, capture$1, capture$2)
}

OrgApacheLuceneIndexReadersAndUpdates_2 *create_OrgApacheLuceneIndexReadersAndUpdates_2_initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates_(OrgApacheLuceneIndexSegmentReader *capture$0, NSString *capture$1, OrgApacheLuceneIndexBinaryDocValuesFieldUpdates *capture$2) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexReadersAndUpdates_2, initWithOrgApacheLuceneIndexSegmentReader_withNSString_withOrgApacheLuceneIndexBinaryDocValuesFieldUpdates_, capture$0, capture$1, capture$2)
}

@implementation OrgApacheLuceneIndexReadersAndUpdates_2_1

- (instancetype)initWithOrgApacheLuceneIndexReadersAndUpdates_2:(OrgApacheLuceneIndexReadersAndUpdates_2 *)outer$ {
  OrgApacheLuceneIndexReadersAndUpdates_2_1_initWithOrgApacheLuceneIndexReadersAndUpdates_2_(self, outer$);
  return self;
}

- (jboolean)hasNext {
  return curDoc_ < this$0_->maxDoc_ - 1;
}

- (OrgApacheLuceneUtilBytesRef *)next {
  if (++curDoc_ >= this$0_->maxDoc_) {
    @throw create_JavaUtilNoSuchElementException_initWithNSString_(@"no more documents to return values for");
  }
  if (curDoc_ == updateDoc_) {
    OrgApacheLuceneUtilBytesRef *value = JreRetainedLocalValue([((OrgApacheLuceneIndexBinaryDocValuesFieldUpdates_Iterator *) nil_chk(this$0_->updatesIter_)) value]);
    updateDoc_ = [this$0_->updatesIter_ nextDoc];
    return JreRetainedLocalValue(value);
  }
  else {
    JreAssert(curDoc_ < updateDoc_, @"org/apache/lucene/index/ReadersAndUpdates.java:430 condition failed: assert curDoc < updateDoc;");
    if (this$0_->currentValues_ != nil && [((id<OrgApacheLuceneUtilBits>) nil_chk(this$0_->docsWithField_)) getWithInt:curDoc_]) {
      return JreRetainedLocalValue([this$0_->currentValues_ getWithInt:curDoc_]);
    }
    else {
      return JreRetainedLocalValue(nil);
    }
  }
}

- (void)remove {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"this iterator does not support removing elements");
}

- (void)forEachRemainingWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaUtilIterator_forEachRemainingWithJavaUtilFunctionConsumer_(self, arg0);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRef;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexReadersAndUpdates_2:);
  methods[1].selector = @selector(hasNext);
  methods[2].selector = @selector(next);
  methods[3].selector = @selector(remove);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneIndexReadersAndUpdates_2;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "curDoc_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "updateDoc_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexReadersAndUpdates_2;", "iterator", "Ljava/lang/Object;Ljava/util/Iterator<Lorg/apache/lucene/util/BytesRef;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexReadersAndUpdates_2_1 = { "", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x8010, 4, 3, 0, -1, 1, 2, -1 };
  return &_OrgApacheLuceneIndexReadersAndUpdates_2_1;
}

@end

void OrgApacheLuceneIndexReadersAndUpdates_2_1_initWithOrgApacheLuceneIndexReadersAndUpdates_2_(OrgApacheLuceneIndexReadersAndUpdates_2_1 *self, OrgApacheLuceneIndexReadersAndUpdates_2 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
  self->curDoc_ = -1;
  self->updateDoc_ = [((OrgApacheLuceneIndexBinaryDocValuesFieldUpdates_Iterator *) nil_chk(outer$->updatesIter_)) nextDoc];
}

OrgApacheLuceneIndexReadersAndUpdates_2_1 *new_OrgApacheLuceneIndexReadersAndUpdates_2_1_initWithOrgApacheLuceneIndexReadersAndUpdates_2_(OrgApacheLuceneIndexReadersAndUpdates_2 *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexReadersAndUpdates_2_1, initWithOrgApacheLuceneIndexReadersAndUpdates_2_, outer$)
}

OrgApacheLuceneIndexReadersAndUpdates_2_1 *create_OrgApacheLuceneIndexReadersAndUpdates_2_1_initWithOrgApacheLuceneIndexReadersAndUpdates_2_(OrgApacheLuceneIndexReadersAndUpdates_2 *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexReadersAndUpdates_2_1, initWithOrgApacheLuceneIndexReadersAndUpdates_2_, outer$)
}
