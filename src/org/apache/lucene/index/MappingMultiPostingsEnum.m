//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/UnsupportedOperationException.h"
#include "org/apache/lucene/codecs/FieldsProducer.h"
#include "org/apache/lucene/index/CorruptIndexException.h"
#include "org/apache/lucene/index/IndexWriter.h"
#include "org/apache/lucene/index/MappingMultiPostingsEnum.h"
#include "org/apache/lucene/index/MergeState.h"
#include "org/apache/lucene/index/MultiPostingsEnum.h"
#include "org/apache/lucene/index/PostingsEnum.h"
#include "org/apache/lucene/index/ReaderSlice.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/util/BytesRef.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/index/MappingMultiPostingsEnum must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneIndexMappingMultiPostingsEnum () {
 @public
  IOSObjectArray *subs_;
  OrgApacheLuceneIndexMergeState *mergeState_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMappingMultiPostingsEnum, subs_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMappingMultiPostingsEnum, mergeState_, OrgApacheLuceneIndexMergeState *)

@implementation OrgApacheLuceneIndexMappingMultiPostingsEnum

- (instancetype)initPackagePrivateWithNSString:(NSString *)field
            withOrgApacheLuceneIndexMergeState:(OrgApacheLuceneIndexMergeState *)mergeState {
  OrgApacheLuceneIndexMappingMultiPostingsEnum_initPackagePrivateWithNSString_withOrgApacheLuceneIndexMergeState_(self, field, mergeState);
  return self;
}

- (OrgApacheLuceneIndexMappingMultiPostingsEnum *)resetWithOrgApacheLuceneIndexMultiPostingsEnum:(OrgApacheLuceneIndexMultiPostingsEnum *)postingsEnum {
  self->numSubs_ = [((OrgApacheLuceneIndexMultiPostingsEnum *) nil_chk(postingsEnum)) getNumSubs];
  JreStrongAssign(&self->subs_, [postingsEnum getSubs]);
  upto_ = -1;
  doc_ = -1;
  JreStrongAssign(&current_, nil);
  JreStrongAssign(&self->multiDocsAndPositionsEnum_, postingsEnum);
  return self;
}

- (jint)getNumSubs {
  return numSubs_;
}

- (IOSObjectArray *)getSubs {
  return subs_;
}

- (jint)freq {
  return [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(current_)) freq];
}

- (jint)docID {
  return doc_;
}

- (jint)advanceWithInt:(jint)target {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jint)nextDoc {
  while (true) {
    if (current_ == nil) {
      if (upto_ == numSubs_ - 1) {
        return self->doc_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
      }
      else {
        upto_++;
        jint reader = ((OrgApacheLuceneIndexReaderSlice *) nil_chk(((OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice *) nil_chk(IOSObjectArray_Get(nil_chk(subs_), upto_)))->slice_))->readerIndex_;
        JreStrongAssign(&current_, ((OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice *) nil_chk(IOSObjectArray_Get(subs_, upto_)))->postingsEnum_);
        currentBase_ = IOSIntArray_Get(nil_chk(((OrgApacheLuceneIndexMergeState *) nil_chk(mergeState_))->docBase_), reader);
        JreStrongAssign(&currentMap_, IOSObjectArray_Get(nil_chk(mergeState_->docMaps_), reader));
      }
    }
    jint doc = [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(current_)) nextDoc];
    if (doc != OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
      doc = [((OrgApacheLuceneIndexMergeState_DocMap *) nil_chk(currentMap_)) getWithInt:doc];
      if (doc == -1) {
        continue;
      }
      return self->doc_ = currentBase_ + doc;
    }
    else {
      JreStrongAssign(&current_, nil);
    }
  }
}

- (jint)nextPosition {
  jint pos = [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(current_)) nextPosition];
  if (pos < 0) {
    @throw create_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withNSString_(JreStrcat("$I$$$I", @"position=", pos, @" is negative, field=\"", field_, @" doc=", doc_), [((OrgApacheLuceneCodecsFieldsProducer *) nil_chk(IOSObjectArray_Get(nil_chk(((OrgApacheLuceneIndexMergeState *) nil_chk(mergeState_))->fieldsProducers_), upto_))) description]);
  }
  else if (pos > OrgApacheLuceneIndexIndexWriter_MAX_POSITION) {
    @throw create_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withNSString_(JreStrcat("$I$I$$$I", @"position=", pos, @" is too large (> IndexWriter.MAX_POSITION=", OrgApacheLuceneIndexIndexWriter_MAX_POSITION, @"), field=\"", field_, @"\" doc=", doc_), [((OrgApacheLuceneCodecsFieldsProducer *) nil_chk(IOSObjectArray_Get(nil_chk(((OrgApacheLuceneIndexMergeState *) nil_chk(mergeState_))->fieldsProducers_), upto_))) description]);
  }
  return pos;
}

- (jint)startOffset {
  return [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(current_)) startOffset];
}

- (jint)endOffset {
  return [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(current_)) endOffset];
}

- (OrgApacheLuceneUtilBytesRef *)getPayload {
  return [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(current_)) getPayload];
}

- (jlong)cost {
  jlong cost = 0;
  {
    IOSObjectArray *a__ = subs_;
    OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice *enumWithSlice = *b__++;
      cost += [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(((OrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice *) nil_chk(enumWithSlice))->postingsEnum_)) cost];
    }
  }
  return cost;
}

- (void)dealloc {
  RELEASE_(subs_);
  RELEASE_(currentMap_);
  RELEASE_(current_);
  RELEASE_(mergeState_);
  RELEASE_(multiDocsAndPositionsEnum_);
  RELEASE_(field_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexMappingMultiPostingsEnum;", 0x0, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRef;", 0x1, -1, -1, 3, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithNSString:withOrgApacheLuceneIndexMergeState:);
  methods[1].selector = @selector(resetWithOrgApacheLuceneIndexMultiPostingsEnum:);
  methods[2].selector = @selector(getNumSubs);
  methods[3].selector = @selector(getSubs);
  methods[4].selector = @selector(freq);
  methods[5].selector = @selector(docID);
  methods[6].selector = @selector(advanceWithInt:);
  methods[7].selector = @selector(nextDoc);
  methods[8].selector = @selector(nextPosition);
  methods[9].selector = @selector(startOffset);
  methods[10].selector = @selector(endOffset);
  methods[11].selector = @selector(getPayload);
  methods[12].selector = @selector(cost);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "subs_", "[LOrgApacheLuceneIndexMultiPostingsEnum_EnumWithSlice;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "numSubs_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "upto_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "currentMap_", "LOrgApacheLuceneIndexMergeState_DocMap;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "current_", "LOrgApacheLuceneIndexPostingsEnum;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "currentBase_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "doc_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "mergeState_", "LOrgApacheLuceneIndexMergeState;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "multiDocsAndPositionsEnum_", "LOrgApacheLuceneIndexMultiPostingsEnum;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "field_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LOrgApacheLuceneIndexMergeState;", "reset", "LOrgApacheLuceneIndexMultiPostingsEnum;", "LJavaIoIOException;", "advance", "I" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexMappingMultiPostingsEnum = { "MappingMultiPostingsEnum", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x10, 13, 10, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexMappingMultiPostingsEnum;
}

@end

void OrgApacheLuceneIndexMappingMultiPostingsEnum_initPackagePrivateWithNSString_withOrgApacheLuceneIndexMergeState_(OrgApacheLuceneIndexMappingMultiPostingsEnum *self, NSString *field, OrgApacheLuceneIndexMergeState *mergeState) {
  OrgApacheLuceneIndexPostingsEnum_init(self);
  self->doc_ = -1;
  JreStrongAssign(&self->field_, field);
  JreStrongAssign(&self->mergeState_, mergeState);
}

OrgApacheLuceneIndexMappingMultiPostingsEnum *new_OrgApacheLuceneIndexMappingMultiPostingsEnum_initPackagePrivateWithNSString_withOrgApacheLuceneIndexMergeState_(NSString *field, OrgApacheLuceneIndexMergeState *mergeState) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexMappingMultiPostingsEnum, initPackagePrivateWithNSString_withOrgApacheLuceneIndexMergeState_, field, mergeState)
}

OrgApacheLuceneIndexMappingMultiPostingsEnum *create_OrgApacheLuceneIndexMappingMultiPostingsEnum_initPackagePrivateWithNSString_withOrgApacheLuceneIndexMergeState_(NSString *field, OrgApacheLuceneIndexMergeState *mergeState) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexMappingMultiPostingsEnum, initPackagePrivateWithNSString_withOrgApacheLuceneIndexMergeState_, field, mergeState)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexMappingMultiPostingsEnum)
