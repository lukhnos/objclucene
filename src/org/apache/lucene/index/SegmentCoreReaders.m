//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/SegmentCoreReaders.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/lang/Throwable.h"
#include "java/util/Collections.h"
#include "java/util/LinkedHashSet.h"
#include "java/util/Set.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "org/apache/lucene/codecs/Codec.h"
#include "org/apache/lucene/codecs/CompoundFormat.h"
#include "org/apache/lucene/codecs/FieldInfosFormat.h"
#include "org/apache/lucene/codecs/FieldsProducer.h"
#include "org/apache/lucene/codecs/NormsFormat.h"
#include "org/apache/lucene/codecs/NormsProducer.h"
#include "org/apache/lucene/codecs/PostingsFormat.h"
#include "org/apache/lucene/codecs/StoredFieldsFormat.h"
#include "org/apache/lucene/codecs/StoredFieldsReader.h"
#include "org/apache/lucene/codecs/TermVectorsFormat.h"
#include "org/apache/lucene/codecs/TermVectorsReader.h"
#include "org/apache/lucene/index/FieldInfos.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/SegmentCommitInfo.h"
#include "org/apache/lucene/index/SegmentCoreReaders.h"
#include "org/apache/lucene/index/SegmentInfo.h"
#include "org/apache/lucene/index/SegmentReadState.h"
#include "org/apache/lucene/index/SegmentReader.h"
#include "org/apache/lucene/store/AlreadyClosedException.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/util/CloseableThreadLocal.h"
#include "org/apache/lucene/util/IOUtils.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/index/SegmentCoreReaders must not be compiled with ARC (-fobjc-arc)"
#if !__has_feature(objc_arc_weak)
#error "org/apache/lucene/index/SegmentCoreReaders must be compiled with weak references support (-fobjc-weak)"
#endif
#endif

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface OrgApacheLuceneIndexSegmentCoreReaders () {
 @public
  JavaUtilConcurrentAtomicAtomicInteger *ref_;
  id<JavaUtilSet> coreClosedListeners_;
}

- (void)notifyCoreClosedListenersWithJavaLangThrowable:(JavaLangThrowable *)th;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentCoreReaders, ref_, JavaUtilConcurrentAtomicAtomicInteger *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSegmentCoreReaders, coreClosedListeners_, id<JavaUtilSet>)

__attribute__((unused)) static void OrgApacheLuceneIndexSegmentCoreReaders_notifyCoreClosedListenersWithJavaLangThrowable_(OrgApacheLuceneIndexSegmentCoreReaders *self, JavaLangThrowable *th);

@interface OrgApacheLuceneIndexSegmentCoreReaders_FieldsReaderLocal () {
 @public
  WEAK_ OrgApacheLuceneIndexSegmentCoreReaders *this$0_;
}

@end

@interface OrgApacheLuceneIndexSegmentCoreReaders_TermVectorsLocal () {
 @public
  WEAK_ OrgApacheLuceneIndexSegmentCoreReaders *this$0_;
}

@end

@implementation OrgApacheLuceneIndexSegmentCoreReaders

- (instancetype)initPackagePrivateWithOrgApacheLuceneIndexSegmentReader:(OrgApacheLuceneIndexSegmentReader *)owner
                                      withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                              withOrgApacheLuceneIndexSegmentCommitInfo:(OrgApacheLuceneIndexSegmentCommitInfo *)si
                                      withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context {
  OrgApacheLuceneIndexSegmentCoreReaders_initPackagePrivateWithOrgApacheLuceneIndexSegmentReader_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentCommitInfo_withOrgApacheLuceneStoreIOContext_(self, owner, dir, si, context);
  return self;
}

- (jint)getRefCount {
  return [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(ref_)) get];
}

- (void)incRef {
  jint count;
  while ((count = [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(ref_)) get]) > 0) {
    if ([ref_ compareAndSetWithInt:count withInt:count + 1]) {
      return;
    }
  }
  @throw create_OrgApacheLuceneStoreAlreadyClosedException_initWithNSString_(@"SegmentCoreReaders is already closed");
}

- (void)decRef {
  if ([((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(ref_)) decrementAndGet] == 0) {
    JavaLangThrowable *th = nil;
    @try {
      OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ termVectorsLocal_, fieldsReaderLocal_, fields_, termVectorsReaderOrig_, fieldsReaderOrig_, cfsReader_, normsProducer_ } count:7 type:JavaIoCloseable_class_()]);
    }
    @catch (JavaLangThrowable *throwable) {
      th = throwable;
    }
    @finally {
      OrgApacheLuceneIndexSegmentCoreReaders_notifyCoreClosedListenersWithJavaLangThrowable_(self, th);
    }
  }
}

- (void)notifyCoreClosedListenersWithJavaLangThrowable:(JavaLangThrowable *)th {
  OrgApacheLuceneIndexSegmentCoreReaders_notifyCoreClosedListenersWithJavaLangThrowable_(self, th);
}

- (void)addCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:(id<OrgApacheLuceneIndexLeafReader_CoreClosedListener>)listener {
  [((id<JavaUtilSet>) nil_chk(coreClosedListeners_)) addWithId:listener];
}

- (void)removeCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:(id<OrgApacheLuceneIndexLeafReader_CoreClosedListener>)listener {
  [((id<JavaUtilSet>) nil_chk(coreClosedListeners_)) removeWithId:listener];
}

- (void)dealloc {
  RELEASE_(ref_);
  RELEASE_(fields_);
  RELEASE_(normsProducer_);
  RELEASE_(fieldsReaderOrig_);
  RELEASE_(termVectorsReaderOrig_);
  RELEASE_(cfsReader_);
  RELEASE_(coreFieldInfos_);
  RELEASE_(fieldsReaderLocal_);
  RELEASE_(termVectorsLocal_);
  RELEASE_(coreClosedListeners_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, 1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x2, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 6, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgApacheLuceneIndexSegmentReader:withOrgApacheLuceneStoreDirectory:withOrgApacheLuceneIndexSegmentCommitInfo:withOrgApacheLuceneStoreIOContext:);
  methods[1].selector = @selector(getRefCount);
  methods[2].selector = @selector(incRef);
  methods[3].selector = @selector(decRef);
  methods[4].selector = @selector(notifyCoreClosedListenersWithJavaLangThrowable:);
  methods[5].selector = @selector(addCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:);
  methods[6].selector = @selector(removeCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ref_", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "fields_", "LOrgApacheLuceneCodecsFieldsProducer;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "normsProducer_", "LOrgApacheLuceneCodecsNormsProducer;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "fieldsReaderOrig_", "LOrgApacheLuceneCodecsStoredFieldsReader;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "termVectorsReaderOrig_", "LOrgApacheLuceneCodecsTermVectorsReader;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "cfsReader_", "LOrgApacheLuceneStoreDirectory;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "coreFieldInfos_", "LOrgApacheLuceneIndexFieldInfos;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "fieldsReaderLocal_", "LOrgApacheLuceneUtilCloseableThreadLocal;", .constantValue.asLong = 0, 0x10, -1, -1, 7, -1 },
    { "termVectorsLocal_", "LOrgApacheLuceneUtilCloseableThreadLocal;", .constantValue.asLong = 0, 0x10, -1, -1, 8, -1 },
    { "coreClosedListeners_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x12, -1, -1, 9, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexSegmentReader;LOrgApacheLuceneStoreDirectory;LOrgApacheLuceneIndexSegmentCommitInfo;LOrgApacheLuceneStoreIOContext;", "LJavaIoIOException;", "notifyCoreClosedListeners", "LJavaLangThrowable;", "addCoreClosedListener", "LOrgApacheLuceneIndexLeafReader_CoreClosedListener;", "removeCoreClosedListener", "Lorg/apache/lucene/util/CloseableThreadLocal<Lorg/apache/lucene/codecs/StoredFieldsReader;>;", "Lorg/apache/lucene/util/CloseableThreadLocal<Lorg/apache/lucene/codecs/TermVectorsReader;>;", "Ljava/util/Set<Lorg/apache/lucene/index/LeafReader$CoreClosedListener;>;", "LOrgApacheLuceneIndexSegmentCoreReaders_FieldsReaderLocal;LOrgApacheLuceneIndexSegmentCoreReaders_TermVectorsLocal;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexSegmentCoreReaders = { "SegmentCoreReaders", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x10, 7, 10, -1, 10, -1, -1, -1 };
  return &_OrgApacheLuceneIndexSegmentCoreReaders;
}

@end

void OrgApacheLuceneIndexSegmentCoreReaders_initPackagePrivateWithOrgApacheLuceneIndexSegmentReader_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentCommitInfo_withOrgApacheLuceneStoreIOContext_(OrgApacheLuceneIndexSegmentCoreReaders *self, OrgApacheLuceneIndexSegmentReader *owner, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneIndexSegmentCommitInfo *si, OrgApacheLuceneStoreIOContext *context) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->ref_, new_JavaUtilConcurrentAtomicAtomicInteger_initWithInt_(1));
  JreStrongAssignAndConsume(&self->fieldsReaderLocal_, new_OrgApacheLuceneIndexSegmentCoreReaders_FieldsReaderLocal_initWithOrgApacheLuceneIndexSegmentCoreReaders_(self));
  JreStrongAssignAndConsume(&self->termVectorsLocal_, new_OrgApacheLuceneIndexSegmentCoreReaders_TermVectorsLocal_initWithOrgApacheLuceneIndexSegmentCoreReaders_(self));
  JreStrongAssign(&self->coreClosedListeners_, JavaUtilCollections_synchronizedSetWithJavaUtilSet_(create_JavaUtilLinkedHashSet_init()));
  OrgApacheLuceneCodecsCodec *codec = [((OrgApacheLuceneIndexSegmentInfo *) nil_chk(((OrgApacheLuceneIndexSegmentCommitInfo *) nil_chk(si))->info_)) getCodec];
  OrgApacheLuceneStoreDirectory *cfsDir;
  jboolean success = false;
  @try {
    if ([si->info_ getUseCompoundFile]) {
      cfsDir = JreStrongAssign(&self->cfsReader_, [((OrgApacheLuceneCodecsCompoundFormat *) nil_chk([((OrgApacheLuceneCodecsCodec *) nil_chk(codec)) compoundFormat])) getCompoundReaderWithOrgApacheLuceneStoreDirectory:dir withOrgApacheLuceneIndexSegmentInfo:si->info_ withOrgApacheLuceneStoreIOContext:context]);
    }
    else {
      JreStrongAssign(&self->cfsReader_, nil);
      cfsDir = dir;
    }
    JreStrongAssign(&self->coreFieldInfos_, [((OrgApacheLuceneCodecsFieldInfosFormat *) nil_chk([((OrgApacheLuceneCodecsCodec *) nil_chk(codec)) fieldInfosFormat])) readWithOrgApacheLuceneStoreDirectory:cfsDir withOrgApacheLuceneIndexSegmentInfo:si->info_ withNSString:@"" withOrgApacheLuceneStoreIOContext:context]);
    OrgApacheLuceneIndexSegmentReadState *segmentReadState = create_OrgApacheLuceneIndexSegmentReadState_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentInfo_withOrgApacheLuceneIndexFieldInfos_withOrgApacheLuceneStoreIOContext_(cfsDir, si->info_, self->coreFieldInfos_, context);
    OrgApacheLuceneCodecsPostingsFormat *format = [codec postingsFormat];
    JreStrongAssign(&self->fields_, [((OrgApacheLuceneCodecsPostingsFormat *) nil_chk(format)) fieldsProducerWithOrgApacheLuceneIndexSegmentReadState:segmentReadState]);
    JreAssert(self->fields_ != nil, @"org/apache/lucene/index/SegmentCoreReaders.java:114 condition failed: assert fields != null;");
    if ([((OrgApacheLuceneIndexFieldInfos *) nil_chk(self->coreFieldInfos_)) hasNorms]) {
      JreStrongAssign(&self->normsProducer_, [((OrgApacheLuceneCodecsNormsFormat *) nil_chk([codec normsFormat])) normsProducerWithOrgApacheLuceneIndexSegmentReadState:segmentReadState]);
      JreAssert(self->normsProducer_ != nil, @"org/apache/lucene/index/SegmentCoreReaders.java:121 condition failed: assert normsProducer != null;");
    }
    else {
      JreStrongAssign(&self->normsProducer_, nil);
    }
    JreStrongAssign(&self->fieldsReaderOrig_, [((OrgApacheLuceneCodecsStoredFieldsFormat *) nil_chk([((OrgApacheLuceneCodecsCodec *) nil_chk([si->info_ getCodec])) storedFieldsFormat])) fieldsReaderWithOrgApacheLuceneStoreDirectory:cfsDir withOrgApacheLuceneIndexSegmentInfo:si->info_ withOrgApacheLuceneIndexFieldInfos:self->coreFieldInfos_ withOrgApacheLuceneStoreIOContext:context]);
    if ([self->coreFieldInfos_ hasVectors]) {
      JreStrongAssign(&self->termVectorsReaderOrig_, [((OrgApacheLuceneCodecsTermVectorsFormat *) nil_chk([((OrgApacheLuceneCodecsCodec *) nil_chk([si->info_ getCodec])) termVectorsFormat])) vectorsReaderWithOrgApacheLuceneStoreDirectory:cfsDir withOrgApacheLuceneIndexSegmentInfo:si->info_ withOrgApacheLuceneIndexFieldInfos:self->coreFieldInfos_ withOrgApacheLuceneStoreIOContext:context]);
    }
    else {
      JreStrongAssign(&self->termVectorsReaderOrig_, nil);
    }
    success = true;
  }
  @finally {
    if (!success) {
      [self decRef];
    }
  }
}

OrgApacheLuceneIndexSegmentCoreReaders *new_OrgApacheLuceneIndexSegmentCoreReaders_initPackagePrivateWithOrgApacheLuceneIndexSegmentReader_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentCommitInfo_withOrgApacheLuceneStoreIOContext_(OrgApacheLuceneIndexSegmentReader *owner, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneIndexSegmentCommitInfo *si, OrgApacheLuceneStoreIOContext *context) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexSegmentCoreReaders, initPackagePrivateWithOrgApacheLuceneIndexSegmentReader_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentCommitInfo_withOrgApacheLuceneStoreIOContext_, owner, dir, si, context)
}

OrgApacheLuceneIndexSegmentCoreReaders *create_OrgApacheLuceneIndexSegmentCoreReaders_initPackagePrivateWithOrgApacheLuceneIndexSegmentReader_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentCommitInfo_withOrgApacheLuceneStoreIOContext_(OrgApacheLuceneIndexSegmentReader *owner, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneIndexSegmentCommitInfo *si, OrgApacheLuceneStoreIOContext *context) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexSegmentCoreReaders, initPackagePrivateWithOrgApacheLuceneIndexSegmentReader_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexSegmentCommitInfo_withOrgApacheLuceneStoreIOContext_, owner, dir, si, context)
}

void OrgApacheLuceneIndexSegmentCoreReaders_notifyCoreClosedListenersWithJavaLangThrowable_(OrgApacheLuceneIndexSegmentCoreReaders *self, JavaLangThrowable *th) {
  @synchronized(self->coreClosedListeners_) {
    for (id<OrgApacheLuceneIndexLeafReader_CoreClosedListener> __strong listener in nil_chk(self->coreClosedListeners_)) {
      @try {
        [((id<OrgApacheLuceneIndexLeafReader_CoreClosedListener>) nil_chk(listener)) onCloseWithId:self];
      }
      @catch (JavaLangThrowable *t) {
        if (th == nil) {
          th = t;
        }
        else {
          [th addSuppressedWithJavaLangThrowable:t];
        }
      }
    }
    OrgApacheLuceneUtilIOUtils_reThrowUncheckedWithJavaLangThrowable_(th);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexSegmentCoreReaders)

@implementation OrgApacheLuceneIndexSegmentCoreReaders_FieldsReaderLocal

- (instancetype)initWithOrgApacheLuceneIndexSegmentCoreReaders:(OrgApacheLuceneIndexSegmentCoreReaders *)outer$ {
  OrgApacheLuceneIndexSegmentCoreReaders_FieldsReaderLocal_initWithOrgApacheLuceneIndexSegmentCoreReaders_(self, outer$);
  return self;
}

- (OrgApacheLuceneCodecsStoredFieldsReader *)initialValue {
  return [((OrgApacheLuceneCodecsStoredFieldsReader *) nil_chk(this$0_->fieldsReaderOrig_)) java_clone];
}

- (void)__javaClone:(OrgApacheLuceneIndexSegmentCoreReaders_FieldsReaderLocal *)original {
  [super __javaClone:original];
  [this$0_ release];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneCodecsStoredFieldsReader;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexSegmentCoreReaders:);
  methods[1].selector = @selector(initialValue);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneIndexSegmentCoreReaders;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexSegmentCoreReaders;", "Lorg/apache/lucene/util/CloseableThreadLocal<Lorg/apache/lucene/codecs/StoredFieldsReader;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexSegmentCoreReaders_FieldsReaderLocal = { "FieldsReaderLocal", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x0, 2, 1, 0, -1, -1, 1, -1 };
  return &_OrgApacheLuceneIndexSegmentCoreReaders_FieldsReaderLocal;
}

@end

void OrgApacheLuceneIndexSegmentCoreReaders_FieldsReaderLocal_initWithOrgApacheLuceneIndexSegmentCoreReaders_(OrgApacheLuceneIndexSegmentCoreReaders_FieldsReaderLocal *self, OrgApacheLuceneIndexSegmentCoreReaders *outer$) {
  self->this$0_ = outer$;
  OrgApacheLuceneUtilCloseableThreadLocal_init(self);
}

OrgApacheLuceneIndexSegmentCoreReaders_FieldsReaderLocal *new_OrgApacheLuceneIndexSegmentCoreReaders_FieldsReaderLocal_initWithOrgApacheLuceneIndexSegmentCoreReaders_(OrgApacheLuceneIndexSegmentCoreReaders *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexSegmentCoreReaders_FieldsReaderLocal, initWithOrgApacheLuceneIndexSegmentCoreReaders_, outer$)
}

OrgApacheLuceneIndexSegmentCoreReaders_FieldsReaderLocal *create_OrgApacheLuceneIndexSegmentCoreReaders_FieldsReaderLocal_initWithOrgApacheLuceneIndexSegmentCoreReaders_(OrgApacheLuceneIndexSegmentCoreReaders *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexSegmentCoreReaders_FieldsReaderLocal, initWithOrgApacheLuceneIndexSegmentCoreReaders_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexSegmentCoreReaders_FieldsReaderLocal)

@implementation OrgApacheLuceneIndexSegmentCoreReaders_TermVectorsLocal

- (instancetype)initWithOrgApacheLuceneIndexSegmentCoreReaders:(OrgApacheLuceneIndexSegmentCoreReaders *)outer$ {
  OrgApacheLuceneIndexSegmentCoreReaders_TermVectorsLocal_initWithOrgApacheLuceneIndexSegmentCoreReaders_(self, outer$);
  return self;
}

- (OrgApacheLuceneCodecsTermVectorsReader *)initialValue {
  return (this$0_->termVectorsReaderOrig_ == nil) ? nil : [((OrgApacheLuceneCodecsTermVectorsReader *) nil_chk(this$0_->termVectorsReaderOrig_)) java_clone];
}

- (void)__javaClone:(OrgApacheLuceneIndexSegmentCoreReaders_TermVectorsLocal *)original {
  [super __javaClone:original];
  [this$0_ release];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneCodecsTermVectorsReader;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexSegmentCoreReaders:);
  methods[1].selector = @selector(initialValue);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneIndexSegmentCoreReaders;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexSegmentCoreReaders;", "Lorg/apache/lucene/util/CloseableThreadLocal<Lorg/apache/lucene/codecs/TermVectorsReader;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexSegmentCoreReaders_TermVectorsLocal = { "TermVectorsLocal", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x0, 2, 1, 0, -1, -1, 1, -1 };
  return &_OrgApacheLuceneIndexSegmentCoreReaders_TermVectorsLocal;
}

@end

void OrgApacheLuceneIndexSegmentCoreReaders_TermVectorsLocal_initWithOrgApacheLuceneIndexSegmentCoreReaders_(OrgApacheLuceneIndexSegmentCoreReaders_TermVectorsLocal *self, OrgApacheLuceneIndexSegmentCoreReaders *outer$) {
  self->this$0_ = outer$;
  OrgApacheLuceneUtilCloseableThreadLocal_init(self);
}

OrgApacheLuceneIndexSegmentCoreReaders_TermVectorsLocal *new_OrgApacheLuceneIndexSegmentCoreReaders_TermVectorsLocal_initWithOrgApacheLuceneIndexSegmentCoreReaders_(OrgApacheLuceneIndexSegmentCoreReaders *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexSegmentCoreReaders_TermVectorsLocal, initWithOrgApacheLuceneIndexSegmentCoreReaders_, outer$)
}

OrgApacheLuceneIndexSegmentCoreReaders_TermVectorsLocal *create_OrgApacheLuceneIndexSegmentCoreReaders_TermVectorsLocal_initWithOrgApacheLuceneIndexSegmentCoreReaders_(OrgApacheLuceneIndexSegmentCoreReaders *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexSegmentCoreReaders_TermVectorsLocal, initWithOrgApacheLuceneIndexSegmentCoreReaders_, outer$)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexSegmentCoreReaders_TermVectorsLocal)
