//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/LogByteSizeMergePolicy.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/index/IndexWriter.h"
#include "org/apache/lucene/index/LogByteSizeMergePolicy.h"
#include "org/apache/lucene/index/LogMergePolicy.h"
#include "org/apache/lucene/index/SegmentCommitInfo.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/index/LogByteSizeMergePolicy must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneIndexLogByteSizeMergePolicy

+ (jdouble)DEFAULT_MIN_MERGE_MB {
  return OrgApacheLuceneIndexLogByteSizeMergePolicy_DEFAULT_MIN_MERGE_MB;
}

+ (jdouble)DEFAULT_MAX_MERGE_MB {
  return OrgApacheLuceneIndexLogByteSizeMergePolicy_DEFAULT_MAX_MERGE_MB;
}

+ (jdouble)DEFAULT_MAX_MERGE_MB_FOR_FORCED_MERGE {
  return OrgApacheLuceneIndexLogByteSizeMergePolicy_DEFAULT_MAX_MERGE_MB_FOR_FORCED_MERGE;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneIndexLogByteSizeMergePolicy_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jlong)sizeWithOrgApacheLuceneIndexSegmentCommitInfo:(OrgApacheLuceneIndexSegmentCommitInfo *)info
                   withOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer {
  return [self sizeBytesWithOrgApacheLuceneIndexSegmentCommitInfo:info withOrgApacheLuceneIndexIndexWriter:writer];
}

- (void)setMaxMergeMBWithDouble:(jdouble)mb {
  maxMergeSize_ = JreFpToLong((mb * 1024 * 1024));
}

- (jdouble)getMaxMergeMB {
  return ((jdouble) maxMergeSize_) / 1024 / 1024;
}

- (void)setMaxMergeMBForForcedMergeWithDouble:(jdouble)mb {
  maxMergeSizeForForcedMerge_ = JreFpToLong((mb * 1024 * 1024));
}

- (jdouble)getMaxMergeMBForForcedMerge {
  return ((jdouble) maxMergeSizeForForcedMerge_) / 1024 / 1024;
}

- (void)setMinMergeMBWithDouble:(jdouble)mb {
  minMergeSize_ = JreFpToLong((mb * 1024 * 1024));
}

- (jdouble)getMinMergeMB {
  return ((jdouble) minMergeSize_) / 1024 / 1024;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x4, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 4, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(sizeWithOrgApacheLuceneIndexSegmentCommitInfo:withOrgApacheLuceneIndexIndexWriter:);
  methods[2].selector = @selector(setMaxMergeMBWithDouble:);
  methods[3].selector = @selector(getMaxMergeMB);
  methods[4].selector = @selector(setMaxMergeMBForForcedMergeWithDouble:);
  methods[5].selector = @selector(getMaxMergeMBForForcedMerge);
  methods[6].selector = @selector(setMinMergeMBWithDouble:);
  methods[7].selector = @selector(getMinMergeMB);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_MIN_MERGE_MB", "D", .constantValue.asDouble = OrgApacheLuceneIndexLogByteSizeMergePolicy_DEFAULT_MIN_MERGE_MB, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_MAX_MERGE_MB", "D", .constantValue.asDouble = OrgApacheLuceneIndexLogByteSizeMergePolicy_DEFAULT_MAX_MERGE_MB, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_MAX_MERGE_MB_FOR_FORCED_MERGE", "D", .constantValue.asDouble = OrgApacheLuceneIndexLogByteSizeMergePolicy_DEFAULT_MAX_MERGE_MB_FOR_FORCED_MERGE, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "size", "LOrgApacheLuceneIndexSegmentCommitInfo;LOrgApacheLuceneIndexIndexWriter;", "LJavaIoIOException;", "setMaxMergeMB", "D", "setMaxMergeMBForForcedMerge", "setMinMergeMB" };
  static const J2ObjcClassInfo _OrgApacheLuceneIndexLogByteSizeMergePolicy = { "LogByteSizeMergePolicy", "org.apache.lucene.index", ptrTable, methods, fields, 7, 0x1, 8, 3, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneIndexLogByteSizeMergePolicy;
}

@end

void OrgApacheLuceneIndexLogByteSizeMergePolicy_init(OrgApacheLuceneIndexLogByteSizeMergePolicy *self) {
  OrgApacheLuceneIndexLogMergePolicy_init(self);
  self->minMergeSize_ = JreFpToLong((OrgApacheLuceneIndexLogByteSizeMergePolicy_DEFAULT_MIN_MERGE_MB * 1024 * 1024));
  self->maxMergeSize_ = JreFpToLong((OrgApacheLuceneIndexLogByteSizeMergePolicy_DEFAULT_MAX_MERGE_MB * 1024 * 1024));
  self->maxMergeSizeForForcedMerge_ = JreFpToLong((OrgApacheLuceneIndexLogByteSizeMergePolicy_DEFAULT_MAX_MERGE_MB_FOR_FORCED_MERGE * 1024 * 1024));
}

OrgApacheLuceneIndexLogByteSizeMergePolicy *new_OrgApacheLuceneIndexLogByteSizeMergePolicy_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneIndexLogByteSizeMergePolicy, init)
}

OrgApacheLuceneIndexLogByteSizeMergePolicy *create_OrgApacheLuceneIndexLogByteSizeMergePolicy_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneIndexLogByteSizeMergePolicy, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneIndexLogByteSizeMergePolicy)
