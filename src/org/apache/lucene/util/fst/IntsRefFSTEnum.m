//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/fst/IntsRefFSTEnum.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/IntsRef.h"
#include "org/apache/lucene/util/fst/FST.h"
#include "org/apache/lucene/util/fst/FSTEnum.h"
#include "org/apache/lucene/util/fst/IntsRefFSTEnum.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/util/fst/IntsRefFSTEnum must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneUtilFstIntsRefFSTEnum () {
 @public
  OrgApacheLuceneUtilIntsRef *current_;
  OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput *result_;
  OrgApacheLuceneUtilIntsRef *target_;
}

- (OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput *)setResult;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilFstIntsRefFSTEnum, current_, OrgApacheLuceneUtilIntsRef *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilFstIntsRefFSTEnum, result_, OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilFstIntsRefFSTEnum, target_, OrgApacheLuceneUtilIntsRef *)

__attribute__((unused)) static OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput *OrgApacheLuceneUtilFstIntsRefFSTEnum_setResult(OrgApacheLuceneUtilFstIntsRefFSTEnum *self);

@implementation OrgApacheLuceneUtilFstIntsRefFSTEnum

- (instancetype)initWithOrgApacheLuceneUtilFstFST:(OrgApacheLuceneUtilFstFST *)fst {
  OrgApacheLuceneUtilFstIntsRefFSTEnum_initWithOrgApacheLuceneUtilFstFST_(self, fst);
  return self;
}

- (OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput *)current {
  return result_;
}

- (OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput *)next {
  [self doNext];
  return OrgApacheLuceneUtilFstIntsRefFSTEnum_setResult(self);
}

- (OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput *)seekCeilWithOrgApacheLuceneUtilIntsRef:(OrgApacheLuceneUtilIntsRef *)target {
  JreStrongAssign(&self->target_, target);
  targetLength_ = ((OrgApacheLuceneUtilIntsRef *) nil_chk(target))->length_;
  [super doSeekCeil];
  return OrgApacheLuceneUtilFstIntsRefFSTEnum_setResult(self);
}

- (OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput *)seekFloorWithOrgApacheLuceneUtilIntsRef:(OrgApacheLuceneUtilIntsRef *)target {
  JreStrongAssign(&self->target_, target);
  targetLength_ = ((OrgApacheLuceneUtilIntsRef *) nil_chk(target))->length_;
  [super doSeekFloor];
  return OrgApacheLuceneUtilFstIntsRefFSTEnum_setResult(self);
}

- (OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput *)seekExactWithOrgApacheLuceneUtilIntsRef:(OrgApacheLuceneUtilIntsRef *)target {
  JreStrongAssign(&self->target_, target);
  targetLength_ = ((OrgApacheLuceneUtilIntsRef *) nil_chk(target))->length_;
  if ([super doSeekExact]) {
    JreAssert(upto_ == 1 + target->length_, @"org/apache/lucene/util/fst/IntsRefFSTEnum.java:85 condition failed: assert upto == 1+target.length;");
    return OrgApacheLuceneUtilFstIntsRefFSTEnum_setResult(self);
  }
  else {
    return nil;
  }
}

- (jint)getTargetLabel {
  if (upto_ - 1 == ((OrgApacheLuceneUtilIntsRef *) nil_chk(target_))->length_) {
    return OrgApacheLuceneUtilFstFST_END_LABEL;
  }
  else {
    return IOSIntArray_Get(nil_chk(target_->ints_), target_->offset_ + upto_ - 1);
  }
}

- (jint)getCurrentLabel {
  return IOSIntArray_Get(nil_chk(((OrgApacheLuceneUtilIntsRef *) nil_chk(current_))->ints_), upto_);
}

- (void)setCurrentLabelWithInt:(jint)label {
  *IOSIntArray_GetRef(nil_chk(((OrgApacheLuceneUtilIntsRef *) nil_chk(current_))->ints_), upto_) = label;
}

- (void)grow {
  JreStrongAssign(&((OrgApacheLuceneUtilIntsRef *) nil_chk(current_))->ints_, OrgApacheLuceneUtilArrayUtil_growWithIntArray_withInt_(current_->ints_, upto_ + 1));
}

- (OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput *)setResult {
  return OrgApacheLuceneUtilFstIntsRefFSTEnum_setResult(self);
}

- (void)dealloc {
  RELEASE_(current_);
  RELEASE_(result_);
  RELEASE_(target_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput;", 0x1, -1, -1, 3, 2, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput;", 0x1, 4, 5, 3, 6, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput;", 0x1, 7, 5, 3, 6, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput;", 0x1, 8, 5, 3, 6, -1, -1 },
    { NULL, "I", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput;", 0x2, -1, -1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneUtilFstFST:);
  methods[1].selector = @selector(current);
  methods[2].selector = @selector(next);
  methods[3].selector = @selector(seekCeilWithOrgApacheLuceneUtilIntsRef:);
  methods[4].selector = @selector(seekFloorWithOrgApacheLuceneUtilIntsRef:);
  methods[5].selector = @selector(seekExactWithOrgApacheLuceneUtilIntsRef:);
  methods[6].selector = @selector(getTargetLabel);
  methods[7].selector = @selector(getCurrentLabel);
  methods[8].selector = @selector(setCurrentLabelWithInt:);
  methods[9].selector = @selector(grow);
  methods[10].selector = @selector(setResult);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "current_", "LOrgApacheLuceneUtilIntsRef;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "result_", "LOrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput;", .constantValue.asLong = 0, 0x12, -1, -1, 11, -1 },
    { "target_", "LOrgApacheLuceneUtilIntsRef;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneUtilFstFST;", "(Lorg/apache/lucene/util/fst/FST<TT;>;)V", "()Lorg/apache/lucene/util/fst/IntsRefFSTEnum$InputOutput<TT;>;", "LJavaIoIOException;", "seekCeil", "LOrgApacheLuceneUtilIntsRef;", "(Lorg/apache/lucene/util/IntsRef;)Lorg/apache/lucene/util/fst/IntsRefFSTEnum$InputOutput<TT;>;", "seekFloor", "seekExact", "setCurrentLabel", "I", "Lorg/apache/lucene/util/fst/IntsRefFSTEnum$InputOutput<TT;>;", "LOrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput;", "<T:Ljava/lang/Object;>Lorg/apache/lucene/util/fst/FSTEnum<TT;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilFstIntsRefFSTEnum = { "IntsRefFSTEnum", "org.apache.lucene.util.fst", ptrTable, methods, fields, 7, 0x11, 11, 3, -1, 12, -1, 13, -1 };
  return &_OrgApacheLuceneUtilFstIntsRefFSTEnum;
}

@end

void OrgApacheLuceneUtilFstIntsRefFSTEnum_initWithOrgApacheLuceneUtilFstFST_(OrgApacheLuceneUtilFstIntsRefFSTEnum *self, OrgApacheLuceneUtilFstFST *fst) {
  OrgApacheLuceneUtilFstFSTEnum_initPackagePrivateWithOrgApacheLuceneUtilFstFST_(self, fst);
  JreStrongAssignAndConsume(&self->current_, new_OrgApacheLuceneUtilIntsRef_initWithInt_(10));
  JreStrongAssignAndConsume(&self->result_, new_OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput_init());
  JreStrongAssign(&self->result_->input_, self->current_);
  self->current_->offset_ = 1;
}

OrgApacheLuceneUtilFstIntsRefFSTEnum *new_OrgApacheLuceneUtilFstIntsRefFSTEnum_initWithOrgApacheLuceneUtilFstFST_(OrgApacheLuceneUtilFstFST *fst) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilFstIntsRefFSTEnum, initWithOrgApacheLuceneUtilFstFST_, fst)
}

OrgApacheLuceneUtilFstIntsRefFSTEnum *create_OrgApacheLuceneUtilFstIntsRefFSTEnum_initWithOrgApacheLuceneUtilFstFST_(OrgApacheLuceneUtilFstFST *fst) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilFstIntsRefFSTEnum, initWithOrgApacheLuceneUtilFstFST_, fst)
}

OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput *OrgApacheLuceneUtilFstIntsRefFSTEnum_setResult(OrgApacheLuceneUtilFstIntsRefFSTEnum *self) {
  if (self->upto_ == 0) {
    return nil;
  }
  else {
    ((OrgApacheLuceneUtilIntsRef *) nil_chk(self->current_))->length_ = self->upto_ - 1;
    JreStrongAssign(&((OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput *) nil_chk(self->result_))->output_, IOSObjectArray_Get(nil_chk(self->output_), self->upto_));
    return self->result_;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilFstIntsRefFSTEnum)

@implementation OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  RELEASE_(input_);
  RELEASE_(output_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "input_", "LOrgApacheLuceneUtilIntsRef;", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "output_", "LNSObject;", .constantValue.asLong = 0, 0x1, -1, -1, 0, -1 },
  };
  static const void *ptrTable[] = { "TT;", "LOrgApacheLuceneUtilFstIntsRefFSTEnum;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput = { "InputOutput", "org.apache.lucene.util.fst", ptrTable, methods, fields, 7, 0x9, 1, 2, 1, -1, -1, 2, -1 };
  return &_OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput;
}

@end

void OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput_init(OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput *self) {
  NSObject_init(self);
}

OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput *new_OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput, init)
}

OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput *create_OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilFstIntsRefFSTEnum_InputOutput)
