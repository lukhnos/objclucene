//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/fst/ReverseBytesReader.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/util/fst/FST.h"
#include "org/apache/lucene/util/fst/ReverseBytesReader.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/util/fst/ReverseBytesReader must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneUtilFstReverseBytesReader () {
 @public
  IOSByteArray *bytes_;
  jint pos_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilFstReverseBytesReader, bytes_, IOSByteArray *)

@implementation OrgApacheLuceneUtilFstReverseBytesReader

- (instancetype)initPackagePrivateWithByteArray:(IOSByteArray *)bytes {
  OrgApacheLuceneUtilFstReverseBytesReader_initPackagePrivateWithByteArray_(self, bytes);
  return self;
}

- (jbyte)readByte {
  return IOSByteArray_Get(nil_chk(bytes_), pos_--);
}

- (void)readBytesWithByteArray:(IOSByteArray *)b
                       withInt:(jint)offset
                       withInt:(jint)len {
  for (jint i = 0; i < len; i++) {
    *IOSByteArray_GetRef(nil_chk(b), offset + i) = IOSByteArray_Get(nil_chk(bytes_), pos_--);
  }
}

- (void)skipBytesWithLong:(jlong)count {
  pos_ -= count;
}

- (jlong)getPosition {
  return pos_;
}

- (void)setPositionWithLong:(jlong)pos {
  self->pos_ = (jint) pos;
}

- (jboolean)reversed {
  return true;
}

- (void)dealloc {
  RELEASE_(bytes_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithByteArray:);
  methods[1].selector = @selector(readByte);
  methods[2].selector = @selector(readBytesWithByteArray:withInt:withInt:);
  methods[3].selector = @selector(skipBytesWithLong:);
  methods[4].selector = @selector(getPosition);
  methods[5].selector = @selector(setPositionWithLong:);
  methods[6].selector = @selector(reversed);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "bytes_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "pos_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[B", "readBytes", "[BII", "skipBytes", "J", "setPosition" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilFstReverseBytesReader = { "ReverseBytesReader", "org.apache.lucene.util.fst", ptrTable, methods, fields, 7, 0x10, 7, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneUtilFstReverseBytesReader;
}

@end

void OrgApacheLuceneUtilFstReverseBytesReader_initPackagePrivateWithByteArray_(OrgApacheLuceneUtilFstReverseBytesReader *self, IOSByteArray *bytes) {
  OrgApacheLuceneUtilFstFST_BytesReader_init(self);
  JreStrongAssign(&self->bytes_, bytes);
}

OrgApacheLuceneUtilFstReverseBytesReader *new_OrgApacheLuceneUtilFstReverseBytesReader_initPackagePrivateWithByteArray_(IOSByteArray *bytes) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilFstReverseBytesReader, initPackagePrivateWithByteArray_, bytes)
}

OrgApacheLuceneUtilFstReverseBytesReader *create_OrgApacheLuceneUtilFstReverseBytesReader_initPackagePrivateWithByteArray_(IOSByteArray *bytes) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilFstReverseBytesReader, initPackagePrivateWithByteArray_, bytes)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilFstReverseBytesReader)
