//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/automaton/CharacterRunAutomaton.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Character.h"
#include "org/apache/lucene/util/automaton/Automaton.h"
#include "org/apache/lucene/util/automaton/CharacterRunAutomaton.h"
#include "org/apache/lucene/util/automaton/Operations.h"
#include "org/apache/lucene/util/automaton/RunAutomaton.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/util/automaton/CharacterRunAutomaton must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneUtilAutomatonCharacterRunAutomaton

- (instancetype)initWithOrgApacheLuceneUtilAutomatonAutomaton:(OrgApacheLuceneUtilAutomatonAutomaton *)a {
  OrgApacheLuceneUtilAutomatonCharacterRunAutomaton_initWithOrgApacheLuceneUtilAutomatonAutomaton_(self, a);
  return self;
}

- (instancetype)initWithOrgApacheLuceneUtilAutomatonAutomaton:(OrgApacheLuceneUtilAutomatonAutomaton *)a
                                                      withInt:(jint)maxDeterminizedStates {
  OrgApacheLuceneUtilAutomatonCharacterRunAutomaton_initWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(self, a, maxDeterminizedStates);
  return self;
}

- (jboolean)runWithNSString:(NSString *)s {
  jint p = initial_;
  jint l = [((NSString *) nil_chk(s)) java_length];
  for (jint i = 0, cp = 0; i < l; i += JavaLangCharacter_charCountWithInt_(cp)) {
    p = [self stepWithInt:p withInt:cp = [s java_codePointAt:i]];
    if (p == -1) return false;
  }
  return IOSBooleanArray_Get(nil_chk(accept_), p);
}

- (jboolean)runWithCharArray:(IOSCharArray *)s
                     withInt:(jint)offset
                     withInt:(jint)length {
  jint p = initial_;
  jint l = offset + length;
  for (jint i = offset, cp = 0; i < l; i += JavaLangCharacter_charCountWithInt_(cp)) {
    p = [self stepWithInt:p withInt:cp = JavaLangCharacter_codePointAtWithCharArray_withInt_withInt_(s, i, l)];
    if (p == -1) return false;
  }
  return IOSBooleanArray_Get(nil_chk(accept_), p);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneUtilAutomatonAutomaton:);
  methods[1].selector = @selector(initWithOrgApacheLuceneUtilAutomatonAutomaton:withInt:);
  methods[2].selector = @selector(runWithNSString:);
  methods[3].selector = @selector(runWithCharArray:withInt:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneUtilAutomatonAutomaton;", "LOrgApacheLuceneUtilAutomatonAutomaton;I", "run", "LNSString;", "[CII" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilAutomatonCharacterRunAutomaton = { "CharacterRunAutomaton", "org.apache.lucene.util.automaton", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneUtilAutomatonCharacterRunAutomaton;
}

@end

void OrgApacheLuceneUtilAutomatonCharacterRunAutomaton_initWithOrgApacheLuceneUtilAutomatonAutomaton_(OrgApacheLuceneUtilAutomatonCharacterRunAutomaton *self, OrgApacheLuceneUtilAutomatonAutomaton *a) {
  OrgApacheLuceneUtilAutomatonCharacterRunAutomaton_initWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(self, a, OrgApacheLuceneUtilAutomatonOperations_DEFAULT_MAX_DETERMINIZED_STATES);
}

OrgApacheLuceneUtilAutomatonCharacterRunAutomaton *new_OrgApacheLuceneUtilAutomatonCharacterRunAutomaton_initWithOrgApacheLuceneUtilAutomatonAutomaton_(OrgApacheLuceneUtilAutomatonAutomaton *a) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilAutomatonCharacterRunAutomaton, initWithOrgApacheLuceneUtilAutomatonAutomaton_, a)
}

OrgApacheLuceneUtilAutomatonCharacterRunAutomaton *create_OrgApacheLuceneUtilAutomatonCharacterRunAutomaton_initWithOrgApacheLuceneUtilAutomatonAutomaton_(OrgApacheLuceneUtilAutomatonAutomaton *a) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilAutomatonCharacterRunAutomaton, initWithOrgApacheLuceneUtilAutomatonAutomaton_, a)
}

void OrgApacheLuceneUtilAutomatonCharacterRunAutomaton_initWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(OrgApacheLuceneUtilAutomatonCharacterRunAutomaton *self, OrgApacheLuceneUtilAutomatonAutomaton *a, jint maxDeterminizedStates) {
  OrgApacheLuceneUtilAutomatonRunAutomaton_initWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_withBoolean_withInt_(self, a, JavaLangCharacter_MAX_CODE_POINT, false, maxDeterminizedStates);
}

OrgApacheLuceneUtilAutomatonCharacterRunAutomaton *new_OrgApacheLuceneUtilAutomatonCharacterRunAutomaton_initWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(OrgApacheLuceneUtilAutomatonAutomaton *a, jint maxDeterminizedStates) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilAutomatonCharacterRunAutomaton, initWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_, a, maxDeterminizedStates)
}

OrgApacheLuceneUtilAutomatonCharacterRunAutomaton *create_OrgApacheLuceneUtilAutomatonCharacterRunAutomaton_initWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(OrgApacheLuceneUtilAutomatonAutomaton *a, jint maxDeterminizedStates) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilAutomatonCharacterRunAutomaton, initWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_, a, maxDeterminizedStates)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilAutomatonCharacterRunAutomaton)
