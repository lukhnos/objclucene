//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/automaton/ByteRunAutomaton.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/util/automaton/Automaton.h"
#include "org/apache/lucene/util/automaton/ByteRunAutomaton.h"
#include "org/apache/lucene/util/automaton/Operations.h"
#include "org/apache/lucene/util/automaton/RunAutomaton.h"
#include "org/apache/lucene/util/automaton/UTF32ToUTF8.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/util/automaton/ByteRunAutomaton must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneUtilAutomatonByteRunAutomaton

- (instancetype)initWithOrgApacheLuceneUtilAutomatonAutomaton:(OrgApacheLuceneUtilAutomatonAutomaton *)a {
  OrgApacheLuceneUtilAutomatonByteRunAutomaton_initWithOrgApacheLuceneUtilAutomatonAutomaton_(self, a);
  return self;
}

- (instancetype)initWithOrgApacheLuceneUtilAutomatonAutomaton:(OrgApacheLuceneUtilAutomatonAutomaton *)a
                                                  withBoolean:(jboolean)isBinary
                                                      withInt:(jint)maxDeterminizedStates {
  OrgApacheLuceneUtilAutomatonByteRunAutomaton_initWithOrgApacheLuceneUtilAutomatonAutomaton_withBoolean_withInt_(self, a, isBinary, maxDeterminizedStates);
  return self;
}

- (jboolean)runWithByteArray:(IOSByteArray *)s
                     withInt:(jint)offset
                     withInt:(jint)length {
  jint p = initial_;
  jint l = offset + length;
  for (jint i = offset; i < l; i++) {
    p = [self stepWithInt:p withInt:IOSByteArray_Get(nil_chk(s), i) & (jint) 0xFF];
    if (p == -1) return false;
  }
  return IOSBooleanArray_Get(nil_chk(accept_), p);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneUtilAutomatonAutomaton:);
  methods[1].selector = @selector(initWithOrgApacheLuceneUtilAutomatonAutomaton:withBoolean:withInt:);
  methods[2].selector = @selector(runWithByteArray:withInt:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneUtilAutomatonAutomaton;", "LOrgApacheLuceneUtilAutomatonAutomaton;ZI", "run", "[BII" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilAutomatonByteRunAutomaton = { "ByteRunAutomaton", "org.apache.lucene.util.automaton", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneUtilAutomatonByteRunAutomaton;
}

@end

void OrgApacheLuceneUtilAutomatonByteRunAutomaton_initWithOrgApacheLuceneUtilAutomatonAutomaton_(OrgApacheLuceneUtilAutomatonByteRunAutomaton *self, OrgApacheLuceneUtilAutomatonAutomaton *a) {
  OrgApacheLuceneUtilAutomatonByteRunAutomaton_initWithOrgApacheLuceneUtilAutomatonAutomaton_withBoolean_withInt_(self, a, false, OrgApacheLuceneUtilAutomatonOperations_DEFAULT_MAX_DETERMINIZED_STATES);
}

OrgApacheLuceneUtilAutomatonByteRunAutomaton *new_OrgApacheLuceneUtilAutomatonByteRunAutomaton_initWithOrgApacheLuceneUtilAutomatonAutomaton_(OrgApacheLuceneUtilAutomatonAutomaton *a) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilAutomatonByteRunAutomaton, initWithOrgApacheLuceneUtilAutomatonAutomaton_, a)
}

OrgApacheLuceneUtilAutomatonByteRunAutomaton *create_OrgApacheLuceneUtilAutomatonByteRunAutomaton_initWithOrgApacheLuceneUtilAutomatonAutomaton_(OrgApacheLuceneUtilAutomatonAutomaton *a) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilAutomatonByteRunAutomaton, initWithOrgApacheLuceneUtilAutomatonAutomaton_, a)
}

void OrgApacheLuceneUtilAutomatonByteRunAutomaton_initWithOrgApacheLuceneUtilAutomatonAutomaton_withBoolean_withInt_(OrgApacheLuceneUtilAutomatonByteRunAutomaton *self, OrgApacheLuceneUtilAutomatonAutomaton *a, jboolean isBinary, jint maxDeterminizedStates) {
  OrgApacheLuceneUtilAutomatonRunAutomaton_initWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_withBoolean_withInt_(self, isBinary ? a : [create_OrgApacheLuceneUtilAutomatonUTF32ToUTF8_init() convertWithOrgApacheLuceneUtilAutomatonAutomaton:a], 256, true, maxDeterminizedStates);
}

OrgApacheLuceneUtilAutomatonByteRunAutomaton *new_OrgApacheLuceneUtilAutomatonByteRunAutomaton_initWithOrgApacheLuceneUtilAutomatonAutomaton_withBoolean_withInt_(OrgApacheLuceneUtilAutomatonAutomaton *a, jboolean isBinary, jint maxDeterminizedStates) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilAutomatonByteRunAutomaton, initWithOrgApacheLuceneUtilAutomatonAutomaton_withBoolean_withInt_, a, isBinary, maxDeterminizedStates)
}

OrgApacheLuceneUtilAutomatonByteRunAutomaton *create_OrgApacheLuceneUtilAutomatonByteRunAutomaton_initWithOrgApacheLuceneUtilAutomatonAutomaton_withBoolean_withInt_(OrgApacheLuceneUtilAutomatonAutomaton *a, jboolean isBinary, jint maxDeterminizedStates) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilAutomatonByteRunAutomaton, initWithOrgApacheLuceneUtilAutomatonAutomaton_withBoolean_withInt_, a, isBinary, maxDeterminizedStates)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilAutomatonByteRunAutomaton)
