//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/automaton/LimitedFiniteStringsIterator.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "org/apache/lucene/util/IntsRef.h"
#include "org/apache/lucene/util/automaton/Automaton.h"
#include "org/apache/lucene/util/automaton/FiniteStringsIterator.h"
#include "org/apache/lucene/util/automaton/LimitedFiniteStringsIterator.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/util/automaton/LimitedFiniteStringsIterator must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneUtilAutomatonLimitedFiniteStringsIterator () {
 @public
  /*!
   @brief Maximum number of finite strings to create.
   */
  jint limit_;
  /*!
   @brief Number of generated finite strings.
   */
  jint count_;
}

@end

@implementation OrgApacheLuceneUtilAutomatonLimitedFiniteStringsIterator

- (instancetype)initWithOrgApacheLuceneUtilAutomatonAutomaton:(OrgApacheLuceneUtilAutomatonAutomaton *)a
                                                      withInt:(jint)limit {
  OrgApacheLuceneUtilAutomatonLimitedFiniteStringsIterator_initWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(self, a, limit);
  return self;
}

- (OrgApacheLuceneUtilIntsRef *)next {
  if (count_ >= limit_) {
    return nil;
  }
  OrgApacheLuceneUtilIntsRef *result = [super next];
  if (result != nil) {
    count_++;
  }
  return result;
}

- (jint)size {
  return count_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilIntsRef;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneUtilAutomatonAutomaton:withInt:);
  methods[1].selector = @selector(next);
  methods[2].selector = @selector(size);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "limit_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "count_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneUtilAutomatonAutomaton;I" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilAutomatonLimitedFiniteStringsIterator = { "LimitedFiniteStringsIterator", "org.apache.lucene.util.automaton", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneUtilAutomatonLimitedFiniteStringsIterator;
}

@end

void OrgApacheLuceneUtilAutomatonLimitedFiniteStringsIterator_initWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(OrgApacheLuceneUtilAutomatonLimitedFiniteStringsIterator *self, OrgApacheLuceneUtilAutomatonAutomaton *a, jint limit) {
  OrgApacheLuceneUtilAutomatonFiniteStringsIterator_initWithOrgApacheLuceneUtilAutomatonAutomaton_(self, a);
  self->limit_ = JavaLangInteger_MAX_VALUE;
  self->count_ = 0;
  if (limit != -1 && limit <= 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"limit must be -1 (which means no limit), or > 0; got: ", limit));
  }
  self->limit_ = limit > 0 ? limit : JavaLangInteger_MAX_VALUE;
}

OrgApacheLuceneUtilAutomatonLimitedFiniteStringsIterator *new_OrgApacheLuceneUtilAutomatonLimitedFiniteStringsIterator_initWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(OrgApacheLuceneUtilAutomatonAutomaton *a, jint limit) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilAutomatonLimitedFiniteStringsIterator, initWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_, a, limit)
}

OrgApacheLuceneUtilAutomatonLimitedFiniteStringsIterator *create_OrgApacheLuceneUtilAutomatonLimitedFiniteStringsIterator_initWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(OrgApacheLuceneUtilAutomatonAutomaton *a, jint limit) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilAutomatonLimitedFiniteStringsIterator, initWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_, a, limit)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilAutomatonLimitedFiniteStringsIterator)
