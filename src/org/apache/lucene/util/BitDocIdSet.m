//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/BitDocIdSet.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "org/apache/lucene/search/DocIdSet.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/util/BitDocIdSet.h"
#include "org/apache/lucene/util/BitSet.h"
#include "org/apache/lucene/util/BitSetIterator.h"
#include "org/apache/lucene/util/FixedBitSet.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"
#include "org/apache/lucene/util/SparseFixedBitSet.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/util/BitDocIdSet must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneUtilBitDocIdSet () {
 @public
  OrgApacheLuceneUtilBitSet *set_;
  jlong cost_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilBitDocIdSet, set_, OrgApacheLuceneUtilBitSet *)

inline jlong OrgApacheLuceneUtilBitDocIdSet_get_BASE_RAM_BYTES_USED(void);
static jlong OrgApacheLuceneUtilBitDocIdSet_BASE_RAM_BYTES_USED;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(OrgApacheLuceneUtilBitDocIdSet, BASE_RAM_BYTES_USED, jlong)

@interface OrgApacheLuceneUtilBitDocIdSet_Builder () {
 @public
  jint maxDoc_;
  jint threshold_;
  OrgApacheLuceneUtilSparseFixedBitSet *sparseSet_;
  OrgApacheLuceneUtilFixedBitSet *denseSet_;
  jlong costUpperBound_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilBitDocIdSet_Builder, sparseSet_, OrgApacheLuceneUtilSparseFixedBitSet *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilBitDocIdSet_Builder, denseSet_, OrgApacheLuceneUtilFixedBitSet *)

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneUtilBitDocIdSet_Builder__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneUtilBitDocIdSet_Builder__Annotations$1(void);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneUtilBitDocIdSet)

@implementation OrgApacheLuceneUtilBitDocIdSet

- (instancetype)initWithOrgApacheLuceneUtilBitSet:(OrgApacheLuceneUtilBitSet *)set
                                         withLong:(jlong)cost {
  OrgApacheLuceneUtilBitDocIdSet_initWithOrgApacheLuceneUtilBitSet_withLong_(self, set, cost);
  return self;
}

- (instancetype)initWithOrgApacheLuceneUtilBitSet:(OrgApacheLuceneUtilBitSet *)set {
  OrgApacheLuceneUtilBitDocIdSet_initWithOrgApacheLuceneUtilBitSet_(self, set);
  return self;
}

- (OrgApacheLuceneSearchDocIdSetIterator *)iterator {
  return create_OrgApacheLuceneUtilBitSetIterator_initWithOrgApacheLuceneUtilBitSet_withLong_(set_, cost_);
}

- (OrgApacheLuceneUtilBitSet *)bits {
  return set_;
}

- (jboolean)isCacheable {
  return true;
}

- (jlong)ramBytesUsed {
  return OrgApacheLuceneUtilBitDocIdSet_BASE_RAM_BYTES_USED + [((OrgApacheLuceneUtilBitSet *) nil_chk(set_)) ramBytesUsed];
}

- (NSString *)description {
  return JreStrcat("$$@$JC", [[self java_getClass] getSimpleName], @"(set=", set_, @",cost=", cost_, ')');
}

- (void)dealloc {
  RELEASE_(set_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchDocIdSetIterator;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBitSet;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneUtilBitSet:withLong:);
  methods[1].selector = @selector(initWithOrgApacheLuceneUtilBitSet:);
  methods[2].selector = @selector(iterator);
  methods[3].selector = @selector(bits);
  methods[4].selector = @selector(isCacheable);
  methods[5].selector = @selector(ramBytesUsed);
  methods[6].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BASE_RAM_BYTES_USED", "J", .constantValue.asLong = 0, 0x1a, -1, 3, -1, -1 },
    { "set_", "LOrgApacheLuceneUtilBitSet;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "cost_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneUtilBitSet;J", "LOrgApacheLuceneUtilBitSet;", "toString", &OrgApacheLuceneUtilBitDocIdSet_BASE_RAM_BYTES_USED, "LOrgApacheLuceneUtilBitDocIdSet_Builder;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilBitDocIdSet = { "BitDocIdSet", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x1, 7, 3, -1, 4, -1, -1, -1 };
  return &_OrgApacheLuceneUtilBitDocIdSet;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneUtilBitDocIdSet class]) {
    OrgApacheLuceneUtilBitDocIdSet_BASE_RAM_BYTES_USED = OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfInstanceWithIOSClass_(OrgApacheLuceneUtilBitDocIdSet_class_());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneUtilBitDocIdSet)
  }
}

@end

void OrgApacheLuceneUtilBitDocIdSet_initWithOrgApacheLuceneUtilBitSet_withLong_(OrgApacheLuceneUtilBitDocIdSet *self, OrgApacheLuceneUtilBitSet *set, jlong cost) {
  OrgApacheLuceneSearchDocIdSet_init(self);
  JreStrongAssign(&self->set_, set);
  self->cost_ = cost;
}

OrgApacheLuceneUtilBitDocIdSet *new_OrgApacheLuceneUtilBitDocIdSet_initWithOrgApacheLuceneUtilBitSet_withLong_(OrgApacheLuceneUtilBitSet *set, jlong cost) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilBitDocIdSet, initWithOrgApacheLuceneUtilBitSet_withLong_, set, cost)
}

OrgApacheLuceneUtilBitDocIdSet *create_OrgApacheLuceneUtilBitDocIdSet_initWithOrgApacheLuceneUtilBitSet_withLong_(OrgApacheLuceneUtilBitSet *set, jlong cost) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilBitDocIdSet, initWithOrgApacheLuceneUtilBitSet_withLong_, set, cost)
}

void OrgApacheLuceneUtilBitDocIdSet_initWithOrgApacheLuceneUtilBitSet_(OrgApacheLuceneUtilBitDocIdSet *self, OrgApacheLuceneUtilBitSet *set) {
  OrgApacheLuceneUtilBitDocIdSet_initWithOrgApacheLuceneUtilBitSet_withLong_(self, set, [((OrgApacheLuceneUtilBitSet *) nil_chk(set)) approximateCardinality]);
}

OrgApacheLuceneUtilBitDocIdSet *new_OrgApacheLuceneUtilBitDocIdSet_initWithOrgApacheLuceneUtilBitSet_(OrgApacheLuceneUtilBitSet *set) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilBitDocIdSet, initWithOrgApacheLuceneUtilBitSet_, set)
}

OrgApacheLuceneUtilBitDocIdSet *create_OrgApacheLuceneUtilBitDocIdSet_initWithOrgApacheLuceneUtilBitSet_(OrgApacheLuceneUtilBitSet *set) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilBitDocIdSet, initWithOrgApacheLuceneUtilBitSet_, set)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilBitDocIdSet)

@implementation OrgApacheLuceneUtilBitDocIdSet_Builder

- (instancetype)initWithInt:(jint)maxDoc
                withBoolean:(jboolean)full {
  OrgApacheLuceneUtilBitDocIdSet_Builder_initWithInt_withBoolean_(self, maxDoc, full);
  return self;
}

- (instancetype)initWithInt:(jint)maxDoc {
  OrgApacheLuceneUtilBitDocIdSet_Builder_initWithInt_(self, maxDoc);
  return self;
}

- (jboolean)dense {
  return denseSet_ != nil;
}

- (jboolean)isDefinitelyEmpty {
  return sparseSet_ == nil && denseSet_ == nil;
}

- (void)or__WithOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)it {
  if (denseSet_ != nil) {
    [denseSet_ or__WithOrgApacheLuceneSearchDocIdSetIterator:it];
    return;
  }
  jlong itCost = [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(it)) cost];
  costUpperBound_ += itCost;
  if (costUpperBound_ >= threshold_) {
    costUpperBound_ = (sparseSet_ == nil ? 0 : [sparseSet_ approximateCardinality]) + itCost;
    if (costUpperBound_ >= threshold_) {
      JreStrongAssignAndConsume(&denseSet_, new_OrgApacheLuceneUtilFixedBitSet_initWithInt_(maxDoc_));
      [denseSet_ or__WithOrgApacheLuceneSearchDocIdSetIterator:it];
      if (sparseSet_ != nil) {
        [((OrgApacheLuceneUtilFixedBitSet *) nil_chk(denseSet_)) or__WithOrgApacheLuceneSearchDocIdSetIterator:create_OrgApacheLuceneUtilBitSetIterator_initWithOrgApacheLuceneUtilBitSet_withLong_(sparseSet_, 0LL)];
      }
      return;
    }
  }
  if (sparseSet_ == nil) {
    JreStrongAssignAndConsume(&sparseSet_, new_OrgApacheLuceneUtilSparseFixedBitSet_initWithInt_(maxDoc_));
  }
  [sparseSet_ or__WithOrgApacheLuceneSearchDocIdSetIterator:it];
}

- (void)and__WithOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)it {
  if (denseSet_ != nil) {
    [denseSet_ and__WithOrgApacheLuceneSearchDocIdSetIterator:it];
  }
  else if (sparseSet_ != nil) {
    [sparseSet_ and__WithOrgApacheLuceneSearchDocIdSetIterator:it];
  }
}

- (void)andNotWithOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)it {
  if (denseSet_ != nil) {
    [denseSet_ andNotWithOrgApacheLuceneSearchDocIdSetIterator:it];
  }
  else if (sparseSet_ != nil) {
    [sparseSet_ andNotWithOrgApacheLuceneSearchDocIdSetIterator:it];
  }
}

- (OrgApacheLuceneUtilBitDocIdSet *)build {
  OrgApacheLuceneUtilBitDocIdSet *result;
  if (denseSet_ != nil) {
    result = create_OrgApacheLuceneUtilBitDocIdSet_initWithOrgApacheLuceneUtilBitSet_(denseSet_);
  }
  else if (sparseSet_ != nil) {
    result = create_OrgApacheLuceneUtilBitDocIdSet_initWithOrgApacheLuceneUtilBitSet_(sparseSet_);
  }
  else {
    result = nil;
  }
  JreStrongAssign(&denseSet_, nil);
  JreStrongAssign(&sparseSet_, nil);
  costUpperBound_ = 0;
  return result;
}

- (void)dealloc {
  RELEASE_(sparseSet_);
  RELEASE_(denseSet_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 3, 4, -1, 6, -1 },
    { NULL, "V", 0x1, 7, 3, 4, -1, 8, -1 },
    { NULL, "LOrgApacheLuceneUtilBitDocIdSet;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withBoolean:);
  methods[1].selector = @selector(initWithInt:);
  methods[2].selector = @selector(dense);
  methods[3].selector = @selector(isDefinitelyEmpty);
  methods[4].selector = @selector(or__WithOrgApacheLuceneSearchDocIdSetIterator:);
  methods[5].selector = @selector(and__WithOrgApacheLuceneSearchDocIdSetIterator:);
  methods[6].selector = @selector(andNotWithOrgApacheLuceneSearchDocIdSetIterator:);
  methods[7].selector = @selector(build);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "maxDoc_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "threshold_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "sparseSet_", "LOrgApacheLuceneUtilSparseFixedBitSet;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "denseSet_", "LOrgApacheLuceneUtilFixedBitSet;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "costUpperBound_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "IZ", "I", "or", "LOrgApacheLuceneSearchDocIdSetIterator;", "LJavaIoIOException;", "and", (void *)&OrgApacheLuceneUtilBitDocIdSet_Builder__Annotations$0, "andNot", (void *)&OrgApacheLuceneUtilBitDocIdSet_Builder__Annotations$1, "LOrgApacheLuceneUtilBitDocIdSet;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilBitDocIdSet_Builder = { "Builder", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x19, 8, 5, 9, -1, -1, -1, -1 };
  return &_OrgApacheLuceneUtilBitDocIdSet_Builder;
}

@end

void OrgApacheLuceneUtilBitDocIdSet_Builder_initWithInt_withBoolean_(OrgApacheLuceneUtilBitDocIdSet_Builder *self, jint maxDoc, jboolean full) {
  NSObject_init(self);
  self->maxDoc_ = maxDoc;
  self->threshold_ = JreURShift32(maxDoc, 10);
  if (full) {
    JreStrongAssignAndConsume(&self->denseSet_, new_OrgApacheLuceneUtilFixedBitSet_initWithInt_(maxDoc));
    [self->denseSet_ setWithInt:0 withInt:maxDoc];
  }
}

OrgApacheLuceneUtilBitDocIdSet_Builder *new_OrgApacheLuceneUtilBitDocIdSet_Builder_initWithInt_withBoolean_(jint maxDoc, jboolean full) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilBitDocIdSet_Builder, initWithInt_withBoolean_, maxDoc, full)
}

OrgApacheLuceneUtilBitDocIdSet_Builder *create_OrgApacheLuceneUtilBitDocIdSet_Builder_initWithInt_withBoolean_(jint maxDoc, jboolean full) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilBitDocIdSet_Builder, initWithInt_withBoolean_, maxDoc, full)
}

void OrgApacheLuceneUtilBitDocIdSet_Builder_initWithInt_(OrgApacheLuceneUtilBitDocIdSet_Builder *self, jint maxDoc) {
  OrgApacheLuceneUtilBitDocIdSet_Builder_initWithInt_withBoolean_(self, maxDoc, false);
}

OrgApacheLuceneUtilBitDocIdSet_Builder *new_OrgApacheLuceneUtilBitDocIdSet_Builder_initWithInt_(jint maxDoc) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilBitDocIdSet_Builder, initWithInt_, maxDoc)
}

OrgApacheLuceneUtilBitDocIdSet_Builder *create_OrgApacheLuceneUtilBitDocIdSet_Builder_initWithInt_(jint maxDoc) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilBitDocIdSet_Builder, initWithInt_, maxDoc)
}

IOSObjectArray *OrgApacheLuceneUtilBitDocIdSet_Builder__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneUtilBitDocIdSet_Builder__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilBitDocIdSet_Builder)
