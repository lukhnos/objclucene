//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/InfoStream.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/apache/lucene/util/InfoStream.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/util/InfoStream must not be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wprotocol"

inline OrgApacheLuceneUtilInfoStream *OrgApacheLuceneUtilInfoStream_get_defaultInfoStream(void);
inline OrgApacheLuceneUtilInfoStream *OrgApacheLuceneUtilInfoStream_set_defaultInfoStream(OrgApacheLuceneUtilInfoStream *value);
static OrgApacheLuceneUtilInfoStream *OrgApacheLuceneUtilInfoStream_defaultInfoStream;
J2OBJC_STATIC_FIELD_OBJ(OrgApacheLuceneUtilInfoStream, defaultInfoStream, OrgApacheLuceneUtilInfoStream *)

@interface OrgApacheLuceneUtilInfoStream_NoOutput : OrgApacheLuceneUtilInfoStream

- (instancetype)init;

- (void)messageWithNSString:(NSString *)component
               withNSString:(NSString *)message;

- (jboolean)isEnabledWithNSString:(NSString *)component;

- (void)close;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilInfoStream_NoOutput)

__attribute__((unused)) static void OrgApacheLuceneUtilInfoStream_NoOutput_init(OrgApacheLuceneUtilInfoStream_NoOutput *self);

__attribute__((unused)) static OrgApacheLuceneUtilInfoStream_NoOutput *new_OrgApacheLuceneUtilInfoStream_NoOutput_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneUtilInfoStream_NoOutput *create_OrgApacheLuceneUtilInfoStream_NoOutput_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilInfoStream_NoOutput)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneUtilInfoStream)

OrgApacheLuceneUtilInfoStream *OrgApacheLuceneUtilInfoStream_NO_OUTPUT;

@implementation OrgApacheLuceneUtilInfoStream

+ (OrgApacheLuceneUtilInfoStream *)NO_OUTPUT {
  return OrgApacheLuceneUtilInfoStream_NO_OUTPUT;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneUtilInfoStream_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)messageWithNSString:(NSString *)component
               withNSString:(NSString *)message {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jboolean)isEnabledWithNSString:(NSString *)component {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (OrgApacheLuceneUtilInfoStream *)getDefault {
  return OrgApacheLuceneUtilInfoStream_getDefault();
}

+ (void)setDefaultWithOrgApacheLuceneUtilInfoStream:(OrgApacheLuceneUtilInfoStream *)infoStream {
  OrgApacheLuceneUtilInfoStream_setDefaultWithOrgApacheLuceneUtilInfoStream_(infoStream);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilInfoStream;", 0x29, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x29, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(messageWithNSString:withNSString:);
  methods[2].selector = @selector(isEnabledWithNSString:);
  methods[3].selector = @selector(getDefault);
  methods[4].selector = @selector(setDefaultWithOrgApacheLuceneUtilInfoStream:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NO_OUTPUT", "LOrgApacheLuceneUtilInfoStream;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
    { "defaultInfoStream", "LOrgApacheLuceneUtilInfoStream;", .constantValue.asLong = 0, 0xa, -1, 7, -1, -1 },
  };
  static const void *ptrTable[] = { "message", "LNSString;LNSString;", "isEnabled", "LNSString;", "setDefault", "LOrgApacheLuceneUtilInfoStream;", &OrgApacheLuceneUtilInfoStream_NO_OUTPUT, &OrgApacheLuceneUtilInfoStream_defaultInfoStream, "LOrgApacheLuceneUtilInfoStream_NoOutput;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilInfoStream = { "InfoStream", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x401, 5, 2, -1, 8, -1, -1, -1 };
  return &_OrgApacheLuceneUtilInfoStream;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneUtilInfoStream class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneUtilInfoStream_NO_OUTPUT, new_OrgApacheLuceneUtilInfoStream_NoOutput_init());
    JreStrongAssign(&OrgApacheLuceneUtilInfoStream_defaultInfoStream, OrgApacheLuceneUtilInfoStream_NO_OUTPUT);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneUtilInfoStream)
  }
}

@end

void OrgApacheLuceneUtilInfoStream_init(OrgApacheLuceneUtilInfoStream *self) {
  NSObject_init(self);
}

OrgApacheLuceneUtilInfoStream *OrgApacheLuceneUtilInfoStream_getDefault() {
  OrgApacheLuceneUtilInfoStream_initialize();
  @synchronized(OrgApacheLuceneUtilInfoStream_class_()) {
    return JreRetainedLocalValue(OrgApacheLuceneUtilInfoStream_defaultInfoStream);
  }
}

void OrgApacheLuceneUtilInfoStream_setDefaultWithOrgApacheLuceneUtilInfoStream_(OrgApacheLuceneUtilInfoStream *infoStream) {
  OrgApacheLuceneUtilInfoStream_initialize();
  @synchronized(OrgApacheLuceneUtilInfoStream_class_()) {
    if (infoStream == nil) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Cannot set InfoStream default implementation to null. To disable logging use InfoStream.NO_OUTPUT");
    }
    JreStrongAssign(&OrgApacheLuceneUtilInfoStream_defaultInfoStream, infoStream);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilInfoStream)

@implementation OrgApacheLuceneUtilInfoStream_NoOutput

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneUtilInfoStream_NoOutput_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)messageWithNSString:(NSString *)component
               withNSString:(NSString *)message {
  JreAssert(false, @"message() should not be called when isEnabled returns false");
}

- (jboolean)isEnabledWithNSString:(NSString *)component {
  return false;
}

- (void)close {
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(messageWithNSString:withNSString:);
  methods[2].selector = @selector(isEnabledWithNSString:);
  methods[3].selector = @selector(close);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "message", "LNSString;LNSString;", "isEnabled", "LNSString;", "LOrgApacheLuceneUtilInfoStream;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilInfoStream_NoOutput = { "NoOutput", "org.apache.lucene.util", ptrTable, methods, NULL, 7, 0x1a, 4, 0, 4, -1, -1, -1, -1 };
  return &_OrgApacheLuceneUtilInfoStream_NoOutput;
}

@end

void OrgApacheLuceneUtilInfoStream_NoOutput_init(OrgApacheLuceneUtilInfoStream_NoOutput *self) {
  OrgApacheLuceneUtilInfoStream_init(self);
}

OrgApacheLuceneUtilInfoStream_NoOutput *new_OrgApacheLuceneUtilInfoStream_NoOutput_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilInfoStream_NoOutput, init)
}

OrgApacheLuceneUtilInfoStream_NoOutput *create_OrgApacheLuceneUtilInfoStream_NoOutput_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilInfoStream_NoOutput, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilInfoStream_NoOutput)
