//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/NotDocIdSet.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/search/DocIdSet.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/util/Bits.h"
#include "org/apache/lucene/util/NotDocIdSet.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/util/NotDocIdSet must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneUtilNotDocIdSet () {
 @public
  jint maxDoc_;
  OrgApacheLuceneSearchDocIdSet *in_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilNotDocIdSet, in_, OrgApacheLuceneSearchDocIdSet *)

inline jlong OrgApacheLuceneUtilNotDocIdSet_get_BASE_RAM_BYTES_USED(void);
static jlong OrgApacheLuceneUtilNotDocIdSet_BASE_RAM_BYTES_USED;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(OrgApacheLuceneUtilNotDocIdSet, BASE_RAM_BYTES_USED, jlong)

@interface OrgApacheLuceneUtilNotDocIdSet_1 : NSObject < OrgApacheLuceneUtilBits > {
 @public
  id<OrgApacheLuceneUtilBits> val$inBits_;
}

- (instancetype)initWithOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)capture$0;

- (jboolean)getWithInt:(jint)index;

- (jint)length;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilNotDocIdSet_1)

__attribute__((unused)) static void OrgApacheLuceneUtilNotDocIdSet_1_initWithOrgApacheLuceneUtilBits_(OrgApacheLuceneUtilNotDocIdSet_1 *self, id<OrgApacheLuceneUtilBits> capture$0);

__attribute__((unused)) static OrgApacheLuceneUtilNotDocIdSet_1 *new_OrgApacheLuceneUtilNotDocIdSet_1_initWithOrgApacheLuceneUtilBits_(id<OrgApacheLuceneUtilBits> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneUtilNotDocIdSet_1 *create_OrgApacheLuceneUtilNotDocIdSet_1_initWithOrgApacheLuceneUtilBits_(id<OrgApacheLuceneUtilBits> capture$0);

@interface OrgApacheLuceneUtilNotDocIdSet_2 : OrgApacheLuceneSearchDocIdSetIterator {
 @public
  OrgApacheLuceneUtilNotDocIdSet *this$0_;
  OrgApacheLuceneSearchDocIdSetIterator *val$inIterator_;
  jint doc_;
  jint nextSkippedDoc_;
}

- (instancetype)initWithOrgApacheLuceneUtilNotDocIdSet:(OrgApacheLuceneUtilNotDocIdSet *)outer$
             withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)capture$0;

- (jint)nextDoc;

- (jint)advanceWithInt:(jint)target;

- (jint)docID;

- (jlong)cost;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilNotDocIdSet_2)

__attribute__((unused)) static void OrgApacheLuceneUtilNotDocIdSet_2_initWithOrgApacheLuceneUtilNotDocIdSet_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneUtilNotDocIdSet_2 *self, OrgApacheLuceneUtilNotDocIdSet *outer$, OrgApacheLuceneSearchDocIdSetIterator *capture$0);

__attribute__((unused)) static OrgApacheLuceneUtilNotDocIdSet_2 *new_OrgApacheLuceneUtilNotDocIdSet_2_initWithOrgApacheLuceneUtilNotDocIdSet_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneUtilNotDocIdSet *outer$, OrgApacheLuceneSearchDocIdSetIterator *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneUtilNotDocIdSet_2 *create_OrgApacheLuceneUtilNotDocIdSet_2_initWithOrgApacheLuceneUtilNotDocIdSet_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneUtilNotDocIdSet *outer$, OrgApacheLuceneSearchDocIdSetIterator *capture$0);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneUtilNotDocIdSet)

@implementation OrgApacheLuceneUtilNotDocIdSet

- (instancetype)initWithInt:(jint)maxDoc
withOrgApacheLuceneSearchDocIdSet:(OrgApacheLuceneSearchDocIdSet *)inArg {
  OrgApacheLuceneUtilNotDocIdSet_initWithInt_withOrgApacheLuceneSearchDocIdSet_(self, maxDoc, inArg);
  return self;
}

- (jboolean)isCacheable {
  return [((OrgApacheLuceneSearchDocIdSet *) nil_chk(in_)) isCacheable];
}

- (id<OrgApacheLuceneUtilBits>)bits {
  id<OrgApacheLuceneUtilBits> inBits = [((OrgApacheLuceneSearchDocIdSet *) nil_chk(in_)) bits];
  if (inBits == nil) {
    return nil;
  }
  return create_OrgApacheLuceneUtilNotDocIdSet_1_initWithOrgApacheLuceneUtilBits_(inBits);
}

- (jlong)ramBytesUsed {
  return OrgApacheLuceneUtilNotDocIdSet_BASE_RAM_BYTES_USED + [((OrgApacheLuceneSearchDocIdSet *) nil_chk(in_)) ramBytesUsed];
}

- (OrgApacheLuceneSearchDocIdSetIterator *)iterator {
  OrgApacheLuceneSearchDocIdSetIterator *inIterator = [((OrgApacheLuceneSearchDocIdSet *) nil_chk(in_)) iterator];
  return create_OrgApacheLuceneUtilNotDocIdSet_2_initWithOrgApacheLuceneUtilNotDocIdSet_withOrgApacheLuceneSearchDocIdSetIterator_(self, inIterator);
}

- (void)dealloc {
  RELEASE_(in_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBits;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchDocIdSetIterator;", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withOrgApacheLuceneSearchDocIdSet:);
  methods[1].selector = @selector(isCacheable);
  methods[2].selector = @selector(bits);
  methods[3].selector = @selector(ramBytesUsed);
  methods[4].selector = @selector(iterator);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BASE_RAM_BYTES_USED", "J", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
    { "maxDoc_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "in_", "LOrgApacheLuceneSearchDocIdSet;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ILOrgApacheLuceneSearchDocIdSet;", "LJavaIoIOException;", &OrgApacheLuceneUtilNotDocIdSet_BASE_RAM_BYTES_USED };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilNotDocIdSet = { "NotDocIdSet", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x11, 5, 3, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneUtilNotDocIdSet;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneUtilNotDocIdSet class]) {
    OrgApacheLuceneUtilNotDocIdSet_BASE_RAM_BYTES_USED = OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfInstanceWithIOSClass_(OrgApacheLuceneUtilNotDocIdSet_class_());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneUtilNotDocIdSet)
  }
}

@end

void OrgApacheLuceneUtilNotDocIdSet_initWithInt_withOrgApacheLuceneSearchDocIdSet_(OrgApacheLuceneUtilNotDocIdSet *self, jint maxDoc, OrgApacheLuceneSearchDocIdSet *inArg) {
  OrgApacheLuceneSearchDocIdSet_init(self);
  self->maxDoc_ = maxDoc;
  JreStrongAssign(&self->in_, inArg);
}

OrgApacheLuceneUtilNotDocIdSet *new_OrgApacheLuceneUtilNotDocIdSet_initWithInt_withOrgApacheLuceneSearchDocIdSet_(jint maxDoc, OrgApacheLuceneSearchDocIdSet *inArg) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilNotDocIdSet, initWithInt_withOrgApacheLuceneSearchDocIdSet_, maxDoc, inArg)
}

OrgApacheLuceneUtilNotDocIdSet *create_OrgApacheLuceneUtilNotDocIdSet_initWithInt_withOrgApacheLuceneSearchDocIdSet_(jint maxDoc, OrgApacheLuceneSearchDocIdSet *inArg) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilNotDocIdSet, initWithInt_withOrgApacheLuceneSearchDocIdSet_, maxDoc, inArg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilNotDocIdSet)

@implementation OrgApacheLuceneUtilNotDocIdSet_1

- (instancetype)initWithOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)capture$0 {
  OrgApacheLuceneUtilNotDocIdSet_1_initWithOrgApacheLuceneUtilBits_(self, capture$0);
  return self;
}

- (jboolean)getWithInt:(jint)index {
  return ![((id<OrgApacheLuceneUtilBits>) nil_chk(val$inBits_)) getWithInt:index];
}

- (jint)length {
  return [((id<OrgApacheLuceneUtilBits>) nil_chk(val$inBits_)) length];
}

- (void)dealloc {
  RELEASE_(val$inBits_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneUtilBits:);
  methods[1].selector = @selector(getWithInt:);
  methods[2].selector = @selector(length);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$inBits_", "LOrgApacheLuceneUtilBits;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneUtilBits;", "get", "I", "LOrgApacheLuceneUtilNotDocIdSet;", "bits" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilNotDocIdSet_1 = { "", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x8010, 3, 1, 3, -1, 4, -1, -1 };
  return &_OrgApacheLuceneUtilNotDocIdSet_1;
}

@end

void OrgApacheLuceneUtilNotDocIdSet_1_initWithOrgApacheLuceneUtilBits_(OrgApacheLuceneUtilNotDocIdSet_1 *self, id<OrgApacheLuceneUtilBits> capture$0) {
  JreStrongAssign(&self->val$inBits_, capture$0);
  NSObject_init(self);
}

OrgApacheLuceneUtilNotDocIdSet_1 *new_OrgApacheLuceneUtilNotDocIdSet_1_initWithOrgApacheLuceneUtilBits_(id<OrgApacheLuceneUtilBits> capture$0) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilNotDocIdSet_1, initWithOrgApacheLuceneUtilBits_, capture$0)
}

OrgApacheLuceneUtilNotDocIdSet_1 *create_OrgApacheLuceneUtilNotDocIdSet_1_initWithOrgApacheLuceneUtilBits_(id<OrgApacheLuceneUtilBits> capture$0) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilNotDocIdSet_1, initWithOrgApacheLuceneUtilBits_, capture$0)
}

@implementation OrgApacheLuceneUtilNotDocIdSet_2

- (instancetype)initWithOrgApacheLuceneUtilNotDocIdSet:(OrgApacheLuceneUtilNotDocIdSet *)outer$
             withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)capture$0 {
  OrgApacheLuceneUtilNotDocIdSet_2_initWithOrgApacheLuceneUtilNotDocIdSet_withOrgApacheLuceneSearchDocIdSetIterator_(self, outer$, capture$0);
  return self;
}

- (jint)nextDoc {
  return [self advanceWithInt:doc_ + 1];
}

- (jint)advanceWithInt:(jint)target {
  doc_ = target;
  if (doc_ > nextSkippedDoc_) {
    nextSkippedDoc_ = [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(val$inIterator_)) advanceWithInt:doc_];
  }
  while (true) {
    if (doc_ >= this$0_->maxDoc_) {
      return doc_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
    }
    JreAssert(doc_ <= nextSkippedDoc_, @"org/apache/lucene/util/NotDocIdSet.java:98 condition failed: assert doc <= nextSkippedDoc;");
    if (doc_ != nextSkippedDoc_) {
      return doc_;
    }
    doc_ += 1;
    nextSkippedDoc_ = [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(val$inIterator_)) nextDoc];
  }
}

- (jint)docID {
  return doc_;
}

- (jlong)cost {
  return this$0_->maxDoc_;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$inIterator_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, 3, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneUtilNotDocIdSet:withOrgApacheLuceneSearchDocIdSetIterator:);
  methods[1].selector = @selector(nextDoc);
  methods[2].selector = @selector(advanceWithInt:);
  methods[3].selector = @selector(docID);
  methods[4].selector = @selector(cost);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneUtilNotDocIdSet;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$inIterator_", "LOrgApacheLuceneSearchDocIdSetIterator;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "doc_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "nextSkippedDoc_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneUtilNotDocIdSet;LOrgApacheLuceneSearchDocIdSetIterator;", "LJavaIoIOException;", "advance", "I", "LOrgApacheLuceneUtilNotDocIdSet;", "iterator" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilNotDocIdSet_2 = { "", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x8010, 5, 4, 4, -1, 5, -1, -1 };
  return &_OrgApacheLuceneUtilNotDocIdSet_2;
}

@end

void OrgApacheLuceneUtilNotDocIdSet_2_initWithOrgApacheLuceneUtilNotDocIdSet_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneUtilNotDocIdSet_2 *self, OrgApacheLuceneUtilNotDocIdSet *outer$, OrgApacheLuceneSearchDocIdSetIterator *capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$inIterator_, capture$0);
  OrgApacheLuceneSearchDocIdSetIterator_init(self);
  self->doc_ = -1;
  self->nextSkippedDoc_ = -1;
}

OrgApacheLuceneUtilNotDocIdSet_2 *new_OrgApacheLuceneUtilNotDocIdSet_2_initWithOrgApacheLuceneUtilNotDocIdSet_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneUtilNotDocIdSet *outer$, OrgApacheLuceneSearchDocIdSetIterator *capture$0) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilNotDocIdSet_2, initWithOrgApacheLuceneUtilNotDocIdSet_withOrgApacheLuceneSearchDocIdSetIterator_, outer$, capture$0)
}

OrgApacheLuceneUtilNotDocIdSet_2 *create_OrgApacheLuceneUtilNotDocIdSet_2_initWithOrgApacheLuceneUtilNotDocIdSet_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneUtilNotDocIdSet *outer$, OrgApacheLuceneSearchDocIdSetIterator *capture$0) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilNotDocIdSet_2, initWithOrgApacheLuceneUtilNotDocIdSet_withOrgApacheLuceneSearchDocIdSetIterator_, outer$, capture$0)
}
