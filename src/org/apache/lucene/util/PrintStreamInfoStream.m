//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/PrintStreamInfoStream.java
//

#include "J2ObjC_source.h"
#include "java/io/PrintStream.h"
#include "java/lang/System.h"
#include "java/lang/Thread.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "org/apache/lucene/util/InfoStream.h"
#include "org/apache/lucene/util/PrintStreamInfoStream.h"
#include "org/lukhnos/portmobile/file/attribute/FileTime.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/util/PrintStreamInfoStream must not be compiled with ARC (-fobjc-arc)"
#endif

inline JavaUtilConcurrentAtomicAtomicInteger *OrgApacheLuceneUtilPrintStreamInfoStream_get_MESSAGE_ID(void);
static JavaUtilConcurrentAtomicAtomicInteger *OrgApacheLuceneUtilPrintStreamInfoStream_MESSAGE_ID;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneUtilPrintStreamInfoStream, MESSAGE_ID, JavaUtilConcurrentAtomicAtomicInteger *)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneUtilPrintStreamInfoStream)

@implementation OrgApacheLuceneUtilPrintStreamInfoStream

- (instancetype)initWithJavaIoPrintStream:(JavaIoPrintStream *)stream {
  OrgApacheLuceneUtilPrintStreamInfoStream_initWithJavaIoPrintStream_(self, stream);
  return self;
}

- (instancetype)initWithJavaIoPrintStream:(JavaIoPrintStream *)stream
                                  withInt:(jint)messageID {
  OrgApacheLuceneUtilPrintStreamInfoStream_initWithJavaIoPrintStream_withInt_(self, stream, messageID);
  return self;
}

- (void)messageWithNSString:(NSString *)component
               withNSString:(NSString *)message {
  [((JavaIoPrintStream *) nil_chk(stream_)) printlnWithNSString:JreStrcat("$CI$$$$$$", component, ' ', messageID_, @" [", [self getTimestamp], @"; ", [((JavaLangThread *) nil_chk(JavaLangThread_currentThread())) getName], @"]: ", message)];
}

- (jboolean)isEnabledWithNSString:(NSString *)component {
  return true;
}

- (void)close {
  if (![self isSystemStream]) {
    [((JavaIoPrintStream *) nil_chk(stream_)) close];
  }
}

- (jboolean)isSystemStream {
  return JreObjectEqualsEquals(stream_, JreLoadStatic(JavaLangSystem, out)) || JreObjectEqualsEquals(stream_, JreLoadStatic(JavaLangSystem, err));
}

- (NSString *)getTimestamp {
  return [((OrgLukhnosPortmobileFileAttributeFileTime *) nil_chk(OrgLukhnosPortmobileFileAttributeFileTime_fromMillisWithLong_(JavaLangSystem_currentTimeMillis()))) description];
}

- (void)dealloc {
  RELEASE_(stream_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 6, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoPrintStream:);
  methods[1].selector = @selector(initWithJavaIoPrintStream:withInt:);
  methods[2].selector = @selector(messageWithNSString:withNSString:);
  methods[3].selector = @selector(isEnabledWithNSString:);
  methods[4].selector = @selector(close);
  methods[5].selector = @selector(isSystemStream);
  methods[6].selector = @selector(getTimestamp);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MESSAGE_ID", "LJavaUtilConcurrentAtomicAtomicInteger;", .constantValue.asLong = 0, 0x1a, -1, 7, -1, -1 },
    { "messageID_", "I", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "stream_", "LJavaIoPrintStream;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoPrintStream;", "LJavaIoPrintStream;I", "message", "LNSString;LNSString;", "isEnabled", "LNSString;", "LJavaIoIOException;", &OrgApacheLuceneUtilPrintStreamInfoStream_MESSAGE_ID };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilPrintStreamInfoStream = { "PrintStreamInfoStream", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x1, 7, 3, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneUtilPrintStreamInfoStream;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneUtilPrintStreamInfoStream class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneUtilPrintStreamInfoStream_MESSAGE_ID, new_JavaUtilConcurrentAtomicAtomicInteger_init());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneUtilPrintStreamInfoStream)
  }
}

@end

void OrgApacheLuceneUtilPrintStreamInfoStream_initWithJavaIoPrintStream_(OrgApacheLuceneUtilPrintStreamInfoStream *self, JavaIoPrintStream *stream) {
  OrgApacheLuceneUtilPrintStreamInfoStream_initWithJavaIoPrintStream_withInt_(self, stream, [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(OrgApacheLuceneUtilPrintStreamInfoStream_MESSAGE_ID)) getAndIncrement]);
}

OrgApacheLuceneUtilPrintStreamInfoStream *new_OrgApacheLuceneUtilPrintStreamInfoStream_initWithJavaIoPrintStream_(JavaIoPrintStream *stream) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilPrintStreamInfoStream, initWithJavaIoPrintStream_, stream)
}

OrgApacheLuceneUtilPrintStreamInfoStream *create_OrgApacheLuceneUtilPrintStreamInfoStream_initWithJavaIoPrintStream_(JavaIoPrintStream *stream) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilPrintStreamInfoStream, initWithJavaIoPrintStream_, stream)
}

void OrgApacheLuceneUtilPrintStreamInfoStream_initWithJavaIoPrintStream_withInt_(OrgApacheLuceneUtilPrintStreamInfoStream *self, JavaIoPrintStream *stream, jint messageID) {
  OrgApacheLuceneUtilInfoStream_init(self);
  JreStrongAssign(&self->stream_, stream);
  self->messageID_ = messageID;
}

OrgApacheLuceneUtilPrintStreamInfoStream *new_OrgApacheLuceneUtilPrintStreamInfoStream_initWithJavaIoPrintStream_withInt_(JavaIoPrintStream *stream, jint messageID) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilPrintStreamInfoStream, initWithJavaIoPrintStream_withInt_, stream, messageID)
}

OrgApacheLuceneUtilPrintStreamInfoStream *create_OrgApacheLuceneUtilPrintStreamInfoStream_initWithJavaIoPrintStream_withInt_(JavaIoPrintStream *stream, jint messageID) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilPrintStreamInfoStream, initWithJavaIoPrintStream_withInt_, stream, messageID)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilPrintStreamInfoStream)
