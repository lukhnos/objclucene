//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/CollectionUtil.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/List.h"
#include "java/util/RandomAccess.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/CollectionUtil.h"
#include "org/apache/lucene/util/IntroSorter.h"
#include "org/apache/lucene/util/TimSorter.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/util/CollectionUtil must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneUtilCollectionUtil ()

- (instancetype)init;

@end

__attribute__((unused)) static void OrgApacheLuceneUtilCollectionUtil_init(OrgApacheLuceneUtilCollectionUtil *self);

__attribute__((unused)) static OrgApacheLuceneUtilCollectionUtil *new_OrgApacheLuceneUtilCollectionUtil_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneUtilCollectionUtil *create_OrgApacheLuceneUtilCollectionUtil_init(void);

@interface OrgApacheLuceneUtilCollectionUtil_ListIntroSorter : OrgApacheLuceneUtilIntroSorter {
 @public
  id pivot_;
  id<JavaUtilList> list_;
  id<JavaUtilComparator> comp_;
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)list
              withJavaUtilComparator:(id<JavaUtilComparator>)comp;

- (void)setPivotWithInt:(jint)i;

- (void)swapWithInt:(jint)i
            withInt:(jint)j;

- (jint)compareWithInt:(jint)i
               withInt:(jint)j;

- (jint)comparePivotWithInt:(jint)j;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilCollectionUtil_ListIntroSorter)

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilCollectionUtil_ListIntroSorter, pivot_, id)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilCollectionUtil_ListIntroSorter, list_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilCollectionUtil_ListIntroSorter, comp_, id<JavaUtilComparator>)

__attribute__((unused)) static void OrgApacheLuceneUtilCollectionUtil_ListIntroSorter_initWithJavaUtilList_withJavaUtilComparator_(OrgApacheLuceneUtilCollectionUtil_ListIntroSorter *self, id<JavaUtilList> list, id<JavaUtilComparator> comp);

__attribute__((unused)) static OrgApacheLuceneUtilCollectionUtil_ListIntroSorter *new_OrgApacheLuceneUtilCollectionUtil_ListIntroSorter_initWithJavaUtilList_withJavaUtilComparator_(id<JavaUtilList> list, id<JavaUtilComparator> comp) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneUtilCollectionUtil_ListIntroSorter *create_OrgApacheLuceneUtilCollectionUtil_ListIntroSorter_initWithJavaUtilList_withJavaUtilComparator_(id<JavaUtilList> list, id<JavaUtilComparator> comp);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilCollectionUtil_ListIntroSorter)

@interface OrgApacheLuceneUtilCollectionUtil_ListTimSorter : OrgApacheLuceneUtilTimSorter {
 @public
  id<JavaUtilList> list_;
  id<JavaUtilComparator> comp_;
  IOSObjectArray *tmp_;
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)list
              withJavaUtilComparator:(id<JavaUtilComparator>)comp
                             withInt:(jint)maxTempSlots;

- (void)swapWithInt:(jint)i
            withInt:(jint)j;

- (void)copy__WithInt:(jint)src
              withInt:(jint)dest OBJC_METHOD_FAMILY_NONE;

- (void)saveWithInt:(jint)i
            withInt:(jint)len;

- (void)restoreWithInt:(jint)i
               withInt:(jint)j;

- (jint)compareWithInt:(jint)i
               withInt:(jint)j;

- (jint)compareSavedWithInt:(jint)i
                    withInt:(jint)j;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilCollectionUtil_ListTimSorter)

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilCollectionUtil_ListTimSorter, list_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilCollectionUtil_ListTimSorter, comp_, id<JavaUtilComparator>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilCollectionUtil_ListTimSorter, tmp_, IOSObjectArray *)

__attribute__((unused)) static void OrgApacheLuceneUtilCollectionUtil_ListTimSorter_initWithJavaUtilList_withJavaUtilComparator_withInt_(OrgApacheLuceneUtilCollectionUtil_ListTimSorter *self, id<JavaUtilList> list, id<JavaUtilComparator> comp, jint maxTempSlots);

__attribute__((unused)) static OrgApacheLuceneUtilCollectionUtil_ListTimSorter *new_OrgApacheLuceneUtilCollectionUtil_ListTimSorter_initWithJavaUtilList_withJavaUtilComparator_withInt_(id<JavaUtilList> list, id<JavaUtilComparator> comp, jint maxTempSlots) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneUtilCollectionUtil_ListTimSorter *create_OrgApacheLuceneUtilCollectionUtil_ListTimSorter_initWithJavaUtilList_withJavaUtilComparator_withInt_(id<JavaUtilList> list, id<JavaUtilComparator> comp, jint maxTempSlots);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilCollectionUtil_ListTimSorter)

@implementation OrgApacheLuceneUtilCollectionUtil

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneUtilCollectionUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)introSortWithJavaUtilList:(id<JavaUtilList>)list
           withJavaUtilComparator:(id<JavaUtilComparator>)comp {
  OrgApacheLuceneUtilCollectionUtil_introSortWithJavaUtilList_withJavaUtilComparator_(list, comp);
}

+ (void)introSortWithJavaUtilList:(id<JavaUtilList>)list {
  OrgApacheLuceneUtilCollectionUtil_introSortWithJavaUtilList_(list);
}

+ (void)timSortWithJavaUtilList:(id<JavaUtilList>)list
         withJavaUtilComparator:(id<JavaUtilComparator>)comp {
  OrgApacheLuceneUtilCollectionUtil_timSortWithJavaUtilList_withJavaUtilComparator_(list, comp);
}

+ (void)timSortWithJavaUtilList:(id<JavaUtilList>)list {
  OrgApacheLuceneUtilCollectionUtil_timSortWithJavaUtilList_(list);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x9, 0, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x9, 5, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x9, 5, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(introSortWithJavaUtilList:withJavaUtilComparator:);
  methods[2].selector = @selector(introSortWithJavaUtilList:);
  methods[3].selector = @selector(timSortWithJavaUtilList:withJavaUtilComparator:);
  methods[4].selector = @selector(timSortWithJavaUtilList:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "introSort", "LJavaUtilList;LJavaUtilComparator;", "<T:Ljava/lang/Object;>(Ljava/util/List<TT;>;Ljava/util/Comparator<-TT;>;)V", "LJavaUtilList;", "<T::Ljava/lang/Comparable<-TT;>;>(Ljava/util/List<TT;>;)V", "timSort", "LOrgApacheLuceneUtilCollectionUtil_ListIntroSorter;LOrgApacheLuceneUtilCollectionUtil_ListTimSorter;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilCollectionUtil = { "CollectionUtil", "org.apache.lucene.util", ptrTable, methods, NULL, 7, 0x11, 5, 0, -1, 6, -1, -1, -1 };
  return &_OrgApacheLuceneUtilCollectionUtil;
}

@end

void OrgApacheLuceneUtilCollectionUtil_init(OrgApacheLuceneUtilCollectionUtil *self) {
  NSObject_init(self);
}

OrgApacheLuceneUtilCollectionUtil *new_OrgApacheLuceneUtilCollectionUtil_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilCollectionUtil, init)
}

OrgApacheLuceneUtilCollectionUtil *create_OrgApacheLuceneUtilCollectionUtil_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilCollectionUtil, init)
}

void OrgApacheLuceneUtilCollectionUtil_introSortWithJavaUtilList_withJavaUtilComparator_(id<JavaUtilList> list, id<JavaUtilComparator> comp) {
  OrgApacheLuceneUtilCollectionUtil_initialize();
  jint size = [((id<JavaUtilList>) nil_chk(list)) size];
  if (size <= 1) return;
  [create_OrgApacheLuceneUtilCollectionUtil_ListIntroSorter_initWithJavaUtilList_withJavaUtilComparator_(list, comp) sortWithInt:0 withInt:size];
}

void OrgApacheLuceneUtilCollectionUtil_introSortWithJavaUtilList_(id<JavaUtilList> list) {
  OrgApacheLuceneUtilCollectionUtil_initialize();
  jint size = [((id<JavaUtilList>) nil_chk(list)) size];
  if (size <= 1) return;
  OrgApacheLuceneUtilCollectionUtil_introSortWithJavaUtilList_withJavaUtilComparator_(list, OrgApacheLuceneUtilArrayUtil_naturalComparator());
}

void OrgApacheLuceneUtilCollectionUtil_timSortWithJavaUtilList_withJavaUtilComparator_(id<JavaUtilList> list, id<JavaUtilComparator> comp) {
  OrgApacheLuceneUtilCollectionUtil_initialize();
  jint size = [((id<JavaUtilList>) nil_chk(list)) size];
  if (size <= 1) return;
  [create_OrgApacheLuceneUtilCollectionUtil_ListTimSorter_initWithJavaUtilList_withJavaUtilComparator_withInt_(list, comp, JreIntDiv([list size], 64)) sortWithInt:0 withInt:size];
}

void OrgApacheLuceneUtilCollectionUtil_timSortWithJavaUtilList_(id<JavaUtilList> list) {
  OrgApacheLuceneUtilCollectionUtil_initialize();
  jint size = [((id<JavaUtilList>) nil_chk(list)) size];
  if (size <= 1) return;
  OrgApacheLuceneUtilCollectionUtil_timSortWithJavaUtilList_withJavaUtilComparator_(list, OrgApacheLuceneUtilArrayUtil_naturalComparator());
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilCollectionUtil)

@implementation OrgApacheLuceneUtilCollectionUtil_ListIntroSorter

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)list
              withJavaUtilComparator:(id<JavaUtilComparator>)comp {
  OrgApacheLuceneUtilCollectionUtil_ListIntroSorter_initWithJavaUtilList_withJavaUtilComparator_(self, list, comp);
  return self;
}

- (void)setPivotWithInt:(jint)i {
  JreStrongAssign(&pivot_, [((id<JavaUtilList>) nil_chk(list_)) getWithInt:i]);
}

- (void)swapWithInt:(jint)i
            withInt:(jint)j {
  JavaUtilCollections_swapWithJavaUtilList_withInt_withInt_(list_, i, j);
}

- (jint)compareWithInt:(jint)i
               withInt:(jint)j {
  return [((id<JavaUtilComparator>) nil_chk(comp_)) compareWithId:[((id<JavaUtilList>) nil_chk(list_)) getWithInt:i] withId:[list_ getWithInt:j]];
}

- (jint)comparePivotWithInt:(jint)j {
  return [((id<JavaUtilComparator>) nil_chk(comp_)) compareWithId:pivot_ withId:[((id<JavaUtilList>) nil_chk(list_)) getWithInt:j]];
}

- (void)dealloc {
  RELEASE_(pivot_);
  RELEASE_(list_);
  RELEASE_(comp_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x4, 6, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x4, 7, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilList:withJavaUtilComparator:);
  methods[1].selector = @selector(setPivotWithInt:);
  methods[2].selector = @selector(swapWithInt:withInt:);
  methods[3].selector = @selector(compareWithInt:withInt:);
  methods[4].selector = @selector(comparePivotWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "pivot_", "LNSObject;", .constantValue.asLong = 0, 0x0, -1, -1, 8, -1 },
    { "list_", "LJavaUtilList;", .constantValue.asLong = 0, 0x10, -1, -1, 9, -1 },
    { "comp_", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x10, -1, -1, 10, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilList;LJavaUtilComparator;", "(Ljava/util/List<TT;>;Ljava/util/Comparator<-TT;>;)V", "setPivot", "I", "swap", "II", "compare", "comparePivot", "TT;", "Ljava/util/List<TT;>;", "Ljava/util/Comparator<-TT;>;", "LOrgApacheLuceneUtilCollectionUtil;", "<T:Ljava/lang/Object;>Lorg/apache/lucene/util/IntroSorter;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilCollectionUtil_ListIntroSorter = { "ListIntroSorter", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x1a, 5, 3, 11, -1, -1, 12, -1 };
  return &_OrgApacheLuceneUtilCollectionUtil_ListIntroSorter;
}

@end

void OrgApacheLuceneUtilCollectionUtil_ListIntroSorter_initWithJavaUtilList_withJavaUtilComparator_(OrgApacheLuceneUtilCollectionUtil_ListIntroSorter *self, id<JavaUtilList> list, id<JavaUtilComparator> comp) {
  OrgApacheLuceneUtilIntroSorter_init(self);
  if (!([JavaUtilRandomAccess_class_() isInstance:list])) @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"CollectionUtil can only sort random access lists in-place.");
  JreStrongAssign(&self->list_, list);
  JreStrongAssign(&self->comp_, comp);
}

OrgApacheLuceneUtilCollectionUtil_ListIntroSorter *new_OrgApacheLuceneUtilCollectionUtil_ListIntroSorter_initWithJavaUtilList_withJavaUtilComparator_(id<JavaUtilList> list, id<JavaUtilComparator> comp) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilCollectionUtil_ListIntroSorter, initWithJavaUtilList_withJavaUtilComparator_, list, comp)
}

OrgApacheLuceneUtilCollectionUtil_ListIntroSorter *create_OrgApacheLuceneUtilCollectionUtil_ListIntroSorter_initWithJavaUtilList_withJavaUtilComparator_(id<JavaUtilList> list, id<JavaUtilComparator> comp) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilCollectionUtil_ListIntroSorter, initWithJavaUtilList_withJavaUtilComparator_, list, comp)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilCollectionUtil_ListIntroSorter)

@implementation OrgApacheLuceneUtilCollectionUtil_ListTimSorter

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)list
              withJavaUtilComparator:(id<JavaUtilComparator>)comp
                             withInt:(jint)maxTempSlots {
  OrgApacheLuceneUtilCollectionUtil_ListTimSorter_initWithJavaUtilList_withJavaUtilComparator_withInt_(self, list, comp, maxTempSlots);
  return self;
}

- (void)swapWithInt:(jint)i
            withInt:(jint)j {
  JavaUtilCollections_swapWithJavaUtilList_withInt_withInt_(list_, i, j);
}

- (void)copy__WithInt:(jint)src
              withInt:(jint)dest {
  [((id<JavaUtilList>) nil_chk(list_)) setWithInt:dest withId:[list_ getWithInt:src]];
}

- (void)saveWithInt:(jint)i
            withInt:(jint)len {
  for (jint j = 0; j < len; ++j) {
    IOSObjectArray_Set(nil_chk(tmp_), j, [((id<JavaUtilList>) nil_chk(list_)) getWithInt:i + j]);
  }
}

- (void)restoreWithInt:(jint)i
               withInt:(jint)j {
  [((id<JavaUtilList>) nil_chk(list_)) setWithInt:j withId:IOSObjectArray_Get(nil_chk(tmp_), i)];
}

- (jint)compareWithInt:(jint)i
               withInt:(jint)j {
  return [((id<JavaUtilComparator>) nil_chk(comp_)) compareWithId:[((id<JavaUtilList>) nil_chk(list_)) getWithInt:i] withId:[list_ getWithInt:j]];
}

- (jint)compareSavedWithInt:(jint)i
                    withInt:(jint)j {
  return [((id<JavaUtilComparator>) nil_chk(comp_)) compareWithId:IOSObjectArray_Get(nil_chk(tmp_), i) withId:[((id<JavaUtilList>) nil_chk(list_)) getWithInt:j]];
}

- (void)dealloc {
  RELEASE_(list_);
  RELEASE_(comp_);
  RELEASE_(tmp_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 4, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 5, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 6, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x4, 7, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x4, 8, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilList:withJavaUtilComparator:withInt:);
  methods[1].selector = @selector(swapWithInt:withInt:);
  methods[2].selector = @selector(copy__WithInt:withInt:);
  methods[3].selector = @selector(saveWithInt:withInt:);
  methods[4].selector = @selector(restoreWithInt:withInt:);
  methods[5].selector = @selector(compareWithInt:withInt:);
  methods[6].selector = @selector(compareSavedWithInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "list_", "LJavaUtilList;", .constantValue.asLong = 0, 0x10, -1, -1, 9, -1 },
    { "comp_", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x10, -1, -1, 10, -1 },
    { "tmp_", "[LNSObject;", .constantValue.asLong = 0, 0x10, -1, -1, 11, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilList;LJavaUtilComparator;I", "(Ljava/util/List<TT;>;Ljava/util/Comparator<-TT;>;I)V", "swap", "II", "copy", "save", "restore", "compare", "compareSaved", "Ljava/util/List<TT;>;", "Ljava/util/Comparator<-TT;>;", "[TT;", "LOrgApacheLuceneUtilCollectionUtil;", "<T:Ljava/lang/Object;>Lorg/apache/lucene/util/TimSorter;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilCollectionUtil_ListTimSorter = { "ListTimSorter", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x1a, 7, 3, 12, -1, -1, 13, -1 };
  return &_OrgApacheLuceneUtilCollectionUtil_ListTimSorter;
}

@end

void OrgApacheLuceneUtilCollectionUtil_ListTimSorter_initWithJavaUtilList_withJavaUtilComparator_withInt_(OrgApacheLuceneUtilCollectionUtil_ListTimSorter *self, id<JavaUtilList> list, id<JavaUtilComparator> comp, jint maxTempSlots) {
  OrgApacheLuceneUtilTimSorter_initWithInt_(self, maxTempSlots);
  if (!([JavaUtilRandomAccess_class_() isInstance:list])) @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"CollectionUtil can only sort random access lists in-place.");
  JreStrongAssign(&self->list_, list);
  JreStrongAssign(&self->comp_, comp);
  if (maxTempSlots > 0) {
    JreStrongAssign(&self->tmp_, [IOSObjectArray arrayWithLength:maxTempSlots type:NSObject_class_()]);
  }
  else {
    JreStrongAssign(&self->tmp_, nil);
  }
}

OrgApacheLuceneUtilCollectionUtil_ListTimSorter *new_OrgApacheLuceneUtilCollectionUtil_ListTimSorter_initWithJavaUtilList_withJavaUtilComparator_withInt_(id<JavaUtilList> list, id<JavaUtilComparator> comp, jint maxTempSlots) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilCollectionUtil_ListTimSorter, initWithJavaUtilList_withJavaUtilComparator_withInt_, list, comp, maxTempSlots)
}

OrgApacheLuceneUtilCollectionUtil_ListTimSorter *create_OrgApacheLuceneUtilCollectionUtil_ListTimSorter_initWithJavaUtilList_withJavaUtilComparator_withInt_(id<JavaUtilList> list, id<JavaUtilComparator> comp, jint maxTempSlots) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilCollectionUtil_ListTimSorter, initWithJavaUtilList_withJavaUtilComparator_withInt_, list, comp, maxTempSlots)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilCollectionUtil_ListTimSorter)
