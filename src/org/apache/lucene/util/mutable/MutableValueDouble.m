//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/mutable/MutableValueDouble.java
//

#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "org/apache/lucene/util/mutable/MutableValue.h"
#include "org/apache/lucene/util/mutable/MutableValueDouble.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/util/mutable/MutableValueDouble must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneUtilMutableMutableValueDouble

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneUtilMutableMutableValueDouble_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)toObject {
  JreAssert(exists_ || 0.0 == value_, @"org/apache/lucene/util/mutable/MutableValueDouble.java:30 condition failed: assert exists || 0.0D == value;");
  return exists_ ? JavaLangDouble_valueOfWithDouble_(value_) : nil;
}

- (void)copy__WithOrgApacheLuceneUtilMutableMutableValue:(OrgApacheLuceneUtilMutableMutableValue *)source {
  OrgApacheLuceneUtilMutableMutableValueDouble *s = (OrgApacheLuceneUtilMutableMutableValueDouble *) cast_chk(source, [OrgApacheLuceneUtilMutableMutableValueDouble class]);
  value_ = ((OrgApacheLuceneUtilMutableMutableValueDouble *) nil_chk(s))->value_;
  exists_ = s->exists_;
}

- (OrgApacheLuceneUtilMutableMutableValue *)duplicate {
  OrgApacheLuceneUtilMutableMutableValueDouble *v = create_OrgApacheLuceneUtilMutableMutableValueDouble_init();
  v->value_ = self->value_;
  v->exists_ = self->exists_;
  return v;
}

- (jboolean)equalsSameTypeWithId:(id)other {
  JreAssert(exists_ || 0.0 == value_, @"org/apache/lucene/util/mutable/MutableValueDouble.java:51 condition failed: assert exists || 0.0D == value;");
  OrgApacheLuceneUtilMutableMutableValueDouble *b = (OrgApacheLuceneUtilMutableMutableValueDouble *) cast_chk(other, [OrgApacheLuceneUtilMutableMutableValueDouble class]);
  return value_ == ((OrgApacheLuceneUtilMutableMutableValueDouble *) nil_chk(b))->value_ && exists_ == b->exists_;
}

- (jint)compareSameTypeWithId:(id)other {
  JreAssert(exists_ || 0.0 == value_, @"org/apache/lucene/util/mutable/MutableValueDouble.java:58 condition failed: assert exists || 0.0D == value;");
  OrgApacheLuceneUtilMutableMutableValueDouble *b = (OrgApacheLuceneUtilMutableMutableValueDouble *) cast_chk(other, [OrgApacheLuceneUtilMutableMutableValueDouble class]);
  jint c = JavaLangDouble_compareWithDouble_withDouble_(value_, ((OrgApacheLuceneUtilMutableMutableValueDouble *) nil_chk(b))->value_);
  if (c != 0) return c;
  if (exists_ == b->exists_) return 0;
  return exists_ ? 1 : -1;
}

- (NSUInteger)hash {
  JreAssert(exists_ || 0.0 == value_, @"org/apache/lucene/util/mutable/MutableValueDouble.java:68 condition failed: assert exists || 0.0D == value;");
  jlong x = JavaLangDouble_doubleToLongBitsWithDouble_(value_);
  return (jint) x + (jint) (JreURShift64(x, 32));
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilMutableMutableValue;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 5, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(toObject);
  methods[2].selector = @selector(copy__WithOrgApacheLuceneUtilMutableMutableValue:);
  methods[3].selector = @selector(duplicate);
  methods[4].selector = @selector(equalsSameTypeWithId:);
  methods[5].selector = @selector(compareSameTypeWithId:);
  methods[6].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "D", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "copy", "LOrgApacheLuceneUtilMutableMutableValue;", "equalsSameType", "LNSObject;", "compareSameType", "hashCode" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilMutableMutableValueDouble = { "MutableValueDouble", "org.apache.lucene.util.mutable", ptrTable, methods, fields, 7, 0x1, 7, 1, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneUtilMutableMutableValueDouble;
}

@end

void OrgApacheLuceneUtilMutableMutableValueDouble_init(OrgApacheLuceneUtilMutableMutableValueDouble *self) {
  OrgApacheLuceneUtilMutableMutableValue_init(self);
  self->value_ = 0.0;
}

OrgApacheLuceneUtilMutableMutableValueDouble *new_OrgApacheLuceneUtilMutableMutableValueDouble_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilMutableMutableValueDouble, init)
}

OrgApacheLuceneUtilMutableMutableValueDouble *create_OrgApacheLuceneUtilMutableMutableValueDouble_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilMutableMutableValueDouble, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilMutableMutableValueDouble)
