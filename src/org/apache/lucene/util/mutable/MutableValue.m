//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/mutable/MutableValue.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/util/mutable/MutableValue.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/util/mutable/MutableValue must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneUtilMutableMutableValue

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneUtilMutableMutableValue_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)copy__WithOrgApacheLuceneUtilMutableMutableValue:(OrgApacheLuceneUtilMutableMutableValue *)source {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (OrgApacheLuceneUtilMutableMutableValue *)duplicate {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)equalsSameTypeWithId:(id)other {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)compareSameTypeWithId:(id)other {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)toObject {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)exists {
  return exists_;
}

- (jint)compareToWithId:(OrgApacheLuceneUtilMutableMutableValue *)other {
  cast_chk(other, [OrgApacheLuceneUtilMutableMutableValue class]);
  IOSClass *c1 = [self java_getClass];
  IOSClass *c2 = [((OrgApacheLuceneUtilMutableMutableValue *) nil_chk(other)) java_getClass];
  if (!JreObjectEqualsEquals(c1, c2)) {
    jint c = ((jint) [c1 hash]) - ((jint) [c2 hash]);
    if (c == 0) {
      c = [((NSString *) nil_chk([c1 getCanonicalName])) compareToWithId:[c2 getCanonicalName]];
    }
    return c;
  }
  return [self compareSameTypeWithId:other];
}

- (jboolean)isEqual:(id)other {
  return (JreObjectEqualsEquals([self java_getClass], [nil_chk(other) java_getClass])) && [self equalsSameTypeWithId:other];
}

- (NSUInteger)hash {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)description {
  return [self exists] ? [nil_chk([self toObject]) description] : @"(null)";
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilMutableMutableValue;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 4, 3, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 5, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 6, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x401, 7, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 8, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(copy__WithOrgApacheLuceneUtilMutableMutableValue:);
  methods[2].selector = @selector(duplicate);
  methods[3].selector = @selector(equalsSameTypeWithId:);
  methods[4].selector = @selector(compareSameTypeWithId:);
  methods[5].selector = @selector(toObject);
  methods[6].selector = @selector(exists);
  methods[7].selector = @selector(compareToWithId:);
  methods[8].selector = @selector(isEqual:);
  methods[9].selector = @selector(hash);
  methods[10].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "exists_", "Z", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "copy", "LOrgApacheLuceneUtilMutableMutableValue;", "equalsSameType", "LNSObject;", "compareSameType", "compareTo", "equals", "hashCode", "toString", "Ljava/lang/Object;Ljava/lang/Comparable<Lorg/apache/lucene/util/mutable/MutableValue;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilMutableMutableValue = { "MutableValue", "org.apache.lucene.util.mutable", ptrTable, methods, fields, 7, 0x401, 11, 1, -1, -1, -1, 9, -1 };
  return &_OrgApacheLuceneUtilMutableMutableValue;
}

@end

void OrgApacheLuceneUtilMutableMutableValue_init(OrgApacheLuceneUtilMutableMutableValue *self) {
  NSObject_init(self);
  self->exists_ = true;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilMutableMutableValue)
