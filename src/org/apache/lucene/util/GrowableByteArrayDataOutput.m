//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/GrowableByteArrayDataOutput.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/System.h"
#include "org/apache/lucene/store/DataOutput.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/GrowableByteArrayDataOutput.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/util/GrowableByteArrayDataOutput must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneUtilGrowableByteArrayDataOutput

- (instancetype)initWithInt:(jint)cp {
  OrgApacheLuceneUtilGrowableByteArrayDataOutput_initWithInt_(self, cp);
  return self;
}

- (void)writeByteWithByte:(jbyte)b {
  if (length_ >= ((IOSByteArray *) nil_chk(bytes_))->size_) {
    JreStrongAssign(&bytes_, OrgApacheLuceneUtilArrayUtil_growWithByteArray_(bytes_));
  }
  *IOSByteArray_GetRef(nil_chk(bytes_), length_++) = b;
}

- (void)writeBytesWithByteArray:(IOSByteArray *)b
                        withInt:(jint)off
                        withInt:(jint)len {
  jint newLength = length_ + len;
  JreStrongAssign(&bytes_, OrgApacheLuceneUtilArrayUtil_growWithByteArray_withInt_(bytes_, newLength));
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(b, off, bytes_, length_, len);
  length_ = newLength;
}

- (void)dealloc {
  RELEASE_(bytes_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(writeByteWithByte:);
  methods[2].selector = @selector(writeBytesWithByteArray:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "bytes_", "[B", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "length_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "writeByte", "B", "writeBytes", "[BII" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilGrowableByteArrayDataOutput = { "GrowableByteArrayDataOutput", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x11, 3, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneUtilGrowableByteArrayDataOutput;
}

@end

void OrgApacheLuceneUtilGrowableByteArrayDataOutput_initWithInt_(OrgApacheLuceneUtilGrowableByteArrayDataOutput *self, jint cp) {
  OrgApacheLuceneStoreDataOutput_init(self);
  JreStrongAssignAndConsume(&self->bytes_, [IOSByteArray newArrayWithLength:OrgApacheLuceneUtilArrayUtil_oversizeWithInt_withInt_(cp, 1)]);
  self->length_ = 0;
}

OrgApacheLuceneUtilGrowableByteArrayDataOutput *new_OrgApacheLuceneUtilGrowableByteArrayDataOutput_initWithInt_(jint cp) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilGrowableByteArrayDataOutput, initWithInt_, cp)
}

OrgApacheLuceneUtilGrowableByteArrayDataOutput *create_OrgApacheLuceneUtilGrowableByteArrayDataOutput_initWithInt_(jint cp) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilGrowableByteArrayDataOutput, initWithInt_, cp)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilGrowableByteArrayDataOutput)
