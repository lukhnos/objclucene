//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/BytesRef.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Arrays.h"
#include "java/util/Comparator.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/StringHelper.h"
#include "org/apache/lucene/util/UnicodeUtil.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/util/BytesRef must not be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wprotocol"

inline id<JavaUtilComparator> OrgApacheLuceneUtilBytesRef_get_utf8SortedAsUnicodeSortOrder(void);
static id<JavaUtilComparator> OrgApacheLuceneUtilBytesRef_utf8SortedAsUnicodeSortOrder;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneUtilBytesRef, utf8SortedAsUnicodeSortOrder, id<JavaUtilComparator>)

/*!
 */
inline id<JavaUtilComparator> OrgApacheLuceneUtilBytesRef_get_utf8SortedAsUTF16SortOrder(void);
static id<JavaUtilComparator> OrgApacheLuceneUtilBytesRef_utf8SortedAsUTF16SortOrder;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneUtilBytesRef, utf8SortedAsUTF16SortOrder, id<JavaUtilComparator>)

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneUtilBytesRef__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneUtilBytesRef__Annotations$1(void);

@interface OrgApacheLuceneUtilBytesRef_UTF8SortedAsUnicodeComparator : NSObject < JavaUtilComparator >

- (instancetype)init;

- (jint)compareWithId:(OrgApacheLuceneUtilBytesRef *)a
               withId:(OrgApacheLuceneUtilBytesRef *)b;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilBytesRef_UTF8SortedAsUnicodeComparator)

__attribute__((unused)) static void OrgApacheLuceneUtilBytesRef_UTF8SortedAsUnicodeComparator_init(OrgApacheLuceneUtilBytesRef_UTF8SortedAsUnicodeComparator *self);

__attribute__((unused)) static OrgApacheLuceneUtilBytesRef_UTF8SortedAsUnicodeComparator *new_OrgApacheLuceneUtilBytesRef_UTF8SortedAsUnicodeComparator_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneUtilBytesRef_UTF8SortedAsUnicodeComparator *create_OrgApacheLuceneUtilBytesRef_UTF8SortedAsUnicodeComparator_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilBytesRef_UTF8SortedAsUnicodeComparator)

/*!
 */
@interface OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator : NSObject < JavaUtilComparator >

- (instancetype)init;

- (jint)compareWithId:(OrgApacheLuceneUtilBytesRef *)a
               withId:(OrgApacheLuceneUtilBytesRef *)b;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator)

__attribute__((unused)) static void OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator_init(OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator *self);

__attribute__((unused)) static OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator *new_OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator *create_OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator_init(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator__Annotations$0(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneUtilBytesRef)

IOSByteArray *OrgApacheLuceneUtilBytesRef_EMPTY_BYTES;

@implementation OrgApacheLuceneUtilBytesRef

+ (IOSByteArray *)EMPTY_BYTES {
  return OrgApacheLuceneUtilBytesRef_EMPTY_BYTES;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneUtilBytesRef_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithByteArray:(IOSByteArray *)bytes
                          withInt:(jint)offset
                          withInt:(jint)length {
  OrgApacheLuceneUtilBytesRef_initWithByteArray_withInt_withInt_(self, bytes, offset, length);
  return self;
}

- (instancetype)initWithByteArray:(IOSByteArray *)bytes {
  OrgApacheLuceneUtilBytesRef_initWithByteArray_(self, bytes);
  return self;
}

- (instancetype)initWithInt:(jint)capacity {
  OrgApacheLuceneUtilBytesRef_initWithInt_(self, capacity);
  return self;
}

- (instancetype)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)text {
  OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(self, text);
  return self;
}

- (jboolean)bytesEqualsWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)other {
  JreAssert(other != nil, @"org/apache/lucene/util/BytesRef.java:96 condition failed: assert other != null;");
  if (length_ == ((OrgApacheLuceneUtilBytesRef *) nil_chk(other))->length_) {
    jint otherUpto = other->offset_;
    IOSByteArray *otherBytes = other->bytes_;
    jint end = offset_ + length_;
    for (jint upto = offset_; upto < end; upto++, otherUpto++) {
      if (IOSByteArray_Get(nil_chk(bytes_), upto) != IOSByteArray_Get(nil_chk(otherBytes), otherUpto)) {
        return false;
      }
    }
    return true;
  }
  else {
    return false;
  }
}

- (OrgApacheLuceneUtilBytesRef *)java_clone {
  return create_OrgApacheLuceneUtilBytesRef_initWithByteArray_withInt_withInt_(bytes_, offset_, length_);
}

- (NSUInteger)hash {
  return OrgApacheLuceneUtilStringHelper_murmurhash3_x86_32WithOrgApacheLuceneUtilBytesRef_withInt_(self, JreLoadStatic(OrgApacheLuceneUtilStringHelper, GOOD_FAST_HASH_SEED));
}

- (jboolean)isEqual:(id)other {
  if (other == nil) {
    return false;
  }
  if ([other isKindOfClass:[OrgApacheLuceneUtilBytesRef class]]) {
    return [self bytesEqualsWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *) other];
  }
  return false;
}

- (NSString *)utf8ToString {
  IOSCharArray *ref = [IOSCharArray arrayWithLength:length_];
  jint len = OrgApacheLuceneUtilUnicodeUtil_UTF8toUTF16WithByteArray_withInt_withInt_withCharArray_(bytes_, offset_, length_, ref);
  return [NSString java_stringWithCharacters:ref offset:0 length:len];
}

- (NSString *)description {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [sb appendWithChar:'['];
  jint end = offset_ + length_;
  for (jint i = offset_; i < end; i++) {
    if (i > offset_) {
      [sb appendWithChar:' '];
    }
    [sb appendWithNSString:JavaLangInteger_toHexStringWithInt_(IOSByteArray_Get(nil_chk(bytes_), i) & (jint) 0xff)];
  }
  [sb appendWithChar:']'];
  return [sb description];
}

- (jint)compareToWithId:(OrgApacheLuceneUtilBytesRef *)other {
  cast_chk(other, [OrgApacheLuceneUtilBytesRef class]);
  return [((id<JavaUtilComparator>) nil_chk(OrgApacheLuceneUtilBytesRef_utf8SortedAsUnicodeSortOrder)) compareWithId:self withId:other];
}

+ (id<JavaUtilComparator>)getUTF8SortedAsUnicodeComparator {
  return OrgApacheLuceneUtilBytesRef_getUTF8SortedAsUnicodeComparator();
}

+ (id<JavaUtilComparator>)getUTF8SortedAsUTF16Comparator {
  return OrgApacheLuceneUtilBytesRef_getUTF8SortedAsUTF16Comparator();
}

+ (OrgApacheLuceneUtilBytesRef *)deepCopyOfWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)other {
  return OrgApacheLuceneUtilBytesRef_deepCopyOfWithOrgApacheLuceneUtilBytesRef_(other);
}

- (jboolean)isValid {
  if (bytes_ == nil) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"bytes is null");
  }
  if (length_ < 0) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I", @"length is negative: ", length_));
  }
  if (length_ > bytes_->size_) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I$I", @"length is out of bounds: ", length_, @",bytes.length=", bytes_->size_));
  }
  if (offset_ < 0) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I", @"offset is negative: ", offset_));
  }
  if (offset_ > bytes_->size_) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I$I", @"offset out of bounds: ", offset_, @",bytes.length=", bytes_->size_));
  }
  if (offset_ + length_ < 0) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I$I", @"offset+length is negative: offset=", offset_, @",length=", length_));
  }
  if (offset_ + length_ > bytes_->size_) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I$I$I", @"offset+length out of bounds: offset=", offset_, @",length=", length_, @",bytes.length=", bytes_->size_));
  }
  return true;
}

- (void)dealloc {
  RELEASE_(bytes_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRef;", 0x1, 6, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 10, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 11, 5, -1, -1, -1, -1 },
    { NULL, "LJavaUtilComparator;", 0x9, -1, -1, -1, 12, -1, -1 },
    { NULL, "LJavaUtilComparator;", 0x9, -1, -1, -1, 12, 13, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRef;", 0x9, 14, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithByteArray:withInt:withInt:);
  methods[2].selector = @selector(initWithByteArray:);
  methods[3].selector = @selector(initWithInt:);
  methods[4].selector = @selector(initWithJavaLangCharSequence:);
  methods[5].selector = @selector(bytesEqualsWithOrgApacheLuceneUtilBytesRef:);
  methods[6].selector = @selector(java_clone);
  methods[7].selector = @selector(hash);
  methods[8].selector = @selector(isEqual:);
  methods[9].selector = @selector(utf8ToString);
  methods[10].selector = @selector(description);
  methods[11].selector = @selector(compareToWithId:);
  methods[12].selector = @selector(getUTF8SortedAsUnicodeComparator);
  methods[13].selector = @selector(getUTF8SortedAsUTF16Comparator);
  methods[14].selector = @selector(deepCopyOfWithOrgApacheLuceneUtilBytesRef:);
  methods[15].selector = @selector(isValid);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EMPTY_BYTES", "[B", .constantValue.asLong = 0, 0x19, -1, 15, -1, -1 },
    { "bytes_", "[B", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "offset_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "length_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "utf8SortedAsUnicodeSortOrder", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x1a, -1, 16, 17, -1 },
    { "utf8SortedAsUTF16SortOrder", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x1a, -1, 18, 17, 19 },
  };
  static const void *ptrTable[] = { "[BII", "[B", "I", "LJavaLangCharSequence;", "bytesEquals", "LOrgApacheLuceneUtilBytesRef;", "clone", "hashCode", "equals", "LNSObject;", "toString", "compareTo", "()Ljava/util/Comparator<Lorg/apache/lucene/util/BytesRef;>;", (void *)&OrgApacheLuceneUtilBytesRef__Annotations$0, "deepCopyOf", &OrgApacheLuceneUtilBytesRef_EMPTY_BYTES, &OrgApacheLuceneUtilBytesRef_utf8SortedAsUnicodeSortOrder, "Ljava/util/Comparator<Lorg/apache/lucene/util/BytesRef;>;", &OrgApacheLuceneUtilBytesRef_utf8SortedAsUTF16SortOrder, (void *)&OrgApacheLuceneUtilBytesRef__Annotations$1, "LOrgApacheLuceneUtilBytesRef_UTF8SortedAsUnicodeComparator;LOrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator;", "Ljava/lang/Object;Ljava/lang/Comparable<Lorg/apache/lucene/util/BytesRef;>;Ljava/lang/Cloneable;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilBytesRef = { "BytesRef", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x11, 16, 6, -1, 20, -1, 21, -1 };
  return &_OrgApacheLuceneUtilBytesRef;
}

- (id)copyWithZone:(NSZone *)zone {
  return [[self java_clone] retain];
}

+ (void)initialize {
  if (self == [OrgApacheLuceneUtilBytesRef class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneUtilBytesRef_EMPTY_BYTES, [IOSByteArray newArrayWithLength:0]);
    JreStrongAssignAndConsume(&OrgApacheLuceneUtilBytesRef_utf8SortedAsUnicodeSortOrder, new_OrgApacheLuceneUtilBytesRef_UTF8SortedAsUnicodeComparator_init());
    JreStrongAssignAndConsume(&OrgApacheLuceneUtilBytesRef_utf8SortedAsUTF16SortOrder, new_OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator_init());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneUtilBytesRef)
  }
}

@end

void OrgApacheLuceneUtilBytesRef_init(OrgApacheLuceneUtilBytesRef *self) {
  OrgApacheLuceneUtilBytesRef_initWithByteArray_(self, OrgApacheLuceneUtilBytesRef_EMPTY_BYTES);
}

OrgApacheLuceneUtilBytesRef *new_OrgApacheLuceneUtilBytesRef_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilBytesRef, init)
}

OrgApacheLuceneUtilBytesRef *create_OrgApacheLuceneUtilBytesRef_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilBytesRef, init)
}

void OrgApacheLuceneUtilBytesRef_initWithByteArray_withInt_withInt_(OrgApacheLuceneUtilBytesRef *self, IOSByteArray *bytes, jint offset, jint length) {
  NSObject_init(self);
  JreStrongAssign(&self->bytes_, bytes);
  self->offset_ = offset;
  self->length_ = length;
  JreAssert([self isValid], @"org/apache/lucene/util/BytesRef.java:59 condition failed: assert isValid();");
}

OrgApacheLuceneUtilBytesRef *new_OrgApacheLuceneUtilBytesRef_initWithByteArray_withInt_withInt_(IOSByteArray *bytes, jint offset, jint length) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilBytesRef, initWithByteArray_withInt_withInt_, bytes, offset, length)
}

OrgApacheLuceneUtilBytesRef *create_OrgApacheLuceneUtilBytesRef_initWithByteArray_withInt_withInt_(IOSByteArray *bytes, jint offset, jint length) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilBytesRef, initWithByteArray_withInt_withInt_, bytes, offset, length)
}

void OrgApacheLuceneUtilBytesRef_initWithByteArray_(OrgApacheLuceneUtilBytesRef *self, IOSByteArray *bytes) {
  OrgApacheLuceneUtilBytesRef_initWithByteArray_withInt_withInt_(self, bytes, 0, ((IOSByteArray *) nil_chk(bytes))->size_);
}

OrgApacheLuceneUtilBytesRef *new_OrgApacheLuceneUtilBytesRef_initWithByteArray_(IOSByteArray *bytes) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilBytesRef, initWithByteArray_, bytes)
}

OrgApacheLuceneUtilBytesRef *create_OrgApacheLuceneUtilBytesRef_initWithByteArray_(IOSByteArray *bytes) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilBytesRef, initWithByteArray_, bytes)
}

void OrgApacheLuceneUtilBytesRef_initWithInt_(OrgApacheLuceneUtilBytesRef *self, jint capacity) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->bytes_, [IOSByteArray newArrayWithLength:capacity]);
}

OrgApacheLuceneUtilBytesRef *new_OrgApacheLuceneUtilBytesRef_initWithInt_(jint capacity) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilBytesRef, initWithInt_, capacity)
}

OrgApacheLuceneUtilBytesRef *create_OrgApacheLuceneUtilBytesRef_initWithInt_(jint capacity) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilBytesRef, initWithInt_, capacity)
}

void OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(OrgApacheLuceneUtilBytesRef *self, id<JavaLangCharSequence> text) {
  OrgApacheLuceneUtilBytesRef_initWithByteArray_(self, [IOSByteArray arrayWithLength:OrgApacheLuceneUtilUnicodeUtil_MAX_UTF8_BYTES_PER_CHAR * [((id<JavaLangCharSequence>) nil_chk(text)) java_length]]);
  self->length_ = OrgApacheLuceneUtilUnicodeUtil_UTF16toUTF8WithJavaLangCharSequence_withInt_withInt_withByteArray_(text, 0, [text java_length], self->bytes_);
}

OrgApacheLuceneUtilBytesRef *new_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(id<JavaLangCharSequence> text) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilBytesRef, initWithJavaLangCharSequence_, text)
}

OrgApacheLuceneUtilBytesRef *create_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(id<JavaLangCharSequence> text) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilBytesRef, initWithJavaLangCharSequence_, text)
}

id<JavaUtilComparator> OrgApacheLuceneUtilBytesRef_getUTF8SortedAsUnicodeComparator() {
  OrgApacheLuceneUtilBytesRef_initialize();
  return OrgApacheLuceneUtilBytesRef_utf8SortedAsUnicodeSortOrder;
}

id<JavaUtilComparator> OrgApacheLuceneUtilBytesRef_getUTF8SortedAsUTF16Comparator() {
  OrgApacheLuceneUtilBytesRef_initialize();
  return OrgApacheLuceneUtilBytesRef_utf8SortedAsUTF16SortOrder;
}

OrgApacheLuceneUtilBytesRef *OrgApacheLuceneUtilBytesRef_deepCopyOfWithOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneUtilBytesRef *other) {
  OrgApacheLuceneUtilBytesRef_initialize();
  OrgApacheLuceneUtilBytesRef *copy_ = create_OrgApacheLuceneUtilBytesRef_init();
  JreStrongAssign(&copy_->bytes_, JavaUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(((OrgApacheLuceneUtilBytesRef *) nil_chk(other))->bytes_, other->offset_, other->offset_ + other->length_));
  copy_->offset_ = 0;
  copy_->length_ = other->length_;
  return copy_;
}

IOSObjectArray *OrgApacheLuceneUtilBytesRef__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneUtilBytesRef__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilBytesRef)

@implementation OrgApacheLuceneUtilBytesRef_UTF8SortedAsUnicodeComparator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneUtilBytesRef_UTF8SortedAsUnicodeComparator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)compareWithId:(OrgApacheLuceneUtilBytesRef *)a
               withId:(OrgApacheLuceneUtilBytesRef *)b {
  IOSByteArray *aBytes = ((OrgApacheLuceneUtilBytesRef *) nil_chk(a))->bytes_;
  jint aUpto = a->offset_;
  IOSByteArray *bBytes = ((OrgApacheLuceneUtilBytesRef *) nil_chk(b))->bytes_;
  jint bUpto = b->offset_;
  jint aStop = aUpto + JavaLangMath_minWithInt_withInt_(a->length_, b->length_);
  while (aUpto < aStop) {
    jint aByte = IOSByteArray_Get(nil_chk(aBytes), aUpto++) & (jint) 0xff;
    jint bByte = IOSByteArray_Get(nil_chk(bBytes), bUpto++) & (jint) 0xff;
    jint diff = aByte - bByte;
    if (diff != 0) {
      return diff;
    }
  }
  return a->length_ - b->length_;
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compare", "LOrgApacheLuceneUtilBytesRef;LOrgApacheLuceneUtilBytesRef;", "LOrgApacheLuceneUtilBytesRef;", "Ljava/lang/Object;Ljava/util/Comparator<Lorg/apache/lucene/util/BytesRef;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilBytesRef_UTF8SortedAsUnicodeComparator = { "UTF8SortedAsUnicodeComparator", "org.apache.lucene.util", ptrTable, methods, NULL, 7, 0xa, 2, 0, 2, -1, -1, 3, -1 };
  return &_OrgApacheLuceneUtilBytesRef_UTF8SortedAsUnicodeComparator;
}

@end

void OrgApacheLuceneUtilBytesRef_UTF8SortedAsUnicodeComparator_init(OrgApacheLuceneUtilBytesRef_UTF8SortedAsUnicodeComparator *self) {
  NSObject_init(self);
}

OrgApacheLuceneUtilBytesRef_UTF8SortedAsUnicodeComparator *new_OrgApacheLuceneUtilBytesRef_UTF8SortedAsUnicodeComparator_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilBytesRef_UTF8SortedAsUnicodeComparator, init)
}

OrgApacheLuceneUtilBytesRef_UTF8SortedAsUnicodeComparator *create_OrgApacheLuceneUtilBytesRef_UTF8SortedAsUnicodeComparator_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilBytesRef_UTF8SortedAsUnicodeComparator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilBytesRef_UTF8SortedAsUnicodeComparator)

@implementation OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)compareWithId:(OrgApacheLuceneUtilBytesRef *)a
               withId:(OrgApacheLuceneUtilBytesRef *)b {
  IOSByteArray *aBytes = ((OrgApacheLuceneUtilBytesRef *) nil_chk(a))->bytes_;
  jint aUpto = a->offset_;
  IOSByteArray *bBytes = ((OrgApacheLuceneUtilBytesRef *) nil_chk(b))->bytes_;
  jint bUpto = b->offset_;
  jint aStop;
  if (a->length_ < b->length_) {
    aStop = aUpto + a->length_;
  }
  else {
    aStop = aUpto + b->length_;
  }
  while (aUpto < aStop) {
    jint aByte = IOSByteArray_Get(nil_chk(aBytes), aUpto++) & (jint) 0xff;
    jint bByte = IOSByteArray_Get(nil_chk(bBytes), bUpto++) & (jint) 0xff;
    if (aByte != bByte) {
      if (aByte >= (jint) 0xee && bByte >= (jint) 0xee) {
        if ((aByte & (jint) 0xfe) == (jint) 0xee) {
          aByte += (jint) 0xe;
        }
        if ((bByte & (jint) 0xfe) == (jint) 0xee) {
          bByte += (jint) 0xe;
        }
      }
      return aByte - bByte;
    }
  }
  return a->length_ - b->length_;
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compare", "LOrgApacheLuceneUtilBytesRef;LOrgApacheLuceneUtilBytesRef;", "LOrgApacheLuceneUtilBytesRef;", "Ljava/lang/Object;Ljava/util/Comparator<Lorg/apache/lucene/util/BytesRef;>;", (void *)&OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator__Annotations$0 };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator = { "UTF8SortedAsUTF16Comparator", "org.apache.lucene.util", ptrTable, methods, NULL, 7, 0xa, 2, 0, 2, -1, -1, 3, 4 };
  return &_OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator;
}

@end

void OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator_init(OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator *self) {
  NSObject_init(self);
}

OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator *new_OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator, init)
}

OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator *create_OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator, init)
}

IOSObjectArray *OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilBytesRef_UTF8SortedAsUTF16Comparator)
