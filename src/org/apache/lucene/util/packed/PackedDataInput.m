//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/packed/PackedDataInput.java
//

#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "org/apache/lucene/store/DataInput.h"
#include "org/apache/lucene/util/packed/PackedDataInput.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/util/packed/PackedDataInput must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneUtilPackedPackedDataInput

- (instancetype)initWithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)inArg {
  OrgApacheLuceneUtilPackedPackedDataInput_initWithOrgApacheLuceneStoreDataInput_(self, inArg);
  return self;
}

- (jlong)readLongWithInt:(jint)bitsPerValue {
  JreAssert(bitsPerValue > 0 && bitsPerValue <= 64, JavaLangInteger_valueOfWithInt_(bitsPerValue));
  jlong r = 0;
  while (bitsPerValue > 0) {
    if (remainingBits_ == 0) {
      current_ = [((OrgApacheLuceneStoreDataInput *) nil_chk(in_)) readByte] & (jint) 0xFF;
      remainingBits_ = 8;
    }
    jint bits = JavaLangMath_minWithInt_withInt_(bitsPerValue, remainingBits_);
    r = (JreLShift64(r, bits)) | ((JreURShift64(current_, (remainingBits_ - bits))) & ((JreLShift64(1LL, bits)) - 1));
    bitsPerValue -= bits;
    remainingBits_ -= bits;
  }
  return r;
}

- (void)skipToNextByte {
  remainingBits_ = 0;
}

- (void)dealloc {
  RELEASE_(in_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneStoreDataInput:);
  methods[1].selector = @selector(readLongWithInt:);
  methods[2].selector = @selector(skipToNextByte);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "in_", "LOrgApacheLuceneStoreDataInput;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "current_", "J", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "remainingBits_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneStoreDataInput;", "readLong", "I", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilPackedPackedDataInput = { "PackedDataInput", "org.apache.lucene.util.packed", ptrTable, methods, fields, 7, 0x11, 3, 3, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneUtilPackedPackedDataInput;
}

@end

void OrgApacheLuceneUtilPackedPackedDataInput_initWithOrgApacheLuceneStoreDataInput_(OrgApacheLuceneUtilPackedPackedDataInput *self, OrgApacheLuceneStoreDataInput *inArg) {
  NSObject_init(self);
  JreStrongAssign(&self->in_, inArg);
  [self skipToNextByte];
}

OrgApacheLuceneUtilPackedPackedDataInput *new_OrgApacheLuceneUtilPackedPackedDataInput_initWithOrgApacheLuceneStoreDataInput_(OrgApacheLuceneStoreDataInput *inArg) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilPackedPackedDataInput, initWithOrgApacheLuceneStoreDataInput_, inArg)
}

OrgApacheLuceneUtilPackedPackedDataInput *create_OrgApacheLuceneUtilPackedPackedDataInput_initWithOrgApacheLuceneStoreDataInput_(OrgApacheLuceneStoreDataInput *inArg) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilPackedPackedDataInput, initWithOrgApacheLuceneStoreDataInput_, inArg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilPackedPackedDataInput)
