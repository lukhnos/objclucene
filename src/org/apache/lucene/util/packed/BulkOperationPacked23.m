//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/packed/BulkOperationPacked23.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/util/packed/BulkOperationPacked.h"
#include "org/apache/lucene/util/packed/BulkOperationPacked23.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/util/packed/BulkOperationPacked23 must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneUtilPackedBulkOperationPacked23

- (instancetype)initPackagePrivate {
  OrgApacheLuceneUtilPackedBulkOperationPacked23_initPackagePrivate(self);
  return self;
}

- (void)decodeWithLongArray:(IOSLongArray *)blocks
                    withInt:(jint)blocksOffset
               withIntArray:(IOSIntArray *)values
                    withInt:(jint)valuesOffset
                    withInt:(jint)iterations {
  for (jint i = 0; i < iterations; ++i) {
    jlong block0 = IOSLongArray_Get(nil_chk(blocks), blocksOffset++);
    *IOSIntArray_GetRef(nil_chk(values), valuesOffset++) = (jint) (JreURShift64(block0, 41));
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block0, 18)) & 8388607LL);
    jlong block1 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreLShift64((block0 & 262143LL), 5)) | (JreURShift64(block1, 59)));
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block1, 36)) & 8388607LL);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block1, 13)) & 8388607LL);
    jlong block2 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreLShift64((block1 & 8191LL), 10)) | (JreURShift64(block2, 54)));
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block2, 31)) & 8388607LL);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block2, 8)) & 8388607LL);
    jlong block3 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreLShift64((block2 & 255LL), 15)) | (JreURShift64(block3, 49)));
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block3, 26)) & 8388607LL);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block3, 3)) & 8388607LL);
    jlong block4 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreLShift64((block3 & 7LL), 20)) | (JreURShift64(block4, 44)));
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block4, 21)) & 8388607LL);
    jlong block5 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreLShift64((block4 & 2097151LL), 2)) | (JreURShift64(block5, 62)));
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block5, 39)) & 8388607LL);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block5, 16)) & 8388607LL);
    jlong block6 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreLShift64((block5 & 65535LL), 7)) | (JreURShift64(block6, 57)));
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block6, 34)) & 8388607LL);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block6, 11)) & 8388607LL);
    jlong block7 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreLShift64((block6 & 2047LL), 12)) | (JreURShift64(block7, 52)));
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block7, 29)) & 8388607LL);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block7, 6)) & 8388607LL);
    jlong block8 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreLShift64((block7 & 63LL), 17)) | (JreURShift64(block8, 47)));
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block8, 24)) & 8388607LL);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block8, 1)) & 8388607LL);
    jlong block9 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreLShift64((block8 & 1LL), 22)) | (JreURShift64(block9, 42)));
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block9, 19)) & 8388607LL);
    jlong block10 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreLShift64((block9 & 524287LL), 4)) | (JreURShift64(block10, 60)));
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block10, 37)) & 8388607LL);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block10, 14)) & 8388607LL);
    jlong block11 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreLShift64((block10 & 16383LL), 9)) | (JreURShift64(block11, 55)));
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block11, 32)) & 8388607LL);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block11, 9)) & 8388607LL);
    jlong block12 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreLShift64((block11 & 511LL), 14)) | (JreURShift64(block12, 50)));
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block12, 27)) & 8388607LL);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block12, 4)) & 8388607LL);
    jlong block13 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreLShift64((block12 & 15LL), 19)) | (JreURShift64(block13, 45)));
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block13, 22)) & 8388607LL);
    jlong block14 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreLShift64((block13 & 4194303LL), 1)) | (JreURShift64(block14, 63)));
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block14, 40)) & 8388607LL);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block14, 17)) & 8388607LL);
    jlong block15 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreLShift64((block14 & 131071LL), 6)) | (JreURShift64(block15, 58)));
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block15, 35)) & 8388607LL);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block15, 12)) & 8388607LL);
    jlong block16 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreLShift64((block15 & 4095LL), 11)) | (JreURShift64(block16, 53)));
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block16, 30)) & 8388607LL);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block16, 7)) & 8388607LL);
    jlong block17 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreLShift64((block16 & 127LL), 16)) | (JreURShift64(block17, 48)));
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block17, 25)) & 8388607LL);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block17, 2)) & 8388607LL);
    jlong block18 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreLShift64((block17 & 3LL), 21)) | (JreURShift64(block18, 43)));
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block18, 20)) & 8388607LL);
    jlong block19 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreLShift64((block18 & 1048575LL), 3)) | (JreURShift64(block19, 61)));
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block19, 38)) & 8388607LL);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block19, 15)) & 8388607LL);
    jlong block20 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreLShift64((block19 & 32767LL), 8)) | (JreURShift64(block20, 56)));
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block20, 33)) & 8388607LL);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block20, 10)) & 8388607LL);
    jlong block21 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreLShift64((block20 & 1023LL), 13)) | (JreURShift64(block21, 51)));
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block21, 28)) & 8388607LL);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block21, 5)) & 8388607LL);
    jlong block22 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreLShift64((block21 & 31LL), 18)) | (JreURShift64(block22, 46)));
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) ((JreURShift64(block22, 23)) & 8388607LL);
    *IOSIntArray_GetRef(values, valuesOffset++) = (jint) (block22 & 8388607LL);
  }
}

- (void)decodeWithByteArray:(IOSByteArray *)blocks
                    withInt:(jint)blocksOffset
               withIntArray:(IOSIntArray *)values
                    withInt:(jint)valuesOffset
                    withInt:(jint)iterations {
  for (jint i = 0; i < iterations; ++i) {
    jint byte0 = IOSByteArray_Get(nil_chk(blocks), blocksOffset++) & (jint) 0xFF;
    jint byte1 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jint byte2 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    *IOSIntArray_GetRef(nil_chk(values), valuesOffset++) = (JreLShift32(byte0, 15)) | (JreLShift32(byte1, 7)) | (JreURShift32(byte2, 1));
    jint byte3 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jint byte4 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jint byte5 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    *IOSIntArray_GetRef(values, valuesOffset++) = (JreLShift32((byte2 & 1), 22)) | (JreLShift32(byte3, 14)) | (JreLShift32(byte4, 6)) | (JreURShift32(byte5, 2));
    jint byte6 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jint byte7 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jint byte8 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    *IOSIntArray_GetRef(values, valuesOffset++) = (JreLShift32((byte5 & 3), 21)) | (JreLShift32(byte6, 13)) | (JreLShift32(byte7, 5)) | (JreURShift32(byte8, 3));
    jint byte9 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jint byte10 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jint byte11 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    *IOSIntArray_GetRef(values, valuesOffset++) = (JreLShift32((byte8 & 7), 20)) | (JreLShift32(byte9, 12)) | (JreLShift32(byte10, 4)) | (JreURShift32(byte11, 4));
    jint byte12 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jint byte13 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jint byte14 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    *IOSIntArray_GetRef(values, valuesOffset++) = (JreLShift32((byte11 & 15), 19)) | (JreLShift32(byte12, 11)) | (JreLShift32(byte13, 3)) | (JreURShift32(byte14, 5));
    jint byte15 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jint byte16 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jint byte17 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    *IOSIntArray_GetRef(values, valuesOffset++) = (JreLShift32((byte14 & 31), 18)) | (JreLShift32(byte15, 10)) | (JreLShift32(byte16, 2)) | (JreURShift32(byte17, 6));
    jint byte18 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jint byte19 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jint byte20 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    *IOSIntArray_GetRef(values, valuesOffset++) = (JreLShift32((byte17 & 63), 17)) | (JreLShift32(byte18, 9)) | (JreLShift32(byte19, 1)) | (JreURShift32(byte20, 7));
    jint byte21 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jint byte22 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    *IOSIntArray_GetRef(values, valuesOffset++) = (JreLShift32((byte20 & 127), 16)) | (JreLShift32(byte21, 8)) | byte22;
  }
}

- (void)decodeWithLongArray:(IOSLongArray *)blocks
                    withInt:(jint)blocksOffset
              withLongArray:(IOSLongArray *)values
                    withInt:(jint)valuesOffset
                    withInt:(jint)iterations {
  for (jint i = 0; i < iterations; ++i) {
    jlong block0 = IOSLongArray_Get(nil_chk(blocks), blocksOffset++);
    *IOSLongArray_GetRef(nil_chk(values), valuesOffset++) = JreURShift64(block0, 41);
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block0, 18)) & 8388607LL;
    jlong block1 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((block0 & 262143LL), 5)) | (JreURShift64(block1, 59));
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block1, 36)) & 8388607LL;
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block1, 13)) & 8388607LL;
    jlong block2 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((block1 & 8191LL), 10)) | (JreURShift64(block2, 54));
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block2, 31)) & 8388607LL;
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block2, 8)) & 8388607LL;
    jlong block3 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((block2 & 255LL), 15)) | (JreURShift64(block3, 49));
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block3, 26)) & 8388607LL;
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block3, 3)) & 8388607LL;
    jlong block4 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((block3 & 7LL), 20)) | (JreURShift64(block4, 44));
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block4, 21)) & 8388607LL;
    jlong block5 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((block4 & 2097151LL), 2)) | (JreURShift64(block5, 62));
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block5, 39)) & 8388607LL;
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block5, 16)) & 8388607LL;
    jlong block6 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((block5 & 65535LL), 7)) | (JreURShift64(block6, 57));
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block6, 34)) & 8388607LL;
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block6, 11)) & 8388607LL;
    jlong block7 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((block6 & 2047LL), 12)) | (JreURShift64(block7, 52));
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block7, 29)) & 8388607LL;
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block7, 6)) & 8388607LL;
    jlong block8 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((block7 & 63LL), 17)) | (JreURShift64(block8, 47));
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block8, 24)) & 8388607LL;
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block8, 1)) & 8388607LL;
    jlong block9 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((block8 & 1LL), 22)) | (JreURShift64(block9, 42));
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block9, 19)) & 8388607LL;
    jlong block10 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((block9 & 524287LL), 4)) | (JreURShift64(block10, 60));
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block10, 37)) & 8388607LL;
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block10, 14)) & 8388607LL;
    jlong block11 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((block10 & 16383LL), 9)) | (JreURShift64(block11, 55));
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block11, 32)) & 8388607LL;
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block11, 9)) & 8388607LL;
    jlong block12 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((block11 & 511LL), 14)) | (JreURShift64(block12, 50));
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block12, 27)) & 8388607LL;
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block12, 4)) & 8388607LL;
    jlong block13 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((block12 & 15LL), 19)) | (JreURShift64(block13, 45));
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block13, 22)) & 8388607LL;
    jlong block14 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((block13 & 4194303LL), 1)) | (JreURShift64(block14, 63));
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block14, 40)) & 8388607LL;
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block14, 17)) & 8388607LL;
    jlong block15 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((block14 & 131071LL), 6)) | (JreURShift64(block15, 58));
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block15, 35)) & 8388607LL;
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block15, 12)) & 8388607LL;
    jlong block16 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((block15 & 4095LL), 11)) | (JreURShift64(block16, 53));
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block16, 30)) & 8388607LL;
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block16, 7)) & 8388607LL;
    jlong block17 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((block16 & 127LL), 16)) | (JreURShift64(block17, 48));
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block17, 25)) & 8388607LL;
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block17, 2)) & 8388607LL;
    jlong block18 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((block17 & 3LL), 21)) | (JreURShift64(block18, 43));
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block18, 20)) & 8388607LL;
    jlong block19 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((block18 & 1048575LL), 3)) | (JreURShift64(block19, 61));
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block19, 38)) & 8388607LL;
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block19, 15)) & 8388607LL;
    jlong block20 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((block19 & 32767LL), 8)) | (JreURShift64(block20, 56));
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block20, 33)) & 8388607LL;
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block20, 10)) & 8388607LL;
    jlong block21 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((block20 & 1023LL), 13)) | (JreURShift64(block21, 51));
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block21, 28)) & 8388607LL;
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block21, 5)) & 8388607LL;
    jlong block22 = IOSLongArray_Get(blocks, blocksOffset++);
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((block21 & 31LL), 18)) | (JreURShift64(block22, 46));
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreURShift64(block22, 23)) & 8388607LL;
    *IOSLongArray_GetRef(values, valuesOffset++) = block22 & 8388607LL;
  }
}

- (void)decodeWithByteArray:(IOSByteArray *)blocks
                    withInt:(jint)blocksOffset
              withLongArray:(IOSLongArray *)values
                    withInt:(jint)valuesOffset
                    withInt:(jint)iterations {
  for (jint i = 0; i < iterations; ++i) {
    jlong byte0 = IOSByteArray_Get(nil_chk(blocks), blocksOffset++) & (jint) 0xFF;
    jlong byte1 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jlong byte2 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    *IOSLongArray_GetRef(nil_chk(values), valuesOffset++) = (JreLShift64(byte0, 15)) | (JreLShift64(byte1, 7)) | (JreURShift64(byte2, 1));
    jlong byte3 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jlong byte4 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jlong byte5 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((byte2 & 1), 22)) | (JreLShift64(byte3, 14)) | (JreLShift64(byte4, 6)) | (JreURShift64(byte5, 2));
    jlong byte6 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jlong byte7 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jlong byte8 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((byte5 & 3), 21)) | (JreLShift64(byte6, 13)) | (JreLShift64(byte7, 5)) | (JreURShift64(byte8, 3));
    jlong byte9 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jlong byte10 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jlong byte11 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((byte8 & 7), 20)) | (JreLShift64(byte9, 12)) | (JreLShift64(byte10, 4)) | (JreURShift64(byte11, 4));
    jlong byte12 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jlong byte13 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jlong byte14 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((byte11 & 15), 19)) | (JreLShift64(byte12, 11)) | (JreLShift64(byte13, 3)) | (JreURShift64(byte14, 5));
    jlong byte15 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jlong byte16 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jlong byte17 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((byte14 & 31), 18)) | (JreLShift64(byte15, 10)) | (JreLShift64(byte16, 2)) | (JreURShift64(byte17, 6));
    jlong byte18 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jlong byte19 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jlong byte20 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((byte17 & 63), 17)) | (JreLShift64(byte18, 9)) | (JreLShift64(byte19, 1)) | (JreURShift64(byte20, 7));
    jlong byte21 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    jlong byte22 = IOSByteArray_Get(blocks, blocksOffset++) & (jint) 0xFF;
    *IOSLongArray_GetRef(values, valuesOffset++) = (JreLShift64((byte20 & 127), 16)) | (JreLShift64(byte21, 8)) | byte22;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(decodeWithLongArray:withInt:withIntArray:withInt:withInt:);
  methods[2].selector = @selector(decodeWithByteArray:withInt:withIntArray:withInt:withInt:);
  methods[3].selector = @selector(decodeWithLongArray:withInt:withLongArray:withInt:withInt:);
  methods[4].selector = @selector(decodeWithByteArray:withInt:withLongArray:withInt:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "decode", "[JI[III", "[BI[III", "[JI[JII", "[BI[JII" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilPackedBulkOperationPacked23 = { "BulkOperationPacked23", "org.apache.lucene.util.packed", ptrTable, methods, NULL, 7, 0x10, 5, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneUtilPackedBulkOperationPacked23;
}

@end

void OrgApacheLuceneUtilPackedBulkOperationPacked23_initPackagePrivate(OrgApacheLuceneUtilPackedBulkOperationPacked23 *self) {
  OrgApacheLuceneUtilPackedBulkOperationPacked_initPackagePrivateWithInt_(self, 23);
}

OrgApacheLuceneUtilPackedBulkOperationPacked23 *new_OrgApacheLuceneUtilPackedBulkOperationPacked23_initPackagePrivate() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilPackedBulkOperationPacked23, initPackagePrivate)
}

OrgApacheLuceneUtilPackedBulkOperationPacked23 *create_OrgApacheLuceneUtilPackedBulkOperationPacked23_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilPackedBulkOperationPacked23, initPackagePrivate)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilPackedBulkOperationPacked23)
