//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/BytesRefArray.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/util/Arrays.h"
#include "java/util/Comparator.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/ByteBlockPool.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefArray.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"
#include "org/apache/lucene/util/BytesRefIterator.h"
#include "org/apache/lucene/util/Counter.h"
#include "org/apache/lucene/util/IntroSorter.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/util/BytesRefArray must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneUtilBytesRefArray () {
 @public
  OrgApacheLuceneUtilByteBlockPool *pool_;
  IOSIntArray *offsets_;
  jint lastElement_;
  jint currentOffset_;
  OrgApacheLuceneUtilCounter *bytesUsed_;
}

- (IOSIntArray *)sortWithJavaUtilComparator:(id<JavaUtilComparator>)comp;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilBytesRefArray, pool_, OrgApacheLuceneUtilByteBlockPool *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilBytesRefArray, offsets_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilBytesRefArray, bytesUsed_, OrgApacheLuceneUtilCounter *)

__attribute__((unused)) static IOSIntArray *OrgApacheLuceneUtilBytesRefArray_sortWithJavaUtilComparator_(OrgApacheLuceneUtilBytesRefArray *self, id<JavaUtilComparator> comp);

@interface OrgApacheLuceneUtilBytesRefArray_1 : OrgApacheLuceneUtilIntroSorter {
 @public
  OrgApacheLuceneUtilBytesRefArray *this$0_;
  IOSIntArray *val$orderedEntries_;
  id<JavaUtilComparator> val$comp_;
  OrgApacheLuceneUtilBytesRef *pivot_;
  OrgApacheLuceneUtilBytesRefBuilder *pivotBuilder_;
  OrgApacheLuceneUtilBytesRefBuilder *scratch1_;
  OrgApacheLuceneUtilBytesRefBuilder *scratch2_;
}

- (instancetype)initWithOrgApacheLuceneUtilBytesRefArray:(OrgApacheLuceneUtilBytesRefArray *)outer$
                                            withIntArray:(IOSIntArray *)capture$0
                                  withJavaUtilComparator:(id<JavaUtilComparator>)capture$1;

- (void)swapWithInt:(jint)i
            withInt:(jint)j;

- (jint)compareWithInt:(jint)i
               withInt:(jint)j;

- (void)setPivotWithInt:(jint)i;

- (jint)comparePivotWithInt:(jint)j;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilBytesRefArray_1)

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilBytesRefArray_1, pivot_, OrgApacheLuceneUtilBytesRef *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilBytesRefArray_1, pivotBuilder_, OrgApacheLuceneUtilBytesRefBuilder *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilBytesRefArray_1, scratch1_, OrgApacheLuceneUtilBytesRefBuilder *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilBytesRefArray_1, scratch2_, OrgApacheLuceneUtilBytesRefBuilder *)

__attribute__((unused)) static void OrgApacheLuceneUtilBytesRefArray_1_initWithOrgApacheLuceneUtilBytesRefArray_withIntArray_withJavaUtilComparator_(OrgApacheLuceneUtilBytesRefArray_1 *self, OrgApacheLuceneUtilBytesRefArray *outer$, IOSIntArray *capture$0, id<JavaUtilComparator> capture$1);

__attribute__((unused)) static OrgApacheLuceneUtilBytesRefArray_1 *new_OrgApacheLuceneUtilBytesRefArray_1_initWithOrgApacheLuceneUtilBytesRefArray_withIntArray_withJavaUtilComparator_(OrgApacheLuceneUtilBytesRefArray *outer$, IOSIntArray *capture$0, id<JavaUtilComparator> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneUtilBytesRefArray_1 *create_OrgApacheLuceneUtilBytesRefArray_1_initWithOrgApacheLuceneUtilBytesRefArray_withIntArray_withJavaUtilComparator_(OrgApacheLuceneUtilBytesRefArray *outer$, IOSIntArray *capture$0, id<JavaUtilComparator> capture$1);

@interface OrgApacheLuceneUtilBytesRefArray_2 : NSObject < OrgApacheLuceneUtilBytesRefIterator > {
 @public
  OrgApacheLuceneUtilBytesRefArray *this$0_;
  jint val$size_;
  OrgApacheLuceneUtilBytesRefBuilder *val$spare_;
  IOSIntArray *val$indices_;
  jint pos_;
}

- (instancetype)initWithOrgApacheLuceneUtilBytesRefArray:(OrgApacheLuceneUtilBytesRefArray *)outer$
                                                 withInt:(jint)capture$0
                  withOrgApacheLuceneUtilBytesRefBuilder:(OrgApacheLuceneUtilBytesRefBuilder *)capture$1
                                            withIntArray:(IOSIntArray *)capture$2;

- (OrgApacheLuceneUtilBytesRef *)next;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilBytesRefArray_2)

__attribute__((unused)) static void OrgApacheLuceneUtilBytesRefArray_2_initWithOrgApacheLuceneUtilBytesRefArray_withInt_withOrgApacheLuceneUtilBytesRefBuilder_withIntArray_(OrgApacheLuceneUtilBytesRefArray_2 *self, OrgApacheLuceneUtilBytesRefArray *outer$, jint capture$0, OrgApacheLuceneUtilBytesRefBuilder *capture$1, IOSIntArray *capture$2);

__attribute__((unused)) static OrgApacheLuceneUtilBytesRefArray_2 *new_OrgApacheLuceneUtilBytesRefArray_2_initWithOrgApacheLuceneUtilBytesRefArray_withInt_withOrgApacheLuceneUtilBytesRefBuilder_withIntArray_(OrgApacheLuceneUtilBytesRefArray *outer$, jint capture$0, OrgApacheLuceneUtilBytesRefBuilder *capture$1, IOSIntArray *capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneUtilBytesRefArray_2 *create_OrgApacheLuceneUtilBytesRefArray_2_initWithOrgApacheLuceneUtilBytesRefArray_withInt_withOrgApacheLuceneUtilBytesRefBuilder_withIntArray_(OrgApacheLuceneUtilBytesRefArray *outer$, jint capture$0, OrgApacheLuceneUtilBytesRefBuilder *capture$1, IOSIntArray *capture$2);

@implementation OrgApacheLuceneUtilBytesRefArray

- (instancetype)initWithOrgApacheLuceneUtilCounter:(OrgApacheLuceneUtilCounter *)bytesUsed {
  OrgApacheLuceneUtilBytesRefArray_initWithOrgApacheLuceneUtilCounter_(self, bytesUsed);
  return self;
}

- (void)clear {
  lastElement_ = 0;
  currentOffset_ = 0;
  JavaUtilArrays_fillWithIntArray_withInt_(offsets_, 0);
  [((OrgApacheLuceneUtilByteBlockPool *) nil_chk(pool_)) resetWithBoolean:false withBoolean:true];
}

- (jint)appendWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)bytes {
  if (lastElement_ >= ((IOSIntArray *) nil_chk(offsets_))->size_) {
    jint oldLen = offsets_->size_;
    JreStrongAssign(&offsets_, OrgApacheLuceneUtilArrayUtil_growWithIntArray_withInt_(offsets_, offsets_->size_ + 1));
    [((OrgApacheLuceneUtilCounter *) nil_chk(bytesUsed_)) addAndGetWithLong:(((IOSIntArray *) nil_chk(offsets_))->size_ - oldLen) * OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_INT];
  }
  [((OrgApacheLuceneUtilByteBlockPool *) nil_chk(pool_)) appendWithOrgApacheLuceneUtilBytesRef:bytes];
  *IOSIntArray_GetRef(nil_chk(offsets_), lastElement_++) = currentOffset_;
  currentOffset_ += ((OrgApacheLuceneUtilBytesRef *) nil_chk(bytes))->length_;
  return lastElement_ - 1;
}

- (jint)size {
  return lastElement_;
}

- (OrgApacheLuceneUtilBytesRef *)getWithOrgApacheLuceneUtilBytesRefBuilder:(OrgApacheLuceneUtilBytesRefBuilder *)spare
                                                                   withInt:(jint)index {
  if (lastElement_ > index) {
    jint offset = IOSIntArray_Get(nil_chk(offsets_), index);
    jint length = index == lastElement_ - 1 ? currentOffset_ - offset : IOSIntArray_Get(offsets_, index + 1) - offset;
    [((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(spare)) growWithInt:length];
    [spare setLengthWithInt:length];
    [((OrgApacheLuceneUtilByteBlockPool *) nil_chk(pool_)) readBytesWithLong:offset withByteArray:[spare bytes] withInt:0 withInt:[spare length]];
    return [spare get];
  }
  @throw create_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I$I", @"index ", index, @" must be less than the size: ", lastElement_));
}

- (IOSIntArray *)sortWithJavaUtilComparator:(id<JavaUtilComparator>)comp {
  return OrgApacheLuceneUtilBytesRefArray_sortWithJavaUtilComparator_(self, comp);
}

- (id<OrgApacheLuceneUtilBytesRefIterator>)iterator {
  return [self iteratorWithJavaUtilComparator:nil];
}

- (id<OrgApacheLuceneUtilBytesRefIterator>)iteratorWithJavaUtilComparator:(id<JavaUtilComparator>)comp {
  OrgApacheLuceneUtilBytesRefBuilder *spare = create_OrgApacheLuceneUtilBytesRefBuilder_init();
  jint size = [self size];
  IOSIntArray *indices = comp == nil ? nil : OrgApacheLuceneUtilBytesRefArray_sortWithJavaUtilComparator_(self, comp);
  return create_OrgApacheLuceneUtilBytesRefArray_2_initWithOrgApacheLuceneUtilBytesRefArray_withInt_withOrgApacheLuceneUtilBytesRefBuilder_withIntArray_(self, size, spare, indices);
}

- (void)dealloc {
  RELEASE_(pool_);
  RELEASE_(offsets_);
  RELEASE_(bytesUsed_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRef;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "[I", 0x2, 5, 6, -1, 7, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRefIterator;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRefIterator;", 0x1, 8, 6, -1, 9, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneUtilCounter:);
  methods[1].selector = @selector(clear);
  methods[2].selector = @selector(appendWithOrgApacheLuceneUtilBytesRef:);
  methods[3].selector = @selector(size);
  methods[4].selector = @selector(getWithOrgApacheLuceneUtilBytesRefBuilder:withInt:);
  methods[5].selector = @selector(sortWithJavaUtilComparator:);
  methods[6].selector = @selector(iterator);
  methods[7].selector = @selector(iteratorWithJavaUtilComparator:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "pool_", "LOrgApacheLuceneUtilByteBlockPool;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "offsets_", "[I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "lastElement_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "currentOffset_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bytesUsed_", "LOrgApacheLuceneUtilCounter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneUtilCounter;", "append", "LOrgApacheLuceneUtilBytesRef;", "get", "LOrgApacheLuceneUtilBytesRefBuilder;I", "sort", "LJavaUtilComparator;", "(Ljava/util/Comparator<Lorg/apache/lucene/util/BytesRef;>;)[I", "iterator", "(Ljava/util/Comparator<Lorg/apache/lucene/util/BytesRef;>;)Lorg/apache/lucene/util/BytesRefIterator;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilBytesRefArray = { "BytesRefArray", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x11, 8, 5, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneUtilBytesRefArray;
}

@end

void OrgApacheLuceneUtilBytesRefArray_initWithOrgApacheLuceneUtilCounter_(OrgApacheLuceneUtilBytesRefArray *self, OrgApacheLuceneUtilCounter *bytesUsed) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->offsets_, [IOSIntArray newArrayWithLength:1]);
  self->lastElement_ = 0;
  self->currentOffset_ = 0;
  JreStrongAssignAndConsume(&self->pool_, new_OrgApacheLuceneUtilByteBlockPool_initWithOrgApacheLuceneUtilByteBlockPool_Allocator_(create_OrgApacheLuceneUtilByteBlockPool_DirectTrackingAllocator_initWithOrgApacheLuceneUtilCounter_(bytesUsed)));
  [self->pool_ nextBuffer];
  [((OrgApacheLuceneUtilCounter *) nil_chk(bytesUsed)) addAndGetWithLong:JreLoadStatic(OrgApacheLuceneUtilRamUsageEstimator, NUM_BYTES_ARRAY_HEADER) + OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_INT];
  JreStrongAssign(&self->bytesUsed_, bytesUsed);
}

OrgApacheLuceneUtilBytesRefArray *new_OrgApacheLuceneUtilBytesRefArray_initWithOrgApacheLuceneUtilCounter_(OrgApacheLuceneUtilCounter *bytesUsed) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilBytesRefArray, initWithOrgApacheLuceneUtilCounter_, bytesUsed)
}

OrgApacheLuceneUtilBytesRefArray *create_OrgApacheLuceneUtilBytesRefArray_initWithOrgApacheLuceneUtilCounter_(OrgApacheLuceneUtilCounter *bytesUsed) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilBytesRefArray, initWithOrgApacheLuceneUtilCounter_, bytesUsed)
}

IOSIntArray *OrgApacheLuceneUtilBytesRefArray_sortWithJavaUtilComparator_(OrgApacheLuceneUtilBytesRefArray *self, id<JavaUtilComparator> comp) {
  IOSIntArray *orderedEntries = [IOSIntArray arrayWithLength:[self size]];
  for (jint i = 0; i < orderedEntries->size_; i++) {
    *IOSIntArray_GetRef(orderedEntries, i) = i;
  }
  [create_OrgApacheLuceneUtilBytesRefArray_1_initWithOrgApacheLuceneUtilBytesRefArray_withIntArray_withJavaUtilComparator_(self, orderedEntries, comp) sortWithInt:0 withInt:[self size]];
  return orderedEntries;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilBytesRefArray)

@implementation OrgApacheLuceneUtilBytesRefArray_1

- (instancetype)initWithOrgApacheLuceneUtilBytesRefArray:(OrgApacheLuceneUtilBytesRefArray *)outer$
                                            withIntArray:(IOSIntArray *)capture$0
                                  withJavaUtilComparator:(id<JavaUtilComparator>)capture$1 {
  OrgApacheLuceneUtilBytesRefArray_1_initWithOrgApacheLuceneUtilBytesRefArray_withIntArray_withJavaUtilComparator_(self, outer$, capture$0, capture$1);
  return self;
}

- (void)swapWithInt:(jint)i
            withInt:(jint)j {
  jint o = IOSIntArray_Get(nil_chk(val$orderedEntries_), i);
  *IOSIntArray_GetRef(val$orderedEntries_, i) = IOSIntArray_Get(val$orderedEntries_, j);
  *IOSIntArray_GetRef(val$orderedEntries_, j) = o;
}

- (jint)compareWithInt:(jint)i
               withInt:(jint)j {
  jint idx1 = IOSIntArray_Get(nil_chk(val$orderedEntries_), i);
  jint idx2 = IOSIntArray_Get(val$orderedEntries_, j);
  return [((id<JavaUtilComparator>) nil_chk(val$comp_)) compareWithId:[this$0_ getWithOrgApacheLuceneUtilBytesRefBuilder:scratch1_ withInt:idx1] withId:[this$0_ getWithOrgApacheLuceneUtilBytesRefBuilder:scratch2_ withInt:idx2]];
}

- (void)setPivotWithInt:(jint)i {
  jint index = IOSIntArray_Get(nil_chk(val$orderedEntries_), i);
  JreStrongAssign(&pivot_, [this$0_ getWithOrgApacheLuceneUtilBytesRefBuilder:pivotBuilder_ withInt:index]);
}

- (jint)comparePivotWithInt:(jint)j {
  jint index = IOSIntArray_Get(nil_chk(val$orderedEntries_), j);
  return [((id<JavaUtilComparator>) nil_chk(val$comp_)) compareWithId:pivot_ withId:[this$0_ getWithOrgApacheLuceneUtilBytesRefBuilder:scratch2_ withInt:index]];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$orderedEntries_);
  RELEASE_(val$comp_);
  RELEASE_(pivot_);
  RELEASE_(pivotBuilder_);
  RELEASE_(scratch1_);
  RELEASE_(scratch2_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x4, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x4, 6, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneUtilBytesRefArray:withIntArray:withJavaUtilComparator:);
  methods[1].selector = @selector(swapWithInt:withInt:);
  methods[2].selector = @selector(compareWithInt:withInt:);
  methods[3].selector = @selector(setPivotWithInt:);
  methods[4].selector = @selector(comparePivotWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneUtilBytesRefArray;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$orderedEntries_", "[I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$comp_", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
    { "pivot_", "LOrgApacheLuceneUtilBytesRef;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pivotBuilder_", "LOrgApacheLuceneUtilBytesRefBuilder;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "scratch1_", "LOrgApacheLuceneUtilBytesRefBuilder;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "scratch2_", "LOrgApacheLuceneUtilBytesRefBuilder;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneUtilBytesRefArray;[ILJavaUtilComparator;", "swap", "II", "compare", "setPivot", "I", "comparePivot", "Ljava/util/Comparator<Lorg/apache/lucene/util/BytesRef;>;", "LOrgApacheLuceneUtilBytesRefArray;", "sortWithJavaUtilComparator:" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilBytesRefArray_1 = { "", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x8010, 5, 7, 8, -1, 9, -1, -1 };
  return &_OrgApacheLuceneUtilBytesRefArray_1;
}

@end

void OrgApacheLuceneUtilBytesRefArray_1_initWithOrgApacheLuceneUtilBytesRefArray_withIntArray_withJavaUtilComparator_(OrgApacheLuceneUtilBytesRefArray_1 *self, OrgApacheLuceneUtilBytesRefArray *outer$, IOSIntArray *capture$0, id<JavaUtilComparator> capture$1) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$orderedEntries_, capture$0);
  JreStrongAssign(&self->val$comp_, capture$1);
  OrgApacheLuceneUtilIntroSorter_init(self);
  JreStrongAssignAndConsume(&self->pivotBuilder_, new_OrgApacheLuceneUtilBytesRefBuilder_init());
  JreStrongAssignAndConsume(&self->scratch1_, new_OrgApacheLuceneUtilBytesRefBuilder_init());
  JreStrongAssignAndConsume(&self->scratch2_, new_OrgApacheLuceneUtilBytesRefBuilder_init());
}

OrgApacheLuceneUtilBytesRefArray_1 *new_OrgApacheLuceneUtilBytesRefArray_1_initWithOrgApacheLuceneUtilBytesRefArray_withIntArray_withJavaUtilComparator_(OrgApacheLuceneUtilBytesRefArray *outer$, IOSIntArray *capture$0, id<JavaUtilComparator> capture$1) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilBytesRefArray_1, initWithOrgApacheLuceneUtilBytesRefArray_withIntArray_withJavaUtilComparator_, outer$, capture$0, capture$1)
}

OrgApacheLuceneUtilBytesRefArray_1 *create_OrgApacheLuceneUtilBytesRefArray_1_initWithOrgApacheLuceneUtilBytesRefArray_withIntArray_withJavaUtilComparator_(OrgApacheLuceneUtilBytesRefArray *outer$, IOSIntArray *capture$0, id<JavaUtilComparator> capture$1) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilBytesRefArray_1, initWithOrgApacheLuceneUtilBytesRefArray_withIntArray_withJavaUtilComparator_, outer$, capture$0, capture$1)
}

@implementation OrgApacheLuceneUtilBytesRefArray_2

- (instancetype)initWithOrgApacheLuceneUtilBytesRefArray:(OrgApacheLuceneUtilBytesRefArray *)outer$
                                                 withInt:(jint)capture$0
                  withOrgApacheLuceneUtilBytesRefBuilder:(OrgApacheLuceneUtilBytesRefBuilder *)capture$1
                                            withIntArray:(IOSIntArray *)capture$2 {
  OrgApacheLuceneUtilBytesRefArray_2_initWithOrgApacheLuceneUtilBytesRefArray_withInt_withOrgApacheLuceneUtilBytesRefBuilder_withIntArray_(self, outer$, capture$0, capture$1, capture$2);
  return self;
}

- (OrgApacheLuceneUtilBytesRef *)next {
  if (pos_ < val$size_) {
    return JreRetainedLocalValue([this$0_ getWithOrgApacheLuceneUtilBytesRefBuilder:val$spare_ withInt:val$indices_ == nil ? pos_++ : IOSIntArray_Get(val$indices_, pos_++)]);
  }
  return JreRetainedLocalValue(nil);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$spare_);
  RELEASE_(val$indices_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRef;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneUtilBytesRefArray:withInt:withOrgApacheLuceneUtilBytesRefBuilder:withIntArray:);
  methods[1].selector = @selector(next);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneUtilBytesRefArray;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$size_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$spare_", "LOrgApacheLuceneUtilBytesRefBuilder;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$indices_", "[I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "pos_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneUtilBytesRefArray;ILOrgApacheLuceneUtilBytesRefBuilder;[I", "LOrgApacheLuceneUtilBytesRefArray;", "iteratorWithJavaUtilComparator:" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilBytesRefArray_2 = { "", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x8010, 2, 5, 1, -1, 2, -1, -1 };
  return &_OrgApacheLuceneUtilBytesRefArray_2;
}

@end

void OrgApacheLuceneUtilBytesRefArray_2_initWithOrgApacheLuceneUtilBytesRefArray_withInt_withOrgApacheLuceneUtilBytesRefBuilder_withIntArray_(OrgApacheLuceneUtilBytesRefArray_2 *self, OrgApacheLuceneUtilBytesRefArray *outer$, jint capture$0, OrgApacheLuceneUtilBytesRefBuilder *capture$1, IOSIntArray *capture$2) {
  JreStrongAssign(&self->this$0_, outer$);
  self->val$size_ = capture$0;
  JreStrongAssign(&self->val$spare_, capture$1);
  JreStrongAssign(&self->val$indices_, capture$2);
  NSObject_init(self);
  self->pos_ = 0;
}

OrgApacheLuceneUtilBytesRefArray_2 *new_OrgApacheLuceneUtilBytesRefArray_2_initWithOrgApacheLuceneUtilBytesRefArray_withInt_withOrgApacheLuceneUtilBytesRefBuilder_withIntArray_(OrgApacheLuceneUtilBytesRefArray *outer$, jint capture$0, OrgApacheLuceneUtilBytesRefBuilder *capture$1, IOSIntArray *capture$2) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilBytesRefArray_2, initWithOrgApacheLuceneUtilBytesRefArray_withInt_withOrgApacheLuceneUtilBytesRefBuilder_withIntArray_, outer$, capture$0, capture$1, capture$2)
}

OrgApacheLuceneUtilBytesRefArray_2 *create_OrgApacheLuceneUtilBytesRefArray_2_initWithOrgApacheLuceneUtilBytesRefArray_withInt_withOrgApacheLuceneUtilBytesRefBuilder_withIntArray_(OrgApacheLuceneUtilBytesRefArray *outer$, jint capture$0, OrgApacheLuceneUtilBytesRefBuilder *capture$1, IOSIntArray *capture$2) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilBytesRefArray_2, initWithOrgApacheLuceneUtilBytesRefArray_withInt_withOrgApacheLuceneUtilBytesRefBuilder_withIntArray_, outer$, capture$0, capture$1, capture$2)
}
