//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/IntArrayDocIdSet.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/Arrays.h"
#include "org/apache/lucene/search/DocIdSet.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/util/IntArrayDocIdSet.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/util/IntArrayDocIdSet must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneUtilIntArrayDocIdSet () {
 @public
  IOSIntArray *docs_;
  jint length_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilIntArrayDocIdSet, docs_, IOSIntArray *)

inline jlong OrgApacheLuceneUtilIntArrayDocIdSet_get_BASE_RAM_BYTES_USED(void);
static jlong OrgApacheLuceneUtilIntArrayDocIdSet_BASE_RAM_BYTES_USED;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(OrgApacheLuceneUtilIntArrayDocIdSet, BASE_RAM_BYTES_USED, jlong)

@interface OrgApacheLuceneUtilIntArrayDocIdSet_IntArrayDocIdSetIterator () {
 @public
  IOSIntArray *docs_;
  jint length_;
  jint i_;
  jint doc_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilIntArrayDocIdSet_IntArrayDocIdSetIterator, docs_, IOSIntArray *)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneUtilIntArrayDocIdSet)

@implementation OrgApacheLuceneUtilIntArrayDocIdSet

- (instancetype)initPackagePrivateWithIntArray:(IOSIntArray *)docs
                                       withInt:(jint)length {
  OrgApacheLuceneUtilIntArrayDocIdSet_initPackagePrivateWithIntArray_withInt_(self, docs, length);
  return self;
}

- (jlong)ramBytesUsed {
  return OrgApacheLuceneUtilIntArrayDocIdSet_BASE_RAM_BYTES_USED + OrgApacheLuceneUtilRamUsageEstimator_sizeOfWithIntArray_(docs_);
}

- (OrgApacheLuceneSearchDocIdSetIterator *)iterator {
  return create_OrgApacheLuceneUtilIntArrayDocIdSet_IntArrayDocIdSetIterator_initWithIntArray_withInt_(docs_, length_);
}

- (void)dealloc {
  RELEASE_(docs_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchDocIdSetIterator;", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithIntArray:withInt:);
  methods[1].selector = @selector(ramBytesUsed);
  methods[2].selector = @selector(iterator);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BASE_RAM_BYTES_USED", "J", .constantValue.asLong = 0, 0x1a, -1, 2, -1, -1 },
    { "docs_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "length_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[II", "LJavaIoIOException;", &OrgApacheLuceneUtilIntArrayDocIdSet_BASE_RAM_BYTES_USED, "LOrgApacheLuceneUtilIntArrayDocIdSet_IntArrayDocIdSetIterator;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilIntArrayDocIdSet = { "IntArrayDocIdSet", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x10, 3, 3, -1, 3, -1, -1, -1 };
  return &_OrgApacheLuceneUtilIntArrayDocIdSet;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneUtilIntArrayDocIdSet class]) {
    OrgApacheLuceneUtilIntArrayDocIdSet_BASE_RAM_BYTES_USED = OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfInstanceWithIOSClass_(OrgApacheLuceneUtilIntArrayDocIdSet_class_());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneUtilIntArrayDocIdSet)
  }
}

@end

void OrgApacheLuceneUtilIntArrayDocIdSet_initPackagePrivateWithIntArray_withInt_(OrgApacheLuceneUtilIntArrayDocIdSet *self, IOSIntArray *docs, jint length) {
  OrgApacheLuceneSearchDocIdSet_init(self);
  if (IOSIntArray_Get(nil_chk(docs), length) != OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
    @throw create_JavaLangIllegalArgumentException_init();
  }
  JreStrongAssign(&self->docs_, docs);
  self->length_ = length;
}

OrgApacheLuceneUtilIntArrayDocIdSet *new_OrgApacheLuceneUtilIntArrayDocIdSet_initPackagePrivateWithIntArray_withInt_(IOSIntArray *docs, jint length) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilIntArrayDocIdSet, initPackagePrivateWithIntArray_withInt_, docs, length)
}

OrgApacheLuceneUtilIntArrayDocIdSet *create_OrgApacheLuceneUtilIntArrayDocIdSet_initPackagePrivateWithIntArray_withInt_(IOSIntArray *docs, jint length) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilIntArrayDocIdSet, initPackagePrivateWithIntArray_withInt_, docs, length)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilIntArrayDocIdSet)

@implementation OrgApacheLuceneUtilIntArrayDocIdSet_IntArrayDocIdSetIterator

- (instancetype)initWithIntArray:(IOSIntArray *)docs
                         withInt:(jint)length {
  OrgApacheLuceneUtilIntArrayDocIdSet_IntArrayDocIdSetIterator_initWithIntArray_withInt_(self, docs, length);
  return self;
}

- (jint)docID {
  return doc_;
}

- (jint)nextDoc {
  return doc_ = IOSIntArray_Get(nil_chk(docs_), ++i_);
}

- (jint)advanceWithInt:(jint)target {
  i_ = JavaUtilArrays_binarySearchWithIntArray_withInt_withInt_withInt_(docs_, i_ + 1, length_, target);
  if (i_ < 0) {
    i_ = -1 - i_;
  }
  return doc_ = IOSIntArray_Get(nil_chk(docs_), i_);
}

- (jlong)cost {
  return length_;
}

- (void)dealloc {
  RELEASE_(docs_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, 3, 1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIntArray:withInt:);
  methods[1].selector = @selector(docID);
  methods[2].selector = @selector(nextDoc);
  methods[3].selector = @selector(advanceWithInt:);
  methods[4].selector = @selector(cost);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "docs_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "length_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "i_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "doc_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[II", "LJavaIoIOException;", "advance", "I", "LOrgApacheLuceneUtilIntArrayDocIdSet;" };
  static const J2ObjcClassInfo _OrgApacheLuceneUtilIntArrayDocIdSet_IntArrayDocIdSetIterator = { "IntArrayDocIdSetIterator", "org.apache.lucene.util", ptrTable, methods, fields, 7, 0x8, 5, 4, 4, -1, -1, -1, -1 };
  return &_OrgApacheLuceneUtilIntArrayDocIdSet_IntArrayDocIdSetIterator;
}

@end

void OrgApacheLuceneUtilIntArrayDocIdSet_IntArrayDocIdSetIterator_initWithIntArray_withInt_(OrgApacheLuceneUtilIntArrayDocIdSet_IntArrayDocIdSetIterator *self, IOSIntArray *docs, jint length) {
  OrgApacheLuceneSearchDocIdSetIterator_init(self);
  self->i_ = -1;
  self->doc_ = -1;
  JreStrongAssign(&self->docs_, docs);
  self->length_ = length;
}

OrgApacheLuceneUtilIntArrayDocIdSet_IntArrayDocIdSetIterator *new_OrgApacheLuceneUtilIntArrayDocIdSet_IntArrayDocIdSetIterator_initWithIntArray_withInt_(IOSIntArray *docs, jint length) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneUtilIntArrayDocIdSet_IntArrayDocIdSetIterator, initWithIntArray_withInt_, docs, length)
}

OrgApacheLuceneUtilIntArrayDocIdSet_IntArrayDocIdSetIterator *create_OrgApacheLuceneUtilIntArrayDocIdSet_IntArrayDocIdSetIterator_initWithIntArray_withInt_(IOSIntArray *docs, jint length) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneUtilIntArrayDocIdSet_IntArrayDocIdSetIterator, initWithIntArray_withInt_, docs, length)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneUtilIntArrayDocIdSet_IntArrayDocIdSetIterator)
