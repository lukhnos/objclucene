//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/document/Field.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Reader.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Byte.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Double.h"
#include "java/lang/Enum.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/Short.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "org/apache/lucene/analysis/Analyzer.h"
#include "org/apache/lucene/analysis/NumericTokenStream.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/tokenattributes/BytesTermAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/OffsetAttribute.h"
#include "org/apache/lucene/document/Field.h"
#include "org/apache/lucene/document/FieldType.h"
#include "org/apache/lucene/index/IndexOptions.h"
#include "org/apache/lucene/util/BytesRef.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/document/Field must not be compiled with ARC (-fobjc-arc)"
#endif

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneDocumentField__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneDocumentField__Annotations$1(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneDocumentField__Annotations$2(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneDocumentField__Annotations$3(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneDocumentField__Annotations$4(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneDocumentField__Annotations$5(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneDocumentField__Annotations$6(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneDocumentField__Annotations$7(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneDocumentField__Annotations$8(void);

@interface OrgApacheLuceneDocumentField_BinaryTokenStream : OrgApacheLuceneAnalysisTokenStream {
 @public
  id<OrgApacheLuceneAnalysisTokenattributesBytesTermAttribute> bytesAtt_;
  jboolean used_;
  OrgApacheLuceneUtilBytesRef *value_;
}

/*!
 @brief Creates a new TokenStream that returns a BytesRef as single token.
 <p>Warning: Does not initialize the value, you must call 
 <code>setValue(BytesRef)</code> afterwards!
 */
- (instancetype)init;

- (void)setValueWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)value;

- (jboolean)incrementToken;

- (void)reset;

- (void)close;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneDocumentField_BinaryTokenStream)

J2OBJC_FIELD_SETTER(OrgApacheLuceneDocumentField_BinaryTokenStream, bytesAtt_, id<OrgApacheLuceneAnalysisTokenattributesBytesTermAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneDocumentField_BinaryTokenStream, value_, OrgApacheLuceneUtilBytesRef *)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_BinaryTokenStream_init(OrgApacheLuceneDocumentField_BinaryTokenStream *self);

__attribute__((unused)) static OrgApacheLuceneDocumentField_BinaryTokenStream *new_OrgApacheLuceneDocumentField_BinaryTokenStream_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneDocumentField_BinaryTokenStream *create_OrgApacheLuceneDocumentField_BinaryTokenStream_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneDocumentField_BinaryTokenStream)

@interface OrgApacheLuceneDocumentField_StringTokenStream : OrgApacheLuceneAnalysisTokenStream {
 @public
  id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAttribute_;
  id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute> offsetAttribute_;
  jboolean used_;
  NSString *value_;
}

/*!
 @brief Creates a new TokenStream that returns a String as single token.
 <p>Warning: Does not initialize the value, you must call 
 <code>setValue(String)</code> afterwards!
 */
- (instancetype)init;

/*!
 @brief Sets the string value.
 */
- (void)setValueWithNSString:(NSString *)value;

- (jboolean)incrementToken;

- (void)end;

- (void)reset;

- (void)close;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneDocumentField_StringTokenStream)

J2OBJC_FIELD_SETTER(OrgApacheLuceneDocumentField_StringTokenStream, termAttribute_, id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneDocumentField_StringTokenStream, offsetAttribute_, id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneDocumentField_StringTokenStream, value_, NSString *)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_StringTokenStream_init(OrgApacheLuceneDocumentField_StringTokenStream *self);

__attribute__((unused)) static OrgApacheLuceneDocumentField_StringTokenStream *new_OrgApacheLuceneDocumentField_StringTokenStream_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneDocumentField_StringTokenStream *create_OrgApacheLuceneDocumentField_StringTokenStream_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneDocumentField_StringTokenStream)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_Store_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Store *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static void OrgApacheLuceneDocumentField_Index_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Index *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneDocumentField_Index__Annotations$0(void);

@interface OrgApacheLuceneDocumentField_Index_1 : OrgApacheLuceneDocumentField_Index

- (jboolean)isIndexed;

- (jboolean)isAnalyzed;

- (jboolean)omitNorms;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneDocumentField_Index_1)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_Index_1_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Index_1 *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneDocumentField_Index_2 : OrgApacheLuceneDocumentField_Index

- (jboolean)isIndexed;

- (jboolean)isAnalyzed;

- (jboolean)omitNorms;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneDocumentField_Index_2)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_Index_2_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Index_2 *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneDocumentField_Index_3 : OrgApacheLuceneDocumentField_Index

- (jboolean)isIndexed;

- (jboolean)isAnalyzed;

- (jboolean)omitNorms;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneDocumentField_Index_3)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_Index_3_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Index_3 *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneDocumentField_Index_4 : OrgApacheLuceneDocumentField_Index

- (jboolean)isIndexed;

- (jboolean)isAnalyzed;

- (jboolean)omitNorms;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneDocumentField_Index_4)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_Index_4_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Index_4 *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneDocumentField_Index_5 : OrgApacheLuceneDocumentField_Index

- (jboolean)isIndexed;

- (jboolean)isAnalyzed;

- (jboolean)omitNorms;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneDocumentField_Index_5)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_Index_5_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Index_5 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static void OrgApacheLuceneDocumentField_TermVector_initWithNSString_withInt_(OrgApacheLuceneDocumentField_TermVector *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneDocumentField_TermVector__Annotations$0(void);

@interface OrgApacheLuceneDocumentField_TermVector_1 : OrgApacheLuceneDocumentField_TermVector

- (jboolean)isStored;

- (jboolean)withPositions;

- (jboolean)withOffsets;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneDocumentField_TermVector_1)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_TermVector_1_initWithNSString_withInt_(OrgApacheLuceneDocumentField_TermVector_1 *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneDocumentField_TermVector_2 : OrgApacheLuceneDocumentField_TermVector

- (jboolean)isStored;

- (jboolean)withPositions;

- (jboolean)withOffsets;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneDocumentField_TermVector_2)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_TermVector_2_initWithNSString_withInt_(OrgApacheLuceneDocumentField_TermVector_2 *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneDocumentField_TermVector_3 : OrgApacheLuceneDocumentField_TermVector

- (jboolean)isStored;

- (jboolean)withPositions;

- (jboolean)withOffsets;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneDocumentField_TermVector_3)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_TermVector_3_initWithNSString_withInt_(OrgApacheLuceneDocumentField_TermVector_3 *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneDocumentField_TermVector_4 : OrgApacheLuceneDocumentField_TermVector

- (jboolean)isStored;

- (jboolean)withPositions;

- (jboolean)withOffsets;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneDocumentField_TermVector_4)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_TermVector_4_initWithNSString_withInt_(OrgApacheLuceneDocumentField_TermVector_4 *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneDocumentField_TermVector_5 : OrgApacheLuceneDocumentField_TermVector

- (jboolean)isStored;

- (jboolean)withPositions;

- (jboolean)withOffsets;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneDocumentField_TermVector_5)

__attribute__((unused)) static void OrgApacheLuceneDocumentField_TermVector_5_initWithNSString_withInt_(OrgApacheLuceneDocumentField_TermVector_5 *self, NSString *__name, jint __ordinal);

@implementation OrgApacheLuceneDocumentField

- (instancetype)initWithNSString:(NSString *)name
withOrgApacheLuceneDocumentFieldType:(OrgApacheLuceneDocumentFieldType *)type {
  OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneDocumentFieldType_(self, name, type);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                withJavaIoReader:(JavaIoReader *)reader
withOrgApacheLuceneDocumentFieldType:(OrgApacheLuceneDocumentFieldType *)type {
  OrgApacheLuceneDocumentField_initWithNSString_withJavaIoReader_withOrgApacheLuceneDocumentFieldType_(self, name, reader, type);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)tokenStream
withOrgApacheLuceneDocumentFieldType:(OrgApacheLuceneDocumentFieldType *)type {
  OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneDocumentFieldType_(self, name, tokenStream, type);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                   withByteArray:(IOSByteArray *)value
withOrgApacheLuceneDocumentFieldType:(OrgApacheLuceneDocumentFieldType *)type {
  OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withOrgApacheLuceneDocumentFieldType_(self, name, value, type);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                   withByteArray:(IOSByteArray *)value
                         withInt:(jint)offset
                         withInt:(jint)length
withOrgApacheLuceneDocumentFieldType:(OrgApacheLuceneDocumentFieldType *)type {
  OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withInt_withInt_withOrgApacheLuceneDocumentFieldType_(self, name, value, offset, length, type);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
 withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)bytes
withOrgApacheLuceneDocumentFieldType:(OrgApacheLuceneDocumentFieldType *)type {
  OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneDocumentFieldType_(self, name, bytes, type);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)value
withOrgApacheLuceneDocumentFieldType:(OrgApacheLuceneDocumentFieldType *)type {
  OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentFieldType_(self, name, value, type);
  return self;
}

- (NSString *)stringValue {
  if ([fieldsData_ isKindOfClass:[NSString class]] || [fieldsData_ isKindOfClass:[NSNumber class]]) {
    return [nil_chk(fieldsData_) description];
  }
  else {
    return nil;
  }
}

- (JavaIoReader *)readerValue {
  return [fieldsData_ isKindOfClass:[JavaIoReader class]] ? (JavaIoReader *) cast_chk(fieldsData_, [JavaIoReader class]) : nil;
}

- (OrgApacheLuceneAnalysisTokenStream *)tokenStreamValue {
  return tokenStream_;
}

- (void)setStringValueWithNSString:(NSString *)value {
  if (!([fieldsData_ isKindOfClass:[NSString class]])) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"cannot change value type from ", [[nil_chk(fieldsData_) java_getClass] getSimpleName], @" to String"));
  }
  if (value == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"value cannot be null");
  }
  JreStrongAssign(&fieldsData_, value);
}

- (void)setReaderValueWithJavaIoReader:(JavaIoReader *)value {
  if (!([fieldsData_ isKindOfClass:[JavaIoReader class]])) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"cannot change value type from ", [[nil_chk(fieldsData_) java_getClass] getSimpleName], @" to Reader"));
  }
  JreStrongAssign(&fieldsData_, value);
}

- (void)setBytesValueWithByteArray:(IOSByteArray *)value {
  [self setBytesValueWithOrgApacheLuceneUtilBytesRef:create_OrgApacheLuceneUtilBytesRef_initWithByteArray_(value)];
}

- (void)setBytesValueWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)value {
  if (!([fieldsData_ isKindOfClass:[OrgApacheLuceneUtilBytesRef class]])) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"cannot change value type from ", [[nil_chk(fieldsData_) java_getClass] getSimpleName], @" to BytesRef"));
  }
  if ([((OrgApacheLuceneDocumentFieldType *) nil_chk(type_)) indexOptions] != JreLoadEnum(OrgApacheLuceneIndexIndexOptions, NONE)) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"cannot set a BytesRef value on an indexed field");
  }
  if (value == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"value cannot be null");
  }
  JreStrongAssign(&fieldsData_, value);
}

- (void)setByteValueWithByte:(jbyte)value {
  if (!([fieldsData_ isKindOfClass:[JavaLangByte class]])) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"cannot change value type from ", [[nil_chk(fieldsData_) java_getClass] getSimpleName], @" to Byte"));
  }
  JreStrongAssign(&fieldsData_, JavaLangByte_valueOfWithByte_(value));
}

- (void)setShortValueWithShort:(jshort)value {
  if (!([fieldsData_ isKindOfClass:[JavaLangShort class]])) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"cannot change value type from ", [[nil_chk(fieldsData_) java_getClass] getSimpleName], @" to Short"));
  }
  JreStrongAssign(&fieldsData_, JavaLangShort_valueOfWithShort_(value));
}

- (void)setIntValueWithInt:(jint)value {
  if (!([fieldsData_ isKindOfClass:[JavaLangInteger class]])) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"cannot change value type from ", [[nil_chk(fieldsData_) java_getClass] getSimpleName], @" to Integer"));
  }
  JreStrongAssign(&fieldsData_, JavaLangInteger_valueOfWithInt_(value));
}

- (void)setLongValueWithLong:(jlong)value {
  if (!([fieldsData_ isKindOfClass:[JavaLangLong class]])) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"cannot change value type from ", [[nil_chk(fieldsData_) java_getClass] getSimpleName], @" to Long"));
  }
  JreStrongAssign(&fieldsData_, JavaLangLong_valueOfWithLong_(value));
}

- (void)setFloatValueWithFloat:(jfloat)value {
  if (!([fieldsData_ isKindOfClass:[JavaLangFloat class]])) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"cannot change value type from ", [[nil_chk(fieldsData_) java_getClass] getSimpleName], @" to Float"));
  }
  JreStrongAssign(&fieldsData_, JavaLangFloat_valueOfWithFloat_(value));
}

- (void)setDoubleValueWithDouble:(jdouble)value {
  if (!([fieldsData_ isKindOfClass:[JavaLangDouble class]])) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"cannot change value type from ", [[nil_chk(fieldsData_) java_getClass] getSimpleName], @" to Double"));
  }
  JreStrongAssign(&fieldsData_, JavaLangDouble_valueOfWithDouble_(value));
}

- (void)setTokenStreamWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)tokenStream {
  if ([((OrgApacheLuceneDocumentFieldType *) nil_chk(type_)) indexOptions] == JreLoadEnum(OrgApacheLuceneIndexIndexOptions, NONE) || ![type_ tokenized]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"TokenStream fields must be indexed and tokenized");
  }
  if ([type_ numericType] != nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"cannot set private TokenStream on numeric fields");
  }
  JreStrongAssign(&self->tokenStream_, tokenStream);
}

- (NSString *)name {
  return name_;
}

- (jfloat)boost {
  return boost_;
}

- (void)setBoostWithFloat:(jfloat)boost {
  if (boost != 1.0f) {
    if ([((OrgApacheLuceneDocumentFieldType *) nil_chk(type_)) indexOptions] == JreLoadEnum(OrgApacheLuceneIndexIndexOptions, NONE) || [type_ omitNorms]) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"You cannot set an index-time boost on an unindexed field, or one that omits norms");
    }
  }
  self->boost_ = boost;
}

- (NSNumber *)numericValue {
  if ([fieldsData_ isKindOfClass:[NSNumber class]]) {
    return (NSNumber *) fieldsData_;
  }
  else {
    return nil;
  }
}

- (OrgApacheLuceneUtilBytesRef *)binaryValue {
  if ([fieldsData_ isKindOfClass:[OrgApacheLuceneUtilBytesRef class]]) {
    return (OrgApacheLuceneUtilBytesRef *) fieldsData_;
  }
  else {
    return nil;
  }
}

- (NSString *)description {
  JavaLangStringBuilder *result = create_JavaLangStringBuilder_init();
  [result appendWithNSString:[((OrgApacheLuceneDocumentFieldType *) nil_chk(type_)) description]];
  [result appendWithChar:'<'];
  [result appendWithNSString:name_];
  [result appendWithChar:':'];
  if (fieldsData_ != nil) {
    [result appendWithId:fieldsData_];
  }
  [result appendWithChar:'>'];
  return [result description];
}

- (OrgApacheLuceneDocumentFieldType *)fieldType {
  return type_;
}

- (OrgApacheLuceneAnalysisTokenStream *)tokenStreamWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                                withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)reuse {
  if ([((OrgApacheLuceneDocumentFieldType *) nil_chk([self fieldType])) indexOptions] == JreLoadEnum(OrgApacheLuceneIndexIndexOptions, NONE)) {
    return nil;
  }
  OrgApacheLuceneDocumentFieldType_NumericType *numericType = [((OrgApacheLuceneDocumentFieldType *) nil_chk([self fieldType])) numericType];
  if (numericType != nil) {
    if (!([reuse isKindOfClass:[OrgApacheLuceneAnalysisNumericTokenStream class]] && [((OrgApacheLuceneAnalysisNumericTokenStream *) nil_chk(((OrgApacheLuceneAnalysisNumericTokenStream *) cast_chk(reuse, [OrgApacheLuceneAnalysisNumericTokenStream class])))) getPrecisionStep] == [((OrgApacheLuceneDocumentFieldType *) nil_chk(type_)) numericPrecisionStep])) {
      reuse = create_OrgApacheLuceneAnalysisNumericTokenStream_initWithInt_([((OrgApacheLuceneDocumentFieldType *) nil_chk(type_)) numericPrecisionStep]);
    }
    OrgApacheLuceneAnalysisNumericTokenStream *nts = (OrgApacheLuceneAnalysisNumericTokenStream *) cast_chk(reuse, [OrgApacheLuceneAnalysisNumericTokenStream class]);
    NSNumber *val = (NSNumber *) cast_chk(fieldsData_, [NSNumber class]);
    switch ([numericType ordinal]) {
      case OrgApacheLuceneDocumentFieldType_NumericType_Enum_INT:
      [((OrgApacheLuceneAnalysisNumericTokenStream *) nil_chk(nts)) setIntValueWithInt:[((NSNumber *) nil_chk(val)) intValue]];
      break;
      case OrgApacheLuceneDocumentFieldType_NumericType_Enum_LONG:
      [((OrgApacheLuceneAnalysisNumericTokenStream *) nil_chk(nts)) setLongValueWithLong:[((NSNumber *) nil_chk(val)) longLongValue]];
      break;
      case OrgApacheLuceneDocumentFieldType_NumericType_Enum_FLOAT:
      [((OrgApacheLuceneAnalysisNumericTokenStream *) nil_chk(nts)) setFloatValueWithFloat:[((NSNumber *) nil_chk(val)) floatValue]];
      break;
      case OrgApacheLuceneDocumentFieldType_NumericType_Enum_DOUBLE:
      [((OrgApacheLuceneAnalysisNumericTokenStream *) nil_chk(nts)) setDoubleValueWithDouble:[((NSNumber *) nil_chk(val)) doubleValue]];
      break;
      default:
      @throw create_JavaLangAssertionError_initWithId_(@"Should never get here");
    }
    return reuse;
  }
  if (![((OrgApacheLuceneDocumentFieldType *) nil_chk([self fieldType])) tokenized]) {
    if ([self stringValue] != nil) {
      if (!([reuse isKindOfClass:[OrgApacheLuceneDocumentField_StringTokenStream class]])) {
        reuse = create_OrgApacheLuceneDocumentField_StringTokenStream_init();
      }
      [((OrgApacheLuceneDocumentField_StringTokenStream *) nil_chk(((OrgApacheLuceneDocumentField_StringTokenStream *) cast_chk(reuse, [OrgApacheLuceneDocumentField_StringTokenStream class])))) setValueWithNSString:[self stringValue]];
      return reuse;
    }
    else if ([self binaryValue] != nil) {
      if (!([reuse isKindOfClass:[OrgApacheLuceneDocumentField_BinaryTokenStream class]])) {
        reuse = create_OrgApacheLuceneDocumentField_BinaryTokenStream_init();
      }
      [((OrgApacheLuceneDocumentField_BinaryTokenStream *) nil_chk(((OrgApacheLuceneDocumentField_BinaryTokenStream *) cast_chk(reuse, [OrgApacheLuceneDocumentField_BinaryTokenStream class])))) setValueWithOrgApacheLuceneUtilBytesRef:[self binaryValue]];
      return reuse;
    }
    else {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Non-Tokenized Fields must have a String value");
    }
  }
  if (tokenStream_ != nil) {
    return tokenStream_;
  }
  else if ([self readerValue] != nil) {
    return [((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(analyzer)) tokenStreamWithNSString:[self name] withJavaIoReader:[self readerValue]];
  }
  else if ([self stringValue] != nil) {
    return [((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(analyzer)) tokenStreamWithNSString:[self name] withNSString:[self stringValue]];
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"Field must have either TokenStream, String, Reader or Number value; got ", self));
}

+ (OrgApacheLuceneDocumentFieldType *)translateFieldTypeWithOrgApacheLuceneDocumentField_Store:(OrgApacheLuceneDocumentField_Store *)store
                                                        withOrgApacheLuceneDocumentField_Index:(OrgApacheLuceneDocumentField_Index *)index
                                                   withOrgApacheLuceneDocumentField_TermVector:(OrgApacheLuceneDocumentField_TermVector *)termVector {
  return OrgApacheLuceneDocumentField_translateFieldTypeWithOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(store, index, termVector);
}

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)value
withOrgApacheLuceneDocumentField_Store:(OrgApacheLuceneDocumentField_Store *)store
withOrgApacheLuceneDocumentField_Index:(OrgApacheLuceneDocumentField_Index *)index {
  OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_(self, name, value, store, index);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)value
withOrgApacheLuceneDocumentField_Store:(OrgApacheLuceneDocumentField_Store *)store
withOrgApacheLuceneDocumentField_Index:(OrgApacheLuceneDocumentField_Index *)index
withOrgApacheLuceneDocumentField_TermVector:(OrgApacheLuceneDocumentField_TermVector *)termVector {
  OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(self, name, value, store, index, termVector);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                withJavaIoReader:(JavaIoReader *)reader {
  OrgApacheLuceneDocumentField_initWithNSString_withJavaIoReader_(self, name, reader);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                withJavaIoReader:(JavaIoReader *)reader
withOrgApacheLuceneDocumentField_TermVector:(OrgApacheLuceneDocumentField_TermVector *)termVector {
  OrgApacheLuceneDocumentField_initWithNSString_withJavaIoReader_withOrgApacheLuceneDocumentField_TermVector_(self, name, reader, termVector);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)tokenStream {
  OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneAnalysisTokenStream_(self, name, tokenStream);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)tokenStream
withOrgApacheLuceneDocumentField_TermVector:(OrgApacheLuceneDocumentField_TermVector *)termVector {
  OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneDocumentField_TermVector_(self, name, tokenStream, termVector);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                   withByteArray:(IOSByteArray *)value {
  OrgApacheLuceneDocumentField_initWithNSString_withByteArray_(self, name, value);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                   withByteArray:(IOSByteArray *)value
                         withInt:(jint)offset
                         withInt:(jint)length {
  OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withInt_withInt_(self, name, value, offset, length);
  return self;
}

- (void)dealloc {
  RELEASE_(type_);
  RELEASE_(name_);
  RELEASE_(fieldsData_);
  RELEASE_(tokenStream_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoReader;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisTokenStream;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 19, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 21, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 22, 23, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 24, 25, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 26, 27, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 28, 23, -1, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRef;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 29, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneDocumentFieldType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisTokenStream;", 0x1, 30, 31, 32, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneDocumentFieldType;", 0x19, 33, 34, -1, -1, 35, -1 },
    { NULL, NULL, 0x1, -1, 36, -1, -1, 37, -1 },
    { NULL, NULL, 0x1, -1, 38, -1, -1, 39, -1 },
    { NULL, NULL, 0x1, -1, 40, -1, -1, 41, -1 },
    { NULL, NULL, 0x1, -1, 42, -1, -1, 43, -1 },
    { NULL, NULL, 0x1, -1, 44, -1, -1, 45, -1 },
    { NULL, NULL, 0x1, -1, 46, -1, -1, 47, -1 },
    { NULL, NULL, 0x1, -1, 48, -1, -1, 49, -1 },
    { NULL, NULL, 0x1, -1, 50, -1, -1, 51, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withOrgApacheLuceneDocumentFieldType:);
  methods[1].selector = @selector(initWithNSString:withJavaIoReader:withOrgApacheLuceneDocumentFieldType:);
  methods[2].selector = @selector(initWithNSString:withOrgApacheLuceneAnalysisTokenStream:withOrgApacheLuceneDocumentFieldType:);
  methods[3].selector = @selector(initWithNSString:withByteArray:withOrgApacheLuceneDocumentFieldType:);
  methods[4].selector = @selector(initWithNSString:withByteArray:withInt:withInt:withOrgApacheLuceneDocumentFieldType:);
  methods[5].selector = @selector(initWithNSString:withOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneDocumentFieldType:);
  methods[6].selector = @selector(initWithNSString:withNSString:withOrgApacheLuceneDocumentFieldType:);
  methods[7].selector = @selector(stringValue);
  methods[8].selector = @selector(readerValue);
  methods[9].selector = @selector(tokenStreamValue);
  methods[10].selector = @selector(setStringValueWithNSString:);
  methods[11].selector = @selector(setReaderValueWithJavaIoReader:);
  methods[12].selector = @selector(setBytesValueWithByteArray:);
  methods[13].selector = @selector(setBytesValueWithOrgApacheLuceneUtilBytesRef:);
  methods[14].selector = @selector(setByteValueWithByte:);
  methods[15].selector = @selector(setShortValueWithShort:);
  methods[16].selector = @selector(setIntValueWithInt:);
  methods[17].selector = @selector(setLongValueWithLong:);
  methods[18].selector = @selector(setFloatValueWithFloat:);
  methods[19].selector = @selector(setDoubleValueWithDouble:);
  methods[20].selector = @selector(setTokenStreamWithOrgApacheLuceneAnalysisTokenStream:);
  methods[21].selector = @selector(name);
  methods[22].selector = @selector(boost);
  methods[23].selector = @selector(setBoostWithFloat:);
  methods[24].selector = @selector(numericValue);
  methods[25].selector = @selector(binaryValue);
  methods[26].selector = @selector(description);
  methods[27].selector = @selector(fieldType);
  methods[28].selector = @selector(tokenStreamWithOrgApacheLuceneAnalysisAnalyzer:withOrgApacheLuceneAnalysisTokenStream:);
  methods[29].selector = @selector(translateFieldTypeWithOrgApacheLuceneDocumentField_Store:withOrgApacheLuceneDocumentField_Index:withOrgApacheLuceneDocumentField_TermVector:);
  methods[30].selector = @selector(initWithNSString:withNSString:withOrgApacheLuceneDocumentField_Store:withOrgApacheLuceneDocumentField_Index:);
  methods[31].selector = @selector(initWithNSString:withNSString:withOrgApacheLuceneDocumentField_Store:withOrgApacheLuceneDocumentField_Index:withOrgApacheLuceneDocumentField_TermVector:);
  methods[32].selector = @selector(initWithNSString:withJavaIoReader:);
  methods[33].selector = @selector(initWithNSString:withJavaIoReader:withOrgApacheLuceneDocumentField_TermVector:);
  methods[34].selector = @selector(initWithNSString:withOrgApacheLuceneAnalysisTokenStream:);
  methods[35].selector = @selector(initWithNSString:withOrgApacheLuceneAnalysisTokenStream:withOrgApacheLuceneDocumentField_TermVector:);
  methods[36].selector = @selector(initWithNSString:withByteArray:);
  methods[37].selector = @selector(initWithNSString:withByteArray:withInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "type_", "LOrgApacheLuceneDocumentFieldType;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "name_", "LNSString;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "fieldsData_", "LNSObject;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "tokenStream_", "LOrgApacheLuceneAnalysisTokenStream;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "boost_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LOrgApacheLuceneDocumentFieldType;", "LNSString;LJavaIoReader;LOrgApacheLuceneDocumentFieldType;", "LNSString;LOrgApacheLuceneAnalysisTokenStream;LOrgApacheLuceneDocumentFieldType;", "LNSString;[BLOrgApacheLuceneDocumentFieldType;", "LNSString;[BIILOrgApacheLuceneDocumentFieldType;", "LNSString;LOrgApacheLuceneUtilBytesRef;LOrgApacheLuceneDocumentFieldType;", "LNSString;LNSString;LOrgApacheLuceneDocumentFieldType;", "setStringValue", "LNSString;", "setReaderValue", "LJavaIoReader;", "setBytesValue", "[B", "LOrgApacheLuceneUtilBytesRef;", "setByteValue", "B", "setShortValue", "S", "setIntValue", "I", "setLongValue", "J", "setFloatValue", "F", "setDoubleValue", "D", "setTokenStream", "LOrgApacheLuceneAnalysisTokenStream;", "setBoost", "toString", "tokenStream", "LOrgApacheLuceneAnalysisAnalyzer;LOrgApacheLuceneAnalysisTokenStream;", "LJavaIoIOException;", "translateFieldType", "LOrgApacheLuceneDocumentField_Store;LOrgApacheLuceneDocumentField_Index;LOrgApacheLuceneDocumentField_TermVector;", (void *)&OrgApacheLuceneDocumentField__Annotations$0, "LNSString;LNSString;LOrgApacheLuceneDocumentField_Store;LOrgApacheLuceneDocumentField_Index;", (void *)&OrgApacheLuceneDocumentField__Annotations$1, "LNSString;LNSString;LOrgApacheLuceneDocumentField_Store;LOrgApacheLuceneDocumentField_Index;LOrgApacheLuceneDocumentField_TermVector;", (void *)&OrgApacheLuceneDocumentField__Annotations$2, "LNSString;LJavaIoReader;", (void *)&OrgApacheLuceneDocumentField__Annotations$3, "LNSString;LJavaIoReader;LOrgApacheLuceneDocumentField_TermVector;", (void *)&OrgApacheLuceneDocumentField__Annotations$4, "LNSString;LOrgApacheLuceneAnalysisTokenStream;", (void *)&OrgApacheLuceneDocumentField__Annotations$5, "LNSString;LOrgApacheLuceneAnalysisTokenStream;LOrgApacheLuceneDocumentField_TermVector;", (void *)&OrgApacheLuceneDocumentField__Annotations$6, "LNSString;[B", (void *)&OrgApacheLuceneDocumentField__Annotations$7, "LNSString;[BII", (void *)&OrgApacheLuceneDocumentField__Annotations$8, "LOrgApacheLuceneDocumentField_BinaryTokenStream;LOrgApacheLuceneDocumentField_StringTokenStream;LOrgApacheLuceneDocumentField_Store;LOrgApacheLuceneDocumentField_Index;LOrgApacheLuceneDocumentField_TermVector;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField = { "Field", "org.apache.lucene.document", ptrTable, methods, fields, 7, 0x1, 38, 5, -1, 52, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField;
}

@end

void OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneDocumentFieldType_(OrgApacheLuceneDocumentField *self, NSString *name, OrgApacheLuceneDocumentFieldType *type) {
  NSObject_init(self);
  self->boost_ = 1.0f;
  if (name == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"name cannot be null");
  }
  JreStrongAssign(&self->name_, name);
  if (type == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"type cannot be null");
  }
  JreStrongAssign(&self->type_, type);
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneDocumentFieldType_(NSString *name, OrgApacheLuceneDocumentFieldType *type) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withOrgApacheLuceneDocumentFieldType_, name, type)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneDocumentFieldType_(NSString *name, OrgApacheLuceneDocumentFieldType *type) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withOrgApacheLuceneDocumentFieldType_, name, type)
}

void OrgApacheLuceneDocumentField_initWithNSString_withJavaIoReader_withOrgApacheLuceneDocumentFieldType_(OrgApacheLuceneDocumentField *self, NSString *name, JavaIoReader *reader, OrgApacheLuceneDocumentFieldType *type) {
  NSObject_init(self);
  self->boost_ = 1.0f;
  if (name == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"name cannot be null");
  }
  if (type == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"type cannot be null");
  }
  if (reader == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"reader cannot be null");
  }
  if ([type stored]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"fields with a Reader value cannot be stored");
  }
  if ([type indexOptions] != JreLoadEnum(OrgApacheLuceneIndexIndexOptions, NONE) && ![type tokenized]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"non-tokenized fields must use String values");
  }
  JreStrongAssign(&self->name_, name);
  JreStrongAssign(&self->fieldsData_, reader);
  JreStrongAssign(&self->type_, type);
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withJavaIoReader_withOrgApacheLuceneDocumentFieldType_(NSString *name, JavaIoReader *reader, OrgApacheLuceneDocumentFieldType *type) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withJavaIoReader_withOrgApacheLuceneDocumentFieldType_, name, reader, type)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withJavaIoReader_withOrgApacheLuceneDocumentFieldType_(NSString *name, JavaIoReader *reader, OrgApacheLuceneDocumentFieldType *type) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withJavaIoReader_withOrgApacheLuceneDocumentFieldType_, name, reader, type)
}

void OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneDocumentFieldType_(OrgApacheLuceneDocumentField *self, NSString *name, OrgApacheLuceneAnalysisTokenStream *tokenStream, OrgApacheLuceneDocumentFieldType *type) {
  NSObject_init(self);
  self->boost_ = 1.0f;
  if (name == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"name cannot be null");
  }
  if (tokenStream == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"tokenStream cannot be null");
  }
  if ([((OrgApacheLuceneDocumentFieldType *) nil_chk(type)) indexOptions] == JreLoadEnum(OrgApacheLuceneIndexIndexOptions, NONE) || ![type tokenized]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"TokenStream fields must be indexed and tokenized");
  }
  if ([type stored]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"TokenStream fields cannot be stored");
  }
  JreStrongAssign(&self->name_, name);
  JreStrongAssign(&self->fieldsData_, nil);
  JreStrongAssign(&self->tokenStream_, tokenStream);
  JreStrongAssign(&self->type_, type);
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneDocumentFieldType_(NSString *name, OrgApacheLuceneAnalysisTokenStream *tokenStream, OrgApacheLuceneDocumentFieldType *type) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneDocumentFieldType_, name, tokenStream, type)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneDocumentFieldType_(NSString *name, OrgApacheLuceneAnalysisTokenStream *tokenStream, OrgApacheLuceneDocumentFieldType *type) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneDocumentFieldType_, name, tokenStream, type)
}

void OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withOrgApacheLuceneDocumentFieldType_(OrgApacheLuceneDocumentField *self, NSString *name, IOSByteArray *value, OrgApacheLuceneDocumentFieldType *type) {
  OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withInt_withInt_withOrgApacheLuceneDocumentFieldType_(self, name, value, 0, ((IOSByteArray *) nil_chk(value))->size_, type);
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withOrgApacheLuceneDocumentFieldType_(NSString *name, IOSByteArray *value, OrgApacheLuceneDocumentFieldType *type) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withByteArray_withOrgApacheLuceneDocumentFieldType_, name, value, type)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withOrgApacheLuceneDocumentFieldType_(NSString *name, IOSByteArray *value, OrgApacheLuceneDocumentFieldType *type) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withByteArray_withOrgApacheLuceneDocumentFieldType_, name, value, type)
}

void OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withInt_withInt_withOrgApacheLuceneDocumentFieldType_(OrgApacheLuceneDocumentField *self, NSString *name, IOSByteArray *value, jint offset, jint length, OrgApacheLuceneDocumentFieldType *type) {
  OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneDocumentFieldType_(self, name, create_OrgApacheLuceneUtilBytesRef_initWithByteArray_withInt_withInt_(value, offset, length), type);
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withInt_withInt_withOrgApacheLuceneDocumentFieldType_(NSString *name, IOSByteArray *value, jint offset, jint length, OrgApacheLuceneDocumentFieldType *type) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withByteArray_withInt_withInt_withOrgApacheLuceneDocumentFieldType_, name, value, offset, length, type)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withInt_withInt_withOrgApacheLuceneDocumentFieldType_(NSString *name, IOSByteArray *value, jint offset, jint length, OrgApacheLuceneDocumentFieldType *type) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withByteArray_withInt_withInt_withOrgApacheLuceneDocumentFieldType_, name, value, offset, length, type)
}

void OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneDocumentFieldType_(OrgApacheLuceneDocumentField *self, NSString *name, OrgApacheLuceneUtilBytesRef *bytes, OrgApacheLuceneDocumentFieldType *type) {
  NSObject_init(self);
  self->boost_ = 1.0f;
  if (name == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"name cannot be null");
  }
  if (bytes == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"bytes cannot be null");
  }
  JreStrongAssign(&self->fieldsData_, bytes);
  JreStrongAssign(&self->type_, type);
  JreStrongAssign(&self->name_, name);
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneDocumentFieldType_(NSString *name, OrgApacheLuceneUtilBytesRef *bytes, OrgApacheLuceneDocumentFieldType *type) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneDocumentFieldType_, name, bytes, type)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneDocumentFieldType_(NSString *name, OrgApacheLuceneUtilBytesRef *bytes, OrgApacheLuceneDocumentFieldType *type) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneDocumentFieldType_, name, bytes, type)
}

void OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentFieldType_(OrgApacheLuceneDocumentField *self, NSString *name, NSString *value, OrgApacheLuceneDocumentFieldType *type) {
  NSObject_init(self);
  self->boost_ = 1.0f;
  if (name == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"name cannot be null");
  }
  if (value == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"value cannot be null");
  }
  if (![((OrgApacheLuceneDocumentFieldType *) nil_chk(type)) stored] && [type indexOptions] == JreLoadEnum(OrgApacheLuceneIndexIndexOptions, NONE)) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"it doesn't make sense to have a field that is neither indexed nor stored");
  }
  JreStrongAssign(&self->type_, type);
  JreStrongAssign(&self->name_, name);
  JreStrongAssign(&self->fieldsData_, value);
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentFieldType_(NSString *name, NSString *value, OrgApacheLuceneDocumentFieldType *type) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withNSString_withOrgApacheLuceneDocumentFieldType_, name, value, type)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentFieldType_(NSString *name, NSString *value, OrgApacheLuceneDocumentFieldType *type) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withNSString_withOrgApacheLuceneDocumentFieldType_, name, value, type)
}

OrgApacheLuceneDocumentFieldType *OrgApacheLuceneDocumentField_translateFieldTypeWithOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(OrgApacheLuceneDocumentField_Store *store, OrgApacheLuceneDocumentField_Index *index, OrgApacheLuceneDocumentField_TermVector *termVector) {
  OrgApacheLuceneDocumentField_initialize();
  OrgApacheLuceneDocumentFieldType *ft = create_OrgApacheLuceneDocumentFieldType_init();
  [ft setStoredWithBoolean:store == JreLoadEnum(OrgApacheLuceneDocumentField_Store, YES)];
  switch ([index ordinal]) {
    case OrgApacheLuceneDocumentField_Index_Enum_ANALYZED:
    [ft setIndexOptionsWithOrgApacheLuceneIndexIndexOptions:JreLoadEnum(OrgApacheLuceneIndexIndexOptions, DOCS_AND_FREQS_AND_POSITIONS)];
    [ft setTokenizedWithBoolean:true];
    break;
    case OrgApacheLuceneDocumentField_Index_Enum_ANALYZED_NO_NORMS:
    [ft setIndexOptionsWithOrgApacheLuceneIndexIndexOptions:JreLoadEnum(OrgApacheLuceneIndexIndexOptions, DOCS_AND_FREQS_AND_POSITIONS)];
    [ft setTokenizedWithBoolean:true];
    [ft setOmitNormsWithBoolean:true];
    break;
    case OrgApacheLuceneDocumentField_Index_Enum_NOT_ANALYZED:
    [ft setIndexOptionsWithOrgApacheLuceneIndexIndexOptions:JreLoadEnum(OrgApacheLuceneIndexIndexOptions, DOCS_AND_FREQS_AND_POSITIONS)];
    [ft setTokenizedWithBoolean:false];
    break;
    case OrgApacheLuceneDocumentField_Index_Enum_NOT_ANALYZED_NO_NORMS:
    [ft setIndexOptionsWithOrgApacheLuceneIndexIndexOptions:JreLoadEnum(OrgApacheLuceneIndexIndexOptions, DOCS_AND_FREQS_AND_POSITIONS)];
    [ft setTokenizedWithBoolean:false];
    [ft setOmitNormsWithBoolean:true];
    break;
    case OrgApacheLuceneDocumentField_Index_Enum_NO:
    break;
  }
  switch ([termVector ordinal]) {
    case OrgApacheLuceneDocumentField_TermVector_Enum_NO:
    break;
    case OrgApacheLuceneDocumentField_TermVector_Enum_YES:
    [ft setStoreTermVectorsWithBoolean:true];
    break;
    case OrgApacheLuceneDocumentField_TermVector_Enum_WITH_POSITIONS:
    [ft setStoreTermVectorsWithBoolean:true];
    [ft setStoreTermVectorPositionsWithBoolean:true];
    break;
    case OrgApacheLuceneDocumentField_TermVector_Enum_WITH_OFFSETS:
    [ft setStoreTermVectorsWithBoolean:true];
    [ft setStoreTermVectorOffsetsWithBoolean:true];
    break;
    case OrgApacheLuceneDocumentField_TermVector_Enum_WITH_POSITIONS_OFFSETS:
    [ft setStoreTermVectorsWithBoolean:true];
    [ft setStoreTermVectorPositionsWithBoolean:true];
    [ft setStoreTermVectorOffsetsWithBoolean:true];
    break;
  }
  [ft freeze];
  return ft;
}

void OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_(OrgApacheLuceneDocumentField *self, NSString *name, NSString *value, OrgApacheLuceneDocumentField_Store *store, OrgApacheLuceneDocumentField_Index *index) {
  OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentFieldType_(self, name, value, OrgApacheLuceneDocumentField_translateFieldTypeWithOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(store, index, JreLoadEnum(OrgApacheLuceneDocumentField_TermVector, NO)));
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_(NSString *name, NSString *value, OrgApacheLuceneDocumentField_Store *store, OrgApacheLuceneDocumentField_Index *index) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_, name, value, store, index)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_(NSString *name, NSString *value, OrgApacheLuceneDocumentField_Store *store, OrgApacheLuceneDocumentField_Index *index) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_, name, value, store, index)
}

void OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(OrgApacheLuceneDocumentField *self, NSString *name, NSString *value, OrgApacheLuceneDocumentField_Store *store, OrgApacheLuceneDocumentField_Index *index, OrgApacheLuceneDocumentField_TermVector *termVector) {
  OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentFieldType_(self, name, value, OrgApacheLuceneDocumentField_translateFieldTypeWithOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(store, index, termVector));
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(NSString *name, NSString *value, OrgApacheLuceneDocumentField_Store *store, OrgApacheLuceneDocumentField_Index *index, OrgApacheLuceneDocumentField_TermVector *termVector) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_, name, value, store, index, termVector)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(NSString *name, NSString *value, OrgApacheLuceneDocumentField_Store *store, OrgApacheLuceneDocumentField_Index *index, OrgApacheLuceneDocumentField_TermVector *termVector) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_, name, value, store, index, termVector)
}

void OrgApacheLuceneDocumentField_initWithNSString_withJavaIoReader_(OrgApacheLuceneDocumentField *self, NSString *name, JavaIoReader *reader) {
  OrgApacheLuceneDocumentField_initWithNSString_withJavaIoReader_withOrgApacheLuceneDocumentField_TermVector_(self, name, reader, JreLoadEnum(OrgApacheLuceneDocumentField_TermVector, NO));
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withJavaIoReader_(NSString *name, JavaIoReader *reader) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withJavaIoReader_, name, reader)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withJavaIoReader_(NSString *name, JavaIoReader *reader) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withJavaIoReader_, name, reader)
}

void OrgApacheLuceneDocumentField_initWithNSString_withJavaIoReader_withOrgApacheLuceneDocumentField_TermVector_(OrgApacheLuceneDocumentField *self, NSString *name, JavaIoReader *reader, OrgApacheLuceneDocumentField_TermVector *termVector) {
  OrgApacheLuceneDocumentField_initWithNSString_withJavaIoReader_withOrgApacheLuceneDocumentFieldType_(self, name, reader, OrgApacheLuceneDocumentField_translateFieldTypeWithOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(JreLoadEnum(OrgApacheLuceneDocumentField_Store, NO), JreLoadEnum(OrgApacheLuceneDocumentField_Index, ANALYZED), termVector));
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withJavaIoReader_withOrgApacheLuceneDocumentField_TermVector_(NSString *name, JavaIoReader *reader, OrgApacheLuceneDocumentField_TermVector *termVector) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withJavaIoReader_withOrgApacheLuceneDocumentField_TermVector_, name, reader, termVector)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withJavaIoReader_withOrgApacheLuceneDocumentField_TermVector_(NSString *name, JavaIoReader *reader, OrgApacheLuceneDocumentField_TermVector *termVector) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withJavaIoReader_withOrgApacheLuceneDocumentField_TermVector_, name, reader, termVector)
}

void OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneDocumentField *self, NSString *name, OrgApacheLuceneAnalysisTokenStream *tokenStream) {
  OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneDocumentField_TermVector_(self, name, tokenStream, JreLoadEnum(OrgApacheLuceneDocumentField_TermVector, NO));
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneAnalysisTokenStream_(NSString *name, OrgApacheLuceneAnalysisTokenStream *tokenStream) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withOrgApacheLuceneAnalysisTokenStream_, name, tokenStream)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneAnalysisTokenStream_(NSString *name, OrgApacheLuceneAnalysisTokenStream *tokenStream) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withOrgApacheLuceneAnalysisTokenStream_, name, tokenStream)
}

void OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneDocumentField_TermVector_(OrgApacheLuceneDocumentField *self, NSString *name, OrgApacheLuceneAnalysisTokenStream *tokenStream, OrgApacheLuceneDocumentField_TermVector *termVector) {
  OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneDocumentFieldType_(self, name, tokenStream, OrgApacheLuceneDocumentField_translateFieldTypeWithOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(JreLoadEnum(OrgApacheLuceneDocumentField_Store, NO), JreLoadEnum(OrgApacheLuceneDocumentField_Index, ANALYZED), termVector));
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneDocumentField_TermVector_(NSString *name, OrgApacheLuceneAnalysisTokenStream *tokenStream, OrgApacheLuceneDocumentField_TermVector *termVector) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneDocumentField_TermVector_, name, tokenStream, termVector)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneDocumentField_TermVector_(NSString *name, OrgApacheLuceneAnalysisTokenStream *tokenStream, OrgApacheLuceneDocumentField_TermVector *termVector) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneDocumentField_TermVector_, name, tokenStream, termVector)
}

void OrgApacheLuceneDocumentField_initWithNSString_withByteArray_(OrgApacheLuceneDocumentField *self, NSString *name, IOSByteArray *value) {
  OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withOrgApacheLuceneDocumentFieldType_(self, name, value, OrgApacheLuceneDocumentField_translateFieldTypeWithOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(JreLoadEnum(OrgApacheLuceneDocumentField_Store, YES), JreLoadEnum(OrgApacheLuceneDocumentField_Index, NO), JreLoadEnum(OrgApacheLuceneDocumentField_TermVector, NO)));
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withByteArray_(NSString *name, IOSByteArray *value) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withByteArray_, name, value)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withByteArray_(NSString *name, IOSByteArray *value) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withByteArray_, name, value)
}

void OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withInt_withInt_(OrgApacheLuceneDocumentField *self, NSString *name, IOSByteArray *value, jint offset, jint length) {
  OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withInt_withInt_withOrgApacheLuceneDocumentFieldType_(self, name, value, offset, length, OrgApacheLuceneDocumentField_translateFieldTypeWithOrgApacheLuceneDocumentField_Store_withOrgApacheLuceneDocumentField_Index_withOrgApacheLuceneDocumentField_TermVector_(JreLoadEnum(OrgApacheLuceneDocumentField_Store, YES), JreLoadEnum(OrgApacheLuceneDocumentField_Index, NO), JreLoadEnum(OrgApacheLuceneDocumentField_TermVector, NO)));
}

OrgApacheLuceneDocumentField *new_OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withInt_withInt_(NSString *name, IOSByteArray *value, jint offset, jint length) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withByteArray_withInt_withInt_, name, value, offset, length)
}

OrgApacheLuceneDocumentField *create_OrgApacheLuceneDocumentField_initWithNSString_withByteArray_withInt_withInt_(NSString *name, IOSByteArray *value, jint offset, jint length) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField, initWithNSString_withByteArray_withInt_withInt_, name, value, offset, length)
}

IOSObjectArray *OrgApacheLuceneDocumentField__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneDocumentField__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneDocumentField__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneDocumentField__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneDocumentField__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneDocumentField__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneDocumentField__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneDocumentField__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneDocumentField__Annotations$8() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneDocumentField)

@implementation OrgApacheLuceneDocumentField_BinaryTokenStream

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneDocumentField_BinaryTokenStream_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setValueWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)value {
  JreStrongAssign(&self->value_, value);
}

- (jboolean)incrementToken {
  if (used_) {
    return false;
  }
  [self clearAttributes];
  [((id<OrgApacheLuceneAnalysisTokenattributesBytesTermAttribute>) nil_chk(bytesAtt_)) setBytesRefWithOrgApacheLuceneUtilBytesRef:value_];
  used_ = true;
  return true;
}

- (void)reset {
  used_ = false;
}

- (void)close {
  JreStrongAssign(&value_, nil);
}

- (void)dealloc {
  RELEASE_(bytesAtt_);
  RELEASE_(value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setValueWithOrgApacheLuceneUtilBytesRef:);
  methods[2].selector = @selector(incrementToken);
  methods[3].selector = @selector(reset);
  methods[4].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "bytesAtt_", "LOrgApacheLuceneAnalysisTokenattributesBytesTermAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "used_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "value_", "LOrgApacheLuceneUtilBytesRef;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setValue", "LOrgApacheLuceneUtilBytesRef;", "LOrgApacheLuceneDocumentField;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_BinaryTokenStream = { "BinaryTokenStream", "org.apache.lucene.document", ptrTable, methods, fields, 7, 0x1a, 5, 3, 2, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField_BinaryTokenStream;
}

@end

void OrgApacheLuceneDocumentField_BinaryTokenStream_init(OrgApacheLuceneDocumentField_BinaryTokenStream *self) {
  OrgApacheLuceneAnalysisTokenStream_init(self);
  JreStrongAssign(&self->bytesAtt_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesBytesTermAttribute_class_()]);
  self->used_ = true;
}

OrgApacheLuceneDocumentField_BinaryTokenStream *new_OrgApacheLuceneDocumentField_BinaryTokenStream_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField_BinaryTokenStream, init)
}

OrgApacheLuceneDocumentField_BinaryTokenStream *create_OrgApacheLuceneDocumentField_BinaryTokenStream_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField_BinaryTokenStream, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneDocumentField_BinaryTokenStream)

@implementation OrgApacheLuceneDocumentField_StringTokenStream

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneDocumentField_StringTokenStream_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)setValueWithNSString:(NSString *)value {
  JreStrongAssign(&self->value_, value);
}

- (jboolean)incrementToken {
  if (used_) {
    return false;
  }
  [self clearAttributes];
  [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAttribute_)) appendWithNSString:value_];
  [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(offsetAttribute_)) setOffsetWithInt:0 withInt:[((NSString *) nil_chk(value_)) java_length]];
  used_ = true;
  return true;
}

- (void)end {
  [super end];
  jint finalOffset = [((NSString *) nil_chk(value_)) java_length];
  [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(offsetAttribute_)) setOffsetWithInt:finalOffset withInt:finalOffset];
}

- (void)reset {
  used_ = false;
}

- (void)close {
  JreStrongAssign(&value_, nil);
}

- (void)dealloc {
  RELEASE_(termAttribute_);
  RELEASE_(offsetAttribute_);
  RELEASE_(value_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(setValueWithNSString:);
  methods[2].selector = @selector(incrementToken);
  methods[3].selector = @selector(end);
  methods[4].selector = @selector(reset);
  methods[5].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "termAttribute_", "LOrgApacheLuceneAnalysisTokenattributesCharTermAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "offsetAttribute_", "LOrgApacheLuceneAnalysisTokenattributesOffsetAttribute;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "used_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "value_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setValue", "LNSString;", "LJavaIoIOException;", "LOrgApacheLuceneDocumentField;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_StringTokenStream = { "StringTokenStream", "org.apache.lucene.document", ptrTable, methods, fields, 7, 0x1a, 6, 4, 3, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField_StringTokenStream;
}

@end

void OrgApacheLuceneDocumentField_StringTokenStream_init(OrgApacheLuceneDocumentField_StringTokenStream *self) {
  OrgApacheLuceneAnalysisTokenStream_init(self);
  JreStrongAssign(&self->termAttribute_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
  JreStrongAssign(&self->offsetAttribute_, [self addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_()]);
  self->used_ = true;
  JreStrongAssign(&self->value_, nil);
}

OrgApacheLuceneDocumentField_StringTokenStream *new_OrgApacheLuceneDocumentField_StringTokenStream_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneDocumentField_StringTokenStream, init)
}

OrgApacheLuceneDocumentField_StringTokenStream *create_OrgApacheLuceneDocumentField_StringTokenStream_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneDocumentField_StringTokenStream, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneDocumentField_StringTokenStream)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneDocumentField_Store)

OrgApacheLuceneDocumentField_Store *OrgApacheLuceneDocumentField_Store_values_[2];

@implementation OrgApacheLuceneDocumentField_Store

+ (OrgApacheLuceneDocumentField_Store *)YES_ {
  return JreEnum(OrgApacheLuceneDocumentField_Store, YES);
}

+ (OrgApacheLuceneDocumentField_Store *)NO_ {
  return JreEnum(OrgApacheLuceneDocumentField_Store, NO);
}

+ (IOSObjectArray *)values {
  return OrgApacheLuceneDocumentField_Store_values();
}

+ (OrgApacheLuceneDocumentField_Store *)valueOfWithNSString:(NSString *)name {
  return OrgApacheLuceneDocumentField_Store_valueOfWithNSString_(name);
}

- (OrgApacheLuceneDocumentField_Store_Enum)toNSEnum {
  return (OrgApacheLuceneDocumentField_Store_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgApacheLuceneDocumentField_Store;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneDocumentField_Store;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "YES", "LOrgApacheLuceneDocumentField_Store;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "NO", "LOrgApacheLuceneDocumentField_Store;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgApacheLuceneDocumentField_Store, YES), &JreEnum(OrgApacheLuceneDocumentField_Store, NO), "LOrgApacheLuceneDocumentField;", "Ljava/lang/Enum<Lorg/apache/lucene/document/Field$Store;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_Store = { "Store", "org.apache.lucene.document", ptrTable, methods, fields, 7, 0x4019, 2, 2, 4, -1, -1, 5, -1 };
  return &_OrgApacheLuceneDocumentField_Store;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneDocumentField_Store class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 2 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 2; i++) {
      ((void)(OrgApacheLuceneDocumentField_Store_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      OrgApacheLuceneDocumentField_Store_initWithNSString_withInt_(e, JreEnumConstantName(OrgApacheLuceneDocumentField_Store_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneDocumentField_Store)
  }
}

@end

void OrgApacheLuceneDocumentField_Store_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Store *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *OrgApacheLuceneDocumentField_Store_values() {
  OrgApacheLuceneDocumentField_Store_initialize();
  return [IOSObjectArray arrayWithObjects:OrgApacheLuceneDocumentField_Store_values_ count:2 type:OrgApacheLuceneDocumentField_Store_class_()];
}

OrgApacheLuceneDocumentField_Store *OrgApacheLuceneDocumentField_Store_valueOfWithNSString_(NSString *name) {
  OrgApacheLuceneDocumentField_Store_initialize();
  for (int i = 0; i < 2; i++) {
    OrgApacheLuceneDocumentField_Store *e = OrgApacheLuceneDocumentField_Store_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgApacheLuceneDocumentField_Store *OrgApacheLuceneDocumentField_Store_fromOrdinal(NSUInteger ordinal) {
  OrgApacheLuceneDocumentField_Store_initialize();
  if (ordinal >= 2) {
    return nil;
  }
  return OrgApacheLuceneDocumentField_Store_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneDocumentField_Store)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneDocumentField_Index)

OrgApacheLuceneDocumentField_Index *OrgApacheLuceneDocumentField_Index_values_[5];

@implementation OrgApacheLuceneDocumentField_Index

+ (OrgApacheLuceneDocumentField_Index *)NO_ {
  return JreEnum(OrgApacheLuceneDocumentField_Index, NO);
}

+ (OrgApacheLuceneDocumentField_Index *)ANALYZED {
  return JreEnum(OrgApacheLuceneDocumentField_Index, ANALYZED);
}

+ (OrgApacheLuceneDocumentField_Index *)NOT_ANALYZED {
  return JreEnum(OrgApacheLuceneDocumentField_Index, NOT_ANALYZED);
}

+ (OrgApacheLuceneDocumentField_Index *)NOT_ANALYZED_NO_NORMS {
  return JreEnum(OrgApacheLuceneDocumentField_Index, NOT_ANALYZED_NO_NORMS);
}

+ (OrgApacheLuceneDocumentField_Index *)ANALYZED_NO_NORMS {
  return JreEnum(OrgApacheLuceneDocumentField_Index, ANALYZED_NO_NORMS);
}

+ (OrgApacheLuceneDocumentField_Index *)toIndexWithBoolean:(jboolean)indexed
                                               withBoolean:(jboolean)analyzed {
  return OrgApacheLuceneDocumentField_Index_toIndexWithBoolean_withBoolean_(indexed, analyzed);
}

+ (OrgApacheLuceneDocumentField_Index *)toIndexWithBoolean:(jboolean)indexed
                                               withBoolean:(jboolean)analyzed
                                               withBoolean:(jboolean)omitNorms {
  return OrgApacheLuceneDocumentField_Index_toIndexWithBoolean_withBoolean_withBoolean_(indexed, analyzed, omitNorms);
}

- (jboolean)isIndexed {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isAnalyzed {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)omitNorms {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (IOSObjectArray *)values {
  return OrgApacheLuceneDocumentField_Index_values();
}

+ (OrgApacheLuceneDocumentField_Index *)valueOfWithNSString:(NSString *)name {
  return OrgApacheLuceneDocumentField_Index_valueOfWithNSString_(name);
}

- (OrgApacheLuceneDocumentField_Index_Enum)toNSEnum {
  return (OrgApacheLuceneDocumentField_Index_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgApacheLuceneDocumentField_Index;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneDocumentField_Index;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgApacheLuceneDocumentField_Index;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneDocumentField_Index;", 0x9, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(toIndexWithBoolean:withBoolean:);
  methods[1].selector = @selector(toIndexWithBoolean:withBoolean:withBoolean:);
  methods[2].selector = @selector(isIndexed);
  methods[3].selector = @selector(isAnalyzed);
  methods[4].selector = @selector(omitNorms);
  methods[5].selector = @selector(values);
  methods[6].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NO", "LOrgApacheLuceneDocumentField_Index;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "ANALYZED", "LOrgApacheLuceneDocumentField_Index;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "NOT_ANALYZED", "LOrgApacheLuceneDocumentField_Index;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "NOT_ANALYZED_NO_NORMS", "LOrgApacheLuceneDocumentField_Index;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
    { "ANALYZED_NO_NORMS", "LOrgApacheLuceneDocumentField_Index;", .constantValue.asLong = 0, 0x4019, -1, 9, -1, -1 },
  };
  static const void *ptrTable[] = { "toIndex", "ZZ", "ZZZ", "valueOf", "LNSString;", &JreEnum(OrgApacheLuceneDocumentField_Index, NO), &JreEnum(OrgApacheLuceneDocumentField_Index, ANALYZED), &JreEnum(OrgApacheLuceneDocumentField_Index, NOT_ANALYZED), &JreEnum(OrgApacheLuceneDocumentField_Index, NOT_ANALYZED_NO_NORMS), &JreEnum(OrgApacheLuceneDocumentField_Index, ANALYZED_NO_NORMS), "LOrgApacheLuceneDocumentField;", "Ljava/lang/Enum<Lorg/apache/lucene/document/Field$Index;>;", (void *)&OrgApacheLuceneDocumentField_Index__Annotations$0 };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_Index = { "Index", "org.apache.lucene.document", ptrTable, methods, fields, 7, 0x4409, 7, 5, 10, -1, -1, 11, 12 };
  return &_OrgApacheLuceneDocumentField_Index;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneDocumentField_Index class]) {
    size_t allocSize = 0;
    size_t objSize_NO = class_getInstanceSize([OrgApacheLuceneDocumentField_Index_1 class]);
    allocSize += objSize_NO;
    size_t objSize_ANALYZED = class_getInstanceSize([OrgApacheLuceneDocumentField_Index_2 class]);
    allocSize += objSize_ANALYZED;
    size_t objSize_NOT_ANALYZED = class_getInstanceSize([OrgApacheLuceneDocumentField_Index_3 class]);
    allocSize += objSize_NOT_ANALYZED;
    size_t objSize_NOT_ANALYZED_NO_NORMS = class_getInstanceSize([OrgApacheLuceneDocumentField_Index_4 class]);
    allocSize += objSize_NOT_ANALYZED_NO_NORMS;
    size_t objSize_ANALYZED_NO_NORMS = class_getInstanceSize([OrgApacheLuceneDocumentField_Index_5 class]);
    allocSize += objSize_ANALYZED_NO_NORMS;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    ((void) (JreEnum(OrgApacheLuceneDocumentField_Index, NO) = e = objc_constructInstance([OrgApacheLuceneDocumentField_Index_1 class], (void *)ptr)), ptr += objSize_NO);
    OrgApacheLuceneDocumentField_Index_1_initWithNSString_withInt_(e, @"NO", 0);
    ((void) (JreEnum(OrgApacheLuceneDocumentField_Index, ANALYZED) = e = objc_constructInstance([OrgApacheLuceneDocumentField_Index_2 class], (void *)ptr)), ptr += objSize_ANALYZED);
    OrgApacheLuceneDocumentField_Index_2_initWithNSString_withInt_(e, @"ANALYZED", 1);
    ((void) (JreEnum(OrgApacheLuceneDocumentField_Index, NOT_ANALYZED) = e = objc_constructInstance([OrgApacheLuceneDocumentField_Index_3 class], (void *)ptr)), ptr += objSize_NOT_ANALYZED);
    OrgApacheLuceneDocumentField_Index_3_initWithNSString_withInt_(e, @"NOT_ANALYZED", 2);
    ((void) (JreEnum(OrgApacheLuceneDocumentField_Index, NOT_ANALYZED_NO_NORMS) = e = objc_constructInstance([OrgApacheLuceneDocumentField_Index_4 class], (void *)ptr)), ptr += objSize_NOT_ANALYZED_NO_NORMS);
    OrgApacheLuceneDocumentField_Index_4_initWithNSString_withInt_(e, @"NOT_ANALYZED_NO_NORMS", 3);
    ((void) (JreEnum(OrgApacheLuceneDocumentField_Index, ANALYZED_NO_NORMS) = e = objc_constructInstance([OrgApacheLuceneDocumentField_Index_5 class], (void *)ptr)), ptr += objSize_ANALYZED_NO_NORMS);
    OrgApacheLuceneDocumentField_Index_5_initWithNSString_withInt_(e, @"ANALYZED_NO_NORMS", 4);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneDocumentField_Index)
  }
}

@end

void OrgApacheLuceneDocumentField_Index_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Index *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgApacheLuceneDocumentField_Index *OrgApacheLuceneDocumentField_Index_toIndexWithBoolean_withBoolean_(jboolean indexed, jboolean analyzed) {
  OrgApacheLuceneDocumentField_Index_initialize();
  return OrgApacheLuceneDocumentField_Index_toIndexWithBoolean_withBoolean_withBoolean_(indexed, analyzed, false);
}

OrgApacheLuceneDocumentField_Index *OrgApacheLuceneDocumentField_Index_toIndexWithBoolean_withBoolean_withBoolean_(jboolean indexed, jboolean analyzed, jboolean omitNorms) {
  OrgApacheLuceneDocumentField_Index_initialize();
  if (!indexed) {
    return JreEnum(OrgApacheLuceneDocumentField_Index, NO);
  }
  if (!omitNorms) {
    if (analyzed) {
      return JreEnum(OrgApacheLuceneDocumentField_Index, ANALYZED);
    }
    return JreEnum(OrgApacheLuceneDocumentField_Index, NOT_ANALYZED);
  }
  if (analyzed) {
    return JreEnum(OrgApacheLuceneDocumentField_Index, ANALYZED_NO_NORMS);
  }
  return JreEnum(OrgApacheLuceneDocumentField_Index, NOT_ANALYZED_NO_NORMS);
}

IOSObjectArray *OrgApacheLuceneDocumentField_Index_values() {
  OrgApacheLuceneDocumentField_Index_initialize();
  return [IOSObjectArray arrayWithObjects:OrgApacheLuceneDocumentField_Index_values_ count:5 type:OrgApacheLuceneDocumentField_Index_class_()];
}

OrgApacheLuceneDocumentField_Index *OrgApacheLuceneDocumentField_Index_valueOfWithNSString_(NSString *name) {
  OrgApacheLuceneDocumentField_Index_initialize();
  for (int i = 0; i < 5; i++) {
    OrgApacheLuceneDocumentField_Index *e = OrgApacheLuceneDocumentField_Index_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgApacheLuceneDocumentField_Index *OrgApacheLuceneDocumentField_Index_fromOrdinal(NSUInteger ordinal) {
  OrgApacheLuceneDocumentField_Index_initialize();
  if (ordinal >= 5) {
    return nil;
  }
  return OrgApacheLuceneDocumentField_Index_values_[ordinal];
}

IOSObjectArray *OrgApacheLuceneDocumentField_Index__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneDocumentField_Index)

@implementation OrgApacheLuceneDocumentField_Index_1

- (jboolean)isIndexed {
  return false;
}

- (jboolean)isAnalyzed {
  return false;
}

- (jboolean)omitNorms {
  return true;
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneDocumentField_Index_1 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(isIndexed);
  methods[1].selector = @selector(isAnalyzed);
  methods[2].selector = @selector(omitNorms);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneDocumentField_Index;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_Index_1 = { "", "org.apache.lucene.document", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField_Index_1;
}

@end

void OrgApacheLuceneDocumentField_Index_1_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Index_1 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneDocumentField_Index_initWithNSString_withInt_(self, __name, __ordinal);
}

@implementation OrgApacheLuceneDocumentField_Index_2

- (jboolean)isIndexed {
  return true;
}

- (jboolean)isAnalyzed {
  return true;
}

- (jboolean)omitNorms {
  return false;
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneDocumentField_Index_2 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(isIndexed);
  methods[1].selector = @selector(isAnalyzed);
  methods[2].selector = @selector(omitNorms);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneDocumentField_Index;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_Index_2 = { "", "org.apache.lucene.document", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField_Index_2;
}

@end

void OrgApacheLuceneDocumentField_Index_2_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Index_2 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneDocumentField_Index_initWithNSString_withInt_(self, __name, __ordinal);
}

@implementation OrgApacheLuceneDocumentField_Index_3

- (jboolean)isIndexed {
  return true;
}

- (jboolean)isAnalyzed {
  return false;
}

- (jboolean)omitNorms {
  return false;
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneDocumentField_Index_3 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(isIndexed);
  methods[1].selector = @selector(isAnalyzed);
  methods[2].selector = @selector(omitNorms);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneDocumentField_Index;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_Index_3 = { "", "org.apache.lucene.document", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField_Index_3;
}

@end

void OrgApacheLuceneDocumentField_Index_3_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Index_3 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneDocumentField_Index_initWithNSString_withInt_(self, __name, __ordinal);
}

@implementation OrgApacheLuceneDocumentField_Index_4

- (jboolean)isIndexed {
  return true;
}

- (jboolean)isAnalyzed {
  return false;
}

- (jboolean)omitNorms {
  return true;
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneDocumentField_Index_4 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(isIndexed);
  methods[1].selector = @selector(isAnalyzed);
  methods[2].selector = @selector(omitNorms);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneDocumentField_Index;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_Index_4 = { "", "org.apache.lucene.document", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField_Index_4;
}

@end

void OrgApacheLuceneDocumentField_Index_4_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Index_4 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneDocumentField_Index_initWithNSString_withInt_(self, __name, __ordinal);
}

@implementation OrgApacheLuceneDocumentField_Index_5

- (jboolean)isIndexed {
  return true;
}

- (jboolean)isAnalyzed {
  return true;
}

- (jboolean)omitNorms {
  return true;
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneDocumentField_Index_5 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(isIndexed);
  methods[1].selector = @selector(isAnalyzed);
  methods[2].selector = @selector(omitNorms);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneDocumentField_Index;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_Index_5 = { "", "org.apache.lucene.document", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField_Index_5;
}

@end

void OrgApacheLuceneDocumentField_Index_5_initWithNSString_withInt_(OrgApacheLuceneDocumentField_Index_5 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneDocumentField_Index_initWithNSString_withInt_(self, __name, __ordinal);
}

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneDocumentField_TermVector)

OrgApacheLuceneDocumentField_TermVector *OrgApacheLuceneDocumentField_TermVector_values_[5];

@implementation OrgApacheLuceneDocumentField_TermVector

+ (OrgApacheLuceneDocumentField_TermVector *)NO_ {
  return JreEnum(OrgApacheLuceneDocumentField_TermVector, NO);
}

+ (OrgApacheLuceneDocumentField_TermVector *)YES_ {
  return JreEnum(OrgApacheLuceneDocumentField_TermVector, YES);
}

+ (OrgApacheLuceneDocumentField_TermVector *)WITH_POSITIONS {
  return JreEnum(OrgApacheLuceneDocumentField_TermVector, WITH_POSITIONS);
}

+ (OrgApacheLuceneDocumentField_TermVector *)WITH_OFFSETS {
  return JreEnum(OrgApacheLuceneDocumentField_TermVector, WITH_OFFSETS);
}

+ (OrgApacheLuceneDocumentField_TermVector *)WITH_POSITIONS_OFFSETS {
  return JreEnum(OrgApacheLuceneDocumentField_TermVector, WITH_POSITIONS_OFFSETS);
}

+ (OrgApacheLuceneDocumentField_TermVector *)toTermVectorWithBoolean:(jboolean)stored
                                                         withBoolean:(jboolean)withOffsets
                                                         withBoolean:(jboolean)withPositions {
  return OrgApacheLuceneDocumentField_TermVector_toTermVectorWithBoolean_withBoolean_withBoolean_(stored, withOffsets, withPositions);
}

- (jboolean)isStored {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)withPositions {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)withOffsets {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (IOSObjectArray *)values {
  return OrgApacheLuceneDocumentField_TermVector_values();
}

+ (OrgApacheLuceneDocumentField_TermVector *)valueOfWithNSString:(NSString *)name {
  return OrgApacheLuceneDocumentField_TermVector_valueOfWithNSString_(name);
}

- (OrgApacheLuceneDocumentField_TermVector_Enum)toNSEnum {
  return (OrgApacheLuceneDocumentField_TermVector_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgApacheLuceneDocumentField_TermVector;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgApacheLuceneDocumentField_TermVector;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneDocumentField_TermVector;", 0x9, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(toTermVectorWithBoolean:withBoolean:withBoolean:);
  methods[1].selector = @selector(isStored);
  methods[2].selector = @selector(withPositions);
  methods[3].selector = @selector(withOffsets);
  methods[4].selector = @selector(values);
  methods[5].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NO", "LOrgApacheLuceneDocumentField_TermVector;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "YES", "LOrgApacheLuceneDocumentField_TermVector;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "WITH_POSITIONS", "LOrgApacheLuceneDocumentField_TermVector;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "WITH_OFFSETS", "LOrgApacheLuceneDocumentField_TermVector;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "WITH_POSITIONS_OFFSETS", "LOrgApacheLuceneDocumentField_TermVector;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
  };
  static const void *ptrTable[] = { "toTermVector", "ZZZ", "valueOf", "LNSString;", &JreEnum(OrgApacheLuceneDocumentField_TermVector, NO), &JreEnum(OrgApacheLuceneDocumentField_TermVector, YES), &JreEnum(OrgApacheLuceneDocumentField_TermVector, WITH_POSITIONS), &JreEnum(OrgApacheLuceneDocumentField_TermVector, WITH_OFFSETS), &JreEnum(OrgApacheLuceneDocumentField_TermVector, WITH_POSITIONS_OFFSETS), "LOrgApacheLuceneDocumentField;", "Ljava/lang/Enum<Lorg/apache/lucene/document/Field$TermVector;>;", (void *)&OrgApacheLuceneDocumentField_TermVector__Annotations$0 };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_TermVector = { "TermVector", "org.apache.lucene.document", ptrTable, methods, fields, 7, 0x4409, 6, 5, 9, -1, -1, 10, 11 };
  return &_OrgApacheLuceneDocumentField_TermVector;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneDocumentField_TermVector class]) {
    size_t allocSize = 0;
    size_t objSize_NO = class_getInstanceSize([OrgApacheLuceneDocumentField_TermVector_1 class]);
    allocSize += objSize_NO;
    size_t objSize_YES = class_getInstanceSize([OrgApacheLuceneDocumentField_TermVector_2 class]);
    allocSize += objSize_YES;
    size_t objSize_WITH_POSITIONS = class_getInstanceSize([OrgApacheLuceneDocumentField_TermVector_3 class]);
    allocSize += objSize_WITH_POSITIONS;
    size_t objSize_WITH_OFFSETS = class_getInstanceSize([OrgApacheLuceneDocumentField_TermVector_4 class]);
    allocSize += objSize_WITH_OFFSETS;
    size_t objSize_WITH_POSITIONS_OFFSETS = class_getInstanceSize([OrgApacheLuceneDocumentField_TermVector_5 class]);
    allocSize += objSize_WITH_POSITIONS_OFFSETS;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    ((void) (JreEnum(OrgApacheLuceneDocumentField_TermVector, NO) = e = objc_constructInstance([OrgApacheLuceneDocumentField_TermVector_1 class], (void *)ptr)), ptr += objSize_NO);
    OrgApacheLuceneDocumentField_TermVector_1_initWithNSString_withInt_(e, @"NO", 0);
    ((void) (JreEnum(OrgApacheLuceneDocumentField_TermVector, YES) = e = objc_constructInstance([OrgApacheLuceneDocumentField_TermVector_2 class], (void *)ptr)), ptr += objSize_YES);
    OrgApacheLuceneDocumentField_TermVector_2_initWithNSString_withInt_(e, @"YES", 1);
    ((void) (JreEnum(OrgApacheLuceneDocumentField_TermVector, WITH_POSITIONS) = e = objc_constructInstance([OrgApacheLuceneDocumentField_TermVector_3 class], (void *)ptr)), ptr += objSize_WITH_POSITIONS);
    OrgApacheLuceneDocumentField_TermVector_3_initWithNSString_withInt_(e, @"WITH_POSITIONS", 2);
    ((void) (JreEnum(OrgApacheLuceneDocumentField_TermVector, WITH_OFFSETS) = e = objc_constructInstance([OrgApacheLuceneDocumentField_TermVector_4 class], (void *)ptr)), ptr += objSize_WITH_OFFSETS);
    OrgApacheLuceneDocumentField_TermVector_4_initWithNSString_withInt_(e, @"WITH_OFFSETS", 3);
    ((void) (JreEnum(OrgApacheLuceneDocumentField_TermVector, WITH_POSITIONS_OFFSETS) = e = objc_constructInstance([OrgApacheLuceneDocumentField_TermVector_5 class], (void *)ptr)), ptr += objSize_WITH_POSITIONS_OFFSETS);
    OrgApacheLuceneDocumentField_TermVector_5_initWithNSString_withInt_(e, @"WITH_POSITIONS_OFFSETS", 4);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneDocumentField_TermVector)
  }
}

@end

void OrgApacheLuceneDocumentField_TermVector_initWithNSString_withInt_(OrgApacheLuceneDocumentField_TermVector *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgApacheLuceneDocumentField_TermVector *OrgApacheLuceneDocumentField_TermVector_toTermVectorWithBoolean_withBoolean_withBoolean_(jboolean stored, jboolean withOffsets, jboolean withPositions) {
  OrgApacheLuceneDocumentField_TermVector_initialize();
  if (!stored) {
    return JreEnum(OrgApacheLuceneDocumentField_TermVector, NO);
  }
  if (withOffsets) {
    if (withPositions) {
      return JreEnum(OrgApacheLuceneDocumentField_TermVector, WITH_POSITIONS_OFFSETS);
    }
    return JreEnum(OrgApacheLuceneDocumentField_TermVector, WITH_OFFSETS);
  }
  if (withPositions) {
    return JreEnum(OrgApacheLuceneDocumentField_TermVector, WITH_POSITIONS);
  }
  return JreEnum(OrgApacheLuceneDocumentField_TermVector, YES);
}

IOSObjectArray *OrgApacheLuceneDocumentField_TermVector_values() {
  OrgApacheLuceneDocumentField_TermVector_initialize();
  return [IOSObjectArray arrayWithObjects:OrgApacheLuceneDocumentField_TermVector_values_ count:5 type:OrgApacheLuceneDocumentField_TermVector_class_()];
}

OrgApacheLuceneDocumentField_TermVector *OrgApacheLuceneDocumentField_TermVector_valueOfWithNSString_(NSString *name) {
  OrgApacheLuceneDocumentField_TermVector_initialize();
  for (int i = 0; i < 5; i++) {
    OrgApacheLuceneDocumentField_TermVector *e = OrgApacheLuceneDocumentField_TermVector_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgApacheLuceneDocumentField_TermVector *OrgApacheLuceneDocumentField_TermVector_fromOrdinal(NSUInteger ordinal) {
  OrgApacheLuceneDocumentField_TermVector_initialize();
  if (ordinal >= 5) {
    return nil;
  }
  return OrgApacheLuceneDocumentField_TermVector_values_[ordinal];
}

IOSObjectArray *OrgApacheLuceneDocumentField_TermVector__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneDocumentField_TermVector)

@implementation OrgApacheLuceneDocumentField_TermVector_1

- (jboolean)isStored {
  return false;
}

- (jboolean)withPositions {
  return false;
}

- (jboolean)withOffsets {
  return false;
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneDocumentField_TermVector_1 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(isStored);
  methods[1].selector = @selector(withPositions);
  methods[2].selector = @selector(withOffsets);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneDocumentField_TermVector;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_TermVector_1 = { "", "org.apache.lucene.document", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField_TermVector_1;
}

@end

void OrgApacheLuceneDocumentField_TermVector_1_initWithNSString_withInt_(OrgApacheLuceneDocumentField_TermVector_1 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneDocumentField_TermVector_initWithNSString_withInt_(self, __name, __ordinal);
}

@implementation OrgApacheLuceneDocumentField_TermVector_2

- (jboolean)isStored {
  return true;
}

- (jboolean)withPositions {
  return false;
}

- (jboolean)withOffsets {
  return false;
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneDocumentField_TermVector_2 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(isStored);
  methods[1].selector = @selector(withPositions);
  methods[2].selector = @selector(withOffsets);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneDocumentField_TermVector;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_TermVector_2 = { "", "org.apache.lucene.document", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField_TermVector_2;
}

@end

void OrgApacheLuceneDocumentField_TermVector_2_initWithNSString_withInt_(OrgApacheLuceneDocumentField_TermVector_2 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneDocumentField_TermVector_initWithNSString_withInt_(self, __name, __ordinal);
}

@implementation OrgApacheLuceneDocumentField_TermVector_3

- (jboolean)isStored {
  return true;
}

- (jboolean)withPositions {
  return true;
}

- (jboolean)withOffsets {
  return false;
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneDocumentField_TermVector_3 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(isStored);
  methods[1].selector = @selector(withPositions);
  methods[2].selector = @selector(withOffsets);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneDocumentField_TermVector;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_TermVector_3 = { "", "org.apache.lucene.document", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField_TermVector_3;
}

@end

void OrgApacheLuceneDocumentField_TermVector_3_initWithNSString_withInt_(OrgApacheLuceneDocumentField_TermVector_3 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneDocumentField_TermVector_initWithNSString_withInt_(self, __name, __ordinal);
}

@implementation OrgApacheLuceneDocumentField_TermVector_4

- (jboolean)isStored {
  return true;
}

- (jboolean)withPositions {
  return false;
}

- (jboolean)withOffsets {
  return true;
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneDocumentField_TermVector_4 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(isStored);
  methods[1].selector = @selector(withPositions);
  methods[2].selector = @selector(withOffsets);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneDocumentField_TermVector;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_TermVector_4 = { "", "org.apache.lucene.document", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField_TermVector_4;
}

@end

void OrgApacheLuceneDocumentField_TermVector_4_initWithNSString_withInt_(OrgApacheLuceneDocumentField_TermVector_4 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneDocumentField_TermVector_initWithNSString_withInt_(self, __name, __ordinal);
}

@implementation OrgApacheLuceneDocumentField_TermVector_5

- (jboolean)isStored {
  return true;
}

- (jboolean)withPositions {
  return true;
}

- (jboolean)withOffsets {
  return true;
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneDocumentField_TermVector_5 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(isStored);
  methods[1].selector = @selector(withPositions);
  methods[2].selector = @selector(withOffsets);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneDocumentField_TermVector;" };
  static const J2ObjcClassInfo _OrgApacheLuceneDocumentField_TermVector_5 = { "", "org.apache.lucene.document", ptrTable, methods, NULL, 7, 0xc018, 3, 0, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneDocumentField_TermVector_5;
}

@end

void OrgApacheLuceneDocumentField_TermVector_5_initWithNSString_withInt_(OrgApacheLuceneDocumentField_TermVector_5 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneDocumentField_TermVector_initWithNSString_withInt_(self, __name, __ordinal);
}
