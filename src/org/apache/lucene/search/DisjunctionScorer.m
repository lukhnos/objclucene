//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/DisjunctionScorer.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/List.h"
#include "org/apache/lucene/search/DisiPriorityQueue.h"
#include "org/apache/lucene/search/DisiWrapper.h"
#include "org/apache/lucene/search/DisjunctionDISIApproximation.h"
#include "org/apache/lucene/search/DisjunctionScorer.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/TwoPhaseIterator.h"
#include "org/apache/lucene/search/Weight.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/DisjunctionScorer must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchDisjunctionScorer () {
 @public
  jboolean needsScores_;
  OrgApacheLuceneSearchDisiPriorityQueue *subScorers_;
  jlong cost_;
  /*!
   @brief Linked list of scorers which are on the current doc
   */
  OrgApacheLuceneSearchDisiWrapper *topScorers_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchDisjunctionScorer, subScorers_, OrgApacheLuceneSearchDisiPriorityQueue *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchDisjunctionScorer, topScorers_, OrgApacheLuceneSearchDisiWrapper *)

@interface OrgApacheLuceneSearchDisjunctionScorer_1 : OrgApacheLuceneSearchTwoPhaseIterator {
 @public
  OrgApacheLuceneSearchDisjunctionScorer *this$0_;
}

- (instancetype)initWithOrgApacheLuceneSearchDisjunctionScorer:(OrgApacheLuceneSearchDisjunctionScorer *)outer$
                     withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)approximation;

- (jboolean)matches;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchDisjunctionScorer_1)

__attribute__((unused)) static void OrgApacheLuceneSearchDisjunctionScorer_1_initWithOrgApacheLuceneSearchDisjunctionScorer_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchDisjunctionScorer_1 *self, OrgApacheLuceneSearchDisjunctionScorer *outer$, OrgApacheLuceneSearchDocIdSetIterator *approximation);

__attribute__((unused)) static OrgApacheLuceneSearchDisjunctionScorer_1 *new_OrgApacheLuceneSearchDisjunctionScorer_1_initWithOrgApacheLuceneSearchDisjunctionScorer_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchDisjunctionScorer *outer$, OrgApacheLuceneSearchDocIdSetIterator *approximation) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchDisjunctionScorer_1 *create_OrgApacheLuceneSearchDisjunctionScorer_1_initWithOrgApacheLuceneSearchDisjunctionScorer_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchDisjunctionScorer *outer$, OrgApacheLuceneSearchDocIdSetIterator *approximation);

@implementation OrgApacheLuceneSearchDisjunctionScorer

- (instancetype)initPackagePrivateWithOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight
                                                 withJavaUtilList:(id<JavaUtilList>)subScorers
                                                      withBoolean:(jboolean)needsScores {
  OrgApacheLuceneSearchDisjunctionScorer_initPackagePrivateWithOrgApacheLuceneSearchWeight_withJavaUtilList_withBoolean_(self, weight, subScorers, needsScores);
  return self;
}

- (OrgApacheLuceneSearchTwoPhaseIterator *)asTwoPhaseIterator {
  jboolean hasApproximation = false;
  for (OrgApacheLuceneSearchDisiWrapper * __strong w in nil_chk(subScorers_)) {
    if (((OrgApacheLuceneSearchDisiWrapper *) nil_chk(w))->twoPhaseView_ != nil) {
      hasApproximation = true;
      break;
    }
  }
  if (!hasApproximation) {
    return nil;
  }
  return create_OrgApacheLuceneSearchDisjunctionScorer_1_initWithOrgApacheLuceneSearchDisjunctionScorer_withOrgApacheLuceneSearchDocIdSetIterator_(self, create_OrgApacheLuceneSearchDisjunctionDISIApproximation_initWithOrgApacheLuceneSearchDisiPriorityQueue_(subScorers_));
}

- (jlong)cost {
  return cost_;
}

- (jint)docID {
  return ((OrgApacheLuceneSearchDisiWrapper *) nil_chk([((OrgApacheLuceneSearchDisiPriorityQueue *) nil_chk(subScorers_)) top]))->doc_;
}

- (jint)nextDoc {
  JreStrongAssign(&topScorers_, nil);
  OrgApacheLuceneSearchDisiWrapper *top = JreRetainedLocalValue([((OrgApacheLuceneSearchDisiPriorityQueue *) nil_chk(subScorers_)) top]);
  jint doc = ((OrgApacheLuceneSearchDisiWrapper *) nil_chk(top))->doc_;
  do {
    top->doc_ = [((OrgApacheLuceneSearchScorer *) nil_chk(top->iterator_)) nextDoc];
    top = [subScorers_ updateTop];
  }
  while (((OrgApacheLuceneSearchDisiWrapper *) nil_chk(top))->doc_ == doc);
  return top->doc_;
}

- (jint)advanceWithInt:(jint)target {
  JreStrongAssign(&topScorers_, nil);
  OrgApacheLuceneSearchDisiWrapper *top = JreRetainedLocalValue([((OrgApacheLuceneSearchDisiPriorityQueue *) nil_chk(subScorers_)) top]);
  do {
    ((OrgApacheLuceneSearchDisiWrapper *) nil_chk(top))->doc_ = [((OrgApacheLuceneSearchScorer *) nil_chk(top->iterator_)) advanceWithInt:target];
    top = [subScorers_ updateTop];
  }
  while (((OrgApacheLuceneSearchDisiWrapper *) nil_chk(top))->doc_ < target);
  return top->doc_;
}

- (jint)freq {
  if (topScorers_ == nil) {
    JreStrongAssign(&topScorers_, [((OrgApacheLuceneSearchDisiPriorityQueue *) nil_chk(subScorers_)) topList]);
  }
  jint freq = 1;
  for (OrgApacheLuceneSearchDisiWrapper *w = JreRetainedLocalValue(((OrgApacheLuceneSearchDisiWrapper *) nil_chk(topScorers_))->next_); w != nil; w = w->next_) {
    freq += 1;
  }
  return freq;
}

- (jfloat)score {
  if (topScorers_ == nil) {
    JreStrongAssign(&topScorers_, [((OrgApacheLuceneSearchDisiPriorityQueue *) nil_chk(subScorers_)) topList]);
  }
  return [self scoreWithOrgApacheLuceneSearchDisiWrapper:topScorers_];
}

- (jfloat)scoreWithOrgApacheLuceneSearchDisiWrapper:(OrgApacheLuceneSearchDisiWrapper *)topList {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<JavaUtilCollection>)getChildren {
  JavaUtilArrayList *children = create_JavaUtilArrayList_init();
  for (OrgApacheLuceneSearchDisiWrapper * __strong scorer in nil_chk(subScorers_)) {
    [children addWithId:create_OrgApacheLuceneSearchScorer_ChildScorer_initWithOrgApacheLuceneSearchScorer_withNSString_(((OrgApacheLuceneSearchScorer *) ((OrgApacheLuceneSearchDisiWrapper *) nil_chk(scorer))->iterator_), @"SHOULD")];
  }
  return children;
}

- (void)dealloc {
  RELEASE_(subScorers_);
  RELEASE_(topScorers_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchTwoPhaseIterator;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, 2, -1, -1, -1 },
    { NULL, "I", 0x11, 3, 4, 2, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, 2, -1, -1, -1 },
    { NULL, "F", 0x11, -1, -1, 2, -1, -1, -1 },
    { NULL, "F", 0x404, 5, 6, 2, 7, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x11, -1, -1, -1, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgApacheLuceneSearchWeight:withJavaUtilList:withBoolean:);
  methods[1].selector = @selector(asTwoPhaseIterator);
  methods[2].selector = @selector(cost);
  methods[3].selector = @selector(docID);
  methods[4].selector = @selector(nextDoc);
  methods[5].selector = @selector(advanceWithInt:);
  methods[6].selector = @selector(freq);
  methods[7].selector = @selector(score);
  methods[8].selector = @selector(scoreWithOrgApacheLuceneSearchDisiWrapper:);
  methods[9].selector = @selector(getChildren);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "needsScores_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "subScorers_", "LOrgApacheLuceneSearchDisiPriorityQueue;", .constantValue.asLong = 0, 0x12, -1, -1, 9, -1 },
    { "cost_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "topScorers_", "LOrgApacheLuceneSearchDisiWrapper;", .constantValue.asLong = 0, 0x2, -1, -1, 10, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchWeight;LJavaUtilList;Z", "(Lorg/apache/lucene/search/Weight;Ljava/util/List<Lorg/apache/lucene/search/Scorer;>;Z)V", "LJavaIoIOException;", "advance", "I", "score", "LOrgApacheLuceneSearchDisiWrapper;", "(Lorg/apache/lucene/search/DisiWrapper<Lorg/apache/lucene/search/Scorer;>;)F", "()Ljava/util/Collection<Lorg/apache/lucene/search/Scorer$ChildScorer;>;", "Lorg/apache/lucene/search/DisiPriorityQueue<Lorg/apache/lucene/search/Scorer;>;", "Lorg/apache/lucene/search/DisiWrapper<Lorg/apache/lucene/search/Scorer;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchDisjunctionScorer = { "DisjunctionScorer", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x400, 10, 4, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchDisjunctionScorer;
}

@end

void OrgApacheLuceneSearchDisjunctionScorer_initPackagePrivateWithOrgApacheLuceneSearchWeight_withJavaUtilList_withBoolean_(OrgApacheLuceneSearchDisjunctionScorer *self, OrgApacheLuceneSearchWeight *weight, id<JavaUtilList> subScorers, jboolean needsScores) {
  OrgApacheLuceneSearchScorer_initWithOrgApacheLuceneSearchWeight_(self, weight);
  if ([((id<JavaUtilList>) nil_chk(subScorers)) size] <= 1) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"There must be at least 2 subScorers");
  }
  JreStrongAssignAndConsume(&self->subScorers_, new_OrgApacheLuceneSearchDisiPriorityQueue_initWithInt_([subScorers size]));
  jlong cost = 0;
  for (OrgApacheLuceneSearchScorer * __strong scorer in subScorers) {
    OrgApacheLuceneSearchDisiWrapper *w = create_OrgApacheLuceneSearchDisiWrapper_initWithOrgApacheLuceneSearchDocIdSetIterator_(scorer);
    cost += w->cost_;
    [self->subScorers_ addWithOrgApacheLuceneSearchDisiWrapper:w];
  }
  self->cost_ = cost;
  self->needsScores_ = needsScores;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchDisjunctionScorer)

@implementation OrgApacheLuceneSearchDisjunctionScorer_1

- (instancetype)initWithOrgApacheLuceneSearchDisjunctionScorer:(OrgApacheLuceneSearchDisjunctionScorer *)outer$
                     withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)approximation {
  OrgApacheLuceneSearchDisjunctionScorer_1_initWithOrgApacheLuceneSearchDisjunctionScorer_withOrgApacheLuceneSearchDocIdSetIterator_(self, outer$, approximation);
  return self;
}

- (jboolean)matches {
  OrgApacheLuceneSearchDisiWrapper *topScorers = JreRetainedLocalValue([((OrgApacheLuceneSearchDisiPriorityQueue *) nil_chk(this$0_->subScorers_)) topList]);
  while (((OrgApacheLuceneSearchDisiWrapper *) nil_chk(topScorers))->twoPhaseView_ != nil && ![topScorers->twoPhaseView_ matches]) {
    topScorers = topScorers->next_;
    if (topScorers == nil) {
      return false;
    }
  }
  if (this$0_->needsScores_) {
    OrgApacheLuceneSearchDisiWrapper *previous = JreRetainedLocalValue(topScorers);
    for (OrgApacheLuceneSearchDisiWrapper *w = JreRetainedLocalValue(topScorers->next_); w != nil; w = w->next_) {
      if (w->twoPhaseView_ != nil && ![w->twoPhaseView_ matches]) {
        JreStrongAssign(&previous->next_, w->next_);
      }
      else {
        previous = w;
      }
    }
  }
  else {
    JreStrongAssign(&topScorers->next_, nil);
  }
  JreStrongAssign(&this$0_->topScorers_, topScorers);
  return true;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchDisjunctionScorer:withOrgApacheLuceneSearchDocIdSetIterator:);
  methods[1].selector = @selector(matches);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneSearchDisjunctionScorer;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchDisjunctionScorer;LOrgApacheLuceneSearchDocIdSetIterator;", "LJavaIoIOException;", "LOrgApacheLuceneSearchDisjunctionScorer;", "asTwoPhaseIterator" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchDisjunctionScorer_1 = { "", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x8010, 2, 1, 2, -1, 3, -1, -1 };
  return &_OrgApacheLuceneSearchDisjunctionScorer_1;
}

@end

void OrgApacheLuceneSearchDisjunctionScorer_1_initWithOrgApacheLuceneSearchDisjunctionScorer_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchDisjunctionScorer_1 *self, OrgApacheLuceneSearchDisjunctionScorer *outer$, OrgApacheLuceneSearchDocIdSetIterator *approximation) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneSearchTwoPhaseIterator_initWithOrgApacheLuceneSearchDocIdSetIterator_(self, approximation);
}

OrgApacheLuceneSearchDisjunctionScorer_1 *new_OrgApacheLuceneSearchDisjunctionScorer_1_initWithOrgApacheLuceneSearchDisjunctionScorer_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchDisjunctionScorer *outer$, OrgApacheLuceneSearchDocIdSetIterator *approximation) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchDisjunctionScorer_1, initWithOrgApacheLuceneSearchDisjunctionScorer_withOrgApacheLuceneSearchDocIdSetIterator_, outer$, approximation)
}

OrgApacheLuceneSearchDisjunctionScorer_1 *create_OrgApacheLuceneSearchDisjunctionScorer_1_initWithOrgApacheLuceneSearchDisjunctionScorer_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchDisjunctionScorer *outer$, OrgApacheLuceneSearchDocIdSetIterator *approximation) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchDisjunctionScorer_1, initWithOrgApacheLuceneSearchDisjunctionScorer_withOrgApacheLuceneSearchDocIdSetIterator_, outer$, approximation)
}
