//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./sandbox/src/java/org/apache/lucene/search/GeoPointTermsEnum.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Long.h"
#include "java/util/Collections.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "org/apache/lucene/document/GeoPointField.h"
#include "org/apache/lucene/index/FilteredTermsEnum.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/search/GeoPointTermsEnum.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"
#include "org/apache/lucene/util/GeoUtils.h"
#include "org/apache/lucene/util/NumericUtils.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/GeoPointTermsEnum must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchGeoPointTermsEnum () {
 @public
  OrgApacheLuceneUtilBytesRef *currentCell_;
  id<JavaUtilList> rangeBounds_;
}

/*!
 @brief entry point for recursively computing ranges
 */
- (void)computeRangeWithLong:(jlong)term
                   withShort:(jshort)shift;

/*!
 @brief recurse to higher level precision cells to find ranges along the space-filling curve that fall within the
  query box
 @param start starting value on the space-filling curve for a cell at a given res
 @param end ending value on the space-filling curve for a cell at a given res
 @param res spatial res represented as a bit shift (MSB is lower res)
 */
- (void)relateAndRecurseWithLong:(jlong)start
                        withLong:(jlong)end
                       withShort:(jshort)res;

- (void)nextRange;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchGeoPointTermsEnum, currentCell_, OrgApacheLuceneUtilBytesRef *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchGeoPointTermsEnum, rangeBounds_, id<JavaUtilList>)

inline jshort OrgApacheLuceneSearchGeoPointTermsEnum_get_MAX_SHIFT(void);
#define OrgApacheLuceneSearchGeoPointTermsEnum_MAX_SHIFT 36
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneSearchGeoPointTermsEnum, MAX_SHIFT, jshort)

__attribute__((unused)) static void OrgApacheLuceneSearchGeoPointTermsEnum_computeRangeWithLong_withShort_(OrgApacheLuceneSearchGeoPointTermsEnum *self, jlong term, jshort shift);

__attribute__((unused)) static void OrgApacheLuceneSearchGeoPointTermsEnum_relateAndRecurseWithLong_withLong_withShort_(OrgApacheLuceneSearchGeoPointTermsEnum *self, jlong start, jlong end, jshort res);

__attribute__((unused)) static void OrgApacheLuceneSearchGeoPointTermsEnum_nextRange(OrgApacheLuceneSearchGeoPointTermsEnum *self);

@implementation OrgApacheLuceneSearchGeoPointTermsEnum

+ (jshort)DETAIL_LEVEL {
  return OrgApacheLuceneSearchGeoPointTermsEnum_DETAIL_LEVEL;
}

- (instancetype)initPackagePrivateWithOrgApacheLuceneIndexTermsEnum:(OrgApacheLuceneIndexTermsEnum *)tenum
                                                         withDouble:(jdouble)minLon
                                                         withDouble:(jdouble)minLat
                                                         withDouble:(jdouble)maxLon
                                                         withDouble:(jdouble)maxLat {
  OrgApacheLuceneSearchGeoPointTermsEnum_initPackagePrivateWithOrgApacheLuceneIndexTermsEnum_withDouble_withDouble_withDouble_withDouble_(self, tenum, minLon, minLat, maxLon, maxLat);
  return self;
}

- (void)computeRangeWithLong:(jlong)term
                   withShort:(jshort)shift {
  OrgApacheLuceneSearchGeoPointTermsEnum_computeRangeWithLong_withShort_(self, term, shift);
}

- (void)relateAndRecurseWithLong:(jlong)start
                        withLong:(jlong)end
                       withShort:(jshort)res {
  OrgApacheLuceneSearchGeoPointTermsEnum_relateAndRecurseWithLong_withLong_withShort_(self, start, end, res);
}

- (jboolean)cellCrossesWithDouble:(jdouble)minLon
                       withDouble:(jdouble)minLat
                       withDouble:(jdouble)maxLon
                       withDouble:(jdouble)maxLat {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)cellWithinWithDouble:(jdouble)minLon
                      withDouble:(jdouble)minLat
                      withDouble:(jdouble)maxLon
                      withDouble:(jdouble)maxLat {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)cellIntersectsShapeWithDouble:(jdouble)minLon
                               withDouble:(jdouble)minLat
                               withDouble:(jdouble)maxLon
                               withDouble:(jdouble)maxLat {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)cellIntersectsMBRWithDouble:(jdouble)minLon
                             withDouble:(jdouble)minLat
                             withDouble:(jdouble)maxLon
                             withDouble:(jdouble)maxLat {
  return OrgApacheLuceneUtilGeoUtils_rectIntersectsWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(minLon, minLat, maxLon, maxLat, self->minLon_, self->minLat_, self->maxLon_, self->maxLat_);
}

- (jboolean)cellContainsWithDouble:(jdouble)minLon
                        withDouble:(jdouble)minLat
                        withDouble:(jdouble)maxLon
                        withDouble:(jdouble)maxLat {
  return OrgApacheLuceneUtilGeoUtils_rectWithinWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDouble_(self->minLon_, self->minLat_, self->maxLon_, self->maxLat_, minLon, minLat, maxLon, maxLat);
}

- (jboolean)boundaryTerm {
  if (currentRange_ == nil) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"GeoPointTermsEnum empty or not initialized");
  }
  return currentRange_->boundary_;
}

- (void)nextRange {
  OrgApacheLuceneSearchGeoPointTermsEnum_nextRange(self);
}

- (OrgApacheLuceneUtilBytesRef *)nextSeekTermWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term {
  while (![((id<JavaUtilList>) nil_chk(rangeBounds_)) isEmpty]) {
    if (currentRange_ == nil) {
      OrgApacheLuceneSearchGeoPointTermsEnum_nextRange(self);
    }
    if (term != nil && [term compareToWithId:currentCell_] > 0) {
      OrgApacheLuceneSearchGeoPointTermsEnum_nextRange(self);
      if (![rangeBounds_ isEmpty]) {
        continue;
      }
    }
    return (term != nil && [term compareToWithId:currentCell_] > 0) ? term : currentCell_;
  }
  JreAssert([rangeBounds_ isEmpty], @"org/apache/lucene/search/GeoPointTermsEnum.java:172 condition failed: assert rangeBounds.isEmpty();");
  JreStrongAssign(&currentCell_, nil);
  return nil;
}

- (OrgApacheLuceneIndexFilteredTermsEnum_AcceptStatus *)acceptWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term {
  while (currentCell_ == nil || [((OrgApacheLuceneUtilBytesRef *) nil_chk(term)) compareToWithId:currentCell_] > 0) {
    if ([((id<JavaUtilList>) nil_chk(rangeBounds_)) isEmpty]) {
      return JreLoadEnum(OrgApacheLuceneIndexFilteredTermsEnum_AcceptStatus, END);
    }
    if ([((OrgApacheLuceneUtilBytesRef *) nil_chk(term)) compareToWithId:((OrgApacheLuceneSearchGeoPointTermsEnum_Range *) nil_chk([rangeBounds_ getWithInt:0]))->cell_] < 0) {
      return JreLoadEnum(OrgApacheLuceneIndexFilteredTermsEnum_AcceptStatus, NO_AND_SEEK);
    }
    OrgApacheLuceneSearchGeoPointTermsEnum_nextRange(self);
  }
  return JreLoadEnum(OrgApacheLuceneIndexFilteredTermsEnum_AcceptStatus, YES);
}

- (jboolean)postFilterWithDouble:(jdouble)lon
                      withDouble:(jdouble)lat {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)dealloc {
  RELEASE_(currentRange_);
  RELEASE_(currentCell_);
  RELEASE_(rangeBounds_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x12, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 3, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x404, 5, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x404, 7, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x404, 8, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 9, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 10, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRef;", 0x14, 11, 12, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexFilteredTermsEnum_AcceptStatus;", 0x4, 13, 12, -1, -1, -1, -1 },
    { NULL, "Z", 0x404, 14, 15, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgApacheLuceneIndexTermsEnum:withDouble:withDouble:withDouble:withDouble:);
  methods[1].selector = @selector(computeRangeWithLong:withShort:);
  methods[2].selector = @selector(relateAndRecurseWithLong:withLong:withShort:);
  methods[3].selector = @selector(cellCrossesWithDouble:withDouble:withDouble:withDouble:);
  methods[4].selector = @selector(cellWithinWithDouble:withDouble:withDouble:withDouble:);
  methods[5].selector = @selector(cellIntersectsShapeWithDouble:withDouble:withDouble:withDouble:);
  methods[6].selector = @selector(cellIntersectsMBRWithDouble:withDouble:withDouble:withDouble:);
  methods[7].selector = @selector(cellContainsWithDouble:withDouble:withDouble:withDouble:);
  methods[8].selector = @selector(boundaryTerm);
  methods[9].selector = @selector(nextRange);
  methods[10].selector = @selector(nextSeekTermWithOrgApacheLuceneUtilBytesRef:);
  methods[11].selector = @selector(acceptWithOrgApacheLuceneUtilBytesRef:);
  methods[12].selector = @selector(postFilterWithDouble:withDouble:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "minLon_", "D", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "minLat_", "D", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "maxLon_", "D", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "maxLat_", "D", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "currentRange_", "LOrgApacheLuceneSearchGeoPointTermsEnum_Range;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "currentCell_", "LOrgApacheLuceneUtilBytesRef;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "rangeBounds_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 16, -1 },
    { "MAX_SHIFT", "S", .constantValue.asShort = OrgApacheLuceneSearchGeoPointTermsEnum_MAX_SHIFT, 0x1a, -1, -1, -1, -1 },
    { "DETAIL_LEVEL", "S", .constantValue.asShort = OrgApacheLuceneSearchGeoPointTermsEnum_DETAIL_LEVEL, 0x1c, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexTermsEnum;DDDD", "computeRange", "JS", "relateAndRecurse", "JJS", "cellCrosses", "DDDD", "cellWithin", "cellIntersectsShape", "cellIntersectsMBR", "cellContains", "nextSeekTerm", "LOrgApacheLuceneUtilBytesRef;", "accept", "postFilter", "DD", "Ljava/util/List<Lorg/apache/lucene/search/GeoPointTermsEnum$Range;>;", "LOrgApacheLuceneSearchGeoPointTermsEnum_Range;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchGeoPointTermsEnum = { "GeoPointTermsEnum", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x400, 13, 9, -1, 17, -1, -1, -1 };
  return &_OrgApacheLuceneSearchGeoPointTermsEnum;
}

@end

void OrgApacheLuceneSearchGeoPointTermsEnum_initPackagePrivateWithOrgApacheLuceneIndexTermsEnum_withDouble_withDouble_withDouble_withDouble_(OrgApacheLuceneSearchGeoPointTermsEnum *self, OrgApacheLuceneIndexTermsEnum *tenum, jdouble minLon, jdouble minLat, jdouble maxLon, jdouble maxLat) {
  OrgApacheLuceneIndexFilteredTermsEnum_initWithOrgApacheLuceneIndexTermsEnum_(self, tenum);
  JreStrongAssignAndConsume(&self->rangeBounds_, new_JavaUtilLinkedList_init());
  jlong rectMinHash = [((JavaLangLong *) nil_chk(OrgApacheLuceneUtilGeoUtils_mortonHashWithDouble_withDouble_(minLon, minLat))) longLongValue];
  jlong rectMaxHash = [((JavaLangLong *) nil_chk(OrgApacheLuceneUtilGeoUtils_mortonHashWithDouble_withDouble_(maxLon, maxLat))) longLongValue];
  self->minLon_ = OrgApacheLuceneUtilGeoUtils_mortonUnhashLonWithLong_(rectMinHash);
  self->minLat_ = OrgApacheLuceneUtilGeoUtils_mortonUnhashLatWithLong_(rectMinHash);
  self->maxLon_ = OrgApacheLuceneUtilGeoUtils_mortonUnhashLonWithLong_(rectMaxHash);
  self->maxLat_ = OrgApacheLuceneUtilGeoUtils_mortonUnhashLatWithLong_(rectMaxHash);
  OrgApacheLuceneSearchGeoPointTermsEnum_computeRangeWithLong_withShort_(self, 0LL, (jshort) ((JreLShift32((OrgApacheLuceneUtilGeoUtils_BITS), 1)) - 1));
  JavaUtilCollections_sortWithJavaUtilList_(self->rangeBounds_);
}

void OrgApacheLuceneSearchGeoPointTermsEnum_computeRangeWithLong_withShort_(OrgApacheLuceneSearchGeoPointTermsEnum *self, jlong term, jshort shift) {
  jlong split = term | (JreLShift64((jlong) 0x1LL, shift));
  JreAssert(shift < 64, @"org/apache/lucene/search/GeoPointTermsEnum.java:73 condition failed: assert shift < 64;");
  jlong upperMax;
  if (shift < 63) {
    upperMax = term | ((JreLShift64(1LL, (shift + 1))) - 1);
  }
  else {
    upperMax = (jlong) 0xffffffffffffffffLL;
  }
  jlong lowerMax = split - 1;
  OrgApacheLuceneSearchGeoPointTermsEnum_relateAndRecurseWithLong_withLong_withShort_(self, term, lowerMax, shift);
  OrgApacheLuceneSearchGeoPointTermsEnum_relateAndRecurseWithLong_withLong_withShort_(self, split, upperMax, shift);
}

void OrgApacheLuceneSearchGeoPointTermsEnum_relateAndRecurseWithLong_withLong_withShort_(OrgApacheLuceneSearchGeoPointTermsEnum *self, jlong start, jlong end, jshort res) {
  jdouble minLon = OrgApacheLuceneUtilGeoUtils_mortonUnhashLonWithLong_(start);
  jdouble minLat = OrgApacheLuceneUtilGeoUtils_mortonUnhashLatWithLong_(start);
  jdouble maxLon = OrgApacheLuceneUtilGeoUtils_mortonUnhashLonWithLong_(end);
  jdouble maxLat = OrgApacheLuceneUtilGeoUtils_mortonUnhashLatWithLong_(end);
  jshort level = (jshort) (JreURShift32((JreLShift32(OrgApacheLuceneUtilGeoUtils_BITS, 1)) - res, 1));
  jboolean within = JreIntMod(res, OrgApacheLuceneDocumentGeoPointField_PRECISION_STEP) == 0 && [self cellWithinWithDouble:minLon withDouble:minLat withDouble:maxLon withDouble:maxLat];
  if (within || (level == OrgApacheLuceneSearchGeoPointTermsEnum_DETAIL_LEVEL && [self cellIntersectsShapeWithDouble:minLon withDouble:minLat withDouble:maxLon withDouble:maxLat])) {
    [((id<JavaUtilList>) nil_chk(self->rangeBounds_)) addWithId:create_OrgApacheLuceneSearchGeoPointTermsEnum_Range_initWithOrgApacheLuceneSearchGeoPointTermsEnum_withLong_withShort_withShort_withBoolean_(self, start, res, level, !within)];
  }
  else if (level < OrgApacheLuceneSearchGeoPointTermsEnum_DETAIL_LEVEL && [self cellIntersectsMBRWithDouble:minLon withDouble:minLat withDouble:maxLon withDouble:maxLat]) {
    OrgApacheLuceneSearchGeoPointTermsEnum_computeRangeWithLong_withShort_(self, start, (jshort) (res - 1));
  }
}

void OrgApacheLuceneSearchGeoPointTermsEnum_nextRange(OrgApacheLuceneSearchGeoPointTermsEnum *self) {
  JreStrongAssign(&self->currentRange_, [((id<JavaUtilList>) nil_chk(self->rangeBounds_)) removeWithInt:0]);
  JreStrongAssign(&self->currentCell_, ((OrgApacheLuceneSearchGeoPointTermsEnum_Range *) nil_chk(self->currentRange_))->cell_);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchGeoPointTermsEnum)

@implementation OrgApacheLuceneSearchGeoPointTermsEnum_Range

- (instancetype)initWithOrgApacheLuceneSearchGeoPointTermsEnum:(OrgApacheLuceneSearchGeoPointTermsEnum *)outer$
                                                      withLong:(jlong)lower
                                                     withShort:(jshort)res
                                                     withShort:(jshort)level
                                                   withBoolean:(jboolean)boundary {
  OrgApacheLuceneSearchGeoPointTermsEnum_Range_initWithOrgApacheLuceneSearchGeoPointTermsEnum_withLong_withShort_withShort_withBoolean_(self, outer$, lower, res, level, boundary);
  return self;
}

- (jint)compareToWithId:(OrgApacheLuceneSearchGeoPointTermsEnum_Range *)other {
  cast_chk(other, [OrgApacheLuceneSearchGeoPointTermsEnum_Range class]);
  return [((OrgApacheLuceneUtilBytesRef *) nil_chk(self->cell_)) compareToWithId:((OrgApacheLuceneSearchGeoPointTermsEnum_Range *) nil_chk(other))->cell_];
}

- (void)dealloc {
  RELEASE_(cell_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchGeoPointTermsEnum:withLong:withShort:withShort:withBoolean:);
  methods[1].selector = @selector(compareToWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "cell_", "LOrgApacheLuceneUtilBytesRef;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "level_", "S", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "boundary_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchGeoPointTermsEnum;JSSZ", "compareTo", "LOrgApacheLuceneSearchGeoPointTermsEnum_Range;", "LOrgApacheLuceneSearchGeoPointTermsEnum;", "Ljava/lang/Object;Ljava/lang/Comparable<Lorg/apache/lucene/search/GeoPointTermsEnum$Range;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchGeoPointTermsEnum_Range = { "Range", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x14, 2, 3, 3, -1, -1, 4, -1 };
  return &_OrgApacheLuceneSearchGeoPointTermsEnum_Range;
}

@end

void OrgApacheLuceneSearchGeoPointTermsEnum_Range_initWithOrgApacheLuceneSearchGeoPointTermsEnum_withLong_withShort_withShort_withBoolean_(OrgApacheLuceneSearchGeoPointTermsEnum_Range *self, OrgApacheLuceneSearchGeoPointTermsEnum *outer$, jlong lower, jshort res, jshort level, jboolean boundary) {
  NSObject_init(self);
  self->level_ = level;
  self->boundary_ = boundary;
  OrgApacheLuceneUtilBytesRefBuilder *brb = create_OrgApacheLuceneUtilBytesRefBuilder_init();
  OrgApacheLuceneUtilNumericUtils_longToPrefixCodedBytesWithLong_withInt_withOrgApacheLuceneUtilBytesRefBuilder_(lower, res, brb);
  JreStrongAssign(&self->cell_, [brb get]);
}

OrgApacheLuceneSearchGeoPointTermsEnum_Range *new_OrgApacheLuceneSearchGeoPointTermsEnum_Range_initWithOrgApacheLuceneSearchGeoPointTermsEnum_withLong_withShort_withShort_withBoolean_(OrgApacheLuceneSearchGeoPointTermsEnum *outer$, jlong lower, jshort res, jshort level, jboolean boundary) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchGeoPointTermsEnum_Range, initWithOrgApacheLuceneSearchGeoPointTermsEnum_withLong_withShort_withShort_withBoolean_, outer$, lower, res, level, boundary)
}

OrgApacheLuceneSearchGeoPointTermsEnum_Range *create_OrgApacheLuceneSearchGeoPointTermsEnum_Range_initWithOrgApacheLuceneSearchGeoPointTermsEnum_withLong_withShort_withShort_withBoolean_(OrgApacheLuceneSearchGeoPointTermsEnum *outer$, jlong lower, jshort res, jshort level, jboolean boundary) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchGeoPointTermsEnum_Range, initWithOrgApacheLuceneSearchGeoPointTermsEnum_withLong_withShort_withShort_withBoolean_, outer$, lower, res, level, boundary)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchGeoPointTermsEnum_Range)
