//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/TwoPhaseIterator.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/TwoPhaseIterator.h"
#include "org/apache/lucene/search/spans/Spans.h"
#include "org/lukhnos/portmobile/util/Objects.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/TwoPhaseIterator must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchTwoPhaseIterator_1 : OrgApacheLuceneSearchDocIdSetIterator {
 @public
  OrgApacheLuceneSearchDocIdSetIterator *val$approximation_;
  OrgApacheLuceneSearchTwoPhaseIterator *val$twoPhaseIterator_;
}

- (instancetype)initWithOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)capture$0
                    withOrgApacheLuceneSearchTwoPhaseIterator:(OrgApacheLuceneSearchTwoPhaseIterator *)capture$1;

- (jint)docID;

- (jint)nextDoc;

- (jint)advanceWithInt:(jint)target;

- (jint)doNextWithInt:(jint)doc;

- (jlong)cost;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchTwoPhaseIterator_1)

__attribute__((unused)) static void OrgApacheLuceneSearchTwoPhaseIterator_1_initWithOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchTwoPhaseIterator_(OrgApacheLuceneSearchTwoPhaseIterator_1 *self, OrgApacheLuceneSearchDocIdSetIterator *capture$0, OrgApacheLuceneSearchTwoPhaseIterator *capture$1);

__attribute__((unused)) static OrgApacheLuceneSearchTwoPhaseIterator_1 *new_OrgApacheLuceneSearchTwoPhaseIterator_1_initWithOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchTwoPhaseIterator_(OrgApacheLuceneSearchDocIdSetIterator *capture$0, OrgApacheLuceneSearchTwoPhaseIterator *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchTwoPhaseIterator_1 *create_OrgApacheLuceneSearchTwoPhaseIterator_1_initWithOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchTwoPhaseIterator_(OrgApacheLuceneSearchDocIdSetIterator *capture$0, OrgApacheLuceneSearchTwoPhaseIterator *capture$1);

__attribute__((unused)) static jint OrgApacheLuceneSearchTwoPhaseIterator_1_doNextWithInt_(OrgApacheLuceneSearchTwoPhaseIterator_1 *self, jint doc);

@implementation OrgApacheLuceneSearchTwoPhaseIterator

- (instancetype)initWithOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)approximation {
  OrgApacheLuceneSearchTwoPhaseIterator_initWithOrgApacheLuceneSearchDocIdSetIterator_(self, approximation);
  return self;
}

+ (OrgApacheLuceneSearchDocIdSetIterator *)asDocIdSetIteratorWithOrgApacheLuceneSearchTwoPhaseIterator:(OrgApacheLuceneSearchTwoPhaseIterator *)twoPhaseIterator {
  return OrgApacheLuceneSearchTwoPhaseIterator_asDocIdSetIteratorWithOrgApacheLuceneSearchTwoPhaseIterator_(twoPhaseIterator);
}

- (OrgApacheLuceneSearchDocIdSetIterator *)approximation {
  return approximation_;
}

- (jboolean)matches {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (OrgApacheLuceneSearchTwoPhaseIterator *)asTwoPhaseIteratorWithOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)iter {
  return OrgApacheLuceneSearchTwoPhaseIterator_asTwoPhaseIteratorWithOrgApacheLuceneSearchDocIdSetIterator_(iter);
}

- (void)dealloc {
  RELEASE_(approximation_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchDocIdSetIterator;", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchDocIdSetIterator;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, 3, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchTwoPhaseIterator;", 0x9, 4, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchDocIdSetIterator:);
  methods[1].selector = @selector(asDocIdSetIteratorWithOrgApacheLuceneSearchTwoPhaseIterator:);
  methods[2].selector = @selector(approximation);
  methods[3].selector = @selector(matches);
  methods[4].selector = @selector(asTwoPhaseIteratorWithOrgApacheLuceneSearchDocIdSetIterator:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "approximation_", "LOrgApacheLuceneSearchDocIdSetIterator;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchDocIdSetIterator;", "asDocIdSetIterator", "LOrgApacheLuceneSearchTwoPhaseIterator;", "LJavaIoIOException;", "asTwoPhaseIterator" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchTwoPhaseIterator = { "TwoPhaseIterator", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x401, 5, 1, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchTwoPhaseIterator;
}

@end

void OrgApacheLuceneSearchTwoPhaseIterator_initWithOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchTwoPhaseIterator *self, OrgApacheLuceneSearchDocIdSetIterator *approximation) {
  NSObject_init(self);
  JreStrongAssign(&self->approximation_, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_(approximation));
}

OrgApacheLuceneSearchDocIdSetIterator *OrgApacheLuceneSearchTwoPhaseIterator_asDocIdSetIteratorWithOrgApacheLuceneSearchTwoPhaseIterator_(OrgApacheLuceneSearchTwoPhaseIterator *twoPhaseIterator) {
  OrgApacheLuceneSearchTwoPhaseIterator_initialize();
  OrgApacheLuceneSearchDocIdSetIterator *approximation = [((OrgApacheLuceneSearchTwoPhaseIterator *) nil_chk(twoPhaseIterator)) approximation];
  return create_OrgApacheLuceneSearchTwoPhaseIterator_1_initWithOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchTwoPhaseIterator_(approximation, twoPhaseIterator);
}

OrgApacheLuceneSearchTwoPhaseIterator *OrgApacheLuceneSearchTwoPhaseIterator_asTwoPhaseIteratorWithOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchDocIdSetIterator *iter) {
  OrgApacheLuceneSearchTwoPhaseIterator_initialize();
  return ([iter isKindOfClass:[OrgApacheLuceneSearchScorer class]]) ? [((OrgApacheLuceneSearchScorer *) nil_chk(((OrgApacheLuceneSearchScorer *) cast_chk(iter, [OrgApacheLuceneSearchScorer class])))) asTwoPhaseIterator] : ([iter isKindOfClass:[OrgApacheLuceneSearchSpansSpans class]]) ? [((OrgApacheLuceneSearchSpansSpans *) nil_chk(((OrgApacheLuceneSearchSpansSpans *) cast_chk(iter, [OrgApacheLuceneSearchSpansSpans class])))) asTwoPhaseIterator] : nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchTwoPhaseIterator)

@implementation OrgApacheLuceneSearchTwoPhaseIterator_1

- (instancetype)initWithOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)capture$0
                    withOrgApacheLuceneSearchTwoPhaseIterator:(OrgApacheLuceneSearchTwoPhaseIterator *)capture$1 {
  OrgApacheLuceneSearchTwoPhaseIterator_1_initWithOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchTwoPhaseIterator_(self, capture$0, capture$1);
  return self;
}

- (jint)docID {
  return [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(val$approximation_)) docID];
}

- (jint)nextDoc {
  return OrgApacheLuceneSearchTwoPhaseIterator_1_doNextWithInt_(self, [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(val$approximation_)) nextDoc]);
}

- (jint)advanceWithInt:(jint)target {
  return OrgApacheLuceneSearchTwoPhaseIterator_1_doNextWithInt_(self, [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(val$approximation_)) advanceWithInt:target]);
}

- (jint)doNextWithInt:(jint)doc {
  return OrgApacheLuceneSearchTwoPhaseIterator_1_doNextWithInt_(self, doc);
}

- (jlong)cost {
  return [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(val$approximation_)) cost];
}

- (void)dealloc {
  RELEASE_(val$approximation_);
  RELEASE_(val$twoPhaseIterator_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, 3, 1, -1, -1, -1 },
    { NULL, "I", 0x2, 4, 3, 1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchDocIdSetIterator:withOrgApacheLuceneSearchTwoPhaseIterator:);
  methods[1].selector = @selector(docID);
  methods[2].selector = @selector(nextDoc);
  methods[3].selector = @selector(advanceWithInt:);
  methods[4].selector = @selector(doNextWithInt:);
  methods[5].selector = @selector(cost);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$approximation_", "LOrgApacheLuceneSearchDocIdSetIterator;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$twoPhaseIterator_", "LOrgApacheLuceneSearchTwoPhaseIterator;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchDocIdSetIterator;LOrgApacheLuceneSearchTwoPhaseIterator;", "LJavaIoIOException;", "advance", "I", "doNext", "LOrgApacheLuceneSearchTwoPhaseIterator;", "asDocIdSetIteratorWithOrgApacheLuceneSearchTwoPhaseIterator:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchTwoPhaseIterator_1 = { "", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x8018, 6, 2, 5, -1, 6, -1, -1 };
  return &_OrgApacheLuceneSearchTwoPhaseIterator_1;
}

@end

void OrgApacheLuceneSearchTwoPhaseIterator_1_initWithOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchTwoPhaseIterator_(OrgApacheLuceneSearchTwoPhaseIterator_1 *self, OrgApacheLuceneSearchDocIdSetIterator *capture$0, OrgApacheLuceneSearchTwoPhaseIterator *capture$1) {
  JreStrongAssign(&self->val$approximation_, capture$0);
  JreStrongAssign(&self->val$twoPhaseIterator_, capture$1);
  OrgApacheLuceneSearchDocIdSetIterator_init(self);
}

OrgApacheLuceneSearchTwoPhaseIterator_1 *new_OrgApacheLuceneSearchTwoPhaseIterator_1_initWithOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchTwoPhaseIterator_(OrgApacheLuceneSearchDocIdSetIterator *capture$0, OrgApacheLuceneSearchTwoPhaseIterator *capture$1) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchTwoPhaseIterator_1, initWithOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchTwoPhaseIterator_, capture$0, capture$1)
}

OrgApacheLuceneSearchTwoPhaseIterator_1 *create_OrgApacheLuceneSearchTwoPhaseIterator_1_initWithOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchTwoPhaseIterator_(OrgApacheLuceneSearchDocIdSetIterator *capture$0, OrgApacheLuceneSearchTwoPhaseIterator *capture$1) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchTwoPhaseIterator_1, initWithOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchTwoPhaseIterator_, capture$0, capture$1)
}

jint OrgApacheLuceneSearchTwoPhaseIterator_1_doNextWithInt_(OrgApacheLuceneSearchTwoPhaseIterator_1 *self, jint doc) {
  for (; ; doc = [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(self->val$approximation_)) nextDoc]) {
    if (doc == OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
      return OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
    }
    else if ([((OrgApacheLuceneSearchTwoPhaseIterator *) nil_chk(self->val$twoPhaseIterator_)) matches]) {
      return doc;
    }
  }
}
