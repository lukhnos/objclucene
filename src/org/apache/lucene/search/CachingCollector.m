//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/CachingCollector.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Math.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/search/CachingCollector.h"
#include "org/apache/lucene/search/Collector.h"
#include "org/apache/lucene/search/FilterCollector.h"
#include "org/apache/lucene/search/FilterLeafCollector.h"
#include "org/apache/lucene/search/LeafCollector.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/SimpleCollector.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"

@class OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector;

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/CachingCollector must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchCachingCollector () {
 @public
  jboolean cached_;
}

- (instancetype)initWithOrgApacheLuceneSearchCollector:(id<OrgApacheLuceneSearchCollector>)inArg;

@end

inline jint OrgApacheLuceneSearchCachingCollector_get_INITIAL_ARRAY_SIZE(void);
#define OrgApacheLuceneSearchCachingCollector_INITIAL_ARRAY_SIZE 128
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneSearchCachingCollector, INITIAL_ARRAY_SIZE, jint)

__attribute__((unused)) static void OrgApacheLuceneSearchCachingCollector_initWithOrgApacheLuceneSearchCollector_(OrgApacheLuceneSearchCachingCollector *self, id<OrgApacheLuceneSearchCollector> inArg);

__attribute__((unused)) static jboolean OrgApacheLuceneSearchCachingCollector_isCached(OrgApacheLuceneSearchCachingCollector *self);

@interface OrgApacheLuceneSearchCachingCollector_CachedScorer : OrgApacheLuceneSearchScorer {
 @public
  jint doc_;
  jfloat score_;
}

- (instancetype)init;

- (jfloat)score;

- (jint)advanceWithInt:(jint)target;

- (jint)docID;

- (jint)freq;

- (jint)nextDoc;

- (jlong)cost;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchCachingCollector_CachedScorer)

__attribute__((unused)) static void OrgApacheLuceneSearchCachingCollector_CachedScorer_init(OrgApacheLuceneSearchCachingCollector_CachedScorer *self);

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_CachedScorer *new_OrgApacheLuceneSearchCachingCollector_CachedScorer_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_CachedScorer *create_OrgApacheLuceneSearchCachingCollector_CachedScorer_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchCachingCollector_CachedScorer)

@interface OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector : OrgApacheLuceneSearchCachingCollector {
 @public
  id<JavaUtilList> contexts_;
  id<JavaUtilList> docs_;
  jint maxDocsToCache_;
  OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *lastCollector_;
}

- (instancetype)initWithOrgApacheLuceneSearchCollector:(id<OrgApacheLuceneSearchCollector>)inArg
                                               withInt:(jint)maxDocsToCache;

- (OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *)wrapWithOrgApacheLuceneSearchLeafCollector:(id<OrgApacheLuceneSearchLeafCollector>)inArg
                                                                                                          withInt:(jint)maxDocsToCache;

- (id<OrgApacheLuceneSearchLeafCollector>)getLeafCollectorWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context;

- (void)invalidate;

- (void)postCollectWithOrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector:(OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *)collector;

- (void)postCollection;

- (void)collectWithOrgApacheLuceneSearchLeafCollector:(id<OrgApacheLuceneSearchLeafCollector>)collector
                                              withInt:(jint)i;

- (void)replayWithOrgApacheLuceneSearchCollector:(id<OrgApacheLuceneSearchCollector>)other;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector, contexts_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector, docs_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector, lastCollector_, OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *)

__attribute__((unused)) static void OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector *self, id<OrgApacheLuceneSearchCollector> inArg, jint maxDocsToCache);

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector *new_OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(id<OrgApacheLuceneSearchCollector> inArg, jint maxDocsToCache) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector *create_OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(id<OrgApacheLuceneSearchCollector> inArg, jint maxDocsToCache);

__attribute__((unused)) static void OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_postCollectWithOrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector *self, OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *collector);

__attribute__((unused)) static void OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_postCollection(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector)

@interface OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector : OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector {
 @public
  id<JavaUtilList> scores_;
}

- (instancetype)initWithOrgApacheLuceneSearchCollector:(id<OrgApacheLuceneSearchCollector>)inArg
                                               withInt:(jint)maxDocsToCache;

- (OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *)wrapWithOrgApacheLuceneSearchLeafCollector:(id<OrgApacheLuceneSearchLeafCollector>)inArg
                                                                                                          withInt:(jint)maxDocsToCache;

- (void)postCollectWithOrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector:(OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *)collector;

- (void)collectWithOrgApacheLuceneSearchLeafCollector:(id<OrgApacheLuceneSearchLeafCollector>)collector
                                              withInt:(jint)i;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector, scores_, id<JavaUtilList>)

__attribute__((unused)) static void OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector *self, id<OrgApacheLuceneSearchCollector> inArg, jint maxDocsToCache);

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector *new_OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(id<OrgApacheLuceneSearchCollector> inArg, jint maxDocsToCache) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector *create_OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(id<OrgApacheLuceneSearchCollector> inArg, jint maxDocsToCache);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector)

@interface OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector : OrgApacheLuceneSearchFilterLeafCollector {
 @public
  OrgApacheLuceneSearchCachingCollector *this$0_;
  jint maxDocsToCache_;
  IOSIntArray *docs_;
  jint docCount_;
}

- (instancetype)initWithOrgApacheLuceneSearchCachingCollector:(OrgApacheLuceneSearchCachingCollector *)outer$
                       withOrgApacheLuceneSearchLeafCollector:(id<OrgApacheLuceneSearchLeafCollector>)inArg
                                                      withInt:(jint)maxDocsToCache;

- (void)growWithInt:(jint)newLen;

- (void)invalidate;

- (void)bufferWithInt:(jint)doc;

- (void)collectWithInt:(jint)doc;

- (jboolean)hasCache;

- (IOSIntArray *)cachedDocs;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector, docs_, IOSIntArray *)

__attribute__((unused)) static void OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_initWithOrgApacheLuceneSearchCachingCollector_withOrgApacheLuceneSearchLeafCollector_withInt_(OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *self, OrgApacheLuceneSearchCachingCollector *outer$, id<OrgApacheLuceneSearchLeafCollector> inArg, jint maxDocsToCache);

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *new_OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_initWithOrgApacheLuceneSearchCachingCollector_withOrgApacheLuceneSearchLeafCollector_withInt_(OrgApacheLuceneSearchCachingCollector *outer$, id<OrgApacheLuceneSearchLeafCollector> inArg, jint maxDocsToCache) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *create_OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_initWithOrgApacheLuceneSearchCachingCollector_withOrgApacheLuceneSearchLeafCollector_withInt_(OrgApacheLuceneSearchCachingCollector *outer$, id<OrgApacheLuceneSearchLeafCollector> inArg, jint maxDocsToCache);

__attribute__((unused)) static void OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_growWithInt_(OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *self, jint newLen);

__attribute__((unused)) static void OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_invalidate(OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *self);

__attribute__((unused)) static void OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_bufferWithInt_(OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *self, jint doc);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector)

@interface OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector : OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector {
 @public
  OrgApacheLuceneSearchScorer *scorer_;
  IOSFloatArray *scores_;
}

- (instancetype)initWithOrgApacheLuceneSearchCachingCollector:(OrgApacheLuceneSearchCachingCollector *)outer$
                       withOrgApacheLuceneSearchLeafCollector:(id<OrgApacheLuceneSearchLeafCollector>)inArg
                                                      withInt:(jint)maxDocsToCache;

- (void)setScorerWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)scorer;

- (void)growWithInt:(jint)newLen;

- (void)invalidate;

- (void)bufferWithInt:(jint)doc;

- (IOSFloatArray *)cachedScores;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector, scorer_, OrgApacheLuceneSearchScorer *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector, scores_, IOSFloatArray *)

__attribute__((unused)) static void OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector_initWithOrgApacheLuceneSearchCachingCollector_withOrgApacheLuceneSearchLeafCollector_withInt_(OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector *self, OrgApacheLuceneSearchCachingCollector *outer$, id<OrgApacheLuceneSearchLeafCollector> inArg, jint maxDocsToCache);

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector *new_OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector_initWithOrgApacheLuceneSearchCachingCollector_withOrgApacheLuceneSearchLeafCollector_withInt_(OrgApacheLuceneSearchCachingCollector *outer$, id<OrgApacheLuceneSearchLeafCollector> inArg, jint maxDocsToCache) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector *create_OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector_initWithOrgApacheLuceneSearchCachingCollector_withOrgApacheLuceneSearchLeafCollector_withInt_(OrgApacheLuceneSearchCachingCollector *outer$, id<OrgApacheLuceneSearchLeafCollector> inArg, jint maxDocsToCache);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector)

@interface OrgApacheLuceneSearchCachingCollector_1 : OrgApacheLuceneSearchSimpleCollector

- (instancetype)init;

- (void)collectWithInt:(jint)doc;

- (jboolean)needsScores;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchCachingCollector_1)

__attribute__((unused)) static void OrgApacheLuceneSearchCachingCollector_1_init(OrgApacheLuceneSearchCachingCollector_1 *self);

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_1 *new_OrgApacheLuceneSearchCachingCollector_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchCachingCollector_1 *create_OrgApacheLuceneSearchCachingCollector_1_init(void);

@implementation OrgApacheLuceneSearchCachingCollector

+ (OrgApacheLuceneSearchCachingCollector *)createWithBoolean:(jboolean)cacheScores
                                                  withDouble:(jdouble)maxRAMMB {
  return OrgApacheLuceneSearchCachingCollector_createWithBoolean_withDouble_(cacheScores, maxRAMMB);
}

+ (OrgApacheLuceneSearchCachingCollector *)createWithOrgApacheLuceneSearchCollector:(id<OrgApacheLuceneSearchCollector>)other
                                                                        withBoolean:(jboolean)cacheScores
                                                                         withDouble:(jdouble)maxRAMMB {
  return OrgApacheLuceneSearchCachingCollector_createWithOrgApacheLuceneSearchCollector_withBoolean_withDouble_(other, cacheScores, maxRAMMB);
}

+ (OrgApacheLuceneSearchCachingCollector *)createWithOrgApacheLuceneSearchCollector:(id<OrgApacheLuceneSearchCollector>)other
                                                                        withBoolean:(jboolean)cacheScores
                                                                            withInt:(jint)maxDocsToCache {
  return OrgApacheLuceneSearchCachingCollector_createWithOrgApacheLuceneSearchCollector_withBoolean_withInt_(other, cacheScores, maxDocsToCache);
}

- (instancetype)initWithOrgApacheLuceneSearchCollector:(id<OrgApacheLuceneSearchCollector>)inArg {
  OrgApacheLuceneSearchCachingCollector_initWithOrgApacheLuceneSearchCollector_(self, inArg);
  return self;
}

- (jboolean)isCached {
  return OrgApacheLuceneSearchCachingCollector_isCached(self);
}

- (void)replayWithOrgApacheLuceneSearchCollector:(id<OrgApacheLuceneSearchCollector>)other {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgApacheLuceneSearchCachingCollector;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchCachingCollector;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchCachingCollector;", 0x9, 0, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 5, 4, 6, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(createWithBoolean:withDouble:);
  methods[1].selector = @selector(createWithOrgApacheLuceneSearchCollector:withBoolean:withDouble:);
  methods[2].selector = @selector(createWithOrgApacheLuceneSearchCollector:withBoolean:withInt:);
  methods[3].selector = @selector(initWithOrgApacheLuceneSearchCollector:);
  methods[4].selector = @selector(isCached);
  methods[5].selector = @selector(replayWithOrgApacheLuceneSearchCollector:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INITIAL_ARRAY_SIZE", "I", .constantValue.asInt = OrgApacheLuceneSearchCachingCollector_INITIAL_ARRAY_SIZE, 0x1a, -1, -1, -1, -1 },
    { "cached_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "create", "ZD", "LOrgApacheLuceneSearchCollector;ZD", "LOrgApacheLuceneSearchCollector;ZI", "LOrgApacheLuceneSearchCollector;", "replay", "LJavaIoIOException;", "LOrgApacheLuceneSearchCachingCollector_CachedScorer;LOrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector;LOrgApacheLuceneSearchCachingCollector_ScoreCachingCollector;LOrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector;LOrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchCachingCollector = { "CachingCollector", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x401, 6, 2, -1, 7, -1, -1, -1 };
  return &_OrgApacheLuceneSearchCachingCollector;
}

@end

OrgApacheLuceneSearchCachingCollector *OrgApacheLuceneSearchCachingCollector_createWithBoolean_withDouble_(jboolean cacheScores, jdouble maxRAMMB) {
  OrgApacheLuceneSearchCachingCollector_initialize();
  id<OrgApacheLuceneSearchCollector> other = create_OrgApacheLuceneSearchCachingCollector_1_init();
  return OrgApacheLuceneSearchCachingCollector_createWithOrgApacheLuceneSearchCollector_withBoolean_withDouble_(other, cacheScores, maxRAMMB);
}

OrgApacheLuceneSearchCachingCollector *OrgApacheLuceneSearchCachingCollector_createWithOrgApacheLuceneSearchCollector_withBoolean_withDouble_(id<OrgApacheLuceneSearchCollector> other, jboolean cacheScores, jdouble maxRAMMB) {
  OrgApacheLuceneSearchCachingCollector_initialize();
  jint bytesPerDoc = OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_INT;
  if (cacheScores) {
    bytesPerDoc += OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_FLOAT;
  }
  jint maxDocsToCache = JreFpToInt(((maxRAMMB * 1024 * 1024) / bytesPerDoc));
  return OrgApacheLuceneSearchCachingCollector_createWithOrgApacheLuceneSearchCollector_withBoolean_withInt_(other, cacheScores, maxDocsToCache);
}

OrgApacheLuceneSearchCachingCollector *OrgApacheLuceneSearchCachingCollector_createWithOrgApacheLuceneSearchCollector_withBoolean_withInt_(id<OrgApacheLuceneSearchCollector> other, jboolean cacheScores, jint maxDocsToCache) {
  OrgApacheLuceneSearchCachingCollector_initialize();
  return cacheScores ? create_OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(other, maxDocsToCache) : create_OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(other, maxDocsToCache);
}

void OrgApacheLuceneSearchCachingCollector_initWithOrgApacheLuceneSearchCollector_(OrgApacheLuceneSearchCachingCollector *self, id<OrgApacheLuceneSearchCollector> inArg) {
  OrgApacheLuceneSearchFilterCollector_initWithOrgApacheLuceneSearchCollector_(self, inArg);
  self->cached_ = true;
}

jboolean OrgApacheLuceneSearchCachingCollector_isCached(OrgApacheLuceneSearchCachingCollector *self) {
  return self->cached_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchCachingCollector)

@implementation OrgApacheLuceneSearchCachingCollector_CachedScorer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchCachingCollector_CachedScorer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jfloat)score {
  return score_;
}

- (jint)advanceWithInt:(jint)target {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jint)docID {
  return doc_;
}

- (jint)freq {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jint)nextDoc {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jlong)cost {
  return 1;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(score);
  methods[2].selector = @selector(advanceWithInt:);
  methods[3].selector = @selector(docID);
  methods[4].selector = @selector(freq);
  methods[5].selector = @selector(nextDoc);
  methods[6].selector = @selector(cost);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "doc_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "score_", "F", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "advance", "I", "LOrgApacheLuceneSearchCachingCollector;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchCachingCollector_CachedScorer = { "CachedScorer", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x1a, 7, 2, 2, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchCachingCollector_CachedScorer;
}

@end

void OrgApacheLuceneSearchCachingCollector_CachedScorer_init(OrgApacheLuceneSearchCachingCollector_CachedScorer *self) {
  OrgApacheLuceneSearchScorer_initWithOrgApacheLuceneSearchWeight_(self, nil);
}

OrgApacheLuceneSearchCachingCollector_CachedScorer *new_OrgApacheLuceneSearchCachingCollector_CachedScorer_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchCachingCollector_CachedScorer, init)
}

OrgApacheLuceneSearchCachingCollector_CachedScorer *create_OrgApacheLuceneSearchCachingCollector_CachedScorer_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchCachingCollector_CachedScorer, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchCachingCollector_CachedScorer)

@implementation OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector

- (instancetype)initWithOrgApacheLuceneSearchCollector:(id<OrgApacheLuceneSearchCollector>)inArg
                                               withInt:(jint)maxDocsToCache {
  OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(self, inArg, maxDocsToCache);
  return self;
}

- (OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *)wrapWithOrgApacheLuceneSearchLeafCollector:(id<OrgApacheLuceneSearchLeafCollector>)inArg
                                                                                                          withInt:(jint)maxDocsToCache {
  return create_OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_initWithOrgApacheLuceneSearchCachingCollector_withOrgApacheLuceneSearchLeafCollector_withInt_(self, inArg, maxDocsToCache);
}

- (id<OrgApacheLuceneSearchLeafCollector>)getLeafCollectorWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context {
  OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_postCollection(self);
  id<OrgApacheLuceneSearchLeafCollector> in = [((id<OrgApacheLuceneSearchCollector>) nil_chk(self->in_)) getLeafCollectorWithOrgApacheLuceneIndexLeafReaderContext:context];
  if (contexts_ != nil) {
    [contexts_ addWithId:context];
  }
  if (maxDocsToCache_ >= 0) {
    return JreStrongAssign(&lastCollector_, [self wrapWithOrgApacheLuceneSearchLeafCollector:in withInt:maxDocsToCache_]);
  }
  else {
    return in;
  }
}

- (void)invalidate {
  maxDocsToCache_ = -1;
  JreStrongAssign(&contexts_, nil);
  JreStrongAssign(&self->docs_, nil);
}

- (void)postCollectWithOrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector:(OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *)collector {
  OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_postCollectWithOrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_(self, collector);
}

- (void)postCollection {
  OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_postCollection(self);
}

- (void)collectWithOrgApacheLuceneSearchLeafCollector:(id<OrgApacheLuceneSearchLeafCollector>)collector
                                              withInt:(jint)i {
  IOSIntArray *docs = [((id<JavaUtilList>) nil_chk(self->docs_)) getWithInt:i];
  {
    IOSIntArray *a__ = docs;
    jint const *b__ = ((IOSIntArray *) nil_chk(a__))->buffer_;
    jint const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jint doc = *b__++;
      [((id<OrgApacheLuceneSearchLeafCollector>) nil_chk(collector)) collectWithInt:doc];
    }
  }
}

- (void)replayWithOrgApacheLuceneSearchCollector:(id<OrgApacheLuceneSearchCollector>)other {
  OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_postCollection(self);
  if (!OrgApacheLuceneSearchCachingCollector_isCached(self)) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"cannot replay: cache was cleared because too much RAM was required");
  }
  JreAssert([((id<JavaUtilList>) nil_chk(docs_)) size] == [((id<JavaUtilList>) nil_chk(contexts_)) size], @"org/apache/lucene/search/CachingCollector.java:150 condition failed: assert docs.size() == contexts.size();");
  for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(contexts_)) size]; ++i) {
    OrgApacheLuceneIndexLeafReaderContext *context = [((id<JavaUtilList>) nil_chk(contexts_)) getWithInt:i];
    id<OrgApacheLuceneSearchLeafCollector> collector = [((id<OrgApacheLuceneSearchCollector>) nil_chk(other)) getLeafCollectorWithOrgApacheLuceneIndexLeafReaderContext:context];
    [self collectWithOrgApacheLuceneSearchLeafCollector:collector withInt:i];
  }
}

- (void)dealloc {
  RELEASE_(contexts_);
  RELEASE_(docs_);
  RELEASE_(lastCollector_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector;", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchLeafCollector;", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 8, 2, 5, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchCollector:withInt:);
  methods[1].selector = @selector(wrapWithOrgApacheLuceneSearchLeafCollector:withInt:);
  methods[2].selector = @selector(getLeafCollectorWithOrgApacheLuceneIndexLeafReaderContext:);
  methods[3].selector = @selector(invalidate);
  methods[4].selector = @selector(postCollectWithOrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector:);
  methods[5].selector = @selector(postCollection);
  methods[6].selector = @selector(collectWithOrgApacheLuceneSearchLeafCollector:withInt:);
  methods[7].selector = @selector(replayWithOrgApacheLuceneSearchCollector:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "contexts_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 11, -1 },
    { "docs_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 12, -1 },
    { "maxDocsToCache_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "lastCollector_", "LOrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchCollector;I", "wrap", "LOrgApacheLuceneSearchLeafCollector;I", "getLeafCollector", "LOrgApacheLuceneIndexLeafReaderContext;", "LJavaIoIOException;", "postCollect", "LOrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector;", "collect", "replay", "LOrgApacheLuceneSearchCollector;", "Ljava/util/List<Lorg/apache/lucene/index/LeafReaderContext;>;", "Ljava/util/List<[I>;", "LOrgApacheLuceneSearchCachingCollector;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector = { "NoScoreCachingCollector", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0xa, 8, 4, 13, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector;
}

@end

void OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector *self, id<OrgApacheLuceneSearchCollector> inArg, jint maxDocsToCache) {
  OrgApacheLuceneSearchCachingCollector_initWithOrgApacheLuceneSearchCollector_(self, inArg);
  self->maxDocsToCache_ = maxDocsToCache;
  JreStrongAssignAndConsume(&self->contexts_, new_JavaUtilArrayList_init());
  JreStrongAssignAndConsume(&self->docs_, new_JavaUtilArrayList_init());
}

OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector *new_OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(id<OrgApacheLuceneSearchCollector> inArg, jint maxDocsToCache) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector, initWithOrgApacheLuceneSearchCollector_withInt_, inArg, maxDocsToCache)
}

OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector *create_OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(id<OrgApacheLuceneSearchCollector> inArg, jint maxDocsToCache) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector, initWithOrgApacheLuceneSearchCollector_withInt_, inArg, maxDocsToCache)
}

void OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_postCollectWithOrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector *self, OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *collector) {
  IOSIntArray *docs = [((OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *) nil_chk(collector)) cachedDocs];
  self->maxDocsToCache_ -= ((IOSIntArray *) nil_chk(docs))->size_;
  [((id<JavaUtilList>) nil_chk(self->docs_)) addWithId:docs];
}

void OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_postCollection(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector *self) {
  if (self->lastCollector_ != nil) {
    if (![self->lastCollector_ hasCache]) {
      [self invalidate];
    }
    else {
      [self postCollectWithOrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector:self->lastCollector_];
    }
    JreStrongAssign(&self->lastCollector_, nil);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector)

@implementation OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector

- (instancetype)initWithOrgApacheLuceneSearchCollector:(id<OrgApacheLuceneSearchCollector>)inArg
                                               withInt:(jint)maxDocsToCache {
  OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(self, inArg, maxDocsToCache);
  return self;
}

- (OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *)wrapWithOrgApacheLuceneSearchLeafCollector:(id<OrgApacheLuceneSearchLeafCollector>)inArg
                                                                                                          withInt:(jint)maxDocsToCache {
  return create_OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector_initWithOrgApacheLuceneSearchCachingCollector_withOrgApacheLuceneSearchLeafCollector_withInt_(self, inArg, maxDocsToCache);
}

- (void)postCollectWithOrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector:(OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *)collector {
  OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector *coll = (OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector *) cast_chk(collector, [OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector class]);
  OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_postCollectWithOrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_(self, coll);
  [((id<JavaUtilList>) nil_chk(scores_)) addWithId:[((OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector *) nil_chk(coll)) cachedScores]];
}

- (void)collectWithOrgApacheLuceneSearchLeafCollector:(id<OrgApacheLuceneSearchLeafCollector>)collector
                                              withInt:(jint)i {
  IOSIntArray *docs = [((id<JavaUtilList>) nil_chk(self->docs_)) getWithInt:i];
  IOSFloatArray *scores = [((id<JavaUtilList>) nil_chk(self->scores_)) getWithInt:i];
  JreAssert(((IOSIntArray *) nil_chk(docs))->size_ == ((IOSFloatArray *) nil_chk(scores))->size_, @"org/apache/lucene/search/CachingCollector.java:183 condition failed: assert docs.length == scores.length;");
  OrgApacheLuceneSearchCachingCollector_CachedScorer *scorer = create_OrgApacheLuceneSearchCachingCollector_CachedScorer_init();
  [((id<OrgApacheLuceneSearchLeafCollector>) nil_chk(collector)) setScorerWithOrgApacheLuceneSearchScorer:scorer];
  for (jint j = 0; j < docs->size_; ++j) {
    scorer->doc_ = IOSIntArray_Get(docs, j);
    scorer->score_ = IOSFloatArray_Get(scores, j);
    [collector collectWithInt:scorer->doc_];
  }
}

- (void)dealloc {
  RELEASE_(scores_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector;", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 5, 2, 6, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchCollector:withInt:);
  methods[1].selector = @selector(wrapWithOrgApacheLuceneSearchLeafCollector:withInt:);
  methods[2].selector = @selector(postCollectWithOrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector:);
  methods[3].selector = @selector(collectWithOrgApacheLuceneSearchLeafCollector:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "scores_", "LJavaUtilList;", .constantValue.asLong = 0, 0x0, -1, -1, 7, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchCollector;I", "wrap", "LOrgApacheLuceneSearchLeafCollector;I", "postCollect", "LOrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector;", "collect", "LJavaIoIOException;", "Ljava/util/List<[F>;", "LOrgApacheLuceneSearchCachingCollector;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector = { "ScoreCachingCollector", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0xa, 4, 1, 8, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector;
}

@end

void OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector *self, id<OrgApacheLuceneSearchCollector> inArg, jint maxDocsToCache) {
  OrgApacheLuceneSearchCachingCollector_NoScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(self, inArg, maxDocsToCache);
  JreStrongAssignAndConsume(&self->scores_, new_JavaUtilArrayList_init());
}

OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector *new_OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(id<OrgApacheLuceneSearchCollector> inArg, jint maxDocsToCache) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector, initWithOrgApacheLuceneSearchCollector_withInt_, inArg, maxDocsToCache)
}

OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector *create_OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector_initWithOrgApacheLuceneSearchCollector_withInt_(id<OrgApacheLuceneSearchCollector> inArg, jint maxDocsToCache) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector, initWithOrgApacheLuceneSearchCollector_withInt_, inArg, maxDocsToCache)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchCachingCollector_ScoreCachingCollector)

@implementation OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector

- (instancetype)initWithOrgApacheLuceneSearchCachingCollector:(OrgApacheLuceneSearchCachingCollector *)outer$
                       withOrgApacheLuceneSearchLeafCollector:(id<OrgApacheLuceneSearchLeafCollector>)inArg
                                                      withInt:(jint)maxDocsToCache {
  OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_initWithOrgApacheLuceneSearchCachingCollector_withOrgApacheLuceneSearchLeafCollector_withInt_(self, outer$, inArg, maxDocsToCache);
  return self;
}

- (void)growWithInt:(jint)newLen {
  OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_growWithInt_(self, newLen);
}

- (void)invalidate {
  OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_invalidate(self);
}

- (void)bufferWithInt:(jint)doc {
  OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_bufferWithInt_(self, doc);
}

- (void)collectWithInt:(jint)doc {
  if (docs_ != nil) {
    if (docCount_ >= docs_->size_) {
      if (docCount_ >= maxDocsToCache_) {
        [self invalidate];
      }
      else {
        jint newLen = JavaLangMath_minWithInt_withInt_(OrgApacheLuceneUtilArrayUtil_oversizeWithInt_withInt_(docCount_ + 1, OrgApacheLuceneUtilRamUsageEstimator_NUM_BYTES_INT), maxDocsToCache_);
        [self growWithInt:newLen];
      }
    }
    if (docs_ != nil) {
      [self bufferWithInt:doc];
      ++docCount_;
    }
  }
  [super collectWithInt:doc];
}

- (jboolean)hasCache {
  return docs_ != nil;
}

- (IOSIntArray *)cachedDocs {
  return docs_ == nil ? nil : JavaUtilArrays_copyOfWithIntArray_withInt_(docs_, docCount_);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(docs_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 3, 2, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 2, 4, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "[I", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchCachingCollector:withOrgApacheLuceneSearchLeafCollector:withInt:);
  methods[1].selector = @selector(growWithInt:);
  methods[2].selector = @selector(invalidate);
  methods[3].selector = @selector(bufferWithInt:);
  methods[4].selector = @selector(collectWithInt:);
  methods[5].selector = @selector(hasCache);
  methods[6].selector = @selector(cachedDocs);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneSearchCachingCollector;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "maxDocsToCache_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "docs_", "[I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "docCount_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchCachingCollector;LOrgApacheLuceneSearchLeafCollector;I", "grow", "I", "buffer", "LJavaIoIOException;", "collect", "LOrgApacheLuceneSearchCachingCollector;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector = { "NoScoreCachingLeafCollector", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x2, 7, 4, 6, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector;
}

@end

void OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_initWithOrgApacheLuceneSearchCachingCollector_withOrgApacheLuceneSearchLeafCollector_withInt_(OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *self, OrgApacheLuceneSearchCachingCollector *outer$, id<OrgApacheLuceneSearchLeafCollector> inArg, jint maxDocsToCache) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneSearchFilterLeafCollector_initWithOrgApacheLuceneSearchLeafCollector_(self, inArg);
  self->maxDocsToCache_ = maxDocsToCache;
  JreStrongAssignAndConsume(&self->docs_, [IOSIntArray newArrayWithLength:JavaLangMath_minWithInt_withInt_(maxDocsToCache, OrgApacheLuceneSearchCachingCollector_INITIAL_ARRAY_SIZE)]);
  self->docCount_ = 0;
}

OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *new_OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_initWithOrgApacheLuceneSearchCachingCollector_withOrgApacheLuceneSearchLeafCollector_withInt_(OrgApacheLuceneSearchCachingCollector *outer$, id<OrgApacheLuceneSearchLeafCollector> inArg, jint maxDocsToCache) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector, initWithOrgApacheLuceneSearchCachingCollector_withOrgApacheLuceneSearchLeafCollector_withInt_, outer$, inArg, maxDocsToCache)
}

OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *create_OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_initWithOrgApacheLuceneSearchCachingCollector_withOrgApacheLuceneSearchLeafCollector_withInt_(OrgApacheLuceneSearchCachingCollector *outer$, id<OrgApacheLuceneSearchLeafCollector> inArg, jint maxDocsToCache) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector, initWithOrgApacheLuceneSearchCachingCollector_withOrgApacheLuceneSearchLeafCollector_withInt_, outer$, inArg, maxDocsToCache)
}

void OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_growWithInt_(OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *self, jint newLen) {
  JreStrongAssign(&self->docs_, JavaUtilArrays_copyOfWithIntArray_withInt_(self->docs_, newLen));
}

void OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_invalidate(OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *self) {
  JreStrongAssign(&self->docs_, nil);
  self->docCount_ = -1;
  self->this$0_->cached_ = false;
}

void OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_bufferWithInt_(OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector *self, jint doc) {
  *IOSIntArray_GetRef(nil_chk(self->docs_), self->docCount_) = doc;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector)

@implementation OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector

- (instancetype)initWithOrgApacheLuceneSearchCachingCollector:(OrgApacheLuceneSearchCachingCollector *)outer$
                       withOrgApacheLuceneSearchLeafCollector:(id<OrgApacheLuceneSearchLeafCollector>)inArg
                                                      withInt:(jint)maxDocsToCache {
  OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector_initWithOrgApacheLuceneSearchCachingCollector_withOrgApacheLuceneSearchLeafCollector_withInt_(self, outer$, inArg, maxDocsToCache);
  return self;
}

- (void)setScorerWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)scorer {
  JreStrongAssign(&self->scorer_, scorer);
  [super setScorerWithOrgApacheLuceneSearchScorer:scorer];
}

- (void)growWithInt:(jint)newLen {
  OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_growWithInt_(self, newLen);
  JreStrongAssign(&scores_, JavaUtilArrays_copyOfWithFloatArray_withInt_(scores_, newLen));
}

- (void)invalidate {
  OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_invalidate(self);
  JreStrongAssign(&scores_, nil);
}

- (void)bufferWithInt:(jint)doc {
  OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_bufferWithInt_(self, doc);
  *IOSFloatArray_GetRef(nil_chk(scores_), docCount_) = [((OrgApacheLuceneSearchScorer *) nil_chk(scorer_)) score];
}

- (IOSFloatArray *)cachedScores {
  return docs_ == nil ? nil : JavaUtilArrays_copyOfWithFloatArray_withInt_(scores_, docCount_);
}

- (void)dealloc {
  RELEASE_(scorer_);
  RELEASE_(scores_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x4, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 6, 5, 3, -1, -1, -1 },
    { NULL, "[F", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchCachingCollector:withOrgApacheLuceneSearchLeafCollector:withInt:);
  methods[1].selector = @selector(setScorerWithOrgApacheLuceneSearchScorer:);
  methods[2].selector = @selector(growWithInt:);
  methods[3].selector = @selector(invalidate);
  methods[4].selector = @selector(bufferWithInt:);
  methods[5].selector = @selector(cachedScores);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "scorer_", "LOrgApacheLuceneSearchScorer;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "scores_", "[F", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchCachingCollector;LOrgApacheLuceneSearchLeafCollector;I", "setScorer", "LOrgApacheLuceneSearchScorer;", "LJavaIoIOException;", "grow", "I", "buffer", "LOrgApacheLuceneSearchCachingCollector;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector = { "ScoreCachingLeafCollector", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x2, 6, 2, 7, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector;
}

@end

void OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector_initWithOrgApacheLuceneSearchCachingCollector_withOrgApacheLuceneSearchLeafCollector_withInt_(OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector *self, OrgApacheLuceneSearchCachingCollector *outer$, id<OrgApacheLuceneSearchLeafCollector> inArg, jint maxDocsToCache) {
  OrgApacheLuceneSearchCachingCollector_NoScoreCachingLeafCollector_initWithOrgApacheLuceneSearchCachingCollector_withOrgApacheLuceneSearchLeafCollector_withInt_(self, outer$, inArg, maxDocsToCache);
  JreStrongAssignAndConsume(&self->scores_, [IOSFloatArray newArrayWithLength:((IOSIntArray *) nil_chk(self->docs_))->size_]);
}

OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector *new_OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector_initWithOrgApacheLuceneSearchCachingCollector_withOrgApacheLuceneSearchLeafCollector_withInt_(OrgApacheLuceneSearchCachingCollector *outer$, id<OrgApacheLuceneSearchLeafCollector> inArg, jint maxDocsToCache) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector, initWithOrgApacheLuceneSearchCachingCollector_withOrgApacheLuceneSearchLeafCollector_withInt_, outer$, inArg, maxDocsToCache)
}

OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector *create_OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector_initWithOrgApacheLuceneSearchCachingCollector_withOrgApacheLuceneSearchLeafCollector_withInt_(OrgApacheLuceneSearchCachingCollector *outer$, id<OrgApacheLuceneSearchLeafCollector> inArg, jint maxDocsToCache) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector, initWithOrgApacheLuceneSearchCachingCollector_withOrgApacheLuceneSearchLeafCollector_withInt_, outer$, inArg, maxDocsToCache)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchCachingCollector_ScoreCachingLeafCollector)

@implementation OrgApacheLuceneSearchCachingCollector_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchCachingCollector_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)collectWithInt:(jint)doc {
}

- (jboolean)needsScores {
  return true;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(collectWithInt:);
  methods[2].selector = @selector(needsScores);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "collect", "I", "LOrgApacheLuceneSearchCachingCollector;", "createWithBoolean:withDouble:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchCachingCollector_1 = { "", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 2, -1, 3, -1, -1 };
  return &_OrgApacheLuceneSearchCachingCollector_1;
}

@end

void OrgApacheLuceneSearchCachingCollector_1_init(OrgApacheLuceneSearchCachingCollector_1 *self) {
  OrgApacheLuceneSearchSimpleCollector_init(self);
}

OrgApacheLuceneSearchCachingCollector_1 *new_OrgApacheLuceneSearchCachingCollector_1_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchCachingCollector_1, init)
}

OrgApacheLuceneSearchCachingCollector_1 *create_OrgApacheLuceneSearchCachingCollector_1_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchCachingCollector_1, init)
}
