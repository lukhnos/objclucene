//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/DocIdSetIterator.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/DocIdSetIterator must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchDocIdSetIterator_1 : OrgApacheLuceneSearchDocIdSetIterator {
 @public
  jboolean exhausted_;
}

- (instancetype)init;

- (jint)advanceWithInt:(jint)target;

- (jint)docID;

- (jint)nextDoc;

- (jlong)cost;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchDocIdSetIterator_1)

__attribute__((unused)) static void OrgApacheLuceneSearchDocIdSetIterator_1_init(OrgApacheLuceneSearchDocIdSetIterator_1 *self);

__attribute__((unused)) static OrgApacheLuceneSearchDocIdSetIterator_1 *new_OrgApacheLuceneSearchDocIdSetIterator_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchDocIdSetIterator_1 *create_OrgApacheLuceneSearchDocIdSetIterator_1_init(void);

@interface OrgApacheLuceneSearchDocIdSetIterator_2 : OrgApacheLuceneSearchDocIdSetIterator {
 @public
  jint val$maxDoc_;
  jint doc_;
}

- (instancetype)initWithInt:(jint)capture$0;

- (jint)docID;

- (jint)nextDoc;

- (jint)advanceWithInt:(jint)target;

- (jlong)cost;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchDocIdSetIterator_2)

__attribute__((unused)) static void OrgApacheLuceneSearchDocIdSetIterator_2_initWithInt_(OrgApacheLuceneSearchDocIdSetIterator_2 *self, jint capture$0);

__attribute__((unused)) static OrgApacheLuceneSearchDocIdSetIterator_2 *new_OrgApacheLuceneSearchDocIdSetIterator_2_initWithInt_(jint capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchDocIdSetIterator_2 *create_OrgApacheLuceneSearchDocIdSetIterator_2_initWithInt_(jint capture$0);

@implementation OrgApacheLuceneSearchDocIdSetIterator

+ (jint)NO_MORE_DOCS {
  return OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchDocIdSetIterator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (OrgApacheLuceneSearchDocIdSetIterator *)empty {
  return OrgApacheLuceneSearchDocIdSetIterator_empty();
}

+ (OrgApacheLuceneSearchDocIdSetIterator *)allWithInt:(jint)maxDoc {
  return OrgApacheLuceneSearchDocIdSetIterator_allWithInt_(maxDoc);
}

- (jint)docID {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)nextDoc {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)advanceWithInt:(jint)target {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)slowAdvanceWithInt:(jint)target {
  JreAssert([self docID] < target, @"org/apache/lucene/search/DocIdSetIterator.java:164 condition failed: assert docID() < target;");
  jint doc;
  do {
    doc = [self nextDoc];
  }
  while (doc < target);
  return doc;
}

- (jlong)cost {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchDocIdSetIterator;", 0x19, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchDocIdSetIterator;", 0x19, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, 2, -1, -1, -1 },
    { NULL, "I", 0x401, 3, 1, 2, -1, -1, -1 },
    { NULL, "I", 0x14, 4, 1, 2, -1, -1, -1 },
    { NULL, "J", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(empty);
  methods[2].selector = @selector(allWithInt:);
  methods[3].selector = @selector(docID);
  methods[4].selector = @selector(nextDoc);
  methods[5].selector = @selector(advanceWithInt:);
  methods[6].selector = @selector(slowAdvanceWithInt:);
  methods[7].selector = @selector(cost);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NO_MORE_DOCS", "I", .constantValue.asInt = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "all", "I", "LJavaIoIOException;", "advance", "slowAdvance" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchDocIdSetIterator = { "DocIdSetIterator", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x401, 8, 1, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchDocIdSetIterator;
}

@end

void OrgApacheLuceneSearchDocIdSetIterator_init(OrgApacheLuceneSearchDocIdSetIterator *self) {
  NSObject_init(self);
}

OrgApacheLuceneSearchDocIdSetIterator *OrgApacheLuceneSearchDocIdSetIterator_empty() {
  OrgApacheLuceneSearchDocIdSetIterator_initialize();
  return create_OrgApacheLuceneSearchDocIdSetIterator_1_init();
}

OrgApacheLuceneSearchDocIdSetIterator *OrgApacheLuceneSearchDocIdSetIterator_allWithInt_(jint maxDoc) {
  OrgApacheLuceneSearchDocIdSetIterator_initialize();
  return create_OrgApacheLuceneSearchDocIdSetIterator_2_initWithInt_(maxDoc);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchDocIdSetIterator)

@implementation OrgApacheLuceneSearchDocIdSetIterator_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchDocIdSetIterator_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)advanceWithInt:(jint)target {
  JreAssert(!exhausted_, @"org/apache/lucene/search/DocIdSetIterator.java:40 condition failed: assert !exhausted;");
  JreAssert(target >= 0, @"org/apache/lucene/search/DocIdSetIterator.java:41 condition failed: assert target >= 0;");
  exhausted_ = true;
  return OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
}

- (jint)docID {
  return exhausted_ ? OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS : -1;
}

- (jint)nextDoc {
  JreAssert(!exhausted_, @"org/apache/lucene/search/DocIdSetIterator.java:52 condition failed: assert !exhausted;");
  exhausted_ = true;
  return OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
}

- (jlong)cost {
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(advanceWithInt:);
  methods[2].selector = @selector(docID);
  methods[3].selector = @selector(nextDoc);
  methods[4].selector = @selector(cost);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "exhausted_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "advance", "I", "LOrgApacheLuceneSearchDocIdSetIterator;", "empty" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchDocIdSetIterator_1 = { "", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x8018, 5, 1, 2, -1, 3, -1, -1 };
  return &_OrgApacheLuceneSearchDocIdSetIterator_1;
}

@end

void OrgApacheLuceneSearchDocIdSetIterator_1_init(OrgApacheLuceneSearchDocIdSetIterator_1 *self) {
  OrgApacheLuceneSearchDocIdSetIterator_init(self);
  self->exhausted_ = false;
}

OrgApacheLuceneSearchDocIdSetIterator_1 *new_OrgApacheLuceneSearchDocIdSetIterator_1_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchDocIdSetIterator_1, init)
}

OrgApacheLuceneSearchDocIdSetIterator_1 *create_OrgApacheLuceneSearchDocIdSetIterator_1_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchDocIdSetIterator_1, init)
}

@implementation OrgApacheLuceneSearchDocIdSetIterator_2

- (instancetype)initWithInt:(jint)capture$0 {
  OrgApacheLuceneSearchDocIdSetIterator_2_initWithInt_(self, capture$0);
  return self;
}

- (jint)docID {
  return doc_;
}

- (jint)nextDoc {
  return [self advanceWithInt:doc_ + 1];
}

- (jint)advanceWithInt:(jint)target {
  doc_ = target;
  if (doc_ >= val$maxDoc_) {
    doc_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
  }
  return doc_;
}

- (jlong)cost {
  return val$maxDoc_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, 0, 1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(docID);
  methods[2].selector = @selector(nextDoc);
  methods[3].selector = @selector(advanceWithInt:);
  methods[4].selector = @selector(cost);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$maxDoc_", "I", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "doc_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "LJavaIoIOException;", "advance", "LOrgApacheLuceneSearchDocIdSetIterator;", "allWithInt:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchDocIdSetIterator_2 = { "", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x8018, 5, 2, 3, -1, 4, -1, -1 };
  return &_OrgApacheLuceneSearchDocIdSetIterator_2;
}

@end

void OrgApacheLuceneSearchDocIdSetIterator_2_initWithInt_(OrgApacheLuceneSearchDocIdSetIterator_2 *self, jint capture$0) {
  self->val$maxDoc_ = capture$0;
  OrgApacheLuceneSearchDocIdSetIterator_init(self);
  self->doc_ = -1;
}

OrgApacheLuceneSearchDocIdSetIterator_2 *new_OrgApacheLuceneSearchDocIdSetIterator_2_initWithInt_(jint capture$0) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchDocIdSetIterator_2, initWithInt_, capture$0)
}

OrgApacheLuceneSearchDocIdSetIterator_2 *create_OrgApacheLuceneSearchDocIdSetIterator_2_initWithInt_(jint capture$0) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchDocIdSetIterator_2, initWithInt_, capture$0)
}
