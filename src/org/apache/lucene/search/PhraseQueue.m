//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/PhraseQueue.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/search/PhrasePositions.h"
#include "org/apache/lucene/search/PhraseQueue.h"
#include "org/apache/lucene/util/PriorityQueue.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/PhraseQueue must not be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation OrgApacheLuceneSearchPhraseQueue

- (instancetype)initPackagePrivateWithInt:(jint)size {
  OrgApacheLuceneSearchPhraseQueue_initPackagePrivateWithInt_(self, size);
  return self;
}

- (jboolean)lessThanWithId:(OrgApacheLuceneSearchPhrasePositions *)pp1
                    withId:(OrgApacheLuceneSearchPhrasePositions *)pp2 {
  if (((OrgApacheLuceneSearchPhrasePositions *) nil_chk(pp1))->position_ == ((OrgApacheLuceneSearchPhrasePositions *) nil_chk(pp2))->position_) if (pp1->offset_ == pp2->offset_) {
    return pp1->ord_ < pp2->ord_;
  }
  else {
    return pp1->offset_ < pp2->offset_;
  }
  else {
    return pp1->position_ < pp2->position_;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x14, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithInt:);
  methods[1].selector = @selector(lessThanWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "I", "lessThan", "LOrgApacheLuceneSearchPhrasePositions;LOrgApacheLuceneSearchPhrasePositions;", "Lorg/apache/lucene/util/PriorityQueue<Lorg/apache/lucene/search/PhrasePositions;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchPhraseQueue = { "PhraseQueue", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0x10, 2, 0, -1, -1, -1, 3, -1 };
  return &_OrgApacheLuceneSearchPhraseQueue;
}

@end

void OrgApacheLuceneSearchPhraseQueue_initPackagePrivateWithInt_(OrgApacheLuceneSearchPhraseQueue *self, jint size) {
  OrgApacheLuceneUtilPriorityQueue_initWithInt_(self, size);
}

OrgApacheLuceneSearchPhraseQueue *new_OrgApacheLuceneSearchPhraseQueue_initPackagePrivateWithInt_(jint size) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchPhraseQueue, initPackagePrivateWithInt_, size)
}

OrgApacheLuceneSearchPhraseQueue *create_OrgApacheLuceneSearchPhraseQueue_initPackagePrivateWithInt_(jint size) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchPhraseQueue, initPackagePrivateWithInt_, size)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchPhraseQueue)
