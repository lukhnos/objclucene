//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/spans/SpanQuery.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/Collection.h"
#include "java/util/Map.h"
#include "java/util/TreeMap.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/spans/SpanQuery.h"
#include "org/apache/lucene/search/spans/SpanWeight.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/spans/SpanQuery must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneSearchSpansSpanQuery

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchSpansSpanQuery_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)getField {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgApacheLuceneSearchSpansSpanWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                                 withBoolean:(jboolean)needsScores {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (id<JavaUtilMap>)getTermContextsWithOrgApacheLuceneSearchSpansSpanWeightArray:(IOSObjectArray *)weights {
  return OrgApacheLuceneSearchSpansSpanQuery_getTermContextsWithOrgApacheLuceneSearchSpansSpanWeightArray_(weights);
}

+ (id<JavaUtilMap>)getTermContextsWithJavaUtilCollection:(id<JavaUtilCollection>)weights {
  return OrgApacheLuceneSearchSpansSpanQuery_getTermContextsWithJavaUtilCollection_(weights);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchSpansSpanWeight;", 0x401, 0, 1, 2, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x8c, 3, 4, -1, 5, -1, -1 },
    { NULL, "LJavaUtilMap;", 0xc, 3, 6, -1, 7, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getField);
  methods[2].selector = @selector(createWeightWithOrgApacheLuceneSearchIndexSearcher:withBoolean:);
  methods[3].selector = @selector(getTermContextsWithOrgApacheLuceneSearchSpansSpanWeightArray:);
  methods[4].selector = @selector(getTermContextsWithJavaUtilCollection:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "createWeight", "LOrgApacheLuceneSearchIndexSearcher;Z", "LJavaIoIOException;", "getTermContexts", "[LOrgApacheLuceneSearchSpansSpanWeight;", "([Lorg/apache/lucene/search/spans/SpanWeight;)Ljava/util/Map<Lorg/apache/lucene/index/Term;Lorg/apache/lucene/index/TermContext;>;", "LJavaUtilCollection;", "(Ljava/util/Collection<Lorg/apache/lucene/search/spans/SpanWeight;>;)Ljava/util/Map<Lorg/apache/lucene/index/Term;Lorg/apache/lucene/index/TermContext;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSpansSpanQuery = { "SpanQuery", "org.apache.lucene.search.spans", ptrTable, methods, NULL, 7, 0x401, 5, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchSpansSpanQuery;
}

@end

void OrgApacheLuceneSearchSpansSpanQuery_init(OrgApacheLuceneSearchSpansSpanQuery *self) {
  OrgApacheLuceneSearchQuery_init(self);
}

id<JavaUtilMap> OrgApacheLuceneSearchSpansSpanQuery_getTermContextsWithOrgApacheLuceneSearchSpansSpanWeightArray_(IOSObjectArray *weights) {
  OrgApacheLuceneSearchSpansSpanQuery_initialize();
  id<JavaUtilMap> terms = create_JavaUtilTreeMap_init();
  {
    IOSObjectArray *a__ = weights;
    OrgApacheLuceneSearchSpansSpanWeight * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgApacheLuceneSearchSpansSpanWeight * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneSearchSpansSpanWeight *w = *b__++;
      [((OrgApacheLuceneSearchSpansSpanWeight *) nil_chk(w)) extractTermContextsWithJavaUtilMap:terms];
    }
  }
  return terms;
}

id<JavaUtilMap> OrgApacheLuceneSearchSpansSpanQuery_getTermContextsWithJavaUtilCollection_(id<JavaUtilCollection> weights) {
  OrgApacheLuceneSearchSpansSpanQuery_initialize();
  id<JavaUtilMap> terms = create_JavaUtilTreeMap_init();
  for (OrgApacheLuceneSearchSpansSpanWeight * __strong w in nil_chk(weights)) {
    [((OrgApacheLuceneSearchSpansSpanWeight *) nil_chk(w)) extractTermContextsWithJavaUtilMap:terms];
  }
  return terms;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSpansSpanQuery)
