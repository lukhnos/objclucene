//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/spans/NearSpans.java
//

#include "J2ObjC_source.h"
#include "java/util/List.h"
#include "org/apache/lucene/search/spans/ConjunctionSpans.h"
#include "org/apache/lucene/search/spans/NearSpans.h"
#include "org/apache/lucene/search/spans/SpanNearQuery.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/spans/NearSpans must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneSearchSpansNearSpans

- (instancetype)initPackagePrivateWithOrgApacheLuceneSearchSpansSpanNearQuery:(OrgApacheLuceneSearchSpansSpanNearQuery *)query
                                                             withJavaUtilList:(id<JavaUtilList>)subSpans {
  OrgApacheLuceneSearchSpansNearSpans_initPackagePrivateWithOrgApacheLuceneSearchSpansSpanNearQuery_withJavaUtilList_(self, query, subSpans);
  return self;
}

- (void)dealloc {
  RELEASE_(query_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgApacheLuceneSearchSpansSpanNearQuery:withJavaUtilList:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "query_", "LOrgApacheLuceneSearchSpansSpanNearQuery;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "allowedSlop_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchSpansSpanNearQuery;LJavaUtilList;", "(Lorg/apache/lucene/search/spans/SpanNearQuery;Ljava/util/List<Lorg/apache/lucene/search/spans/Spans;>;)V" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSpansNearSpans = { "NearSpans", "org.apache.lucene.search.spans", ptrTable, methods, fields, 7, 0x400, 1, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchSpansNearSpans;
}

@end

void OrgApacheLuceneSearchSpansNearSpans_initPackagePrivateWithOrgApacheLuceneSearchSpansSpanNearQuery_withJavaUtilList_(OrgApacheLuceneSearchSpansNearSpans *self, OrgApacheLuceneSearchSpansSpanNearQuery *query, id<JavaUtilList> subSpans) {
  OrgApacheLuceneSearchSpansConjunctionSpans_initPackagePrivateWithJavaUtilList_(self, subSpans);
  JreStrongAssign(&self->query_, query);
  self->allowedSlop_ = [((OrgApacheLuceneSearchSpansSpanNearQuery *) nil_chk(query)) getSlop];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSpansNearSpans)
