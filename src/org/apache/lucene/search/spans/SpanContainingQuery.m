//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/spans/SpanContainingQuery.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/Map.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/spans/ContainSpans.h"
#include "org/apache/lucene/search/spans/SpanContainQuery.h"
#include "org/apache/lucene/search/spans/SpanContainingQuery.h"
#include "org/apache/lucene/search/spans/SpanQuery.h"
#include "org/apache/lucene/search/spans/SpanWeight.h"
#include "org/apache/lucene/search/spans/Spans.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/spans/SpanContainingQuery must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_1 : OrgApacheLuceneSearchSpansContainSpans

- (instancetype)initWithOrgApacheLuceneSearchSpansSpans:(OrgApacheLuceneSearchSpansSpans *)bigSpans
                    withOrgApacheLuceneSearchSpansSpans:(OrgApacheLuceneSearchSpansSpans *)littleSpans
                    withOrgApacheLuceneSearchSpansSpans:(OrgApacheLuceneSearchSpansSpans *)sourceSpans;

- (jboolean)twoPhaseCurrentDocMatches;

- (jint)nextStartPosition;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_1)

__attribute__((unused)) static void OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_1_initWithOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_(OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_1 *self, OrgApacheLuceneSearchSpansSpans *bigSpans, OrgApacheLuceneSearchSpansSpans *littleSpans, OrgApacheLuceneSearchSpansSpans *sourceSpans);

__attribute__((unused)) static OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_1 *new_OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_1_initWithOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_(OrgApacheLuceneSearchSpansSpans *bigSpans, OrgApacheLuceneSearchSpansSpans *littleSpans, OrgApacheLuceneSearchSpansSpans *sourceSpans) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_1 *create_OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_1_initWithOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_(OrgApacheLuceneSearchSpansSpans *bigSpans, OrgApacheLuceneSearchSpansSpans *littleSpans, OrgApacheLuceneSearchSpansSpans *sourceSpans);

@implementation OrgApacheLuceneSearchSpansSpanContainingQuery

- (instancetype)initWithOrgApacheLuceneSearchSpansSpanQuery:(OrgApacheLuceneSearchSpansSpanQuery *)big
                    withOrgApacheLuceneSearchSpansSpanQuery:(OrgApacheLuceneSearchSpansSpanQuery *)little {
  OrgApacheLuceneSearchSpansSpanContainingQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSpansSpanQuery_(self, big, little);
  return self;
}

- (NSString *)toStringWithNSString:(NSString *)field {
  return [self toStringWithNSString:field withNSString:@"SpanContaining"];
}

- (OrgApacheLuceneSearchSpansSpanContainingQuery *)java_clone {
  return create_OrgApacheLuceneSearchSpansSpanContainingQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSpansSpanQuery_((OrgApacheLuceneSearchSpansSpanQuery *) cast_chk([((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(big_)) java_clone], [OrgApacheLuceneSearchSpansSpanQuery class]), (OrgApacheLuceneSearchSpansSpanQuery *) cast_chk([((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(little_)) java_clone], [OrgApacheLuceneSearchSpansSpanQuery class]));
}

- (OrgApacheLuceneSearchSpansSpanWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                                 withBoolean:(jboolean)needsScores {
  OrgApacheLuceneSearchSpansSpanWeight *bigWeight = JreRetainedLocalValue([((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(big_)) createWeightWithOrgApacheLuceneSearchIndexSearcher:searcher withBoolean:false]);
  OrgApacheLuceneSearchSpansSpanWeight *littleWeight = JreRetainedLocalValue([((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(little_)) createWeightWithOrgApacheLuceneSearchIndexSearcher:searcher withBoolean:false]);
  return create_OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_initWithOrgApacheLuceneSearchSpansSpanContainingQuery_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_withOrgApacheLuceneSearchSpansSpanWeight_withOrgApacheLuceneSearchSpansSpanWeight_(self, searcher, needsScores ? OrgApacheLuceneSearchSpansSpanQuery_getTermContextsWithOrgApacheLuceneSearchSpansSpanWeightArray_([IOSObjectArray arrayWithObjects:(id[]){ bigWeight, littleWeight } count:2 type:OrgApacheLuceneSearchSpansSpanWeight_class_()]) : nil, bigWeight, littleWeight);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchSpansSpanContainingQuery;", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchSpansSpanWeight;", 0x1, 4, 5, 6, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchSpansSpanQuery:withOrgApacheLuceneSearchSpansSpanQuery:);
  methods[1].selector = @selector(toStringWithNSString:);
  methods[2].selector = @selector(java_clone);
  methods[3].selector = @selector(createWeightWithOrgApacheLuceneSearchIndexSearcher:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchSpansSpanQuery;LOrgApacheLuceneSearchSpansSpanQuery;", "toString", "LNSString;", "clone", "createWeight", "LOrgApacheLuceneSearchIndexSearcher;Z", "LJavaIoIOException;", "LOrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSpansSpanContainingQuery = { "SpanContainingQuery", "org.apache.lucene.search.spans", ptrTable, methods, NULL, 7, 0x1, 4, 0, -1, 7, -1, -1, -1 };
  return &_OrgApacheLuceneSearchSpansSpanContainingQuery;
}

@end

void OrgApacheLuceneSearchSpansSpanContainingQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSpansSpanQuery_(OrgApacheLuceneSearchSpansSpanContainingQuery *self, OrgApacheLuceneSearchSpansSpanQuery *big, OrgApacheLuceneSearchSpansSpanQuery *little) {
  OrgApacheLuceneSearchSpansSpanContainQuery_initPackagePrivateWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSpansSpanQuery_withFloat_(self, big, little, [((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(big)) getBoost]);
}

OrgApacheLuceneSearchSpansSpanContainingQuery *new_OrgApacheLuceneSearchSpansSpanContainingQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSpansSpanQuery_(OrgApacheLuceneSearchSpansSpanQuery *big, OrgApacheLuceneSearchSpansSpanQuery *little) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSpansSpanContainingQuery, initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSpansSpanQuery_, big, little)
}

OrgApacheLuceneSearchSpansSpanContainingQuery *create_OrgApacheLuceneSearchSpansSpanContainingQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSpansSpanQuery_(OrgApacheLuceneSearchSpansSpanQuery *big, OrgApacheLuceneSearchSpansSpanQuery *little) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSpansSpanContainingQuery, initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchSpansSpanQuery_, big, little)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSpansSpanContainingQuery)

@implementation OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight

- (instancetype)initWithOrgApacheLuceneSearchSpansSpanContainingQuery:(OrgApacheLuceneSearchSpansSpanContainingQuery *)outer$
                               withOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                      withJavaUtilMap:(id<JavaUtilMap>)terms
                             withOrgApacheLuceneSearchSpansSpanWeight:(OrgApacheLuceneSearchSpansSpanWeight *)bigWeight
                             withOrgApacheLuceneSearchSpansSpanWeight:(OrgApacheLuceneSearchSpansSpanWeight *)littleWeight {
  OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_initWithOrgApacheLuceneSearchSpansSpanContainingQuery_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_withOrgApacheLuceneSearchSpansSpanWeight_withOrgApacheLuceneSearchSpansSpanWeight_(self, outer$, searcher, terms, bigWeight, littleWeight);
  return self;
}

- (OrgApacheLuceneSearchSpansSpans *)getSpansWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                     withOrgApacheLuceneSearchSpansSpanWeight_Postings:(OrgApacheLuceneSearchSpansSpanWeight_Postings *)requiredPostings {
  JavaUtilArrayList *containerContained = JreRetainedLocalValue([self prepareConjunctionWithOrgApacheLuceneIndexLeafReaderContext:context withOrgApacheLuceneSearchSpansSpanWeight_Postings:requiredPostings]);
  if (containerContained == nil) {
    return nil;
  }
  OrgApacheLuceneSearchSpansSpans *big = JreRetainedLocalValue([containerContained getWithInt:0]);
  OrgApacheLuceneSearchSpansSpans *little = JreRetainedLocalValue([containerContained getWithInt:1]);
  return create_OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_1_initWithOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_(big, little, big);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, 2, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchSpansSpans;", 0x1, 3, 4, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchSpansSpanContainingQuery:withOrgApacheLuceneSearchIndexSearcher:withJavaUtilMap:withOrgApacheLuceneSearchSpansSpanWeight:withOrgApacheLuceneSearchSpansSpanWeight:);
  methods[1].selector = @selector(getSpansWithOrgApacheLuceneIndexLeafReaderContext:withOrgApacheLuceneSearchSpansSpanWeight_Postings:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchSpansSpanContainingQuery;LOrgApacheLuceneSearchIndexSearcher;LJavaUtilMap;LOrgApacheLuceneSearchSpansSpanWeight;LOrgApacheLuceneSearchSpansSpanWeight;", "LJavaIoIOException;", "(Lorg/apache/lucene/search/IndexSearcher;Ljava/util/Map<Lorg/apache/lucene/index/Term;Lorg/apache/lucene/index/TermContext;>;Lorg/apache/lucene/search/spans/SpanWeight;Lorg/apache/lucene/search/spans/SpanWeight;)V", "getSpans", "LOrgApacheLuceneIndexLeafReaderContext;LOrgApacheLuceneSearchSpansSpanWeight_Postings;", "LOrgApacheLuceneSearchSpansSpanContainingQuery;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight = { "SpanContainingWeight", "org.apache.lucene.search.spans", ptrTable, methods, NULL, 7, 0x1, 2, 0, 5, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight;
}

@end

void OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_initWithOrgApacheLuceneSearchSpansSpanContainingQuery_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_withOrgApacheLuceneSearchSpansSpanWeight_withOrgApacheLuceneSearchSpansSpanWeight_(OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight *self, OrgApacheLuceneSearchSpansSpanContainingQuery *outer$, OrgApacheLuceneSearchIndexSearcher *searcher, id<JavaUtilMap> terms, OrgApacheLuceneSearchSpansSpanWeight *bigWeight, OrgApacheLuceneSearchSpansSpanWeight *littleWeight) {
  OrgApacheLuceneSearchSpansSpanContainQuery_SpanContainWeight_initWithOrgApacheLuceneSearchSpansSpanContainQuery_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_withOrgApacheLuceneSearchSpansSpanWeight_withOrgApacheLuceneSearchSpansSpanWeight_(self, outer$, searcher, terms, bigWeight, littleWeight);
}

OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight *new_OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_initWithOrgApacheLuceneSearchSpansSpanContainingQuery_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_withOrgApacheLuceneSearchSpansSpanWeight_withOrgApacheLuceneSearchSpansSpanWeight_(OrgApacheLuceneSearchSpansSpanContainingQuery *outer$, OrgApacheLuceneSearchIndexSearcher *searcher, id<JavaUtilMap> terms, OrgApacheLuceneSearchSpansSpanWeight *bigWeight, OrgApacheLuceneSearchSpansSpanWeight *littleWeight) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight, initWithOrgApacheLuceneSearchSpansSpanContainingQuery_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_withOrgApacheLuceneSearchSpansSpanWeight_withOrgApacheLuceneSearchSpansSpanWeight_, outer$, searcher, terms, bigWeight, littleWeight)
}

OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight *create_OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_initWithOrgApacheLuceneSearchSpansSpanContainingQuery_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_withOrgApacheLuceneSearchSpansSpanWeight_withOrgApacheLuceneSearchSpansSpanWeight_(OrgApacheLuceneSearchSpansSpanContainingQuery *outer$, OrgApacheLuceneSearchIndexSearcher *searcher, id<JavaUtilMap> terms, OrgApacheLuceneSearchSpansSpanWeight *bigWeight, OrgApacheLuceneSearchSpansSpanWeight *littleWeight) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight, initWithOrgApacheLuceneSearchSpansSpanContainingQuery_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_withOrgApacheLuceneSearchSpansSpanWeight_withOrgApacheLuceneSearchSpansSpanWeight_, outer$, searcher, terms, bigWeight, littleWeight)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight)

@implementation OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_1

- (instancetype)initWithOrgApacheLuceneSearchSpansSpans:(OrgApacheLuceneSearchSpansSpans *)bigSpans
                    withOrgApacheLuceneSearchSpansSpans:(OrgApacheLuceneSearchSpansSpans *)littleSpans
                    withOrgApacheLuceneSearchSpansSpans:(OrgApacheLuceneSearchSpansSpans *)sourceSpans {
  OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_1_initWithOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_(self, bigSpans, littleSpans, sourceSpans);
  return self;
}

- (jboolean)twoPhaseCurrentDocMatches {
  oneExhaustedInCurrentDoc_ = false;
  JreAssert([((OrgApacheLuceneSearchSpansSpans *) nil_chk(littleSpans_)) startPosition] == -1, @"org/apache/lucene/search/spans/SpanContainingQuery.java:87 condition failed: assert littleSpans.startPosition() == -1;");
  while ([((OrgApacheLuceneSearchSpansSpans *) nil_chk(bigSpans_)) nextStartPosition] != OrgApacheLuceneSearchSpansSpans_NO_MORE_POSITIONS) {
    while ([((OrgApacheLuceneSearchSpansSpans *) nil_chk(littleSpans_)) startPosition] < [((OrgApacheLuceneSearchSpansSpans *) nil_chk(bigSpans_)) startPosition]) {
      if ([((OrgApacheLuceneSearchSpansSpans *) nil_chk(littleSpans_)) nextStartPosition] == OrgApacheLuceneSearchSpansSpans_NO_MORE_POSITIONS) {
        oneExhaustedInCurrentDoc_ = true;
        return false;
      }
    }
    if ([((OrgApacheLuceneSearchSpansSpans *) nil_chk(bigSpans_)) endPosition] >= [((OrgApacheLuceneSearchSpansSpans *) nil_chk(littleSpans_)) endPosition]) {
      atFirstInCurrentDoc_ = true;
      return true;
    }
  }
  oneExhaustedInCurrentDoc_ = true;
  return false;
}

- (jint)nextStartPosition {
  if (atFirstInCurrentDoc_) {
    atFirstInCurrentDoc_ = false;
    return [((OrgApacheLuceneSearchSpansSpans *) nil_chk(bigSpans_)) startPosition];
  }
  while ([((OrgApacheLuceneSearchSpansSpans *) nil_chk(bigSpans_)) nextStartPosition] != OrgApacheLuceneSearchSpansSpans_NO_MORE_POSITIONS) {
    while ([((OrgApacheLuceneSearchSpansSpans *) nil_chk(littleSpans_)) startPosition] < [((OrgApacheLuceneSearchSpansSpans *) nil_chk(bigSpans_)) startPosition]) {
      if ([((OrgApacheLuceneSearchSpansSpans *) nil_chk(littleSpans_)) nextStartPosition] == OrgApacheLuceneSearchSpansSpans_NO_MORE_POSITIONS) {
        oneExhaustedInCurrentDoc_ = true;
        return OrgApacheLuceneSearchSpansSpans_NO_MORE_POSITIONS;
      }
    }
    if ([((OrgApacheLuceneSearchSpansSpans *) nil_chk(bigSpans_)) endPosition] >= [((OrgApacheLuceneSearchSpansSpans *) nil_chk(littleSpans_)) endPosition]) {
      return [((OrgApacheLuceneSearchSpansSpans *) nil_chk(bigSpans_)) startPosition];
    }
  }
  oneExhaustedInCurrentDoc_ = true;
  return OrgApacheLuceneSearchSpansSpans_NO_MORE_POSITIONS;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchSpansSpans:withOrgApacheLuceneSearchSpansSpans:withOrgApacheLuceneSearchSpansSpans:);
  methods[1].selector = @selector(twoPhaseCurrentDocMatches);
  methods[2].selector = @selector(nextStartPosition);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchSpansSpans;LOrgApacheLuceneSearchSpansSpans;LOrgApacheLuceneSearchSpansSpans;", "LJavaIoIOException;", "LOrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight;", "getSpansWithOrgApacheLuceneIndexLeafReaderContext:withOrgApacheLuceneSearchSpansSpanWeight_Postings:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_1 = { "", "org.apache.lucene.search.spans", ptrTable, methods, NULL, 7, 0x8010, 3, 0, 2, -1, 3, -1, -1 };
  return &_OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_1;
}

@end

void OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_1_initWithOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_(OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_1 *self, OrgApacheLuceneSearchSpansSpans *bigSpans, OrgApacheLuceneSearchSpansSpans *littleSpans, OrgApacheLuceneSearchSpansSpans *sourceSpans) {
  OrgApacheLuceneSearchSpansContainSpans_initPackagePrivateWithOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_(self, bigSpans, littleSpans, sourceSpans);
}

OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_1 *new_OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_1_initWithOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_(OrgApacheLuceneSearchSpansSpans *bigSpans, OrgApacheLuceneSearchSpansSpans *littleSpans, OrgApacheLuceneSearchSpansSpans *sourceSpans) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_1, initWithOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_, bigSpans, littleSpans, sourceSpans)
}

OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_1 *create_OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_1_initWithOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_(OrgApacheLuceneSearchSpansSpans *bigSpans, OrgApacheLuceneSearchSpansSpans *littleSpans, OrgApacheLuceneSearchSpansSpans *sourceSpans) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSpansSpanContainingQuery_SpanContainingWeight_1, initWithOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_withOrgApacheLuceneSearchSpansSpans_, bigSpans, littleSpans, sourceSpans)
}
