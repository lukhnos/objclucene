//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/spans/FieldMaskingSpanQuery.java
//

#include "J2ObjC_source.h"
#include "java/lang/StringBuilder.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/spans/FieldMaskingSpanQuery.h"
#include "org/apache/lucene/search/spans/SpanQuery.h"
#include "org/apache/lucene/search/spans/SpanWeight.h"
#include "org/apache/lucene/util/ToStringUtils.h"
#include "org/lukhnos/portmobile/util/Objects.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/spans/FieldMaskingSpanQuery must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchSpansFieldMaskingSpanQuery () {
 @public
  OrgApacheLuceneSearchSpansSpanQuery *maskedQuery_;
  NSString *field_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSpansFieldMaskingSpanQuery, maskedQuery_, OrgApacheLuceneSearchSpansSpanQuery *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSpansFieldMaskingSpanQuery, field_, NSString *)

@implementation OrgApacheLuceneSearchSpansFieldMaskingSpanQuery

- (instancetype)initWithOrgApacheLuceneSearchSpansSpanQuery:(OrgApacheLuceneSearchSpansSpanQuery *)maskedQuery
                                               withNSString:(NSString *)maskedField {
  OrgApacheLuceneSearchSpansFieldMaskingSpanQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withNSString_(self, maskedQuery, maskedField);
  return self;
}

- (NSString *)getField {
  return field_;
}

- (OrgApacheLuceneSearchSpansSpanQuery *)getMaskedQuery {
  return maskedQuery_;
}

- (OrgApacheLuceneSearchSpansSpanWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                                 withBoolean:(jboolean)needsScores {
  return [((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(maskedQuery_)) createWeightWithOrgApacheLuceneSearchIndexSearcher:searcher withBoolean:needsScores];
}

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  OrgApacheLuceneSearchSpansFieldMaskingSpanQuery *clone = nil;
  OrgApacheLuceneSearchSpansSpanQuery *rewritten = (OrgApacheLuceneSearchSpansSpanQuery *) cast_chk([((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(maskedQuery_)) rewriteWithOrgApacheLuceneIndexIndexReader:reader], [OrgApacheLuceneSearchSpansSpanQuery class]);
  if (!JreObjectEqualsEquals(rewritten, maskedQuery_)) {
    clone = (OrgApacheLuceneSearchSpansFieldMaskingSpanQuery *) cast_chk([self java_clone], [OrgApacheLuceneSearchSpansFieldMaskingSpanQuery class]);
    JreStrongAssign(&((OrgApacheLuceneSearchSpansFieldMaskingSpanQuery *) nil_chk(clone))->maskedQuery_, rewritten);
  }
  if (clone != nil) {
    return clone;
  }
  else {
    return self;
  }
}

- (NSString *)toStringWithNSString:(NSString *)field {
  JavaLangStringBuilder *buffer = create_JavaLangStringBuilder_init();
  [buffer appendWithNSString:@"mask("];
  [buffer appendWithNSString:[((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(maskedQuery_)) toStringWithNSString:field]];
  [buffer appendWithNSString:@")"];
  [buffer appendWithNSString:OrgApacheLuceneUtilToStringUtils_boostWithFloat_([self getBoost])];
  [buffer appendWithNSString:@" as "];
  [buffer appendWithNSString:self->field_];
  return [buffer description];
}

- (jboolean)isEqual:(id)o {
  if (![super isEqual:o]) {
    return false;
  }
  OrgApacheLuceneSearchSpansFieldMaskingSpanQuery *other = (OrgApacheLuceneSearchSpansFieldMaskingSpanQuery *) cast_chk(o, [OrgApacheLuceneSearchSpansFieldMaskingSpanQuery class]);
  return ([((NSString *) nil_chk([self getField])) isEqual:[((OrgApacheLuceneSearchSpansFieldMaskingSpanQuery *) nil_chk(other)) getField]] && [((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk([self getMaskedQuery])) isEqual:[other getMaskedQuery]]);
}

- (NSUInteger)hash {
  return ((jint) [super hash]) ^ ((jint) [((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk([self getMaskedQuery])) hash]) ^ ((jint) [((NSString *) nil_chk([self getField])) hash]);
}

- (void)dealloc {
  RELEASE_(maskedQuery_);
  RELEASE_(field_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchSpansSpanQuery;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchSpansSpanWeight;", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, 4, 5, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 10, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchSpansSpanQuery:withNSString:);
  methods[1].selector = @selector(getField);
  methods[2].selector = @selector(getMaskedQuery);
  methods[3].selector = @selector(createWeightWithOrgApacheLuceneSearchIndexSearcher:withBoolean:);
  methods[4].selector = @selector(rewriteWithOrgApacheLuceneIndexIndexReader:);
  methods[5].selector = @selector(toStringWithNSString:);
  methods[6].selector = @selector(isEqual:);
  methods[7].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "maskedQuery_", "LOrgApacheLuceneSearchSpansSpanQuery;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "field_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchSpansSpanQuery;LNSString;", "createWeight", "LOrgApacheLuceneSearchIndexSearcher;Z", "LJavaIoIOException;", "rewrite", "LOrgApacheLuceneIndexIndexReader;", "toString", "LNSString;", "equals", "LNSObject;", "hashCode" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSpansFieldMaskingSpanQuery = { "FieldMaskingSpanQuery", "org.apache.lucene.search.spans", ptrTable, methods, fields, 7, 0x1, 8, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchSpansFieldMaskingSpanQuery;
}

@end

void OrgApacheLuceneSearchSpansFieldMaskingSpanQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withNSString_(OrgApacheLuceneSearchSpansFieldMaskingSpanQuery *self, OrgApacheLuceneSearchSpansSpanQuery *maskedQuery, NSString *maskedField) {
  OrgApacheLuceneSearchSpansSpanQuery_init(self);
  JreStrongAssign(&self->maskedQuery_, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_(maskedQuery));
  JreStrongAssign(&self->field_, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_(maskedField));
}

OrgApacheLuceneSearchSpansFieldMaskingSpanQuery *new_OrgApacheLuceneSearchSpansFieldMaskingSpanQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withNSString_(OrgApacheLuceneSearchSpansSpanQuery *maskedQuery, NSString *maskedField) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSpansFieldMaskingSpanQuery, initWithOrgApacheLuceneSearchSpansSpanQuery_withNSString_, maskedQuery, maskedField)
}

OrgApacheLuceneSearchSpansFieldMaskingSpanQuery *create_OrgApacheLuceneSearchSpansFieldMaskingSpanQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withNSString_(OrgApacheLuceneSearchSpansSpanQuery *maskedQuery, NSString *maskedField) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSpansFieldMaskingSpanQuery, initWithOrgApacheLuceneSearchSpansSpanQuery_withNSString_, maskedQuery, maskedField)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSpansFieldMaskingSpanQuery)
