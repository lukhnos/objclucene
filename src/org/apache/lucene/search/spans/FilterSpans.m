//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/spans/FilterSpans.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/search/TwoPhaseIterator.h"
#include "org/apache/lucene/search/spans/FilterSpans.h"
#include "org/apache/lucene/search/spans/SpanCollector.h"
#include "org/apache/lucene/search/spans/Spans.h"
#include "org/lukhnos/portmobile/util/Objects.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/spans/FilterSpans must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchSpansFilterSpans () {
 @public
  jboolean atFirstInCurrentDoc_;
  jint startPos_;
}

/*!
 @brief Returns true if the current document matches.
 <p>
  This is called during two-phase processing.
 */
- (jboolean)twoPhaseCurrentDocMatches;

@end

__attribute__((unused)) static jboolean OrgApacheLuceneSearchSpansFilterSpans_twoPhaseCurrentDocMatches(OrgApacheLuceneSearchSpansFilterSpans *self);

@interface OrgApacheLuceneSearchSpansFilterSpans_1 : OrgApacheLuceneSearchTwoPhaseIterator {
 @public
  OrgApacheLuceneSearchSpansFilterSpans *this$0_;
  OrgApacheLuceneSearchTwoPhaseIterator *val$inner_;
}

- (instancetype)initWithOrgApacheLuceneSearchSpansFilterSpans:(OrgApacheLuceneSearchSpansFilterSpans *)outer$
                    withOrgApacheLuceneSearchTwoPhaseIterator:(OrgApacheLuceneSearchTwoPhaseIterator *)capture$0
                    withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)approximation;

- (jboolean)matches;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSpansFilterSpans_1)

__attribute__((unused)) static void OrgApacheLuceneSearchSpansFilterSpans_1_initWithOrgApacheLuceneSearchSpansFilterSpans_withOrgApacheLuceneSearchTwoPhaseIterator_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchSpansFilterSpans_1 *self, OrgApacheLuceneSearchSpansFilterSpans *outer$, OrgApacheLuceneSearchTwoPhaseIterator *capture$0, OrgApacheLuceneSearchDocIdSetIterator *approximation);

__attribute__((unused)) static OrgApacheLuceneSearchSpansFilterSpans_1 *new_OrgApacheLuceneSearchSpansFilterSpans_1_initWithOrgApacheLuceneSearchSpansFilterSpans_withOrgApacheLuceneSearchTwoPhaseIterator_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchSpansFilterSpans *outer$, OrgApacheLuceneSearchTwoPhaseIterator *capture$0, OrgApacheLuceneSearchDocIdSetIterator *approximation) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchSpansFilterSpans_1 *create_OrgApacheLuceneSearchSpansFilterSpans_1_initWithOrgApacheLuceneSearchSpansFilterSpans_withOrgApacheLuceneSearchTwoPhaseIterator_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchSpansFilterSpans *outer$, OrgApacheLuceneSearchTwoPhaseIterator *capture$0, OrgApacheLuceneSearchDocIdSetIterator *approximation);

@interface OrgApacheLuceneSearchSpansFilterSpans_2 : OrgApacheLuceneSearchTwoPhaseIterator {
 @public
  OrgApacheLuceneSearchSpansFilterSpans *this$0_;
}

- (instancetype)initWithOrgApacheLuceneSearchSpansFilterSpans:(OrgApacheLuceneSearchSpansFilterSpans *)outer$
                    withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)approximation;

- (jboolean)matches;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSpansFilterSpans_2)

__attribute__((unused)) static void OrgApacheLuceneSearchSpansFilterSpans_2_initWithOrgApacheLuceneSearchSpansFilterSpans_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchSpansFilterSpans_2 *self, OrgApacheLuceneSearchSpansFilterSpans *outer$, OrgApacheLuceneSearchDocIdSetIterator *approximation);

__attribute__((unused)) static OrgApacheLuceneSearchSpansFilterSpans_2 *new_OrgApacheLuceneSearchSpansFilterSpans_2_initWithOrgApacheLuceneSearchSpansFilterSpans_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchSpansFilterSpans *outer$, OrgApacheLuceneSearchDocIdSetIterator *approximation) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchSpansFilterSpans_2 *create_OrgApacheLuceneSearchSpansFilterSpans_2_initWithOrgApacheLuceneSearchSpansFilterSpans_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchSpansFilterSpans *outer$, OrgApacheLuceneSearchDocIdSetIterator *approximation);

__attribute__((unused)) static void OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_initWithNSString_withInt_(OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus *self, NSString *__name, jint __ordinal);

@implementation OrgApacheLuceneSearchSpansFilterSpans

- (instancetype)initWithOrgApacheLuceneSearchSpansSpans:(OrgApacheLuceneSearchSpansSpans *)inArg {
  OrgApacheLuceneSearchSpansFilterSpans_initWithOrgApacheLuceneSearchSpansSpans_(self, inArg);
  return self;
}

- (OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus *)acceptWithOrgApacheLuceneSearchSpansSpans:(OrgApacheLuceneSearchSpansSpans *)candidate {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)nextDoc {
  while (true) {
    jint doc = [((OrgApacheLuceneSearchSpansSpans *) nil_chk(in_)) nextDoc];
    if (doc == OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
      return OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
    }
    else if (OrgApacheLuceneSearchSpansFilterSpans_twoPhaseCurrentDocMatches(self)) {
      return doc;
    }
  }
}

- (jint)advanceWithInt:(jint)target {
  jint doc = [((OrgApacheLuceneSearchSpansSpans *) nil_chk(in_)) advanceWithInt:target];
  while (doc != OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
    if (OrgApacheLuceneSearchSpansFilterSpans_twoPhaseCurrentDocMatches(self)) {
      break;
    }
    doc = [in_ nextDoc];
  }
  return doc;
}

- (jint)docID {
  return [((OrgApacheLuceneSearchSpansSpans *) nil_chk(in_)) docID];
}

- (jint)nextStartPosition {
  if (atFirstInCurrentDoc_) {
    atFirstInCurrentDoc_ = false;
    return startPos_;
  }
  for (; ; ) {
    startPos_ = [((OrgApacheLuceneSearchSpansSpans *) nil_chk(in_)) nextStartPosition];
    if (startPos_ == OrgApacheLuceneSearchSpansSpans_NO_MORE_POSITIONS) {
      return OrgApacheLuceneSearchSpansSpans_NO_MORE_POSITIONS;
    }
    switch ([[self acceptWithOrgApacheLuceneSearchSpansSpans:in_] ordinal]) {
      case OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_Enum_YES:
      return startPos_;
      case OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_Enum_NO:
      break;
      case OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_Enum_NO_MORE_IN_CURRENT_DOC:
      return startPos_ = OrgApacheLuceneSearchSpansSpans_NO_MORE_POSITIONS;
    }
  }
}

- (jint)startPosition {
  return atFirstInCurrentDoc_ ? -1 : startPos_;
}

- (jint)endPosition {
  return atFirstInCurrentDoc_ ? -1 : (startPos_ != OrgApacheLuceneSearchSpansSpans_NO_MORE_POSITIONS) ? [((OrgApacheLuceneSearchSpansSpans *) nil_chk(in_)) endPosition] : OrgApacheLuceneSearchSpansSpans_NO_MORE_POSITIONS;
}

- (jint)width {
  return [((OrgApacheLuceneSearchSpansSpans *) nil_chk(in_)) width];
}

- (void)collectWithOrgApacheLuceneSearchSpansSpanCollector:(id<OrgApacheLuceneSearchSpansSpanCollector>)collector {
  [((OrgApacheLuceneSearchSpansSpans *) nil_chk(in_)) collectWithOrgApacheLuceneSearchSpansSpanCollector:collector];
}

- (jlong)cost {
  return [((OrgApacheLuceneSearchSpansSpans *) nil_chk(in_)) cost];
}

- (NSString *)description {
  return JreStrcat("$$C", @"Filter(", [((OrgApacheLuceneSearchSpansSpans *) nil_chk(in_)) description], ')');
}

- (OrgApacheLuceneSearchTwoPhaseIterator *)asTwoPhaseIterator {
  OrgApacheLuceneSearchTwoPhaseIterator *inner = [((OrgApacheLuceneSearchSpansSpans *) nil_chk(in_)) asTwoPhaseIterator];
  if (inner != nil) {
    return create_OrgApacheLuceneSearchSpansFilterSpans_1_initWithOrgApacheLuceneSearchSpansFilterSpans_withOrgApacheLuceneSearchTwoPhaseIterator_withOrgApacheLuceneSearchDocIdSetIterator_(self, inner, [inner approximation]);
  }
  else {
    return create_OrgApacheLuceneSearchSpansFilterSpans_2_initWithOrgApacheLuceneSearchSpansFilterSpans_withOrgApacheLuceneSearchDocIdSetIterator_(self, in_);
  }
}

- (jboolean)twoPhaseCurrentDocMatches {
  return OrgApacheLuceneSearchSpansFilterSpans_twoPhaseCurrentDocMatches(self);
}

- (void)dealloc {
  RELEASE_(in_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchSpansFilterSpans_AcceptStatus;", 0x404, 1, 0, 2, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, 2, -1, -1, -1 },
    { NULL, "I", 0x11, 3, 4, 2, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, 2, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, 2, -1, -1, -1 },
    { NULL, "J", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchTwoPhaseIterator;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x12, -1, -1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchSpansSpans:);
  methods[1].selector = @selector(acceptWithOrgApacheLuceneSearchSpansSpans:);
  methods[2].selector = @selector(nextDoc);
  methods[3].selector = @selector(advanceWithInt:);
  methods[4].selector = @selector(docID);
  methods[5].selector = @selector(nextStartPosition);
  methods[6].selector = @selector(startPosition);
  methods[7].selector = @selector(endPosition);
  methods[8].selector = @selector(width);
  methods[9].selector = @selector(collectWithOrgApacheLuceneSearchSpansSpanCollector:);
  methods[10].selector = @selector(cost);
  methods[11].selector = @selector(description);
  methods[12].selector = @selector(asTwoPhaseIterator);
  methods[13].selector = @selector(twoPhaseCurrentDocMatches);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "in_", "LOrgApacheLuceneSearchSpansSpans;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "atFirstInCurrentDoc_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "startPos_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchSpansSpans;", "accept", "LJavaIoIOException;", "advance", "I", "collect", "LOrgApacheLuceneSearchSpansSpanCollector;", "toString", "LOrgApacheLuceneSearchSpansFilterSpans_AcceptStatus;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSpansFilterSpans = { "FilterSpans", "org.apache.lucene.search.spans", ptrTable, methods, fields, 7, 0x401, 14, 3, -1, 8, -1, -1, -1 };
  return &_OrgApacheLuceneSearchSpansFilterSpans;
}

@end

void OrgApacheLuceneSearchSpansFilterSpans_initWithOrgApacheLuceneSearchSpansSpans_(OrgApacheLuceneSearchSpansFilterSpans *self, OrgApacheLuceneSearchSpansSpans *inArg) {
  OrgApacheLuceneSearchSpansSpans_init(self);
  self->atFirstInCurrentDoc_ = false;
  self->startPos_ = -1;
  JreStrongAssign(&self->in_, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_(inArg));
}

jboolean OrgApacheLuceneSearchSpansFilterSpans_twoPhaseCurrentDocMatches(OrgApacheLuceneSearchSpansFilterSpans *self) {
  self->atFirstInCurrentDoc_ = false;
  self->startPos_ = [((OrgApacheLuceneSearchSpansSpans *) nil_chk(self->in_)) nextStartPosition];
  JreAssert(self->startPos_ != OrgApacheLuceneSearchSpansSpans_NO_MORE_POSITIONS, @"org/apache/lucene/search/spans/FilterSpans.java:166 condition failed: assert startPos != NO_MORE_POSITIONS;");
  for (; ; ) {
    switch ([[self acceptWithOrgApacheLuceneSearchSpansSpans:self->in_] ordinal]) {
      case OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_Enum_YES:
      self->atFirstInCurrentDoc_ = true;
      return true;
      case OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_Enum_NO:
      self->startPos_ = [self->in_ nextStartPosition];
      if (self->startPos_ != OrgApacheLuceneSearchSpansSpans_NO_MORE_POSITIONS) {
        break;
      }
      case OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_Enum_NO_MORE_IN_CURRENT_DOC:
      self->startPos_ = -1;
      return false;
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSpansFilterSpans)

@implementation OrgApacheLuceneSearchSpansFilterSpans_1

- (instancetype)initWithOrgApacheLuceneSearchSpansFilterSpans:(OrgApacheLuceneSearchSpansFilterSpans *)outer$
                    withOrgApacheLuceneSearchTwoPhaseIterator:(OrgApacheLuceneSearchTwoPhaseIterator *)capture$0
                    withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)approximation {
  OrgApacheLuceneSearchSpansFilterSpans_1_initWithOrgApacheLuceneSearchSpansFilterSpans_withOrgApacheLuceneSearchTwoPhaseIterator_withOrgApacheLuceneSearchDocIdSetIterator_(self, outer$, capture$0, approximation);
  return self;
}

- (jboolean)matches {
  return [((OrgApacheLuceneSearchTwoPhaseIterator *) nil_chk(val$inner_)) matches] && OrgApacheLuceneSearchSpansFilterSpans_twoPhaseCurrentDocMatches(this$0_);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$inner_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchSpansFilterSpans:withOrgApacheLuceneSearchTwoPhaseIterator:withOrgApacheLuceneSearchDocIdSetIterator:);
  methods[1].selector = @selector(matches);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneSearchSpansFilterSpans;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$inner_", "LOrgApacheLuceneSearchTwoPhaseIterator;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchSpansFilterSpans;LOrgApacheLuceneSearchTwoPhaseIterator;LOrgApacheLuceneSearchDocIdSetIterator;", "LJavaIoIOException;", "LOrgApacheLuceneSearchSpansFilterSpans;", "asTwoPhaseIterator" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSpansFilterSpans_1 = { "", "org.apache.lucene.search.spans", ptrTable, methods, fields, 7, 0x8010, 2, 2, 2, -1, 3, -1, -1 };
  return &_OrgApacheLuceneSearchSpansFilterSpans_1;
}

@end

void OrgApacheLuceneSearchSpansFilterSpans_1_initWithOrgApacheLuceneSearchSpansFilterSpans_withOrgApacheLuceneSearchTwoPhaseIterator_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchSpansFilterSpans_1 *self, OrgApacheLuceneSearchSpansFilterSpans *outer$, OrgApacheLuceneSearchTwoPhaseIterator *capture$0, OrgApacheLuceneSearchDocIdSetIterator *approximation) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$inner_, capture$0);
  OrgApacheLuceneSearchTwoPhaseIterator_initWithOrgApacheLuceneSearchDocIdSetIterator_(self, approximation);
}

OrgApacheLuceneSearchSpansFilterSpans_1 *new_OrgApacheLuceneSearchSpansFilterSpans_1_initWithOrgApacheLuceneSearchSpansFilterSpans_withOrgApacheLuceneSearchTwoPhaseIterator_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchSpansFilterSpans *outer$, OrgApacheLuceneSearchTwoPhaseIterator *capture$0, OrgApacheLuceneSearchDocIdSetIterator *approximation) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSpansFilterSpans_1, initWithOrgApacheLuceneSearchSpansFilterSpans_withOrgApacheLuceneSearchTwoPhaseIterator_withOrgApacheLuceneSearchDocIdSetIterator_, outer$, capture$0, approximation)
}

OrgApacheLuceneSearchSpansFilterSpans_1 *create_OrgApacheLuceneSearchSpansFilterSpans_1_initWithOrgApacheLuceneSearchSpansFilterSpans_withOrgApacheLuceneSearchTwoPhaseIterator_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchSpansFilterSpans *outer$, OrgApacheLuceneSearchTwoPhaseIterator *capture$0, OrgApacheLuceneSearchDocIdSetIterator *approximation) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSpansFilterSpans_1, initWithOrgApacheLuceneSearchSpansFilterSpans_withOrgApacheLuceneSearchTwoPhaseIterator_withOrgApacheLuceneSearchDocIdSetIterator_, outer$, capture$0, approximation)
}

@implementation OrgApacheLuceneSearchSpansFilterSpans_2

- (instancetype)initWithOrgApacheLuceneSearchSpansFilterSpans:(OrgApacheLuceneSearchSpansFilterSpans *)outer$
                    withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)approximation {
  OrgApacheLuceneSearchSpansFilterSpans_2_initWithOrgApacheLuceneSearchSpansFilterSpans_withOrgApacheLuceneSearchDocIdSetIterator_(self, outer$, approximation);
  return self;
}

- (jboolean)matches {
  return OrgApacheLuceneSearchSpansFilterSpans_twoPhaseCurrentDocMatches(this$0_);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchSpansFilterSpans:withOrgApacheLuceneSearchDocIdSetIterator:);
  methods[1].selector = @selector(matches);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneSearchSpansFilterSpans;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchSpansFilterSpans;LOrgApacheLuceneSearchDocIdSetIterator;", "LJavaIoIOException;", "LOrgApacheLuceneSearchSpansFilterSpans;", "asTwoPhaseIterator" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSpansFilterSpans_2 = { "", "org.apache.lucene.search.spans", ptrTable, methods, fields, 7, 0x8010, 2, 1, 2, -1, 3, -1, -1 };
  return &_OrgApacheLuceneSearchSpansFilterSpans_2;
}

@end

void OrgApacheLuceneSearchSpansFilterSpans_2_initWithOrgApacheLuceneSearchSpansFilterSpans_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchSpansFilterSpans_2 *self, OrgApacheLuceneSearchSpansFilterSpans *outer$, OrgApacheLuceneSearchDocIdSetIterator *approximation) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneSearchTwoPhaseIterator_initWithOrgApacheLuceneSearchDocIdSetIterator_(self, approximation);
}

OrgApacheLuceneSearchSpansFilterSpans_2 *new_OrgApacheLuceneSearchSpansFilterSpans_2_initWithOrgApacheLuceneSearchSpansFilterSpans_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchSpansFilterSpans *outer$, OrgApacheLuceneSearchDocIdSetIterator *approximation) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSpansFilterSpans_2, initWithOrgApacheLuceneSearchSpansFilterSpans_withOrgApacheLuceneSearchDocIdSetIterator_, outer$, approximation)
}

OrgApacheLuceneSearchSpansFilterSpans_2 *create_OrgApacheLuceneSearchSpansFilterSpans_2_initWithOrgApacheLuceneSearchSpansFilterSpans_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchSpansFilterSpans *outer$, OrgApacheLuceneSearchDocIdSetIterator *approximation) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSpansFilterSpans_2, initWithOrgApacheLuceneSearchSpansFilterSpans_withOrgApacheLuceneSearchDocIdSetIterator_, outer$, approximation)
}

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus)

OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus *OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_values_[3];

@implementation OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus

+ (OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus *)YES_ {
  return JreEnum(OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus, YES);
}

+ (OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus *)NO_ {
  return JreEnum(OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus, NO);
}

+ (OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus *)NO_MORE_IN_CURRENT_DOC {
  return JreEnum(OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus, NO_MORE_IN_CURRENT_DOC);
}

+ (IOSObjectArray *)values {
  return OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_values();
}

+ (OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus *)valueOfWithNSString:(NSString *)name {
  return OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_valueOfWithNSString_(name);
}

- (OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_Enum)toNSEnum {
  return (OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgApacheLuceneSearchSpansFilterSpans_AcceptStatus;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchSpansFilterSpans_AcceptStatus;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "YES", "LOrgApacheLuceneSearchSpansFilterSpans_AcceptStatus;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "NO", "LOrgApacheLuceneSearchSpansFilterSpans_AcceptStatus;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "NO_MORE_IN_CURRENT_DOC", "LOrgApacheLuceneSearchSpansFilterSpans_AcceptStatus;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus, YES), &JreEnum(OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus, NO), &JreEnum(OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus, NO_MORE_IN_CURRENT_DOC), "LOrgApacheLuceneSearchSpansFilterSpans;", "Ljava/lang/Enum<Lorg/apache/lucene/search/spans/FilterSpans$AcceptStatus;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus = { "AcceptStatus", "org.apache.lucene.search.spans", ptrTable, methods, fields, 7, 0x4019, 2, 3, 5, -1, -1, 6, -1 };
  return &_OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 3 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 3; i++) {
      ((void)(OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_initWithNSString_withInt_(e, JreEnumConstantName(OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus)
  }
}

@end

void OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_initWithNSString_withInt_(OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_values() {
  OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_initialize();
  return [IOSObjectArray arrayWithObjects:OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_values_ count:3 type:OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_class_()];
}

OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus *OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_valueOfWithNSString_(NSString *name) {
  OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_initialize();
  for (int i = 0; i < 3; i++) {
    OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus *e = OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus *OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_fromOrdinal(NSUInteger ordinal) {
  OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_initialize();
  if (ordinal >= 3) {
    return nil;
  }
  return OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus)
