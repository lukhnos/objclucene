//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/spans/SpanPositionQueue.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/search/spans/SpanPositionQueue.h"
#include "org/apache/lucene/search/spans/Spans.h"
#include "org/apache/lucene/util/PriorityQueue.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/spans/SpanPositionQueue must not be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation OrgApacheLuceneSearchSpansSpanPositionQueue

- (instancetype)initPackagePrivateWithInt:(jint)maxSize {
  OrgApacheLuceneSearchSpansSpanPositionQueue_initPackagePrivateWithInt_(self, maxSize);
  return self;
}

- (jboolean)lessThanWithId:(OrgApacheLuceneSearchSpansSpans *)s1
                    withId:(OrgApacheLuceneSearchSpansSpans *)s2 {
  jint start1 = [((OrgApacheLuceneSearchSpansSpans *) nil_chk(s1)) startPosition];
  jint start2 = [((OrgApacheLuceneSearchSpansSpans *) nil_chk(s2)) startPosition];
  return (start1 < start2) ? true : (start1 == start2) ? [s1 endPosition] < [s2 endPosition] : false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithInt:);
  methods[1].selector = @selector(lessThanWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "I", "lessThan", "LOrgApacheLuceneSearchSpansSpans;LOrgApacheLuceneSearchSpansSpans;", "Lorg/apache/lucene/util/PriorityQueue<Lorg/apache/lucene/search/spans/Spans;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSpansSpanPositionQueue = { "SpanPositionQueue", "org.apache.lucene.search.spans", ptrTable, methods, NULL, 7, 0x0, 2, 0, -1, -1, -1, 3, -1 };
  return &_OrgApacheLuceneSearchSpansSpanPositionQueue;
}

@end

void OrgApacheLuceneSearchSpansSpanPositionQueue_initPackagePrivateWithInt_(OrgApacheLuceneSearchSpansSpanPositionQueue *self, jint maxSize) {
  OrgApacheLuceneUtilPriorityQueue_initWithInt_withBoolean_(self, maxSize, false);
}

OrgApacheLuceneSearchSpansSpanPositionQueue *new_OrgApacheLuceneSearchSpansSpanPositionQueue_initPackagePrivateWithInt_(jint maxSize) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSpansSpanPositionQueue, initPackagePrivateWithInt_, maxSize)
}

OrgApacheLuceneSearchSpansSpanPositionQueue *create_OrgApacheLuceneSearchSpansSpanPositionQueue_initPackagePrivateWithInt_(jint maxSize) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSpansSpanPositionQueue, initPackagePrivateWithInt_, maxSize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSpansSpanPositionQueue)
