//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./highlighter/src/java/org/apache/lucene/search/highlight/GradientFormatter.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Character.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/StringBuilder.h"
#include "org/apache/lucene/search/highlight/GradientFormatter.h"
#include "org/apache/lucene/search/highlight/TokenGroup.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/highlight/GradientFormatter must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchHighlightGradientFormatter () {
 @public
  jfloat maxScore_;
}

- (jint)getColorValWithInt:(jint)colorMin
                   withInt:(jint)colorMax
                 withFloat:(jfloat)score;

+ (NSString *)intToHexWithInt:(jint)i;

@end

inline IOSCharArray *OrgApacheLuceneSearchHighlightGradientFormatter_get_hexDigits(void);
inline IOSCharArray *OrgApacheLuceneSearchHighlightGradientFormatter_set_hexDigits(IOSCharArray *value);
static IOSCharArray *OrgApacheLuceneSearchHighlightGradientFormatter_hexDigits;
J2OBJC_STATIC_FIELD_OBJ(OrgApacheLuceneSearchHighlightGradientFormatter, hexDigits, IOSCharArray *)

__attribute__((unused)) static jint OrgApacheLuceneSearchHighlightGradientFormatter_getColorValWithInt_withInt_withFloat_(OrgApacheLuceneSearchHighlightGradientFormatter *self, jint colorMin, jint colorMax, jfloat score);

__attribute__((unused)) static NSString *OrgApacheLuceneSearchHighlightGradientFormatter_intToHexWithInt_(jint i);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchHighlightGradientFormatter)

@implementation OrgApacheLuceneSearchHighlightGradientFormatter

- (instancetype)initWithFloat:(jfloat)maxScore
                 withNSString:(NSString *)minForegroundColor
                 withNSString:(NSString *)maxForegroundColor
                 withNSString:(NSString *)minBackgroundColor
                 withNSString:(NSString *)maxBackgroundColor {
  OrgApacheLuceneSearchHighlightGradientFormatter_initWithFloat_withNSString_withNSString_withNSString_withNSString_(self, maxScore, minForegroundColor, maxForegroundColor, minBackgroundColor, maxBackgroundColor);
  return self;
}

- (NSString *)highlightTermWithNSString:(NSString *)originalText
withOrgApacheLuceneSearchHighlightTokenGroup:(OrgApacheLuceneSearchHighlightTokenGroup *)tokenGroup {
  if ([((OrgApacheLuceneSearchHighlightTokenGroup *) nil_chk(tokenGroup)) getTotalScore] == 0) return originalText;
  jfloat score = [tokenGroup getTotalScore];
  if (score == 0) {
    return originalText;
  }
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [sb appendWithNSString:@"<font "];
  if (highlightForeground_) {
    [sb appendWithNSString:@"color=\""];
    [sb appendWithNSString:[self getForegroundColorStringWithFloat:score]];
    [sb appendWithNSString:@"\" "];
  }
  if (highlightBackground_) {
    [sb appendWithNSString:@"bgcolor=\""];
    [sb appendWithNSString:[self getBackgroundColorStringWithFloat:score]];
    [sb appendWithNSString:@"\" "];
  }
  [sb appendWithNSString:@">"];
  [sb appendWithNSString:originalText];
  [sb appendWithNSString:@"</font>"];
  return [sb description];
}

- (NSString *)getForegroundColorStringWithFloat:(jfloat)score {
  jint rVal = OrgApacheLuceneSearchHighlightGradientFormatter_getColorValWithInt_withInt_withFloat_(self, fgRMin_, fgRMax_, score);
  jint gVal = OrgApacheLuceneSearchHighlightGradientFormatter_getColorValWithInt_withInt_withFloat_(self, fgGMin_, fgGMax_, score);
  jint bVal = OrgApacheLuceneSearchHighlightGradientFormatter_getColorValWithInt_withInt_withFloat_(self, fgBMin_, fgBMax_, score);
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [sb appendWithNSString:@"#"];
  [sb appendWithNSString:OrgApacheLuceneSearchHighlightGradientFormatter_intToHexWithInt_(rVal)];
  [sb appendWithNSString:OrgApacheLuceneSearchHighlightGradientFormatter_intToHexWithInt_(gVal)];
  [sb appendWithNSString:OrgApacheLuceneSearchHighlightGradientFormatter_intToHexWithInt_(bVal)];
  return [sb description];
}

- (NSString *)getBackgroundColorStringWithFloat:(jfloat)score {
  jint rVal = OrgApacheLuceneSearchHighlightGradientFormatter_getColorValWithInt_withInt_withFloat_(self, bgRMin_, bgRMax_, score);
  jint gVal = OrgApacheLuceneSearchHighlightGradientFormatter_getColorValWithInt_withInt_withFloat_(self, bgGMin_, bgGMax_, score);
  jint bVal = OrgApacheLuceneSearchHighlightGradientFormatter_getColorValWithInt_withInt_withFloat_(self, bgBMin_, bgBMax_, score);
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [sb appendWithNSString:@"#"];
  [sb appendWithNSString:OrgApacheLuceneSearchHighlightGradientFormatter_intToHexWithInt_(rVal)];
  [sb appendWithNSString:OrgApacheLuceneSearchHighlightGradientFormatter_intToHexWithInt_(gVal)];
  [sb appendWithNSString:OrgApacheLuceneSearchHighlightGradientFormatter_intToHexWithInt_(bVal)];
  return [sb description];
}

- (jint)getColorValWithInt:(jint)colorMin
                   withInt:(jint)colorMax
                 withFloat:(jfloat)score {
  return OrgApacheLuceneSearchHighlightGradientFormatter_getColorValWithInt_withInt_withFloat_(self, colorMin, colorMax, score);
}

+ (NSString *)intToHexWithInt:(jint)i {
  return OrgApacheLuceneSearchHighlightGradientFormatter_intToHexWithInt_(i);
}

+ (jint)hexToIntWithNSString:(NSString *)hex {
  return OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_(hex);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, 5, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 6, 7, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 8, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x19, 10, 11, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithFloat:withNSString:withNSString:withNSString:withNSString:);
  methods[1].selector = @selector(highlightTermWithNSString:withOrgApacheLuceneSearchHighlightTokenGroup:);
  methods[2].selector = @selector(getForegroundColorStringWithFloat:);
  methods[3].selector = @selector(getBackgroundColorStringWithFloat:);
  methods[4].selector = @selector(getColorValWithInt:withInt:withFloat:);
  methods[5].selector = @selector(intToHexWithInt:);
  methods[6].selector = @selector(hexToIntWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "maxScore_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fgRMin_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "fgGMin_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "fgBMin_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "fgRMax_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "fgGMax_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "fgBMax_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "highlightForeground_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "bgRMin_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "bgGMin_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "bgBMin_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "bgRMax_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "bgGMax_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "bgBMax_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "highlightBackground_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "hexDigits", "[C", .constantValue.asLong = 0, 0xa, -1, 12, -1, -1 },
  };
  static const void *ptrTable[] = { "FLNSString;LNSString;LNSString;LNSString;", "highlightTerm", "LNSString;LOrgApacheLuceneSearchHighlightTokenGroup;", "getForegroundColorString", "F", "getBackgroundColorString", "getColorVal", "IIF", "intToHex", "I", "hexToInt", "LNSString;", &OrgApacheLuceneSearchHighlightGradientFormatter_hexDigits };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchHighlightGradientFormatter = { "GradientFormatter", "org.apache.lucene.search.highlight", ptrTable, methods, fields, 7, 0x1, 7, 16, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchHighlightGradientFormatter;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchHighlightGradientFormatter class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneSearchHighlightGradientFormatter_hexDigits, [IOSCharArray newArrayWithChars:(jchar[]){ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F' } count:16]);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchHighlightGradientFormatter)
  }
}

@end

void OrgApacheLuceneSearchHighlightGradientFormatter_initWithFloat_withNSString_withNSString_withNSString_withNSString_(OrgApacheLuceneSearchHighlightGradientFormatter *self, jfloat maxScore, NSString *minForegroundColor, NSString *maxForegroundColor, NSString *minBackgroundColor, NSString *maxBackgroundColor) {
  NSObject_init(self);
  self->highlightForeground_ = ((minForegroundColor != nil) && (maxForegroundColor != nil));
  if (self->highlightForeground_) {
    if ([((NSString *) nil_chk(minForegroundColor)) java_length] != 7) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"minForegroundColor is not 7 bytes long eg a hex RGB value such as #FFFFFF");
    }
    if ([((NSString *) nil_chk(maxForegroundColor)) java_length] != 7) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"minForegroundColor is not 7 bytes long eg a hex RGB value such as #FFFFFF");
    }
    self->fgRMin_ = OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_([minForegroundColor java_substring:1 endIndex:3]);
    self->fgGMin_ = OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_([minForegroundColor java_substring:3 endIndex:5]);
    self->fgBMin_ = OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_([minForegroundColor java_substring:5 endIndex:7]);
    self->fgRMax_ = OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_([maxForegroundColor java_substring:1 endIndex:3]);
    self->fgGMax_ = OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_([maxForegroundColor java_substring:3 endIndex:5]);
    self->fgBMax_ = OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_([maxForegroundColor java_substring:5 endIndex:7]);
  }
  self->highlightBackground_ = ((minBackgroundColor != nil) && (maxBackgroundColor != nil));
  if (self->highlightBackground_) {
    if ([((NSString *) nil_chk(minBackgroundColor)) java_length] != 7) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"minBackgroundColor is not 7 bytes long eg a hex RGB value such as #FFFFFF");
    }
    if ([((NSString *) nil_chk(maxBackgroundColor)) java_length] != 7) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"minBackgroundColor is not 7 bytes long eg a hex RGB value such as #FFFFFF");
    }
    self->bgRMin_ = OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_([minBackgroundColor java_substring:1 endIndex:3]);
    self->bgGMin_ = OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_([minBackgroundColor java_substring:3 endIndex:5]);
    self->bgBMin_ = OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_([minBackgroundColor java_substring:5 endIndex:7]);
    self->bgRMax_ = OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_([maxBackgroundColor java_substring:1 endIndex:3]);
    self->bgGMax_ = OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_([maxBackgroundColor java_substring:3 endIndex:5]);
    self->bgBMax_ = OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_([maxBackgroundColor java_substring:5 endIndex:7]);
  }
  self->maxScore_ = maxScore;
}

OrgApacheLuceneSearchHighlightGradientFormatter *new_OrgApacheLuceneSearchHighlightGradientFormatter_initWithFloat_withNSString_withNSString_withNSString_withNSString_(jfloat maxScore, NSString *minForegroundColor, NSString *maxForegroundColor, NSString *minBackgroundColor, NSString *maxBackgroundColor) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchHighlightGradientFormatter, initWithFloat_withNSString_withNSString_withNSString_withNSString_, maxScore, minForegroundColor, maxForegroundColor, minBackgroundColor, maxBackgroundColor)
}

OrgApacheLuceneSearchHighlightGradientFormatter *create_OrgApacheLuceneSearchHighlightGradientFormatter_initWithFloat_withNSString_withNSString_withNSString_withNSString_(jfloat maxScore, NSString *minForegroundColor, NSString *maxForegroundColor, NSString *minBackgroundColor, NSString *maxBackgroundColor) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchHighlightGradientFormatter, initWithFloat_withNSString_withNSString_withNSString_withNSString_, maxScore, minForegroundColor, maxForegroundColor, minBackgroundColor, maxBackgroundColor)
}

jint OrgApacheLuceneSearchHighlightGradientFormatter_getColorValWithInt_withInt_withFloat_(OrgApacheLuceneSearchHighlightGradientFormatter *self, jint colorMin, jint colorMax, jfloat score) {
  if (colorMin == colorMax) {
    return colorMin;
  }
  jfloat scale_ = JavaLangMath_absWithInt_(colorMin - colorMax);
  jfloat relScorePercent = JavaLangMath_minWithFloat_withFloat_(self->maxScore_, score) / self->maxScore_;
  jfloat colScore = scale_ * relScorePercent;
  return JavaLangMath_minWithInt_withInt_(colorMin, colorMax) + JreFpToInt(colScore);
}

NSString *OrgApacheLuceneSearchHighlightGradientFormatter_intToHexWithInt_(jint i) {
  OrgApacheLuceneSearchHighlightGradientFormatter_initialize();
  return JreStrcat("CC", IOSCharArray_Get(nil_chk(OrgApacheLuceneSearchHighlightGradientFormatter_hexDigits), JreRShift32((i & (jint) 0xF0), 4)), IOSCharArray_Get(OrgApacheLuceneSearchHighlightGradientFormatter_hexDigits, i & (jint) 0x0F));
}

jint OrgApacheLuceneSearchHighlightGradientFormatter_hexToIntWithNSString_(NSString *hex) {
  OrgApacheLuceneSearchHighlightGradientFormatter_initialize();
  jint len = [((NSString *) nil_chk(hex)) java_length];
  if (len > 16) @throw create_JavaLangNumberFormatException_init();
  jint l = 0;
  for (jint i = 0; i < len; i++) {
    JreLShiftAssignInt(&l, 4);
    jint c = JavaLangCharacter_digitWithChar_withInt_([hex charAtWithInt:i], 16);
    if (c < 0) @throw create_JavaLangNumberFormatException_init();
    l |= c;
  }
  return l;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchHighlightGradientFormatter)
