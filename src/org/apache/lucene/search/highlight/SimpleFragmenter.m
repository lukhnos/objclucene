//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./highlighter/src/java/org/apache/lucene/search/highlight/SimpleFragmenter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/tokenattributes/OffsetAttribute.h"
#include "org/apache/lucene/search/highlight/SimpleFragmenter.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/highlight/SimpleFragmenter must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchHighlightSimpleFragmenter () {
 @public
  jint currentNumFrags_;
  jint fragmentSize_;
  id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute> offsetAtt_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchHighlightSimpleFragmenter, offsetAtt_, id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>)

inline jint OrgApacheLuceneSearchHighlightSimpleFragmenter_get_DEFAULT_FRAGMENT_SIZE(void);
#define OrgApacheLuceneSearchHighlightSimpleFragmenter_DEFAULT_FRAGMENT_SIZE 100
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneSearchHighlightSimpleFragmenter, DEFAULT_FRAGMENT_SIZE, jint)

@implementation OrgApacheLuceneSearchHighlightSimpleFragmenter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchHighlightSimpleFragmenter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithInt:(jint)fragmentSize {
  OrgApacheLuceneSearchHighlightSimpleFragmenter_initWithInt_(self, fragmentSize);
  return self;
}

- (void)startWithNSString:(NSString *)originalText
withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)stream {
  JreStrongAssign(&offsetAtt_, [((OrgApacheLuceneAnalysisTokenStream *) nil_chk(stream)) addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_()]);
  currentNumFrags_ = 1;
}

- (jboolean)isNewFragment {
  jboolean isNewFrag = [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(offsetAtt_)) endOffset] >= (fragmentSize_ * currentNumFrags_);
  if (isNewFrag) {
    currentNumFrags_++;
  }
  return isNewFrag;
}

- (jint)getFragmentSize {
  return fragmentSize_;
}

- (void)setFragmentSizeWithInt:(jint)size {
  fragmentSize_ = size;
}

- (void)dealloc {
  RELEASE_(offsetAtt_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithInt:);
  methods[2].selector = @selector(startWithNSString:withOrgApacheLuceneAnalysisTokenStream:);
  methods[3].selector = @selector(isNewFragment);
  methods[4].selector = @selector(getFragmentSize);
  methods[5].selector = @selector(setFragmentSizeWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_FRAGMENT_SIZE", "I", .constantValue.asInt = OrgApacheLuceneSearchHighlightSimpleFragmenter_DEFAULT_FRAGMENT_SIZE, 0x1a, -1, -1, -1, -1 },
    { "currentNumFrags_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fragmentSize_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "offsetAtt_", "LOrgApacheLuceneAnalysisTokenattributesOffsetAttribute;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "start", "LNSString;LOrgApacheLuceneAnalysisTokenStream;", "setFragmentSize" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchHighlightSimpleFragmenter = { "SimpleFragmenter", "org.apache.lucene.search.highlight", ptrTable, methods, fields, 7, 0x1, 6, 4, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchHighlightSimpleFragmenter;
}

@end

void OrgApacheLuceneSearchHighlightSimpleFragmenter_init(OrgApacheLuceneSearchHighlightSimpleFragmenter *self) {
  OrgApacheLuceneSearchHighlightSimpleFragmenter_initWithInt_(self, OrgApacheLuceneSearchHighlightSimpleFragmenter_DEFAULT_FRAGMENT_SIZE);
}

OrgApacheLuceneSearchHighlightSimpleFragmenter *new_OrgApacheLuceneSearchHighlightSimpleFragmenter_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchHighlightSimpleFragmenter, init)
}

OrgApacheLuceneSearchHighlightSimpleFragmenter *create_OrgApacheLuceneSearchHighlightSimpleFragmenter_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchHighlightSimpleFragmenter, init)
}

void OrgApacheLuceneSearchHighlightSimpleFragmenter_initWithInt_(OrgApacheLuceneSearchHighlightSimpleFragmenter *self, jint fragmentSize) {
  NSObject_init(self);
  self->fragmentSize_ = fragmentSize;
}

OrgApacheLuceneSearchHighlightSimpleFragmenter *new_OrgApacheLuceneSearchHighlightSimpleFragmenter_initWithInt_(jint fragmentSize) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchHighlightSimpleFragmenter, initWithInt_, fragmentSize)
}

OrgApacheLuceneSearchHighlightSimpleFragmenter *create_OrgApacheLuceneSearchHighlightSimpleFragmenter_initWithInt_(jint fragmentSize) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchHighlightSimpleFragmenter, initWithInt_, fragmentSize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchHighlightSimpleFragmenter)
