//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./highlighter/src/java/org/apache/lucene/search/highlight/QueryTermScorer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/highlight/QueryTermExtractor.h"
#include "org/apache/lucene/search/highlight/QueryTermScorer.h"
#include "org/apache/lucene/search/highlight/TextFragment.h"
#include "org/apache/lucene/search/highlight/WeightedTerm.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/highlight/QueryTermScorer must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchHighlightQueryTermScorer () {
 @public
  JavaUtilHashMap *termsToFind_;
  id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAtt_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchHighlightQueryTermScorer, termsToFind_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchHighlightQueryTermScorer, termAtt_, id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)

@implementation OrgApacheLuceneSearchHighlightQueryTermScorer

- (instancetype)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query {
  OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchQuery_(self, query);
  return self;
}

- (instancetype)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
                                      withNSString:(NSString *)fieldName {
  OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchQuery_withNSString_(self, query, fieldName);
  return self;
}

- (instancetype)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
               withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                      withNSString:(NSString *)fieldName {
  OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneIndexIndexReader_withNSString_(self, query, reader, fieldName);
  return self;
}

- (instancetype)initWithOrgApacheLuceneSearchHighlightWeightedTermArray:(IOSObjectArray *)weightedTerms {
  OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchHighlightWeightedTermArray_(self, weightedTerms);
  return self;
}

- (OrgApacheLuceneAnalysisTokenStream *)init__WithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)tokenStream {
  JreStrongAssign(&termAtt_, [((OrgApacheLuceneAnalysisTokenStream *) nil_chk(tokenStream)) addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
  return nil;
}

- (void)startFragmentWithOrgApacheLuceneSearchHighlightTextFragment:(OrgApacheLuceneSearchHighlightTextFragment *)newFragment {
  JreStrongAssignAndConsume(&uniqueTermsInFragment_, new_JavaUtilHashSet_init());
  JreStrongAssign(&currentTextFragment_, newFragment);
  totalScore_ = 0;
}

- (jfloat)getTokenScore {
  NSString *termText = [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAtt_)) description];
  OrgApacheLuceneSearchHighlightWeightedTerm *queryTerm = JreRetainedLocalValue([((JavaUtilHashMap *) nil_chk(termsToFind_)) getWithId:termText]);
  if (queryTerm == nil) {
    return 0;
  }
  if (![((JavaUtilHashSet *) nil_chk(uniqueTermsInFragment_)) containsWithId:termText]) {
    JrePlusAssignFloatF(&totalScore_, [queryTerm getWeight]);
    [((JavaUtilHashSet *) nil_chk(uniqueTermsInFragment_)) addWithId:termText];
  }
  return [queryTerm getWeight];
}

- (jfloat)getFragmentScore {
  return totalScore_;
}

- (void)allFragmentsProcessed {
}

- (jfloat)getMaxTermWeight {
  return maxTermWeight_;
}

- (void)dealloc {
  RELEASE_(currentTextFragment_);
  RELEASE_(uniqueTermsInFragment_);
  RELEASE_(termsToFind_);
  RELEASE_(termAtt_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisTokenStream;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchQuery:);
  methods[1].selector = @selector(initWithOrgApacheLuceneSearchQuery:withNSString:);
  methods[2].selector = @selector(initWithOrgApacheLuceneSearchQuery:withOrgApacheLuceneIndexIndexReader:withNSString:);
  methods[3].selector = @selector(initWithOrgApacheLuceneSearchHighlightWeightedTermArray:);
  methods[4].selector = @selector(init__WithOrgApacheLuceneAnalysisTokenStream:);
  methods[5].selector = @selector(startFragmentWithOrgApacheLuceneSearchHighlightTextFragment:);
  methods[6].selector = @selector(getTokenScore);
  methods[7].selector = @selector(getFragmentScore);
  methods[8].selector = @selector(allFragmentsProcessed);
  methods[9].selector = @selector(getMaxTermWeight);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "currentTextFragment_", "LOrgApacheLuceneSearchHighlightTextFragment;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "uniqueTermsInFragment_", "LJavaUtilHashSet;", .constantValue.asLong = 0, 0x0, -1, -1, 8, -1 },
    { "totalScore_", "F", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "maxTermWeight_", "F", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "termsToFind_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x2, -1, -1, 9, -1 },
    { "termAtt_", "LOrgApacheLuceneAnalysisTokenattributesCharTermAttribute;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchQuery;", "LOrgApacheLuceneSearchQuery;LNSString;", "LOrgApacheLuceneSearchQuery;LOrgApacheLuceneIndexIndexReader;LNSString;", "[LOrgApacheLuceneSearchHighlightWeightedTerm;", "init", "LOrgApacheLuceneAnalysisTokenStream;", "startFragment", "LOrgApacheLuceneSearchHighlightTextFragment;", "Ljava/util/HashSet<Ljava/lang/String;>;", "Ljava/util/HashMap<Ljava/lang/String;Lorg/apache/lucene/search/highlight/WeightedTerm;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchHighlightQueryTermScorer = { "QueryTermScorer", "org.apache.lucene.search.highlight", ptrTable, methods, fields, 7, 0x1, 10, 6, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchHighlightQueryTermScorer;
}

@end

void OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchHighlightQueryTermScorer *self, OrgApacheLuceneSearchQuery *query) {
  OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchHighlightWeightedTermArray_(self, OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsWithOrgApacheLuceneSearchQuery_(query));
}

OrgApacheLuceneSearchHighlightQueryTermScorer *new_OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchQuery *query) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchHighlightQueryTermScorer, initWithOrgApacheLuceneSearchQuery_, query)
}

OrgApacheLuceneSearchHighlightQueryTermScorer *create_OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchQuery *query) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchHighlightQueryTermScorer, initWithOrgApacheLuceneSearchQuery_, query)
}

void OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchQuery_withNSString_(OrgApacheLuceneSearchHighlightQueryTermScorer *self, OrgApacheLuceneSearchQuery *query, NSString *fieldName) {
  OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchHighlightWeightedTermArray_(self, OrgApacheLuceneSearchHighlightQueryTermExtractor_getTermsWithOrgApacheLuceneSearchQuery_withBoolean_withNSString_(query, false, fieldName));
}

OrgApacheLuceneSearchHighlightQueryTermScorer *new_OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchQuery_withNSString_(OrgApacheLuceneSearchQuery *query, NSString *fieldName) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchHighlightQueryTermScorer, initWithOrgApacheLuceneSearchQuery_withNSString_, query, fieldName)
}

OrgApacheLuceneSearchHighlightQueryTermScorer *create_OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchQuery_withNSString_(OrgApacheLuceneSearchQuery *query, NSString *fieldName) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchHighlightQueryTermScorer, initWithOrgApacheLuceneSearchQuery_withNSString_, query, fieldName)
}

void OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneIndexIndexReader_withNSString_(OrgApacheLuceneSearchHighlightQueryTermScorer *self, OrgApacheLuceneSearchQuery *query, OrgApacheLuceneIndexIndexReader *reader, NSString *fieldName) {
  OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchHighlightWeightedTermArray_(self, OrgApacheLuceneSearchHighlightQueryTermExtractor_getIdfWeightedTermsWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneIndexIndexReader_withNSString_(query, reader, fieldName));
}

OrgApacheLuceneSearchHighlightQueryTermScorer *new_OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneIndexIndexReader_withNSString_(OrgApacheLuceneSearchQuery *query, OrgApacheLuceneIndexIndexReader *reader, NSString *fieldName) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchHighlightQueryTermScorer, initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneIndexIndexReader_withNSString_, query, reader, fieldName)
}

OrgApacheLuceneSearchHighlightQueryTermScorer *create_OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneIndexIndexReader_withNSString_(OrgApacheLuceneSearchQuery *query, OrgApacheLuceneIndexIndexReader *reader, NSString *fieldName) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchHighlightQueryTermScorer, initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneIndexIndexReader_withNSString_, query, reader, fieldName)
}

void OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchHighlightWeightedTermArray_(OrgApacheLuceneSearchHighlightQueryTermScorer *self, IOSObjectArray *weightedTerms) {
  NSObject_init(self);
  JreStrongAssign(&self->currentTextFragment_, nil);
  self->totalScore_ = 0;
  self->maxTermWeight_ = 0;
  JreStrongAssignAndConsume(&self->termsToFind_, new_JavaUtilHashMap_init());
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(weightedTerms))->size_; i++) {
    OrgApacheLuceneSearchHighlightWeightedTerm *existingTerm = JreRetainedLocalValue([((JavaUtilHashMap *) nil_chk(self->termsToFind_)) getWithId:((OrgApacheLuceneSearchHighlightWeightedTerm *) nil_chk(IOSObjectArray_Get(weightedTerms, i)))->term_]);
    if ((existingTerm == nil) || (((OrgApacheLuceneSearchHighlightWeightedTerm *) nil_chk(existingTerm))->weight_ < ((OrgApacheLuceneSearchHighlightWeightedTerm *) nil_chk(IOSObjectArray_Get(weightedTerms, i)))->weight_)) {
      [((JavaUtilHashMap *) nil_chk(self->termsToFind_)) putWithId:((OrgApacheLuceneSearchHighlightWeightedTerm *) nil_chk(IOSObjectArray_Get(weightedTerms, i)))->term_ withId:IOSObjectArray_Get(weightedTerms, i)];
      self->maxTermWeight_ = JavaLangMath_maxWithFloat_withFloat_(self->maxTermWeight_, [((OrgApacheLuceneSearchHighlightWeightedTerm *) nil_chk(IOSObjectArray_Get(weightedTerms, i))) getWeight]);
    }
  }
}

OrgApacheLuceneSearchHighlightQueryTermScorer *new_OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchHighlightWeightedTermArray_(IOSObjectArray *weightedTerms) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchHighlightQueryTermScorer, initWithOrgApacheLuceneSearchHighlightWeightedTermArray_, weightedTerms)
}

OrgApacheLuceneSearchHighlightQueryTermScorer *create_OrgApacheLuceneSearchHighlightQueryTermScorer_initWithOrgApacheLuceneSearchHighlightWeightedTermArray_(IOSObjectArray *weightedTerms) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchHighlightQueryTermScorer, initWithOrgApacheLuceneSearchHighlightWeightedTermArray_, weightedTerms)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchHighlightQueryTermScorer)
