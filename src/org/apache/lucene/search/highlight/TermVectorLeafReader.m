//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./highlighter/src/java/org/apache/lucene/search/highlight/TermVectorLeafReader.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/Collections.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "org/apache/lucene/index/BinaryDocValues.h"
#include "org/apache/lucene/index/DocValuesType.h"
#include "org/apache/lucene/index/FieldInfo.h"
#include "org/apache/lucene/index/FieldInfos.h"
#include "org/apache/lucene/index/Fields.h"
#include "org/apache/lucene/index/IndexOptions.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/NumericDocValues.h"
#include "org/apache/lucene/index/SortedDocValues.h"
#include "org/apache/lucene/index/SortedNumericDocValues.h"
#include "org/apache/lucene/index/SortedSetDocValues.h"
#include "org/apache/lucene/index/StoredFieldVisitor.h"
#include "org/apache/lucene/index/Terms.h"
#include "org/apache/lucene/search/highlight/TermVectorLeafReader.h"
#include "org/apache/lucene/util/Bits.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/highlight/TermVectorLeafReader must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchHighlightTermVectorLeafReader () {
 @public
  OrgApacheLuceneIndexFields *fields_;
  OrgApacheLuceneIndexFieldInfos *fieldInfos_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchHighlightTermVectorLeafReader, fields_, OrgApacheLuceneIndexFields *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchHighlightTermVectorLeafReader, fieldInfos_, OrgApacheLuceneIndexFieldInfos *)

@interface OrgApacheLuceneSearchHighlightTermVectorLeafReader_1 : OrgApacheLuceneIndexFields {
 @public
  NSString *val$field_;
  OrgApacheLuceneIndexTerms *val$terms_;
}

- (instancetype)initWithNSString:(NSString *)capture$0
   withOrgApacheLuceneIndexTerms:(OrgApacheLuceneIndexTerms *)capture$1;

- (id<JavaUtilIterator>)iterator;

- (OrgApacheLuceneIndexTerms *)termsWithNSString:(NSString *)fld;

- (jint)size;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchHighlightTermVectorLeafReader_1)

__attribute__((unused)) static void OrgApacheLuceneSearchHighlightTermVectorLeafReader_1_initWithNSString_withOrgApacheLuceneIndexTerms_(OrgApacheLuceneSearchHighlightTermVectorLeafReader_1 *self, NSString *capture$0, OrgApacheLuceneIndexTerms *capture$1);

__attribute__((unused)) static OrgApacheLuceneSearchHighlightTermVectorLeafReader_1 *new_OrgApacheLuceneSearchHighlightTermVectorLeafReader_1_initWithNSString_withOrgApacheLuceneIndexTerms_(NSString *capture$0, OrgApacheLuceneIndexTerms *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchHighlightTermVectorLeafReader_1 *create_OrgApacheLuceneSearchHighlightTermVectorLeafReader_1_initWithNSString_withOrgApacheLuceneIndexTerms_(NSString *capture$0, OrgApacheLuceneIndexTerms *capture$1);

@implementation OrgApacheLuceneSearchHighlightTermVectorLeafReader

- (instancetype)initWithNSString:(NSString *)field
   withOrgApacheLuceneIndexTerms:(OrgApacheLuceneIndexTerms *)terms {
  OrgApacheLuceneSearchHighlightTermVectorLeafReader_initWithNSString_withOrgApacheLuceneIndexTerms_(self, field, terms);
  return self;
}

- (void)addCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:(id<OrgApacheLuceneIndexLeafReader_CoreClosedListener>)listener {
  OrgApacheLuceneIndexLeafReader_addCoreClosedListenerAsReaderClosedListenerWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexLeafReader_CoreClosedListener_(self, listener);
}

- (void)removeCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:(id<OrgApacheLuceneIndexLeafReader_CoreClosedListener>)listener {
  OrgApacheLuceneIndexLeafReader_removeCoreClosedListenerAsReaderClosedListenerWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexLeafReader_CoreClosedListener_(self, listener);
}

- (void)doClose {
}

- (OrgApacheLuceneIndexFields *)fields {
  return fields_;
}

- (OrgApacheLuceneIndexNumericDocValues *)getNumericDocValuesWithNSString:(NSString *)field {
  return nil;
}

- (OrgApacheLuceneIndexBinaryDocValues *)getBinaryDocValuesWithNSString:(NSString *)field {
  return nil;
}

- (OrgApacheLuceneIndexSortedDocValues *)getSortedDocValuesWithNSString:(NSString *)field {
  return nil;
}

- (OrgApacheLuceneIndexSortedNumericDocValues *)getSortedNumericDocValuesWithNSString:(NSString *)field {
  return nil;
}

- (OrgApacheLuceneIndexSortedSetDocValues *)getSortedSetDocValuesWithNSString:(NSString *)field {
  return nil;
}

- (id<OrgApacheLuceneUtilBits>)getDocsWithFieldWithNSString:(NSString *)field {
  return nil;
}

- (OrgApacheLuceneIndexNumericDocValues *)getNormValuesWithNSString:(NSString *)field {
  return nil;
}

- (OrgApacheLuceneIndexFieldInfos *)getFieldInfos {
  return fieldInfos_;
}

- (id<OrgApacheLuceneUtilBits>)getLiveDocs {
  return nil;
}

- (void)checkIntegrity {
}

- (OrgApacheLuceneIndexFields *)getTermVectorsWithInt:(jint)docID {
  if (docID != 0) {
    return nil;
  }
  return [self fields];
}

- (jint)numDocs {
  return 1;
}

- (jint)maxDoc {
  return 1;
}

- (void)documentWithInt:(jint)docID
withOrgApacheLuceneIndexStoredFieldVisitor:(OrgApacheLuceneIndexStoredFieldVisitor *)visitor {
}

- (void)dealloc {
  RELEASE_(fields_);
  RELEASE_(fieldInfos_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexFields;", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexNumericDocValues;", 0x1, 5, 6, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexBinaryDocValues;", 0x1, 7, 6, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexSortedDocValues;", 0x1, 8, 6, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexSortedNumericDocValues;", 0x1, 9, 6, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexSortedSetDocValues;", 0x1, 10, 6, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBits;", 0x1, 11, 6, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexNumericDocValues;", 0x1, 12, 6, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexFieldInfos;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBits;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexFields;", 0x1, 13, 14, 4, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withOrgApacheLuceneIndexTerms:);
  methods[1].selector = @selector(addCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:);
  methods[2].selector = @selector(removeCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:);
  methods[3].selector = @selector(doClose);
  methods[4].selector = @selector(fields);
  methods[5].selector = @selector(getNumericDocValuesWithNSString:);
  methods[6].selector = @selector(getBinaryDocValuesWithNSString:);
  methods[7].selector = @selector(getSortedDocValuesWithNSString:);
  methods[8].selector = @selector(getSortedNumericDocValuesWithNSString:);
  methods[9].selector = @selector(getSortedSetDocValuesWithNSString:);
  methods[10].selector = @selector(getDocsWithFieldWithNSString:);
  methods[11].selector = @selector(getNormValuesWithNSString:);
  methods[12].selector = @selector(getFieldInfos);
  methods[13].selector = @selector(getLiveDocs);
  methods[14].selector = @selector(checkIntegrity);
  methods[15].selector = @selector(getTermVectorsWithInt:);
  methods[16].selector = @selector(numDocs);
  methods[17].selector = @selector(maxDoc);
  methods[18].selector = @selector(documentWithInt:withOrgApacheLuceneIndexStoredFieldVisitor:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "fields_", "LOrgApacheLuceneIndexFields;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "fieldInfos_", "LOrgApacheLuceneIndexFieldInfos;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LOrgApacheLuceneIndexTerms;", "addCoreClosedListener", "LOrgApacheLuceneIndexLeafReader_CoreClosedListener;", "removeCoreClosedListener", "LJavaIoIOException;", "getNumericDocValues", "LNSString;", "getBinaryDocValues", "getSortedDocValues", "getSortedNumericDocValues", "getSortedSetDocValues", "getDocsWithField", "getNormValues", "getTermVectors", "I", "document", "ILOrgApacheLuceneIndexStoredFieldVisitor;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchHighlightTermVectorLeafReader = { "TermVectorLeafReader", "org.apache.lucene.search.highlight", ptrTable, methods, fields, 7, 0x1, 19, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchHighlightTermVectorLeafReader;
}

@end

void OrgApacheLuceneSearchHighlightTermVectorLeafReader_initWithNSString_withOrgApacheLuceneIndexTerms_(OrgApacheLuceneSearchHighlightTermVectorLeafReader *self, NSString *field, OrgApacheLuceneIndexTerms *terms) {
  OrgApacheLuceneIndexLeafReader_init(self);
  JreStrongAssignAndConsume(&self->fields_, new_OrgApacheLuceneSearchHighlightTermVectorLeafReader_1_initWithNSString_withOrgApacheLuceneIndexTerms_(field, terms));
  OrgApacheLuceneIndexIndexOptions *indexOptions;
  if (![((OrgApacheLuceneIndexTerms *) nil_chk(terms)) hasFreqs]) {
    indexOptions = JreLoadEnum(OrgApacheLuceneIndexIndexOptions, DOCS);
  }
  else if (![terms hasPositions]) {
    indexOptions = JreLoadEnum(OrgApacheLuceneIndexIndexOptions, DOCS_AND_FREQS);
  }
  else if (![terms hasOffsets]) {
    indexOptions = JreLoadEnum(OrgApacheLuceneIndexIndexOptions, DOCS_AND_FREQS_AND_POSITIONS);
  }
  else {
    indexOptions = JreLoadEnum(OrgApacheLuceneIndexIndexOptions, DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS);
  }
  OrgApacheLuceneIndexFieldInfo *fieldInfo = create_OrgApacheLuceneIndexFieldInfo_initWithNSString_withInt_withBoolean_withBoolean_withBoolean_withOrgApacheLuceneIndexIndexOptions_withOrgApacheLuceneIndexDocValuesType_withLong_withJavaUtilMap_(field, 0, true, true, [terms hasPayloads], indexOptions, JreLoadEnum(OrgApacheLuceneIndexDocValuesType, NONE), -1, JavaUtilCollections_emptyMap());
  JreStrongAssignAndConsume(&self->fieldInfos_, new_OrgApacheLuceneIndexFieldInfos_initWithOrgApacheLuceneIndexFieldInfoArray_([IOSObjectArray arrayWithObjects:(id[]){ fieldInfo } count:1 type:OrgApacheLuceneIndexFieldInfo_class_()]));
}

OrgApacheLuceneSearchHighlightTermVectorLeafReader *new_OrgApacheLuceneSearchHighlightTermVectorLeafReader_initWithNSString_withOrgApacheLuceneIndexTerms_(NSString *field, OrgApacheLuceneIndexTerms *terms) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchHighlightTermVectorLeafReader, initWithNSString_withOrgApacheLuceneIndexTerms_, field, terms)
}

OrgApacheLuceneSearchHighlightTermVectorLeafReader *create_OrgApacheLuceneSearchHighlightTermVectorLeafReader_initWithNSString_withOrgApacheLuceneIndexTerms_(NSString *field, OrgApacheLuceneIndexTerms *terms) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchHighlightTermVectorLeafReader, initWithNSString_withOrgApacheLuceneIndexTerms_, field, terms)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchHighlightTermVectorLeafReader)

@implementation OrgApacheLuceneSearchHighlightTermVectorLeafReader_1

- (instancetype)initWithNSString:(NSString *)capture$0
   withOrgApacheLuceneIndexTerms:(OrgApacheLuceneIndexTerms *)capture$1 {
  OrgApacheLuceneSearchHighlightTermVectorLeafReader_1_initWithNSString_withOrgApacheLuceneIndexTerms_(self, capture$0, capture$1);
  return self;
}

- (id<JavaUtilIterator>)iterator {
  return JreRetainedLocalValue([((id<JavaUtilList>) nil_chk(JavaUtilCollections_singletonListWithId_(val$field_))) iterator]);
}

- (OrgApacheLuceneIndexTerms *)termsWithNSString:(NSString *)fld {
  if (![((NSString *) nil_chk(val$field_)) isEqual:fld]) {
    return JreRetainedLocalValue(nil);
  }
  return JreRetainedLocalValue(val$terms_);
}

- (jint)size {
  return 1;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

- (void)dealloc {
  RELEASE_(val$field_);
  RELEASE_(val$terms_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTerms;", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withOrgApacheLuceneIndexTerms:);
  methods[1].selector = @selector(iterator);
  methods[2].selector = @selector(termsWithNSString:);
  methods[3].selector = @selector(size);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$field_", "LNSString;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$terms_", "LOrgApacheLuceneIndexTerms;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LOrgApacheLuceneIndexTerms;", "()Ljava/util/Iterator<Ljava/lang/String;>;", "terms", "LNSString;", "LJavaIoIOException;", "LOrgApacheLuceneSearchHighlightTermVectorLeafReader;", "initWithNSString:withOrgApacheLuceneIndexTerms:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchHighlightTermVectorLeafReader_1 = { "", "org.apache.lucene.search.highlight", ptrTable, methods, fields, 7, 0x8010, 4, 2, 5, -1, 6, -1, -1 };
  return &_OrgApacheLuceneSearchHighlightTermVectorLeafReader_1;
}

@end

void OrgApacheLuceneSearchHighlightTermVectorLeafReader_1_initWithNSString_withOrgApacheLuceneIndexTerms_(OrgApacheLuceneSearchHighlightTermVectorLeafReader_1 *self, NSString *capture$0, OrgApacheLuceneIndexTerms *capture$1) {
  JreStrongAssign(&self->val$field_, capture$0);
  JreStrongAssign(&self->val$terms_, capture$1);
  OrgApacheLuceneIndexFields_init(self);
}

OrgApacheLuceneSearchHighlightTermVectorLeafReader_1 *new_OrgApacheLuceneSearchHighlightTermVectorLeafReader_1_initWithNSString_withOrgApacheLuceneIndexTerms_(NSString *capture$0, OrgApacheLuceneIndexTerms *capture$1) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchHighlightTermVectorLeafReader_1, initWithNSString_withOrgApacheLuceneIndexTerms_, capture$0, capture$1)
}

OrgApacheLuceneSearchHighlightTermVectorLeafReader_1 *create_OrgApacheLuceneSearchHighlightTermVectorLeafReader_1_initWithNSString_withOrgApacheLuceneIndexTerms_(NSString *capture$0, OrgApacheLuceneIndexTerms *capture$1) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchHighlightTermVectorLeafReader_1, initWithNSString_withOrgApacheLuceneIndexTerms_, capture$0, capture$1)
}
