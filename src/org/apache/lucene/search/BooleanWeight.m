//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/BooleanWeight.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/search/BooleanClause.h"
#include "org/apache/lucene/search/BooleanQuery.h"
#include "org/apache/lucene/search/BooleanScorer.h"
#include "org/apache/lucene/search/BooleanTopLevelScorers.h"
#include "org/apache/lucene/search/BooleanWeight.h"
#include "org/apache/lucene/search/BulkScorer.h"
#include "org/apache/lucene/search/ConjunctionScorer.h"
#include "org/apache/lucene/search/DisjunctionSumScorer.h"
#include "org/apache/lucene/search/Explanation.h"
#include "org/apache/lucene/search/FilterScorer.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/search/MinShouldMatchSumScorer.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/ReqExclScorer.h"
#include "org/apache/lucene/search/ReqOptSumScorer.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/Weight.h"
#include "org/apache/lucene/search/similarities/Similarity.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/BooleanWeight must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchBooleanWeight ()

/*!
 @brief Create a new scorer for the given required clauses.Note that
   <code>requiredScoring</code> is a subset of <code>required</code> containing
   required clauses that should participate in scoring.
 */
- (OrgApacheLuceneSearchScorer *)reqWithJavaUtilList:(id<JavaUtilList>)required
                                    withJavaUtilList:(id<JavaUtilList>)requiredScoring
                                         withBoolean:(jboolean)disableCoord;

- (OrgApacheLuceneSearchScorer *)exclWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)main
                                                    withJavaUtilList:(id<JavaUtilList>)prohibited;

- (OrgApacheLuceneSearchScorer *)optWithJavaUtilList:(id<JavaUtilList>)optional
                                             withInt:(jint)minShouldMatch
                                         withBoolean:(jboolean)disableCoord;

@end

__attribute__((unused)) static OrgApacheLuceneSearchScorer *OrgApacheLuceneSearchBooleanWeight_reqWithJavaUtilList_withJavaUtilList_withBoolean_(OrgApacheLuceneSearchBooleanWeight *self, id<JavaUtilList> required, id<JavaUtilList> requiredScoring, jboolean disableCoord);

__attribute__((unused)) static OrgApacheLuceneSearchScorer *OrgApacheLuceneSearchBooleanWeight_exclWithOrgApacheLuceneSearchScorer_withJavaUtilList_(OrgApacheLuceneSearchBooleanWeight *self, OrgApacheLuceneSearchScorer *main, id<JavaUtilList> prohibited);

__attribute__((unused)) static OrgApacheLuceneSearchScorer *OrgApacheLuceneSearchBooleanWeight_optWithJavaUtilList_withInt_withBoolean_(OrgApacheLuceneSearchBooleanWeight *self, id<JavaUtilList> optional, jint minShouldMatch, jboolean disableCoord);

@interface OrgApacheLuceneSearchBooleanWeight_1 : OrgApacheLuceneSearchFilterScorer

- (instancetype)initWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)inArg;

- (jfloat)score;

- (jint)freq;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchBooleanWeight_1)

__attribute__((unused)) static void OrgApacheLuceneSearchBooleanWeight_1_initWithOrgApacheLuceneSearchScorer_(OrgApacheLuceneSearchBooleanWeight_1 *self, OrgApacheLuceneSearchScorer *inArg);

__attribute__((unused)) static OrgApacheLuceneSearchBooleanWeight_1 *new_OrgApacheLuceneSearchBooleanWeight_1_initWithOrgApacheLuceneSearchScorer_(OrgApacheLuceneSearchScorer *inArg) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchBooleanWeight_1 *create_OrgApacheLuceneSearchBooleanWeight_1_initWithOrgApacheLuceneSearchScorer_(OrgApacheLuceneSearchScorer *inArg);

@implementation OrgApacheLuceneSearchBooleanWeight

- (instancetype)initPackagePrivateWithOrgApacheLuceneSearchBooleanQuery:(OrgApacheLuceneSearchBooleanQuery *)query
                                 withOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                            withBoolean:(jboolean)needsScores
                                                            withBoolean:(jboolean)disableCoord {
  OrgApacheLuceneSearchBooleanWeight_initPackagePrivateWithOrgApacheLuceneSearchBooleanQuery_withOrgApacheLuceneSearchIndexSearcher_withBoolean_withBoolean_(self, query, searcher, needsScores, disableCoord);
  return self;
}

- (void)extractTermsWithJavaUtilSet:(id<JavaUtilSet>)terms {
  jint i = 0;
  for (OrgApacheLuceneSearchBooleanClause * __strong clause in nil_chk(query_)) {
    if ([((OrgApacheLuceneSearchBooleanClause *) nil_chk(clause)) isScoring] || (needsScores_ == false && [clause isProhibited] == false)) {
      [((OrgApacheLuceneSearchWeight *) nil_chk([((JavaUtilArrayList *) nil_chk(weights_)) getWithInt:i])) extractTermsWithJavaUtilSet:terms];
    }
    i++;
  }
}

- (jfloat)getValueForNormalization {
  jfloat sum = 0.0f;
  jint i = 0;
  for (OrgApacheLuceneSearchBooleanClause * __strong clause in nil_chk(query_)) {
    jfloat s = [((OrgApacheLuceneSearchWeight *) nil_chk([((JavaUtilArrayList *) nil_chk(weights_)) getWithInt:i])) getValueForNormalization];
    if ([((OrgApacheLuceneSearchBooleanClause *) nil_chk(clause)) isScoring]) {
      JrePlusAssignFloatF(&sum, s);
    }
    i += 1;
  }
  JreTimesAssignFloatF(&sum, [query_ getBoost] * [query_ getBoost]);
  return sum;
}

- (jfloat)coordWithInt:(jint)overlap
               withInt:(jint)maxOverlap {
  if (overlap == 0) {
    return 0.0f;
  }
  else if (maxOverlap == 1) {
    return 1.0f;
  }
  else {
    return [((OrgApacheLuceneSearchSimilaritiesSimilarity *) nil_chk(similarity_)) coordWithInt:overlap withInt:maxOverlap];
  }
}

- (void)normalizeWithFloat:(jfloat)norm
                 withFloat:(jfloat)topLevelBoost {
  JreTimesAssignFloatF(&topLevelBoost, [((OrgApacheLuceneSearchBooleanQuery *) nil_chk(query_)) getBoost]);
  for (OrgApacheLuceneSearchWeight * __strong w in nil_chk(weights_)) {
    [((OrgApacheLuceneSearchWeight *) nil_chk(w)) normalizeWithFloat:norm withFloat:topLevelBoost];
  }
}

- (OrgApacheLuceneSearchExplanation *)explainWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                                                               withInt:(jint)doc {
  jint minShouldMatch = [((OrgApacheLuceneSearchBooleanQuery *) nil_chk(query_)) getMinimumNumberShouldMatch];
  id<JavaUtilList> subs = create_JavaUtilArrayList_init();
  jint coord = 0;
  jfloat sum = 0.0f;
  jboolean fail = false;
  jint matchCount = 0;
  jint shouldMatchCount = 0;
  id<JavaUtilIterator> cIter = JreRetainedLocalValue([query_ iterator]);
  for (id<JavaUtilIterator> wIter = JreRetainedLocalValue([((JavaUtilArrayList *) nil_chk(weights_)) iterator]); [((id<JavaUtilIterator>) nil_chk(wIter)) hasNext]; ) {
    OrgApacheLuceneSearchWeight *w = JreRetainedLocalValue([wIter next]);
    OrgApacheLuceneSearchBooleanClause *c = JreRetainedLocalValue([((id<JavaUtilIterator>) nil_chk(cIter)) next]);
    OrgApacheLuceneSearchExplanation *e = JreRetainedLocalValue([((OrgApacheLuceneSearchWeight *) nil_chk(w)) explainWithOrgApacheLuceneIndexLeafReaderContext:context withInt:doc]);
    if ([((OrgApacheLuceneSearchExplanation *) nil_chk(e)) isMatch]) {
      if ([((OrgApacheLuceneSearchBooleanClause *) nil_chk(c)) isScoring]) {
        [subs addWithId:e];
        JrePlusAssignFloatF(&sum, [e getValue]);
        coord++;
      }
      else if ([c isRequired]) {
        [subs addWithId:OrgApacheLuceneSearchExplanation_matchWithFloat_withNSString_withOrgApacheLuceneSearchExplanationArray_(0.0f, @"match on required clause, product of:", [IOSObjectArray arrayWithObjects:(id[]){ OrgApacheLuceneSearchExplanation_matchWithFloat_withNSString_withOrgApacheLuceneSearchExplanationArray_(0.0f, JreStrcat("@$", JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, FILTER), @" clause"), [IOSObjectArray arrayWithLength:0 type:OrgApacheLuceneSearchExplanation_class_()]), e } count:2 type:OrgApacheLuceneSearchExplanation_class_()])];
      }
      else if ([c isProhibited]) {
        [subs addWithId:OrgApacheLuceneSearchExplanation_noMatchWithNSString_withOrgApacheLuceneSearchExplanationArray_(JreStrcat("$$C", @"match on prohibited clause (", [((OrgApacheLuceneSearchQuery *) nil_chk([c getQuery])) description], ')'), [IOSObjectArray arrayWithObjects:(id[]){ e } count:1 type:OrgApacheLuceneSearchExplanation_class_()])];
        fail = true;
      }
      if (![c isProhibited]) {
        matchCount++;
      }
      if ([c getOccur] == JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, SHOULD)) {
        shouldMatchCount++;
      }
    }
    else if ([((OrgApacheLuceneSearchBooleanClause *) nil_chk(c)) isRequired]) {
      [subs addWithId:OrgApacheLuceneSearchExplanation_noMatchWithNSString_withOrgApacheLuceneSearchExplanationArray_(JreStrcat("$$C", @"no match on required clause (", [((OrgApacheLuceneSearchQuery *) nil_chk([c getQuery])) description], ')'), [IOSObjectArray arrayWithObjects:(id[]){ e } count:1 type:OrgApacheLuceneSearchExplanation_class_()])];
      fail = true;
    }
  }
  if (fail) {
    return OrgApacheLuceneSearchExplanation_noMatchWithNSString_withJavaUtilCollection_(@"Failure to meet condition(s) of required/prohibited clause(s)", subs);
  }
  else if (matchCount == 0) {
    return OrgApacheLuceneSearchExplanation_noMatchWithNSString_withJavaUtilCollection_(@"No matching clauses", subs);
  }
  else if (shouldMatchCount < minShouldMatch) {
    return OrgApacheLuceneSearchExplanation_noMatchWithNSString_withJavaUtilCollection_(JreStrcat("$I", @"Failure to match minimum number of optional clauses: ", minShouldMatch), subs);
  }
  else {
    OrgApacheLuceneSearchExplanation *result = OrgApacheLuceneSearchExplanation_matchWithFloat_withNSString_withJavaUtilCollection_(sum, @"sum of:", subs);
    jfloat coordFactor = disableCoord_ ? 1.0f : [self coordWithInt:coord withInt:maxCoord_];
    if (coordFactor != 1.0f) {
      result = OrgApacheLuceneSearchExplanation_matchWithFloat_withNSString_withOrgApacheLuceneSearchExplanationArray_(sum * coordFactor, @"product of:", [IOSObjectArray arrayWithObjects:(id[]){ result, OrgApacheLuceneSearchExplanation_matchWithFloat_withNSString_withOrgApacheLuceneSearchExplanationArray_(coordFactor, JreStrcat("$ICIC", @"coord(", coord, '/', maxCoord_, ')'), [IOSObjectArray arrayWithLength:0 type:OrgApacheLuceneSearchExplanation_class_()]) } count:2 type:OrgApacheLuceneSearchExplanation_class_()]);
    }
    return result;
  }
}

- (OrgApacheLuceneSearchBooleanScorer *)booleanScorerWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context {
  id<JavaUtilList> optional = create_JavaUtilArrayList_init();
  id<JavaUtilIterator> cIter = JreRetainedLocalValue([((OrgApacheLuceneSearchBooleanQuery *) nil_chk(query_)) iterator]);
  for (OrgApacheLuceneSearchWeight * __strong w in nil_chk(weights_)) {
    OrgApacheLuceneSearchBooleanClause *c = JreRetainedLocalValue([((id<JavaUtilIterator>) nil_chk(cIter)) next]);
    OrgApacheLuceneSearchBulkScorer *subScorer = JreRetainedLocalValue([((OrgApacheLuceneSearchWeight *) nil_chk(w)) bulkScorerWithOrgApacheLuceneIndexLeafReaderContext:context]);
    if (subScorer == nil) {
      if ([((OrgApacheLuceneSearchBooleanClause *) nil_chk(c)) isRequired]) {
        return nil;
      }
    }
    else if ([((OrgApacheLuceneSearchBooleanClause *) nil_chk(c)) isRequired]) {
      return nil;
    }
    else if ([c isProhibited]) {
      return nil;
    }
    else {
      [optional addWithId:subScorer];
    }
  }
  if ([optional size] == 0) {
    return nil;
  }
  if ([query_ getMinimumNumberShouldMatch] > [optional size]) {
    return nil;
  }
  return create_OrgApacheLuceneSearchBooleanScorer_initPackagePrivateWithOrgApacheLuceneSearchBooleanWeight_withBoolean_withInt_withJavaUtilCollection_withInt_withBoolean_(self, disableCoord_, maxCoord_, optional, JavaLangMath_maxWithInt_withInt_(1, [query_ getMinimumNumberShouldMatch]), needsScores_);
}

- (OrgApacheLuceneSearchBulkScorer *)bulkScorerWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context {
  OrgApacheLuceneSearchBooleanScorer *bulkScorer = [self booleanScorerWithOrgApacheLuceneIndexLeafReaderContext:context];
  if (bulkScorer != nil) {
    jlong costThreshold;
    if ([((OrgApacheLuceneSearchBooleanQuery *) nil_chk(query_)) getMinimumNumberShouldMatch] <= 1) {
      costThreshold = -1;
    }
    else {
      costThreshold = JreIntDiv([((OrgApacheLuceneIndexLeafReader *) nil_chk([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader])) maxDoc], 3);
    }
    if ([bulkScorer cost] > costThreshold) {
      return bulkScorer;
    }
  }
  return [super bulkScorerWithOrgApacheLuceneIndexLeafReaderContext:context];
}

- (OrgApacheLuceneSearchScorer *)scorerWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context {
  jint minShouldMatch = [((OrgApacheLuceneSearchBooleanQuery *) nil_chk(query_)) getMinimumNumberShouldMatch];
  id<JavaUtilList> required = create_JavaUtilArrayList_init();
  id<JavaUtilList> requiredScoring = create_JavaUtilArrayList_init();
  id<JavaUtilList> prohibited = create_JavaUtilArrayList_init();
  id<JavaUtilList> optional = create_JavaUtilArrayList_init();
  id<JavaUtilIterator> cIter = JreRetainedLocalValue([query_ iterator]);
  for (OrgApacheLuceneSearchWeight * __strong w in nil_chk(weights_)) {
    OrgApacheLuceneSearchBooleanClause *c = JreRetainedLocalValue([((id<JavaUtilIterator>) nil_chk(cIter)) next]);
    OrgApacheLuceneSearchScorer *subScorer = JreRetainedLocalValue([((OrgApacheLuceneSearchWeight *) nil_chk(w)) scorerWithOrgApacheLuceneIndexLeafReaderContext:context]);
    if (subScorer == nil) {
      if ([((OrgApacheLuceneSearchBooleanClause *) nil_chk(c)) isRequired]) {
        return nil;
      }
    }
    else if ([((OrgApacheLuceneSearchBooleanClause *) nil_chk(c)) isRequired]) {
      [required addWithId:subScorer];
      if ([c isScoring]) {
        [requiredScoring addWithId:subScorer];
      }
    }
    else if ([c isProhibited]) {
      [prohibited addWithId:subScorer];
    }
    else {
      [optional addWithId:subScorer];
    }
  }
  if ([optional size] == minShouldMatch) {
    [required addAllWithJavaUtilCollection:optional];
    [requiredScoring addAllWithJavaUtilCollection:optional];
    [optional clear];
    minShouldMatch = 0;
  }
  if ([required isEmpty] && [optional isEmpty]) {
    return nil;
  }
  else if ([optional size] < minShouldMatch) {
    return nil;
  }
  if (!needsScores_ && minShouldMatch == 0 && [required size] > 0) {
    [optional clear];
  }
  if ([optional isEmpty]) {
    return OrgApacheLuceneSearchBooleanWeight_exclWithOrgApacheLuceneSearchScorer_withJavaUtilList_(self, OrgApacheLuceneSearchBooleanWeight_reqWithJavaUtilList_withJavaUtilList_withBoolean_(self, required, requiredScoring, disableCoord_), prohibited);
  }
  if ([required isEmpty]) {
    return OrgApacheLuceneSearchBooleanWeight_exclWithOrgApacheLuceneSearchScorer_withJavaUtilList_(self, OrgApacheLuceneSearchBooleanWeight_optWithJavaUtilList_withInt_withBoolean_(self, optional, minShouldMatch, disableCoord_), prohibited);
  }
  OrgApacheLuceneSearchScorer *req = OrgApacheLuceneSearchBooleanWeight_exclWithOrgApacheLuceneSearchScorer_withJavaUtilList_(self, OrgApacheLuceneSearchBooleanWeight_reqWithJavaUtilList_withJavaUtilList_withBoolean_(self, required, requiredScoring, true), prohibited);
  OrgApacheLuceneSearchScorer *opt = OrgApacheLuceneSearchBooleanWeight_optWithJavaUtilList_withInt_withBoolean_(self, optional, minShouldMatch, true);
  if (disableCoord_) {
    if (minShouldMatch > 0) {
      return create_OrgApacheLuceneSearchConjunctionScorer_initPackagePrivateWithOrgApacheLuceneSearchWeight_withJavaUtilList_withJavaUtilList_withFloat_(self, JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ req, opt } count:2 type:OrgApacheLuceneSearchScorer_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ req, opt } count:2 type:OrgApacheLuceneSearchScorer_class_()]), 1.0f);
    }
    else {
      return create_OrgApacheLuceneSearchReqOptSumScorer_initPackagePrivateWithOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchScorer_(req, opt);
    }
  }
  else if ([optional size] == 1) {
    if (minShouldMatch > 0) {
      return create_OrgApacheLuceneSearchConjunctionScorer_initPackagePrivateWithOrgApacheLuceneSearchWeight_withJavaUtilList_withJavaUtilList_withFloat_(self, JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ req, opt } count:2 type:OrgApacheLuceneSearchScorer_class_()]), JavaUtilArrays_asListWithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ req, opt } count:2 type:OrgApacheLuceneSearchScorer_class_()]), [self coordWithInt:[requiredScoring size] + 1 withInt:maxCoord_]);
    }
    else {
      jfloat coordReq = [self coordWithInt:[requiredScoring size] withInt:maxCoord_];
      jfloat coordBoth = [self coordWithInt:[requiredScoring size] + 1 withInt:maxCoord_];
      return create_OrgApacheLuceneSearchBooleanTopLevelScorers_ReqSingleOptScorer_initWithOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchScorer_withFloat_withFloat_(req, opt, coordReq, coordBoth);
    }
  }
  else {
    if (minShouldMatch > 0) {
      return create_OrgApacheLuceneSearchBooleanTopLevelScorers_CoordinatingConjunctionScorer_initWithOrgApacheLuceneSearchWeight_withFloatArray_withOrgApacheLuceneSearchScorer_withInt_withOrgApacheLuceneSearchScorer_(self, coords_, req, [requiredScoring size], opt);
    }
    else {
      return create_OrgApacheLuceneSearchBooleanTopLevelScorers_ReqMultiOptScorer_initWithOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchScorer_withInt_withFloatArray_(req, opt, [requiredScoring size], coords_);
    }
  }
}

- (OrgApacheLuceneSearchScorer *)reqWithJavaUtilList:(id<JavaUtilList>)required
                                    withJavaUtilList:(id<JavaUtilList>)requiredScoring
                                         withBoolean:(jboolean)disableCoord {
  return OrgApacheLuceneSearchBooleanWeight_reqWithJavaUtilList_withJavaUtilList_withBoolean_(self, required, requiredScoring, disableCoord);
}

- (OrgApacheLuceneSearchScorer *)exclWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)main
                                                    withJavaUtilList:(id<JavaUtilList>)prohibited {
  return OrgApacheLuceneSearchBooleanWeight_exclWithOrgApacheLuceneSearchScorer_withJavaUtilList_(self, main, prohibited);
}

- (OrgApacheLuceneSearchScorer *)optWithJavaUtilList:(id<JavaUtilList>)optional
                                             withInt:(jint)minShouldMatch
                                         withBoolean:(jboolean)disableCoord {
  return OrgApacheLuceneSearchBooleanWeight_optWithJavaUtilList_withInt_withBoolean_(self, optional, minShouldMatch, disableCoord);
}

- (void)dealloc {
  RELEASE_(similarity_);
  RELEASE_(query_);
  RELEASE_(weights_);
  RELEASE_(coords_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "F", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "F", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchExplanation;", 0x1, 9, 10, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchBooleanScorer;", 0x0, 11, 12, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchBulkScorer;", 0x1, 13, 12, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchScorer;", 0x1, 14, 12, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchScorer;", 0x2, 15, 16, -1, 17, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchScorer;", 0x2, 18, 19, 1, 20, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchScorer;", 0x2, 21, 22, 1, 23, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgApacheLuceneSearchBooleanQuery:withOrgApacheLuceneSearchIndexSearcher:withBoolean:withBoolean:);
  methods[1].selector = @selector(extractTermsWithJavaUtilSet:);
  methods[2].selector = @selector(getValueForNormalization);
  methods[3].selector = @selector(coordWithInt:withInt:);
  methods[4].selector = @selector(normalizeWithFloat:withFloat:);
  methods[5].selector = @selector(explainWithOrgApacheLuceneIndexLeafReaderContext:withInt:);
  methods[6].selector = @selector(booleanScorerWithOrgApacheLuceneIndexLeafReaderContext:);
  methods[7].selector = @selector(bulkScorerWithOrgApacheLuceneIndexLeafReaderContext:);
  methods[8].selector = @selector(scorerWithOrgApacheLuceneIndexLeafReaderContext:);
  methods[9].selector = @selector(reqWithJavaUtilList:withJavaUtilList:withBoolean:);
  methods[10].selector = @selector(exclWithOrgApacheLuceneSearchScorer:withJavaUtilList:);
  methods[11].selector = @selector(optWithJavaUtilList:withInt:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "similarity_", "LOrgApacheLuceneSearchSimilaritiesSimilarity;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "query_", "LOrgApacheLuceneSearchBooleanQuery;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "weights_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x10, -1, -1, 24, -1 },
    { "maxCoord_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "disableCoord_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "needsScores_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "coords_", "[F", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchBooleanQuery;LOrgApacheLuceneSearchIndexSearcher;ZZ", "LJavaIoIOException;", "extractTerms", "LJavaUtilSet;", "(Ljava/util/Set<Lorg/apache/lucene/index/Term;>;)V", "coord", "II", "normalize", "FF", "explain", "LOrgApacheLuceneIndexLeafReaderContext;I", "booleanScorer", "LOrgApacheLuceneIndexLeafReaderContext;", "bulkScorer", "scorer", "req", "LJavaUtilList;LJavaUtilList;Z", "(Ljava/util/List<Lorg/apache/lucene/search/Scorer;>;Ljava/util/List<Lorg/apache/lucene/search/Scorer;>;Z)Lorg/apache/lucene/search/Scorer;", "excl", "LOrgApacheLuceneSearchScorer;LJavaUtilList;", "(Lorg/apache/lucene/search/Scorer;Ljava/util/List<Lorg/apache/lucene/search/Scorer;>;)Lorg/apache/lucene/search/Scorer;", "opt", "LJavaUtilList;IZ", "(Ljava/util/List<Lorg/apache/lucene/search/Scorer;>;IZ)Lorg/apache/lucene/search/Scorer;", "Ljava/util/ArrayList<Lorg/apache/lucene/search/Weight;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchBooleanWeight = { "BooleanWeight", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x10, 12, 7, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchBooleanWeight;
}

@end

void OrgApacheLuceneSearchBooleanWeight_initPackagePrivateWithOrgApacheLuceneSearchBooleanQuery_withOrgApacheLuceneSearchIndexSearcher_withBoolean_withBoolean_(OrgApacheLuceneSearchBooleanWeight *self, OrgApacheLuceneSearchBooleanQuery *query, OrgApacheLuceneSearchIndexSearcher *searcher, jboolean needsScores, jboolean disableCoord) {
  OrgApacheLuceneSearchWeight_initWithOrgApacheLuceneSearchQuery_(self, query);
  JreStrongAssign(&self->query_, query);
  self->needsScores_ = needsScores;
  JreStrongAssign(&self->similarity_, [((OrgApacheLuceneSearchIndexSearcher *) nil_chk(searcher)) getSimilarityWithBoolean:needsScores]);
  JreStrongAssignAndConsume(&self->weights_, new_JavaUtilArrayList_init());
  jint i = 0;
  jint maxCoord = 0;
  for (OrgApacheLuceneSearchBooleanClause * __strong c in nil_chk(query)) {
    OrgApacheLuceneSearchWeight *w = JreRetainedLocalValue([searcher createWeightWithOrgApacheLuceneSearchQuery:[((OrgApacheLuceneSearchBooleanClause *) nil_chk(c)) getQuery] withBoolean:needsScores && [c isScoring]]);
    [self->weights_ addWithId:w];
    if ([c isScoring]) {
      maxCoord++;
    }
    i += 1;
  }
  self->maxCoord_ = maxCoord;
  JreStrongAssignAndConsume(&self->coords_, [IOSFloatArray newArrayWithLength:maxCoord + 1]);
  JavaUtilArrays_fillWithFloatArray_withFloat_(self->coords_, 1.0f);
  *IOSFloatArray_GetRef(self->coords_, 0) = 0.0f;
  if (maxCoord > 0 && needsScores && disableCoord == false) {
    jboolean seenActualCoord = false;
    for (i = 1; i < self->coords_->size_; i++) {
      *IOSFloatArray_GetRef(self->coords_, i) = [self coordWithInt:i withInt:maxCoord];
      seenActualCoord |= (IOSFloatArray_Get(self->coords_, i) != 1.0f);
    }
    self->disableCoord_ = (seenActualCoord == false);
  }
  else {
    self->disableCoord_ = true;
  }
}

OrgApacheLuceneSearchBooleanWeight *new_OrgApacheLuceneSearchBooleanWeight_initPackagePrivateWithOrgApacheLuceneSearchBooleanQuery_withOrgApacheLuceneSearchIndexSearcher_withBoolean_withBoolean_(OrgApacheLuceneSearchBooleanQuery *query, OrgApacheLuceneSearchIndexSearcher *searcher, jboolean needsScores, jboolean disableCoord) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchBooleanWeight, initPackagePrivateWithOrgApacheLuceneSearchBooleanQuery_withOrgApacheLuceneSearchIndexSearcher_withBoolean_withBoolean_, query, searcher, needsScores, disableCoord)
}

OrgApacheLuceneSearchBooleanWeight *create_OrgApacheLuceneSearchBooleanWeight_initPackagePrivateWithOrgApacheLuceneSearchBooleanQuery_withOrgApacheLuceneSearchIndexSearcher_withBoolean_withBoolean_(OrgApacheLuceneSearchBooleanQuery *query, OrgApacheLuceneSearchIndexSearcher *searcher, jboolean needsScores, jboolean disableCoord) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchBooleanWeight, initPackagePrivateWithOrgApacheLuceneSearchBooleanQuery_withOrgApacheLuceneSearchIndexSearcher_withBoolean_withBoolean_, query, searcher, needsScores, disableCoord)
}

OrgApacheLuceneSearchScorer *OrgApacheLuceneSearchBooleanWeight_reqWithJavaUtilList_withJavaUtilList_withBoolean_(OrgApacheLuceneSearchBooleanWeight *self, id<JavaUtilList> required, id<JavaUtilList> requiredScoring, jboolean disableCoord) {
  if ([((id<JavaUtilList>) nil_chk(required)) size] == 1) {
    OrgApacheLuceneSearchScorer *req = JreRetainedLocalValue([required getWithInt:0]);
    if (self->needsScores_ == false) {
      return req;
    }
    if ([((id<JavaUtilList>) nil_chk(requiredScoring)) isEmpty]) {
      return create_OrgApacheLuceneSearchBooleanWeight_1_initWithOrgApacheLuceneSearchScorer_(req);
    }
    jfloat boost = 1.0f;
    if (disableCoord == false) {
      boost = [self coordWithInt:1 withInt:self->maxCoord_];
    }
    if (boost == 1.0f) {
      return req;
    }
    return create_OrgApacheLuceneSearchBooleanTopLevelScorers_BoostedScorer_initWithOrgApacheLuceneSearchScorer_withFloat_(req, boost);
  }
  else {
    return create_OrgApacheLuceneSearchConjunctionScorer_initPackagePrivateWithOrgApacheLuceneSearchWeight_withJavaUtilList_withJavaUtilList_withFloat_(self, required, requiredScoring, disableCoord ? 1.0f : [self coordWithInt:[((id<JavaUtilList>) nil_chk(requiredScoring)) size] withInt:self->maxCoord_]);
  }
}

OrgApacheLuceneSearchScorer *OrgApacheLuceneSearchBooleanWeight_exclWithOrgApacheLuceneSearchScorer_withJavaUtilList_(OrgApacheLuceneSearchBooleanWeight *self, OrgApacheLuceneSearchScorer *main, id<JavaUtilList> prohibited) {
  if ([((id<JavaUtilList>) nil_chk(prohibited)) isEmpty]) {
    return main;
  }
  else if ([prohibited size] == 1) {
    return create_OrgApacheLuceneSearchReqExclScorer_initPackagePrivateWithOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchScorer_(main, [prohibited getWithInt:0]);
  }
  else {
    IOSFloatArray *coords = [IOSFloatArray arrayWithLength:[prohibited size] + 1];
    JavaUtilArrays_fillWithFloatArray_withFloat_(coords, 1.0f);
    return create_OrgApacheLuceneSearchReqExclScorer_initPackagePrivateWithOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchScorer_(main, create_OrgApacheLuceneSearchDisjunctionSumScorer_initPackagePrivateWithOrgApacheLuceneSearchWeight_withJavaUtilList_withFloatArray_withBoolean_(self, prohibited, coords, false));
  }
}

OrgApacheLuceneSearchScorer *OrgApacheLuceneSearchBooleanWeight_optWithJavaUtilList_withInt_withBoolean_(OrgApacheLuceneSearchBooleanWeight *self, id<JavaUtilList> optional, jint minShouldMatch, jboolean disableCoord) {
  if ([((id<JavaUtilList>) nil_chk(optional)) size] == 1) {
    OrgApacheLuceneSearchScorer *opt = JreRetainedLocalValue([optional getWithInt:0]);
    if (!disableCoord && self->maxCoord_ > 1) {
      return create_OrgApacheLuceneSearchBooleanTopLevelScorers_BoostedScorer_initWithOrgApacheLuceneSearchScorer_withFloat_(opt, [self coordWithInt:1 withInt:self->maxCoord_]);
    }
    else {
      return opt;
    }
  }
  else {
    IOSFloatArray *coords;
    if (disableCoord) {
      coords = [IOSFloatArray arrayWithLength:[optional size] + 1];
      JavaUtilArrays_fillWithFloatArray_withFloat_(coords, 1.0f);
    }
    else {
      coords = self->coords_;
    }
    if (minShouldMatch > 1) {
      return create_OrgApacheLuceneSearchMinShouldMatchSumScorer_initPackagePrivateWithOrgApacheLuceneSearchWeight_withJavaUtilCollection_withInt_withFloatArray_(self, optional, minShouldMatch, coords);
    }
    else {
      return create_OrgApacheLuceneSearchDisjunctionSumScorer_initPackagePrivateWithOrgApacheLuceneSearchWeight_withJavaUtilList_withFloatArray_withBoolean_(self, optional, coords, self->needsScores_);
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchBooleanWeight)

@implementation OrgApacheLuceneSearchBooleanWeight_1

- (instancetype)initWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)inArg {
  OrgApacheLuceneSearchBooleanWeight_1_initWithOrgApacheLuceneSearchScorer_(self, inArg);
  return self;
}

- (jfloat)score {
  return 0.0f;
}

- (jint)freq {
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchScorer:);
  methods[1].selector = @selector(score);
  methods[2].selector = @selector(freq);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchScorer;", "LJavaIoIOException;", "LOrgApacheLuceneSearchBooleanWeight;", "reqWithJavaUtilList:withJavaUtilList:withBoolean:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchBooleanWeight_1 = { "", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0x8010, 3, 0, 2, -1, 3, -1, -1 };
  return &_OrgApacheLuceneSearchBooleanWeight_1;
}

@end

void OrgApacheLuceneSearchBooleanWeight_1_initWithOrgApacheLuceneSearchScorer_(OrgApacheLuceneSearchBooleanWeight_1 *self, OrgApacheLuceneSearchScorer *inArg) {
  OrgApacheLuceneSearchFilterScorer_initWithOrgApacheLuceneSearchScorer_(self, inArg);
}

OrgApacheLuceneSearchBooleanWeight_1 *new_OrgApacheLuceneSearchBooleanWeight_1_initWithOrgApacheLuceneSearchScorer_(OrgApacheLuceneSearchScorer *inArg) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchBooleanWeight_1, initWithOrgApacheLuceneSearchScorer_, inArg)
}

OrgApacheLuceneSearchBooleanWeight_1 *create_OrgApacheLuceneSearchBooleanWeight_1_initWithOrgApacheLuceneSearchScorer_(OrgApacheLuceneSearchScorer *inArg) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchBooleanWeight_1, initWithOrgApacheLuceneSearchScorer_, inArg)
}
