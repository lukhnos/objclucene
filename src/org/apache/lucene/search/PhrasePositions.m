//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/PhrasePositions.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/index/PostingsEnum.h"
#include "org/apache/lucene/search/PhrasePositions.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/PhrasePositions must not be compiled with ARC (-fobjc-arc)"
#endif

__attribute__((unused)) static jboolean OrgApacheLuceneSearchPhrasePositions_nextPosition(OrgApacheLuceneSearchPhrasePositions *self);

@implementation OrgApacheLuceneSearchPhrasePositions

- (instancetype)initPackagePrivateWithOrgApacheLuceneIndexPostingsEnum:(OrgApacheLuceneIndexPostingsEnum *)postings
                                                               withInt:(jint)o
                                                               withInt:(jint)ord
                                     withOrgApacheLuceneIndexTermArray:(IOSObjectArray *)terms {
  OrgApacheLuceneSearchPhrasePositions_initPackagePrivateWithOrgApacheLuceneIndexPostingsEnum_withInt_withInt_withOrgApacheLuceneIndexTermArray_(self, postings, o, ord, terms);
  return self;
}

- (void)firstPosition {
  count_ = [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(postings_)) freq];
  OrgApacheLuceneSearchPhrasePositions_nextPosition(self);
}

- (jboolean)nextPosition {
  return OrgApacheLuceneSearchPhrasePositions_nextPosition(self);
}

- (NSString *)description {
  NSString *s = JreStrcat("$I$I$I", @"o:", offset_, @" p:", position_, @" c:", count_);
  if (rptGroup_ >= 0) {
    JreStrAppend(&s, "$I$I", @" rpt:", rptGroup_, @",i", rptInd_);
  }
  return s;
}

- (void)dealloc {
  RELEASE_(postings_);
  RELEASE_(next_);
  RELEASE_(terms_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x10, -1, -1, 1, -1, -1, -1 },
    { NULL, "Z", 0x10, -1, -1, 1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgApacheLuceneIndexPostingsEnum:withInt:withInt:withOrgApacheLuceneIndexTermArray:);
  methods[1].selector = @selector(firstPosition);
  methods[2].selector = @selector(nextPosition);
  methods[3].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "position_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "count_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "offset_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "ord_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "postings_", "LOrgApacheLuceneIndexPostingsEnum;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "next_", "LOrgApacheLuceneSearchPhrasePositions;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "rptGroup_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "rptInd_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "terms_", "[LOrgApacheLuceneIndexTerm;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexPostingsEnum;II[LOrgApacheLuceneIndexTerm;", "LJavaIoIOException;", "toString" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchPhrasePositions = { "PhrasePositions", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x10, 4, 9, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchPhrasePositions;
}

@end

void OrgApacheLuceneSearchPhrasePositions_initPackagePrivateWithOrgApacheLuceneIndexPostingsEnum_withInt_withInt_withOrgApacheLuceneIndexTermArray_(OrgApacheLuceneSearchPhrasePositions *self, OrgApacheLuceneIndexPostingsEnum *postings, jint o, jint ord, IOSObjectArray *terms) {
  NSObject_init(self);
  self->rptGroup_ = -1;
  JreStrongAssign(&self->postings_, postings);
  self->offset_ = o;
  self->ord_ = ord;
  JreStrongAssign(&self->terms_, terms);
}

OrgApacheLuceneSearchPhrasePositions *new_OrgApacheLuceneSearchPhrasePositions_initPackagePrivateWithOrgApacheLuceneIndexPostingsEnum_withInt_withInt_withOrgApacheLuceneIndexTermArray_(OrgApacheLuceneIndexPostingsEnum *postings, jint o, jint ord, IOSObjectArray *terms) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchPhrasePositions, initPackagePrivateWithOrgApacheLuceneIndexPostingsEnum_withInt_withInt_withOrgApacheLuceneIndexTermArray_, postings, o, ord, terms)
}

OrgApacheLuceneSearchPhrasePositions *create_OrgApacheLuceneSearchPhrasePositions_initPackagePrivateWithOrgApacheLuceneIndexPostingsEnum_withInt_withInt_withOrgApacheLuceneIndexTermArray_(OrgApacheLuceneIndexPostingsEnum *postings, jint o, jint ord, IOSObjectArray *terms) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchPhrasePositions, initPackagePrivateWithOrgApacheLuceneIndexPostingsEnum_withInt_withInt_withOrgApacheLuceneIndexTermArray_, postings, o, ord, terms)
}

jboolean OrgApacheLuceneSearchPhrasePositions_nextPosition(OrgApacheLuceneSearchPhrasePositions *self) {
  if (self->count_-- > 0) {
    self->position_ = [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(self->postings_)) nextPosition] - self->offset_;
    return true;
  }
  else return false;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchPhrasePositions)
