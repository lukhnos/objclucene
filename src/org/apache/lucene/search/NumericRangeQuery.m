//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/NumericRangeQuery.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Comparable.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/StringBuilder.h"
#include "java/util/LinkedList.h"
#include "org/apache/lucene/document/FieldType.h"
#include "org/apache/lucene/index/FilteredTermsEnum.h"
#include "org/apache/lucene/index/Terms.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/search/MultiTermQuery.h"
#include "org/apache/lucene/search/NumericRangeQuery.h"
#include "org/apache/lucene/util/AttributeSource.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/NumericUtils.h"
#include "org/apache/lucene/util/ToStringUtils.h"
#include "org/lukhnos/portmobile/util/Objects.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/NumericRangeQuery must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchNumericRangeQuery ()

- (instancetype)initWithNSString:(NSString *)field
                         withInt:(jint)precisionStep
withOrgApacheLuceneDocumentFieldType_NumericType:(OrgApacheLuceneDocumentFieldType_NumericType *)dataType
                    withNSNumber:(NSNumber *)min
                    withNSNumber:(NSNumber *)max
                     withBoolean:(jboolean)minInclusive
                     withBoolean:(jboolean)maxInclusive;

@end

__attribute__((unused)) static void OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentFieldType_NumericType_withNSNumber_withNSNumber_withBoolean_withBoolean_(OrgApacheLuceneSearchNumericRangeQuery *self, NSString *field, jint precisionStep, OrgApacheLuceneDocumentFieldType_NumericType *dataType, NSNumber *min, NSNumber *max, jboolean minInclusive, jboolean maxInclusive);

__attribute__((unused)) static OrgApacheLuceneSearchNumericRangeQuery *new_OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentFieldType_NumericType_withNSNumber_withNSNumber_withBoolean_withBoolean_(NSString *field, jint precisionStep, OrgApacheLuceneDocumentFieldType_NumericType *dataType, NSNumber *min, NSNumber *max, jboolean minInclusive, jboolean maxInclusive) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchNumericRangeQuery *create_OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentFieldType_NumericType_withNSNumber_withNSNumber_withBoolean_withBoolean_(NSString *field, jint precisionStep, OrgApacheLuceneDocumentFieldType_NumericType *dataType, NSNumber *min, NSNumber *max, jboolean minInclusive, jboolean maxInclusive);

/*!
 @brief Subclass of FilteredTermsEnum for enumerating all terms that match the
  sub-ranges for trie range queries, using flex API.
 <p>
  WARNING: This term enumeration is not guaranteed to be always ordered by 
 <code>Term.compareTo</code>.
  The ordering depends on how <code>NumericUtils.splitLongRange</code> and 
 <code>NumericUtils.splitIntRange</code> generates the sub-ranges. For 
 <code>MultiTermQuery</code> ordering is not relevant.
 */
@interface OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum : OrgApacheLuceneIndexFilteredTermsEnum {
 @public
  OrgApacheLuceneUtilBytesRef *currentLowerBound_;
  OrgApacheLuceneUtilBytesRef *currentUpperBound_;
  JavaUtilLinkedList *rangeBounds_;
}

- (instancetype)initWithOrgApacheLuceneSearchNumericRangeQuery:(OrgApacheLuceneSearchNumericRangeQuery *)outer$
                             withOrgApacheLuceneIndexTermsEnum:(OrgApacheLuceneIndexTermsEnum *)tenum;

- (void)nextRange;

- (OrgApacheLuceneUtilBytesRef *)nextSeekTermWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term;

- (OrgApacheLuceneIndexFilteredTermsEnum_AcceptStatus *)acceptWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum, currentLowerBound_, OrgApacheLuceneUtilBytesRef *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum, currentUpperBound_, OrgApacheLuceneUtilBytesRef *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum, rangeBounds_, JavaUtilLinkedList *)

__attribute__((unused)) static void OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_initWithOrgApacheLuceneSearchNumericRangeQuery_withOrgApacheLuceneIndexTermsEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *self, OrgApacheLuceneSearchNumericRangeQuery *outer$, OrgApacheLuceneIndexTermsEnum *tenum);

__attribute__((unused)) static OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *new_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_initWithOrgApacheLuceneSearchNumericRangeQuery_withOrgApacheLuceneIndexTermsEnum_(OrgApacheLuceneSearchNumericRangeQuery *outer$, OrgApacheLuceneIndexTermsEnum *tenum) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *create_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_initWithOrgApacheLuceneSearchNumericRangeQuery_withOrgApacheLuceneIndexTermsEnum_(OrgApacheLuceneSearchNumericRangeQuery *outer$, OrgApacheLuceneIndexTermsEnum *tenum);

__attribute__((unused)) static void OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_nextRange(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum)

@interface OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_1 : OrgApacheLuceneUtilNumericUtils_LongRangeBuilder {
 @public
  OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *this$0_;
}

- (instancetype)initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum:(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *)outer$;

- (void)addRangeWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)minPrefixCoded
                withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)maxPrefixCoded;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_1)

__attribute__((unused)) static void OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_1_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_1 *self, OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *outer$);

__attribute__((unused)) static OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_1 *new_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_1_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_1 *create_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_1_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *outer$);

@interface OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_2 : OrgApacheLuceneUtilNumericUtils_IntRangeBuilder {
 @public
  OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *this$0_;
}

- (instancetype)initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum:(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *)outer$;

- (void)addRangeWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)minPrefixCoded
                withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)maxPrefixCoded;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_2)

__attribute__((unused)) static void OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_2_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_2 *self, OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *outer$);

__attribute__((unused)) static OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_2 *new_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_2_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_2 *create_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_2_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *outer$);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchNumericRangeQuery)

jlong OrgApacheLuceneSearchNumericRangeQuery_LONG_NEGATIVE_INFINITY;
jlong OrgApacheLuceneSearchNumericRangeQuery_LONG_POSITIVE_INFINITY;
jint OrgApacheLuceneSearchNumericRangeQuery_INT_NEGATIVE_INFINITY;
jint OrgApacheLuceneSearchNumericRangeQuery_INT_POSITIVE_INFINITY;

@implementation OrgApacheLuceneSearchNumericRangeQuery

+ (jlong)LONG_NEGATIVE_INFINITY {
  return OrgApacheLuceneSearchNumericRangeQuery_LONG_NEGATIVE_INFINITY;
}

+ (jlong)LONG_POSITIVE_INFINITY {
  return OrgApacheLuceneSearchNumericRangeQuery_LONG_POSITIVE_INFINITY;
}

+ (jint)INT_NEGATIVE_INFINITY {
  return OrgApacheLuceneSearchNumericRangeQuery_INT_NEGATIVE_INFINITY;
}

+ (jint)INT_POSITIVE_INFINITY {
  return OrgApacheLuceneSearchNumericRangeQuery_INT_POSITIVE_INFINITY;
}

- (instancetype)initWithNSString:(NSString *)field
                         withInt:(jint)precisionStep
withOrgApacheLuceneDocumentFieldType_NumericType:(OrgApacheLuceneDocumentFieldType_NumericType *)dataType
                    withNSNumber:(NSNumber *)min
                    withNSNumber:(NSNumber *)max
                     withBoolean:(jboolean)minInclusive
                     withBoolean:(jboolean)maxInclusive {
  OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentFieldType_NumericType_withNSNumber_withNSNumber_withBoolean_withBoolean_(self, field, precisionStep, dataType, min, max, minInclusive, maxInclusive);
  return self;
}

+ (OrgApacheLuceneSearchNumericRangeQuery *)newLongRangeWithNSString:(NSString *)field
                                                             withInt:(jint)precisionStep
                                                    withJavaLangLong:(JavaLangLong *)min
                                                    withJavaLangLong:(JavaLangLong *)max
                                                         withBoolean:(jboolean)minInclusive
                                                         withBoolean:(jboolean)maxInclusive {
  return OrgApacheLuceneSearchNumericRangeQuery_newLongRangeWithNSString_withInt_withJavaLangLong_withJavaLangLong_withBoolean_withBoolean_(field, precisionStep, min, max, minInclusive, maxInclusive);
}

+ (OrgApacheLuceneSearchNumericRangeQuery *)newLongRangeWithNSString:(NSString *)field
                                                    withJavaLangLong:(JavaLangLong *)min
                                                    withJavaLangLong:(JavaLangLong *)max
                                                         withBoolean:(jboolean)minInclusive
                                                         withBoolean:(jboolean)maxInclusive {
  return OrgApacheLuceneSearchNumericRangeQuery_newLongRangeWithNSString_withJavaLangLong_withJavaLangLong_withBoolean_withBoolean_(field, min, max, minInclusive, maxInclusive);
}

+ (OrgApacheLuceneSearchNumericRangeQuery *)newIntRangeWithNSString:(NSString *)field
                                                            withInt:(jint)precisionStep
                                                withJavaLangInteger:(JavaLangInteger *)min
                                                withJavaLangInteger:(JavaLangInteger *)max
                                                        withBoolean:(jboolean)minInclusive
                                                        withBoolean:(jboolean)maxInclusive {
  return OrgApacheLuceneSearchNumericRangeQuery_newIntRangeWithNSString_withInt_withJavaLangInteger_withJavaLangInteger_withBoolean_withBoolean_(field, precisionStep, min, max, minInclusive, maxInclusive);
}

+ (OrgApacheLuceneSearchNumericRangeQuery *)newIntRangeWithNSString:(NSString *)field
                                                withJavaLangInteger:(JavaLangInteger *)min
                                                withJavaLangInteger:(JavaLangInteger *)max
                                                        withBoolean:(jboolean)minInclusive
                                                        withBoolean:(jboolean)maxInclusive {
  return OrgApacheLuceneSearchNumericRangeQuery_newIntRangeWithNSString_withJavaLangInteger_withJavaLangInteger_withBoolean_withBoolean_(field, min, max, minInclusive, maxInclusive);
}

+ (OrgApacheLuceneSearchNumericRangeQuery *)newDoubleRangeWithNSString:(NSString *)field
                                                               withInt:(jint)precisionStep
                                                    withJavaLangDouble:(JavaLangDouble *)min
                                                    withJavaLangDouble:(JavaLangDouble *)max
                                                           withBoolean:(jboolean)minInclusive
                                                           withBoolean:(jboolean)maxInclusive {
  return OrgApacheLuceneSearchNumericRangeQuery_newDoubleRangeWithNSString_withInt_withJavaLangDouble_withJavaLangDouble_withBoolean_withBoolean_(field, precisionStep, min, max, minInclusive, maxInclusive);
}

+ (OrgApacheLuceneSearchNumericRangeQuery *)newDoubleRangeWithNSString:(NSString *)field
                                                    withJavaLangDouble:(JavaLangDouble *)min
                                                    withJavaLangDouble:(JavaLangDouble *)max
                                                           withBoolean:(jboolean)minInclusive
                                                           withBoolean:(jboolean)maxInclusive {
  return OrgApacheLuceneSearchNumericRangeQuery_newDoubleRangeWithNSString_withJavaLangDouble_withJavaLangDouble_withBoolean_withBoolean_(field, min, max, minInclusive, maxInclusive);
}

+ (OrgApacheLuceneSearchNumericRangeQuery *)newFloatRangeWithNSString:(NSString *)field
                                                              withInt:(jint)precisionStep
                                                    withJavaLangFloat:(JavaLangFloat *)min
                                                    withJavaLangFloat:(JavaLangFloat *)max
                                                          withBoolean:(jboolean)minInclusive
                                                          withBoolean:(jboolean)maxInclusive {
  return OrgApacheLuceneSearchNumericRangeQuery_newFloatRangeWithNSString_withInt_withJavaLangFloat_withJavaLangFloat_withBoolean_withBoolean_(field, precisionStep, min, max, minInclusive, maxInclusive);
}

+ (OrgApacheLuceneSearchNumericRangeQuery *)newFloatRangeWithNSString:(NSString *)field
                                                    withJavaLangFloat:(JavaLangFloat *)min
                                                    withJavaLangFloat:(JavaLangFloat *)max
                                                          withBoolean:(jboolean)minInclusive
                                                          withBoolean:(jboolean)maxInclusive {
  return OrgApacheLuceneSearchNumericRangeQuery_newFloatRangeWithNSString_withJavaLangFloat_withJavaLangFloat_withBoolean_withBoolean_(field, min, max, minInclusive, maxInclusive);
}

- (OrgApacheLuceneIndexTermsEnum *)getTermsEnumWithOrgApacheLuceneIndexTerms:(OrgApacheLuceneIndexTerms *)terms
                                      withOrgApacheLuceneUtilAttributeSource:(OrgApacheLuceneUtilAttributeSource *)atts {
  if (min_ != nil && max_ != nil && [((id<JavaLangComparable>) cast_check(min_, JavaLangComparable_class_())) compareToWithId:max_] > 0) {
    return JreLoadStatic(OrgApacheLuceneIndexTermsEnum, EMPTY);
  }
  return create_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_initWithOrgApacheLuceneSearchNumericRangeQuery_withOrgApacheLuceneIndexTermsEnum_(self, [((OrgApacheLuceneIndexTerms *) nil_chk(terms)) iterator]);
}

- (jboolean)includesMin {
  return minInclusive_;
}

- (jboolean)includesMax {
  return maxInclusive_;
}

- (NSNumber *)getMin {
  return min_;
}

- (NSNumber *)getMax {
  return max_;
}

- (jint)getPrecisionStep {
  return precisionStep_;
}

- (NSString *)toStringWithNSString:(NSString *)field {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  if (![((NSString *) nil_chk([self getField])) isEqual:field]) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:[self getField]])) appendWithChar:':'];
  return [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithChar:minInclusive_ ? '[' : '{'])) appendWithNSString:(min_ == nil) ? @"*" : [((NSNumber *) nil_chk(min_)) description]])) appendWithNSString:@" TO "])) appendWithNSString:(max_ == nil) ? @"*" : [((NSNumber *) nil_chk(max_)) description]])) appendWithChar:maxInclusive_ ? ']' : '}'])) appendWithNSString:OrgApacheLuceneUtilToStringUtils_boostWithFloat_([self getBoost])])) description];
}

- (jboolean)isEqual:(id)o {
  if (JreObjectEqualsEquals(o, self)) return true;
  if (![super isEqual:o]) return false;
  if ([o isKindOfClass:[OrgApacheLuceneSearchNumericRangeQuery class]]) {
    OrgApacheLuceneSearchNumericRangeQuery *q = (OrgApacheLuceneSearchNumericRangeQuery *) o;
    return ((((OrgApacheLuceneSearchNumericRangeQuery *) nil_chk(q))->min_ == nil ? min_ == nil : [q->min_ isEqual:min_]) && (q->max_ == nil ? max_ == nil : [q->max_ isEqual:max_]) && minInclusive_ == q->minInclusive_ && maxInclusive_ == q->maxInclusive_ && precisionStep_ == q->precisionStep_);
  }
  return false;
}

- (NSUInteger)hash {
  jint hash_ = ((jint) [super hash]);
  hash_ += precisionStep_ ^ (jint) 0x64365465;
  if (min_ != nil) hash_ += ((jint) [min_ hash]) ^ (jint) 0x14fa55fb;
  if (max_ != nil) hash_ += ((jint) [max_ hash]) ^ (jint) 0x733fa5fe;
  return hash_ + (((jint) [JavaLangBoolean_valueOfWithBoolean_(minInclusive_) hash]) ^ (jint) 0x14fa55fb) + (((jint) [JavaLangBoolean_valueOfWithBoolean_(maxInclusive_) hash]) ^ (jint) 0x733fa5fe);
}

- (void)dealloc {
  RELEASE_(dataType_);
  RELEASE_(min_);
  RELEASE_(max_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, 1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchNumericRangeQuery;", 0x9, 2, 3, -1, 4, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchNumericRangeQuery;", 0x9, 2, 5, -1, 6, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchNumericRangeQuery;", 0x9, 7, 8, -1, 9, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchNumericRangeQuery;", 0x9, 7, 10, -1, 11, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchNumericRangeQuery;", 0x9, 12, 13, -1, 14, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchNumericRangeQuery;", 0x9, 12, 15, -1, 16, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchNumericRangeQuery;", 0x9, 17, 18, -1, 19, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchNumericRangeQuery;", 0x9, 17, 20, -1, 21, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexTermsEnum;", 0x4, 22, 23, 24, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x1, -1, -1, -1, 25, -1, -1 },
    { NULL, "LNSNumber;", 0x1, -1, -1, -1, 25, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 26, 27, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, 28, 29, -1, -1, -1, -1 },
    { NULL, "I", 0x11, 30, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withInt:withOrgApacheLuceneDocumentFieldType_NumericType:withNSNumber:withNSNumber:withBoolean:withBoolean:);
  methods[1].selector = @selector(newLongRangeWithNSString:withInt:withJavaLangLong:withJavaLangLong:withBoolean:withBoolean:);
  methods[2].selector = @selector(newLongRangeWithNSString:withJavaLangLong:withJavaLangLong:withBoolean:withBoolean:);
  methods[3].selector = @selector(newIntRangeWithNSString:withInt:withJavaLangInteger:withJavaLangInteger:withBoolean:withBoolean:);
  methods[4].selector = @selector(newIntRangeWithNSString:withJavaLangInteger:withJavaLangInteger:withBoolean:withBoolean:);
  methods[5].selector = @selector(newDoubleRangeWithNSString:withInt:withJavaLangDouble:withJavaLangDouble:withBoolean:withBoolean:);
  methods[6].selector = @selector(newDoubleRangeWithNSString:withJavaLangDouble:withJavaLangDouble:withBoolean:withBoolean:);
  methods[7].selector = @selector(newFloatRangeWithNSString:withInt:withJavaLangFloat:withJavaLangFloat:withBoolean:withBoolean:);
  methods[8].selector = @selector(newFloatRangeWithNSString:withJavaLangFloat:withJavaLangFloat:withBoolean:withBoolean:);
  methods[9].selector = @selector(getTermsEnumWithOrgApacheLuceneIndexTerms:withOrgApacheLuceneUtilAttributeSource:);
  methods[10].selector = @selector(includesMin);
  methods[11].selector = @selector(includesMax);
  methods[12].selector = @selector(getMin);
  methods[13].selector = @selector(getMax);
  methods[14].selector = @selector(getPrecisionStep);
  methods[15].selector = @selector(toStringWithNSString:);
  methods[16].selector = @selector(isEqual:);
  methods[17].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "precisionStep_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "dataType_", "LOrgApacheLuceneDocumentFieldType_NumericType;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "min_", "LNSNumber;", .constantValue.asLong = 0, 0x10, -1, -1, 31, -1 },
    { "max_", "LNSNumber;", .constantValue.asLong = 0, 0x10, -1, -1, 31, -1 },
    { "minInclusive_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "maxInclusive_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "LONG_NEGATIVE_INFINITY", "J", .constantValue.asLong = 0, 0x18, -1, 32, -1, -1 },
    { "LONG_POSITIVE_INFINITY", "J", .constantValue.asLong = 0, 0x18, -1, 33, -1, -1 },
    { "INT_NEGATIVE_INFINITY", "I", .constantValue.asLong = 0, 0x18, -1, 34, -1, -1 },
    { "INT_POSITIVE_INFINITY", "I", .constantValue.asLong = 0, 0x18, -1, 35, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;ILOrgApacheLuceneDocumentFieldType_NumericType;LNSNumber;LNSNumber;ZZ", "(Ljava/lang/String;ILorg/apache/lucene/document/FieldType$NumericType;TT;TT;ZZ)V", "newLongRange", "LNSString;ILJavaLangLong;LJavaLangLong;ZZ", "(Ljava/lang/String;ILjava/lang/Long;Ljava/lang/Long;ZZ)Lorg/apache/lucene/search/NumericRangeQuery<Ljava/lang/Long;>;", "LNSString;LJavaLangLong;LJavaLangLong;ZZ", "(Ljava/lang/String;Ljava/lang/Long;Ljava/lang/Long;ZZ)Lorg/apache/lucene/search/NumericRangeQuery<Ljava/lang/Long;>;", "newIntRange", "LNSString;ILJavaLangInteger;LJavaLangInteger;ZZ", "(Ljava/lang/String;ILjava/lang/Integer;Ljava/lang/Integer;ZZ)Lorg/apache/lucene/search/NumericRangeQuery<Ljava/lang/Integer;>;", "LNSString;LJavaLangInteger;LJavaLangInteger;ZZ", "(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;ZZ)Lorg/apache/lucene/search/NumericRangeQuery<Ljava/lang/Integer;>;", "newDoubleRange", "LNSString;ILJavaLangDouble;LJavaLangDouble;ZZ", "(Ljava/lang/String;ILjava/lang/Double;Ljava/lang/Double;ZZ)Lorg/apache/lucene/search/NumericRangeQuery<Ljava/lang/Double;>;", "LNSString;LJavaLangDouble;LJavaLangDouble;ZZ", "(Ljava/lang/String;Ljava/lang/Double;Ljava/lang/Double;ZZ)Lorg/apache/lucene/search/NumericRangeQuery<Ljava/lang/Double;>;", "newFloatRange", "LNSString;ILJavaLangFloat;LJavaLangFloat;ZZ", "(Ljava/lang/String;ILjava/lang/Float;Ljava/lang/Float;ZZ)Lorg/apache/lucene/search/NumericRangeQuery<Ljava/lang/Float;>;", "LNSString;LJavaLangFloat;LJavaLangFloat;ZZ", "(Ljava/lang/String;Ljava/lang/Float;Ljava/lang/Float;ZZ)Lorg/apache/lucene/search/NumericRangeQuery<Ljava/lang/Float;>;", "getTermsEnum", "LOrgApacheLuceneIndexTerms;LOrgApacheLuceneUtilAttributeSource;", "LJavaIoIOException;", "()TT;", "toString", "LNSString;", "equals", "LNSObject;", "hashCode", "TT;", &OrgApacheLuceneSearchNumericRangeQuery_LONG_NEGATIVE_INFINITY, &OrgApacheLuceneSearchNumericRangeQuery_LONG_POSITIVE_INFINITY, &OrgApacheLuceneSearchNumericRangeQuery_INT_NEGATIVE_INFINITY, &OrgApacheLuceneSearchNumericRangeQuery_INT_POSITIVE_INFINITY, "LOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum;", "<T:Ljava/lang/Number;>Lorg/apache/lucene/search/MultiTermQuery;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchNumericRangeQuery = { "NumericRangeQuery", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x11, 18, 10, -1, 36, -1, 37, -1 };
  return &_OrgApacheLuceneSearchNumericRangeQuery;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchNumericRangeQuery class]) {
    OrgApacheLuceneSearchNumericRangeQuery_LONG_NEGATIVE_INFINITY = OrgApacheLuceneUtilNumericUtils_doubleToSortableLongWithDouble_(JavaLangDouble_NEGATIVE_INFINITY);
    OrgApacheLuceneSearchNumericRangeQuery_LONG_POSITIVE_INFINITY = OrgApacheLuceneUtilNumericUtils_doubleToSortableLongWithDouble_(JavaLangDouble_POSITIVE_INFINITY);
    OrgApacheLuceneSearchNumericRangeQuery_INT_NEGATIVE_INFINITY = OrgApacheLuceneUtilNumericUtils_floatToSortableIntWithFloat_(JavaLangFloat_NEGATIVE_INFINITY);
    OrgApacheLuceneSearchNumericRangeQuery_INT_POSITIVE_INFINITY = OrgApacheLuceneUtilNumericUtils_floatToSortableIntWithFloat_(JavaLangFloat_POSITIVE_INFINITY);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchNumericRangeQuery)
  }
}

@end

void OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentFieldType_NumericType_withNSNumber_withNSNumber_withBoolean_withBoolean_(OrgApacheLuceneSearchNumericRangeQuery *self, NSString *field, jint precisionStep, OrgApacheLuceneDocumentFieldType_NumericType *dataType, NSNumber *min, NSNumber *max, jboolean minInclusive, jboolean maxInclusive) {
  OrgApacheLuceneSearchMultiTermQuery_initWithNSString_(self, field);
  if (precisionStep < 1) @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"precisionStep must be >=1");
  self->precisionStep_ = precisionStep;
  JreStrongAssign(&self->dataType_, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_withNSString_(dataType, @"NumericType must not be null"));
  JreStrongAssign(&self->min_, min);
  JreStrongAssign(&self->max_, max);
  self->minInclusive_ = minInclusive;
  self->maxInclusive_ = maxInclusive;
}

OrgApacheLuceneSearchNumericRangeQuery *new_OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentFieldType_NumericType_withNSNumber_withNSNumber_withBoolean_withBoolean_(NSString *field, jint precisionStep, OrgApacheLuceneDocumentFieldType_NumericType *dataType, NSNumber *min, NSNumber *max, jboolean minInclusive, jboolean maxInclusive) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchNumericRangeQuery, initWithNSString_withInt_withOrgApacheLuceneDocumentFieldType_NumericType_withNSNumber_withNSNumber_withBoolean_withBoolean_, field, precisionStep, dataType, min, max, minInclusive, maxInclusive)
}

OrgApacheLuceneSearchNumericRangeQuery *create_OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentFieldType_NumericType_withNSNumber_withNSNumber_withBoolean_withBoolean_(NSString *field, jint precisionStep, OrgApacheLuceneDocumentFieldType_NumericType *dataType, NSNumber *min, NSNumber *max, jboolean minInclusive, jboolean maxInclusive) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchNumericRangeQuery, initWithNSString_withInt_withOrgApacheLuceneDocumentFieldType_NumericType_withNSNumber_withNSNumber_withBoolean_withBoolean_, field, precisionStep, dataType, min, max, minInclusive, maxInclusive)
}

OrgApacheLuceneSearchNumericRangeQuery *OrgApacheLuceneSearchNumericRangeQuery_newLongRangeWithNSString_withInt_withJavaLangLong_withJavaLangLong_withBoolean_withBoolean_(NSString *field, jint precisionStep, JavaLangLong *min, JavaLangLong *max, jboolean minInclusive, jboolean maxInclusive) {
  OrgApacheLuceneSearchNumericRangeQuery_initialize();
  return create_OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentFieldType_NumericType_withNSNumber_withNSNumber_withBoolean_withBoolean_(field, precisionStep, JreLoadEnum(OrgApacheLuceneDocumentFieldType_NumericType, LONG), min, max, minInclusive, maxInclusive);
}

OrgApacheLuceneSearchNumericRangeQuery *OrgApacheLuceneSearchNumericRangeQuery_newLongRangeWithNSString_withJavaLangLong_withJavaLangLong_withBoolean_withBoolean_(NSString *field, JavaLangLong *min, JavaLangLong *max, jboolean minInclusive, jboolean maxInclusive) {
  OrgApacheLuceneSearchNumericRangeQuery_initialize();
  return create_OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentFieldType_NumericType_withNSNumber_withNSNumber_withBoolean_withBoolean_(field, OrgApacheLuceneUtilNumericUtils_PRECISION_STEP_DEFAULT, JreLoadEnum(OrgApacheLuceneDocumentFieldType_NumericType, LONG), min, max, minInclusive, maxInclusive);
}

OrgApacheLuceneSearchNumericRangeQuery *OrgApacheLuceneSearchNumericRangeQuery_newIntRangeWithNSString_withInt_withJavaLangInteger_withJavaLangInteger_withBoolean_withBoolean_(NSString *field, jint precisionStep, JavaLangInteger *min, JavaLangInteger *max, jboolean minInclusive, jboolean maxInclusive) {
  OrgApacheLuceneSearchNumericRangeQuery_initialize();
  return create_OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentFieldType_NumericType_withNSNumber_withNSNumber_withBoolean_withBoolean_(field, precisionStep, JreLoadEnum(OrgApacheLuceneDocumentFieldType_NumericType, INT), min, max, minInclusive, maxInclusive);
}

OrgApacheLuceneSearchNumericRangeQuery *OrgApacheLuceneSearchNumericRangeQuery_newIntRangeWithNSString_withJavaLangInteger_withJavaLangInteger_withBoolean_withBoolean_(NSString *field, JavaLangInteger *min, JavaLangInteger *max, jboolean minInclusive, jboolean maxInclusive) {
  OrgApacheLuceneSearchNumericRangeQuery_initialize();
  return create_OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentFieldType_NumericType_withNSNumber_withNSNumber_withBoolean_withBoolean_(field, OrgApacheLuceneUtilNumericUtils_PRECISION_STEP_DEFAULT_32, JreLoadEnum(OrgApacheLuceneDocumentFieldType_NumericType, INT), min, max, minInclusive, maxInclusive);
}

OrgApacheLuceneSearchNumericRangeQuery *OrgApacheLuceneSearchNumericRangeQuery_newDoubleRangeWithNSString_withInt_withJavaLangDouble_withJavaLangDouble_withBoolean_withBoolean_(NSString *field, jint precisionStep, JavaLangDouble *min, JavaLangDouble *max, jboolean minInclusive, jboolean maxInclusive) {
  OrgApacheLuceneSearchNumericRangeQuery_initialize();
  return create_OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentFieldType_NumericType_withNSNumber_withNSNumber_withBoolean_withBoolean_(field, precisionStep, JreLoadEnum(OrgApacheLuceneDocumentFieldType_NumericType, DOUBLE), min, max, minInclusive, maxInclusive);
}

OrgApacheLuceneSearchNumericRangeQuery *OrgApacheLuceneSearchNumericRangeQuery_newDoubleRangeWithNSString_withJavaLangDouble_withJavaLangDouble_withBoolean_withBoolean_(NSString *field, JavaLangDouble *min, JavaLangDouble *max, jboolean minInclusive, jboolean maxInclusive) {
  OrgApacheLuceneSearchNumericRangeQuery_initialize();
  return create_OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentFieldType_NumericType_withNSNumber_withNSNumber_withBoolean_withBoolean_(field, OrgApacheLuceneUtilNumericUtils_PRECISION_STEP_DEFAULT, JreLoadEnum(OrgApacheLuceneDocumentFieldType_NumericType, DOUBLE), min, max, minInclusive, maxInclusive);
}

OrgApacheLuceneSearchNumericRangeQuery *OrgApacheLuceneSearchNumericRangeQuery_newFloatRangeWithNSString_withInt_withJavaLangFloat_withJavaLangFloat_withBoolean_withBoolean_(NSString *field, jint precisionStep, JavaLangFloat *min, JavaLangFloat *max, jboolean minInclusive, jboolean maxInclusive) {
  OrgApacheLuceneSearchNumericRangeQuery_initialize();
  return create_OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentFieldType_NumericType_withNSNumber_withNSNumber_withBoolean_withBoolean_(field, precisionStep, JreLoadEnum(OrgApacheLuceneDocumentFieldType_NumericType, FLOAT), min, max, minInclusive, maxInclusive);
}

OrgApacheLuceneSearchNumericRangeQuery *OrgApacheLuceneSearchNumericRangeQuery_newFloatRangeWithNSString_withJavaLangFloat_withJavaLangFloat_withBoolean_withBoolean_(NSString *field, JavaLangFloat *min, JavaLangFloat *max, jboolean minInclusive, jboolean maxInclusive) {
  OrgApacheLuceneSearchNumericRangeQuery_initialize();
  return create_OrgApacheLuceneSearchNumericRangeQuery_initWithNSString_withInt_withOrgApacheLuceneDocumentFieldType_NumericType_withNSNumber_withNSNumber_withBoolean_withBoolean_(field, OrgApacheLuceneUtilNumericUtils_PRECISION_STEP_DEFAULT_32, JreLoadEnum(OrgApacheLuceneDocumentFieldType_NumericType, FLOAT), min, max, minInclusive, maxInclusive);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchNumericRangeQuery)

@implementation OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum

- (instancetype)initWithOrgApacheLuceneSearchNumericRangeQuery:(OrgApacheLuceneSearchNumericRangeQuery *)outer$
                             withOrgApacheLuceneIndexTermsEnum:(OrgApacheLuceneIndexTermsEnum *)tenum {
  OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_initWithOrgApacheLuceneSearchNumericRangeQuery_withOrgApacheLuceneIndexTermsEnum_(self, outer$, tenum);
  return self;
}

- (void)nextRange {
  OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_nextRange(self);
}

- (OrgApacheLuceneUtilBytesRef *)nextSeekTermWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term {
  while ([((JavaUtilLinkedList *) nil_chk(rangeBounds_)) size] >= 2) {
    OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_nextRange(self);
    if (term != nil && [term compareToWithId:currentUpperBound_] > 0) continue;
    return (term != nil && [term compareToWithId:currentLowerBound_] > 0) ? term : currentLowerBound_;
  }
  JreAssert([rangeBounds_ isEmpty], @"org/apache/lucene/search/NumericRangeQuery.java:506 condition failed: assert rangeBounds.isEmpty();");
  JreStrongAssign(&currentLowerBound_, JreStrongAssign(&currentUpperBound_, nil));
  return nil;
}

- (OrgApacheLuceneIndexFilteredTermsEnum_AcceptStatus *)acceptWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term {
  while (currentUpperBound_ == nil || [((OrgApacheLuceneUtilBytesRef *) nil_chk(term)) compareToWithId:currentUpperBound_] > 0) {
    if ([((JavaUtilLinkedList *) nil_chk(rangeBounds_)) isEmpty]) return JreLoadEnum(OrgApacheLuceneIndexFilteredTermsEnum_AcceptStatus, END);
    if ([((OrgApacheLuceneUtilBytesRef *) nil_chk(term)) compareToWithId:[rangeBounds_ getFirst]] < 0) return JreLoadEnum(OrgApacheLuceneIndexFilteredTermsEnum_AcceptStatus, NO_AND_SEEK);
    OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_nextRange(self);
  }
  return JreLoadEnum(OrgApacheLuceneIndexFilteredTermsEnum_AcceptStatus, YES);
}

- (void)dealloc {
  RELEASE_(currentLowerBound_);
  RELEASE_(currentUpperBound_);
  RELEASE_(rangeBounds_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRef;", 0x14, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneIndexFilteredTermsEnum_AcceptStatus;", 0x14, 3, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchNumericRangeQuery:withOrgApacheLuceneIndexTermsEnum:);
  methods[1].selector = @selector(nextRange);
  methods[2].selector = @selector(nextSeekTermWithOrgApacheLuceneUtilBytesRef:);
  methods[3].selector = @selector(acceptWithOrgApacheLuceneUtilBytesRef:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "currentLowerBound_", "LOrgApacheLuceneUtilBytesRef;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "currentUpperBound_", "LOrgApacheLuceneUtilBytesRef;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "rangeBounds_", "LJavaUtilLinkedList;", .constantValue.asLong = 0, 0x12, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchNumericRangeQuery;LOrgApacheLuceneIndexTermsEnum;", "nextSeekTerm", "LOrgApacheLuceneUtilBytesRef;", "accept", "Ljava/util/LinkedList<Lorg/apache/lucene/util/BytesRef;>;", "LOrgApacheLuceneSearchNumericRangeQuery;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum = { "NumericRangeTermsEnum", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x12, 4, 3, 5, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum;
}

@end

void OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_initWithOrgApacheLuceneSearchNumericRangeQuery_withOrgApacheLuceneIndexTermsEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *self, OrgApacheLuceneSearchNumericRangeQuery *outer$, OrgApacheLuceneIndexTermsEnum *tenum) {
  OrgApacheLuceneIndexFilteredTermsEnum_initWithOrgApacheLuceneIndexTermsEnum_(self, tenum);
  JreStrongAssignAndConsume(&self->rangeBounds_, new_JavaUtilLinkedList_init());
  switch ([outer$->dataType_ ordinal]) {
    case OrgApacheLuceneDocumentFieldType_NumericType_Enum_LONG:
    case OrgApacheLuceneDocumentFieldType_NumericType_Enum_DOUBLE:
    {
      jlong minBound;
      if (outer$->dataType_ == JreLoadEnum(OrgApacheLuceneDocumentFieldType_NumericType, LONG)) {
        minBound = (outer$->min_ == nil) ? JavaLangLong_MIN_VALUE : [((NSNumber *) nil_chk(outer$->min_)) longLongValue];
      }
      else {
        JreAssert(outer$->dataType_ == JreLoadEnum(OrgApacheLuceneDocumentFieldType_NumericType, DOUBLE), @"org/apache/lucene/search/NumericRangeQuery.java:403 condition failed: assert dataType == NumericType.DOUBLE;");
        minBound = (outer$->min_ == nil) ? JreLoadStatic(OrgApacheLuceneSearchNumericRangeQuery, LONG_NEGATIVE_INFINITY) : OrgApacheLuceneUtilNumericUtils_doubleToSortableLongWithDouble_([((NSNumber *) nil_chk(outer$->min_)) doubleValue]);
      }
      if (!outer$->minInclusive_ && outer$->min_ != nil) {
        if (minBound == JavaLangLong_MAX_VALUE) break;
        minBound++;
      }
      jlong maxBound;
      if (outer$->dataType_ == JreLoadEnum(OrgApacheLuceneDocumentFieldType_NumericType, LONG)) {
        maxBound = (outer$->max_ == nil) ? JavaLangLong_MAX_VALUE : [((NSNumber *) nil_chk(outer$->max_)) longLongValue];
      }
      else {
        JreAssert(outer$->dataType_ == JreLoadEnum(OrgApacheLuceneDocumentFieldType_NumericType, DOUBLE), @"org/apache/lucene/search/NumericRangeQuery.java:417 condition failed: assert dataType == NumericType.DOUBLE;");
        maxBound = (outer$->max_ == nil) ? JreLoadStatic(OrgApacheLuceneSearchNumericRangeQuery, LONG_POSITIVE_INFINITY) : OrgApacheLuceneUtilNumericUtils_doubleToSortableLongWithDouble_([((NSNumber *) nil_chk(outer$->max_)) doubleValue]);
      }
      if (!outer$->maxInclusive_ && outer$->max_ != nil) {
        if (maxBound == JavaLangLong_MIN_VALUE) break;
        maxBound--;
      }
      OrgApacheLuceneUtilNumericUtils_splitLongRangeWithOrgApacheLuceneUtilNumericUtils_LongRangeBuilder_withInt_withLong_withLong_(create_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_1_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_(self), outer$->precisionStep_, minBound, maxBound);
      break;
    }
    case OrgApacheLuceneDocumentFieldType_NumericType_Enum_INT:
    case OrgApacheLuceneDocumentFieldType_NumericType_Enum_FLOAT:
    {
      jint minBound;
      if (outer$->dataType_ == JreLoadEnum(OrgApacheLuceneDocumentFieldType_NumericType, INT)) {
        minBound = (outer$->min_ == nil) ? JavaLangInteger_MIN_VALUE : [((NSNumber *) nil_chk(outer$->min_)) intValue];
      }
      else {
        JreAssert(outer$->dataType_ == JreLoadEnum(OrgApacheLuceneDocumentFieldType_NumericType, FLOAT), @"org/apache/lucene/search/NumericRangeQuery.java:443 condition failed: assert dataType == NumericType.FLOAT;");
        minBound = (outer$->min_ == nil) ? JreLoadStatic(OrgApacheLuceneSearchNumericRangeQuery, INT_NEGATIVE_INFINITY) : OrgApacheLuceneUtilNumericUtils_floatToSortableIntWithFloat_([((NSNumber *) nil_chk(outer$->min_)) floatValue]);
      }
      if (!outer$->minInclusive_ && outer$->min_ != nil) {
        if (minBound == JavaLangInteger_MAX_VALUE) break;
        minBound++;
      }
      jint maxBound;
      if (outer$->dataType_ == JreLoadEnum(OrgApacheLuceneDocumentFieldType_NumericType, INT)) {
        maxBound = (outer$->max_ == nil) ? JavaLangInteger_MAX_VALUE : [((NSNumber *) nil_chk(outer$->max_)) intValue];
      }
      else {
        JreAssert(outer$->dataType_ == JreLoadEnum(OrgApacheLuceneDocumentFieldType_NumericType, FLOAT), @"org/apache/lucene/search/NumericRangeQuery.java:457 condition failed: assert dataType == NumericType.FLOAT;");
        maxBound = (outer$->max_ == nil) ? JreLoadStatic(OrgApacheLuceneSearchNumericRangeQuery, INT_POSITIVE_INFINITY) : OrgApacheLuceneUtilNumericUtils_floatToSortableIntWithFloat_([((NSNumber *) nil_chk(outer$->max_)) floatValue]);
      }
      if (!outer$->maxInclusive_ && outer$->max_ != nil) {
        if (maxBound == JavaLangInteger_MIN_VALUE) break;
        maxBound--;
      }
      OrgApacheLuceneUtilNumericUtils_splitIntRangeWithOrgApacheLuceneUtilNumericUtils_IntRangeBuilder_withInt_withInt_withInt_(create_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_2_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_(self), outer$->precisionStep_, minBound, maxBound);
      break;
    }
    default:
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Invalid NumericType");
  }
}

OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *new_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_initWithOrgApacheLuceneSearchNumericRangeQuery_withOrgApacheLuceneIndexTermsEnum_(OrgApacheLuceneSearchNumericRangeQuery *outer$, OrgApacheLuceneIndexTermsEnum *tenum) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum, initWithOrgApacheLuceneSearchNumericRangeQuery_withOrgApacheLuceneIndexTermsEnum_, outer$, tenum)
}

OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *create_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_initWithOrgApacheLuceneSearchNumericRangeQuery_withOrgApacheLuceneIndexTermsEnum_(OrgApacheLuceneSearchNumericRangeQuery *outer$, OrgApacheLuceneIndexTermsEnum *tenum) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum, initWithOrgApacheLuceneSearchNumericRangeQuery_withOrgApacheLuceneIndexTermsEnum_, outer$, tenum)
}

void OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_nextRange(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *self) {
  JreAssert(JreIntMod([((JavaUtilLinkedList *) nil_chk(self->rangeBounds_)) size], 2) == 0, @"org/apache/lucene/search/NumericRangeQuery.java:483 condition failed: assert rangeBounds.size() % 2 == 0;");
  JreStrongAssign(&self->currentLowerBound_, [self->rangeBounds_ removeFirst]);
  JreAssert(self->currentUpperBound_ == nil || [self->currentUpperBound_ compareToWithId:self->currentLowerBound_] <= 0, @"The current upper bound must be <= the new lower bound");
  JreStrongAssign(&self->currentUpperBound_, [self->rangeBounds_ removeFirst]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum)

@implementation OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_1

- (instancetype)initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum:(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *)outer$ {
  OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_1_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_(self, outer$);
  return self;
}

- (void)addRangeWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)minPrefixCoded
                withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)maxPrefixCoded {
  [((JavaUtilLinkedList *) nil_chk(this$0_->rangeBounds_)) addWithId:minPrefixCoded];
  [this$0_->rangeBounds_ addWithId:maxPrefixCoded];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum:);
  methods[1].selector = @selector(addRangeWithOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneUtilBytesRef:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum;", "addRange", "LOrgApacheLuceneUtilBytesRef;LOrgApacheLuceneUtilBytesRef;", "initWithOrgApacheLuceneSearchNumericRangeQuery:withOrgApacheLuceneIndexTermsEnum:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_1 = { "", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x8010, 2, 1, 0, -1, 3, -1, -1 };
  return &_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_1;
}

@end

void OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_1_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_1 *self, OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneUtilNumericUtils_LongRangeBuilder_init(self);
}

OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_1 *new_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_1_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_1, initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_, outer$)
}

OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_1 *create_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_1_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_1, initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_, outer$)
}

@implementation OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_2

- (instancetype)initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum:(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *)outer$ {
  OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_2_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_(self, outer$);
  return self;
}

- (void)addRangeWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)minPrefixCoded
                withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)maxPrefixCoded {
  [((JavaUtilLinkedList *) nil_chk(this$0_->rangeBounds_)) addWithId:minPrefixCoded];
  [this$0_->rangeBounds_ addWithId:maxPrefixCoded];
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum:);
  methods[1].selector = @selector(addRangeWithOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneUtilBytesRef:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum;", "addRange", "LOrgApacheLuceneUtilBytesRef;LOrgApacheLuceneUtilBytesRef;", "initWithOrgApacheLuceneSearchNumericRangeQuery:withOrgApacheLuceneIndexTermsEnum:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_2 = { "", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x8010, 2, 1, 0, -1, 3, -1, -1 };
  return &_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_2;
}

@end

void OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_2_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_2 *self, OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneUtilNumericUtils_IntRangeBuilder_init(self);
}

OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_2 *new_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_2_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_2, initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_, outer$)
}

OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_2 *create_OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_2_initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_2, initWithOrgApacheLuceneSearchNumericRangeQuery_NumericRangeTermsEnum_, outer$)
}
