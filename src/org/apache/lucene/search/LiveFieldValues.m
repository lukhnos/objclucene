//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/LiveFieldValues.java
//

#include "J2ObjC_source.h"
#include "java/util/Map.h"
#include "java/util/concurrent/ConcurrentHashMap.h"
#include "org/apache/lucene/search/LiveFieldValues.h"
#include "org/apache/lucene/search/ReferenceManager.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/LiveFieldValues must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchLiveFieldValues () {
 @public
  volatile_id current_;
  volatile_id old_;
  OrgApacheLuceneSearchReferenceManager *mgr_;
  id missingValue_;
}

@end

J2OBJC_VOLATILE_FIELD_SETTER(OrgApacheLuceneSearchLiveFieldValues, current_, id<JavaUtilMap>)
J2OBJC_VOLATILE_FIELD_SETTER(OrgApacheLuceneSearchLiveFieldValues, old_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchLiveFieldValues, mgr_, OrgApacheLuceneSearchReferenceManager *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchLiveFieldValues, missingValue_, id)

@implementation OrgApacheLuceneSearchLiveFieldValues

- (instancetype)initWithOrgApacheLuceneSearchReferenceManager:(OrgApacheLuceneSearchReferenceManager *)mgr
                                                       withId:(id)missingValue {
  OrgApacheLuceneSearchLiveFieldValues_initWithOrgApacheLuceneSearchReferenceManager_withId_(self, mgr, missingValue);
  return self;
}

- (void)close {
  [((OrgApacheLuceneSearchReferenceManager *) nil_chk(mgr_)) removeListenerWithOrgApacheLuceneSearchReferenceManager_RefreshListener:self];
}

- (void)beforeRefresh {
  JreVolatileStrongAssign(&old_, JreLoadVolatileId(&current_));
  JreVolatileStrongAssign(&current_, create_JavaUtilConcurrentConcurrentHashMap_init());
}

- (void)afterRefreshWithBoolean:(jboolean)didRefresh {
  JreVolatileStrongAssign(&old_, create_JavaUtilConcurrentConcurrentHashMap_init());
}

- (void)addWithNSString:(NSString *)id_
                 withId:(id)value {
  [((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&current_))) putWithId:id_ withId:value];
}

- (void)delete__WithNSString:(NSString *)id_ {
  [((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&current_))) putWithId:id_ withId:missingValue_];
}

- (jint)size {
  return [((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&current_))) size] + [((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&old_))) size];
}

- (id)getWithNSString:(NSString *)id_ {
  id value = JreRetainedLocalValue([((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&current_))) getWithId:id_]);
  if (JreObjectEqualsEquals(value, missingValue_)) {
    return nil;
  }
  else if (value != nil) {
    return value;
  }
  else {
    value = [((id<JavaUtilMap>) nil_chk(JreLoadVolatileId(&old_))) getWithId:id_];
    if (JreObjectEqualsEquals(value, missingValue_)) {
      return nil;
    }
    else if (value != nil) {
      return value;
    }
    else {
      id s = JreRetainedLocalValue([((OrgApacheLuceneSearchReferenceManager *) nil_chk(mgr_)) acquire]);
      @try {
        return [self lookupFromSearcherWithId:s withNSString:id_];
      }
      @finally {
        [mgr_ release__WithId:s];
      }
    }
  }
}

- (id)lookupFromSearcherWithId:(id)s
                  withNSString:(NSString *)id_ {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)__javaClone:(OrgApacheLuceneSearchLiveFieldValues *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&current_, &original->current_);
  JreCloneVolatileStrong(&old_, &original->old_);
}

- (void)dealloc {
  JreReleaseVolatile(&current_);
  JreReleaseVolatile(&old_);
  RELEASE_(mgr_);
  RELEASE_(missingValue_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, 7, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 10, 9, 2, 11, -1, -1 },
    { NULL, "LNSObject;", 0x404, 12, 13, 2, 14, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchReferenceManager:withId:);
  methods[1].selector = @selector(close);
  methods[2].selector = @selector(beforeRefresh);
  methods[3].selector = @selector(afterRefreshWithBoolean:);
  methods[4].selector = @selector(addWithNSString:withId:);
  methods[5].selector = @selector(delete__WithNSString:);
  methods[6].selector = @selector(size);
  methods[7].selector = @selector(getWithNSString:);
  methods[8].selector = @selector(lookupFromSearcherWithId:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "current_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x42, -1, -1, 15, -1 },
    { "old_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x42, -1, -1, 15, -1 },
    { "mgr_", "LOrgApacheLuceneSearchReferenceManager;", .constantValue.asLong = 0, 0x12, -1, -1, 16, -1 },
    { "missingValue_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, 17, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchReferenceManager;LNSObject;", "(Lorg/apache/lucene/search/ReferenceManager<TS;>;TT;)V", "LJavaIoIOException;", "afterRefresh", "Z", "add", "LNSString;LNSObject;", "(Ljava/lang/String;TT;)V", "delete", "LNSString;", "get", "(Ljava/lang/String;)TT;", "lookupFromSearcher", "LNSObject;LNSString;", "(TS;Ljava/lang/String;)TT;", "Ljava/util/Map<Ljava/lang/String;TT;>;", "Lorg/apache/lucene/search/ReferenceManager<TS;>;", "TT;", "<S:Ljava/lang/Object;T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/lucene/search/ReferenceManager$RefreshListener;Ljava/io/Closeable;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchLiveFieldValues = { "LiveFieldValues", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x401, 9, 4, -1, -1, -1, 18, -1 };
  return &_OrgApacheLuceneSearchLiveFieldValues;
}

@end

void OrgApacheLuceneSearchLiveFieldValues_initWithOrgApacheLuceneSearchReferenceManager_withId_(OrgApacheLuceneSearchLiveFieldValues *self, OrgApacheLuceneSearchReferenceManager *mgr, id missingValue) {
  NSObject_init(self);
  JreVolatileStrongAssign(&self->current_, create_JavaUtilConcurrentConcurrentHashMap_init());
  JreVolatileStrongAssign(&self->old_, create_JavaUtilConcurrentConcurrentHashMap_init());
  JreStrongAssign(&self->missingValue_, missingValue);
  JreStrongAssign(&self->mgr_, mgr);
  [((OrgApacheLuceneSearchReferenceManager *) nil_chk(mgr)) addListenerWithOrgApacheLuceneSearchReferenceManager_RefreshListener:self];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchLiveFieldValues)
