//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/TermRangeFilter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "org/apache/lucene/search/MultiTermQueryWrapperFilter.h"
#include "org/apache/lucene/search/TermRangeFilter.h"
#include "org/apache/lucene/search/TermRangeQuery.h"
#include "org/apache/lucene/util/BytesRef.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/TermRangeFilter must not be compiled with ARC (-fobjc-arc)"
#endif

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneSearchTermRangeFilter__Annotations$0(void);

@implementation OrgApacheLuceneSearchTermRangeFilter

- (instancetype)initWithNSString:(NSString *)fieldName
 withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)lowerTerm
 withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)upperTerm
                     withBoolean:(jboolean)includeLower
                     withBoolean:(jboolean)includeUpper {
  OrgApacheLuceneSearchTermRangeFilter_initWithNSString_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_withBoolean_withBoolean_(self, fieldName, lowerTerm, upperTerm, includeLower, includeUpper);
  return self;
}

+ (OrgApacheLuceneSearchTermRangeFilter *)newStringRangeWithNSString:(NSString *)field
                                                        withNSString:(NSString *)lowerTerm
                                                        withNSString:(NSString *)upperTerm
                                                         withBoolean:(jboolean)includeLower
                                                         withBoolean:(jboolean)includeUpper {
  return OrgApacheLuceneSearchTermRangeFilter_newStringRangeWithNSString_withNSString_withNSString_withBoolean_withBoolean_(field, lowerTerm, upperTerm, includeLower, includeUpper);
}

+ (OrgApacheLuceneSearchTermRangeFilter *)LessWithNSString:(NSString *)fieldName
                           withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)upperTerm {
  return OrgApacheLuceneSearchTermRangeFilter_LessWithNSString_withOrgApacheLuceneUtilBytesRef_(fieldName, upperTerm);
}

+ (OrgApacheLuceneSearchTermRangeFilter *)MoreWithNSString:(NSString *)fieldName
                           withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)lowerTerm {
  return OrgApacheLuceneSearchTermRangeFilter_MoreWithNSString_withOrgApacheLuceneUtilBytesRef_(fieldName, lowerTerm);
}

- (OrgApacheLuceneUtilBytesRef *)getLowerTerm {
  return [((OrgApacheLuceneSearchTermRangeQuery *) nil_chk(query_)) getLowerTerm];
}

- (OrgApacheLuceneUtilBytesRef *)getUpperTerm {
  return [((OrgApacheLuceneSearchTermRangeQuery *) nil_chk(query_)) getUpperTerm];
}

- (jboolean)includesLower {
  return [((OrgApacheLuceneSearchTermRangeQuery *) nil_chk(query_)) includesLower];
}

- (jboolean)includesUpper {
  return [((OrgApacheLuceneSearchTermRangeQuery *) nil_chk(query_)) includesUpper];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchTermRangeFilter;", 0x9, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchTermRangeFilter;", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchTermRangeFilter;", 0x9, 5, 4, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRef;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRef;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneUtilBytesRef:withBoolean:withBoolean:);
  methods[1].selector = @selector(newStringRangeWithNSString:withNSString:withNSString:withBoolean:withBoolean:);
  methods[2].selector = @selector(LessWithNSString:withOrgApacheLuceneUtilBytesRef:);
  methods[3].selector = @selector(MoreWithNSString:withOrgApacheLuceneUtilBytesRef:);
  methods[4].selector = @selector(getLowerTerm);
  methods[5].selector = @selector(getUpperTerm);
  methods[6].selector = @selector(includesLower);
  methods[7].selector = @selector(includesUpper);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;LOrgApacheLuceneUtilBytesRef;LOrgApacheLuceneUtilBytesRef;ZZ", "newStringRange", "LNSString;LNSString;LNSString;ZZ", "Less", "LNSString;LOrgApacheLuceneUtilBytesRef;", "More", "Lorg/apache/lucene/search/MultiTermQueryWrapperFilter<Lorg/apache/lucene/search/TermRangeQuery;>;", (void *)&OrgApacheLuceneSearchTermRangeFilter__Annotations$0 };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchTermRangeFilter = { "TermRangeFilter", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0x1, 8, 0, -1, -1, -1, 6, 7 };
  return &_OrgApacheLuceneSearchTermRangeFilter;
}

@end

void OrgApacheLuceneSearchTermRangeFilter_initWithNSString_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_withBoolean_withBoolean_(OrgApacheLuceneSearchTermRangeFilter *self, NSString *fieldName, OrgApacheLuceneUtilBytesRef *lowerTerm, OrgApacheLuceneUtilBytesRef *upperTerm, jboolean includeLower, jboolean includeUpper) {
  OrgApacheLuceneSearchMultiTermQueryWrapperFilter_initWithOrgApacheLuceneSearchMultiTermQuery_(self, create_OrgApacheLuceneSearchTermRangeQuery_initWithNSString_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_withBoolean_withBoolean_(fieldName, lowerTerm, upperTerm, includeLower, includeUpper));
}

OrgApacheLuceneSearchTermRangeFilter *new_OrgApacheLuceneSearchTermRangeFilter_initWithNSString_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_withBoolean_withBoolean_(NSString *fieldName, OrgApacheLuceneUtilBytesRef *lowerTerm, OrgApacheLuceneUtilBytesRef *upperTerm, jboolean includeLower, jboolean includeUpper) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchTermRangeFilter, initWithNSString_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_withBoolean_withBoolean_, fieldName, lowerTerm, upperTerm, includeLower, includeUpper)
}

OrgApacheLuceneSearchTermRangeFilter *create_OrgApacheLuceneSearchTermRangeFilter_initWithNSString_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_withBoolean_withBoolean_(NSString *fieldName, OrgApacheLuceneUtilBytesRef *lowerTerm, OrgApacheLuceneUtilBytesRef *upperTerm, jboolean includeLower, jboolean includeUpper) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchTermRangeFilter, initWithNSString_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_withBoolean_withBoolean_, fieldName, lowerTerm, upperTerm, includeLower, includeUpper)
}

OrgApacheLuceneSearchTermRangeFilter *OrgApacheLuceneSearchTermRangeFilter_newStringRangeWithNSString_withNSString_withNSString_withBoolean_withBoolean_(NSString *field, NSString *lowerTerm, NSString *upperTerm, jboolean includeLower, jboolean includeUpper) {
  OrgApacheLuceneSearchTermRangeFilter_initialize();
  OrgApacheLuceneUtilBytesRef *lower = lowerTerm == nil ? nil : create_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(lowerTerm);
  OrgApacheLuceneUtilBytesRef *upper = upperTerm == nil ? nil : create_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(upperTerm);
  return create_OrgApacheLuceneSearchTermRangeFilter_initWithNSString_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_withBoolean_withBoolean_(field, lower, upper, includeLower, includeUpper);
}

OrgApacheLuceneSearchTermRangeFilter *OrgApacheLuceneSearchTermRangeFilter_LessWithNSString_withOrgApacheLuceneUtilBytesRef_(NSString *fieldName, OrgApacheLuceneUtilBytesRef *upperTerm) {
  OrgApacheLuceneSearchTermRangeFilter_initialize();
  return create_OrgApacheLuceneSearchTermRangeFilter_initWithNSString_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_withBoolean_withBoolean_(fieldName, nil, upperTerm, false, true);
}

OrgApacheLuceneSearchTermRangeFilter *OrgApacheLuceneSearchTermRangeFilter_MoreWithNSString_withOrgApacheLuceneUtilBytesRef_(NSString *fieldName, OrgApacheLuceneUtilBytesRef *lowerTerm) {
  OrgApacheLuceneSearchTermRangeFilter_initialize();
  return create_OrgApacheLuceneSearchTermRangeFilter_initWithNSString_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_withBoolean_withBoolean_(fieldName, lowerTerm, nil, true, false);
}

IOSObjectArray *OrgApacheLuceneSearchTermRangeFilter__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchTermRangeFilter)
