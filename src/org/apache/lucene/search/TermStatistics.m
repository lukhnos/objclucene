//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/TermStatistics.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/search/TermStatistics.h"
#include "org/apache/lucene/util/BytesRef.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/TermStatistics must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchTermStatistics () {
 @public
  OrgApacheLuceneUtilBytesRef *term_;
  jlong docFreq_;
  jlong totalTermFreq_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchTermStatistics, term_, OrgApacheLuceneUtilBytesRef *)

@implementation OrgApacheLuceneSearchTermStatistics

- (instancetype)initWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term
                                           withLong:(jlong)docFreq
                                           withLong:(jlong)totalTermFreq {
  OrgApacheLuceneSearchTermStatistics_initWithOrgApacheLuceneUtilBytesRef_withLong_withLong_(self, term, docFreq, totalTermFreq);
  return self;
}

- (OrgApacheLuceneUtilBytesRef *)term {
  return term_;
}

- (jlong)docFreq {
  return docFreq_;
}

- (jlong)totalTermFreq {
  return totalTermFreq_;
}

- (void)dealloc {
  RELEASE_(term_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRef;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x11, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneUtilBytesRef:withLong:withLong:);
  methods[1].selector = @selector(term);
  methods[2].selector = @selector(docFreq);
  methods[3].selector = @selector(totalTermFreq);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "term_", "LOrgApacheLuceneUtilBytesRef;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "docFreq_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "totalTermFreq_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneUtilBytesRef;JJ" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchTermStatistics = { "TermStatistics", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x1, 4, 3, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchTermStatistics;
}

@end

void OrgApacheLuceneSearchTermStatistics_initWithOrgApacheLuceneUtilBytesRef_withLong_withLong_(OrgApacheLuceneSearchTermStatistics *self, OrgApacheLuceneUtilBytesRef *term, jlong docFreq, jlong totalTermFreq) {
  NSObject_init(self);
  JreAssert(docFreq >= 0, @"org/apache/lucene/search/TermStatistics.java:32 condition failed: assert docFreq >= 0;");
  JreAssert(totalTermFreq == -1 || totalTermFreq >= docFreq, @"org/apache/lucene/search/TermStatistics.java:33 condition failed: assert totalTermFreq == -1 || totalTermFreq >= docFreq;");
  JreStrongAssign(&self->term_, term);
  self->docFreq_ = docFreq;
  self->totalTermFreq_ = totalTermFreq;
}

OrgApacheLuceneSearchTermStatistics *new_OrgApacheLuceneSearchTermStatistics_initWithOrgApacheLuceneUtilBytesRef_withLong_withLong_(OrgApacheLuceneUtilBytesRef *term, jlong docFreq, jlong totalTermFreq) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchTermStatistics, initWithOrgApacheLuceneUtilBytesRef_withLong_withLong_, term, docFreq, totalTermFreq)
}

OrgApacheLuceneSearchTermStatistics *create_OrgApacheLuceneSearchTermStatistics_initWithOrgApacheLuceneUtilBytesRef_withLong_withLong_(OrgApacheLuceneUtilBytesRef *term, jlong docFreq, jlong totalTermFreq) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchTermStatistics, initWithOrgApacheLuceneUtilBytesRef_withLong_withLong_, term, docFreq, totalTermFreq)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchTermStatistics)
