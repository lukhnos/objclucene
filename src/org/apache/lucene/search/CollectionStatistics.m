//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/CollectionStatistics.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/search/CollectionStatistics.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/CollectionStatistics must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchCollectionStatistics () {
 @public
  NSString *field_;
  jlong maxDoc_;
  jlong docCount_;
  jlong sumTotalTermFreq_;
  jlong sumDocFreq_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchCollectionStatistics, field_, NSString *)

@implementation OrgApacheLuceneSearchCollectionStatistics

- (instancetype)initWithNSString:(NSString *)field
                        withLong:(jlong)maxDoc
                        withLong:(jlong)docCount
                        withLong:(jlong)sumTotalTermFreq
                        withLong:(jlong)sumDocFreq {
  OrgApacheLuceneSearchCollectionStatistics_initWithNSString_withLong_withLong_withLong_withLong_(self, field, maxDoc, docCount, sumTotalTermFreq, sumDocFreq);
  return self;
}

- (NSString *)field {
  return field_;
}

- (jlong)maxDoc {
  return maxDoc_;
}

- (jlong)docCount {
  return docCount_;
}

- (jlong)sumTotalTermFreq {
  return sumTotalTermFreq_;
}

- (jlong)sumDocFreq {
  return sumDocFreq_;
}

- (void)dealloc {
  RELEASE_(field_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x11, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withLong:withLong:withLong:withLong:);
  methods[1].selector = @selector(field);
  methods[2].selector = @selector(maxDoc);
  methods[3].selector = @selector(docCount);
  methods[4].selector = @selector(sumTotalTermFreq);
  methods[5].selector = @selector(sumDocFreq);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "field_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "maxDoc_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "docCount_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "sumTotalTermFreq_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "sumDocFreq_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;JJJJ" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchCollectionStatistics = { "CollectionStatistics", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x1, 6, 5, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchCollectionStatistics;
}

@end

void OrgApacheLuceneSearchCollectionStatistics_initWithNSString_withLong_withLong_withLong_withLong_(OrgApacheLuceneSearchCollectionStatistics *self, NSString *field, jlong maxDoc, jlong docCount, jlong sumTotalTermFreq, jlong sumDocFreq) {
  NSObject_init(self);
  JreAssert(maxDoc >= 0, @"org/apache/lucene/search/CollectionStatistics.java:35 condition failed: assert maxDoc >= 0;");
  JreAssert(docCount >= -1 && docCount <= maxDoc, @"org/apache/lucene/search/CollectionStatistics.java:36 condition failed: assert docCount >= -1 && docCount <= maxDoc;");
  JreAssert(sumDocFreq == -1 || sumDocFreq >= docCount, @"org/apache/lucene/search/CollectionStatistics.java:37 condition failed: assert sumDocFreq == -1 || sumDocFreq >= docCount;");
  JreAssert(sumTotalTermFreq == -1 || sumTotalTermFreq >= sumDocFreq, @"org/apache/lucene/search/CollectionStatistics.java:38 condition failed: assert sumTotalTermFreq == -1 || sumTotalTermFreq >= sumDocFreq;");
  JreStrongAssign(&self->field_, field);
  self->maxDoc_ = maxDoc;
  self->docCount_ = docCount;
  self->sumTotalTermFreq_ = sumTotalTermFreq;
  self->sumDocFreq_ = sumDocFreq;
}

OrgApacheLuceneSearchCollectionStatistics *new_OrgApacheLuceneSearchCollectionStatistics_initWithNSString_withLong_withLong_withLong_withLong_(NSString *field, jlong maxDoc, jlong docCount, jlong sumTotalTermFreq, jlong sumDocFreq) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchCollectionStatistics, initWithNSString_withLong_withLong_withLong_withLong_, field, maxDoc, docCount, sumTotalTermFreq, sumDocFreq)
}

OrgApacheLuceneSearchCollectionStatistics *create_OrgApacheLuceneSearchCollectionStatistics_initWithNSString_withLong_withLong_withLong_withLong_(NSString *field, jlong maxDoc, jlong docCount, jlong sumTotalTermFreq, jlong sumDocFreq) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchCollectionStatistics, initWithNSString_withLong_withLong_withLong_withLong_, field, maxDoc, docCount, sumTotalTermFreq, sumDocFreq)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchCollectionStatistics)
