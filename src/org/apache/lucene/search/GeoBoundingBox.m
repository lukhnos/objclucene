//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./sandbox/src/java/org/apache/lucene/search/GeoBoundingBox.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/apache/lucene/search/GeoBoundingBox.h"
#include "org/apache/lucene/util/GeoUtils.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/GeoBoundingBox must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneSearchGeoBoundingBox

- (instancetype)initPackagePrivateWithDouble:(jdouble)minLon
                                  withDouble:(jdouble)maxLon
                                  withDouble:(jdouble)minLat
                                  withDouble:(jdouble)maxLat {
  OrgApacheLuceneSearchGeoBoundingBox_initPackagePrivateWithDouble_withDouble_withDouble_withDouble_(self, minLon, maxLon, minLat, maxLat);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithDouble:withDouble:withDouble:withDouble:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "minLon_", "D", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "maxLon_", "D", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "minLat_", "D", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "maxLat_", "D", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "DDDD" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchGeoBoundingBox = { "GeoBoundingBox", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x0, 1, 4, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchGeoBoundingBox;
}

@end

void OrgApacheLuceneSearchGeoBoundingBox_initPackagePrivateWithDouble_withDouble_withDouble_withDouble_(OrgApacheLuceneSearchGeoBoundingBox *self, jdouble minLon, jdouble maxLon, jdouble minLat, jdouble maxLat) {
  NSObject_init(self);
  if (OrgApacheLuceneUtilGeoUtils_isValidLonWithDouble_(minLon) == false) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$D", @"invalid minLon ", minLon));
  }
  if (OrgApacheLuceneUtilGeoUtils_isValidLonWithDouble_(maxLon) == false) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$D", @"invalid maxLon ", minLon));
  }
  if (OrgApacheLuceneUtilGeoUtils_isValidLatWithDouble_(minLat) == false) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$D", @"invalid minLat ", minLat));
  }
  if (OrgApacheLuceneUtilGeoUtils_isValidLatWithDouble_(maxLat) == false) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$D", @"invalid maxLat ", minLat));
  }
  self->minLon_ = minLon;
  self->maxLon_ = maxLon;
  self->minLat_ = minLat;
  self->maxLat_ = maxLat;
}

OrgApacheLuceneSearchGeoBoundingBox *new_OrgApacheLuceneSearchGeoBoundingBox_initPackagePrivateWithDouble_withDouble_withDouble_withDouble_(jdouble minLon, jdouble maxLon, jdouble minLat, jdouble maxLat) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchGeoBoundingBox, initPackagePrivateWithDouble_withDouble_withDouble_withDouble_, minLon, maxLon, minLat, maxLat)
}

OrgApacheLuceneSearchGeoBoundingBox *create_OrgApacheLuceneSearchGeoBoundingBox_initPackagePrivateWithDouble_withDouble_withDouble_withDouble_(jdouble minLon, jdouble maxLon, jdouble minLat, jdouble maxLat) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchGeoBoundingBox, initPackagePrivateWithDouble_withDouble_withDouble_withDouble_, minLon, maxLon, minLat, maxLat)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchGeoBoundingBox)
