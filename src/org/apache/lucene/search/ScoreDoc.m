//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/ScoreDoc.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/search/ScoreDoc.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/ScoreDoc must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneSearchScoreDoc

- (instancetype)initWithInt:(jint)doc
                  withFloat:(jfloat)score {
  OrgApacheLuceneSearchScoreDoc_initWithInt_withFloat_(self, doc, score);
  return self;
}

- (instancetype)initWithInt:(jint)doc
                  withFloat:(jfloat)score
                    withInt:(jint)shardIndex {
  OrgApacheLuceneSearchScoreDoc_initWithInt_withFloat_withInt_(self, doc, score, shardIndex);
  return self;
}

- (NSString *)description {
  return JreStrcat("$I$F$I", @"doc=", doc_, @" score=", score_, @" shardIndex=", shardIndex_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withFloat:);
  methods[1].selector = @selector(initWithInt:withFloat:withInt:);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "score_", "F", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "doc_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
    { "shardIndex_", "I", .constantValue.asLong = 0, 0x1, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "IF", "IFI", "toString" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchScoreDoc = { "ScoreDoc", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x1, 3, 3, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchScoreDoc;
}

@end

void OrgApacheLuceneSearchScoreDoc_initWithInt_withFloat_(OrgApacheLuceneSearchScoreDoc *self, jint doc, jfloat score) {
  OrgApacheLuceneSearchScoreDoc_initWithInt_withFloat_withInt_(self, doc, score, -1);
}

OrgApacheLuceneSearchScoreDoc *new_OrgApacheLuceneSearchScoreDoc_initWithInt_withFloat_(jint doc, jfloat score) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchScoreDoc, initWithInt_withFloat_, doc, score)
}

OrgApacheLuceneSearchScoreDoc *create_OrgApacheLuceneSearchScoreDoc_initWithInt_withFloat_(jint doc, jfloat score) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchScoreDoc, initWithInt_withFloat_, doc, score)
}

void OrgApacheLuceneSearchScoreDoc_initWithInt_withFloat_withInt_(OrgApacheLuceneSearchScoreDoc *self, jint doc, jfloat score, jint shardIndex) {
  NSObject_init(self);
  self->doc_ = doc;
  self->score_ = score;
  self->shardIndex_ = shardIndex;
}

OrgApacheLuceneSearchScoreDoc *new_OrgApacheLuceneSearchScoreDoc_initWithInt_withFloat_withInt_(jint doc, jfloat score, jint shardIndex) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchScoreDoc, initWithInt_withFloat_withInt_, doc, score, shardIndex)
}

OrgApacheLuceneSearchScoreDoc *create_OrgApacheLuceneSearchScoreDoc_initWithInt_withFloat_withInt_(jint doc, jfloat score, jint shardIndex) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchScoreDoc, initWithInt_withFloat_withInt_, doc, score, shardIndex)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchScoreDoc)
