//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/RandomAccessWeight.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/search/ConstantScoreScorer.h"
#include "org/apache/lucene/search/ConstantScoreWeight.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/RandomAccessWeight.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/TwoPhaseIterator.h"
#include "org/apache/lucene/util/Bits.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/RandomAccessWeight must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchRandomAccessWeight_1 : OrgApacheLuceneSearchTwoPhaseIterator {
 @public
  id<OrgApacheLuceneUtilBits> val$matchingDocs_;
}

- (instancetype)initWithOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)capture$0
      withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)approximation;

- (jboolean)matches;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchRandomAccessWeight_1)

__attribute__((unused)) static void OrgApacheLuceneSearchRandomAccessWeight_1_initWithOrgApacheLuceneUtilBits_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchRandomAccessWeight_1 *self, id<OrgApacheLuceneUtilBits> capture$0, OrgApacheLuceneSearchDocIdSetIterator *approximation);

__attribute__((unused)) static OrgApacheLuceneSearchRandomAccessWeight_1 *new_OrgApacheLuceneSearchRandomAccessWeight_1_initWithOrgApacheLuceneUtilBits_withOrgApacheLuceneSearchDocIdSetIterator_(id<OrgApacheLuceneUtilBits> capture$0, OrgApacheLuceneSearchDocIdSetIterator *approximation) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchRandomAccessWeight_1 *create_OrgApacheLuceneSearchRandomAccessWeight_1_initWithOrgApacheLuceneUtilBits_withOrgApacheLuceneSearchDocIdSetIterator_(id<OrgApacheLuceneUtilBits> capture$0, OrgApacheLuceneSearchDocIdSetIterator *approximation);

@implementation OrgApacheLuceneSearchRandomAccessWeight

- (instancetype)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query {
  OrgApacheLuceneSearchRandomAccessWeight_initWithOrgApacheLuceneSearchQuery_(self, query);
  return self;
}

- (id<OrgApacheLuceneUtilBits>)getMatchingDocsWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgApacheLuceneSearchScorer *)scorerWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context {
  id<OrgApacheLuceneUtilBits> matchingDocs = [self getMatchingDocsWithOrgApacheLuceneIndexLeafReaderContext:context];
  if (matchingDocs == nil || [matchingDocs isKindOfClass:[OrgApacheLuceneUtilBits_MatchNoBits class]]) {
    return nil;
  }
  OrgApacheLuceneSearchDocIdSetIterator *approximation = OrgApacheLuceneSearchDocIdSetIterator_allWithInt_([((OrgApacheLuceneIndexLeafReader *) nil_chk([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader])) maxDoc]);
  OrgApacheLuceneSearchTwoPhaseIterator *twoPhase = create_OrgApacheLuceneSearchRandomAccessWeight_1_initWithOrgApacheLuceneUtilBits_withOrgApacheLuceneSearchDocIdSetIterator_(matchingDocs, approximation);
  return create_OrgApacheLuceneSearchConstantScoreScorer_initWithOrgApacheLuceneSearchWeight_withFloat_withOrgApacheLuceneSearchTwoPhaseIterator_(self, [self score], twoPhase);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBits;", 0x404, 1, 2, 3, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchScorer;", 0x11, 4, 2, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchQuery:);
  methods[1].selector = @selector(getMatchingDocsWithOrgApacheLuceneIndexLeafReaderContext:);
  methods[2].selector = @selector(scorerWithOrgApacheLuceneIndexLeafReaderContext:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchQuery;", "getMatchingDocs", "LOrgApacheLuceneIndexLeafReaderContext;", "LJavaIoIOException;", "scorer" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchRandomAccessWeight = { "RandomAccessWeight", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0x401, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchRandomAccessWeight;
}

@end

void OrgApacheLuceneSearchRandomAccessWeight_initWithOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchRandomAccessWeight *self, OrgApacheLuceneSearchQuery *query) {
  OrgApacheLuceneSearchConstantScoreWeight_initWithOrgApacheLuceneSearchQuery_(self, query);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchRandomAccessWeight)

@implementation OrgApacheLuceneSearchRandomAccessWeight_1

- (instancetype)initWithOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)capture$0
      withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)approximation {
  OrgApacheLuceneSearchRandomAccessWeight_1_initWithOrgApacheLuceneUtilBits_withOrgApacheLuceneSearchDocIdSetIterator_(self, capture$0, approximation);
  return self;
}

- (jboolean)matches {
  jint doc = [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(approximation_)) docID];
  return [((id<OrgApacheLuceneUtilBits>) nil_chk(val$matchingDocs_)) getWithInt:doc];
}

- (void)dealloc {
  RELEASE_(val$matchingDocs_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneUtilBits:withOrgApacheLuceneSearchDocIdSetIterator:);
  methods[1].selector = @selector(matches);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$matchingDocs_", "LOrgApacheLuceneUtilBits;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneUtilBits;LOrgApacheLuceneSearchDocIdSetIterator;", "LJavaIoIOException;", "LOrgApacheLuceneSearchRandomAccessWeight;", "scorerWithOrgApacheLuceneIndexLeafReaderContext:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchRandomAccessWeight_1 = { "", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x8010, 2, 1, 2, -1, 3, -1, -1 };
  return &_OrgApacheLuceneSearchRandomAccessWeight_1;
}

@end

void OrgApacheLuceneSearchRandomAccessWeight_1_initWithOrgApacheLuceneUtilBits_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchRandomAccessWeight_1 *self, id<OrgApacheLuceneUtilBits> capture$0, OrgApacheLuceneSearchDocIdSetIterator *approximation) {
  JreStrongAssign(&self->val$matchingDocs_, capture$0);
  OrgApacheLuceneSearchTwoPhaseIterator_initWithOrgApacheLuceneSearchDocIdSetIterator_(self, approximation);
}

OrgApacheLuceneSearchRandomAccessWeight_1 *new_OrgApacheLuceneSearchRandomAccessWeight_1_initWithOrgApacheLuceneUtilBits_withOrgApacheLuceneSearchDocIdSetIterator_(id<OrgApacheLuceneUtilBits> capture$0, OrgApacheLuceneSearchDocIdSetIterator *approximation) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchRandomAccessWeight_1, initWithOrgApacheLuceneUtilBits_withOrgApacheLuceneSearchDocIdSetIterator_, capture$0, approximation)
}

OrgApacheLuceneSearchRandomAccessWeight_1 *create_OrgApacheLuceneSearchRandomAccessWeight_1_initWithOrgApacheLuceneUtilBits_withOrgApacheLuceneSearchDocIdSetIterator_(id<OrgApacheLuceneUtilBits> capture$0, OrgApacheLuceneSearchDocIdSetIterator *approximation) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchRandomAccessWeight_1, initWithOrgApacheLuceneUtilBits_withOrgApacheLuceneSearchDocIdSetIterator_, capture$0, approximation)
}
