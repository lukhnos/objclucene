//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/BooleanClause.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/annotation/Annotation.h"
#include "org/apache/lucene/search/BooleanClause.h"
#include "org/apache/lucene/search/Query.h"
#include "org/lukhnos/portmobile/util/Objects.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/BooleanClause must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchBooleanClause () {
 @public
  /*!
   @brief The query whose matching documents are combined by the boolean query.
   */
  OrgApacheLuceneSearchQuery *query_;
  OrgApacheLuceneSearchBooleanClause_Occur *occur_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchBooleanClause, query_, OrgApacheLuceneSearchQuery *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchBooleanClause, occur_, OrgApacheLuceneSearchBooleanClause_Occur *)

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneSearchBooleanClause__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneSearchBooleanClause__Annotations$1(void);

__attribute__((unused)) static void OrgApacheLuceneSearchBooleanClause_Occur_initWithNSString_withInt_(OrgApacheLuceneSearchBooleanClause_Occur *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneSearchBooleanClause_Occur_1 : OrgApacheLuceneSearchBooleanClause_Occur

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchBooleanClause_Occur_1)

__attribute__((unused)) static void OrgApacheLuceneSearchBooleanClause_Occur_1_initWithNSString_withInt_(OrgApacheLuceneSearchBooleanClause_Occur_1 *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneSearchBooleanClause_Occur_2 : OrgApacheLuceneSearchBooleanClause_Occur

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchBooleanClause_Occur_2)

__attribute__((unused)) static void OrgApacheLuceneSearchBooleanClause_Occur_2_initWithNSString_withInt_(OrgApacheLuceneSearchBooleanClause_Occur_2 *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneSearchBooleanClause_Occur_3 : OrgApacheLuceneSearchBooleanClause_Occur

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchBooleanClause_Occur_3)

__attribute__((unused)) static void OrgApacheLuceneSearchBooleanClause_Occur_3_initWithNSString_withInt_(OrgApacheLuceneSearchBooleanClause_Occur_3 *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneSearchBooleanClause_Occur_4 : OrgApacheLuceneSearchBooleanClause_Occur

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchBooleanClause_Occur_4)

__attribute__((unused)) static void OrgApacheLuceneSearchBooleanClause_Occur_4_initWithNSString_withInt_(OrgApacheLuceneSearchBooleanClause_Occur_4 *self, NSString *__name, jint __ordinal);

@implementation OrgApacheLuceneSearchBooleanClause

- (instancetype)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
      withOrgApacheLuceneSearchBooleanClause_Occur:(OrgApacheLuceneSearchBooleanClause_Occur *)occur {
  OrgApacheLuceneSearchBooleanClause_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchBooleanClause_Occur_(self, query, occur);
  return self;
}

- (OrgApacheLuceneSearchBooleanClause_Occur *)getOccur {
  return occur_;
}

- (OrgApacheLuceneSearchQuery *)getQuery {
  return query_;
}

- (jboolean)isProhibited {
  return JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST_NOT) == occur_;
}

- (jboolean)isRequired {
  return occur_ == JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST) || occur_ == JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, FILTER);
}

- (jboolean)isScoring {
  return occur_ == JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST) || occur_ == JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, SHOULD);
}

- (jboolean)isEqual:(id)o {
  if (o == nil || !([o isKindOfClass:[OrgApacheLuceneSearchBooleanClause class]])) return false;
  OrgApacheLuceneSearchBooleanClause *other = (OrgApacheLuceneSearchBooleanClause *) cast_chk(o, [OrgApacheLuceneSearchBooleanClause class]);
  return [((OrgApacheLuceneSearchQuery *) nil_chk(self->query_)) isEqual:other->query_] && self->occur_ == other->occur_;
}

- (NSUInteger)hash {
  return 31 * ((jint) [((OrgApacheLuceneSearchQuery *) nil_chk(query_)) hash]) + ((jint) [((OrgApacheLuceneSearchBooleanClause_Occur *) nil_chk(occur_)) hash]);
}

- (NSString *)description {
  return JreStrcat("$$", [((OrgApacheLuceneSearchBooleanClause_Occur *) nil_chk(occur_)) description], [((OrgApacheLuceneSearchQuery *) nil_chk(query_)) description]);
}

- (void)setOccurWithOrgApacheLuceneSearchBooleanClause_Occur:(OrgApacheLuceneSearchBooleanClause_Occur *)occur {
  JreStrongAssign(&self->occur_, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_withNSString_(occur, @"Occur must not be null"));
}

- (void)setQueryWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query {
  JreStrongAssign(&self->query_, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_withNSString_(query, @"Query must not be null"));
}

- (void)dealloc {
  RELEASE_(query_);
  RELEASE_(occur_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchBooleanClause_Occur;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, 7, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, 10, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchQuery:withOrgApacheLuceneSearchBooleanClause_Occur:);
  methods[1].selector = @selector(getOccur);
  methods[2].selector = @selector(getQuery);
  methods[3].selector = @selector(isProhibited);
  methods[4].selector = @selector(isRequired);
  methods[5].selector = @selector(isScoring);
  methods[6].selector = @selector(isEqual:);
  methods[7].selector = @selector(hash);
  methods[8].selector = @selector(description);
  methods[9].selector = @selector(setOccurWithOrgApacheLuceneSearchBooleanClause_Occur:);
  methods[10].selector = @selector(setQueryWithOrgApacheLuceneSearchQuery:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "query_", "LOrgApacheLuceneSearchQuery;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "occur_", "LOrgApacheLuceneSearchBooleanClause_Occur;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchQuery;LOrgApacheLuceneSearchBooleanClause_Occur;", "equals", "LNSObject;", "hashCode", "toString", "setOccur", "LOrgApacheLuceneSearchBooleanClause_Occur;", (void *)&OrgApacheLuceneSearchBooleanClause__Annotations$0, "setQuery", "LOrgApacheLuceneSearchQuery;", (void *)&OrgApacheLuceneSearchBooleanClause__Annotations$1 };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchBooleanClause = { "BooleanClause", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x11, 11, 2, -1, 6, -1, -1, -1 };
  return &_OrgApacheLuceneSearchBooleanClause;
}

@end

void OrgApacheLuceneSearchBooleanClause_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchBooleanClause_Occur_(OrgApacheLuceneSearchBooleanClause *self, OrgApacheLuceneSearchQuery *query, OrgApacheLuceneSearchBooleanClause_Occur *occur) {
  NSObject_init(self);
  JreStrongAssign(&self->query_, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_withNSString_(query, @"Query must not be null"));
  JreStrongAssign(&self->occur_, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_withNSString_(occur, @"Occur must not be null"));
}

OrgApacheLuceneSearchBooleanClause *new_OrgApacheLuceneSearchBooleanClause_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchBooleanClause_Occur_(OrgApacheLuceneSearchQuery *query, OrgApacheLuceneSearchBooleanClause_Occur *occur) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchBooleanClause, initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchBooleanClause_Occur_, query, occur)
}

OrgApacheLuceneSearchBooleanClause *create_OrgApacheLuceneSearchBooleanClause_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchBooleanClause_Occur_(OrgApacheLuceneSearchQuery *query, OrgApacheLuceneSearchBooleanClause_Occur *occur) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchBooleanClause, initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchBooleanClause_Occur_, query, occur)
}

IOSObjectArray *OrgApacheLuceneSearchBooleanClause__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneSearchBooleanClause__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchBooleanClause)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchBooleanClause_Occur)

OrgApacheLuceneSearchBooleanClause_Occur *OrgApacheLuceneSearchBooleanClause_Occur_values_[4];

@implementation OrgApacheLuceneSearchBooleanClause_Occur

+ (OrgApacheLuceneSearchBooleanClause_Occur *)MUST {
  return JreEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST);
}

+ (OrgApacheLuceneSearchBooleanClause_Occur *)FILTER {
  return JreEnum(OrgApacheLuceneSearchBooleanClause_Occur, FILTER);
}

+ (OrgApacheLuceneSearchBooleanClause_Occur *)SHOULD {
  return JreEnum(OrgApacheLuceneSearchBooleanClause_Occur, SHOULD);
}

+ (OrgApacheLuceneSearchBooleanClause_Occur *)MUST_NOT {
  return JreEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST_NOT);
}

+ (IOSObjectArray *)values {
  return OrgApacheLuceneSearchBooleanClause_Occur_values();
}

+ (OrgApacheLuceneSearchBooleanClause_Occur *)valueOfWithNSString:(NSString *)name {
  return OrgApacheLuceneSearchBooleanClause_Occur_valueOfWithNSString_(name);
}

- (OrgApacheLuceneSearchBooleanClause_Occur_Enum)toNSEnum {
  return (OrgApacheLuceneSearchBooleanClause_Occur_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgApacheLuceneSearchBooleanClause_Occur;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchBooleanClause_Occur;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "MUST", "LOrgApacheLuceneSearchBooleanClause_Occur;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "FILTER", "LOrgApacheLuceneSearchBooleanClause_Occur;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "SHOULD", "LOrgApacheLuceneSearchBooleanClause_Occur;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "MUST_NOT", "LOrgApacheLuceneSearchBooleanClause_Occur;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST), &JreEnum(OrgApacheLuceneSearchBooleanClause_Occur, FILTER), &JreEnum(OrgApacheLuceneSearchBooleanClause_Occur, SHOULD), &JreEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST_NOT), "LOrgApacheLuceneSearchBooleanClause;", "Ljava/lang/Enum<Lorg/apache/lucene/search/BooleanClause$Occur;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchBooleanClause_Occur = { "Occur", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x4009, 2, 4, 6, -1, -1, 7, -1 };
  return &_OrgApacheLuceneSearchBooleanClause_Occur;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchBooleanClause_Occur class]) {
    size_t allocSize = 0;
    size_t objSize_MUST = class_getInstanceSize([OrgApacheLuceneSearchBooleanClause_Occur_1 class]);
    allocSize += objSize_MUST;
    size_t objSize_FILTER = class_getInstanceSize([OrgApacheLuceneSearchBooleanClause_Occur_2 class]);
    allocSize += objSize_FILTER;
    size_t objSize_SHOULD = class_getInstanceSize([OrgApacheLuceneSearchBooleanClause_Occur_3 class]);
    allocSize += objSize_SHOULD;
    size_t objSize_MUST_NOT = class_getInstanceSize([OrgApacheLuceneSearchBooleanClause_Occur_4 class]);
    allocSize += objSize_MUST_NOT;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    ((void) (JreEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST) = e = objc_constructInstance([OrgApacheLuceneSearchBooleanClause_Occur_1 class], (void *)ptr)), ptr += objSize_MUST);
    OrgApacheLuceneSearchBooleanClause_Occur_1_initWithNSString_withInt_(e, @"MUST", 0);
    ((void) (JreEnum(OrgApacheLuceneSearchBooleanClause_Occur, FILTER) = e = objc_constructInstance([OrgApacheLuceneSearchBooleanClause_Occur_2 class], (void *)ptr)), ptr += objSize_FILTER);
    OrgApacheLuceneSearchBooleanClause_Occur_2_initWithNSString_withInt_(e, @"FILTER", 1);
    ((void) (JreEnum(OrgApacheLuceneSearchBooleanClause_Occur, SHOULD) = e = objc_constructInstance([OrgApacheLuceneSearchBooleanClause_Occur_3 class], (void *)ptr)), ptr += objSize_SHOULD);
    OrgApacheLuceneSearchBooleanClause_Occur_3_initWithNSString_withInt_(e, @"SHOULD", 2);
    ((void) (JreEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST_NOT) = e = objc_constructInstance([OrgApacheLuceneSearchBooleanClause_Occur_4 class], (void *)ptr)), ptr += objSize_MUST_NOT);
    OrgApacheLuceneSearchBooleanClause_Occur_4_initWithNSString_withInt_(e, @"MUST_NOT", 3);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchBooleanClause_Occur)
  }
}

@end

void OrgApacheLuceneSearchBooleanClause_Occur_initWithNSString_withInt_(OrgApacheLuceneSearchBooleanClause_Occur *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *OrgApacheLuceneSearchBooleanClause_Occur_values() {
  OrgApacheLuceneSearchBooleanClause_Occur_initialize();
  return [IOSObjectArray arrayWithObjects:OrgApacheLuceneSearchBooleanClause_Occur_values_ count:4 type:OrgApacheLuceneSearchBooleanClause_Occur_class_()];
}

OrgApacheLuceneSearchBooleanClause_Occur *OrgApacheLuceneSearchBooleanClause_Occur_valueOfWithNSString_(NSString *name) {
  OrgApacheLuceneSearchBooleanClause_Occur_initialize();
  for (int i = 0; i < 4; i++) {
    OrgApacheLuceneSearchBooleanClause_Occur *e = OrgApacheLuceneSearchBooleanClause_Occur_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgApacheLuceneSearchBooleanClause_Occur *OrgApacheLuceneSearchBooleanClause_Occur_fromOrdinal(NSUInteger ordinal) {
  OrgApacheLuceneSearchBooleanClause_Occur_initialize();
  if (ordinal >= 4) {
    return nil;
  }
  return OrgApacheLuceneSearchBooleanClause_Occur_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchBooleanClause_Occur)

@implementation OrgApacheLuceneSearchBooleanClause_Occur_1

- (NSString *)description {
  return @"+";
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneSearchBooleanClause_Occur_1 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(description);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "toString", "LOrgApacheLuceneSearchBooleanClause_Occur;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchBooleanClause_Occur_1 = { "", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0xc018, 1, 0, 1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchBooleanClause_Occur_1;
}

@end

void OrgApacheLuceneSearchBooleanClause_Occur_1_initWithNSString_withInt_(OrgApacheLuceneSearchBooleanClause_Occur_1 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneSearchBooleanClause_Occur_initWithNSString_withInt_(self, __name, __ordinal);
}

@implementation OrgApacheLuceneSearchBooleanClause_Occur_2

- (NSString *)description {
  return @"#";
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneSearchBooleanClause_Occur_2 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(description);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "toString", "LOrgApacheLuceneSearchBooleanClause_Occur;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchBooleanClause_Occur_2 = { "", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0xc018, 1, 0, 1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchBooleanClause_Occur_2;
}

@end

void OrgApacheLuceneSearchBooleanClause_Occur_2_initWithNSString_withInt_(OrgApacheLuceneSearchBooleanClause_Occur_2 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneSearchBooleanClause_Occur_initWithNSString_withInt_(self, __name, __ordinal);
}

@implementation OrgApacheLuceneSearchBooleanClause_Occur_3

- (NSString *)description {
  return @"";
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneSearchBooleanClause_Occur_3 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(description);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "toString", "LOrgApacheLuceneSearchBooleanClause_Occur;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchBooleanClause_Occur_3 = { "", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0xc018, 1, 0, 1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchBooleanClause_Occur_3;
}

@end

void OrgApacheLuceneSearchBooleanClause_Occur_3_initWithNSString_withInt_(OrgApacheLuceneSearchBooleanClause_Occur_3 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneSearchBooleanClause_Occur_initWithNSString_withInt_(self, __name, __ordinal);
}

@implementation OrgApacheLuceneSearchBooleanClause_Occur_4

- (NSString *)description {
  return @"-";
}

- (void)dealloc {
  JreCheckFinalize(self, [OrgApacheLuceneSearchBooleanClause_Occur_4 class]);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(description);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "toString", "LOrgApacheLuceneSearchBooleanClause_Occur;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchBooleanClause_Occur_4 = { "", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0xc018, 1, 0, 1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchBooleanClause_Occur_4;
}

@end

void OrgApacheLuceneSearchBooleanClause_Occur_4_initWithNSString_withInt_(OrgApacheLuceneSearchBooleanClause_Occur_4 *self, NSString *__name, jint __ordinal) {
  OrgApacheLuceneSearchBooleanClause_Occur_initWithNSString_withInt_(self, __name, __ordinal);
}
