//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/CachingWrapperFilter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/WeakHashMap.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/search/BitsFilteredDocIdSet.h"
#include "org/apache/lucene/search/CachingWrapperFilter.h"
#include "org/apache/lucene/search/DocIdSet.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/search/Filter.h"
#include "org/apache/lucene/search/FilterCachingPolicy.h"
#include "org/apache/lucene/util/Accountables.h"
#include "org/apache/lucene/util/Bits.h"
#include "org/apache/lucene/util/RoaringDocIdSet.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/CachingWrapperFilter must not be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface OrgApacheLuceneSearchCachingWrapperFilter () {
 @public
  OrgApacheLuceneSearchFilter *filter_;
  id<OrgApacheLuceneSearchFilterCachingPolicy> policy_;
  id<JavaUtilMap> cache_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchCachingWrapperFilter, filter_, OrgApacheLuceneSearchFilter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchCachingWrapperFilter, policy_, id<OrgApacheLuceneSearchFilterCachingPolicy>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchCachingWrapperFilter, cache_, id<JavaUtilMap>)

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneSearchCachingWrapperFilter__Annotations$0(void);

@implementation OrgApacheLuceneSearchCachingWrapperFilter

- (instancetype)initWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
       withOrgApacheLuceneSearchFilterCachingPolicy:(id<OrgApacheLuceneSearchFilterCachingPolicy>)policy {
  OrgApacheLuceneSearchCachingWrapperFilter_initWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilterCachingPolicy_(self, filter, policy);
  return self;
}

- (instancetype)initWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter {
  OrgApacheLuceneSearchCachingWrapperFilter_initWithOrgApacheLuceneSearchFilter_(self, filter);
  return self;
}

- (OrgApacheLuceneSearchFilter *)getFilter {
  return filter_;
}

- (OrgApacheLuceneSearchDocIdSet *)docIdSetToCacheWithOrgApacheLuceneSearchDocIdSet:(OrgApacheLuceneSearchDocIdSet *)docIdSet
                                                 withOrgApacheLuceneIndexLeafReader:(OrgApacheLuceneIndexLeafReader *)reader {
  if (docIdSet == nil || [docIdSet isCacheable]) {
    return docIdSet;
  }
  else {
    OrgApacheLuceneSearchDocIdSetIterator *it = [docIdSet iterator];
    if (it == nil) {
      return nil;
    }
    else {
      return [self cacheImplWithOrgApacheLuceneSearchDocIdSetIterator:it withOrgApacheLuceneIndexLeafReader:reader];
    }
  }
}

- (OrgApacheLuceneSearchDocIdSet *)cacheImplWithOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)iterator
                                                   withOrgApacheLuceneIndexLeafReader:(OrgApacheLuceneIndexLeafReader *)reader {
  return [((OrgApacheLuceneUtilRoaringDocIdSet_Builder *) nil_chk([create_OrgApacheLuceneUtilRoaringDocIdSet_Builder_initWithInt_([((OrgApacheLuceneIndexLeafReader *) nil_chk(reader)) maxDoc]) addWithOrgApacheLuceneSearchDocIdSetIterator:iterator])) build];
}

- (OrgApacheLuceneSearchDocIdSet *)getDocIdSetWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                                            withOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)acceptDocs {
  OrgApacheLuceneIndexLeafReader *reader = [((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader];
  id key = [((OrgApacheLuceneIndexLeafReader *) nil_chk(reader)) getCoreCacheKey];
  OrgApacheLuceneSearchDocIdSet *docIdSet = JreRetainedLocalValue([((id<JavaUtilMap>) nil_chk(cache_)) getWithId:key]);
  if (docIdSet != nil) {
    hitCount_++;
  }
  else {
    docIdSet = [((OrgApacheLuceneSearchFilter *) nil_chk(filter_)) getDocIdSetWithOrgApacheLuceneIndexLeafReaderContext:context withOrgApacheLuceneUtilBits:nil];
    if ([((id<OrgApacheLuceneSearchFilterCachingPolicy>) nil_chk(policy_)) shouldCacheWithOrgApacheLuceneSearchFilter:filter_ withOrgApacheLuceneIndexLeafReaderContext:context withOrgApacheLuceneSearchDocIdSet:docIdSet]) {
      missCount_++;
      docIdSet = [self docIdSetToCacheWithOrgApacheLuceneSearchDocIdSet:docIdSet withOrgApacheLuceneIndexLeafReader:reader];
      if (docIdSet == nil) {
        docIdSet = JreLoadStatic(OrgApacheLuceneSearchDocIdSet, EMPTY);
      }
      JreAssert([((OrgApacheLuceneSearchDocIdSet *) nil_chk(docIdSet)) isCacheable], @"org/apache/lucene/search/CachingWrapperFilter.java:122 condition failed: assert docIdSet.isCacheable();");
      [cache_ putWithId:key withId:docIdSet];
    }
  }
  return JreObjectEqualsEquals(docIdSet, JreLoadStatic(OrgApacheLuceneSearchDocIdSet, EMPTY)) ? nil : OrgApacheLuceneSearchBitsFilteredDocIdSet_wrapWithOrgApacheLuceneSearchDocIdSet_withOrgApacheLuceneUtilBits_(docIdSet, acceptDocs);
}

- (NSString *)toStringWithNSString:(NSString *)field {
  return JreStrcat("$C$C", [[self java_getClass] getSimpleName], '(', [((OrgApacheLuceneSearchFilter *) nil_chk(filter_)) toStringWithNSString:field], ')');
}

- (jboolean)isEqual:(id)o {
  if ([super isEqual:o] == false) {
    return false;
  }
  OrgApacheLuceneSearchCachingWrapperFilter *other = (OrgApacheLuceneSearchCachingWrapperFilter *) cast_chk(o, [OrgApacheLuceneSearchCachingWrapperFilter class]);
  return [((OrgApacheLuceneSearchFilter *) nil_chk(self->filter_)) isEqual:((OrgApacheLuceneSearchCachingWrapperFilter *) nil_chk(other))->filter_];
}

- (NSUInteger)hash {
  return 31 * ((jint) [super hash]) + ((jint) [((OrgApacheLuceneSearchFilter *) nil_chk(filter_)) hash]);
}

- (jlong)ramBytesUsed {
  id<JavaUtilList> docIdSets;
  @synchronized(cache_) {
    docIdSets = create_JavaUtilArrayList_initWithJavaUtilCollection_([((id<JavaUtilMap>) nil_chk(cache_)) values]);
  }
  jlong total = 0;
  for (OrgApacheLuceneSearchDocIdSet * __strong dis in docIdSets) {
    total += [((OrgApacheLuceneSearchDocIdSet *) nil_chk(dis)) ramBytesUsed];
  }
  return total;
}

- (id<JavaUtilCollection>)getChildResources {
  @synchronized(cache_) {
    return OrgApacheLuceneUtilAccountables_namedAccountablesWithNSString_withJavaUtilMap_(@"segment", cache_);
  }
}

- (void)dealloc {
  RELEASE_(filter_);
  RELEASE_(policy_);
  RELEASE_(cache_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchFilter;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchDocIdSet;", 0x4, 2, 3, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchDocIdSet;", 0x4, 5, 6, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchDocIdSet;", 0x1, 7, 8, 4, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 13, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, 14, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchFilter:withOrgApacheLuceneSearchFilterCachingPolicy:);
  methods[1].selector = @selector(initWithOrgApacheLuceneSearchFilter:);
  methods[2].selector = @selector(getFilter);
  methods[3].selector = @selector(docIdSetToCacheWithOrgApacheLuceneSearchDocIdSet:withOrgApacheLuceneIndexLeafReader:);
  methods[4].selector = @selector(cacheImplWithOrgApacheLuceneSearchDocIdSetIterator:withOrgApacheLuceneIndexLeafReader:);
  methods[5].selector = @selector(getDocIdSetWithOrgApacheLuceneIndexLeafReaderContext:withOrgApacheLuceneUtilBits:);
  methods[6].selector = @selector(toStringWithNSString:);
  methods[7].selector = @selector(isEqual:);
  methods[8].selector = @selector(hash);
  methods[9].selector = @selector(ramBytesUsed);
  methods[10].selector = @selector(getChildResources);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "filter_", "LOrgApacheLuceneSearchFilter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "policy_", "LOrgApacheLuceneSearchFilterCachingPolicy;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "cache_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 15, -1 },
    { "hitCount_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "missCount_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchFilter;LOrgApacheLuceneSearchFilterCachingPolicy;", "LOrgApacheLuceneSearchFilter;", "docIdSetToCache", "LOrgApacheLuceneSearchDocIdSet;LOrgApacheLuceneIndexLeafReader;", "LJavaIoIOException;", "cacheImpl", "LOrgApacheLuceneSearchDocIdSetIterator;LOrgApacheLuceneIndexLeafReader;", "getDocIdSet", "LOrgApacheLuceneIndexLeafReaderContext;LOrgApacheLuceneUtilBits;", "toString", "LNSString;", "equals", "LNSObject;", "hashCode", "()Ljava/util/Collection<Lorg/apache/lucene/util/Accountable;>;", "Ljava/util/Map<Ljava/lang/Object;Lorg/apache/lucene/search/DocIdSet;>;", (void *)&OrgApacheLuceneSearchCachingWrapperFilter__Annotations$0 };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchCachingWrapperFilter = { "CachingWrapperFilter", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x1, 11, 5, -1, -1, -1, -1, 16 };
  return &_OrgApacheLuceneSearchCachingWrapperFilter;
}

@end

void OrgApacheLuceneSearchCachingWrapperFilter_initWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilterCachingPolicy_(OrgApacheLuceneSearchCachingWrapperFilter *self, OrgApacheLuceneSearchFilter *filter, id<OrgApacheLuceneSearchFilterCachingPolicy> policy) {
  OrgApacheLuceneSearchFilter_init(self);
  JreStrongAssign(&self->cache_, JavaUtilCollections_synchronizedMapWithJavaUtilMap_(create_JavaUtilWeakHashMap_init()));
  JreStrongAssign(&self->filter_, filter);
  JreStrongAssign(&self->policy_, policy);
}

OrgApacheLuceneSearchCachingWrapperFilter *new_OrgApacheLuceneSearchCachingWrapperFilter_initWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilterCachingPolicy_(OrgApacheLuceneSearchFilter *filter, id<OrgApacheLuceneSearchFilterCachingPolicy> policy) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchCachingWrapperFilter, initWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilterCachingPolicy_, filter, policy)
}

OrgApacheLuceneSearchCachingWrapperFilter *create_OrgApacheLuceneSearchCachingWrapperFilter_initWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilterCachingPolicy_(OrgApacheLuceneSearchFilter *filter, id<OrgApacheLuceneSearchFilterCachingPolicy> policy) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchCachingWrapperFilter, initWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilterCachingPolicy_, filter, policy)
}

void OrgApacheLuceneSearchCachingWrapperFilter_initWithOrgApacheLuceneSearchFilter_(OrgApacheLuceneSearchCachingWrapperFilter *self, OrgApacheLuceneSearchFilter *filter) {
  OrgApacheLuceneSearchCachingWrapperFilter_initWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilterCachingPolicy_(self, filter, JreLoadStatic(OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments, DEFAULT));
}

OrgApacheLuceneSearchCachingWrapperFilter *new_OrgApacheLuceneSearchCachingWrapperFilter_initWithOrgApacheLuceneSearchFilter_(OrgApacheLuceneSearchFilter *filter) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchCachingWrapperFilter, initWithOrgApacheLuceneSearchFilter_, filter)
}

OrgApacheLuceneSearchCachingWrapperFilter *create_OrgApacheLuceneSearchCachingWrapperFilter_initWithOrgApacheLuceneSearchFilter_(OrgApacheLuceneSearchFilter *filter) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchCachingWrapperFilter, initWithOrgApacheLuceneSearchFilter_, filter)
}

IOSObjectArray *OrgApacheLuceneSearchCachingWrapperFilter__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchCachingWrapperFilter)
