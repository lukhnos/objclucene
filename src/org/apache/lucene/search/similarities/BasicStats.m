//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/similarities/BasicStats.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/search/similarities/BasicStats.h"
#include "org/apache/lucene/search/similarities/Similarity.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/similarities/BasicStats must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneSearchSimilaritiesBasicStats

- (instancetype)initWithNSString:(NSString *)field
                       withFloat:(jfloat)queryBoost {
  OrgApacheLuceneSearchSimilaritiesBasicStats_initWithNSString_withFloat_(self, field, queryBoost);
  return self;
}

- (jlong)getNumberOfDocuments {
  return numberOfDocuments_;
}

- (void)setNumberOfDocumentsWithLong:(jlong)numberOfDocuments {
  self->numberOfDocuments_ = numberOfDocuments;
}

- (jlong)getNumberOfFieldTokens {
  return numberOfFieldTokens_;
}

- (void)setNumberOfFieldTokensWithLong:(jlong)numberOfFieldTokens {
  self->numberOfFieldTokens_ = numberOfFieldTokens;
}

- (jfloat)getAvgFieldLength {
  return avgFieldLength_;
}

- (void)setAvgFieldLengthWithFloat:(jfloat)avgFieldLength {
  self->avgFieldLength_ = avgFieldLength;
}

- (jlong)getDocFreq {
  return docFreq_;
}

- (void)setDocFreqWithLong:(jlong)docFreq {
  self->docFreq_ = docFreq;
}

- (jlong)getTotalTermFreq {
  return totalTermFreq_;
}

- (void)setTotalTermFreqWithLong:(jlong)totalTermFreq {
  self->totalTermFreq_ = totalTermFreq;
}

- (jfloat)getValueForNormalization {
  jfloat rawValue = [self rawNormalizationValue];
  return rawValue * rawValue;
}

- (jfloat)rawNormalizationValue {
  return queryBoost_;
}

- (void)normalizeWithFloat:(jfloat)queryNorm
                 withFloat:(jfloat)topLevelBoost {
  self->topLevelBoost_ = topLevelBoost;
  totalBoost_ = queryBoost_ * topLevelBoost;
}

- (jfloat)getTotalBoost {
  return totalBoost_;
}

- (void)dealloc {
  RELEASE_(field_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 2, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 2, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withFloat:);
  methods[1].selector = @selector(getNumberOfDocuments);
  methods[2].selector = @selector(setNumberOfDocumentsWithLong:);
  methods[3].selector = @selector(getNumberOfFieldTokens);
  methods[4].selector = @selector(setNumberOfFieldTokensWithLong:);
  methods[5].selector = @selector(getAvgFieldLength);
  methods[6].selector = @selector(setAvgFieldLengthWithFloat:);
  methods[7].selector = @selector(getDocFreq);
  methods[8].selector = @selector(setDocFreqWithLong:);
  methods[9].selector = @selector(getTotalTermFreq);
  methods[10].selector = @selector(setTotalTermFreqWithLong:);
  methods[11].selector = @selector(getValueForNormalization);
  methods[12].selector = @selector(rawNormalizationValue);
  methods[13].selector = @selector(normalizeWithFloat:withFloat:);
  methods[14].selector = @selector(getTotalBoost);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "field_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "numberOfDocuments_", "J", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "numberOfFieldTokens_", "J", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "avgFieldLength_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "docFreq_", "J", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "totalTermFreq_", "J", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "queryBoost_", "F", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "topLevelBoost_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "totalBoost_", "F", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;F", "setNumberOfDocuments", "J", "setNumberOfFieldTokens", "setAvgFieldLength", "F", "setDocFreq", "setTotalTermFreq", "normalize", "FF" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSimilaritiesBasicStats = { "BasicStats", "org.apache.lucene.search.similarities", ptrTable, methods, fields, 7, 0x1, 15, 9, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchSimilaritiesBasicStats;
}

@end

void OrgApacheLuceneSearchSimilaritiesBasicStats_initWithNSString_withFloat_(OrgApacheLuceneSearchSimilaritiesBasicStats *self, NSString *field, jfloat queryBoost) {
  OrgApacheLuceneSearchSimilaritiesSimilarity_SimWeight_init(self);
  JreStrongAssign(&self->field_, field);
  self->queryBoost_ = queryBoost;
  self->totalBoost_ = queryBoost;
}

OrgApacheLuceneSearchSimilaritiesBasicStats *new_OrgApacheLuceneSearchSimilaritiesBasicStats_initWithNSString_withFloat_(NSString *field, jfloat queryBoost) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSimilaritiesBasicStats, initWithNSString_withFloat_, field, queryBoost)
}

OrgApacheLuceneSearchSimilaritiesBasicStats *create_OrgApacheLuceneSearchSimilaritiesBasicStats_initWithNSString_withFloat_(NSString *field, jfloat queryBoost) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSimilaritiesBasicStats, initWithNSString_withFloat_, field, queryBoost)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSimilaritiesBasicStats)
