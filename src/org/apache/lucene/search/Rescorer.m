//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/Rescorer.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/search/Explanation.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/search/Rescorer.h"
#include "org/apache/lucene/search/TopDocs.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/Rescorer must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneSearchRescorer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchRescorer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgApacheLuceneSearchTopDocs *)rescoreWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                               withOrgApacheLuceneSearchTopDocs:(OrgApacheLuceneSearchTopDocs *)firstPassTopDocs
                                                                        withInt:(jint)topN {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgApacheLuceneSearchExplanation *)explainWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                               withOrgApacheLuceneSearchExplanation:(OrgApacheLuceneSearchExplanation *)firstPassExplanation
                                                                            withInt:(jint)docID {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchTopDocs;", 0x401, 0, 1, 2, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchExplanation;", 0x401, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(rescoreWithOrgApacheLuceneSearchIndexSearcher:withOrgApacheLuceneSearchTopDocs:withInt:);
  methods[2].selector = @selector(explainWithOrgApacheLuceneSearchIndexSearcher:withOrgApacheLuceneSearchExplanation:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "rescore", "LOrgApacheLuceneSearchIndexSearcher;LOrgApacheLuceneSearchTopDocs;I", "LJavaIoIOException;", "explain", "LOrgApacheLuceneSearchIndexSearcher;LOrgApacheLuceneSearchExplanation;I" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchRescorer = { "Rescorer", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0x401, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchRescorer;
}

@end

void OrgApacheLuceneSearchRescorer_init(OrgApacheLuceneSearchRescorer *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchRescorer)
