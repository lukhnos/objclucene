//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/FilteredQuery.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Set.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/search/BooleanClause.h"
#include "org/apache/lucene/search/BooleanQuery.h"
#include "org/apache/lucene/search/ConstantScoreScorer.h"
#include "org/apache/lucene/search/DocIdSet.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/search/Explanation.h"
#include "org/apache/lucene/search/Filter.h"
#include "org/apache/lucene/search/FilteredQuery.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/TwoPhaseIterator.h"
#include "org/apache/lucene/search/Weight.h"
#include "org/apache/lucene/util/Bits.h"
#include "org/apache/lucene/util/ToStringUtils.h"
#include "org/lukhnos/portmobile/util/Objects.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/FilteredQuery must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchFilteredQuery () {
 @public
  OrgApacheLuceneSearchQuery *query_;
  OrgApacheLuceneSearchFilter *filter_;
  OrgApacheLuceneSearchFilteredQuery_FilterStrategy *strategy_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchFilteredQuery, query_, OrgApacheLuceneSearchQuery *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchFilteredQuery, filter_, OrgApacheLuceneSearchFilter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchFilteredQuery, strategy_, OrgApacheLuceneSearchFilteredQuery_FilterStrategy *)

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneSearchFilteredQuery__Annotations$0(void);

@interface OrgApacheLuceneSearchFilteredQuery_1 : OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy

- (instancetype)init;

- (jboolean)useRandomAccessWithOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)bits
                                              withLong:(jlong)filterCost;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchFilteredQuery_1)

__attribute__((unused)) static void OrgApacheLuceneSearchFilteredQuery_1_init(OrgApacheLuceneSearchFilteredQuery_1 *self);

__attribute__((unused)) static OrgApacheLuceneSearchFilteredQuery_1 *new_OrgApacheLuceneSearchFilteredQuery_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchFilteredQuery_1 *create_OrgApacheLuceneSearchFilteredQuery_1_init(void);

@interface OrgApacheLuceneSearchFilteredQuery_2 : OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy

- (instancetype)init;

- (jboolean)alwaysUseRandomAccess;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchFilteredQuery_2)

__attribute__((unused)) static void OrgApacheLuceneSearchFilteredQuery_2_init(OrgApacheLuceneSearchFilteredQuery_2 *self);

__attribute__((unused)) static OrgApacheLuceneSearchFilteredQuery_2 *new_OrgApacheLuceneSearchFilteredQuery_2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchFilteredQuery_2 *create_OrgApacheLuceneSearchFilteredQuery_2_init(void);

@interface OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery : OrgApacheLuceneSearchQuery {
 @public
  OrgApacheLuceneSearchFilter *filter_;
  OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy *strategy_;
}

- (instancetype)initWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
withOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy:(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy *)strategy;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

- (NSString *)toStringWithNSString:(NSString *)field;

- (OrgApacheLuceneSearchWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                        withBoolean:(jboolean)needsScores;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery, filter_, OrgApacheLuceneSearchFilter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery, strategy_, OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy *)

__attribute__((unused)) static void OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_initWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy_(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery *self, OrgApacheLuceneSearchFilter *filter, OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy *strategy);

__attribute__((unused)) static OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery *new_OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_initWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy_(OrgApacheLuceneSearchFilter *filter, OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy *strategy) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery *create_OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_initWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy_(OrgApacheLuceneSearchFilter *filter, OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy *strategy);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery)

@interface OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1 : OrgApacheLuceneSearchWeight {
 @public
  OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery *this$0_;
}

- (instancetype)initWithOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery:(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery *)outer$
                                                           withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query;

- (void)extractTermsWithJavaUtilSet:(id<JavaUtilSet>)terms;

- (jfloat)getValueForNormalization;

- (void)normalizeWithFloat:(jfloat)norm
                 withFloat:(jfloat)topLevelBoost;

- (OrgApacheLuceneSearchExplanation *)explainWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                                                               withInt:(jint)doc;

- (OrgApacheLuceneSearchScorer *)scorerWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1)

__attribute__((unused)) static void OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_initWithOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1 *self, OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery *outer$, OrgApacheLuceneSearchQuery *query);

__attribute__((unused)) static OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1 *new_OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_initWithOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery *outer$, OrgApacheLuceneSearchQuery *query) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1 *create_OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_initWithOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery *outer$, OrgApacheLuceneSearchQuery *query);

@interface OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_1 : OrgApacheLuceneSearchTwoPhaseIterator {
 @public
  id<OrgApacheLuceneUtilBits> val$bits_;
}

- (instancetype)initWithOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)capture$0
      withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)approximation;

- (jboolean)matches;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_1)

__attribute__((unused)) static void OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_1_initWithOrgApacheLuceneUtilBits_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_1 *self, id<OrgApacheLuceneUtilBits> capture$0, OrgApacheLuceneSearchDocIdSetIterator *approximation);

__attribute__((unused)) static OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_1 *new_OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_1_initWithOrgApacheLuceneUtilBits_withOrgApacheLuceneSearchDocIdSetIterator_(id<OrgApacheLuceneUtilBits> capture$0, OrgApacheLuceneSearchDocIdSetIterator *approximation) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_1 *create_OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_1_initWithOrgApacheLuceneUtilBits_withOrgApacheLuceneSearchDocIdSetIterator_(id<OrgApacheLuceneUtilBits> capture$0, OrgApacheLuceneSearchDocIdSetIterator *approximation);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchFilteredQuery)

OrgApacheLuceneSearchFilteredQuery_FilterStrategy *OrgApacheLuceneSearchFilteredQuery_RANDOM_ACCESS_FILTER_STRATEGY;
OrgApacheLuceneSearchFilteredQuery_FilterStrategy *OrgApacheLuceneSearchFilteredQuery_LEAP_FROG_FILTER_FIRST_STRATEGY;
OrgApacheLuceneSearchFilteredQuery_FilterStrategy *OrgApacheLuceneSearchFilteredQuery_LEAP_FROG_QUERY_FIRST_STRATEGY;
OrgApacheLuceneSearchFilteredQuery_FilterStrategy *OrgApacheLuceneSearchFilteredQuery_QUERY_FIRST_FILTER_STRATEGY;

@implementation OrgApacheLuceneSearchFilteredQuery

+ (OrgApacheLuceneSearchFilteredQuery_FilterStrategy *)RANDOM_ACCESS_FILTER_STRATEGY {
  return OrgApacheLuceneSearchFilteredQuery_RANDOM_ACCESS_FILTER_STRATEGY;
}

+ (OrgApacheLuceneSearchFilteredQuery_FilterStrategy *)LEAP_FROG_FILTER_FIRST_STRATEGY {
  return OrgApacheLuceneSearchFilteredQuery_LEAP_FROG_FILTER_FIRST_STRATEGY;
}

+ (OrgApacheLuceneSearchFilteredQuery_FilterStrategy *)LEAP_FROG_QUERY_FIRST_STRATEGY {
  return OrgApacheLuceneSearchFilteredQuery_LEAP_FROG_QUERY_FIRST_STRATEGY;
}

+ (OrgApacheLuceneSearchFilteredQuery_FilterStrategy *)QUERY_FIRST_FILTER_STRATEGY {
  return OrgApacheLuceneSearchFilteredQuery_QUERY_FIRST_FILTER_STRATEGY;
}

- (instancetype)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
                   withOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter {
  OrgApacheLuceneSearchFilteredQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchFilter_(self, query, filter);
  return self;
}

- (instancetype)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
                   withOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
withOrgApacheLuceneSearchFilteredQuery_FilterStrategy:(OrgApacheLuceneSearchFilteredQuery_FilterStrategy *)strategy {
  OrgApacheLuceneSearchFilteredQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilteredQuery_FilterStrategy_(self, query, filter, strategy);
  return self;
}

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  OrgApacheLuceneSearchBooleanQuery_Builder *builder = create_OrgApacheLuceneSearchBooleanQuery_Builder_init();
  [builder addWithOrgApacheLuceneSearchQuery:query_ withOrgApacheLuceneSearchBooleanClause_Occur:JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST)];
  [builder addWithOrgApacheLuceneSearchQuery:[((OrgApacheLuceneSearchFilteredQuery_FilterStrategy *) nil_chk(strategy_)) rewriteWithOrgApacheLuceneSearchFilter:filter_] withOrgApacheLuceneSearchBooleanClause_Occur:JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, FILTER)];
  OrgApacheLuceneSearchQuery *rewritten = JreRetainedLocalValue([builder build]);
  [((OrgApacheLuceneSearchQuery *) nil_chk(rewritten)) setBoostWithFloat:[self getBoost]];
  return rewritten;
}

- (OrgApacheLuceneSearchQuery *)getQuery {
  return query_;
}

- (OrgApacheLuceneSearchFilter *)getFilter {
  return filter_;
}

- (OrgApacheLuceneSearchFilteredQuery_FilterStrategy *)getFilterStrategy {
  return self->strategy_;
}

- (NSString *)toStringWithNSString:(NSString *)s {
  JavaLangStringBuilder *buffer = create_JavaLangStringBuilder_init();
  [buffer appendWithNSString:@"filtered("];
  [buffer appendWithNSString:[((OrgApacheLuceneSearchQuery *) nil_chk(query_)) toStringWithNSString:s]];
  [buffer appendWithNSString:@")->"];
  [buffer appendWithId:filter_];
  [buffer appendWithNSString:OrgApacheLuceneUtilToStringUtils_boostWithFloat_([self getBoost])];
  return [buffer description];
}

- (jboolean)isEqual:(id)o {
  if (JreObjectEqualsEquals(o, self)) return true;
  if (![super isEqual:o]) return false;
  JreAssert([o isKindOfClass:[OrgApacheLuceneSearchFilteredQuery class]], @"org/apache/lucene/search/FilteredQuery.java:122 condition failed: assert o instanceof FilteredQuery;");
  OrgApacheLuceneSearchFilteredQuery *fq = (OrgApacheLuceneSearchFilteredQuery *) cast_chk(o, [OrgApacheLuceneSearchFilteredQuery class]);
  return [((OrgApacheLuceneSearchQuery *) nil_chk(((OrgApacheLuceneSearchFilteredQuery *) nil_chk(fq))->query_)) isEqual:self->query_] && [((OrgApacheLuceneSearchFilter *) nil_chk(fq->filter_)) isEqual:self->filter_] && [((OrgApacheLuceneSearchFilteredQuery_FilterStrategy *) nil_chk(fq->strategy_)) isEqual:self->strategy_];
}

- (NSUInteger)hash {
  jint hash_ = ((jint) [super hash]);
  hash_ = hash_ * 31 + ((jint) [((OrgApacheLuceneSearchFilteredQuery_FilterStrategy *) nil_chk(strategy_)) hash]);
  hash_ = hash_ * 31 + ((jint) [((OrgApacheLuceneSearchQuery *) nil_chk(query_)) hash]);
  hash_ = hash_ * 31 + ((jint) [((OrgApacheLuceneSearchFilter *) nil_chk(filter_)) hash]);
  return hash_;
}

- (void)dealloc {
  RELEASE_(query_);
  RELEASE_(filter_);
  RELEASE_(strategy_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchFilter;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchFilteredQuery_FilterStrategy;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 9, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchQuery:withOrgApacheLuceneSearchFilter:);
  methods[1].selector = @selector(initWithOrgApacheLuceneSearchQuery:withOrgApacheLuceneSearchFilter:withOrgApacheLuceneSearchFilteredQuery_FilterStrategy:);
  methods[2].selector = @selector(rewriteWithOrgApacheLuceneIndexIndexReader:);
  methods[3].selector = @selector(getQuery);
  methods[4].selector = @selector(getFilter);
  methods[5].selector = @selector(getFilterStrategy);
  methods[6].selector = @selector(toStringWithNSString:);
  methods[7].selector = @selector(isEqual:);
  methods[8].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "query_", "LOrgApacheLuceneSearchQuery;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "filter_", "LOrgApacheLuceneSearchFilter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "strategy_", "LOrgApacheLuceneSearchFilteredQuery_FilterStrategy;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "RANDOM_ACCESS_FILTER_STRATEGY", "LOrgApacheLuceneSearchFilteredQuery_FilterStrategy;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
    { "LEAP_FROG_FILTER_FIRST_STRATEGY", "LOrgApacheLuceneSearchFilteredQuery_FilterStrategy;", .constantValue.asLong = 0, 0x19, -1, 11, -1, -1 },
    { "LEAP_FROG_QUERY_FIRST_STRATEGY", "LOrgApacheLuceneSearchFilteredQuery_FilterStrategy;", .constantValue.asLong = 0, 0x19, -1, 12, -1, -1 },
    { "QUERY_FIRST_FILTER_STRATEGY", "LOrgApacheLuceneSearchFilteredQuery_FilterStrategy;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchQuery;LOrgApacheLuceneSearchFilter;", "LOrgApacheLuceneSearchQuery;LOrgApacheLuceneSearchFilter;LOrgApacheLuceneSearchFilteredQuery_FilterStrategy;", "rewrite", "LOrgApacheLuceneIndexIndexReader;", "LJavaIoIOException;", "toString", "LNSString;", "equals", "LNSObject;", "hashCode", &OrgApacheLuceneSearchFilteredQuery_RANDOM_ACCESS_FILTER_STRATEGY, &OrgApacheLuceneSearchFilteredQuery_LEAP_FROG_FILTER_FIRST_STRATEGY, &OrgApacheLuceneSearchFilteredQuery_LEAP_FROG_QUERY_FIRST_STRATEGY, &OrgApacheLuceneSearchFilteredQuery_QUERY_FIRST_FILTER_STRATEGY, "LOrgApacheLuceneSearchFilteredQuery_FilterStrategy;LOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy;LOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery;", (void *)&OrgApacheLuceneSearchFilteredQuery__Annotations$0 };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchFilteredQuery = { "FilteredQuery", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x1, 9, 7, -1, 14, -1, -1, 15 };
  return &_OrgApacheLuceneSearchFilteredQuery;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchFilteredQuery class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneSearchFilteredQuery_RANDOM_ACCESS_FILTER_STRATEGY, new_OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy_init());
    JreStrongAssignAndConsume(&OrgApacheLuceneSearchFilteredQuery_LEAP_FROG_FILTER_FIRST_STRATEGY, new_OrgApacheLuceneSearchFilteredQuery_1_init());
    JreStrongAssign(&OrgApacheLuceneSearchFilteredQuery_LEAP_FROG_QUERY_FIRST_STRATEGY, OrgApacheLuceneSearchFilteredQuery_LEAP_FROG_FILTER_FIRST_STRATEGY);
    JreStrongAssignAndConsume(&OrgApacheLuceneSearchFilteredQuery_QUERY_FIRST_FILTER_STRATEGY, new_OrgApacheLuceneSearchFilteredQuery_2_init());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchFilteredQuery)
  }
}

@end

void OrgApacheLuceneSearchFilteredQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchFilter_(OrgApacheLuceneSearchFilteredQuery *self, OrgApacheLuceneSearchQuery *query, OrgApacheLuceneSearchFilter *filter) {
  OrgApacheLuceneSearchFilteredQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilteredQuery_FilterStrategy_(self, query, filter, OrgApacheLuceneSearchFilteredQuery_RANDOM_ACCESS_FILTER_STRATEGY);
}

OrgApacheLuceneSearchFilteredQuery *new_OrgApacheLuceneSearchFilteredQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchFilter_(OrgApacheLuceneSearchQuery *query, OrgApacheLuceneSearchFilter *filter) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchFilteredQuery, initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchFilter_, query, filter)
}

OrgApacheLuceneSearchFilteredQuery *create_OrgApacheLuceneSearchFilteredQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchFilter_(OrgApacheLuceneSearchQuery *query, OrgApacheLuceneSearchFilter *filter) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchFilteredQuery, initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchFilter_, query, filter)
}

void OrgApacheLuceneSearchFilteredQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilteredQuery_FilterStrategy_(OrgApacheLuceneSearchFilteredQuery *self, OrgApacheLuceneSearchQuery *query, OrgApacheLuceneSearchFilter *filter, OrgApacheLuceneSearchFilteredQuery_FilterStrategy *strategy) {
  OrgApacheLuceneSearchQuery_init(self);
  JreStrongAssign(&self->strategy_, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_withNSString_(strategy, @"FilterStrategy must not be null"));
  JreStrongAssign(&self->query_, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_withNSString_(query, @"Query must not be null"));
  JreStrongAssign(&self->filter_, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_withNSString_(filter, @"Filter must not be null"));
}

OrgApacheLuceneSearchFilteredQuery *new_OrgApacheLuceneSearchFilteredQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilteredQuery_FilterStrategy_(OrgApacheLuceneSearchQuery *query, OrgApacheLuceneSearchFilter *filter, OrgApacheLuceneSearchFilteredQuery_FilterStrategy *strategy) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchFilteredQuery, initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilteredQuery_FilterStrategy_, query, filter, strategy)
}

OrgApacheLuceneSearchFilteredQuery *create_OrgApacheLuceneSearchFilteredQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilteredQuery_FilterStrategy_(OrgApacheLuceneSearchQuery *query, OrgApacheLuceneSearchFilter *filter, OrgApacheLuceneSearchFilteredQuery_FilterStrategy *strategy) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchFilteredQuery, initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilteredQuery_FilterStrategy_, query, filter, strategy)
}

IOSObjectArray *OrgApacheLuceneSearchFilteredQuery__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchFilteredQuery)

@implementation OrgApacheLuceneSearchFilteredQuery_FilterStrategy

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchFilteredQuery_FilterStrategy_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(rewriteWithOrgApacheLuceneSearchFilter:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "rewrite", "LOrgApacheLuceneSearchFilter;", "LOrgApacheLuceneSearchFilteredQuery;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchFilteredQuery_FilterStrategy = { "FilterStrategy", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0x409, 2, 0, 2, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchFilteredQuery_FilterStrategy;
}

@end

void OrgApacheLuceneSearchFilteredQuery_FilterStrategy_init(OrgApacheLuceneSearchFilteredQuery_FilterStrategy *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchFilteredQuery_FilterStrategy)

@implementation OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter {
  return create_OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_initWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy_(filter, self);
}

- (jboolean)useRandomAccessWithOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)bits
                                              withLong:(jlong)filterCost {
  return filterCost * 100 > [((id<OrgApacheLuceneUtilBits>) nil_chk(bits)) length];
}

- (jboolean)alwaysUseRandomAccess {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 2, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(rewriteWithOrgApacheLuceneSearchFilter:);
  methods[2].selector = @selector(useRandomAccessWithOrgApacheLuceneUtilBits:withLong:);
  methods[3].selector = @selector(alwaysUseRandomAccess);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "rewrite", "LOrgApacheLuceneSearchFilter;", "useRandomAccess", "LOrgApacheLuceneUtilBits;J", "LOrgApacheLuceneSearchFilteredQuery;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy = { "RandomAccessFilterStrategy", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0x9, 4, 0, 4, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy;
}

@end

void OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy_init(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy *self) {
  OrgApacheLuceneSearchFilteredQuery_FilterStrategy_init(self);
}

OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy *new_OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy, init)
}

OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy *create_OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy)

@implementation OrgApacheLuceneSearchFilteredQuery_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchFilteredQuery_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)useRandomAccessWithOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)bits
                                              withLong:(jlong)filterCost {
  return false;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(useRandomAccessWithOrgApacheLuceneUtilBits:withLong:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "useRandomAccess", "LOrgApacheLuceneUtilBits;J", "LOrgApacheLuceneSearchFilteredQuery;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchFilteredQuery_1 = { "", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchFilteredQuery_1;
}

@end

void OrgApacheLuceneSearchFilteredQuery_1_init(OrgApacheLuceneSearchFilteredQuery_1 *self) {
  OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy_init(self);
}

OrgApacheLuceneSearchFilteredQuery_1 *new_OrgApacheLuceneSearchFilteredQuery_1_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchFilteredQuery_1, init)
}

OrgApacheLuceneSearchFilteredQuery_1 *create_OrgApacheLuceneSearchFilteredQuery_1_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchFilteredQuery_1, init)
}

@implementation OrgApacheLuceneSearchFilteredQuery_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchFilteredQuery_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)alwaysUseRandomAccess {
  return true;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(alwaysUseRandomAccess);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchFilteredQuery;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchFilteredQuery_2 = { "", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 0, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchFilteredQuery_2;
}

@end

void OrgApacheLuceneSearchFilteredQuery_2_init(OrgApacheLuceneSearchFilteredQuery_2 *self) {
  OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy_init(self);
}

OrgApacheLuceneSearchFilteredQuery_2 *new_OrgApacheLuceneSearchFilteredQuery_2_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchFilteredQuery_2, init)
}

OrgApacheLuceneSearchFilteredQuery_2 *create_OrgApacheLuceneSearchFilteredQuery_2_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchFilteredQuery_2, init)
}

@implementation OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery

- (instancetype)initWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
withOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy:(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy *)strategy {
  OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_initWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy_(self, filter, strategy);
  return self;
}

- (jboolean)isEqual:(id)obj {
  if ([super isEqual:obj] == false) {
    return false;
  }
  OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery *that = (OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery *) cast_chk(obj, [OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery class]);
  return [((OrgApacheLuceneSearchFilter *) nil_chk(filter_)) isEqual:((OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery *) nil_chk(that))->filter_] && [((OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy *) nil_chk(strategy_)) isEqual:that->strategy_];
}

- (NSUInteger)hash {
  return 31 * ((jint) [super hash]) + OrgLukhnosPortmobileUtilObjects_hash__WithNSObjectArray_([IOSObjectArray arrayWithObjects:(id[]){ filter_, strategy_ } count:2 type:NSObject_class_()]);
}

- (NSString *)toStringWithNSString:(NSString *)field {
  return [((OrgApacheLuceneSearchFilter *) nil_chk(filter_)) toStringWithNSString:field];
}

- (OrgApacheLuceneSearchWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                        withBoolean:(jboolean)needsScores {
  return create_OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_initWithOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_withOrgApacheLuceneSearchQuery_(self, self);
}

- (void)dealloc {
  RELEASE_(filter_);
  RELEASE_(strategy_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchWeight;", 0x1, 6, 7, 8, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchFilter:withOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy:);
  methods[1].selector = @selector(isEqual:);
  methods[2].selector = @selector(hash);
  methods[3].selector = @selector(toStringWithNSString:);
  methods[4].selector = @selector(createWeightWithOrgApacheLuceneSearchIndexSearcher:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "filter_", "LOrgApacheLuceneSearchFilter;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "strategy_", "LOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchFilter;LOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy;", "equals", "LNSObject;", "hashCode", "toString", "LNSString;", "createWeight", "LOrgApacheLuceneSearchIndexSearcher;Z", "LJavaIoIOException;", "LOrgApacheLuceneSearchFilteredQuery;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery = { "RandomAccessFilterWrapperQuery", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0xa, 5, 2, 9, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery;
}

@end

void OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_initWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy_(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery *self, OrgApacheLuceneSearchFilter *filter, OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy *strategy) {
  OrgApacheLuceneSearchQuery_init(self);
  JreStrongAssign(&self->filter_, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_(filter));
  JreStrongAssign(&self->strategy_, OrgLukhnosPortmobileUtilObjects_requireNonNullWithId_(strategy));
}

OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery *new_OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_initWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy_(OrgApacheLuceneSearchFilter *filter, OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy *strategy) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery, initWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy_, filter, strategy)
}

OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery *create_OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_initWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy_(OrgApacheLuceneSearchFilter *filter, OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy *strategy) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery, initWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy_, filter, strategy)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery)

@implementation OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1

- (instancetype)initWithOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery:(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery *)outer$
                                                           withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query {
  OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_initWithOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_withOrgApacheLuceneSearchQuery_(self, outer$, query);
  return self;
}

- (void)extractTermsWithJavaUtilSet:(id<JavaUtilSet>)terms {
}

- (jfloat)getValueForNormalization {
  return 0.0f;
}

- (void)normalizeWithFloat:(jfloat)norm
                 withFloat:(jfloat)topLevelBoost {
}

- (OrgApacheLuceneSearchExplanation *)explainWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                                                               withInt:(jint)doc {
  OrgApacheLuceneSearchScorer *s = [self scorerWithOrgApacheLuceneIndexLeafReaderContext:context];
  jboolean match;
  if (s == nil) {
    match = false;
  }
  else {
    OrgApacheLuceneSearchTwoPhaseIterator *twoPhase = [s asTwoPhaseIterator];
    if (twoPhase == nil) {
      match = ([s advanceWithInt:doc] == doc);
    }
    else {
      match = ([((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk([twoPhase approximation])) advanceWithInt:doc] == doc && [twoPhase matches]);
    }
  }
  if (match) {
    JreAssert([((OrgApacheLuceneSearchScorer *) nil_chk(s)) score] == 0.0f, @"org/apache/lucene/search/FilteredQuery.java:295 condition failed: assert s.score() == 0f;");
    return OrgApacheLuceneSearchExplanation_matchWithFloat_withNSString_withOrgApacheLuceneSearchExplanationArray_(0.0f, JreStrcat("$I", @"Match on id ", doc), [IOSObjectArray arrayWithLength:0 type:OrgApacheLuceneSearchExplanation_class_()]);
  }
  else {
    return OrgApacheLuceneSearchExplanation_matchWithFloat_withNSString_withOrgApacheLuceneSearchExplanationArray_(0.0f, JreStrcat("$I", @"No match on id ", doc), [IOSObjectArray arrayWithLength:0 type:OrgApacheLuceneSearchExplanation_class_()]);
  }
}

- (OrgApacheLuceneSearchScorer *)scorerWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context {
  OrgApacheLuceneSearchDocIdSet *set = [((OrgApacheLuceneSearchFilter *) nil_chk(this$0_->filter_)) getDocIdSetWithOrgApacheLuceneIndexLeafReaderContext:context withOrgApacheLuceneUtilBits:nil];
  if (set == nil) {
    return JreRetainedLocalValue(nil);
  }
  id<OrgApacheLuceneUtilBits> bits = [set bits];
  jboolean useRandomAccess = bits != nil && [((OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy *) nil_chk(this$0_->strategy_)) alwaysUseRandomAccess];
  OrgApacheLuceneSearchDocIdSetIterator *iterator;
  if (useRandomAccess) {
    iterator = nil;
  }
  else {
    iterator = [set iterator];
    if (iterator == nil) {
      return JreRetainedLocalValue(nil);
    }
    if (bits != nil) {
      useRandomAccess = [((OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterStrategy *) nil_chk(this$0_->strategy_)) useRandomAccessWithOrgApacheLuceneUtilBits:bits withLong:[iterator cost]];
    }
  }
  if (useRandomAccess) {
    OrgApacheLuceneSearchDocIdSetIterator *approximation = OrgApacheLuceneSearchDocIdSetIterator_allWithInt_([((OrgApacheLuceneIndexLeafReader *) nil_chk([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader])) maxDoc]);
    OrgApacheLuceneSearchTwoPhaseIterator *twoPhase = create_OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_1_initWithOrgApacheLuceneUtilBits_withOrgApacheLuceneSearchDocIdSetIterator_(bits, approximation);
    return create_OrgApacheLuceneSearchConstantScoreScorer_initWithOrgApacheLuceneSearchWeight_withFloat_withOrgApacheLuceneSearchTwoPhaseIterator_(self, 0.0f, twoPhase);
  }
  else {
    return create_OrgApacheLuceneSearchConstantScoreScorer_initWithOrgApacheLuceneSearchWeight_withFloat_withOrgApacheLuceneSearchDocIdSetIterator_(self, 0.0f, iterator);
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, 3, -1, -1 },
    { NULL, "F", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchExplanation;", 0x1, 7, 8, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchScorer;", 0x1, 9, 10, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery:withOrgApacheLuceneSearchQuery:);
  methods[1].selector = @selector(extractTermsWithJavaUtilSet:);
  methods[2].selector = @selector(getValueForNormalization);
  methods[3].selector = @selector(normalizeWithFloat:withFloat:);
  methods[4].selector = @selector(explainWithOrgApacheLuceneIndexLeafReaderContext:withInt:);
  methods[5].selector = @selector(scorerWithOrgApacheLuceneIndexLeafReaderContext:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery;LOrgApacheLuceneSearchQuery;", "extractTerms", "LJavaUtilSet;", "(Ljava/util/Set<Lorg/apache/lucene/index/Term;>;)V", "LJavaIoIOException;", "normalize", "FF", "explain", "LOrgApacheLuceneIndexLeafReaderContext;I", "scorer", "LOrgApacheLuceneIndexLeafReaderContext;", "LOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery;", "createWeightWithOrgApacheLuceneSearchIndexSearcher:withBoolean:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1 = { "", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x8010, 6, 1, 11, -1, 12, -1, -1 };
  return &_OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1;
}

@end

void OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_initWithOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1 *self, OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery *outer$, OrgApacheLuceneSearchQuery *query) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneSearchWeight_initWithOrgApacheLuceneSearchQuery_(self, query);
}

OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1 *new_OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_initWithOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery *outer$, OrgApacheLuceneSearchQuery *query) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1, initWithOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_withOrgApacheLuceneSearchQuery_, outer$, query)
}

OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1 *create_OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_initWithOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery *outer$, OrgApacheLuceneSearchQuery *query) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1, initWithOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_withOrgApacheLuceneSearchQuery_, outer$, query)
}

@implementation OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_1

- (instancetype)initWithOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)capture$0
      withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)approximation {
  OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_1_initWithOrgApacheLuceneUtilBits_withOrgApacheLuceneSearchDocIdSetIterator_(self, capture$0, approximation);
  return self;
}

- (jboolean)matches {
  jint doc = [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(approximation_)) docID];
  return [((id<OrgApacheLuceneUtilBits>) nil_chk(val$bits_)) getWithInt:doc];
}

- (void)dealloc {
  RELEASE_(val$bits_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneUtilBits:withOrgApacheLuceneSearchDocIdSetIterator:);
  methods[1].selector = @selector(matches);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$bits_", "LOrgApacheLuceneUtilBits;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneUtilBits;LOrgApacheLuceneSearchDocIdSetIterator;", "LJavaIoIOException;", "LOrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1;", "scorerWithOrgApacheLuceneIndexLeafReaderContext:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_1 = { "", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x8010, 2, 1, 2, -1, 3, -1, -1 };
  return &_OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_1;
}

@end

void OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_1_initWithOrgApacheLuceneUtilBits_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_1 *self, id<OrgApacheLuceneUtilBits> capture$0, OrgApacheLuceneSearchDocIdSetIterator *approximation) {
  JreStrongAssign(&self->val$bits_, capture$0);
  OrgApacheLuceneSearchTwoPhaseIterator_initWithOrgApacheLuceneSearchDocIdSetIterator_(self, approximation);
}

OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_1 *new_OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_1_initWithOrgApacheLuceneUtilBits_withOrgApacheLuceneSearchDocIdSetIterator_(id<OrgApacheLuceneUtilBits> capture$0, OrgApacheLuceneSearchDocIdSetIterator *approximation) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_1, initWithOrgApacheLuceneUtilBits_withOrgApacheLuceneSearchDocIdSetIterator_, capture$0, approximation)
}

OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_1 *create_OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_1_initWithOrgApacheLuceneUtilBits_withOrgApacheLuceneSearchDocIdSetIterator_(id<OrgApacheLuceneUtilBits> capture$0, OrgApacheLuceneSearchDocIdSetIterator *approximation) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchFilteredQuery_RandomAccessFilterWrapperQuery_1_1, initWithOrgApacheLuceneUtilBits_withOrgApacheLuceneSearchDocIdSetIterator_, capture$0, approximation)
}
