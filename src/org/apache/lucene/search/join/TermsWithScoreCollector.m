//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./join/src/java/org/apache/lucene/search/join/TermsWithScoreCollector.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Float.h"
#include "java/lang/Math.h"
#include "java/util/Arrays.h"
#include "org/apache/lucene/index/BinaryDocValues.h"
#include "org/apache/lucene/index/DocValues.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/index/SortedSetDocValues.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/SimpleCollector.h"
#include "org/apache/lucene/search/join/ScoreMode.h"
#include "org/apache/lucene/search/join/TermsWithScoreCollector.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefHash.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/join/TermsWithScoreCollector must not be compiled with ARC (-fobjc-arc)"
#endif

inline jint OrgApacheLuceneSearchJoinTermsWithScoreCollector_get_INITIAL_ARRAY_SIZE(void);
#define OrgApacheLuceneSearchJoinTermsWithScoreCollector_INITIAL_ARRAY_SIZE 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneSearchJoinTermsWithScoreCollector, INITIAL_ARRAY_SIZE, jint)

@implementation OrgApacheLuceneSearchJoinTermsWithScoreCollector

- (instancetype)initPackagePrivateWithNSString:(NSString *)field
        withOrgApacheLuceneSearchJoinScoreMode:(OrgApacheLuceneSearchJoinScoreMode *)scoreMode {
  OrgApacheLuceneSearchJoinTermsWithScoreCollector_initPackagePrivateWithNSString_withOrgApacheLuceneSearchJoinScoreMode_(self, field, scoreMode);
  return self;
}

- (OrgApacheLuceneUtilBytesRefHash *)getCollectedTerms {
  return collectedTerms_;
}

- (IOSFloatArray *)getScoresPerTerm {
  return scoreSums_;
}

- (void)setScorerWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)scorer {
  JreStrongAssign(&self->scorer_, scorer);
}

+ (OrgApacheLuceneSearchJoinTermsWithScoreCollector *)createWithNSString:(NSString *)field
                                                             withBoolean:(jboolean)multipleValuesPerDocument
                                  withOrgApacheLuceneSearchJoinScoreMode:(OrgApacheLuceneSearchJoinScoreMode *)scoreMode {
  return OrgApacheLuceneSearchJoinTermsWithScoreCollector_createWithNSString_withBoolean_withOrgApacheLuceneSearchJoinScoreMode_(field, multipleValuesPerDocument, scoreMode);
}

- (jboolean)needsScores {
  return true;
}

- (void)dealloc {
  RELEASE_(field_);
  RELEASE_(collectedTerms_);
  RELEASE_(scoreMode_);
  RELEASE_(scorer_);
  RELEASE_(scoreSums_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRefHash;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchJoinTermsWithScoreCollector;", 0x8, 4, 5, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithNSString:withOrgApacheLuceneSearchJoinScoreMode:);
  methods[1].selector = @selector(getCollectedTerms);
  methods[2].selector = @selector(getScoresPerTerm);
  methods[3].selector = @selector(setScorerWithOrgApacheLuceneSearchScorer:);
  methods[4].selector = @selector(createWithNSString:withBoolean:withOrgApacheLuceneSearchJoinScoreMode:);
  methods[5].selector = @selector(needsScores);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INITIAL_ARRAY_SIZE", "I", .constantValue.asInt = OrgApacheLuceneSearchJoinTermsWithScoreCollector_INITIAL_ARRAY_SIZE, 0x1a, -1, -1, -1, -1 },
    { "field_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "collectedTerms_", "LOrgApacheLuceneUtilBytesRefHash;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "scoreMode_", "LOrgApacheLuceneSearchJoinScoreMode;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "scorer_", "LOrgApacheLuceneSearchScorer;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "scoreSums_", "[F", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LOrgApacheLuceneSearchJoinScoreMode;", "setScorer", "LOrgApacheLuceneSearchScorer;", "LJavaIoIOException;", "create", "LNSString;ZLOrgApacheLuceneSearchJoinScoreMode;", "LOrgApacheLuceneSearchJoinTermsWithScoreCollector_SV;LOrgApacheLuceneSearchJoinTermsWithScoreCollector_MV;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchJoinTermsWithScoreCollector = { "TermsWithScoreCollector", "org.apache.lucene.search.join", ptrTable, methods, fields, 7, 0x400, 6, 6, -1, 6, -1, -1, -1 };
  return &_OrgApacheLuceneSearchJoinTermsWithScoreCollector;
}

@end

void OrgApacheLuceneSearchJoinTermsWithScoreCollector_initPackagePrivateWithNSString_withOrgApacheLuceneSearchJoinScoreMode_(OrgApacheLuceneSearchJoinTermsWithScoreCollector *self, NSString *field, OrgApacheLuceneSearchJoinScoreMode *scoreMode) {
  OrgApacheLuceneSearchSimpleCollector_init(self);
  JreStrongAssignAndConsume(&self->collectedTerms_, new_OrgApacheLuceneUtilBytesRefHash_init());
  JreStrongAssignAndConsume(&self->scoreSums_, [IOSFloatArray newArrayWithLength:OrgApacheLuceneSearchJoinTermsWithScoreCollector_INITIAL_ARRAY_SIZE]);
  JreStrongAssign(&self->field_, field);
  JreStrongAssign(&self->scoreMode_, scoreMode);
  if (scoreMode == JreLoadEnum(OrgApacheLuceneSearchJoinScoreMode, Min)) {
    JavaUtilArrays_fillWithFloatArray_withFloat_(self->scoreSums_, JavaLangFloat_POSITIVE_INFINITY);
  }
  else if (scoreMode == JreLoadEnum(OrgApacheLuceneSearchJoinScoreMode, Max)) {
    JavaUtilArrays_fillWithFloatArray_withFloat_(self->scoreSums_, JavaLangFloat_NEGATIVE_INFINITY);
  }
}

OrgApacheLuceneSearchJoinTermsWithScoreCollector *OrgApacheLuceneSearchJoinTermsWithScoreCollector_createWithNSString_withBoolean_withOrgApacheLuceneSearchJoinScoreMode_(NSString *field, jboolean multipleValuesPerDocument, OrgApacheLuceneSearchJoinScoreMode *scoreMode) {
  OrgApacheLuceneSearchJoinTermsWithScoreCollector_initialize();
  if (multipleValuesPerDocument) {
    switch ([scoreMode ordinal]) {
      case OrgApacheLuceneSearchJoinScoreMode_Enum_Avg:
      return create_OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV_Avg_initWithNSString_(field);
      default:
      return create_OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV_initWithNSString_withOrgApacheLuceneSearchJoinScoreMode_(field, scoreMode);
    }
  }
  else {
    switch ([scoreMode ordinal]) {
      case OrgApacheLuceneSearchJoinScoreMode_Enum_Avg:
      return create_OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV_Avg_initWithNSString_(field);
      default:
      return create_OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV_initWithNSString_withOrgApacheLuceneSearchJoinScoreMode_(field, scoreMode);
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchJoinTermsWithScoreCollector)

@implementation OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV

- (instancetype)initWithNSString:(NSString *)field
withOrgApacheLuceneSearchJoinScoreMode:(OrgApacheLuceneSearchJoinScoreMode *)scoreMode {
  OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV_initWithNSString_withOrgApacheLuceneSearchJoinScoreMode_(self, field, scoreMode);
  return self;
}

- (void)collectWithInt:(jint)doc {
  jint ord = [((OrgApacheLuceneUtilBytesRefHash *) nil_chk(collectedTerms_)) addWithOrgApacheLuceneUtilBytesRef:[((OrgApacheLuceneIndexBinaryDocValues *) nil_chk(fromDocTerms_)) getWithInt:doc]];
  if (ord < 0) {
    ord = -ord - 1;
  }
  else {
    if (ord >= ((IOSFloatArray *) nil_chk(scoreSums_))->size_) {
      jint begin = scoreSums_->size_;
      JreStrongAssign(&scoreSums_, OrgApacheLuceneUtilArrayUtil_growWithFloatArray_(scoreSums_));
      if (scoreMode_ == JreLoadEnum(OrgApacheLuceneSearchJoinScoreMode, Min)) {
        JavaUtilArrays_fillWithFloatArray_withInt_withInt_withFloat_(scoreSums_, begin, ((IOSFloatArray *) nil_chk(scoreSums_))->size_, JavaLangFloat_POSITIVE_INFINITY);
      }
      else if (scoreMode_ == JreLoadEnum(OrgApacheLuceneSearchJoinScoreMode, Max)) {
        JavaUtilArrays_fillWithFloatArray_withInt_withInt_withFloat_(scoreSums_, begin, ((IOSFloatArray *) nil_chk(scoreSums_))->size_, JavaLangFloat_NEGATIVE_INFINITY);
      }
    }
  }
  jfloat current = [((OrgApacheLuceneSearchScorer *) nil_chk(scorer_)) score];
  jfloat existing = IOSFloatArray_Get(nil_chk(scoreSums_), ord);
  if (JavaLangFloat_compareWithFloat_withFloat_(existing, 0.0f) == 0) {
    *IOSFloatArray_GetRef(nil_chk(scoreSums_), ord) = current;
  }
  else {
    switch ([scoreMode_ ordinal]) {
      case OrgApacheLuceneSearchJoinScoreMode_Enum_Total:
      *IOSFloatArray_GetRef(nil_chk(scoreSums_), ord) = IOSFloatArray_Get(scoreSums_, ord) + current;
      break;
      case OrgApacheLuceneSearchJoinScoreMode_Enum_Min:
      if (current < existing) {
        *IOSFloatArray_GetRef(nil_chk(scoreSums_), ord) = current;
      }
      break;
      case OrgApacheLuceneSearchJoinScoreMode_Enum_Max:
      if (current > existing) {
        *IOSFloatArray_GetRef(nil_chk(scoreSums_), ord) = current;
      }
      break;
    }
  }
}

- (void)doSetNextReaderWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context {
  JreStrongAssign(&fromDocTerms_, OrgApacheLuceneIndexDocValues_getBinaryWithOrgApacheLuceneIndexLeafReader_withNSString_([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader], field_));
}

- (void)dealloc {
  RELEASE_(fromDocTerms_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x4, 4, 5, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withOrgApacheLuceneSearchJoinScoreMode:);
  methods[1].selector = @selector(collectWithInt:);
  methods[2].selector = @selector(doSetNextReaderWithOrgApacheLuceneIndexLeafReaderContext:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "fromDocTerms_", "LOrgApacheLuceneIndexBinaryDocValues;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LOrgApacheLuceneSearchJoinScoreMode;", "collect", "I", "LJavaIoIOException;", "doSetNextReader", "LOrgApacheLuceneIndexLeafReaderContext;", "LOrgApacheLuceneSearchJoinTermsWithScoreCollector;", "LOrgApacheLuceneSearchJoinTermsWithScoreCollector_SV_Avg;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV = { "SV", "org.apache.lucene.search.join", ptrTable, methods, fields, 7, 0x8, 3, 1, 6, 7, -1, -1, -1 };
  return &_OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV;
}

@end

void OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV_initWithNSString_withOrgApacheLuceneSearchJoinScoreMode_(OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV *self, NSString *field, OrgApacheLuceneSearchJoinScoreMode *scoreMode) {
  OrgApacheLuceneSearchJoinTermsWithScoreCollector_initPackagePrivateWithNSString_withOrgApacheLuceneSearchJoinScoreMode_(self, field, scoreMode);
}

OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV *new_OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV_initWithNSString_withOrgApacheLuceneSearchJoinScoreMode_(NSString *field, OrgApacheLuceneSearchJoinScoreMode *scoreMode) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV, initWithNSString_withOrgApacheLuceneSearchJoinScoreMode_, field, scoreMode)
}

OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV *create_OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV_initWithNSString_withOrgApacheLuceneSearchJoinScoreMode_(NSString *field, OrgApacheLuceneSearchJoinScoreMode *scoreMode) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV, initWithNSString_withOrgApacheLuceneSearchJoinScoreMode_, field, scoreMode)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV)

@implementation OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV_Avg

- (instancetype)initWithNSString:(NSString *)field {
  OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV_Avg_initWithNSString_(self, field);
  return self;
}

- (void)collectWithInt:(jint)doc {
  jint ord = [((OrgApacheLuceneUtilBytesRefHash *) nil_chk(collectedTerms_)) addWithOrgApacheLuceneUtilBytesRef:[((OrgApacheLuceneIndexBinaryDocValues *) nil_chk(fromDocTerms_)) getWithInt:doc]];
  if (ord < 0) {
    ord = -ord - 1;
  }
  else {
    if (ord >= ((IOSFloatArray *) nil_chk(scoreSums_))->size_) {
      JreStrongAssign(&scoreSums_, OrgApacheLuceneUtilArrayUtil_growWithFloatArray_(scoreSums_));
      JreStrongAssign(&scoreCounts_, OrgApacheLuceneUtilArrayUtil_growWithIntArray_(scoreCounts_));
    }
  }
  jfloat current = [((OrgApacheLuceneSearchScorer *) nil_chk(scorer_)) score];
  jfloat existing = IOSFloatArray_Get(nil_chk(scoreSums_), ord);
  if (JavaLangFloat_compareWithFloat_withFloat_(existing, 0.0f) == 0) {
    *IOSFloatArray_GetRef(nil_chk(scoreSums_), ord) = current;
    *IOSIntArray_GetRef(nil_chk(scoreCounts_), ord) = 1;
  }
  else {
    *IOSFloatArray_GetRef(nil_chk(scoreSums_), ord) = IOSFloatArray_Get(scoreSums_, ord) + current;
    (*IOSIntArray_GetRef(nil_chk(scoreCounts_), ord))++;
  }
}

- (IOSFloatArray *)getScoresPerTerm {
  if (scoreCounts_ != nil) {
    for (jint i = 0; i < scoreCounts_->size_; i++) {
      *IOSFloatArray_GetRef(nil_chk(scoreSums_), i) = IOSFloatArray_Get(scoreSums_, i) / IOSIntArray_Get(scoreCounts_, i);
    }
    JreStrongAssign(&scoreCounts_, nil);
  }
  return scoreSums_;
}

- (void)dealloc {
  RELEASE_(scoreCounts_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "[F", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(collectWithInt:);
  methods[2].selector = @selector(getScoresPerTerm);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "scoreCounts_", "[I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "collect", "I", "LJavaIoIOException;", "LOrgApacheLuceneSearchJoinTermsWithScoreCollector_SV;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV_Avg = { "Avg", "org.apache.lucene.search.join", ptrTable, methods, fields, 7, 0x8, 3, 1, 4, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV_Avg;
}

@end

void OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV_Avg_initWithNSString_(OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV_Avg *self, NSString *field) {
  OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV_initWithNSString_withOrgApacheLuceneSearchJoinScoreMode_(self, field, JreLoadEnum(OrgApacheLuceneSearchJoinScoreMode, Avg));
  JreStrongAssignAndConsume(&self->scoreCounts_, [IOSIntArray newArrayWithLength:OrgApacheLuceneSearchJoinTermsWithScoreCollector_INITIAL_ARRAY_SIZE]);
}

OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV_Avg *new_OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV_Avg_initWithNSString_(NSString *field) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV_Avg, initWithNSString_, field)
}

OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV_Avg *create_OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV_Avg_initWithNSString_(NSString *field) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV_Avg, initWithNSString_, field)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchJoinTermsWithScoreCollector_SV_Avg)

@implementation OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV

- (instancetype)initWithNSString:(NSString *)field
withOrgApacheLuceneSearchJoinScoreMode:(OrgApacheLuceneSearchJoinScoreMode *)scoreMode {
  OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV_initWithNSString_withOrgApacheLuceneSearchJoinScoreMode_(self, field, scoreMode);
  return self;
}

- (void)collectWithInt:(jint)doc {
  [((OrgApacheLuceneIndexSortedSetDocValues *) nil_chk(fromDocTermOrds_)) setDocumentWithInt:doc];
  jlong ord;
  while ((ord = [((OrgApacheLuceneIndexSortedSetDocValues *) nil_chk(fromDocTermOrds_)) nextOrd]) != OrgApacheLuceneIndexSortedSetDocValues_NO_MORE_ORDS) {
    jint termID = [((OrgApacheLuceneUtilBytesRefHash *) nil_chk(collectedTerms_)) addWithOrgApacheLuceneUtilBytesRef:[((OrgApacheLuceneIndexSortedSetDocValues *) nil_chk(fromDocTermOrds_)) lookupOrdWithLong:ord]];
    if (termID < 0) {
      termID = -termID - 1;
    }
    else {
      if (termID >= ((IOSFloatArray *) nil_chk(scoreSums_))->size_) {
        jint begin = scoreSums_->size_;
        JreStrongAssign(&scoreSums_, OrgApacheLuceneUtilArrayUtil_growWithFloatArray_(scoreSums_));
        if (scoreMode_ == JreLoadEnum(OrgApacheLuceneSearchJoinScoreMode, Min)) {
          JavaUtilArrays_fillWithFloatArray_withInt_withInt_withFloat_(scoreSums_, begin, ((IOSFloatArray *) nil_chk(scoreSums_))->size_, JavaLangFloat_POSITIVE_INFINITY);
        }
        else if (scoreMode_ == JreLoadEnum(OrgApacheLuceneSearchJoinScoreMode, Max)) {
          JavaUtilArrays_fillWithFloatArray_withInt_withInt_withFloat_(scoreSums_, begin, ((IOSFloatArray *) nil_chk(scoreSums_))->size_, JavaLangFloat_NEGATIVE_INFINITY);
        }
      }
    }
    switch ([scoreMode_ ordinal]) {
      case OrgApacheLuceneSearchJoinScoreMode_Enum_Total:
      JrePlusAssignFloatF(IOSFloatArray_GetRef(nil_chk(scoreSums_), termID), [((OrgApacheLuceneSearchScorer *) nil_chk(scorer_)) score]);
      break;
      case OrgApacheLuceneSearchJoinScoreMode_Enum_Min:
      *IOSFloatArray_GetRef(nil_chk(scoreSums_), termID) = JavaLangMath_minWithFloat_withFloat_(IOSFloatArray_Get(scoreSums_, termID), [((OrgApacheLuceneSearchScorer *) nil_chk(scorer_)) score]);
      break;
      case OrgApacheLuceneSearchJoinScoreMode_Enum_Max:
      *IOSFloatArray_GetRef(nil_chk(scoreSums_), termID) = JavaLangMath_maxWithFloat_withFloat_(IOSFloatArray_Get(scoreSums_, termID), [((OrgApacheLuceneSearchScorer *) nil_chk(scorer_)) score]);
      break;
    }
  }
}

- (void)doSetNextReaderWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context {
  JreStrongAssign(&fromDocTermOrds_, OrgApacheLuceneIndexDocValues_getSortedSetWithOrgApacheLuceneIndexLeafReader_withNSString_([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader], field_));
}

- (void)dealloc {
  RELEASE_(fromDocTermOrds_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x4, 4, 5, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withOrgApacheLuceneSearchJoinScoreMode:);
  methods[1].selector = @selector(collectWithInt:);
  methods[2].selector = @selector(doSetNextReaderWithOrgApacheLuceneIndexLeafReaderContext:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "fromDocTermOrds_", "LOrgApacheLuceneIndexSortedSetDocValues;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LOrgApacheLuceneSearchJoinScoreMode;", "collect", "I", "LJavaIoIOException;", "doSetNextReader", "LOrgApacheLuceneIndexLeafReaderContext;", "LOrgApacheLuceneSearchJoinTermsWithScoreCollector;", "LOrgApacheLuceneSearchJoinTermsWithScoreCollector_MV_Avg;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV = { "MV", "org.apache.lucene.search.join", ptrTable, methods, fields, 7, 0x8, 3, 1, 6, 7, -1, -1, -1 };
  return &_OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV;
}

@end

void OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV_initWithNSString_withOrgApacheLuceneSearchJoinScoreMode_(OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV *self, NSString *field, OrgApacheLuceneSearchJoinScoreMode *scoreMode) {
  OrgApacheLuceneSearchJoinTermsWithScoreCollector_initPackagePrivateWithNSString_withOrgApacheLuceneSearchJoinScoreMode_(self, field, scoreMode);
}

OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV *new_OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV_initWithNSString_withOrgApacheLuceneSearchJoinScoreMode_(NSString *field, OrgApacheLuceneSearchJoinScoreMode *scoreMode) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV, initWithNSString_withOrgApacheLuceneSearchJoinScoreMode_, field, scoreMode)
}

OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV *create_OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV_initWithNSString_withOrgApacheLuceneSearchJoinScoreMode_(NSString *field, OrgApacheLuceneSearchJoinScoreMode *scoreMode) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV, initWithNSString_withOrgApacheLuceneSearchJoinScoreMode_, field, scoreMode)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV)

@implementation OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV_Avg

- (instancetype)initWithNSString:(NSString *)field {
  OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV_Avg_initWithNSString_(self, field);
  return self;
}

- (void)collectWithInt:(jint)doc {
  [((OrgApacheLuceneIndexSortedSetDocValues *) nil_chk(fromDocTermOrds_)) setDocumentWithInt:doc];
  jlong ord;
  while ((ord = [((OrgApacheLuceneIndexSortedSetDocValues *) nil_chk(fromDocTermOrds_)) nextOrd]) != OrgApacheLuceneIndexSortedSetDocValues_NO_MORE_ORDS) {
    jint termID = [((OrgApacheLuceneUtilBytesRefHash *) nil_chk(collectedTerms_)) addWithOrgApacheLuceneUtilBytesRef:[((OrgApacheLuceneIndexSortedSetDocValues *) nil_chk(fromDocTermOrds_)) lookupOrdWithLong:ord]];
    if (termID < 0) {
      termID = -termID - 1;
    }
    else {
      if (termID >= ((IOSFloatArray *) nil_chk(scoreSums_))->size_) {
        JreStrongAssign(&scoreSums_, OrgApacheLuceneUtilArrayUtil_growWithFloatArray_(scoreSums_));
        JreStrongAssign(&scoreCounts_, OrgApacheLuceneUtilArrayUtil_growWithIntArray_(scoreCounts_));
      }
    }
    JrePlusAssignFloatF(IOSFloatArray_GetRef(nil_chk(scoreSums_), termID), [((OrgApacheLuceneSearchScorer *) nil_chk(scorer_)) score]);
    (*IOSIntArray_GetRef(nil_chk(scoreCounts_), termID))++;
  }
}

- (IOSFloatArray *)getScoresPerTerm {
  if (scoreCounts_ != nil) {
    for (jint i = 0; i < scoreCounts_->size_; i++) {
      *IOSFloatArray_GetRef(nil_chk(scoreSums_), i) = IOSFloatArray_Get(scoreSums_, i) / IOSIntArray_Get(scoreCounts_, i);
    }
    JreStrongAssign(&scoreCounts_, nil);
  }
  return scoreSums_;
}

- (void)dealloc {
  RELEASE_(scoreCounts_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "[F", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(collectWithInt:);
  methods[2].selector = @selector(getScoresPerTerm);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "scoreCounts_", "[I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "collect", "I", "LJavaIoIOException;", "LOrgApacheLuceneSearchJoinTermsWithScoreCollector_MV;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV_Avg = { "Avg", "org.apache.lucene.search.join", ptrTable, methods, fields, 7, 0x8, 3, 1, 4, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV_Avg;
}

@end

void OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV_Avg_initWithNSString_(OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV_Avg *self, NSString *field) {
  OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV_initWithNSString_withOrgApacheLuceneSearchJoinScoreMode_(self, field, JreLoadEnum(OrgApacheLuceneSearchJoinScoreMode, Avg));
  JreStrongAssignAndConsume(&self->scoreCounts_, [IOSIntArray newArrayWithLength:OrgApacheLuceneSearchJoinTermsWithScoreCollector_INITIAL_ARRAY_SIZE]);
}

OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV_Avg *new_OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV_Avg_initWithNSString_(NSString *field) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV_Avg, initWithNSString_, field)
}

OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV_Avg *create_OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV_Avg_initWithNSString_(NSString *field) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV_Avg, initWithNSString_, field)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchJoinTermsWithScoreCollector_MV_Avg)
