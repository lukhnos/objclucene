//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Locale.h"
#include "java/util/Set.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/search/Explanation.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/Weight.h"
#include "org/apache/lucene/search/join/BitSetProducer.h"
#include "org/apache/lucene/search/join/ToChildBlockJoinQuery.h"
#include "org/apache/lucene/util/BitSet.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/join/ToChildBlockJoinQuery must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchJoinToChildBlockJoinQuery () {
 @public
  id<OrgApacheLuceneSearchJoinBitSetProducer> parentsFilter_;
  OrgApacheLuceneSearchQuery *parentQuery_;
  OrgApacheLuceneSearchQuery *origParentQuery_;
}

- (instancetype)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)origParentQuery
                    withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)parentQuery
       withOrgApacheLuceneSearchJoinBitSetProducer:(id<OrgApacheLuceneSearchJoinBitSetProducer>)parentsFilter;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchJoinToChildBlockJoinQuery, parentsFilter_, id<OrgApacheLuceneSearchJoinBitSetProducer>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchJoinToChildBlockJoinQuery, parentQuery_, OrgApacheLuceneSearchQuery *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchJoinToChildBlockJoinQuery, origParentQuery_, OrgApacheLuceneSearchQuery *)

__attribute__((unused)) static void OrgApacheLuceneSearchJoinToChildBlockJoinQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchJoinBitSetProducer_(OrgApacheLuceneSearchJoinToChildBlockJoinQuery *self, OrgApacheLuceneSearchQuery *origParentQuery, OrgApacheLuceneSearchQuery *parentQuery, id<OrgApacheLuceneSearchJoinBitSetProducer> parentsFilter);

__attribute__((unused)) static OrgApacheLuceneSearchJoinToChildBlockJoinQuery *new_OrgApacheLuceneSearchJoinToChildBlockJoinQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchJoinBitSetProducer_(OrgApacheLuceneSearchQuery *origParentQuery, OrgApacheLuceneSearchQuery *parentQuery, id<OrgApacheLuceneSearchJoinBitSetProducer> parentsFilter) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchJoinToChildBlockJoinQuery *create_OrgApacheLuceneSearchJoinToChildBlockJoinQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchJoinBitSetProducer_(OrgApacheLuceneSearchQuery *origParentQuery, OrgApacheLuceneSearchQuery *parentQuery, id<OrgApacheLuceneSearchJoinBitSetProducer> parentsFilter);

@interface OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight : OrgApacheLuceneSearchWeight {
 @public
  OrgApacheLuceneSearchQuery *joinQuery_;
  OrgApacheLuceneSearchWeight *parentWeight_;
  id<OrgApacheLuceneSearchJoinBitSetProducer> parentsFilter_;
  jboolean doScores_;
}

- (instancetype)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)joinQuery
                   withOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)parentWeight
       withOrgApacheLuceneSearchJoinBitSetProducer:(id<OrgApacheLuceneSearchJoinBitSetProducer>)parentsFilter
                                       withBoolean:(jboolean)doScores;

- (void)extractTermsWithJavaUtilSet:(id<JavaUtilSet>)terms;

- (jfloat)getValueForNormalization;

- (void)normalizeWithFloat:(jfloat)norm
                 withFloat:(jfloat)topLevelBoost;

- (OrgApacheLuceneSearchScorer *)scorerWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)readerContext;

- (OrgApacheLuceneSearchExplanation *)explainWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                                                               withInt:(jint)doc;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight, joinQuery_, OrgApacheLuceneSearchQuery *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight, parentWeight_, OrgApacheLuceneSearchWeight *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight, parentsFilter_, id<OrgApacheLuceneSearchJoinBitSetProducer>)

__attribute__((unused)) static void OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchJoinBitSetProducer_withBoolean_(OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight *self, OrgApacheLuceneSearchQuery *joinQuery, OrgApacheLuceneSearchWeight *parentWeight, id<OrgApacheLuceneSearchJoinBitSetProducer> parentsFilter, jboolean doScores);

__attribute__((unused)) static OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight *new_OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchJoinBitSetProducer_withBoolean_(OrgApacheLuceneSearchQuery *joinQuery, OrgApacheLuceneSearchWeight *parentWeight, id<OrgApacheLuceneSearchJoinBitSetProducer> parentsFilter, jboolean doScores) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight *create_OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchJoinBitSetProducer_withBoolean_(OrgApacheLuceneSearchQuery *joinQuery, OrgApacheLuceneSearchWeight *parentWeight, id<OrgApacheLuceneSearchJoinBitSetProducer> parentsFilter, jboolean doScores);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight)

@interface OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer () {
 @public
  OrgApacheLuceneSearchScorer *parentScorer_;
  OrgApacheLuceneUtilBitSet *parentBits_;
  jboolean doScores_;
  jfloat parentScore_;
  jint parentFreq_;
  jint childDoc_;
  jint parentDoc_;
}

/*!
 @brief Detect mis-use, where provided parent query in fact
   sometimes returns child documents.
 */
- (void)validateParentDoc;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer, parentScorer_, OrgApacheLuceneSearchScorer *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer, parentBits_, OrgApacheLuceneUtilBitSet *)

__attribute__((unused)) static void OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer_validateParentDoc(OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer *self);

NSString *OrgApacheLuceneSearchJoinToChildBlockJoinQuery_INVALID_QUERY_MESSAGE = @"Parent query yields document which is not matched by parents filter, docID=";
NSString *OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ILLEGAL_ADVANCE_ON_PARENT = @"Expect to be advanced on child docs only. got docID=";

@implementation OrgApacheLuceneSearchJoinToChildBlockJoinQuery

+ (NSString *)INVALID_QUERY_MESSAGE {
  return OrgApacheLuceneSearchJoinToChildBlockJoinQuery_INVALID_QUERY_MESSAGE;
}

+ (NSString *)ILLEGAL_ADVANCE_ON_PARENT {
  return OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ILLEGAL_ADVANCE_ON_PARENT;
}

- (instancetype)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)parentQuery
       withOrgApacheLuceneSearchJoinBitSetProducer:(id<OrgApacheLuceneSearchJoinBitSetProducer>)parentsFilter {
  OrgApacheLuceneSearchJoinToChildBlockJoinQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchJoinBitSetProducer_(self, parentQuery, parentsFilter);
  return self;
}

- (instancetype)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)origParentQuery
                    withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)parentQuery
       withOrgApacheLuceneSearchJoinBitSetProducer:(id<OrgApacheLuceneSearchJoinBitSetProducer>)parentsFilter {
  OrgApacheLuceneSearchJoinToChildBlockJoinQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchJoinBitSetProducer_(self, origParentQuery, parentQuery, parentsFilter);
  return self;
}

- (OrgApacheLuceneSearchWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                        withBoolean:(jboolean)needsScores {
  return create_OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchJoinBitSetProducer_withBoolean_(self, [((OrgApacheLuceneSearchQuery *) nil_chk(parentQuery_)) createWeightWithOrgApacheLuceneSearchIndexSearcher:searcher withBoolean:needsScores], parentsFilter_, needsScores);
}

- (OrgApacheLuceneSearchQuery *)getParentQuery {
  return parentQuery_;
}

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  OrgApacheLuceneSearchQuery *parentRewrite = [((OrgApacheLuceneSearchQuery *) nil_chk(parentQuery_)) rewriteWithOrgApacheLuceneIndexIndexReader:reader];
  if (!JreObjectEqualsEquals(parentRewrite, parentQuery_)) {
    OrgApacheLuceneSearchQuery *rewritten = create_OrgApacheLuceneSearchJoinToChildBlockJoinQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchJoinBitSetProducer_(parentQuery_, parentRewrite, parentsFilter_);
    [rewritten setBoostWithFloat:[self getBoost]];
    return rewritten;
  }
  else {
    return self;
  }
}

- (NSString *)toStringWithNSString:(NSString *)field {
  return JreStrcat("$$C", @"ToChildBlockJoinQuery (", [((OrgApacheLuceneSearchQuery *) nil_chk(parentQuery_)) description], ')');
}

- (jboolean)isEqual:(id)_other {
  if ([_other isKindOfClass:[OrgApacheLuceneSearchJoinToChildBlockJoinQuery class]]) {
    OrgApacheLuceneSearchJoinToChildBlockJoinQuery *other = (OrgApacheLuceneSearchJoinToChildBlockJoinQuery *) _other;
    return [((OrgApacheLuceneSearchQuery *) nil_chk(origParentQuery_)) isEqual:((OrgApacheLuceneSearchJoinToChildBlockJoinQuery *) nil_chk(other))->origParentQuery_] && [((id<OrgApacheLuceneSearchJoinBitSetProducer>) nil_chk(parentsFilter_)) isEqual:other->parentsFilter_] && [super isEqual:other];
  }
  else {
    return false;
  }
}

- (NSUInteger)hash {
  jint prime = 31;
  jint hash_ = ((jint) [super hash]);
  hash_ = prime * hash_ + ((jint) [((OrgApacheLuceneSearchQuery *) nil_chk(origParentQuery_)) hash]);
  hash_ = prime * hash_ + ((jint) [((id<OrgApacheLuceneSearchJoinBitSetProducer>) nil_chk(parentsFilter_)) hash]);
  return hash_;
}

- (OrgApacheLuceneSearchJoinToChildBlockJoinQuery *)java_clone {
  return create_OrgApacheLuceneSearchJoinToChildBlockJoinQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchJoinBitSetProducer_([((OrgApacheLuceneSearchQuery *) nil_chk(origParentQuery_)) java_clone], parentsFilter_);
}

- (void)dealloc {
  RELEASE_(parentsFilter_);
  RELEASE_(parentQuery_);
  RELEASE_(origParentQuery_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchWeight;", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, 5, 6, 4, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 11, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchJoinToChildBlockJoinQuery;", 0x1, 12, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchQuery:withOrgApacheLuceneSearchJoinBitSetProducer:);
  methods[1].selector = @selector(initWithOrgApacheLuceneSearchQuery:withOrgApacheLuceneSearchQuery:withOrgApacheLuceneSearchJoinBitSetProducer:);
  methods[2].selector = @selector(createWeightWithOrgApacheLuceneSearchIndexSearcher:withBoolean:);
  methods[3].selector = @selector(getParentQuery);
  methods[4].selector = @selector(rewriteWithOrgApacheLuceneIndexIndexReader:);
  methods[5].selector = @selector(toStringWithNSString:);
  methods[6].selector = @selector(isEqual:);
  methods[7].selector = @selector(hash);
  methods[8].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INVALID_QUERY_MESSAGE", "LNSString;", .constantValue.asLong = 0, 0x18, -1, 13, -1, -1 },
    { "ILLEGAL_ADVANCE_ON_PARENT", "LNSString;", .constantValue.asLong = 0, 0x18, -1, 14, -1, -1 },
    { "parentsFilter_", "LOrgApacheLuceneSearchJoinBitSetProducer;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "parentQuery_", "LOrgApacheLuceneSearchQuery;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "origParentQuery_", "LOrgApacheLuceneSearchQuery;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchQuery;LOrgApacheLuceneSearchJoinBitSetProducer;", "LOrgApacheLuceneSearchQuery;LOrgApacheLuceneSearchQuery;LOrgApacheLuceneSearchJoinBitSetProducer;", "createWeight", "LOrgApacheLuceneSearchIndexSearcher;Z", "LJavaIoIOException;", "rewrite", "LOrgApacheLuceneIndexIndexReader;", "toString", "LNSString;", "equals", "LNSObject;", "hashCode", "clone", &OrgApacheLuceneSearchJoinToChildBlockJoinQuery_INVALID_QUERY_MESSAGE, &OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ILLEGAL_ADVANCE_ON_PARENT, "LOrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight;LOrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchJoinToChildBlockJoinQuery = { "ToChildBlockJoinQuery", "org.apache.lucene.search.join", ptrTable, methods, fields, 7, 0x1, 9, 5, -1, 15, -1, -1, -1 };
  return &_OrgApacheLuceneSearchJoinToChildBlockJoinQuery;
}

@end

void OrgApacheLuceneSearchJoinToChildBlockJoinQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchJoinBitSetProducer_(OrgApacheLuceneSearchJoinToChildBlockJoinQuery *self, OrgApacheLuceneSearchQuery *parentQuery, id<OrgApacheLuceneSearchJoinBitSetProducer> parentsFilter) {
  OrgApacheLuceneSearchQuery_init(self);
  JreStrongAssign(&self->origParentQuery_, parentQuery);
  JreStrongAssign(&self->parentQuery_, parentQuery);
  JreStrongAssign(&self->parentsFilter_, parentsFilter);
}

OrgApacheLuceneSearchJoinToChildBlockJoinQuery *new_OrgApacheLuceneSearchJoinToChildBlockJoinQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchJoinBitSetProducer_(OrgApacheLuceneSearchQuery *parentQuery, id<OrgApacheLuceneSearchJoinBitSetProducer> parentsFilter) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchJoinToChildBlockJoinQuery, initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchJoinBitSetProducer_, parentQuery, parentsFilter)
}

OrgApacheLuceneSearchJoinToChildBlockJoinQuery *create_OrgApacheLuceneSearchJoinToChildBlockJoinQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchJoinBitSetProducer_(OrgApacheLuceneSearchQuery *parentQuery, id<OrgApacheLuceneSearchJoinBitSetProducer> parentsFilter) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchJoinToChildBlockJoinQuery, initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchJoinBitSetProducer_, parentQuery, parentsFilter)
}

void OrgApacheLuceneSearchJoinToChildBlockJoinQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchJoinBitSetProducer_(OrgApacheLuceneSearchJoinToChildBlockJoinQuery *self, OrgApacheLuceneSearchQuery *origParentQuery, OrgApacheLuceneSearchQuery *parentQuery, id<OrgApacheLuceneSearchJoinBitSetProducer> parentsFilter) {
  OrgApacheLuceneSearchQuery_init(self);
  JreStrongAssign(&self->origParentQuery_, origParentQuery);
  JreStrongAssign(&self->parentQuery_, parentQuery);
  JreStrongAssign(&self->parentsFilter_, parentsFilter);
}

OrgApacheLuceneSearchJoinToChildBlockJoinQuery *new_OrgApacheLuceneSearchJoinToChildBlockJoinQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchJoinBitSetProducer_(OrgApacheLuceneSearchQuery *origParentQuery, OrgApacheLuceneSearchQuery *parentQuery, id<OrgApacheLuceneSearchJoinBitSetProducer> parentsFilter) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchJoinToChildBlockJoinQuery, initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchJoinBitSetProducer_, origParentQuery, parentQuery, parentsFilter)
}

OrgApacheLuceneSearchJoinToChildBlockJoinQuery *create_OrgApacheLuceneSearchJoinToChildBlockJoinQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchJoinBitSetProducer_(OrgApacheLuceneSearchQuery *origParentQuery, OrgApacheLuceneSearchQuery *parentQuery, id<OrgApacheLuceneSearchJoinBitSetProducer> parentsFilter) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchJoinToChildBlockJoinQuery, initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchJoinBitSetProducer_, origParentQuery, parentQuery, parentsFilter)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchJoinToChildBlockJoinQuery)

@implementation OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight

- (instancetype)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)joinQuery
                   withOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)parentWeight
       withOrgApacheLuceneSearchJoinBitSetProducer:(id<OrgApacheLuceneSearchJoinBitSetProducer>)parentsFilter
                                       withBoolean:(jboolean)doScores {
  OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchJoinBitSetProducer_withBoolean_(self, joinQuery, parentWeight, parentsFilter, doScores);
  return self;
}

- (void)extractTermsWithJavaUtilSet:(id<JavaUtilSet>)terms {
}

- (jfloat)getValueForNormalization {
  return [((OrgApacheLuceneSearchWeight *) nil_chk(parentWeight_)) getValueForNormalization] * [((OrgApacheLuceneSearchQuery *) nil_chk(joinQuery_)) getBoost] * [joinQuery_ getBoost];
}

- (void)normalizeWithFloat:(jfloat)norm
                 withFloat:(jfloat)topLevelBoost {
  [((OrgApacheLuceneSearchWeight *) nil_chk(parentWeight_)) normalizeWithFloat:norm withFloat:topLevelBoost * [((OrgApacheLuceneSearchQuery *) nil_chk(joinQuery_)) getBoost]];
}

- (OrgApacheLuceneSearchScorer *)scorerWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)readerContext {
  OrgApacheLuceneSearchScorer *parentScorer = [((OrgApacheLuceneSearchWeight *) nil_chk(parentWeight_)) scorerWithOrgApacheLuceneIndexLeafReaderContext:readerContext];
  if (parentScorer == nil) {
    return nil;
  }
  OrgApacheLuceneUtilBitSet *parents = [((id<OrgApacheLuceneSearchJoinBitSetProducer>) nil_chk(parentsFilter_)) getBitSetWithOrgApacheLuceneIndexLeafReaderContext:readerContext];
  if (parents == nil) {
    return nil;
  }
  return create_OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer_initWithOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchScorer_withOrgApacheLuceneUtilBitSet_withBoolean_(self, parentScorer, parents, doScores_);
}

- (OrgApacheLuceneSearchExplanation *)explainWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                                                               withInt:(jint)doc {
  OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer *scorer = (OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer *) cast_chk([self scorerWithOrgApacheLuceneIndexLeafReaderContext:context], [OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer class]);
  if (scorer != nil && [scorer advanceWithInt:doc] == doc) {
    jint parentDoc = [scorer getParentDoc];
    return OrgApacheLuceneSearchExplanation_matchWithFloat_withNSString_withOrgApacheLuceneSearchExplanationArray_([scorer score], NSString_java_formatWithJavaUtilLocale_withNSString_withNSObjectArray_(JreLoadStatic(JavaUtilLocale, ROOT), @"Score based on parent document %d", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(parentDoc + ((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context))->docBase_) } count:1 type:NSObject_class_()]), [IOSObjectArray arrayWithObjects:(id[]){ [((OrgApacheLuceneSearchWeight *) nil_chk(parentWeight_)) explainWithOrgApacheLuceneIndexLeafReaderContext:context withInt:parentDoc] } count:1 type:OrgApacheLuceneSearchExplanation_class_()]);
  }
  return OrgApacheLuceneSearchExplanation_noMatchWithNSString_withOrgApacheLuceneSearchExplanationArray_(@"Not a match", [IOSObjectArray arrayWithLength:0 type:OrgApacheLuceneSearchExplanation_class_()]);
}

- (void)dealloc {
  RELEASE_(joinQuery_);
  RELEASE_(parentWeight_);
  RELEASE_(parentsFilter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, 3, -1, -1 },
    { NULL, "F", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchScorer;", 0x1, 7, 8, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchExplanation;", 0x1, 9, 10, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchQuery:withOrgApacheLuceneSearchWeight:withOrgApacheLuceneSearchJoinBitSetProducer:withBoolean:);
  methods[1].selector = @selector(extractTermsWithJavaUtilSet:);
  methods[2].selector = @selector(getValueForNormalization);
  methods[3].selector = @selector(normalizeWithFloat:withFloat:);
  methods[4].selector = @selector(scorerWithOrgApacheLuceneIndexLeafReaderContext:);
  methods[5].selector = @selector(explainWithOrgApacheLuceneIndexLeafReaderContext:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "joinQuery_", "LOrgApacheLuceneSearchQuery;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "parentWeight_", "LOrgApacheLuceneSearchWeight;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "parentsFilter_", "LOrgApacheLuceneSearchJoinBitSetProducer;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "doScores_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchQuery;LOrgApacheLuceneSearchWeight;LOrgApacheLuceneSearchJoinBitSetProducer;Z", "extractTerms", "LJavaUtilSet;", "(Ljava/util/Set<Lorg/apache/lucene/index/Term;>;)V", "LJavaIoIOException;", "normalize", "FF", "scorer", "LOrgApacheLuceneIndexLeafReaderContext;", "explain", "LOrgApacheLuceneIndexLeafReaderContext;I", "LOrgApacheLuceneSearchJoinToChildBlockJoinQuery;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight = { "ToChildBlockJoinWeight", "org.apache.lucene.search.join", ptrTable, methods, fields, 7, 0xa, 6, 4, 11, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight;
}

@end

void OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchJoinBitSetProducer_withBoolean_(OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight *self, OrgApacheLuceneSearchQuery *joinQuery, OrgApacheLuceneSearchWeight *parentWeight, id<OrgApacheLuceneSearchJoinBitSetProducer> parentsFilter, jboolean doScores) {
  OrgApacheLuceneSearchWeight_initWithOrgApacheLuceneSearchQuery_(self, joinQuery);
  JreStrongAssign(&self->joinQuery_, joinQuery);
  JreStrongAssign(&self->parentWeight_, parentWeight);
  JreStrongAssign(&self->parentsFilter_, parentsFilter);
  self->doScores_ = doScores;
}

OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight *new_OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchJoinBitSetProducer_withBoolean_(OrgApacheLuceneSearchQuery *joinQuery, OrgApacheLuceneSearchWeight *parentWeight, id<OrgApacheLuceneSearchJoinBitSetProducer> parentsFilter, jboolean doScores) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight, initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchJoinBitSetProducer_withBoolean_, joinQuery, parentWeight, parentsFilter, doScores)
}

OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight *create_OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchJoinBitSetProducer_withBoolean_(OrgApacheLuceneSearchQuery *joinQuery, OrgApacheLuceneSearchWeight *parentWeight, id<OrgApacheLuceneSearchJoinBitSetProducer> parentsFilter, jboolean doScores) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight, initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchJoinBitSetProducer_withBoolean_, joinQuery, parentWeight, parentsFilter, doScores)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinWeight)

@implementation OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer

- (instancetype)initWithOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight
                    withOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)parentScorer
                      withOrgApacheLuceneUtilBitSet:(OrgApacheLuceneUtilBitSet *)parentBits
                                        withBoolean:(jboolean)doScores {
  OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer_initWithOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchScorer_withOrgApacheLuceneUtilBitSet_withBoolean_(self, weight, parentScorer, parentBits, doScores);
  return self;
}

- (id<JavaUtilCollection>)getChildren {
  return JavaUtilCollections_singletonWithId_(create_OrgApacheLuceneSearchScorer_ChildScorer_initWithOrgApacheLuceneSearchScorer_withNSString_(parentScorer_, @"BLOCK_JOIN"));
}

- (jint)nextDoc {
  while (true) {
    if (childDoc_ + 1 == parentDoc_) {
      while (true) {
        parentDoc_ = [((OrgApacheLuceneSearchScorer *) nil_chk(parentScorer_)) nextDoc];
        OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer_validateParentDoc(self);
        if (parentDoc_ == 0) {
          parentDoc_ = [parentScorer_ nextDoc];
          OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer_validateParentDoc(self);
        }
        if (parentDoc_ == OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
          childDoc_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
          return childDoc_;
        }
        childDoc_ = 1 + [((OrgApacheLuceneUtilBitSet *) nil_chk(parentBits_)) prevSetBitWithInt:parentDoc_ - 1];
        if (childDoc_ == parentDoc_) {
          continue;
        }
        if (childDoc_ < parentDoc_) {
          if (doScores_) {
            parentScore_ = [parentScorer_ score];
            parentFreq_ = [parentScorer_ freq];
          }
          return childDoc_;
        }
        else {
        }
      }
    }
    else {
      JreAssert(childDoc_ < parentDoc_, JreStrcat("$I$I", @"childDoc=", childDoc_, @" parentDoc=", parentDoc_));
      childDoc_++;
      return childDoc_;
    }
  }
}

- (void)validateParentDoc {
  OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer_validateParentDoc(self);
}

- (jint)docID {
  return childDoc_;
}

- (jfloat)score {
  return parentScore_;
}

- (jint)freq {
  return parentFreq_;
}

- (jint)advanceWithInt:(jint)childTarget {
  if (childTarget >= parentDoc_) {
    if (childTarget == OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
      return childDoc_ = parentDoc_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
    }
    parentDoc_ = [((OrgApacheLuceneSearchScorer *) nil_chk(parentScorer_)) advanceWithInt:childTarget + 1];
    OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer_validateParentDoc(self);
    if (parentDoc_ == OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
      return childDoc_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
    }
    while (true) {
      jint firstChild = [((OrgApacheLuceneUtilBitSet *) nil_chk(parentBits_)) prevSetBitWithInt:parentDoc_ - 1] + 1;
      if (firstChild != parentDoc_) {
        childTarget = JavaLangMath_maxWithInt_withInt_(childTarget, firstChild);
        break;
      }
      parentDoc_ = [parentScorer_ nextDoc];
      OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer_validateParentDoc(self);
      if (parentDoc_ == OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
        return childDoc_ = OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
      }
    }
    if (doScores_) {
      parentScore_ = [parentScorer_ score];
      parentFreq_ = [parentScorer_ freq];
    }
  }
  JreAssert(childTarget < parentDoc_, @"org/apache/lucene/search/join/ToChildBlockJoinQuery.java:299 condition failed: assert childTarget < parentDoc;");
  JreAssert(![((OrgApacheLuceneUtilBitSet *) nil_chk(parentBits_)) getWithInt:childTarget], @"org/apache/lucene/search/join/ToChildBlockJoinQuery.java:300 condition failed: assert !parentBits.get(childTarget);");
  childDoc_ = childTarget;
  return childDoc_;
}

- (jlong)cost {
  return [((OrgApacheLuceneSearchScorer *) nil_chk(parentScorer_)) cost];
}

- (jint)getParentDoc {
  return parentDoc_;
}

- (void)dealloc {
  RELEASE_(parentScorer_);
  RELEASE_(parentBits_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, 1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 2, -1, -1, -1 },
    { NULL, "I", 0x1, 3, 4, 2, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchWeight:withOrgApacheLuceneSearchScorer:withOrgApacheLuceneUtilBitSet:withBoolean:);
  methods[1].selector = @selector(getChildren);
  methods[2].selector = @selector(nextDoc);
  methods[3].selector = @selector(validateParentDoc);
  methods[4].selector = @selector(docID);
  methods[5].selector = @selector(score);
  methods[6].selector = @selector(freq);
  methods[7].selector = @selector(advanceWithInt:);
  methods[8].selector = @selector(cost);
  methods[9].selector = @selector(getParentDoc);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "parentScorer_", "LOrgApacheLuceneSearchScorer;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "parentBits_", "LOrgApacheLuceneUtilBitSet;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "doScores_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "parentScore_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "parentFreq_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "childDoc_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "parentDoc_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchWeight;LOrgApacheLuceneSearchScorer;LOrgApacheLuceneUtilBitSet;Z", "()Ljava/util/Collection<Lorg/apache/lucene/search/Scorer$ChildScorer;>;", "LJavaIoIOException;", "advance", "I", "LOrgApacheLuceneSearchJoinToChildBlockJoinQuery;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer = { "ToChildBlockJoinScorer", "org.apache.lucene.search.join", ptrTable, methods, fields, 7, 0x8, 10, 7, 5, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer;
}

@end

void OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer_initWithOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchScorer_withOrgApacheLuceneUtilBitSet_withBoolean_(OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer *self, OrgApacheLuceneSearchWeight *weight, OrgApacheLuceneSearchScorer *parentScorer, OrgApacheLuceneUtilBitSet *parentBits, jboolean doScores) {
  OrgApacheLuceneSearchScorer_initWithOrgApacheLuceneSearchWeight_(self, weight);
  self->parentFreq_ = 1;
  self->childDoc_ = -1;
  self->parentDoc_ = 0;
  self->doScores_ = doScores;
  JreStrongAssign(&self->parentBits_, parentBits);
  JreStrongAssign(&self->parentScorer_, parentScorer);
}

OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer *new_OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer_initWithOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchScorer_withOrgApacheLuceneUtilBitSet_withBoolean_(OrgApacheLuceneSearchWeight *weight, OrgApacheLuceneSearchScorer *parentScorer, OrgApacheLuceneUtilBitSet *parentBits, jboolean doScores) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer, initWithOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchScorer_withOrgApacheLuceneUtilBitSet_withBoolean_, weight, parentScorer, parentBits, doScores)
}

OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer *create_OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer_initWithOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchScorer_withOrgApacheLuceneUtilBitSet_withBoolean_(OrgApacheLuceneSearchWeight *weight, OrgApacheLuceneSearchScorer *parentScorer, OrgApacheLuceneUtilBitSet *parentBits, jboolean doScores) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer, initWithOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchScorer_withOrgApacheLuceneUtilBitSet_withBoolean_, weight, parentScorer, parentBits, doScores)
}

void OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer_validateParentDoc(OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer *self) {
  if (self->parentDoc_ != OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS && ![((OrgApacheLuceneUtilBitSet *) nil_chk(self->parentBits_)) getWithInt:self->parentDoc_]) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I", OrgApacheLuceneSearchJoinToChildBlockJoinQuery_INVALID_QUERY_MESSAGE, self->parentDoc_));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchJoinToChildBlockJoinQuery_ToChildBlockJoinScorer)
