//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/util/Comparator.h"
#include "java/util/Locale.h"
#include "java/util/Set.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/index/PostingsEnum.h"
#include "org/apache/lucene/index/Terms.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/search/Explanation.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/Weight.h"
#include "org/apache/lucene/search/join/TermsIncludingScoreQuery.h"
#include "org/apache/lucene/util/BitSetIterator.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefHash.h"
#include "org/apache/lucene/util/FixedBitSet.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/join/TermsIncludingScoreQuery must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchJoinTermsIncludingScoreQuery ()

- (instancetype)initPackagePrivateWithNSString:(NSString *)field
                                   withBoolean:(jboolean)multipleValuesPerDocument
           withOrgApacheLuceneUtilBytesRefHash:(OrgApacheLuceneUtilBytesRefHash *)terms
                                withFloatArray:(IOSFloatArray *)scores
                                  withIntArray:(IOSIntArray *)ords
                withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)originalQuery
                withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)unwrittenOriginalQuery;

@end

__attribute__((unused)) static void OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_initPackagePrivateWithNSString_withBoolean_withOrgApacheLuceneUtilBytesRefHash_withFloatArray_withIntArray_withOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *self, NSString *field, jboolean multipleValuesPerDocument, OrgApacheLuceneUtilBytesRefHash *terms, IOSFloatArray *scores, IOSIntArray *ords, OrgApacheLuceneSearchQuery *originalQuery, OrgApacheLuceneSearchQuery *unwrittenOriginalQuery);

__attribute__((unused)) static OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *new_OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_initPackagePrivateWithNSString_withBoolean_withOrgApacheLuceneUtilBytesRefHash_withFloatArray_withIntArray_withOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchQuery_(NSString *field, jboolean multipleValuesPerDocument, OrgApacheLuceneUtilBytesRefHash *terms, IOSFloatArray *scores, IOSIntArray *ords, OrgApacheLuceneSearchQuery *originalQuery, OrgApacheLuceneSearchQuery *unwrittenOriginalQuery) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *create_OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_initPackagePrivateWithNSString_withBoolean_withOrgApacheLuceneUtilBytesRefHash_withFloatArray_withIntArray_withOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchQuery_(NSString *field, jboolean multipleValuesPerDocument, OrgApacheLuceneUtilBytesRefHash *terms, IOSFloatArray *scores, IOSIntArray *ords, OrgApacheLuceneSearchQuery *originalQuery, OrgApacheLuceneSearchQuery *unwrittenOriginalQuery);

@interface OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_1 : OrgApacheLuceneSearchWeight {
 @public
  OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *this$0_;
  OrgApacheLuceneSearchWeight *val$originalWeight_;
}

- (instancetype)initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery:(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *)outer$
                                          withOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)capture$0
                                           withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query;

- (void)extractTermsWithJavaUtilSet:(id<JavaUtilSet>)terms;

- (OrgApacheLuceneSearchExplanation *)explainWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                                                               withInt:(jint)doc;

- (jfloat)getValueForNormalization;

- (void)normalizeWithFloat:(jfloat)norm
                 withFloat:(jfloat)topLevelBoost;

- (OrgApacheLuceneSearchScorer *)scorerWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_1)

__attribute__((unused)) static void OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_1_initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_1 *self, OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *outer$, OrgApacheLuceneSearchWeight *capture$0, OrgApacheLuceneSearchQuery *query);

__attribute__((unused)) static OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_1 *new_OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_1_initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *outer$, OrgApacheLuceneSearchWeight *capture$0, OrgApacheLuceneSearchQuery *query) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_1 *create_OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_1_initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *outer$, OrgApacheLuceneSearchWeight *capture$0, OrgApacheLuceneSearchQuery *query);

@interface OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_SVInOrderScorer () {
 @public
  OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *this$0_;
}

@end

@interface OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_MVInOrderScorer () {
 @public
  OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *this$1_;
}

@end

@implementation OrgApacheLuceneSearchJoinTermsIncludingScoreQuery

- (instancetype)initPackagePrivateWithNSString:(NSString *)field
                                   withBoolean:(jboolean)multipleValuesPerDocument
           withOrgApacheLuceneUtilBytesRefHash:(OrgApacheLuceneUtilBytesRefHash *)terms
                                withFloatArray:(IOSFloatArray *)scores
                withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)originalQuery {
  OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_initPackagePrivateWithNSString_withBoolean_withOrgApacheLuceneUtilBytesRefHash_withFloatArray_withOrgApacheLuceneSearchQuery_(self, field, multipleValuesPerDocument, terms, scores, originalQuery);
  return self;
}

- (instancetype)initPackagePrivateWithNSString:(NSString *)field
                                   withBoolean:(jboolean)multipleValuesPerDocument
           withOrgApacheLuceneUtilBytesRefHash:(OrgApacheLuceneUtilBytesRefHash *)terms
                                withFloatArray:(IOSFloatArray *)scores
                                  withIntArray:(IOSIntArray *)ords
                withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)originalQuery
                withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)unwrittenOriginalQuery {
  OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_initPackagePrivateWithNSString_withBoolean_withOrgApacheLuceneUtilBytesRefHash_withFloatArray_withIntArray_withOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchQuery_(self, field, multipleValuesPerDocument, terms, scores, ords, originalQuery, unwrittenOriginalQuery);
  return self;
}

- (NSString *)toStringWithNSString:(NSString *)string {
  return NSString_java_formatWithJavaUtilLocale_withNSString_withNSObjectArray_(JreLoadStatic(JavaUtilLocale, ROOT), @"TermsIncludingScoreQuery{field=%s;originalQuery=%s}", [IOSObjectArray arrayWithObjects:(id[]){ field_, unwrittenOriginalQuery_ } count:2 type:NSObject_class_()]);
}

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  OrgApacheLuceneSearchQuery *originalQueryRewrite = [((OrgApacheLuceneSearchQuery *) nil_chk(originalQuery_)) rewriteWithOrgApacheLuceneIndexIndexReader:reader];
  if (!JreObjectEqualsEquals(originalQueryRewrite, originalQuery_)) {
    OrgApacheLuceneSearchQuery *rewritten = create_OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_initPackagePrivateWithNSString_withBoolean_withOrgApacheLuceneUtilBytesRefHash_withFloatArray_withIntArray_withOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchQuery_(field_, multipleValuesPerDocument_, terms_, scores_, ords_, originalQueryRewrite, originalQuery_);
    [rewritten setBoostWithFloat:[self getBoost]];
    return rewritten;
  }
  else {
    return self;
  }
}

- (jboolean)isEqual:(id)obj {
  if (JreObjectEqualsEquals(self, obj)) {
    return true;
  }
  if (![super isEqual:obj]) {
    return false;
  }
  if (!JreObjectEqualsEquals([self java_getClass], [nil_chk(obj) java_getClass])) {
    return false;
  }
  OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *other = (OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *) cast_chk(obj, [OrgApacheLuceneSearchJoinTermsIncludingScoreQuery class]);
  if (![((NSString *) nil_chk(field_)) isEqual:other->field_]) {
    return false;
  }
  if (![((OrgApacheLuceneSearchQuery *) nil_chk(unwrittenOriginalQuery_)) isEqual:other->unwrittenOriginalQuery_]) {
    return false;
  }
  return true;
}

- (NSUInteger)hash {
  jint prime = 31;
  jint result = ((jint) [super hash]);
  result += prime * ((jint) [((NSString *) nil_chk(field_)) hash]);
  result += prime * ((jint) [((OrgApacheLuceneSearchQuery *) nil_chk(unwrittenOriginalQuery_)) hash]);
  return result;
}

- (OrgApacheLuceneSearchWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                        withBoolean:(jboolean)needsScores {
  OrgApacheLuceneSearchWeight *originalWeight = [((OrgApacheLuceneSearchQuery *) nil_chk(originalQuery_)) createWeightWithOrgApacheLuceneSearchIndexSearcher:searcher withBoolean:needsScores];
  return create_OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_1_initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchQuery_(self, originalWeight, self);
}

- (void)dealloc {
  RELEASE_(field_);
  RELEASE_(terms_);
  RELEASE_(scores_);
  RELEASE_(ords_);
  RELEASE_(originalQuery_);
  RELEASE_(unwrittenOriginalQuery_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, 4, 5, 6, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 9, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchWeight;", 0x1, 10, 11, 6, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithNSString:withBoolean:withOrgApacheLuceneUtilBytesRefHash:withFloatArray:withOrgApacheLuceneSearchQuery:);
  methods[1].selector = @selector(initPackagePrivateWithNSString:withBoolean:withOrgApacheLuceneUtilBytesRefHash:withFloatArray:withIntArray:withOrgApacheLuceneSearchQuery:withOrgApacheLuceneSearchQuery:);
  methods[2].selector = @selector(toStringWithNSString:);
  methods[3].selector = @selector(rewriteWithOrgApacheLuceneIndexIndexReader:);
  methods[4].selector = @selector(isEqual:);
  methods[5].selector = @selector(hash);
  methods[6].selector = @selector(createWeightWithOrgApacheLuceneSearchIndexSearcher:withBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "field_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "multipleValuesPerDocument_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "terms_", "LOrgApacheLuceneUtilBytesRefHash;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "scores_", "[F", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "ords_", "[I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "originalQuery_", "LOrgApacheLuceneSearchQuery;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "unwrittenOriginalQuery_", "LOrgApacheLuceneSearchQuery;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;ZLOrgApacheLuceneUtilBytesRefHash;[FLOrgApacheLuceneSearchQuery;", "LNSString;ZLOrgApacheLuceneUtilBytesRefHash;[F[ILOrgApacheLuceneSearchQuery;LOrgApacheLuceneSearchQuery;", "toString", "LNSString;", "rewrite", "LOrgApacheLuceneIndexIndexReader;", "LJavaIoIOException;", "equals", "LNSObject;", "hashCode", "createWeight", "LOrgApacheLuceneSearchIndexSearcher;Z", "LOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_SVInOrderScorer;LOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_MVInOrderScorer;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchJoinTermsIncludingScoreQuery = { "TermsIncludingScoreQuery", "org.apache.lucene.search.join", ptrTable, methods, fields, 7, 0x0, 7, 7, -1, 12, -1, -1, -1 };
  return &_OrgApacheLuceneSearchJoinTermsIncludingScoreQuery;
}

@end

void OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_initPackagePrivateWithNSString_withBoolean_withOrgApacheLuceneUtilBytesRefHash_withFloatArray_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *self, NSString *field, jboolean multipleValuesPerDocument, OrgApacheLuceneUtilBytesRefHash *terms, IOSFloatArray *scores, OrgApacheLuceneSearchQuery *originalQuery) {
  OrgApacheLuceneSearchQuery_init(self);
  JreStrongAssign(&self->field_, field);
  self->multipleValuesPerDocument_ = multipleValuesPerDocument;
  JreStrongAssign(&self->terms_, terms);
  JreStrongAssign(&self->scores_, scores);
  JreStrongAssign(&self->originalQuery_, originalQuery);
  JreStrongAssign(&self->ords_, [((OrgApacheLuceneUtilBytesRefHash *) nil_chk(terms)) sortWithJavaUtilComparator:OrgApacheLuceneUtilBytesRef_getUTF8SortedAsUnicodeComparator()]);
  JreStrongAssign(&self->unwrittenOriginalQuery_, originalQuery);
}

OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *new_OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_initPackagePrivateWithNSString_withBoolean_withOrgApacheLuceneUtilBytesRefHash_withFloatArray_withOrgApacheLuceneSearchQuery_(NSString *field, jboolean multipleValuesPerDocument, OrgApacheLuceneUtilBytesRefHash *terms, IOSFloatArray *scores, OrgApacheLuceneSearchQuery *originalQuery) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery, initPackagePrivateWithNSString_withBoolean_withOrgApacheLuceneUtilBytesRefHash_withFloatArray_withOrgApacheLuceneSearchQuery_, field, multipleValuesPerDocument, terms, scores, originalQuery)
}

OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *create_OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_initPackagePrivateWithNSString_withBoolean_withOrgApacheLuceneUtilBytesRefHash_withFloatArray_withOrgApacheLuceneSearchQuery_(NSString *field, jboolean multipleValuesPerDocument, OrgApacheLuceneUtilBytesRefHash *terms, IOSFloatArray *scores, OrgApacheLuceneSearchQuery *originalQuery) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery, initPackagePrivateWithNSString_withBoolean_withOrgApacheLuceneUtilBytesRefHash_withFloatArray_withOrgApacheLuceneSearchQuery_, field, multipleValuesPerDocument, terms, scores, originalQuery)
}

void OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_initPackagePrivateWithNSString_withBoolean_withOrgApacheLuceneUtilBytesRefHash_withFloatArray_withIntArray_withOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *self, NSString *field, jboolean multipleValuesPerDocument, OrgApacheLuceneUtilBytesRefHash *terms, IOSFloatArray *scores, IOSIntArray *ords, OrgApacheLuceneSearchQuery *originalQuery, OrgApacheLuceneSearchQuery *unwrittenOriginalQuery) {
  OrgApacheLuceneSearchQuery_init(self);
  JreStrongAssign(&self->field_, field);
  self->multipleValuesPerDocument_ = multipleValuesPerDocument;
  JreStrongAssign(&self->terms_, terms);
  JreStrongAssign(&self->scores_, scores);
  JreStrongAssign(&self->originalQuery_, originalQuery);
  JreStrongAssign(&self->ords_, ords);
  JreStrongAssign(&self->unwrittenOriginalQuery_, unwrittenOriginalQuery);
}

OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *new_OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_initPackagePrivateWithNSString_withBoolean_withOrgApacheLuceneUtilBytesRefHash_withFloatArray_withIntArray_withOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchQuery_(NSString *field, jboolean multipleValuesPerDocument, OrgApacheLuceneUtilBytesRefHash *terms, IOSFloatArray *scores, IOSIntArray *ords, OrgApacheLuceneSearchQuery *originalQuery, OrgApacheLuceneSearchQuery *unwrittenOriginalQuery) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery, initPackagePrivateWithNSString_withBoolean_withOrgApacheLuceneUtilBytesRefHash_withFloatArray_withIntArray_withOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchQuery_, field, multipleValuesPerDocument, terms, scores, ords, originalQuery, unwrittenOriginalQuery)
}

OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *create_OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_initPackagePrivateWithNSString_withBoolean_withOrgApacheLuceneUtilBytesRefHash_withFloatArray_withIntArray_withOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchQuery_(NSString *field, jboolean multipleValuesPerDocument, OrgApacheLuceneUtilBytesRefHash *terms, IOSFloatArray *scores, IOSIntArray *ords, OrgApacheLuceneSearchQuery *originalQuery, OrgApacheLuceneSearchQuery *unwrittenOriginalQuery) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery, initPackagePrivateWithNSString_withBoolean_withOrgApacheLuceneUtilBytesRefHash_withFloatArray_withIntArray_withOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchQuery_, field, multipleValuesPerDocument, terms, scores, ords, originalQuery, unwrittenOriginalQuery)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery)

@implementation OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_1

- (instancetype)initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery:(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *)outer$
                                          withOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)capture$0
                                           withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query {
  OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_1_initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchQuery_(self, outer$, capture$0, query);
  return self;
}

- (void)extractTermsWithJavaUtilSet:(id<JavaUtilSet>)terms {
}

- (OrgApacheLuceneSearchExplanation *)explainWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                                                               withInt:(jint)doc {
  OrgApacheLuceneIndexTerms *terms = JreRetainedLocalValue([((OrgApacheLuceneIndexLeafReader *) nil_chk([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader])) termsWithNSString:this$0_->field_]);
  if (terms != nil) {
    OrgApacheLuceneIndexTermsEnum *segmentTermsEnum = JreRetainedLocalValue([terms iterator]);
    OrgApacheLuceneUtilBytesRef *spare = create_OrgApacheLuceneUtilBytesRef_init();
    OrgApacheLuceneIndexPostingsEnum *postingsEnum = nil;
    for (jint i = 0; i < [((OrgApacheLuceneUtilBytesRefHash *) nil_chk(this$0_->terms_)) size]; i++) {
      if ([((OrgApacheLuceneIndexTermsEnum *) nil_chk(segmentTermsEnum)) seekExactWithOrgApacheLuceneUtilBytesRef:[this$0_->terms_ getWithInt:IOSIntArray_Get(nil_chk(this$0_->ords_), i) withOrgApacheLuceneUtilBytesRef:spare]]) {
        postingsEnum = [segmentTermsEnum postingsWithOrgApacheLuceneIndexPostingsEnum:postingsEnum withInt:OrgApacheLuceneIndexPostingsEnum_NONE];
        if ([((OrgApacheLuceneIndexPostingsEnum *) nil_chk(postingsEnum)) advanceWithInt:doc] == doc) {
          jfloat score = IOSFloatArray_Get(nil_chk(this$0_->scores_), IOSIntArray_Get(this$0_->ords_, i));
          return OrgApacheLuceneSearchExplanation_matchWithFloat_withNSString_withOrgApacheLuceneSearchExplanationArray_(score, JreStrcat("$$", @"Score based on join value ", [((OrgApacheLuceneUtilBytesRef *) nil_chk([segmentTermsEnum term])) utf8ToString]), [IOSObjectArray arrayWithLength:0 type:OrgApacheLuceneSearchExplanation_class_()]);
        }
      }
    }
  }
  return OrgApacheLuceneSearchExplanation_noMatchWithNSString_withOrgApacheLuceneSearchExplanationArray_(@"Not a match", [IOSObjectArray arrayWithLength:0 type:OrgApacheLuceneSearchExplanation_class_()]);
}

- (jfloat)getValueForNormalization {
  return [((OrgApacheLuceneSearchWeight *) nil_chk(val$originalWeight_)) getValueForNormalization] * [this$0_ getBoost] * [this$0_ getBoost];
}

- (void)normalizeWithFloat:(jfloat)norm
                 withFloat:(jfloat)topLevelBoost {
  [((OrgApacheLuceneSearchWeight *) nil_chk(val$originalWeight_)) normalizeWithFloat:norm withFloat:topLevelBoost * [this$0_ getBoost]];
}

- (OrgApacheLuceneSearchScorer *)scorerWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context {
  OrgApacheLuceneIndexTerms *terms = JreRetainedLocalValue([((OrgApacheLuceneIndexLeafReader *) nil_chk([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader])) termsWithNSString:this$0_->field_]);
  if (terms == nil) {
    return JreRetainedLocalValue(nil);
  }
  jlong cost = [((OrgApacheLuceneIndexLeafReader *) nil_chk([context reader])) maxDoc] * [terms size];
  OrgApacheLuceneIndexTermsEnum *segmentTermsEnum = JreRetainedLocalValue([terms iterator]);
  if (this$0_->multipleValuesPerDocument_) {
    return create_OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_MVInOrderScorer_initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneIndexTermsEnum_withInt_withLong_(this$0_, self, segmentTermsEnum, [((OrgApacheLuceneIndexLeafReader *) nil_chk([context reader])) maxDoc], cost);
  }
  else {
    return create_OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_SVInOrderScorer_initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneIndexTermsEnum_withInt_withLong_(this$0_, self, segmentTermsEnum, [((OrgApacheLuceneIndexLeafReader *) nil_chk([context reader])) maxDoc], cost);
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$originalWeight_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, 3, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchExplanation;", 0x1, 4, 5, 6, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, 6, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchScorer;", 0x1, 9, 10, 6, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery:withOrgApacheLuceneSearchWeight:withOrgApacheLuceneSearchQuery:);
  methods[1].selector = @selector(extractTermsWithJavaUtilSet:);
  methods[2].selector = @selector(explainWithOrgApacheLuceneIndexLeafReaderContext:withInt:);
  methods[3].selector = @selector(getValueForNormalization);
  methods[4].selector = @selector(normalizeWithFloat:withFloat:);
  methods[5].selector = @selector(scorerWithOrgApacheLuceneIndexLeafReaderContext:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneSearchJoinTermsIncludingScoreQuery;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$originalWeight_", "LOrgApacheLuceneSearchWeight;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchJoinTermsIncludingScoreQuery;LOrgApacheLuceneSearchWeight;LOrgApacheLuceneSearchQuery;", "extractTerms", "LJavaUtilSet;", "(Ljava/util/Set<Lorg/apache/lucene/index/Term;>;)V", "explain", "LOrgApacheLuceneIndexLeafReaderContext;I", "LJavaIoIOException;", "normalize", "FF", "scorer", "LOrgApacheLuceneIndexLeafReaderContext;", "LOrgApacheLuceneSearchJoinTermsIncludingScoreQuery;", "createWeightWithOrgApacheLuceneSearchIndexSearcher:withBoolean:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_1 = { "", "org.apache.lucene.search.join", ptrTable, methods, fields, 7, 0x8010, 6, 2, 11, -1, 12, -1, -1 };
  return &_OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_1;
}

@end

void OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_1_initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_1 *self, OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *outer$, OrgApacheLuceneSearchWeight *capture$0, OrgApacheLuceneSearchQuery *query) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$originalWeight_, capture$0);
  OrgApacheLuceneSearchWeight_initWithOrgApacheLuceneSearchQuery_(self, query);
}

OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_1 *new_OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_1_initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *outer$, OrgApacheLuceneSearchWeight *capture$0, OrgApacheLuceneSearchQuery *query) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_1, initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchQuery_, outer$, capture$0, query)
}

OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_1 *create_OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_1_initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *outer$, OrgApacheLuceneSearchWeight *capture$0, OrgApacheLuceneSearchQuery *query) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_1, initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchQuery_, outer$, capture$0, query)
}

@implementation OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_SVInOrderScorer

- (instancetype)initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery:(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *)outer$
                                          withOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight
                                        withOrgApacheLuceneIndexTermsEnum:(OrgApacheLuceneIndexTermsEnum *)termsEnum
                                                                  withInt:(jint)maxDoc
                                                                 withLong:(jlong)cost {
  OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_SVInOrderScorer_initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneIndexTermsEnum_withInt_withLong_(self, outer$, weight, termsEnum, maxDoc, cost);
  return self;
}

- (void)fillDocsAndScoresWithOrgApacheLuceneUtilFixedBitSet:(OrgApacheLuceneUtilFixedBitSet *)matchingDocs
                          withOrgApacheLuceneIndexTermsEnum:(OrgApacheLuceneIndexTermsEnum *)termsEnum {
  OrgApacheLuceneUtilBytesRef *spare = create_OrgApacheLuceneUtilBytesRef_init();
  OrgApacheLuceneIndexPostingsEnum *postingsEnum = nil;
  for (jint i = 0; i < [((OrgApacheLuceneUtilBytesRefHash *) nil_chk(this$0_->terms_)) size]; i++) {
    if ([((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum)) seekExactWithOrgApacheLuceneUtilBytesRef:[this$0_->terms_ getWithInt:IOSIntArray_Get(nil_chk(this$0_->ords_), i) withOrgApacheLuceneUtilBytesRef:spare]]) {
      postingsEnum = [termsEnum postingsWithOrgApacheLuceneIndexPostingsEnum:postingsEnum withInt:OrgApacheLuceneIndexPostingsEnum_NONE];
      jfloat score = IOSFloatArray_Get(nil_chk(this$0_->scores_), IOSIntArray_Get(this$0_->ords_, i));
      for (jint doc = [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(postingsEnum)) nextDoc]; doc != OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS; doc = [postingsEnum nextDoc]) {
        [((OrgApacheLuceneUtilFixedBitSet *) nil_chk(matchingDocs)) setWithInt:doc];
        *IOSFloatArray_GetRef(nil_chk(scores_), doc) = score;
      }
    }
  }
}

- (jfloat)score {
  return IOSFloatArray_Get(nil_chk(scores_), currentDoc_);
}

- (jint)freq {
  return 1;
}

- (jint)docID {
  return currentDoc_;
}

- (jint)nextDoc {
  return currentDoc_ = [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(matchingDocsIterator_)) nextDoc];
}

- (jint)advanceWithInt:(jint)target {
  return currentDoc_ = [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(matchingDocsIterator_)) advanceWithInt:target];
}

- (jlong)cost {
  return cost_;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(matchingDocsIterator_);
  RELEASE_(scores_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, 1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, 1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, 5, 1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery:withOrgApacheLuceneSearchWeight:withOrgApacheLuceneIndexTermsEnum:withInt:withLong:);
  methods[1].selector = @selector(fillDocsAndScoresWithOrgApacheLuceneUtilFixedBitSet:withOrgApacheLuceneIndexTermsEnum:);
  methods[2].selector = @selector(score);
  methods[3].selector = @selector(freq);
  methods[4].selector = @selector(docID);
  methods[5].selector = @selector(nextDoc);
  methods[6].selector = @selector(advanceWithInt:);
  methods[7].selector = @selector(cost);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneSearchJoinTermsIncludingScoreQuery;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "matchingDocsIterator_", "LOrgApacheLuceneSearchDocIdSetIterator;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "scores_", "[F", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "cost_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "currentDoc_", "I", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchJoinTermsIncludingScoreQuery;LOrgApacheLuceneSearchWeight;LOrgApacheLuceneIndexTermsEnum;IJ", "LJavaIoIOException;", "fillDocsAndScores", "LOrgApacheLuceneUtilFixedBitSet;LOrgApacheLuceneIndexTermsEnum;", "advance", "I", "LOrgApacheLuceneSearchJoinTermsIncludingScoreQuery;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_SVInOrderScorer = { "SVInOrderScorer", "org.apache.lucene.search.join", ptrTable, methods, fields, 7, 0x0, 8, 5, 6, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_SVInOrderScorer;
}

@end

void OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_SVInOrderScorer_initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneIndexTermsEnum_withInt_withLong_(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_SVInOrderScorer *self, OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *outer$, OrgApacheLuceneSearchWeight *weight, OrgApacheLuceneIndexTermsEnum *termsEnum, jint maxDoc, jlong cost) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneSearchScorer_initWithOrgApacheLuceneSearchWeight_(self, weight);
  self->currentDoc_ = -1;
  OrgApacheLuceneUtilFixedBitSet *matchingDocs = create_OrgApacheLuceneUtilFixedBitSet_initWithInt_(maxDoc);
  JreStrongAssignAndConsume(&self->scores_, [IOSFloatArray newArrayWithLength:maxDoc]);
  [self fillDocsAndScoresWithOrgApacheLuceneUtilFixedBitSet:matchingDocs withOrgApacheLuceneIndexTermsEnum:termsEnum];
  JreStrongAssignAndConsume(&self->matchingDocsIterator_, new_OrgApacheLuceneUtilBitSetIterator_initWithOrgApacheLuceneUtilBitSet_withLong_(matchingDocs, cost));
  self->cost_ = cost;
}

OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_SVInOrderScorer *new_OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_SVInOrderScorer_initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneIndexTermsEnum_withInt_withLong_(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *outer$, OrgApacheLuceneSearchWeight *weight, OrgApacheLuceneIndexTermsEnum *termsEnum, jint maxDoc, jlong cost) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_SVInOrderScorer, initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneIndexTermsEnum_withInt_withLong_, outer$, weight, termsEnum, maxDoc, cost)
}

OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_SVInOrderScorer *create_OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_SVInOrderScorer_initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneIndexTermsEnum_withInt_withLong_(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *outer$, OrgApacheLuceneSearchWeight *weight, OrgApacheLuceneIndexTermsEnum *termsEnum, jint maxDoc, jlong cost) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_SVInOrderScorer, initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneIndexTermsEnum_withInt_withLong_, outer$, weight, termsEnum, maxDoc, cost)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_SVInOrderScorer)

@implementation OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_MVInOrderScorer

- (instancetype)initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery:(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *)outer$
                                          withOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight
                                        withOrgApacheLuceneIndexTermsEnum:(OrgApacheLuceneIndexTermsEnum *)termsEnum
                                                                  withInt:(jint)maxDoc
                                                                 withLong:(jlong)cost {
  OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_MVInOrderScorer_initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneIndexTermsEnum_withInt_withLong_(self, outer$, weight, termsEnum, maxDoc, cost);
  return self;
}

- (void)fillDocsAndScoresWithOrgApacheLuceneUtilFixedBitSet:(OrgApacheLuceneUtilFixedBitSet *)matchingDocs
                          withOrgApacheLuceneIndexTermsEnum:(OrgApacheLuceneIndexTermsEnum *)termsEnum {
  OrgApacheLuceneUtilBytesRef *spare = create_OrgApacheLuceneUtilBytesRef_init();
  OrgApacheLuceneIndexPostingsEnum *postingsEnum = nil;
  for (jint i = 0; i < [((OrgApacheLuceneUtilBytesRefHash *) nil_chk(this$1_->terms_)) size]; i++) {
    if ([((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum)) seekExactWithOrgApacheLuceneUtilBytesRef:[this$1_->terms_ getWithInt:IOSIntArray_Get(nil_chk(this$1_->ords_), i) withOrgApacheLuceneUtilBytesRef:spare]]) {
      postingsEnum = [termsEnum postingsWithOrgApacheLuceneIndexPostingsEnum:postingsEnum withInt:OrgApacheLuceneIndexPostingsEnum_NONE];
      jfloat score = IOSFloatArray_Get(nil_chk(this$1_->scores_), IOSIntArray_Get(this$1_->ords_, i));
      for (jint doc = [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(postingsEnum)) nextDoc]; doc != OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS; doc = [postingsEnum nextDoc]) {
        if (![((OrgApacheLuceneUtilFixedBitSet *) nil_chk(matchingDocs)) getWithInt:doc]) {
          *IOSFloatArray_GetRef(nil_chk(scores_), doc) = score;
          [matchingDocs setWithInt:doc];
        }
      }
    }
  }
}

- (void)dealloc {
  RELEASE_(this$1_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, 1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery:withOrgApacheLuceneSearchWeight:withOrgApacheLuceneIndexTermsEnum:withInt:withLong:);
  methods[1].selector = @selector(fillDocsAndScoresWithOrgApacheLuceneUtilFixedBitSet:withOrgApacheLuceneIndexTermsEnum:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$1_", "LOrgApacheLuceneSearchJoinTermsIncludingScoreQuery;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchJoinTermsIncludingScoreQuery;LOrgApacheLuceneSearchWeight;LOrgApacheLuceneIndexTermsEnum;IJ", "LJavaIoIOException;", "fillDocsAndScores", "LOrgApacheLuceneUtilFixedBitSet;LOrgApacheLuceneIndexTermsEnum;", "LOrgApacheLuceneSearchJoinTermsIncludingScoreQuery;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_MVInOrderScorer = { "MVInOrderScorer", "org.apache.lucene.search.join", ptrTable, methods, fields, 7, 0x0, 2, 1, 4, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_MVInOrderScorer;
}

@end

void OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_MVInOrderScorer_initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneIndexTermsEnum_withInt_withLong_(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_MVInOrderScorer *self, OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *outer$, OrgApacheLuceneSearchWeight *weight, OrgApacheLuceneIndexTermsEnum *termsEnum, jint maxDoc, jlong cost) {
  JreStrongAssign(&self->this$1_, outer$);
  OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_SVInOrderScorer_initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneIndexTermsEnum_withInt_withLong_(self, outer$, weight, termsEnum, maxDoc, cost);
}

OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_MVInOrderScorer *new_OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_MVInOrderScorer_initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneIndexTermsEnum_withInt_withLong_(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *outer$, OrgApacheLuceneSearchWeight *weight, OrgApacheLuceneIndexTermsEnum *termsEnum, jint maxDoc, jlong cost) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_MVInOrderScorer, initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneIndexTermsEnum_withInt_withLong_, outer$, weight, termsEnum, maxDoc, cost)
}

OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_MVInOrderScorer *create_OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_MVInOrderScorer_initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneIndexTermsEnum_withInt_withLong_(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery *outer$, OrgApacheLuceneSearchWeight *weight, OrgApacheLuceneIndexTermsEnum *termsEnum, jint maxDoc, jlong cost) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_MVInOrderScorer, initWithOrgApacheLuceneSearchJoinTermsIncludingScoreQuery_withOrgApacheLuceneSearchWeight_withOrgApacheLuceneIndexTermsEnum_withInt_withLong_, outer$, weight, termsEnum, maxDoc, cost)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchJoinTermsIncludingScoreQuery_MVInOrderScorer)
