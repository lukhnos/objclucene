//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/lang/CharSequence.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Short.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"
#include "org/apache/lucene/analysis/Analyzer.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/TokenStreamToAutomaton.h"
#include "org/apache/lucene/search/suggest/InputIterator.h"
#include "org/apache/lucene/search/suggest/Lookup.h"
#include "org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester.h"
#include "org/apache/lucene/search/suggest/analyzing/FSTUtil.h"
#include "org/apache/lucene/store/ByteArrayDataInput.h"
#include "org/apache/lucene/store/ByteArrayDataOutput.h"
#include "org/apache/lucene/store/DataInput.h"
#include "org/apache/lucene/store/DataOutput.h"
#include "org/apache/lucene/util/Accountable.h"
#include "org/apache/lucene/util/Accountables.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"
#include "org/apache/lucene/util/CharsRefBuilder.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/IntsRef.h"
#include "org/apache/lucene/util/IntsRefBuilder.h"
#include "org/apache/lucene/util/OfflineSorter.h"
#include "org/apache/lucene/util/automaton/Automaton.h"
#include "org/apache/lucene/util/automaton/LimitedFiniteStringsIterator.h"
#include "org/apache/lucene/util/automaton/Operations.h"
#include "org/apache/lucene/util/automaton/Transition.h"
#include "org/apache/lucene/util/fst/Builder.h"
#include "org/apache/lucene/util/fst/ByteSequenceOutputs.h"
#include "org/apache/lucene/util/fst/FST.h"
#include "org/apache/lucene/util/fst/Outputs.h"
#include "org/apache/lucene/util/fst/PairOutputs.h"
#include "org/apache/lucene/util/fst/PositiveIntOutputs.h"
#include "org/apache/lucene/util/fst/Util.h"
#include "org/lukhnos/portmobile/file/Files.h"
#include "org/lukhnos/portmobile/file/Path.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester must not be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester () {
 @public
  /*!
   @brief FST&lt;Weight,Surface&gt;: 
   input is the analyzed form, with a null byte between terms
   weights are encoded as costs: (Integer.MAX_VALUE-weight)
   surface is the original, unanalyzed form.
   */
  OrgApacheLuceneUtilFstFST *fst_;
  /*!
   @brief Analyzer that will be used for analyzing suggestions at
  index time.
   */
  OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer_;
  /*!
   @brief Analyzer that will be used for analyzing suggestions at
  query time.
   */
  OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer_;
  /*!
   @brief True if exact match suggestions should always be returned first.
   */
  jboolean exactFirst_;
  /*!
   @brief True if separator between tokens should be preserved.
   */
  jboolean preserveSep_;
  /*!
   @brief Maximum number of dup surface forms (different surface
   forms for the same analyzed form).
   */
  jint maxSurfaceFormsPerAnalyzedForm_;
  /*!
   @brief Maximum graph paths to index for a single analyzed
   surface form.This only matters if your analyzer
   makes lots of alternate paths (e.g. contains
   SynonymFilter).
   */
  jint maxGraphExpansions_;
  /*!
   @brief Highest number of analyzed paths we saw for any single
   input surface form.For analyzers that never create
   graphs this will always be 1.
   */
  jint maxAnalyzedPathsForOneInput_;
  jboolean hasPayloads_;
  /*!
   @brief Whether position holes should appear in the automaton.
   */
  jboolean preservePositionIncrements_;
  /*!
   @brief Number of entries the lookup was built with
   */
  jlong count_;
}

- (OrgApacheLuceneUtilAutomatonAutomaton *)replaceSepWithOrgApacheLuceneUtilAutomatonAutomaton:(OrgApacheLuceneUtilAutomatonAutomaton *)a;

- (OrgApacheLuceneSearchSuggestLookup_LookupResult *)getLookupResultWithJavaLangLong:(JavaLangLong *)output1
                                                     withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)output2
                                              withOrgApacheLuceneUtilCharsRefBuilder:(OrgApacheLuceneUtilCharsRefBuilder *)spare;

- (jboolean)sameSurfaceFormWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)key
                           withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)output2;

/*!
 @brief cost -&gt; weight
 */
+ (jint)decodeWeightWithLong:(jlong)encoded;

/*!
 @brief weight -&gt; cost
 */
+ (jint)encodeWeightWithLong:(jlong)value;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester, fst_, OrgApacheLuceneUtilFstFST *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester, indexAnalyzer_, OrgApacheLuceneAnalysisAnalyzer *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester, queryAnalyzer_, OrgApacheLuceneAnalysisAnalyzer *)

/*!
 @brief Represents the separation between tokens, if
   PRESERVE_SEP was specified
 */
inline jint OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_get_SEP_LABEL(void);
#define OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_SEP_LABEL 31
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester, SEP_LABEL, jint)

/*!
 @brief Marks end of the analyzed input and start of dedup
   byte.
 */
inline jint OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_get_END_BYTE(void);
#define OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_END_BYTE 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester, END_BYTE, jint)

inline jint OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_get_PAYLOAD_SEP(void);
#define OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_PAYLOAD_SEP 31
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester, PAYLOAD_SEP, jint)

__attribute__((unused)) static OrgApacheLuceneUtilAutomatonAutomaton *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_replaceSepWithOrgApacheLuceneUtilAutomatonAutomaton_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *self, OrgApacheLuceneUtilAutomatonAutomaton *a);

__attribute__((unused)) static OrgApacheLuceneSearchSuggestLookup_LookupResult *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_getLookupResultWithJavaLangLong_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilCharsRefBuilder_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *self, JavaLangLong *output1, OrgApacheLuceneUtilBytesRef *output2, OrgApacheLuceneUtilCharsRefBuilder *spare);

__attribute__((unused)) static jboolean OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_sameSurfaceFormWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *self, OrgApacheLuceneUtilBytesRef *key, OrgApacheLuceneUtilBytesRef *output2);

__attribute__((unused)) static OrgApacheLuceneUtilAutomatonAutomaton *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_toAutomatonWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneAnalysisTokenStreamToAutomaton_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *self, OrgApacheLuceneUtilBytesRef *surfaceForm, OrgApacheLuceneAnalysisTokenStreamToAutomaton *ts2a);

__attribute__((unused)) static OrgApacheLuceneUtilAutomatonAutomaton *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_toLookupAutomatonWithJavaLangCharSequence_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *self, id<JavaLangCharSequence> key);

__attribute__((unused)) static jint OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_decodeWeightWithLong_(jlong encoded);

__attribute__((unused)) static jint OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_encodeWeightWithLong_(jlong value);

@interface OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator : NSObject < JavaUtilComparator > {
 @public
  jboolean hasPayloads_;
  OrgApacheLuceneStoreByteArrayDataInput *readerA_;
  OrgApacheLuceneStoreByteArrayDataInput *readerB_;
  OrgApacheLuceneUtilBytesRef *scratchA_;
  OrgApacheLuceneUtilBytesRef *scratchB_;
}

- (instancetype)initWithBoolean:(jboolean)hasPayloads;

- (jint)compareWithId:(OrgApacheLuceneUtilBytesRef *)a
               withId:(OrgApacheLuceneUtilBytesRef *)b;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator, readerA_, OrgApacheLuceneStoreByteArrayDataInput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator, readerB_, OrgApacheLuceneStoreByteArrayDataInput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator, scratchA_, OrgApacheLuceneUtilBytesRef *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator, scratchB_, OrgApacheLuceneUtilBytesRef *)

__attribute__((unused)) static void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator_initWithBoolean_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator *self, jboolean hasPayloads);

__attribute__((unused)) static OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator *new_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator_initWithBoolean_(jboolean hasPayloads) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator *create_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator_initWithBoolean_(jboolean hasPayloads);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator)

@interface OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_1 : OrgApacheLuceneUtilFstUtil_TopNSearcher {
 @public
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *this$0_;
  OrgApacheLuceneUtilBytesRef *val$utf8Key_;
  id<JavaUtilList> val$results_;
  id<JavaUtilSet> seen_;
}

- (instancetype)initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester:(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *)outer$
                                                withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)capture$0
                                                               withJavaUtilList:(id<JavaUtilList>)capture$1
                                                  withOrgApacheLuceneUtilFstFST:(OrgApacheLuceneUtilFstFST *)fst
                                                                        withInt:(jint)topN
                                                                        withInt:(jint)maxQueueDepth
                                                         withJavaUtilComparator:(id<JavaUtilComparator>)comparator;

- (jboolean)acceptResultWithOrgApacheLuceneUtilIntsRef:(OrgApacheLuceneUtilIntsRef *)input
                                                withId:(OrgApacheLuceneUtilFstPairOutputs_Pair *)output;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_1)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_1, seen_, id<JavaUtilSet>)

__attribute__((unused)) static void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_1_initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_withOrgApacheLuceneUtilBytesRef_withJavaUtilList_withOrgApacheLuceneUtilFstFST_withInt_withInt_withJavaUtilComparator_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_1 *self, OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *outer$, OrgApacheLuceneUtilBytesRef *capture$0, id<JavaUtilList> capture$1, OrgApacheLuceneUtilFstFST *fst, jint topN, jint maxQueueDepth, id<JavaUtilComparator> comparator);

__attribute__((unused)) static OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_1 *new_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_1_initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_withOrgApacheLuceneUtilBytesRef_withJavaUtilList_withOrgApacheLuceneUtilFstFST_withInt_withInt_withJavaUtilComparator_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *outer$, OrgApacheLuceneUtilBytesRef *capture$0, id<JavaUtilList> capture$1, OrgApacheLuceneUtilFstFST *fst, jint topN, jint maxQueueDepth, id<JavaUtilComparator> comparator) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_1 *create_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_1_initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_withOrgApacheLuceneUtilBytesRef_withJavaUtilList_withOrgApacheLuceneUtilFstFST_withInt_withInt_withJavaUtilComparator_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *outer$, OrgApacheLuceneUtilBytesRef *capture$0, id<JavaUtilList> capture$1, OrgApacheLuceneUtilFstFST *fst, jint topN, jint maxQueueDepth, id<JavaUtilComparator> comparator);

@interface OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_2 : NSObject < JavaUtilComparator >

- (instancetype)init;

- (jint)compareWithId:(OrgApacheLuceneUtilFstPairOutputs_Pair *)left
               withId:(OrgApacheLuceneUtilFstPairOutputs_Pair *)right;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_2)

__attribute__((unused)) static void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_2_init(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_2 *self);

__attribute__((unused)) static OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_2 *new_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_2 *create_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_2_init(void);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester)

id<JavaUtilComparator> OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_weightComparator;

@implementation OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester

+ (jint)EXACT_FIRST {
  return OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_EXACT_FIRST;
}

+ (jint)PRESERVE_SEP {
  return OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_PRESERVE_SEP;
}

+ (id<JavaUtilComparator>)weightComparator {
  return OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_weightComparator;
}

- (instancetype)initWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_(self, analyzer);
  return self;
}

- (instancetype)initWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)indexAnalyzer
                    withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)queryAnalyzer {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_(self, indexAnalyzer, queryAnalyzer);
  return self;
}

- (instancetype)initWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)indexAnalyzer
                    withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)queryAnalyzer
                                                withInt:(jint)options
                                                withInt:(jint)maxSurfaceFormsPerAnalyzedForm
                                                withInt:(jint)maxGraphExpansions
                                            withBoolean:(jboolean)preservePositionIncrements {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withInt_withInt_withBoolean_(self, indexAnalyzer, queryAnalyzer, options, maxSurfaceFormsPerAnalyzedForm, maxGraphExpansions, preservePositionIncrements);
  return self;
}

- (jlong)ramBytesUsed {
  return fst_ == nil ? 0 : [fst_ ramBytesUsed];
}

- (id<JavaUtilCollection>)getChildResources {
  if (fst_ == nil) {
    return JavaUtilCollections_emptyList();
  }
  else {
    return JavaUtilCollections_singletonListWithId_(OrgApacheLuceneUtilAccountables_namedAccountableWithNSString_withOrgApacheLuceneUtilAccountable_(@"fst", fst_));
  }
}

- (OrgApacheLuceneUtilAutomatonAutomaton *)replaceSepWithOrgApacheLuceneUtilAutomatonAutomaton:(OrgApacheLuceneUtilAutomatonAutomaton *)a {
  return OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_replaceSepWithOrgApacheLuceneUtilAutomatonAutomaton_(self, a);
}

- (OrgApacheLuceneUtilAutomatonAutomaton *)convertAutomatonWithOrgApacheLuceneUtilAutomatonAutomaton:(OrgApacheLuceneUtilAutomatonAutomaton *)a {
  return a;
}

- (OrgApacheLuceneAnalysisTokenStreamToAutomaton *)getTokenStreamToAutomaton {
  OrgApacheLuceneAnalysisTokenStreamToAutomaton *tsta = create_OrgApacheLuceneAnalysisTokenStreamToAutomaton_init();
  [tsta setPreservePositionIncrementsWithBoolean:preservePositionIncrements_];
  return tsta;
}

- (void)buildWithOrgApacheLuceneSearchSuggestInputIterator:(id<OrgApacheLuceneSearchSuggestInputIterator>)iterator {
  if ([((id<OrgApacheLuceneSearchSuggestInputIterator>) nil_chk(iterator)) hasContexts]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"this suggester doesn't support contexts");
  }
  NSString *prefix = [[self java_getClass] getSimpleName];
  OrgLukhnosPortmobileFilePath *directory = OrgApacheLuceneUtilOfflineSorter_defaultTempDir();
  OrgLukhnosPortmobileFilePath *tempInput = OrgLukhnosPortmobileFileFiles_createTempFileWithOrgLukhnosPortmobileFilePath_withNSString_withNSString_(directory, prefix, @".input");
  OrgLukhnosPortmobileFilePath *tempSorted = OrgLukhnosPortmobileFileFiles_createTempFileWithOrgLukhnosPortmobileFilePath_withNSString_withNSString_(directory, prefix, @".sorted");
  hasPayloads_ = [iterator hasPayloads];
  OrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter *writer = create_OrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter_initWithOrgLukhnosPortmobileFilePath_(tempInput);
  OrgApacheLuceneUtilOfflineSorter_ByteSequencesReader *reader = nil;
  OrgApacheLuceneUtilBytesRefBuilder *scratch = create_OrgApacheLuceneUtilBytesRefBuilder_init();
  OrgApacheLuceneAnalysisTokenStreamToAutomaton *ts2a = JreRetainedLocalValue([self getTokenStreamToAutomaton]);
  jboolean success = false;
  count_ = 0;
  IOSByteArray *buffer = [IOSByteArray arrayWithLength:8];
  @try {
    OrgApacheLuceneStoreByteArrayDataOutput *output = create_OrgApacheLuceneStoreByteArrayDataOutput_initWithByteArray_(buffer);
    for (OrgApacheLuceneUtilBytesRef *surfaceForm; (surfaceForm = [iterator next]) != nil; ) {
      OrgApacheLuceneUtilAutomatonLimitedFiniteStringsIterator *finiteStrings = create_OrgApacheLuceneUtilAutomatonLimitedFiniteStringsIterator_initWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_toAutomatonWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneAnalysisTokenStreamToAutomaton_(self, surfaceForm, ts2a), maxGraphExpansions_);
      for (OrgApacheLuceneUtilIntsRef *string; (string = [finiteStrings next]) != nil; count_++) {
        OrgApacheLuceneUtilFstUtil_toBytesRefWithOrgApacheLuceneUtilIntsRef_withOrgApacheLuceneUtilBytesRefBuilder_(string, scratch);
        if ([scratch length] > JavaLangShort_MAX_VALUE - 2) {
          @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$IC", @"cannot handle analyzed forms > ", (JavaLangShort_MAX_VALUE - 2), @" in length (got ", [scratch length], ')'));
        }
        jshort analyzedLength = (jshort) [scratch length];
        jint requiredLength = analyzedLength + 4 + ((OrgApacheLuceneUtilBytesRef *) nil_chk(surfaceForm))->length_ + 2;
        OrgApacheLuceneUtilBytesRef *payload;
        if (hasPayloads_) {
          if (surfaceForm->length_ > (JavaLangShort_MAX_VALUE - 2)) {
            @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$IC", @"cannot handle surface form > ", (JavaLangShort_MAX_VALUE - 2), @" in length (got ", surfaceForm->length_, ')'));
          }
          payload = [iterator payload];
          requiredLength += ((OrgApacheLuceneUtilBytesRef *) nil_chk(payload))->length_ + 2;
        }
        else {
          payload = nil;
        }
        buffer = OrgApacheLuceneUtilArrayUtil_growWithByteArray_withInt_(buffer, requiredLength);
        [output resetWithByteArray:buffer];
        [output writeShortWithShort:analyzedLength];
        [output writeBytesWithByteArray:[scratch bytes] withInt:0 withInt:[scratch length]];
        [output writeIntWithInt:OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_encodeWeightWithLong_([iterator weight])];
        if (hasPayloads_) {
          for (jint i = 0; i < surfaceForm->length_; i++) {
            if (IOSByteArray_Get(nil_chk(surfaceForm->bytes_), i) == OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_PAYLOAD_SEP) {
              @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"surface form cannot contain unit separator character U+001F; this character is reserved");
            }
          }
          [output writeShortWithShort:(jshort) surfaceForm->length_];
          [output writeBytesWithByteArray:surfaceForm->bytes_ withInt:surfaceForm->offset_ withInt:surfaceForm->length_];
          [output writeBytesWithByteArray:((OrgApacheLuceneUtilBytesRef *) nil_chk(payload))->bytes_ withInt:payload->offset_ withInt:payload->length_];
        }
        else {
          [output writeBytesWithByteArray:surfaceForm->bytes_ withInt:surfaceForm->offset_ withInt:surfaceForm->length_];
        }
        JreAssert([output getPosition] == requiredLength, JreStrcat("I$I", [output getPosition], @" vs ", requiredLength));
        [writer writeWithByteArray:buffer withInt:0 withInt:[output getPosition]];
      }
      maxAnalyzedPathsForOneInput_ = JavaLangMath_maxWithInt_withInt_(maxAnalyzedPathsForOneInput_, [finiteStrings size]);
    }
    [writer close];
    [create_OrgApacheLuceneUtilOfflineSorter_initWithJavaUtilComparator_(create_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator_initWithBoolean_(hasPayloads_)) sortWithOrgLukhnosPortmobileFilePath:tempInput withOrgLukhnosPortmobileFilePath:tempSorted];
    OrgLukhnosPortmobileFileFiles_delete__WithOrgLukhnosPortmobileFilePath_(tempInput);
    reader = create_OrgApacheLuceneUtilOfflineSorter_ByteSequencesReader_initWithOrgLukhnosPortmobileFilePath_(tempSorted);
    OrgApacheLuceneUtilFstPairOutputs *outputs = create_OrgApacheLuceneUtilFstPairOutputs_initWithOrgApacheLuceneUtilFstOutputs_withOrgApacheLuceneUtilFstOutputs_(OrgApacheLuceneUtilFstPositiveIntOutputs_getSingleton(), OrgApacheLuceneUtilFstByteSequenceOutputs_getSingleton());
    OrgApacheLuceneUtilFstBuilder *builder = create_OrgApacheLuceneUtilFstBuilder_initWithOrgApacheLuceneUtilFstFST_INPUT_TYPE_withOrgApacheLuceneUtilFstOutputs_(JreLoadEnum(OrgApacheLuceneUtilFstFST_INPUT_TYPE, BYTE1), outputs);
    OrgApacheLuceneUtilBytesRefBuilder *previousAnalyzed = nil;
    OrgApacheLuceneUtilBytesRefBuilder *analyzed = create_OrgApacheLuceneUtilBytesRefBuilder_init();
    OrgApacheLuceneUtilBytesRef *surface = create_OrgApacheLuceneUtilBytesRef_init();
    OrgApacheLuceneUtilIntsRefBuilder *scratchInts = create_OrgApacheLuceneUtilIntsRefBuilder_init();
    OrgApacheLuceneStoreByteArrayDataInput *input = create_OrgApacheLuceneStoreByteArrayDataInput_init();
    id<JavaUtilSet> seenSurfaceForms = create_JavaUtilHashSet_init();
    jint dedup = 0;
    while ([reader readWithOrgApacheLuceneUtilBytesRefBuilder:scratch]) {
      [input resetWithByteArray:[scratch bytes] withInt:0 withInt:[scratch length]];
      jshort analyzedLength = [input readShort];
      [analyzed growWithInt:analyzedLength + 2];
      [input readBytesWithByteArray:[analyzed bytes] withInt:0 withInt:analyzedLength];
      [analyzed setLengthWithInt:analyzedLength];
      jlong cost = [input readInt];
      JreStrongAssign(&surface->bytes_, [scratch bytes]);
      if (hasPayloads_) {
        surface->length_ = [input readShort];
        surface->offset_ = [input getPosition];
      }
      else {
        surface->offset_ = [input getPosition];
        surface->length_ = [scratch length] - surface->offset_;
      }
      if (previousAnalyzed == nil) {
        previousAnalyzed = create_OrgApacheLuceneUtilBytesRefBuilder_init();
        [previousAnalyzed copyBytesWithOrgApacheLuceneUtilBytesRef:[analyzed get]];
        [seenSurfaceForms addWithId:OrgApacheLuceneUtilBytesRef_deepCopyOfWithOrgApacheLuceneUtilBytesRef_(surface)];
      }
      else if ([((OrgApacheLuceneUtilBytesRef *) nil_chk([analyzed get])) isEqual:[previousAnalyzed get]]) {
        dedup++;
        if (dedup >= maxSurfaceFormsPerAnalyzedForm_) {
          continue;
        }
        if ([seenSurfaceForms containsWithId:surface]) {
          continue;
        }
        [seenSurfaceForms addWithId:OrgApacheLuceneUtilBytesRef_deepCopyOfWithOrgApacheLuceneUtilBytesRef_(surface)];
      }
      else {
        dedup = 0;
        [previousAnalyzed copyBytesWithOrgApacheLuceneUtilBytesRefBuilder:analyzed];
        [seenSurfaceForms clear];
        [seenSurfaceForms addWithId:OrgApacheLuceneUtilBytesRef_deepCopyOfWithOrgApacheLuceneUtilBytesRef_(surface)];
      }
      [analyzed appendWithByte:(jbyte) 0];
      [analyzed appendWithByte:(jbyte) dedup];
      OrgApacheLuceneUtilFstUtil_toIntsRefWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilIntsRefBuilder_([analyzed get], scratchInts);
      if (!hasPayloads_) {
        [builder addWithOrgApacheLuceneUtilIntsRef:[scratchInts get] withId:[outputs newPairWithId:JavaLangLong_valueOfWithLong_(cost) withId:OrgApacheLuceneUtilBytesRef_deepCopyOfWithOrgApacheLuceneUtilBytesRef_(surface)]];
      }
      else {
        jint payloadOffset = [input getPosition] + surface->length_;
        jint payloadLength = [scratch length] - payloadOffset;
        OrgApacheLuceneUtilBytesRef *br = create_OrgApacheLuceneUtilBytesRef_initWithInt_(surface->length_ + 1 + payloadLength);
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(surface->bytes_, surface->offset_, br->bytes_, 0, surface->length_);
        *IOSByteArray_GetRef(nil_chk(br->bytes_), surface->length_) = OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_PAYLOAD_SEP;
        JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_([scratch bytes], payloadOffset, br->bytes_, surface->length_ + 1, payloadLength);
        br->length_ = ((IOSByteArray *) nil_chk(br->bytes_))->size_;
        [builder addWithOrgApacheLuceneUtilIntsRef:[scratchInts get] withId:[outputs newPairWithId:JavaLangLong_valueOfWithLong_(cost) withId:br]];
      }
    }
    JreStrongAssign(&fst_, [builder finish]);
    success = true;
  }
  @finally {
    OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader, writer } count:2 type:JavaIoCloseable_class_()]);
    if (success) {
      OrgApacheLuceneUtilIOUtils_deleteFilesIfExistWithOrgLukhnosPortmobileFilePathArray_([IOSObjectArray arrayWithObjects:(id[]){ tempInput, tempSorted } count:2 type:OrgLukhnosPortmobileFilePath_class_()]);
    }
    else {
      OrgApacheLuceneUtilIOUtils_deleteFilesIgnoringExceptionsWithOrgLukhnosPortmobileFilePathArray_([IOSObjectArray arrayWithObjects:(id[]){ tempInput, tempSorted } count:2 type:OrgLukhnosPortmobileFilePath_class_()]);
    }
  }
}

- (jboolean)storeWithOrgApacheLuceneStoreDataOutput:(OrgApacheLuceneStoreDataOutput *)output {
  [((OrgApacheLuceneStoreDataOutput *) nil_chk(output)) writeVLongWithLong:count_];
  if (fst_ == nil) {
    return false;
  }
  [fst_ saveWithOrgApacheLuceneStoreDataOutput:output];
  [output writeVIntWithInt:maxAnalyzedPathsForOneInput_];
  [output writeByteWithByte:(jbyte) (hasPayloads_ ? 1 : 0)];
  return true;
}

- (jboolean)load__WithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)input {
  count_ = [((OrgApacheLuceneStoreDataInput *) nil_chk(input)) readVLong];
  JreStrongAssignAndConsume(&self->fst_, new_OrgApacheLuceneUtilFstFST_initWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilFstOutputs_(input, create_OrgApacheLuceneUtilFstPairOutputs_initWithOrgApacheLuceneUtilFstOutputs_withOrgApacheLuceneUtilFstOutputs_(OrgApacheLuceneUtilFstPositiveIntOutputs_getSingleton(), OrgApacheLuceneUtilFstByteSequenceOutputs_getSingleton())));
  maxAnalyzedPathsForOneInput_ = [input readVInt];
  hasPayloads_ = ([input readByte] == 1);
  return true;
}

- (OrgApacheLuceneSearchSuggestLookup_LookupResult *)getLookupResultWithJavaLangLong:(JavaLangLong *)output1
                                                     withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)output2
                                              withOrgApacheLuceneUtilCharsRefBuilder:(OrgApacheLuceneUtilCharsRefBuilder *)spare {
  return OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_getLookupResultWithJavaLangLong_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilCharsRefBuilder_(self, output1, output2, spare);
}

- (jboolean)sameSurfaceFormWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)key
                           withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)output2 {
  return OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_sameSurfaceFormWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_(self, key, output2);
}

- (id<JavaUtilList>)lookupWithJavaLangCharSequence:(id<JavaLangCharSequence>)key
                                   withJavaUtilSet:(id<JavaUtilSet>)contexts
                                       withBoolean:(jboolean)onlyMorePopular
                                           withInt:(jint)num {
  JreAssert(num > 0, @"org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester.java:653 condition failed: assert num > 0;");
  if (onlyMorePopular) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"this suggester only works with onlyMorePopular=false");
  }
  if (contexts != nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"this suggester doesn't support contexts");
  }
  if (fst_ == nil) {
    return JavaUtilCollections_emptyList();
  }
  for (jint i = 0; i < [((id<JavaLangCharSequence>) nil_chk(key)) java_length]; i++) {
    if ([key charAtWithInt:i] == (jint) 0x1E) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"lookup key cannot contain HOLE character U+001E; this character is reserved");
    }
    if ([key charAtWithInt:i] == (jint) 0x1F) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"lookup key cannot contain unit separator character U+001F; this character is reserved");
    }
  }
  OrgApacheLuceneUtilBytesRef *utf8Key = create_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(key);
  @try {
    OrgApacheLuceneUtilAutomatonAutomaton *lookupAutomaton = OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_toLookupAutomatonWithJavaLangCharSequence_(self, key);
    OrgApacheLuceneUtilCharsRefBuilder *spare = create_OrgApacheLuceneUtilCharsRefBuilder_init();
    OrgApacheLuceneUtilFstFST_BytesReader *bytesReader = JreRetainedLocalValue([((OrgApacheLuceneUtilFstFST *) nil_chk(fst_)) getBytesReader]);
    OrgApacheLuceneUtilFstFST_Arc *scratchArc = create_OrgApacheLuceneUtilFstFST_Arc_init();
    id<JavaUtilList> results = create_JavaUtilArrayList_init();
    id<JavaUtilList> prefixPaths = OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_intersectPrefixPathsWithOrgApacheLuceneUtilAutomatonAutomaton_withOrgApacheLuceneUtilFstFST_([self convertAutomatonWithOrgApacheLuceneUtilAutomatonAutomaton:lookupAutomaton], fst_);
    if (exactFirst_) {
      jint count = 0;
      for (OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path * __strong path in nil_chk(prefixPaths)) {
        if ([((OrgApacheLuceneUtilFstFST *) nil_chk(fst_)) findTargetArcWithInt:OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_END_BYTE withOrgApacheLuceneUtilFstFST_Arc:((OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path *) nil_chk(path))->fstNode_ withOrgApacheLuceneUtilFstFST_Arc:scratchArc withOrgApacheLuceneUtilFstFST_BytesReader:bytesReader] != nil) {
          count++;
        }
      }
      OrgApacheLuceneUtilFstUtil_TopNSearcher *searcher;
      searcher = create_OrgApacheLuceneUtilFstUtil_TopNSearcher_initWithOrgApacheLuceneUtilFstFST_withInt_withInt_withJavaUtilComparator_(fst_, count * maxSurfaceFormsPerAnalyzedForm_, count * maxSurfaceFormsPerAnalyzedForm_, OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_weightComparator);
      for (OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path * __strong path in prefixPaths) {
        if ([((OrgApacheLuceneUtilFstFST *) nil_chk(fst_)) findTargetArcWithInt:OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_END_BYTE withOrgApacheLuceneUtilFstFST_Arc:((OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path *) nil_chk(path))->fstNode_ withOrgApacheLuceneUtilFstFST_Arc:scratchArc withOrgApacheLuceneUtilFstFST_BytesReader:bytesReader] != nil) {
          [searcher addStartPathsWithOrgApacheLuceneUtilFstFST_Arc:scratchArc withId:[((OrgApacheLuceneUtilFstOutputs *) nil_chk(((OrgApacheLuceneUtilFstFST *) nil_chk(fst_))->outputs_)) addWithId:path->output_ withId:scratchArc->output_] withBoolean:false withOrgApacheLuceneUtilIntsRefBuilder:path->input_];
        }
      }
      OrgApacheLuceneUtilFstUtil_TopResults *completions = JreRetainedLocalValue([searcher search]);
      JreAssert(((OrgApacheLuceneUtilFstUtil_TopResults *) nil_chk(completions))->isComplete_, @"org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester.java:726 condition failed: assert completions.isComplete;");
      for (OrgApacheLuceneUtilFstUtil_Result * __strong completion in completions) {
        OrgApacheLuceneUtilBytesRef *output2 = JreRetainedLocalValue(((OrgApacheLuceneUtilFstPairOutputs_Pair *) nil_chk(((OrgApacheLuceneUtilFstUtil_Result *) nil_chk(completion))->output_))->output2_);
        if (OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_sameSurfaceFormWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_(self, utf8Key, output2)) {
          [results addWithId:OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_getLookupResultWithJavaLangLong_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilCharsRefBuilder_(self, ((OrgApacheLuceneUtilFstPairOutputs_Pair *) completion->output_)->output1_, output2, spare)];
          break;
        }
      }
      if ([results size] == num) {
        return results;
      }
    }
    OrgApacheLuceneUtilFstUtil_TopNSearcher *searcher;
    searcher = create_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_1_initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_withOrgApacheLuceneUtilBytesRef_withJavaUtilList_withOrgApacheLuceneUtilFstFST_withInt_withInt_withJavaUtilComparator_(self, utf8Key, results, fst_, num - [results size], num * maxAnalyzedPathsForOneInput_, OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_weightComparator);
    prefixPaths = [self getFullPrefixPathsWithJavaUtilList:prefixPaths withOrgApacheLuceneUtilAutomatonAutomaton:lookupAutomaton withOrgApacheLuceneUtilFstFST:fst_];
    for (OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path * __strong path in nil_chk(prefixPaths)) {
      [searcher addStartPathsWithOrgApacheLuceneUtilFstFST_Arc:((OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path *) nil_chk(path))->fstNode_ withId:path->output_ withBoolean:true withOrgApacheLuceneUtilIntsRefBuilder:path->input_];
    }
    OrgApacheLuceneUtilFstUtil_TopResults *completions = JreRetainedLocalValue([searcher search]);
    JreAssert(((OrgApacheLuceneUtilFstUtil_TopResults *) nil_chk(completions))->isComplete_, @"org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester.java:796 condition failed: assert completions.isComplete;");
    for (OrgApacheLuceneUtilFstUtil_Result * __strong completion in completions) {
      OrgApacheLuceneSearchSuggestLookup_LookupResult *result = OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_getLookupResultWithJavaLangLong_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilCharsRefBuilder_(self, ((OrgApacheLuceneUtilFstPairOutputs_Pair *) nil_chk(((OrgApacheLuceneUtilFstUtil_Result *) nil_chk(completion))->output_))->output1_, ((OrgApacheLuceneUtilFstPairOutputs_Pair *) completion->output_)->output2_, spare);
      [results addWithId:result];
      if ([results size] == num) {
        break;
      }
    }
    return results;
  }
  @catch (JavaIoIOException *bogus) {
    @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(bogus);
  }
}

- (jlong)getCount {
  return count_;
}

- (id<JavaUtilList>)getFullPrefixPathsWithJavaUtilList:(id<JavaUtilList>)prefixPaths
             withOrgApacheLuceneUtilAutomatonAutomaton:(OrgApacheLuceneUtilAutomatonAutomaton *)lookupAutomaton
                         withOrgApacheLuceneUtilFstFST:(OrgApacheLuceneUtilFstFST *)fst {
  return prefixPaths;
}

- (OrgApacheLuceneUtilAutomatonAutomaton *)toAutomatonWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)surfaceForm
                                    withOrgApacheLuceneAnalysisTokenStreamToAutomaton:(OrgApacheLuceneAnalysisTokenStreamToAutomaton *)ts2a {
  return OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_toAutomatonWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneAnalysisTokenStreamToAutomaton_(self, surfaceForm, ts2a);
}

- (OrgApacheLuceneUtilAutomatonAutomaton *)toLookupAutomatonWithJavaLangCharSequence:(id<JavaLangCharSequence>)key {
  return OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_toLookupAutomatonWithJavaLangCharSequence_(self, key);
}

- (id)getWithJavaLangCharSequence:(id<JavaLangCharSequence>)key {
  @throw create_JavaLangUnsupportedOperationException_init();
}

+ (jint)decodeWeightWithLong:(jlong)encoded {
  return OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_decodeWeightWithLong_(encoded);
}

+ (jint)encodeWeightWithLong:(jlong)value {
  return OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_encodeWeightWithLong_(value);
}

- (void)dealloc {
  RELEASE_(fst_);
  RELEASE_(indexAnalyzer_);
  RELEASE_(queryAnalyzer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilAutomatonAutomaton;", 0x2, 4, 5, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilAutomatonAutomaton;", 0x4, 6, 5, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisTokenStreamToAutomaton;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, 9, -1, -1, -1 },
    { NULL, "Z", 0x1, 10, 11, 9, -1, -1, -1 },
    { NULL, "Z", 0x1, 12, 13, 9, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchSuggestLookup_LookupResult;", 0x2, 14, 15, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 16, 17, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 18, 19, -1, 20, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x4, 21, 22, 9, 23, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilAutomatonAutomaton;", 0x10, 24, 25, 9, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilAutomatonAutomaton;", 0x10, 26, 27, 9, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 28, 27, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 29, 30, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 31, 30, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneAnalysisAnalyzer:);
  methods[1].selector = @selector(initWithOrgApacheLuceneAnalysisAnalyzer:withOrgApacheLuceneAnalysisAnalyzer:);
  methods[2].selector = @selector(initWithOrgApacheLuceneAnalysisAnalyzer:withOrgApacheLuceneAnalysisAnalyzer:withInt:withInt:withInt:withBoolean:);
  methods[3].selector = @selector(ramBytesUsed);
  methods[4].selector = @selector(getChildResources);
  methods[5].selector = @selector(replaceSepWithOrgApacheLuceneUtilAutomatonAutomaton:);
  methods[6].selector = @selector(convertAutomatonWithOrgApacheLuceneUtilAutomatonAutomaton:);
  methods[7].selector = @selector(getTokenStreamToAutomaton);
  methods[8].selector = @selector(buildWithOrgApacheLuceneSearchSuggestInputIterator:);
  methods[9].selector = @selector(storeWithOrgApacheLuceneStoreDataOutput:);
  methods[10].selector = @selector(load__WithOrgApacheLuceneStoreDataInput:);
  methods[11].selector = @selector(getLookupResultWithJavaLangLong:withOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneUtilCharsRefBuilder:);
  methods[12].selector = @selector(sameSurfaceFormWithOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneUtilBytesRef:);
  methods[13].selector = @selector(lookupWithJavaLangCharSequence:withJavaUtilSet:withBoolean:withInt:);
  methods[14].selector = @selector(getCount);
  methods[15].selector = @selector(getFullPrefixPathsWithJavaUtilList:withOrgApacheLuceneUtilAutomatonAutomaton:withOrgApacheLuceneUtilFstFST:);
  methods[16].selector = @selector(toAutomatonWithOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneAnalysisTokenStreamToAutomaton:);
  methods[17].selector = @selector(toLookupAutomatonWithJavaLangCharSequence:);
  methods[18].selector = @selector(getWithJavaLangCharSequence:);
  methods[19].selector = @selector(decodeWeightWithLong:);
  methods[20].selector = @selector(encodeWeightWithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "fst_", "LOrgApacheLuceneUtilFstFST;", .constantValue.asLong = 0, 0x2, -1, -1, 32, -1 },
    { "indexAnalyzer_", "LOrgApacheLuceneAnalysisAnalyzer;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "queryAnalyzer_", "LOrgApacheLuceneAnalysisAnalyzer;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "exactFirst_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "preserveSep_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "EXACT_FIRST", "I", .constantValue.asInt = OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_EXACT_FIRST, 0x19, -1, -1, -1, -1 },
    { "PRESERVE_SEP", "I", .constantValue.asInt = OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_PRESERVE_SEP, 0x19, -1, -1, -1, -1 },
    { "SEP_LABEL", "I", .constantValue.asInt = OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_SEP_LABEL, 0x1a, -1, -1, -1, -1 },
    { "END_BYTE", "I", .constantValue.asInt = OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_END_BYTE, 0x1a, -1, -1, -1, -1 },
    { "maxSurfaceFormsPerAnalyzedForm_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "maxGraphExpansions_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "maxAnalyzedPathsForOneInput_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hasPayloads_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "PAYLOAD_SEP", "I", .constantValue.asInt = OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_PAYLOAD_SEP, 0x1a, -1, -1, -1, -1 },
    { "preservePositionIncrements_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "count_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "weightComparator", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x18, -1, 33, 34, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneAnalysisAnalyzer;", "LOrgApacheLuceneAnalysisAnalyzer;LOrgApacheLuceneAnalysisAnalyzer;", "LOrgApacheLuceneAnalysisAnalyzer;LOrgApacheLuceneAnalysisAnalyzer;IIIZ", "()Ljava/util/Collection<Lorg/apache/lucene/util/Accountable;>;", "replaceSep", "LOrgApacheLuceneUtilAutomatonAutomaton;", "convertAutomaton", "build", "LOrgApacheLuceneSearchSuggestInputIterator;", "LJavaIoIOException;", "store", "LOrgApacheLuceneStoreDataOutput;", "load", "LOrgApacheLuceneStoreDataInput;", "getLookupResult", "LJavaLangLong;LOrgApacheLuceneUtilBytesRef;LOrgApacheLuceneUtilCharsRefBuilder;", "sameSurfaceForm", "LOrgApacheLuceneUtilBytesRef;LOrgApacheLuceneUtilBytesRef;", "lookup", "LJavaLangCharSequence;LJavaUtilSet;ZI", "(Ljava/lang/CharSequence;Ljava/util/Set<Lorg/apache/lucene/util/BytesRef;>;ZI)Ljava/util/List<Lorg/apache/lucene/search/suggest/Lookup$LookupResult;>;", "getFullPrefixPaths", "LJavaUtilList;LOrgApacheLuceneUtilAutomatonAutomaton;LOrgApacheLuceneUtilFstFST;", "(Ljava/util/List<Lorg/apache/lucene/search/suggest/analyzing/FSTUtil$Path<Lorg/apache/lucene/util/fst/PairOutputs$Pair<Ljava/lang/Long;Lorg/apache/lucene/util/BytesRef;>;>;>;Lorg/apache/lucene/util/automaton/Automaton;Lorg/apache/lucene/util/fst/FST<Lorg/apache/lucene/util/fst/PairOutputs$Pair<Ljava/lang/Long;Lorg/apache/lucene/util/BytesRef;>;>;)Ljava/util/List<Lorg/apache/lucene/search/suggest/analyzing/FSTUtil$Path<Lorg/apache/lucene/util/fst/PairOutputs$Pair<Ljava/lang/Long;Lorg/apache/lucene/util/BytesRef;>;>;>;", "toAutomaton", "LOrgApacheLuceneUtilBytesRef;LOrgApacheLuceneAnalysisTokenStreamToAutomaton;", "toLookupAutomaton", "LJavaLangCharSequence;", "get", "decodeWeight", "J", "encodeWeight", "Lorg/apache/lucene/util/fst/FST<Lorg/apache/lucene/util/fst/PairOutputs$Pair<Ljava/lang/Long;Lorg/apache/lucene/util/BytesRef;>;>;", &OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_weightComparator, "Ljava/util/Comparator<Lorg/apache/lucene/util/fst/PairOutputs$Pair<Ljava/lang/Long;Lorg/apache/lucene/util/BytesRef;>;>;", "LOrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester = { "AnalyzingSuggester", "org.apache.lucene.search.suggest.analyzing", ptrTable, methods, fields, 7, 0x1, 21, 17, -1, 35, -1, -1, -1 };
  return &_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_weightComparator, new_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_2_init());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester)
  }
}

@end

void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *self, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withInt_withInt_withBoolean_(self, analyzer, analyzer, OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_EXACT_FIRST | OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_PRESERVE_SEP, 256, -1, true);
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *new_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester, initWithOrgApacheLuceneAnalysisAnalyzer_, analyzer)
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *create_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester, initWithOrgApacheLuceneAnalysisAnalyzer_, analyzer)
}

void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *self, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer) {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withInt_withInt_withBoolean_(self, indexAnalyzer, queryAnalyzer, OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_EXACT_FIRST | OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_PRESERVE_SEP, 256, -1, true);
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *new_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester, initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_, indexAnalyzer, queryAnalyzer)
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *create_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester, initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_, indexAnalyzer, queryAnalyzer)
}

void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withInt_withInt_withBoolean_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *self, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint options, jint maxSurfaceFormsPerAnalyzedForm, jint maxGraphExpansions, jboolean preservePositionIncrements) {
  OrgApacheLuceneSearchSuggestLookup_init(self);
  JreStrongAssign(&self->fst_, nil);
  self->count_ = 0;
  JreStrongAssign(&self->indexAnalyzer_, indexAnalyzer);
  JreStrongAssign(&self->queryAnalyzer_, queryAnalyzer);
  if ((options & ~(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_EXACT_FIRST | OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_PRESERVE_SEP)) != 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"options should only contain EXACT_FIRST and PRESERVE_SEP; got ", options));
  }
  self->exactFirst_ = ((options & OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_EXACT_FIRST) != 0);
  self->preserveSep_ = ((options & OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_PRESERVE_SEP) != 0);
  if (maxSurfaceFormsPerAnalyzedForm <= 0 || maxSurfaceFormsPerAnalyzedForm > 256) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$IC", @"maxSurfaceFormsPerAnalyzedForm must be > 0 and < 256 (got: ", maxSurfaceFormsPerAnalyzedForm, ')'));
  }
  self->maxSurfaceFormsPerAnalyzedForm_ = maxSurfaceFormsPerAnalyzedForm;
  if (maxGraphExpansions < 1 && maxGraphExpansions != -1) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$IC", @"maxGraphExpansions must -1 (no limit) or > 0 (got: ", maxGraphExpansions, ')'));
  }
  self->maxGraphExpansions_ = maxGraphExpansions;
  self->preservePositionIncrements_ = preservePositionIncrements;
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *new_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withInt_withInt_withBoolean_(OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint options, jint maxSurfaceFormsPerAnalyzedForm, jint maxGraphExpansions, jboolean preservePositionIncrements) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester, initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withInt_withInt_withBoolean_, indexAnalyzer, queryAnalyzer, options, maxSurfaceFormsPerAnalyzedForm, maxGraphExpansions, preservePositionIncrements)
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *create_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withInt_withInt_withBoolean_(OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint options, jint maxSurfaceFormsPerAnalyzedForm, jint maxGraphExpansions, jboolean preservePositionIncrements) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester, initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withInt_withInt_withBoolean_, indexAnalyzer, queryAnalyzer, options, maxSurfaceFormsPerAnalyzedForm, maxGraphExpansions, preservePositionIncrements)
}

OrgApacheLuceneUtilAutomatonAutomaton *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_replaceSepWithOrgApacheLuceneUtilAutomatonAutomaton_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *self, OrgApacheLuceneUtilAutomatonAutomaton *a) {
  jint numStates = [((OrgApacheLuceneUtilAutomatonAutomaton *) nil_chk(a)) getNumStates];
  OrgApacheLuceneUtilAutomatonAutomaton_Builder *result = create_OrgApacheLuceneUtilAutomatonAutomaton_Builder_initWithInt_withInt_(numStates, [a getNumTransitions]);
  [result copyStatesWithOrgApacheLuceneUtilAutomatonAutomaton:a];
  OrgApacheLuceneUtilAutomatonTransition *t = create_OrgApacheLuceneUtilAutomatonTransition_init();
  IOSIntArray *topoSortStates = OrgApacheLuceneUtilAutomatonOperations_topoSortStatesWithOrgApacheLuceneUtilAutomatonAutomaton_(a);
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(topoSortStates))->size_; i++) {
    jint state = IOSIntArray_Get(topoSortStates, topoSortStates->size_ - 1 - i);
    jint count = [a initTransitionWithInt:state withOrgApacheLuceneUtilAutomatonTransition:t];
    for (jint j = 0; j < count; j++) {
      [a getNextTransitionWithOrgApacheLuceneUtilAutomatonTransition:t];
      if (t->min_ == OrgApacheLuceneAnalysisTokenStreamToAutomaton_POS_SEP) {
        JreAssert(t->max_ == OrgApacheLuceneAnalysisTokenStreamToAutomaton_POS_SEP, @"org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester.java:292 condition failed: assert t.max == TokenStreamToAutomaton.POS_SEP;");
        if (self->preserveSep_) {
          [result addTransitionWithInt:state withInt:t->dest_ withInt:OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_SEP_LABEL];
        }
        else {
          [result addEpsilonWithInt:state withInt:t->dest_];
        }
      }
      else if (t->min_ == OrgApacheLuceneAnalysisTokenStreamToAutomaton_HOLE) {
        JreAssert(t->max_ == OrgApacheLuceneAnalysisTokenStreamToAutomaton_HOLE, @"org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester.java:300 condition failed: assert t.max == TokenStreamToAutomaton.HOLE;");
        [result addEpsilonWithInt:state withInt:t->dest_];
      }
      else {
        [result addTransitionWithInt:state withInt:t->dest_ withInt:t->min_ withInt:t->max_];
      }
    }
  }
  return [result finish];
}

OrgApacheLuceneSearchSuggestLookup_LookupResult *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_getLookupResultWithJavaLangLong_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilCharsRefBuilder_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *self, JavaLangLong *output1, OrgApacheLuceneUtilBytesRef *output2, OrgApacheLuceneUtilCharsRefBuilder *spare) {
  OrgApacheLuceneSearchSuggestLookup_LookupResult *result;
  if (self->hasPayloads_) {
    jint sepIndex = -1;
    for (jint i = 0; i < ((OrgApacheLuceneUtilBytesRef *) nil_chk(output2))->length_; i++) {
      if (IOSByteArray_Get(nil_chk(output2->bytes_), output2->offset_ + i) == OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_PAYLOAD_SEP) {
        sepIndex = i;
        break;
      }
    }
    JreAssert(sepIndex != -1, @"org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester.java:617 condition failed: assert sepIndex != -1;");
    [((OrgApacheLuceneUtilCharsRefBuilder *) nil_chk(spare)) growWithInt:sepIndex];
    jint payloadLen = output2->length_ - sepIndex - 1;
    [spare copyUTF8BytesWithByteArray:output2->bytes_ withInt:output2->offset_ withInt:sepIndex];
    OrgApacheLuceneUtilBytesRef *payload = create_OrgApacheLuceneUtilBytesRef_initWithInt_(payloadLen);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(output2->bytes_, sepIndex + 1, payload->bytes_, 0, payloadLen);
    payload->length_ = payloadLen;
    result = create_OrgApacheLuceneSearchSuggestLookup_LookupResult_initWithJavaLangCharSequence_withLong_withOrgApacheLuceneUtilBytesRef_([spare description], OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_decodeWeightWithLong_([((JavaLangLong *) nil_chk(output1)) longLongValue]), payload);
  }
  else {
    [((OrgApacheLuceneUtilCharsRefBuilder *) nil_chk(spare)) growWithInt:((OrgApacheLuceneUtilBytesRef *) nil_chk(output2))->length_];
    [spare copyUTF8BytesWithOrgApacheLuceneUtilBytesRef:output2];
    result = create_OrgApacheLuceneSearchSuggestLookup_LookupResult_initWithJavaLangCharSequence_withLong_([spare description], OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_decodeWeightWithLong_([((JavaLangLong *) nil_chk(output1)) longLongValue]));
  }
  return result;
}

jboolean OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_sameSurfaceFormWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *self, OrgApacheLuceneUtilBytesRef *key, OrgApacheLuceneUtilBytesRef *output2) {
  if (self->hasPayloads_) {
    if (((OrgApacheLuceneUtilBytesRef *) nil_chk(key))->length_ >= ((OrgApacheLuceneUtilBytesRef *) nil_chk(output2))->length_) {
      return false;
    }
    for (jint i = 0; i < key->length_; i++) {
      if (IOSByteArray_Get(nil_chk(key->bytes_), key->offset_ + i) != IOSByteArray_Get(output2->bytes_, output2->offset_ + i)) {
        return false;
      }
    }
    return IOSByteArray_Get(nil_chk(output2->bytes_), output2->offset_ + key->length_) == OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_PAYLOAD_SEP;
  }
  else {
    return [((OrgApacheLuceneUtilBytesRef *) nil_chk(key)) bytesEqualsWithOrgApacheLuceneUtilBytesRef:output2];
  }
}

OrgApacheLuceneUtilAutomatonAutomaton *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_toAutomatonWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneAnalysisTokenStreamToAutomaton_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *self, OrgApacheLuceneUtilBytesRef *surfaceForm, OrgApacheLuceneAnalysisTokenStreamToAutomaton *ts2a) {
  OrgApacheLuceneUtilAutomatonAutomaton *automaton;
  {
    OrgApacheLuceneAnalysisTokenStream *ts = [((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(self->indexAnalyzer_)) tokenStreamWithNSString:@"" withNSString:[((OrgApacheLuceneUtilBytesRef *) nil_chk(surfaceForm)) utf8ToString]];
    JavaLangThrowable *__primaryException1 = nil;
    @try {
      automaton = [((OrgApacheLuceneAnalysisTokenStreamToAutomaton *) nil_chk(ts2a)) toAutomatonWithOrgApacheLuceneAnalysisTokenStream:ts];
    }
    @catch (JavaLangThrowable *e) {
      __primaryException1 = e;
      @throw e;
    }
    @finally {
      if (ts != nil) {
        if (__primaryException1 != nil) {
          @try {
            [ts close];
          }
          @catch (JavaLangThrowable *e) {
            [__primaryException1 addSuppressedWithJavaLangThrowable:e];
          }
        }
        else {
          [ts close];
        }
      }
    }
  }
  automaton = OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_replaceSepWithOrgApacheLuceneUtilAutomatonAutomaton_(self, automaton);
  automaton = [self convertAutomatonWithOrgApacheLuceneUtilAutomatonAutomaton:automaton];
  return automaton;
}

OrgApacheLuceneUtilAutomatonAutomaton *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_toLookupAutomatonWithJavaLangCharSequence_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *self, id<JavaLangCharSequence> key) {
  OrgApacheLuceneUtilAutomatonAutomaton *automaton = nil;
  {
    OrgApacheLuceneAnalysisTokenStream *ts = [((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(self->queryAnalyzer_)) tokenStreamWithNSString:@"" withNSString:[((id<JavaLangCharSequence>) nil_chk(key)) description]];
    JavaLangThrowable *__primaryException1 = nil;
    @try {
      automaton = [((OrgApacheLuceneAnalysisTokenStreamToAutomaton *) nil_chk([self getTokenStreamToAutomaton])) toAutomatonWithOrgApacheLuceneAnalysisTokenStream:ts];
    }
    @catch (JavaLangThrowable *e) {
      __primaryException1 = e;
      @throw e;
    }
    @finally {
      if (ts != nil) {
        if (__primaryException1 != nil) {
          @try {
            [ts close];
          }
          @catch (JavaLangThrowable *e) {
            [__primaryException1 addSuppressedWithJavaLangThrowable:e];
          }
        }
        else {
          [ts close];
        }
      }
    }
  }
  automaton = OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_replaceSepWithOrgApacheLuceneUtilAutomatonAutomaton_(self, automaton);
  automaton = OrgApacheLuceneUtilAutomatonOperations_determinizeWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_(automaton, OrgApacheLuceneUtilAutomatonOperations_DEFAULT_MAX_DETERMINIZED_STATES);
  return automaton;
}

jint OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_decodeWeightWithLong_(jlong encoded) {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_initialize();
  return (jint) (JavaLangInteger_MAX_VALUE - encoded);
}

jint OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_encodeWeightWithLong_(jlong value) {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_initialize();
  if (value < 0 || value > JavaLangInteger_MAX_VALUE) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(JreStrcat("$J", @"cannot encode value: ", value));
  }
  return JavaLangInteger_MAX_VALUE - (jint) value;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester)

@implementation OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator

- (instancetype)initWithBoolean:(jboolean)hasPayloads {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator_initWithBoolean_(self, hasPayloads);
  return self;
}

- (jint)compareWithId:(OrgApacheLuceneUtilBytesRef *)a
               withId:(OrgApacheLuceneUtilBytesRef *)b {
  [((OrgApacheLuceneStoreByteArrayDataInput *) nil_chk(readerA_)) resetWithByteArray:((OrgApacheLuceneUtilBytesRef *) nil_chk(a))->bytes_ withInt:a->offset_ withInt:a->length_];
  ((OrgApacheLuceneUtilBytesRef *) nil_chk(scratchA_))->length_ = [readerA_ readShort];
  JreStrongAssign(&scratchA_->bytes_, a->bytes_);
  scratchA_->offset_ = [readerA_ getPosition];
  [((OrgApacheLuceneStoreByteArrayDataInput *) nil_chk(readerB_)) resetWithByteArray:((OrgApacheLuceneUtilBytesRef *) nil_chk(b))->bytes_ withInt:b->offset_ withInt:b->length_];
  JreStrongAssign(&((OrgApacheLuceneUtilBytesRef *) nil_chk(scratchB_))->bytes_, b->bytes_);
  scratchB_->length_ = [readerB_ readShort];
  scratchB_->offset_ = [readerB_ getPosition];
  jint cmp = [scratchA_ compareToWithId:scratchB_];
  if (cmp != 0) {
    return cmp;
  }
  [readerA_ skipBytesWithLong:scratchA_->length_];
  [readerB_ skipBytesWithLong:scratchB_->length_];
  jlong aCost = [readerA_ readInt];
  jlong bCost = [readerB_ readInt];
  JreAssert(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_decodeWeightWithLong_(aCost) >= 0, @"org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester.java:368 condition failed: assert decodeWeight(aCost) >= 0;");
  JreAssert(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_decodeWeightWithLong_(bCost) >= 0, @"org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester.java:369 condition failed: assert decodeWeight(bCost) >= 0;");
  if (aCost < bCost) {
    return -1;
  }
  else if (aCost > bCost) {
    return 1;
  }
  if (hasPayloads_) {
    scratchA_->length_ = [readerA_ readShort];
    scratchB_->length_ = [readerB_ readShort];
    scratchA_->offset_ = [readerA_ getPosition];
    scratchB_->offset_ = [readerB_ getPosition];
  }
  else {
    scratchA_->offset_ = [readerA_ getPosition];
    scratchB_->offset_ = [readerB_ getPosition];
    scratchA_->length_ = a->length_ - scratchA_->offset_;
    scratchB_->length_ = b->length_ - scratchB_->offset_;
  }
  return [scratchA_ compareToWithId:scratchB_];
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (void)dealloc {
  RELEASE_(readerA_);
  RELEASE_(readerB_);
  RELEASE_(scratchA_);
  RELEASE_(scratchB_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithBoolean:);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "hasPayloads_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "readerA_", "LOrgApacheLuceneStoreByteArrayDataInput;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "readerB_", "LOrgApacheLuceneStoreByteArrayDataInput;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "scratchA_", "LOrgApacheLuceneUtilBytesRef;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "scratchB_", "LOrgApacheLuceneUtilBytesRef;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "Z", "compare", "LOrgApacheLuceneUtilBytesRef;LOrgApacheLuceneUtilBytesRef;", "LOrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester;", "Ljava/lang/Object;Ljava/util/Comparator<Lorg/apache/lucene/util/BytesRef;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator = { "AnalyzingComparator", "org.apache.lucene.search.suggest.analyzing", ptrTable, methods, fields, 7, 0xa, 2, 5, 3, -1, -1, 4, -1 };
  return &_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator;
}

@end

void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator_initWithBoolean_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator *self, jboolean hasPayloads) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->readerA_, new_OrgApacheLuceneStoreByteArrayDataInput_init());
  JreStrongAssignAndConsume(&self->readerB_, new_OrgApacheLuceneStoreByteArrayDataInput_init());
  JreStrongAssignAndConsume(&self->scratchA_, new_OrgApacheLuceneUtilBytesRef_init());
  JreStrongAssignAndConsume(&self->scratchB_, new_OrgApacheLuceneUtilBytesRef_init());
  self->hasPayloads_ = hasPayloads;
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator *new_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator_initWithBoolean_(jboolean hasPayloads) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator, initWithBoolean_, hasPayloads)
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator *create_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator_initWithBoolean_(jboolean hasPayloads) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator, initWithBoolean_, hasPayloads)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_AnalyzingComparator)

@implementation OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_1

- (instancetype)initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester:(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *)outer$
                                                withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)capture$0
                                                               withJavaUtilList:(id<JavaUtilList>)capture$1
                                                  withOrgApacheLuceneUtilFstFST:(OrgApacheLuceneUtilFstFST *)fst
                                                                        withInt:(jint)topN
                                                                        withInt:(jint)maxQueueDepth
                                                         withJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_1_initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_withOrgApacheLuceneUtilBytesRef_withJavaUtilList_withOrgApacheLuceneUtilFstFST_withInt_withInt_withJavaUtilComparator_(self, outer$, capture$0, capture$1, fst, topN, maxQueueDepth, comparator);
  return self;
}

- (jboolean)acceptResultWithOrgApacheLuceneUtilIntsRef:(OrgApacheLuceneUtilIntsRef *)input
                                                withId:(OrgApacheLuceneUtilFstPairOutputs_Pair *)output {
  if ([((id<JavaUtilSet>) nil_chk(seen_)) containsWithId:((OrgApacheLuceneUtilFstPairOutputs_Pair *) nil_chk(output))->output2_]) {
    return false;
  }
  [seen_ addWithId:output->output2_];
  if (!this$0_->exactFirst_) {
    return true;
  }
  else {
    if (OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_sameSurfaceFormWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_(this$0_, val$utf8Key_, output->output2_)) {
      JreAssert([((id<JavaUtilList>) nil_chk(val$results_)) size] == 1, @"org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester.java:780 condition failed: assert results.size() == 1;");
      return false;
    }
    else {
      return true;
    }
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$utf8Key_);
  RELEASE_(val$results_);
  RELEASE_(seen_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "Z", 0x4, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester:withOrgApacheLuceneUtilBytesRef:withJavaUtilList:withOrgApacheLuceneUtilFstFST:withInt:withInt:withJavaUtilComparator:);
  methods[1].selector = @selector(acceptResultWithOrgApacheLuceneUtilIntsRef:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$utf8Key_", "LOrgApacheLuceneUtilBytesRef;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$results_", "LJavaUtilList;", .constantValue.asLong = 0, 0x1012, -1, -1, 5, -1 },
    { "seen_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester;LOrgApacheLuceneUtilBytesRef;LJavaUtilList;LOrgApacheLuceneUtilFstFST;IILJavaUtilComparator;", "(Lorg/apache/lucene/util/fst/FST<Lorg/apache/lucene/util/fst/PairOutputs$Pair<Ljava/lang/Long;Lorg/apache/lucene/util/BytesRef;>;>;IILjava/util/Comparator<Lorg/apache/lucene/util/fst/PairOutputs$Pair<Ljava/lang/Long;Lorg/apache/lucene/util/BytesRef;>;>;)V", "acceptResult", "LOrgApacheLuceneUtilIntsRef;LOrgApacheLuceneUtilFstPairOutputs_Pair;", "(Lorg/apache/lucene/util/IntsRef;Lorg/apache/lucene/util/fst/PairOutputs$Pair<Ljava/lang/Long;Lorg/apache/lucene/util/BytesRef;>;)Z", "Ljava/util/List<Lorg/apache/lucene/search/suggest/Lookup$LookupResult;>;", "Ljava/util/Set<Lorg/apache/lucene/util/BytesRef;>;", "LOrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester;", "lookupWithJavaLangCharSequence:withJavaUtilSet:withBoolean:withInt:", "Lorg/apache/lucene/util/fst/Util$TopNSearcher<Lorg/apache/lucene/util/fst/PairOutputs$Pair<Ljava/lang/Long;Lorg/apache/lucene/util/BytesRef;>;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_1 = { "", "org.apache.lucene.search.suggest.analyzing", ptrTable, methods, fields, 7, 0x8010, 2, 4, 7, -1, 8, 9, -1 };
  return &_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_1;
}

@end

void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_1_initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_withOrgApacheLuceneUtilBytesRef_withJavaUtilList_withOrgApacheLuceneUtilFstFST_withInt_withInt_withJavaUtilComparator_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_1 *self, OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *outer$, OrgApacheLuceneUtilBytesRef *capture$0, id<JavaUtilList> capture$1, OrgApacheLuceneUtilFstFST *fst, jint topN, jint maxQueueDepth, id<JavaUtilComparator> comparator) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$utf8Key_, capture$0);
  JreStrongAssign(&self->val$results_, capture$1);
  OrgApacheLuceneUtilFstUtil_TopNSearcher_initWithOrgApacheLuceneUtilFstFST_withInt_withInt_withJavaUtilComparator_(self, fst, topN, maxQueueDepth, comparator);
  JreStrongAssignAndConsume(&self->seen_, new_JavaUtilHashSet_init());
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_1 *new_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_1_initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_withOrgApacheLuceneUtilBytesRef_withJavaUtilList_withOrgApacheLuceneUtilFstFST_withInt_withInt_withJavaUtilComparator_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *outer$, OrgApacheLuceneUtilBytesRef *capture$0, id<JavaUtilList> capture$1, OrgApacheLuceneUtilFstFST *fst, jint topN, jint maxQueueDepth, id<JavaUtilComparator> comparator) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_1, initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_withOrgApacheLuceneUtilBytesRef_withJavaUtilList_withOrgApacheLuceneUtilFstFST_withInt_withInt_withJavaUtilComparator_, outer$, capture$0, capture$1, fst, topN, maxQueueDepth, comparator)
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_1 *create_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_1_initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_withOrgApacheLuceneUtilBytesRef_withJavaUtilList_withOrgApacheLuceneUtilFstFST_withInt_withInt_withJavaUtilComparator_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester *outer$, OrgApacheLuceneUtilBytesRef *capture$0, id<JavaUtilList> capture$1, OrgApacheLuceneUtilFstFST *fst, jint topN, jint maxQueueDepth, id<JavaUtilComparator> comparator) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_1, initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_withOrgApacheLuceneUtilBytesRef_withJavaUtilList_withOrgApacheLuceneUtilFstFST_withInt_withInt_withJavaUtilComparator_, outer$, capture$0, capture$1, fst, topN, maxQueueDepth, comparator)
}

@implementation OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)compareWithId:(OrgApacheLuceneUtilFstPairOutputs_Pair *)left
               withId:(OrgApacheLuceneUtilFstPairOutputs_Pair *)right {
  return [((JavaLangLong *) nil_chk(((OrgApacheLuceneUtilFstPairOutputs_Pair *) nil_chk(left))->output1_)) compareToWithId:((OrgApacheLuceneUtilFstPairOutputs_Pair *) nil_chk(right))->output1_];
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compare", "LOrgApacheLuceneUtilFstPairOutputs_Pair;LOrgApacheLuceneUtilFstPairOutputs_Pair;", "(Lorg/apache/lucene/util/fst/PairOutputs$Pair<Ljava/lang/Long;Lorg/apache/lucene/util/BytesRef;>;Lorg/apache/lucene/util/fst/PairOutputs$Pair<Ljava/lang/Long;Lorg/apache/lucene/util/BytesRef;>;)I", "LOrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester;", "Ljava/lang/Object;Ljava/util/Comparator<Lorg/apache/lucene/util/fst/PairOutputs$Pair<Ljava/lang/Long;Lorg/apache/lucene/util/BytesRef;>;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_2 = { "", "org.apache.lucene.search.suggest.analyzing", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 3, -1, -1, 4, -1 };
  return &_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_2;
}

@end

void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_2_init(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_2 *self) {
  NSObject_init(self);
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_2 *new_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_2_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_2, init)
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_2 *create_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_2_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingSuggester_2, init)
}
