//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/StringReader.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/Throwable.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/apache/lucene/analysis/Analyzer.h"
#include "org/apache/lucene/analysis/AnalyzerWrapper.h"
#include "org/apache/lucene/analysis/TokenFilter.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/Tokenizer.h"
#include "org/apache/lucene/analysis/ngram/EdgeNGramTokenFilter.h"
#include "org/apache/lucene/analysis/ngram/Lucene43EdgeNGramTokenFilter.h"
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/OffsetAttribute.h"
#include "org/apache/lucene/document/BinaryDocValuesField.h"
#include "org/apache/lucene/document/Document.h"
#include "org/apache/lucene/document/Field.h"
#include "org/apache/lucene/document/FieldType.h"
#include "org/apache/lucene/document/NumericDocValuesField.h"
#include "org/apache/lucene/document/SortedSetDocValuesField.h"
#include "org/apache/lucene/document/StringField.h"
#include "org/apache/lucene/document/TextField.h"
#include "org/apache/lucene/index/BinaryDocValues.h"
#include "org/apache/lucene/index/DirectoryReader.h"
#include "org/apache/lucene/index/FilterLeafReader.h"
#include "org/apache/lucene/index/IndexOptions.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/IndexWriter.h"
#include "org/apache/lucene/index/IndexWriterConfig.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/index/LiveIndexWriterConfig.h"
#include "org/apache/lucene/index/MergePolicy.h"
#include "org/apache/lucene/index/MultiDocValues.h"
#include "org/apache/lucene/index/ReaderUtil.h"
#include "org/apache/lucene/index/SegmentReader.h"
#include "org/apache/lucene/index/SortedSetDocValues.h"
#include "org/apache/lucene/index/SortingMergePolicy.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/search/BooleanClause.h"
#include "org/apache/lucene/search/BooleanQuery.h"
#include "org/apache/lucene/search/Collector.h"
#include "org/apache/lucene/search/EarlyTerminatingSortingCollector.h"
#include "org/apache/lucene/search/FieldDoc.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/search/PrefixQuery.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/ScoreDoc.h"
#include "org/apache/lucene/search/SearcherManager.h"
#include "org/apache/lucene/search/Sort.h"
#include "org/apache/lucene/search/SortField.h"
#include "org/apache/lucene/search/TermQuery.h"
#include "org/apache/lucene/search/TopFieldCollector.h"
#include "org/apache/lucene/search/TopFieldDocs.h"
#include "org/apache/lucene/search/suggest/InputIterator.h"
#include "org/apache/lucene/search/suggest/Lookup.h"
#include "org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester.h"
#include "org/apache/lucene/store/DataInput.h"
#include "org/apache/lucene/store/DataOutput.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/FSDirectory.h"
#include "org/apache/lucene/util/Accountable.h"
#include "org/apache/lucene/util/Accountables.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"
#include "org/apache/lucene/util/Version.h"
#include "org/lukhnos/portmobile/file/Path.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester () {
 @public
  OrgApacheLuceneStoreDirectory *dir_;
  jboolean allTermsRequired_;
  jboolean highlight_;
  jboolean commitOnBuild_;
  /*!
   @brief Used for ongoing NRT additions/updates.
   */
  OrgApacheLuceneIndexIndexWriter *writer_;
}

- (OrgApacheLuceneAnalysisAnalyzer *)getGramAnalyzer;

- (void)ensureOpen;

- (OrgApacheLuceneDocumentDocument *)buildDocumentWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text
                                                                  withJavaUtilSet:(id<JavaUtilSet>)contexts
                                                                         withLong:(jlong)weight
                                                  withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)payload;

- (OrgApacheLuceneSearchBooleanQuery *)toQueryWithJavaUtilMap:(id<JavaUtilMap>)contextInfo;

- (OrgApacheLuceneSearchBooleanQuery *)toQueryWithJavaUtilSet:(id<JavaUtilSet>)contextInfo;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester, dir_, OrgApacheLuceneStoreDirectory *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester, writer_, OrgApacheLuceneIndexIndexWriter *)

/*!
 @brief How we sort the postings and search results.
 */
inline OrgApacheLuceneSearchSort *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_get_SORT(void);
static OrgApacheLuceneSearchSort *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_SORT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester, SORT, OrgApacheLuceneSearchSort *)

__attribute__((unused)) static OrgApacheLuceneAnalysisAnalyzer *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_getGramAnalyzer(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self);

__attribute__((unused)) static void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_ensureOpen(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self);

__attribute__((unused)) static OrgApacheLuceneDocumentDocument *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_buildDocumentWithOrgApacheLuceneUtilBytesRef_withJavaUtilSet_withLong_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self, OrgApacheLuceneUtilBytesRef *text, id<JavaUtilSet> contexts, jlong weight, OrgApacheLuceneUtilBytesRef *payload);

__attribute__((unused)) static OrgApacheLuceneSearchBooleanQuery *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_toQueryWithJavaUtilMap_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self, id<JavaUtilMap> contextInfo);

__attribute__((unused)) static OrgApacheLuceneSearchBooleanQuery *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_toQueryWithJavaUtilSet_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self, id<JavaUtilSet> contextInfo);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester__Annotations$1(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester__Annotations$2(void);

@interface OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_1 : OrgApacheLuceneAnalysisAnalyzerWrapper {
 @public
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *this$0_;
}

- (instancetype)initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester:(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *)outer$
                                   withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy:(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *)reuseStrategy;

- (OrgApacheLuceneAnalysisAnalyzer *)getWrappedAnalyzerWithNSString:(NSString *)fieldName;

- (OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)wrapComponentsWithNSString:(NSString *)fieldName
                            withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)components;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_1)

__attribute__((unused)) static void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_1_initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_1 *self, OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *outer$, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *reuseStrategy);

__attribute__((unused)) static OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_1 *new_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_1_initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *outer$, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *reuseStrategy) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_1 *create_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_1_initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *outer$, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *reuseStrategy);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester)

NSString *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_TEXT_FIELD_NAME = @"text";
NSString *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_EXACT_TEXT_FIELD_NAME = @"exacttext";
NSString *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_CONTEXTS_FIELD_NAME = @"contexts";

@implementation OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester

+ (NSString *)TEXT_FIELD_NAME {
  return OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_TEXT_FIELD_NAME;
}

+ (NSString *)EXACT_TEXT_FIELD_NAME {
  return OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_EXACT_TEXT_FIELD_NAME;
}

+ (NSString *)CONTEXTS_FIELD_NAME {
  return OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_CONTEXTS_FIELD_NAME;
}

+ (jint)DEFAULT_MIN_PREFIX_CHARS {
  return OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_DEFAULT_MIN_PREFIX_CHARS;
}

+ (jboolean)DEFAULT_ALL_TERMS_REQUIRED {
  return OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_DEFAULT_ALL_TERMS_REQUIRED;
}

+ (jboolean)DEFAULT_HIGHLIGHT {
  return OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_DEFAULT_HIGHLIGHT;
}

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                  withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_(self, dir, analyzer);
  return self;
}

- (instancetype)initWithOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)matchVersion
                 withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
               withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_(self, matchVersion, dir, analyzer);
  return self;
}

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                  withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)indexAnalyzer
                  withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)queryAnalyzer
                                              withInt:(jint)minPrefixChars
                                          withBoolean:(jboolean)commitOnBuild {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_(self, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, commitOnBuild);
  return self;
}

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                  withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)indexAnalyzer
                  withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)queryAnalyzer
                                              withInt:(jint)minPrefixChars
                                          withBoolean:(jboolean)commitOnBuild
                                          withBoolean:(jboolean)allTermsRequired
                                          withBoolean:(jboolean)highlight {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_withBoolean_withBoolean_(self, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, commitOnBuild, allTermsRequired, highlight);
  return self;
}

- (instancetype)initWithOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)matchVersion
                 withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
               withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)indexAnalyzer
               withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)queryAnalyzer
                                           withInt:(jint)minPrefixChars
                                       withBoolean:(jboolean)commitOnBuild {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_(self, matchVersion, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, commitOnBuild);
  return self;
}

- (instancetype)initWithOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)matchVersion
                 withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
               withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)indexAnalyzer
               withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)queryAnalyzer
                                           withInt:(jint)minPrefixChars
                                       withBoolean:(jboolean)commitOnBuild
                                       withBoolean:(jboolean)allTermsRequired
                                       withBoolean:(jboolean)highlight {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_withBoolean_withBoolean_(self, matchVersion, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, commitOnBuild, allTermsRequired, highlight);
  return self;
}

- (OrgApacheLuceneIndexIndexWriterConfig *)getIndexWriterConfigWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)indexAnalyzer
                                                withOrgApacheLuceneIndexIndexWriterConfig_OpenMode:(OrgApacheLuceneIndexIndexWriterConfig_OpenMode *)openMode {
  OrgApacheLuceneIndexIndexWriterConfig *iwc = create_OrgApacheLuceneIndexIndexWriterConfig_initWithOrgApacheLuceneAnalysisAnalyzer_(indexAnalyzer);
  [iwc setOpenModeWithOrgApacheLuceneIndexIndexWriterConfig_OpenMode:openMode];
  [iwc setMergePolicyWithOrgApacheLuceneIndexMergePolicy:create_OrgApacheLuceneIndexSortingMergePolicy_initWithOrgApacheLuceneIndexMergePolicy_withOrgApacheLuceneSearchSort_([iwc getMergePolicy], OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_SORT)];
  return iwc;
}

- (OrgApacheLuceneStoreDirectory *)getDirectoryWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path {
  return OrgApacheLuceneStoreFSDirectory_openWithOrgLukhnosPortmobileFilePath_(path);
}

- (void)buildWithOrgApacheLuceneSearchSuggestInputIterator:(id<OrgApacheLuceneSearchSuggestInputIterator>)iter {
  if (searcherMgr_ != nil) {
    [searcherMgr_ close];
    JreStrongAssign(&searcherMgr_, nil);
  }
  if (writer_ != nil) {
    [writer_ close];
    JreStrongAssign(&writer_, nil);
  }
  jboolean success = false;
  @try {
    JreStrongAssignAndConsume(&writer_, new_OrgApacheLuceneIndexIndexWriter_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexIndexWriterConfig_(dir_, [self getIndexWriterConfigWithOrgApacheLuceneAnalysisAnalyzer:OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_getGramAnalyzer(self) withOrgApacheLuceneIndexIndexWriterConfig_OpenMode:JreLoadEnum(OrgApacheLuceneIndexIndexWriterConfig_OpenMode, CREATE)]));
    OrgApacheLuceneUtilBytesRef *text;
    while ((text = [((id<OrgApacheLuceneSearchSuggestInputIterator>) nil_chk(iter)) next]) != nil) {
      OrgApacheLuceneUtilBytesRef *payload;
      if ([iter hasPayloads]) {
        payload = [iter payload];
      }
      else {
        payload = nil;
      }
      [self addWithOrgApacheLuceneUtilBytesRef:text withJavaUtilSet:[iter contexts] withLong:[iter weight] withOrgApacheLuceneUtilBytesRef:payload];
    }
    if (commitOnBuild_) {
      [self commit];
    }
    JreStrongAssignAndConsume(&searcherMgr_, new_OrgApacheLuceneSearchSearcherManager_initWithOrgApacheLuceneIndexIndexWriter_withBoolean_withOrgApacheLuceneSearchSearcherFactory_(writer_, true, nil));
    success = true;
  }
  @finally {
    if (success == false && writer_ != nil) {
      [writer_ rollback];
      JreStrongAssign(&writer_, nil);
    }
  }
}

- (void)commit {
  if (writer_ == nil) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Cannot commit on an closed writer. Add documents first");
  }
  [writer_ commit];
}

- (OrgApacheLuceneAnalysisAnalyzer *)getGramAnalyzer {
  return OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_getGramAnalyzer(self);
}

- (void)ensureOpen {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_ensureOpen(self);
}

- (void)addWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text
                           withJavaUtilSet:(id<JavaUtilSet>)contexts
                                  withLong:(jlong)weight
           withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)payload {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_ensureOpen(self);
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) addDocumentWithJavaLangIterable:OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_buildDocumentWithOrgApacheLuceneUtilBytesRef_withJavaUtilSet_withLong_withOrgApacheLuceneUtilBytesRef_(self, text, contexts, weight, payload)];
}

- (void)updateWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text
                              withJavaUtilSet:(id<JavaUtilSet>)contexts
                                     withLong:(jlong)weight
              withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)payload {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_ensureOpen(self);
  [((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) updateDocumentWithOrgApacheLuceneIndexTerm:create_OrgApacheLuceneIndexTerm_initWithNSString_withNSString_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_EXACT_TEXT_FIELD_NAME, [((OrgApacheLuceneUtilBytesRef *) nil_chk(text)) utf8ToString]) withJavaLangIterable:OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_buildDocumentWithOrgApacheLuceneUtilBytesRef_withJavaUtilSet_withLong_withOrgApacheLuceneUtilBytesRef_(self, text, contexts, weight, payload)];
}

- (OrgApacheLuceneDocumentDocument *)buildDocumentWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)text
                                                                  withJavaUtilSet:(id<JavaUtilSet>)contexts
                                                                         withLong:(jlong)weight
                                                  withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)payload {
  return OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_buildDocumentWithOrgApacheLuceneUtilBytesRef_withJavaUtilSet_withLong_withOrgApacheLuceneUtilBytesRef_(self, text, contexts, weight, payload);
}

- (void)refresh {
  if (searcherMgr_ == nil) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"suggester was not built");
  }
  [searcherMgr_ maybeRefreshBlocking];
}

- (OrgApacheLuceneDocumentFieldType *)getTextFieldType {
  OrgApacheLuceneDocumentFieldType *ft = create_OrgApacheLuceneDocumentFieldType_initWithOrgApacheLuceneDocumentFieldType_(JreLoadStatic(OrgApacheLuceneDocumentTextField, TYPE_NOT_STORED));
  [ft setIndexOptionsWithOrgApacheLuceneIndexIndexOptions:JreLoadEnum(OrgApacheLuceneIndexIndexOptions, DOCS)];
  [ft setOmitNormsWithBoolean:true];
  return ft;
}

- (id<JavaUtilList>)lookupWithJavaLangCharSequence:(id<JavaLangCharSequence>)key
                                   withJavaUtilSet:(id<JavaUtilSet>)contexts
                                       withBoolean:(jboolean)onlyMorePopular
                                           withInt:(jint)num {
  return [self lookupWithJavaLangCharSequence:key withJavaUtilSet:contexts withInt:num withBoolean:allTermsRequired_ withBoolean:highlight_];
}

- (id<JavaUtilList>)lookupWithJavaLangCharSequence:(id<JavaLangCharSequence>)key
                                           withInt:(jint)num
                                       withBoolean:(jboolean)allTermsRequired
                                       withBoolean:(jboolean)doHighlight {
  return [self lookupWithJavaLangCharSequence:key withOrgApacheLuceneSearchBooleanQuery:nil withInt:num withBoolean:allTermsRequired withBoolean:doHighlight];
}

- (id<JavaUtilList>)lookupWithJavaLangCharSequence:(id<JavaLangCharSequence>)key
                                   withJavaUtilSet:(id<JavaUtilSet>)contexts
                                           withInt:(jint)num
                                       withBoolean:(jboolean)allTermsRequired
                                       withBoolean:(jboolean)doHighlight {
  return [self lookupWithJavaLangCharSequence:key withOrgApacheLuceneSearchBooleanQuery:OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_toQueryWithJavaUtilSet_(self, contexts) withInt:num withBoolean:allTermsRequired withBoolean:doHighlight];
}

- (OrgApacheLuceneSearchQuery *)getLastTokenQueryWithNSString:(NSString *)token {
  if ([((NSString *) nil_chk(token)) java_length] < minPrefixChars_) {
    return create_OrgApacheLuceneSearchTermQuery_initWithOrgApacheLuceneIndexTerm_(create_OrgApacheLuceneIndexTerm_initWithNSString_withNSString_(@"textgrams", token));
  }
  return create_OrgApacheLuceneSearchPrefixQuery_initWithOrgApacheLuceneIndexTerm_(create_OrgApacheLuceneIndexTerm_initWithNSString_withNSString_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_TEXT_FIELD_NAME, token));
}

- (id<JavaUtilList>)lookupWithJavaLangCharSequence:(id<JavaLangCharSequence>)key
                                   withJavaUtilMap:(id<JavaUtilMap>)contextInfo
                                           withInt:(jint)num
                                       withBoolean:(jboolean)allTermsRequired
                                       withBoolean:(jboolean)doHighlight {
  return [self lookupWithJavaLangCharSequence:key withOrgApacheLuceneSearchBooleanQuery:OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_toQueryWithJavaUtilMap_(self, contextInfo) withInt:num withBoolean:allTermsRequired withBoolean:doHighlight];
}

- (OrgApacheLuceneSearchBooleanQuery *)toQueryWithJavaUtilMap:(id<JavaUtilMap>)contextInfo {
  return OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_toQueryWithJavaUtilMap_(self, contextInfo);
}

- (OrgApacheLuceneSearchBooleanQuery *)toQueryWithJavaUtilSet:(id<JavaUtilSet>)contextInfo {
  return OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_toQueryWithJavaUtilSet_(self, contextInfo);
}

- (void)addContextToQueryWithOrgApacheLuceneSearchBooleanQuery_Builder:(OrgApacheLuceneSearchBooleanQuery_Builder *)query
                                       withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)context
                          withOrgApacheLuceneSearchBooleanClause_Occur:(OrgApacheLuceneSearchBooleanClause_Occur *)clause {
  [((OrgApacheLuceneSearchBooleanQuery_Builder *) nil_chk(query)) addWithOrgApacheLuceneSearchQuery:create_OrgApacheLuceneSearchTermQuery_initWithOrgApacheLuceneIndexTerm_(create_OrgApacheLuceneIndexTerm_initWithNSString_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_CONTEXTS_FIELD_NAME, context)) withOrgApacheLuceneSearchBooleanClause_Occur:clause];
}

- (id<JavaUtilList>)lookupWithJavaLangCharSequence:(id<JavaLangCharSequence>)key
             withOrgApacheLuceneSearchBooleanQuery:(OrgApacheLuceneSearchBooleanQuery *)contextQuery
                                           withInt:(jint)num
                                       withBoolean:(jboolean)allTermsRequired
                                       withBoolean:(jboolean)doHighlight {
  if (searcherMgr_ == nil) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"suggester was not built");
  }
  OrgApacheLuceneSearchBooleanClause_Occur *occur;
  if (allTermsRequired) {
    occur = JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST);
  }
  else {
    occur = JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, SHOULD);
  }
  OrgApacheLuceneSearchBooleanQuery_Builder *query;
  id<JavaUtilSet> matchedTokens;
  NSString *prefixToken = nil;
  {
    OrgApacheLuceneAnalysisTokenStream *ts = [((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(queryAnalyzer_)) tokenStreamWithNSString:@"" withJavaIoReader:create_JavaIoStringReader_initWithNSString_([((id<JavaLangCharSequence>) nil_chk(key)) description])];
    JavaLangThrowable *__primaryException1 = nil;
    @try {
      [((OrgApacheLuceneAnalysisTokenStream *) nil_chk(ts)) reset];
      id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAtt = ((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) [ts addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
      id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute> offsetAtt = ((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) [ts addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_()]);
      NSString *lastToken = nil;
      query = create_OrgApacheLuceneSearchBooleanQuery_Builder_init();
      jint maxEndOffset = -1;
      matchedTokens = create_JavaUtilHashSet_init();
      while ([ts incrementToken]) {
        if (lastToken != nil) {
          [matchedTokens addWithId:lastToken];
          [query addWithOrgApacheLuceneSearchQuery:create_OrgApacheLuceneSearchTermQuery_initWithOrgApacheLuceneIndexTerm_(create_OrgApacheLuceneIndexTerm_initWithNSString_withNSString_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_TEXT_FIELD_NAME, lastToken)) withOrgApacheLuceneSearchBooleanClause_Occur:occur];
        }
        lastToken = [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAtt)) description];
        if (lastToken != nil) {
          maxEndOffset = JavaLangMath_maxWithInt_withInt_(maxEndOffset, [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(offsetAtt)) endOffset]);
        }
      }
      [ts end];
      if (lastToken != nil) {
        OrgApacheLuceneSearchQuery *lastQuery;
        if (maxEndOffset == [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(offsetAtt)) endOffset]) {
          lastQuery = [self getLastTokenQueryWithNSString:lastToken];
          prefixToken = lastToken;
        }
        else {
          [matchedTokens addWithId:lastToken];
          lastQuery = create_OrgApacheLuceneSearchTermQuery_initWithOrgApacheLuceneIndexTerm_(create_OrgApacheLuceneIndexTerm_initWithNSString_withNSString_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_TEXT_FIELD_NAME, lastToken));
        }
        if (lastQuery != nil) {
          [query addWithOrgApacheLuceneSearchQuery:lastQuery withOrgApacheLuceneSearchBooleanClause_Occur:occur];
        }
      }
      if (contextQuery != nil) {
        jboolean allMustNot = true;
        for (OrgApacheLuceneSearchBooleanClause * __strong clause in nil_chk([contextQuery clauses])) {
          if ([((OrgApacheLuceneSearchBooleanClause *) nil_chk(clause)) getOccur] != JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST_NOT)) {
            allMustNot = false;
            break;
          }
        }
        if (allMustNot) {
          for (OrgApacheLuceneSearchBooleanClause * __strong clause in nil_chk([contextQuery clauses])) {
            [query addWithOrgApacheLuceneSearchBooleanClause:clause];
          }
        }
        else {
          [query addWithOrgApacheLuceneSearchQuery:contextQuery withOrgApacheLuceneSearchBooleanClause_Occur:JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST)];
        }
      }
    }
    @catch (JavaLangThrowable *e) {
      __primaryException1 = e;
      @throw e;
    }
    @finally {
      if (ts != nil) {
        if (__primaryException1 != nil) {
          @try {
            [ts close];
          }
          @catch (JavaLangThrowable *e) {
            [__primaryException1 addSuppressedWithJavaLangThrowable:e];
          }
        }
        else {
          [ts close];
        }
      }
    }
  }
  OrgApacheLuceneSearchQuery *finalQuery = JreRetainedLocalValue([self finishQueryWithOrgApacheLuceneSearchBooleanQuery_Builder:query withBoolean:allTermsRequired]);
  OrgApacheLuceneSearchTopFieldCollector *c = OrgApacheLuceneSearchTopFieldCollector_createWithOrgApacheLuceneSearchSort_withInt_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_SORT, num, true, false, false);
  OrgApacheLuceneIndexSortingMergePolicy *sortingMergePolicy = (OrgApacheLuceneIndexSortingMergePolicy *) cast_chk([((OrgApacheLuceneIndexLiveIndexWriterConfig *) nil_chk([((OrgApacheLuceneIndexIndexWriter *) nil_chk(writer_)) getConfig])) getMergePolicy], [OrgApacheLuceneIndexSortingMergePolicy class]);
  id<OrgApacheLuceneSearchCollector> c2 = create_OrgApacheLuceneSearchEarlyTerminatingSortingCollector_initWithOrgApacheLuceneSearchCollector_withOrgApacheLuceneSearchSort_withInt_withOrgApacheLuceneSearchSort_(c, OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_SORT, num, [((OrgApacheLuceneIndexSortingMergePolicy *) nil_chk(sortingMergePolicy)) getSort]);
  OrgApacheLuceneSearchIndexSearcher *searcher = JreRetainedLocalValue([((OrgApacheLuceneSearchSearcherManager *) nil_chk(searcherMgr_)) acquire]);
  id<JavaUtilList> results = nil;
  @try {
    [((OrgApacheLuceneSearchIndexSearcher *) nil_chk(searcher)) searchWithOrgApacheLuceneSearchQuery:finalQuery withOrgApacheLuceneSearchCollector:c2];
    OrgApacheLuceneSearchTopFieldDocs *hits = JreRetainedLocalValue([((OrgApacheLuceneSearchTopFieldCollector *) nil_chk(c)) topDocs]);
    results = [self createResultsWithOrgApacheLuceneSearchIndexSearcher:searcher withOrgApacheLuceneSearchTopFieldDocs:hits withInt:num withJavaLangCharSequence:key withBoolean:doHighlight withJavaUtilSet:matchedTokens withNSString:prefixToken];
  }
  @finally {
    [((OrgApacheLuceneSearchSearcherManager *) nil_chk(searcherMgr_)) release__WithId:searcher];
  }
  return results;
}

- (id<JavaUtilList>)createResultsWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                  withOrgApacheLuceneSearchTopFieldDocs:(OrgApacheLuceneSearchTopFieldDocs *)hits
                                                                withInt:(jint)num
                                               withJavaLangCharSequence:(id<JavaLangCharSequence>)charSequence
                                                            withBoolean:(jboolean)doHighlight
                                                        withJavaUtilSet:(id<JavaUtilSet>)matchedTokens
                                                           withNSString:(NSString *)prefixToken {
  OrgApacheLuceneIndexBinaryDocValues *textDV = OrgApacheLuceneIndexMultiDocValues_getBinaryValuesWithOrgApacheLuceneIndexIndexReader_withNSString_([((OrgApacheLuceneSearchIndexSearcher *) nil_chk(searcher)) getIndexReader], OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_TEXT_FIELD_NAME);
  OrgApacheLuceneIndexBinaryDocValues *payloadsDV = OrgApacheLuceneIndexMultiDocValues_getBinaryValuesWithOrgApacheLuceneIndexIndexReader_withNSString_([searcher getIndexReader], @"payloads");
  id<JavaUtilList> leaves = JreRetainedLocalValue([((OrgApacheLuceneIndexIndexReader *) nil_chk([searcher getIndexReader])) leaves]);
  id<JavaUtilList> results = create_JavaUtilArrayList_init();
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(((OrgApacheLuceneSearchTopFieldDocs *) nil_chk(hits))->scoreDocs_))->size_; i++) {
    OrgApacheLuceneSearchFieldDoc *fd = (OrgApacheLuceneSearchFieldDoc *) cast_chk(IOSObjectArray_Get(hits->scoreDocs_, i), [OrgApacheLuceneSearchFieldDoc class]);
    OrgApacheLuceneUtilBytesRef *term = JreRetainedLocalValue([((OrgApacheLuceneIndexBinaryDocValues *) nil_chk(textDV)) getWithInt:((OrgApacheLuceneSearchFieldDoc *) nil_chk(fd))->doc_]);
    NSString *text = JreRetainedLocalValue([((OrgApacheLuceneUtilBytesRef *) nil_chk(term)) utf8ToString]);
    jlong score = [((JavaLangLong *) nil_chk((JavaLangLong *) cast_chk(IOSObjectArray_Get(nil_chk(fd->fields_), 0), [JavaLangLong class]))) longLongValue];
    OrgApacheLuceneUtilBytesRef *payload;
    if (payloadsDV != nil) {
      payload = OrgApacheLuceneUtilBytesRef_deepCopyOfWithOrgApacheLuceneUtilBytesRef_([payloadsDV getWithInt:fd->doc_]);
    }
    else {
      payload = nil;
    }
    jint segment = OrgApacheLuceneIndexReaderUtil_subIndexWithInt_withJavaUtilList_(fd->doc_, leaves);
    OrgApacheLuceneIndexSortedSetDocValues *contextsDV = JreRetainedLocalValue([((OrgApacheLuceneIndexLeafReader *) nil_chk([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk([((id<JavaUtilList>) nil_chk(leaves)) getWithInt:segment])) reader])) getSortedSetDocValuesWithNSString:OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_CONTEXTS_FIELD_NAME]);
    id<JavaUtilSet> contexts;
    if (contextsDV != nil) {
      contexts = create_JavaUtilHashSet_init();
      [contextsDV setDocumentWithInt:fd->doc_ - ((OrgApacheLuceneIndexLeafReaderContext *) nil_chk([leaves getWithInt:segment]))->docBase_];
      jlong ord;
      while ((ord = [contextsDV nextOrd]) != OrgApacheLuceneIndexSortedSetDocValues_NO_MORE_ORDS) {
        OrgApacheLuceneUtilBytesRef *context = OrgApacheLuceneUtilBytesRef_deepCopyOfWithOrgApacheLuceneUtilBytesRef_([contextsDV lookupOrdWithLong:ord]);
        [contexts addWithId:context];
      }
    }
    else {
      contexts = nil;
    }
    OrgApacheLuceneSearchSuggestLookup_LookupResult *result;
    if (doHighlight) {
      result = create_OrgApacheLuceneSearchSuggestLookup_LookupResult_initWithJavaLangCharSequence_withId_withLong_withOrgApacheLuceneUtilBytesRef_withJavaUtilSet_(text, [self highlightWithNSString:text withJavaUtilSet:matchedTokens withNSString:prefixToken], score, payload, contexts);
    }
    else {
      result = create_OrgApacheLuceneSearchSuggestLookup_LookupResult_initWithJavaLangCharSequence_withLong_withOrgApacheLuceneUtilBytesRef_withJavaUtilSet_(text, score, payload, contexts);
    }
    [results addWithId:result];
  }
  return results;
}

- (OrgApacheLuceneSearchQuery *)finishQueryWithOrgApacheLuceneSearchBooleanQuery_Builder:(OrgApacheLuceneSearchBooleanQuery_Builder *)inArg
                                                                             withBoolean:(jboolean)allTermsRequired {
  return [((OrgApacheLuceneSearchBooleanQuery_Builder *) nil_chk(inArg)) build];
}

- (id)highlightWithNSString:(NSString *)text
            withJavaUtilSet:(id<JavaUtilSet>)matchedTokens
               withNSString:(NSString *)prefixToken {
  OrgApacheLuceneAnalysisTokenStream *ts = [((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(queryAnalyzer_)) tokenStreamWithNSString:@"text" withJavaIoReader:create_JavaIoStringReader_initWithNSString_(text)];
  JavaLangThrowable *__primaryException1 = nil;
  @try {
    id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute> termAtt = JreRetainedLocalValue([((OrgApacheLuceneAnalysisTokenStream *) nil_chk(ts)) addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesCharTermAttribute_class_()]);
    id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute> offsetAtt = JreRetainedLocalValue([ts addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_()]);
    [ts reset];
    JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
    jint upto = 0;
    while ([ts incrementToken]) {
      NSString *token = [((id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>) nil_chk(termAtt)) description];
      jint startOffset = [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(offsetAtt)) startOffset];
      jint endOffset = [offsetAtt endOffset];
      if (upto < startOffset) {
        [self addNonMatchWithJavaLangStringBuilder:sb withNSString:[((NSString *) nil_chk(text)) java_substring:upto endIndex:startOffset]];
        upto = startOffset;
      }
      else if (upto > startOffset) {
        continue;
      }
      if ([((id<JavaUtilSet>) nil_chk(matchedTokens)) containsWithId:token]) {
        [self addWholeMatchWithJavaLangStringBuilder:sb withNSString:[((NSString *) nil_chk(text)) java_substring:startOffset endIndex:endOffset] withNSString:token];
        upto = endOffset;
      }
      else if (prefixToken != nil && [((NSString *) nil_chk(token)) java_hasPrefix:prefixToken]) {
        [self addPrefixMatchWithJavaLangStringBuilder:sb withNSString:[((NSString *) nil_chk(text)) java_substring:startOffset endIndex:endOffset] withNSString:token withNSString:prefixToken];
        upto = endOffset;
      }
    }
    [ts end];
    jint endOffset = [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(offsetAtt)) endOffset];
    if (upto < endOffset) {
      [self addNonMatchWithJavaLangStringBuilder:sb withNSString:[((NSString *) nil_chk(text)) java_substring:upto]];
    }
    return [sb description];
  }
  @catch (JavaLangThrowable *e) {
    __primaryException1 = e;
    @throw e;
  }
  @finally {
    if (ts != nil) {
      if (__primaryException1 != nil) {
        @try {
          [ts close];
        }
        @catch (JavaLangThrowable *e) {
          [__primaryException1 addSuppressedWithJavaLangThrowable:e];
        }
      }
      else {
        [ts close];
      }
    }
  }
}

- (void)addNonMatchWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                withNSString:(NSString *)text {
  [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:text];
}

- (void)addWholeMatchWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                  withNSString:(NSString *)surface
                                  withNSString:(NSString *)analyzed {
  [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"<b>"];
  [sb appendWithNSString:surface];
  [sb appendWithNSString:@"</b>"];
}

- (void)addPrefixMatchWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                   withNSString:(NSString *)surface
                                   withNSString:(NSString *)analyzed
                                   withNSString:(NSString *)prefixToken {
  if ([((NSString *) nil_chk(prefixToken)) java_length] >= [((NSString *) nil_chk(surface)) java_length]) {
    [self addWholeMatchWithJavaLangStringBuilder:sb withNSString:surface withNSString:analyzed];
    return;
  }
  [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"<b>"];
  [sb appendWithNSString:[surface java_substring:0 endIndex:[prefixToken java_length]]];
  [sb appendWithNSString:@"</b>"];
  [sb appendWithNSString:[surface java_substring:[prefixToken java_length]]];
}

- (jboolean)storeWithOrgApacheLuceneStoreDataOutput:(OrgApacheLuceneStoreDataOutput *)inArg {
  return false;
}

- (jboolean)load__WithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)outArg {
  return false;
}

- (void)close {
  if (searcherMgr_ != nil) {
    [searcherMgr_ close];
    JreStrongAssign(&searcherMgr_, nil);
  }
  if (writer_ != nil) {
    [writer_ close];
    [((OrgApacheLuceneStoreDirectory *) nil_chk(dir_)) close];
    JreStrongAssign(&writer_, nil);
  }
}

- (jlong)ramBytesUsed {
  jlong mem = OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfWithId_(self);
  @try {
    if (searcherMgr_ != nil) {
      OrgApacheLuceneSearchIndexSearcher *searcher = JreRetainedLocalValue([searcherMgr_ acquire]);
      @try {
        for (OrgApacheLuceneIndexLeafReaderContext * __strong context in nil_chk([((OrgApacheLuceneIndexIndexReader *) nil_chk([((OrgApacheLuceneSearchIndexSearcher *) nil_chk(searcher)) getIndexReader])) leaves])) {
          OrgApacheLuceneIndexLeafReader *reader = OrgApacheLuceneIndexFilterLeafReader_unwrapWithOrgApacheLuceneIndexLeafReader_([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader]);
          if ([reader isKindOfClass:[OrgApacheLuceneIndexSegmentReader class]]) {
            mem += [((OrgApacheLuceneIndexSegmentReader *) nil_chk(((OrgApacheLuceneIndexSegmentReader *) cast_chk([context reader], [OrgApacheLuceneIndexSegmentReader class])))) ramBytesUsed];
          }
        }
      }
      @finally {
        [((OrgApacheLuceneSearchSearcherManager *) nil_chk(searcherMgr_)) release__WithId:searcher];
      }
    }
    return mem;
  }
  @catch (JavaIoIOException *ioe) {
    @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(ioe);
  }
}

- (id<JavaUtilCollection>)getChildResources {
  id<JavaUtilList> resources = create_JavaUtilArrayList_init();
  @try {
    if (searcherMgr_ != nil) {
      OrgApacheLuceneSearchIndexSearcher *searcher = JreRetainedLocalValue([searcherMgr_ acquire]);
      @try {
        for (OrgApacheLuceneIndexLeafReaderContext * __strong context in nil_chk([((OrgApacheLuceneIndexIndexReader *) nil_chk([((OrgApacheLuceneSearchIndexSearcher *) nil_chk(searcher)) getIndexReader])) leaves])) {
          OrgApacheLuceneIndexLeafReader *reader = OrgApacheLuceneIndexFilterLeafReader_unwrapWithOrgApacheLuceneIndexLeafReader_([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader]);
          if ([reader isKindOfClass:[OrgApacheLuceneIndexSegmentReader class]]) {
            [resources addWithId:OrgApacheLuceneUtilAccountables_namedAccountableWithNSString_withOrgApacheLuceneUtilAccountable_(@"segment", (OrgApacheLuceneIndexSegmentReader *) reader)];
          }
        }
      }
      @finally {
        [((OrgApacheLuceneSearchSearcherManager *) nil_chk(searcherMgr_)) release__WithId:searcher];
      }
    }
    return JavaUtilCollections_unmodifiableListWithJavaUtilList_(resources);
  }
  @catch (JavaIoIOException *ioe) {
    @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(ioe);
  }
}

- (jlong)getCount {
  if (searcherMgr_ == nil) {
    return 0;
  }
  OrgApacheLuceneSearchIndexSearcher *searcher = JreRetainedLocalValue([searcherMgr_ acquire]);
  @try {
    return [((OrgApacheLuceneIndexIndexReader *) nil_chk([((OrgApacheLuceneSearchIndexSearcher *) nil_chk(searcher)) getIndexReader])) numDocs];
  }
  @finally {
    [((OrgApacheLuceneSearchSearcherManager *) nil_chk(searcherMgr_)) release__WithId:searcher];
  }
}

- (void)dealloc {
  RELEASE_(queryAnalyzer_);
  RELEASE_(indexAnalyzer_);
  RELEASE_(matchVersion_);
  RELEASE_(dir_);
  RELEASE_(writer_);
  RELEASE_(searcherMgr_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, 1, -1, 3, -1 },
    { NULL, NULL, 0x1, -1, 4, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 6, 1, -1, 7, -1 },
    { NULL, NULL, 0x1, -1, 8, 1, -1, 9, -1 },
    { NULL, "LOrgApacheLuceneIndexIndexWriterConfig;", 0x4, 10, 11, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreDirectory;", 0x4, 12, 13, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 15, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisAnalyzer;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x22, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 17, 1, 18, -1, -1 },
    { NULL, "V", 0x1, 19, 17, 1, 18, -1, -1 },
    { NULL, "LOrgApacheLuceneDocumentDocument;", 0x2, 20, 17, 1, 21, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneDocumentFieldType;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 22, 23, 1, 24, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 22, 25, 1, 26, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 22, 27, 1, 28, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x4, 29, 30, 1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 22, 31, 1, 32, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchBooleanQuery;", 0x2, 33, 34, -1, 35, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchBooleanQuery;", 0x2, 33, 36, -1, 37, -1, -1 },
    { NULL, "V", 0x1, 38, 39, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 22, 40, 1, 41, -1, -1 },
    { NULL, "LJavaUtilList;", 0x4, 42, 43, 1, 44, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x4, 45, 46, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x4, 47, 48, 1, 49, -1, -1 },
    { NULL, "V", 0x4, 50, 51, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 52, 53, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 54, 55, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 56, 57, 1, -1, -1, -1 },
    { NULL, "Z", 0x1, 58, 59, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, 60, -1, -1 },
    { NULL, "J", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneStoreDirectory:withOrgApacheLuceneAnalysisAnalyzer:);
  methods[1].selector = @selector(initWithOrgApacheLuceneUtilVersion:withOrgApacheLuceneStoreDirectory:withOrgApacheLuceneAnalysisAnalyzer:);
  methods[2].selector = @selector(initWithOrgApacheLuceneStoreDirectory:withOrgApacheLuceneAnalysisAnalyzer:withOrgApacheLuceneAnalysisAnalyzer:withInt:withBoolean:);
  methods[3].selector = @selector(initWithOrgApacheLuceneStoreDirectory:withOrgApacheLuceneAnalysisAnalyzer:withOrgApacheLuceneAnalysisAnalyzer:withInt:withBoolean:withBoolean:withBoolean:);
  methods[4].selector = @selector(initWithOrgApacheLuceneUtilVersion:withOrgApacheLuceneStoreDirectory:withOrgApacheLuceneAnalysisAnalyzer:withOrgApacheLuceneAnalysisAnalyzer:withInt:withBoolean:);
  methods[5].selector = @selector(initWithOrgApacheLuceneUtilVersion:withOrgApacheLuceneStoreDirectory:withOrgApacheLuceneAnalysisAnalyzer:withOrgApacheLuceneAnalysisAnalyzer:withInt:withBoolean:withBoolean:withBoolean:);
  methods[6].selector = @selector(getIndexWriterConfigWithOrgApacheLuceneAnalysisAnalyzer:withOrgApacheLuceneIndexIndexWriterConfig_OpenMode:);
  methods[7].selector = @selector(getDirectoryWithOrgLukhnosPortmobileFilePath:);
  methods[8].selector = @selector(buildWithOrgApacheLuceneSearchSuggestInputIterator:);
  methods[9].selector = @selector(commit);
  methods[10].selector = @selector(getGramAnalyzer);
  methods[11].selector = @selector(ensureOpen);
  methods[12].selector = @selector(addWithOrgApacheLuceneUtilBytesRef:withJavaUtilSet:withLong:withOrgApacheLuceneUtilBytesRef:);
  methods[13].selector = @selector(updateWithOrgApacheLuceneUtilBytesRef:withJavaUtilSet:withLong:withOrgApacheLuceneUtilBytesRef:);
  methods[14].selector = @selector(buildDocumentWithOrgApacheLuceneUtilBytesRef:withJavaUtilSet:withLong:withOrgApacheLuceneUtilBytesRef:);
  methods[15].selector = @selector(refresh);
  methods[16].selector = @selector(getTextFieldType);
  methods[17].selector = @selector(lookupWithJavaLangCharSequence:withJavaUtilSet:withBoolean:withInt:);
  methods[18].selector = @selector(lookupWithJavaLangCharSequence:withInt:withBoolean:withBoolean:);
  methods[19].selector = @selector(lookupWithJavaLangCharSequence:withJavaUtilSet:withInt:withBoolean:withBoolean:);
  methods[20].selector = @selector(getLastTokenQueryWithNSString:);
  methods[21].selector = @selector(lookupWithJavaLangCharSequence:withJavaUtilMap:withInt:withBoolean:withBoolean:);
  methods[22].selector = @selector(toQueryWithJavaUtilMap:);
  methods[23].selector = @selector(toQueryWithJavaUtilSet:);
  methods[24].selector = @selector(addContextToQueryWithOrgApacheLuceneSearchBooleanQuery_Builder:withOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneSearchBooleanClause_Occur:);
  methods[25].selector = @selector(lookupWithJavaLangCharSequence:withOrgApacheLuceneSearchBooleanQuery:withInt:withBoolean:withBoolean:);
  methods[26].selector = @selector(createResultsWithOrgApacheLuceneSearchIndexSearcher:withOrgApacheLuceneSearchTopFieldDocs:withInt:withJavaLangCharSequence:withBoolean:withJavaUtilSet:withNSString:);
  methods[27].selector = @selector(finishQueryWithOrgApacheLuceneSearchBooleanQuery_Builder:withBoolean:);
  methods[28].selector = @selector(highlightWithNSString:withJavaUtilSet:withNSString:);
  methods[29].selector = @selector(addNonMatchWithJavaLangStringBuilder:withNSString:);
  methods[30].selector = @selector(addWholeMatchWithJavaLangStringBuilder:withNSString:withNSString:);
  methods[31].selector = @selector(addPrefixMatchWithJavaLangStringBuilder:withNSString:withNSString:withNSString:);
  methods[32].selector = @selector(storeWithOrgApacheLuceneStoreDataOutput:);
  methods[33].selector = @selector(load__WithOrgApacheLuceneStoreDataInput:);
  methods[34].selector = @selector(close);
  methods[35].selector = @selector(ramBytesUsed);
  methods[36].selector = @selector(getChildResources);
  methods[37].selector = @selector(getCount);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TEXT_FIELD_NAME", "LNSString;", .constantValue.asLong = 0, 0x1c, -1, 61, -1, -1 },
    { "EXACT_TEXT_FIELD_NAME", "LNSString;", .constantValue.asLong = 0, 0x1c, -1, 62, -1, -1 },
    { "CONTEXTS_FIELD_NAME", "LNSString;", .constantValue.asLong = 0, 0x1c, -1, 63, -1, -1 },
    { "queryAnalyzer_", "LOrgApacheLuceneAnalysisAnalyzer;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "indexAnalyzer_", "LOrgApacheLuceneAnalysisAnalyzer;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "matchVersion_", "LOrgApacheLuceneUtilVersion;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "dir_", "LOrgApacheLuceneStoreDirectory;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "minPrefixChars_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "allTermsRequired_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "highlight_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "commitOnBuild_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "writer_", "LOrgApacheLuceneIndexIndexWriter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "searcherMgr_", "LOrgApacheLuceneSearchSearcherManager;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "DEFAULT_MIN_PREFIX_CHARS", "I", .constantValue.asInt = OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_DEFAULT_MIN_PREFIX_CHARS, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_ALL_TERMS_REQUIRED", "Z", .constantValue.asBOOL = OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_DEFAULT_ALL_TERMS_REQUIRED, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_HIGHLIGHT", "Z", .constantValue.asBOOL = OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_DEFAULT_HIGHLIGHT, 0x19, -1, -1, -1, -1 },
    { "SORT", "LOrgApacheLuceneSearchSort;", .constantValue.asLong = 0, 0x1a, -1, 64, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneStoreDirectory;LOrgApacheLuceneAnalysisAnalyzer;", "LJavaIoIOException;", "LOrgApacheLuceneUtilVersion;LOrgApacheLuceneStoreDirectory;LOrgApacheLuceneAnalysisAnalyzer;", (void *)&OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester__Annotations$0, "LOrgApacheLuceneStoreDirectory;LOrgApacheLuceneAnalysisAnalyzer;LOrgApacheLuceneAnalysisAnalyzer;IZ", "LOrgApacheLuceneStoreDirectory;LOrgApacheLuceneAnalysisAnalyzer;LOrgApacheLuceneAnalysisAnalyzer;IZZZ", "LOrgApacheLuceneUtilVersion;LOrgApacheLuceneStoreDirectory;LOrgApacheLuceneAnalysisAnalyzer;LOrgApacheLuceneAnalysisAnalyzer;IZ", (void *)&OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester__Annotations$1, "LOrgApacheLuceneUtilVersion;LOrgApacheLuceneStoreDirectory;LOrgApacheLuceneAnalysisAnalyzer;LOrgApacheLuceneAnalysisAnalyzer;IZZZ", (void *)&OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester__Annotations$2, "getIndexWriterConfig", "LOrgApacheLuceneAnalysisAnalyzer;LOrgApacheLuceneIndexIndexWriterConfig_OpenMode;", "getDirectory", "LOrgLukhnosPortmobileFilePath;", "build", "LOrgApacheLuceneSearchSuggestInputIterator;", "add", "LOrgApacheLuceneUtilBytesRef;LJavaUtilSet;JLOrgApacheLuceneUtilBytesRef;", "(Lorg/apache/lucene/util/BytesRef;Ljava/util/Set<Lorg/apache/lucene/util/BytesRef;>;JLorg/apache/lucene/util/BytesRef;)V", "update", "buildDocument", "(Lorg/apache/lucene/util/BytesRef;Ljava/util/Set<Lorg/apache/lucene/util/BytesRef;>;JLorg/apache/lucene/util/BytesRef;)Lorg/apache/lucene/document/Document;", "lookup", "LJavaLangCharSequence;LJavaUtilSet;ZI", "(Ljava/lang/CharSequence;Ljava/util/Set<Lorg/apache/lucene/util/BytesRef;>;ZI)Ljava/util/List<Lorg/apache/lucene/search/suggest/Lookup$LookupResult;>;", "LJavaLangCharSequence;IZZ", "(Ljava/lang/CharSequence;IZZ)Ljava/util/List<Lorg/apache/lucene/search/suggest/Lookup$LookupResult;>;", "LJavaLangCharSequence;LJavaUtilSet;IZZ", "(Ljava/lang/CharSequence;Ljava/util/Set<Lorg/apache/lucene/util/BytesRef;>;IZZ)Ljava/util/List<Lorg/apache/lucene/search/suggest/Lookup$LookupResult;>;", "getLastTokenQuery", "LNSString;", "LJavaLangCharSequence;LJavaUtilMap;IZZ", "(Ljava/lang/CharSequence;Ljava/util/Map<Lorg/apache/lucene/util/BytesRef;Lorg/apache/lucene/search/BooleanClause$Occur;>;IZZ)Ljava/util/List<Lorg/apache/lucene/search/suggest/Lookup$LookupResult;>;", "toQuery", "LJavaUtilMap;", "(Ljava/util/Map<Lorg/apache/lucene/util/BytesRef;Lorg/apache/lucene/search/BooleanClause$Occur;>;)Lorg/apache/lucene/search/BooleanQuery;", "LJavaUtilSet;", "(Ljava/util/Set<Lorg/apache/lucene/util/BytesRef;>;)Lorg/apache/lucene/search/BooleanQuery;", "addContextToQuery", "LOrgApacheLuceneSearchBooleanQuery_Builder;LOrgApacheLuceneUtilBytesRef;LOrgApacheLuceneSearchBooleanClause_Occur;", "LJavaLangCharSequence;LOrgApacheLuceneSearchBooleanQuery;IZZ", "(Ljava/lang/CharSequence;Lorg/apache/lucene/search/BooleanQuery;IZZ)Ljava/util/List<Lorg/apache/lucene/search/suggest/Lookup$LookupResult;>;", "createResults", "LOrgApacheLuceneSearchIndexSearcher;LOrgApacheLuceneSearchTopFieldDocs;ILJavaLangCharSequence;ZLJavaUtilSet;LNSString;", "(Lorg/apache/lucene/search/IndexSearcher;Lorg/apache/lucene/search/TopFieldDocs;ILjava/lang/CharSequence;ZLjava/util/Set<Ljava/lang/String;>;Ljava/lang/String;)Ljava/util/List<Lorg/apache/lucene/search/suggest/Lookup$LookupResult;>;", "finishQuery", "LOrgApacheLuceneSearchBooleanQuery_Builder;Z", "highlight", "LNSString;LJavaUtilSet;LNSString;", "(Ljava/lang/String;Ljava/util/Set<Ljava/lang/String;>;Ljava/lang/String;)Ljava/lang/Object;", "addNonMatch", "LJavaLangStringBuilder;LNSString;", "addWholeMatch", "LJavaLangStringBuilder;LNSString;LNSString;", "addPrefixMatch", "LJavaLangStringBuilder;LNSString;LNSString;LNSString;", "store", "LOrgApacheLuceneStoreDataOutput;", "load", "LOrgApacheLuceneStoreDataInput;", "()Ljava/util/Collection<Lorg/apache/lucene/util/Accountable;>;", &OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_TEXT_FIELD_NAME, &OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_EXACT_TEXT_FIELD_NAME, &OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_CONTEXTS_FIELD_NAME, &OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_SORT };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester = { "AnalyzingInfixSuggester", "org.apache.lucene.search.suggest.analyzing", ptrTable, methods, fields, 7, 0x1, 38, 17, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_SORT, new_OrgApacheLuceneSearchSort_initWithOrgApacheLuceneSearchSortField_(create_OrgApacheLuceneSearchSortField_initWithNSString_withOrgApacheLuceneSearchSortField_Type_withBoolean_(@"weight", JreLoadEnum(OrgApacheLuceneSearchSortField_Type, LONG), true)));
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester)
  }
}

@end

void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_withBoolean_withBoolean_(self, [((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(analyzer)) getVersion], dir, analyzer, analyzer, OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_DEFAULT_MIN_PREFIX_CHARS, false, OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_DEFAULT_ALL_TERMS_REQUIRED, OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_DEFAULT_HIGHLIGHT);
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *new_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester, initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_, dir, analyzer)
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *create_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester, initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_, dir, analyzer)
}

void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self, OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_(self, matchVersion, dir, analyzer, analyzer, OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_DEFAULT_MIN_PREFIX_CHARS, false);
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *new_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester, initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_, matchVersion, dir, analyzer)
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *create_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester, initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_, matchVersion, dir, analyzer)
}

void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint minPrefixChars, jboolean commitOnBuild) {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_withBoolean_withBoolean_(self, [((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(indexAnalyzer)) getVersion], dir, indexAnalyzer, queryAnalyzer, minPrefixChars, commitOnBuild, OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_DEFAULT_ALL_TERMS_REQUIRED, OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_DEFAULT_HIGHLIGHT);
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *new_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_(OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint minPrefixChars, jboolean commitOnBuild) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester, initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, commitOnBuild)
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *create_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_(OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint minPrefixChars, jboolean commitOnBuild) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester, initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, commitOnBuild)
}

void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint minPrefixChars, jboolean commitOnBuild, jboolean allTermsRequired, jboolean highlight) {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_withBoolean_withBoolean_(self, [((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(indexAnalyzer)) getVersion], dir, indexAnalyzer, queryAnalyzer, minPrefixChars, commitOnBuild, allTermsRequired, highlight);
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *new_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint minPrefixChars, jboolean commitOnBuild, jboolean allTermsRequired, jboolean highlight) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester, initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_withBoolean_withBoolean_, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, commitOnBuild, allTermsRequired, highlight)
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *create_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint minPrefixChars, jboolean commitOnBuild, jboolean allTermsRequired, jboolean highlight) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester, initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_withBoolean_withBoolean_, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, commitOnBuild, allTermsRequired, highlight)
}

void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self, OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint minPrefixChars, jboolean commitOnBuild) {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_withBoolean_withBoolean_(self, matchVersion, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, commitOnBuild, OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_DEFAULT_ALL_TERMS_REQUIRED, OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_DEFAULT_HIGHLIGHT);
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *new_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_(OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint minPrefixChars, jboolean commitOnBuild) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester, initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_, matchVersion, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, commitOnBuild)
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *create_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_(OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint minPrefixChars, jboolean commitOnBuild) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester, initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_, matchVersion, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, commitOnBuild)
}

void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self, OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint minPrefixChars, jboolean commitOnBuild, jboolean allTermsRequired, jboolean highlight) {
  OrgApacheLuceneSearchSuggestLookup_init(self);
  if (minPrefixChars < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"minPrefixChars must be >= 0; got: ", minPrefixChars));
  }
  JreStrongAssign(&self->queryAnalyzer_, queryAnalyzer);
  JreStrongAssign(&self->indexAnalyzer_, indexAnalyzer);
  JreStrongAssign(&self->matchVersion_, matchVersion);
  JreStrongAssign(&self->dir_, dir);
  self->minPrefixChars_ = minPrefixChars;
  self->commitOnBuild_ = commitOnBuild;
  self->allTermsRequired_ = allTermsRequired;
  self->highlight_ = highlight;
  if (OrgApacheLuceneIndexDirectoryReader_indexExistsWithOrgApacheLuceneStoreDirectory_(dir)) {
    JreStrongAssignAndConsume(&self->writer_, new_OrgApacheLuceneIndexIndexWriter_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexIndexWriterConfig_(dir, [self getIndexWriterConfigWithOrgApacheLuceneAnalysisAnalyzer:OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_getGramAnalyzer(self) withOrgApacheLuceneIndexIndexWriterConfig_OpenMode:JreLoadEnum(OrgApacheLuceneIndexIndexWriterConfig_OpenMode, APPEND)]));
    JreStrongAssignAndConsume(&self->searcherMgr_, new_OrgApacheLuceneSearchSearcherManager_initWithOrgApacheLuceneIndexIndexWriter_withBoolean_withOrgApacheLuceneSearchSearcherFactory_(self->writer_, true, nil));
  }
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *new_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint minPrefixChars, jboolean commitOnBuild, jboolean allTermsRequired, jboolean highlight) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester, initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_withBoolean_withBoolean_, matchVersion, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, commitOnBuild, allTermsRequired, highlight)
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *create_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint minPrefixChars, jboolean commitOnBuild, jboolean allTermsRequired, jboolean highlight) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester, initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_withBoolean_withBoolean_, matchVersion, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, commitOnBuild, allTermsRequired, highlight)
}

OrgApacheLuceneAnalysisAnalyzer *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_getGramAnalyzer(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self) {
  return create_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_1_initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(self, JreLoadStatic(OrgApacheLuceneAnalysisAnalyzer, PER_FIELD_REUSE_STRATEGY));
}

void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_ensureOpen(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self) {
  @synchronized(self) {
    if (self->writer_ == nil) {
      if (self->searcherMgr_ != nil) {
        [self->searcherMgr_ close];
        JreStrongAssign(&self->searcherMgr_, nil);
      }
      JreStrongAssignAndConsume(&self->writer_, new_OrgApacheLuceneIndexIndexWriter_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexIndexWriterConfig_(self->dir_, [self getIndexWriterConfigWithOrgApacheLuceneAnalysisAnalyzer:OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_getGramAnalyzer(self) withOrgApacheLuceneIndexIndexWriterConfig_OpenMode:JreLoadEnum(OrgApacheLuceneIndexIndexWriterConfig_OpenMode, CREATE)]));
      JreStrongAssignAndConsume(&self->searcherMgr_, new_OrgApacheLuceneSearchSearcherManager_initWithOrgApacheLuceneIndexIndexWriter_withBoolean_withOrgApacheLuceneSearchSearcherFactory_(self->writer_, true, nil));
    }
  }
}

OrgApacheLuceneDocumentDocument *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_buildDocumentWithOrgApacheLuceneUtilBytesRef_withJavaUtilSet_withLong_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self, OrgApacheLuceneUtilBytesRef *text, id<JavaUtilSet> contexts, jlong weight, OrgApacheLuceneUtilBytesRef *payload) {
  NSString *textString = JreRetainedLocalValue([((OrgApacheLuceneUtilBytesRef *) nil_chk(text)) utf8ToString]);
  OrgApacheLuceneDocumentDocument *doc = create_OrgApacheLuceneDocumentDocument_init();
  OrgApacheLuceneDocumentFieldType *ft = JreRetainedLocalValue([self getTextFieldType]);
  [doc addWithOrgApacheLuceneIndexIndexableField:create_OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentFieldType_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_TEXT_FIELD_NAME, textString, ft)];
  [doc addWithOrgApacheLuceneIndexIndexableField:create_OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentFieldType_(@"textgrams", textString, ft)];
  [doc addWithOrgApacheLuceneIndexIndexableField:create_OrgApacheLuceneDocumentStringField_initWithNSString_withNSString_withOrgApacheLuceneDocumentField_Store_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_EXACT_TEXT_FIELD_NAME, textString, JreLoadEnum(OrgApacheLuceneDocumentField_Store, NO))];
  [doc addWithOrgApacheLuceneIndexIndexableField:create_OrgApacheLuceneDocumentBinaryDocValuesField_initWithNSString_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_TEXT_FIELD_NAME, text)];
  [doc addWithOrgApacheLuceneIndexIndexableField:create_OrgApacheLuceneDocumentNumericDocValuesField_initWithNSString_withLong_(@"weight", weight)];
  if (payload != nil) {
    [doc addWithOrgApacheLuceneIndexIndexableField:create_OrgApacheLuceneDocumentBinaryDocValuesField_initWithNSString_withOrgApacheLuceneUtilBytesRef_(@"payloads", payload)];
  }
  if (contexts != nil) {
    for (OrgApacheLuceneUtilBytesRef * __strong context in contexts) {
      [doc addWithOrgApacheLuceneIndexIndexableField:create_OrgApacheLuceneDocumentStringField_initWithNSString_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneDocumentField_Store_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_CONTEXTS_FIELD_NAME, context, JreLoadEnum(OrgApacheLuceneDocumentField_Store, NO))];
      [doc addWithOrgApacheLuceneIndexIndexableField:create_OrgApacheLuceneDocumentSortedSetDocValuesField_initWithNSString_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_CONTEXTS_FIELD_NAME, context)];
    }
  }
  return doc;
}

OrgApacheLuceneSearchBooleanQuery *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_toQueryWithJavaUtilMap_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self, id<JavaUtilMap> contextInfo) {
  if (contextInfo == nil || [contextInfo isEmpty]) {
    return nil;
  }
  OrgApacheLuceneSearchBooleanQuery_Builder *contextFilter = create_OrgApacheLuceneSearchBooleanQuery_Builder_init();
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([contextInfo entrySet])) {
    [self addContextToQueryWithOrgApacheLuceneSearchBooleanQuery_Builder:contextFilter withOrgApacheLuceneUtilBytesRef:[((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey] withOrgApacheLuceneSearchBooleanClause_Occur:[entry_ getValue]];
  }
  return [contextFilter build];
}

OrgApacheLuceneSearchBooleanQuery *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_toQueryWithJavaUtilSet_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *self, id<JavaUtilSet> contextInfo) {
  if (contextInfo == nil || [contextInfo isEmpty]) {
    return nil;
  }
  OrgApacheLuceneSearchBooleanQuery_Builder *contextFilter = create_OrgApacheLuceneSearchBooleanQuery_Builder_init();
  for (OrgApacheLuceneUtilBytesRef * __strong context in contextInfo) {
    [self addContextToQueryWithOrgApacheLuceneSearchBooleanQuery_Builder:contextFilter withOrgApacheLuceneUtilBytesRef:context withOrgApacheLuceneSearchBooleanClause_Occur:JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, SHOULD)];
  }
  return [contextFilter build];
}

IOSObjectArray *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester)

@implementation OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_1

- (instancetype)initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester:(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *)outer$
                                   withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy:(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *)reuseStrategy {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_1_initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(self, outer$, reuseStrategy);
  return self;
}

- (OrgApacheLuceneAnalysisAnalyzer *)getWrappedAnalyzerWithNSString:(NSString *)fieldName {
  return JreRetainedLocalValue(this$0_->indexAnalyzer_);
}

- (OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)wrapComponentsWithNSString:(NSString *)fieldName
                            withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)components {
  if ([((NSString *) nil_chk(fieldName)) isEqual:@"textgrams"] && this$0_->minPrefixChars_ > 0) {
    OrgApacheLuceneAnalysisTokenFilter *filter;
    if ([((OrgApacheLuceneUtilVersion *) nil_chk(this$0_->matchVersion_)) onOrAfterWithOrgApacheLuceneUtilVersion:JreLoadStatic(OrgApacheLuceneUtilVersion, LUCENE_4_4_0)]) {
      filter = create_OrgApacheLuceneAnalysisNgramEdgeNGramTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_withInt_withInt_([((OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *) nil_chk(components)) getTokenStream], 1, this$0_->minPrefixChars_);
    }
    else {
      filter = create_OrgApacheLuceneAnalysisNgramLucene43EdgeNGramTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_withInt_withInt_([((OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *) nil_chk(components)) getTokenStream], 1, this$0_->minPrefixChars_);
    }
    return create_OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents_initWithOrgApacheLuceneAnalysisTokenizer_withOrgApacheLuceneAnalysisTokenStream_([components getTokenizer], filter);
  }
  else {
    return JreRetainedLocalValue(components);
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisAnalyzer;", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents;", 0x4, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester:withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy:);
  methods[1].selector = @selector(getWrappedAnalyzerWithNSString:);
  methods[2].selector = @selector(wrapComponentsWithNSString:withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester;LOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy;", "getWrappedAnalyzer", "LNSString;", "wrapComponents", "LNSString;LOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents;", "LOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester;", "getGramAnalyzer" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_1 = { "", "org.apache.lucene.search.suggest.analyzing", ptrTable, methods, fields, 7, 0x8010, 3, 1, 5, -1, 6, -1, -1 };
  return &_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_1;
}

@end

void OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_1_initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_1 *self, OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *outer$, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *reuseStrategy) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneAnalysisAnalyzerWrapper_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(self, reuseStrategy);
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_1 *new_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_1_initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *outer$, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *reuseStrategy) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_1, initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_, outer$, reuseStrategy)
}

OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_1 *create_OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_1_initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester *outer$, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *reuseStrategy) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_1, initWithOrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_, outer$, reuseStrategy)
}
