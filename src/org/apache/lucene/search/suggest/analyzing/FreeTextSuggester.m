//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./suggest/src/java/org/apache/lucene/search/suggest/analyzing/FreeTextSuggester.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Character.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Throwable.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"
#include "org/apache/lucene/analysis/Analyzer.h"
#include "org/apache/lucene/analysis/AnalyzerWrapper.h"
#include "org/apache/lucene/analysis/TokenStream.h"
#include "org/apache/lucene/analysis/Tokenizer.h"
#include "org/apache/lucene/analysis/shingle/ShingleFilter.h"
#include "org/apache/lucene/analysis/tokenattributes/OffsetAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/PositionLengthAttribute.h"
#include "org/apache/lucene/analysis/tokenattributes/TermToBytesRefAttribute.h"
#include "org/apache/lucene/codecs/CodecUtil.h"
#include "org/apache/lucene/document/Document.h"
#include "org/apache/lucene/document/Field.h"
#include "org/apache/lucene/document/FieldType.h"
#include "org/apache/lucene/document/TextField.h"
#include "org/apache/lucene/index/DirectoryReader.h"
#include "org/apache/lucene/index/IndexOptions.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/IndexWriter.h"
#include "org/apache/lucene/index/IndexWriterConfig.h"
#include "org/apache/lucene/index/MultiFields.h"
#include "org/apache/lucene/index/Terms.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/search/suggest/InputIterator.h"
#include "org/apache/lucene/search/suggest/Lookup.h"
#include "org/apache/lucene/search/suggest/analyzing/FreeTextSuggester.h"
#include "org/apache/lucene/store/ByteArrayDataInput.h"
#include "org/apache/lucene/store/DataInput.h"
#include "org/apache/lucene/store/DataOutput.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/store/FSDirectory.h"
#include "org/apache/lucene/util/Accountable.h"
#include "org/apache/lucene/util/Accountables.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"
#include "org/apache/lucene/util/CharsRefBuilder.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/IntsRef.h"
#include "org/apache/lucene/util/IntsRefBuilder.h"
#include "org/apache/lucene/util/fst/Builder.h"
#include "org/apache/lucene/util/fst/FST.h"
#include "org/apache/lucene/util/fst/Outputs.h"
#include "org/apache/lucene/util/fst/PositiveIntOutputs.h"
#include "org/apache/lucene/util/fst/Util.h"
#include "org/lukhnos/portmobile/file/Files.h"
#include "org/lukhnos/portmobile/file/Path.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/suggest/analyzing/FreeTextSuggester must not be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester () {
 @public
  /*!
   @brief Holds 1gram, 2gram, 3gram models as a single FST.
   */
  OrgApacheLuceneUtilFstFST *fst_;
  /*!
   @brief Analyzer that will be used for analyzing suggestions at
  index time.
   */
  OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer_;
  jlong totTokens_;
  /*!
   @brief Analyzer that will be used for analyzing suggestions at
  query time.
   */
  OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer_;
  jint grams_;
  jbyte separator_;
  /*!
   @brief Number of entries the lookup was built with
   */
  jlong count_;
}

- (OrgApacheLuceneAnalysisAnalyzer *)addShinglesWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)other;

- (jint)countGramsWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)token;

/*!
 @brief weight -&gt; cost
 */
- (jlong)encodeWeightWithLong:(jlong)ngramCount;

/*!
 @brief cost -&gt; weight
 */
- (jlong)decodeWeightWithJavaLangLong:(JavaLangLong *)output;

- (JavaLangLong *)lookupPrefixWithOrgApacheLuceneUtilFstFST:(OrgApacheLuceneUtilFstFST *)fst
                  withOrgApacheLuceneUtilFstFST_BytesReader:(OrgApacheLuceneUtilFstFST_BytesReader *)bytesReader
                            withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)scratch
                          withOrgApacheLuceneUtilFstFST_Arc:(OrgApacheLuceneUtilFstFST_Arc *)arc;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester, fst_, OrgApacheLuceneUtilFstFST *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester, indexAnalyzer_, OrgApacheLuceneAnalysisAnalyzer *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester, queryAnalyzer_, OrgApacheLuceneAnalysisAnalyzer *)

__attribute__((unused)) static OrgApacheLuceneAnalysisAnalyzer *OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_addShinglesWithOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *self, OrgApacheLuceneAnalysisAnalyzer *other);

__attribute__((unused)) static jint OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_countGramsWithOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *self, OrgApacheLuceneUtilBytesRef *token);

__attribute__((unused)) static jlong OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_encodeWeightWithLong_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *self, jlong ngramCount);

__attribute__((unused)) static jlong OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_decodeWeightWithJavaLangLong_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *self, JavaLangLong *output);

__attribute__((unused)) static JavaLangLong *OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_lookupPrefixWithOrgApacheLuceneUtilFstFST_withOrgApacheLuceneUtilFstFST_BytesReader_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilFstFST_Arc_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *self, OrgApacheLuceneUtilFstFST *fst, OrgApacheLuceneUtilFstFST_BytesReader *bytesReader, OrgApacheLuceneUtilBytesRef *scratch, OrgApacheLuceneUtilFstFST_Arc *arc);

@interface OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator : NSObject < JavaUtilComparator > {
 @public
  OrgApacheLuceneStoreByteArrayDataInput *readerA_;
  OrgApacheLuceneStoreByteArrayDataInput *readerB_;
  OrgApacheLuceneUtilBytesRef *scratchA_;
  OrgApacheLuceneUtilBytesRef *scratchB_;
}

- (instancetype)init;

- (jint)compareWithId:(OrgApacheLuceneUtilBytesRef *)a
               withId:(OrgApacheLuceneUtilBytesRef *)b;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator, readerA_, OrgApacheLuceneStoreByteArrayDataInput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator, readerB_, OrgApacheLuceneStoreByteArrayDataInput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator, scratchA_, OrgApacheLuceneUtilBytesRef *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator, scratchB_, OrgApacheLuceneUtilBytesRef *)

__attribute__((unused)) static void OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator_init(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator *self);

__attribute__((unused)) static OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator *new_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator *create_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator)

@interface OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_1 : OrgApacheLuceneAnalysisAnalyzerWrapper {
 @public
  OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *this$0_;
  OrgApacheLuceneAnalysisAnalyzer *val$other_;
}

- (instancetype)initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester:(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *)outer$
                                           withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)capture$0
                             withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy:(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *)reuseStrategy;

- (OrgApacheLuceneAnalysisAnalyzer *)getWrappedAnalyzerWithNSString:(NSString *)fieldName;

- (OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)wrapComponentsWithNSString:(NSString *)fieldName
                            withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)components;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_1)

__attribute__((unused)) static void OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_1_initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_1 *self, OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *outer$, OrgApacheLuceneAnalysisAnalyzer *capture$0, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *reuseStrategy);

__attribute__((unused)) static OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_1 *new_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_1_initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *outer$, OrgApacheLuceneAnalysisAnalyzer *capture$0, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *reuseStrategy) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_1 *create_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_1_initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *outer$, OrgApacheLuceneAnalysisAnalyzer *capture$0, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *reuseStrategy);

@interface OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_2 : OrgApacheLuceneUtilFstUtil_TopNSearcher {
 @public
  OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *this$0_;
  OrgApacheLuceneUtilBytesRefBuilder *val$finalLastToken_;
  id<JavaUtilSet> val$seen_;
  OrgApacheLuceneUtilBytesRefBuilder *scratchBytes_;
}

- (instancetype)initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester:(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *)outer$
                                        withOrgApacheLuceneUtilBytesRefBuilder:(OrgApacheLuceneUtilBytesRefBuilder *)capture$0
                                                               withJavaUtilSet:(id<JavaUtilSet>)capture$1
                                                 withOrgApacheLuceneUtilFstFST:(OrgApacheLuceneUtilFstFST *)fst
                                                                       withInt:(jint)topN
                                                                       withInt:(jint)maxQueueDepth
                                                        withJavaUtilComparator:(id<JavaUtilComparator>)comparator;

- (void)addIfCompetitiveWithOrgApacheLuceneUtilFstUtil_FSTPath:(OrgApacheLuceneUtilFstUtil_FSTPath *)path;

- (jboolean)acceptResultWithOrgApacheLuceneUtilIntsRef:(OrgApacheLuceneUtilIntsRef *)input
                                                withId:(JavaLangLong *)output;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_2)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_2, scratchBytes_, OrgApacheLuceneUtilBytesRefBuilder *)

__attribute__((unused)) static void OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_2_initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_withOrgApacheLuceneUtilBytesRefBuilder_withJavaUtilSet_withOrgApacheLuceneUtilFstFST_withInt_withInt_withJavaUtilComparator_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_2 *self, OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *outer$, OrgApacheLuceneUtilBytesRefBuilder *capture$0, id<JavaUtilSet> capture$1, OrgApacheLuceneUtilFstFST *fst, jint topN, jint maxQueueDepth, id<JavaUtilComparator> comparator);

__attribute__((unused)) static OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_2 *new_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_2_initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_withOrgApacheLuceneUtilBytesRefBuilder_withJavaUtilSet_withOrgApacheLuceneUtilFstFST_withInt_withInt_withJavaUtilComparator_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *outer$, OrgApacheLuceneUtilBytesRefBuilder *capture$0, id<JavaUtilSet> capture$1, OrgApacheLuceneUtilFstFST *fst, jint topN, jint maxQueueDepth, id<JavaUtilComparator> comparator) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_2 *create_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_2_initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_withOrgApacheLuceneUtilBytesRefBuilder_withJavaUtilSet_withOrgApacheLuceneUtilFstFST_withInt_withInt_withJavaUtilComparator_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *outer$, OrgApacheLuceneUtilBytesRefBuilder *capture$0, id<JavaUtilSet> capture$1, OrgApacheLuceneUtilFstFST *fst, jint topN, jint maxQueueDepth, id<JavaUtilComparator> comparator);

@interface OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_3 : NSObject < JavaUtilComparator >

- (instancetype)init;

- (jint)compareWithId:(OrgApacheLuceneSearchSuggestLookup_LookupResult *)a
               withId:(OrgApacheLuceneSearchSuggestLookup_LookupResult *)b;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_3)

__attribute__((unused)) static void OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_3_init(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_3 *self);

__attribute__((unused)) static OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_3 *new_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_3_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_3 *create_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_3_init(void);

@interface OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_4 : NSObject < JavaUtilComparator >

- (instancetype)init;

- (jint)compareWithId:(JavaLangLong *)left
               withId:(JavaLangLong *)right;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_4)

__attribute__((unused)) static void OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_4_init(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_4 *self);

__attribute__((unused)) static OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_4 *new_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_4_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_4 *create_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_4_init(void);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester)

NSString *OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_CODEC_NAME = @"freetextsuggest";
id<JavaUtilComparator> OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_weightComparator;

@implementation OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester

+ (NSString *)CODEC_NAME {
  return OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_CODEC_NAME;
}

+ (jint)VERSION_START {
  return OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_VERSION_START;
}

+ (jint)VERSION_CURRENT {
  return OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_VERSION_CURRENT;
}

+ (jint)DEFAULT_GRAMS {
  return OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_DEFAULT_GRAMS;
}

+ (jdouble)ALPHA {
  return OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_ALPHA;
}

+ (jbyte)DEFAULT_SEPARATOR {
  return OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_DEFAULT_SEPARATOR;
}

+ (id<JavaUtilComparator>)weightComparator {
  return OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_weightComparator;
}

- (instancetype)initWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer {
  OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_(self, analyzer);
  return self;
}

- (instancetype)initWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)indexAnalyzer
                    withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)queryAnalyzer {
  OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_(self, indexAnalyzer, queryAnalyzer);
  return self;
}

- (instancetype)initWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)indexAnalyzer
                    withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)queryAnalyzer
                                                withInt:(jint)grams {
  OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_(self, indexAnalyzer, queryAnalyzer, grams);
  return self;
}

- (instancetype)initWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)indexAnalyzer
                    withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)queryAnalyzer
                                                withInt:(jint)grams
                                               withByte:(jbyte)separator {
  OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withByte_(self, indexAnalyzer, queryAnalyzer, grams, separator);
  return self;
}

- (jlong)ramBytesUsed {
  if (fst_ == nil) {
    return 0;
  }
  return [fst_ ramBytesUsed];
}

- (id<JavaUtilCollection>)getChildResources {
  if (fst_ == nil) {
    return JavaUtilCollections_emptyList();
  }
  else {
    return JavaUtilCollections_singletonListWithId_(OrgApacheLuceneUtilAccountables_namedAccountableWithNSString_withOrgApacheLuceneUtilAccountable_(@"fst", fst_));
  }
}

- (OrgApacheLuceneAnalysisAnalyzer *)addShinglesWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)other {
  return OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_addShinglesWithOrgApacheLuceneAnalysisAnalyzer_(self, other);
}

- (void)buildWithOrgApacheLuceneSearchSuggestInputIterator:(id<OrgApacheLuceneSearchSuggestInputIterator>)iterator {
  [self buildWithOrgApacheLuceneSearchSuggestInputIterator:iterator withDouble:OrgApacheLuceneIndexIndexWriterConfig_DEFAULT_RAM_BUFFER_SIZE_MB];
}

- (void)buildWithOrgApacheLuceneSearchSuggestInputIterator:(id<OrgApacheLuceneSearchSuggestInputIterator>)iterator
                                                withDouble:(jdouble)ramBufferSizeMB {
  if ([((id<OrgApacheLuceneSearchSuggestInputIterator>) nil_chk(iterator)) hasPayloads]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"this suggester doesn't support payloads");
  }
  if ([iterator hasContexts]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"this suggester doesn't support contexts");
  }
  NSString *prefix = [[self java_getClass] getSimpleName];
  OrgLukhnosPortmobileFilePath *tempIndexPath = OrgLukhnosPortmobileFileFiles_createTempDirectoryWithNSString_(JreStrcat("$$", prefix, @".index."));
  OrgApacheLuceneStoreDirectory *dir = OrgApacheLuceneStoreFSDirectory_openWithOrgLukhnosPortmobileFilePath_(tempIndexPath);
  OrgApacheLuceneIndexIndexWriterConfig *iwc = create_OrgApacheLuceneIndexIndexWriterConfig_initWithOrgApacheLuceneAnalysisAnalyzer_(indexAnalyzer_);
  [iwc setOpenModeWithOrgApacheLuceneIndexIndexWriterConfig_OpenMode:JreLoadEnum(OrgApacheLuceneIndexIndexWriterConfig_OpenMode, CREATE)];
  [iwc setRAMBufferSizeMBWithDouble:ramBufferSizeMB];
  OrgApacheLuceneIndexIndexWriter *writer = create_OrgApacheLuceneIndexIndexWriter_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneIndexIndexWriterConfig_(dir, iwc);
  OrgApacheLuceneDocumentFieldType *ft = create_OrgApacheLuceneDocumentFieldType_initWithOrgApacheLuceneDocumentFieldType_(JreLoadStatic(OrgApacheLuceneDocumentTextField, TYPE_NOT_STORED));
  [ft setIndexOptionsWithOrgApacheLuceneIndexIndexOptions:JreLoadEnum(OrgApacheLuceneIndexIndexOptions, DOCS_AND_FREQS)];
  [ft setOmitNormsWithBoolean:true];
  [ft freeze];
  OrgApacheLuceneDocumentDocument *doc = create_OrgApacheLuceneDocumentDocument_init();
  OrgApacheLuceneDocumentField *field = create_OrgApacheLuceneDocumentField_initWithNSString_withNSString_withOrgApacheLuceneDocumentFieldType_(@"body", @"", ft);
  [doc addWithOrgApacheLuceneIndexIndexableField:field];
  totTokens_ = 0;
  OrgApacheLuceneIndexIndexReader *reader = nil;
  jboolean success = false;
  count_ = 0;
  @try {
    while (true) {
      OrgApacheLuceneUtilBytesRef *surfaceForm = JreRetainedLocalValue([iterator next]);
      if (surfaceForm == nil) {
        break;
      }
      [field setStringValueWithNSString:[surfaceForm utf8ToString]];
      [writer addDocumentWithJavaLangIterable:doc];
      count_++;
    }
    reader = OrgApacheLuceneIndexDirectoryReader_openWithOrgApacheLuceneIndexIndexWriter_withBoolean_(writer, false);
    OrgApacheLuceneIndexTerms *terms = OrgApacheLuceneIndexMultiFields_getTermsWithOrgApacheLuceneIndexIndexReader_withNSString_(reader, @"body");
    if (terms == nil) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"need at least one suggestion");
    }
    OrgApacheLuceneIndexTermsEnum *termsEnum = JreRetainedLocalValue([terms iterator]);
    OrgApacheLuceneUtilFstOutputs *outputs = OrgApacheLuceneUtilFstPositiveIntOutputs_getSingleton();
    OrgApacheLuceneUtilFstBuilder *builder = create_OrgApacheLuceneUtilFstBuilder_initWithOrgApacheLuceneUtilFstFST_INPUT_TYPE_withOrgApacheLuceneUtilFstOutputs_(JreLoadEnum(OrgApacheLuceneUtilFstFST_INPUT_TYPE, BYTE1), outputs);
    OrgApacheLuceneUtilIntsRefBuilder *scratchInts = create_OrgApacheLuceneUtilIntsRefBuilder_init();
    while (true) {
      OrgApacheLuceneUtilBytesRef *term = JreRetainedLocalValue([((OrgApacheLuceneIndexTermsEnum *) nil_chk(termsEnum)) next]);
      if (term == nil) {
        break;
      }
      jint ngramCount = OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_countGramsWithOrgApacheLuceneUtilBytesRef_(self, term);
      if (ngramCount > grams_) {
        @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$I$I", @"tokens must not contain separator byte; got token=", term, @" but gramCount=", ngramCount, @", which is greater than expected max ngram size=", grams_));
      }
      if (ngramCount == 1) {
        totTokens_ += [termsEnum totalTermFreq];
      }
      [builder addWithOrgApacheLuceneUtilIntsRef:OrgApacheLuceneUtilFstUtil_toIntsRefWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilIntsRefBuilder_(term, scratchInts) withId:JavaLangLong_valueOfWithLong_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_encodeWeightWithLong_(self, [termsEnum totalTermFreq]))];
    }
    JreStrongAssign(&fst_, [builder finish]);
    if (fst_ == nil) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"need at least one suggestion");
    }
    [writer rollback];
    success = true;
  }
  @finally {
    @try {
      if (success) {
        OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader, dir } count:2 type:JavaIoCloseable_class_()]);
      }
      else {
        OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader, writer, dir } count:3 type:JavaIoCloseable_class_()]);
      }
    }
    @finally {
      OrgApacheLuceneUtilIOUtils_rmWithOrgLukhnosPortmobileFilePathArray_([IOSObjectArray arrayWithObjects:(id[]){ tempIndexPath } count:1 type:OrgLukhnosPortmobileFilePath_class_()]);
    }
  }
}

- (jboolean)storeWithOrgApacheLuceneStoreDataOutput:(OrgApacheLuceneStoreDataOutput *)output {
  OrgApacheLuceneCodecsCodecUtil_writeHeaderWithOrgApacheLuceneStoreDataOutput_withNSString_withInt_(output, OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_CODEC_NAME, OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_VERSION_CURRENT);
  [((OrgApacheLuceneStoreDataOutput *) nil_chk(output)) writeVLongWithLong:count_];
  [output writeByteWithByte:separator_];
  [output writeVIntWithInt:grams_];
  [output writeVLongWithLong:totTokens_];
  [((OrgApacheLuceneUtilFstFST *) nil_chk(fst_)) saveWithOrgApacheLuceneStoreDataOutput:output];
  return true;
}

- (jboolean)load__WithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)input {
  OrgApacheLuceneCodecsCodecUtil_checkHeaderWithOrgApacheLuceneStoreDataInput_withNSString_withInt_withInt_(input, OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_CODEC_NAME, OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_VERSION_START, OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_VERSION_START);
  count_ = [((OrgApacheLuceneStoreDataInput *) nil_chk(input)) readVLong];
  jbyte separatorOrig = [input readByte];
  if (separatorOrig != separator_) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$B$B", @"separator=", separator_, @" is incorrect: original model was built with separator=", separatorOrig));
  }
  jint gramsOrig = [input readVInt];
  if (gramsOrig != grams_) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I$I", @"grams=", grams_, @" is incorrect: original model was built with grams=", gramsOrig));
  }
  totTokens_ = [input readVLong];
  JreStrongAssignAndConsume(&fst_, new_OrgApacheLuceneUtilFstFST_initWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilFstOutputs_(input, OrgApacheLuceneUtilFstPositiveIntOutputs_getSingleton()));
  return true;
}

- (id<JavaUtilList>)lookupWithJavaLangCharSequence:(id<JavaLangCharSequence>)key
                                       withBoolean:(jboolean)onlyMorePopular
                                           withInt:(jint)num {
  return [self lookupWithJavaLangCharSequence:key withJavaUtilSet:nil withBoolean:onlyMorePopular withInt:num];
}

- (id<JavaUtilList>)lookupWithJavaLangCharSequence:(id<JavaLangCharSequence>)key
                                           withInt:(jint)num {
  return [self lookupWithJavaLangCharSequence:key withJavaUtilSet:nil withBoolean:true withInt:num];
}

- (id<JavaUtilList>)lookupWithJavaLangCharSequence:(id<JavaLangCharSequence>)key
                                   withJavaUtilSet:(id<JavaUtilSet>)contexts
                                       withBoolean:(jboolean)onlyMorePopular
                                           withInt:(jint)num {
  @try {
    return [self lookupWithJavaLangCharSequence:key withJavaUtilSet:contexts withInt:num];
  }
  @catch (JavaIoIOException *ioe) {
    @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(ioe);
  }
}

- (jlong)getCount {
  return count_;
}

- (jint)countGramsWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)token {
  return OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_countGramsWithOrgApacheLuceneUtilBytesRef_(self, token);
}

- (id<JavaUtilList>)lookupWithJavaLangCharSequence:(id<JavaLangCharSequence>)key
                                   withJavaUtilSet:(id<JavaUtilSet>)contexts
                                           withInt:(jint)num {
  if (contexts != nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"this suggester doesn't support contexts");
  }
  if (fst_ == nil) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(@"Lookup not supported at this time");
  }
  {
    OrgApacheLuceneAnalysisTokenStream *ts = [((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(queryAnalyzer_)) tokenStreamWithNSString:@"" withNSString:[((id<JavaLangCharSequence>) nil_chk(key)) description]];
    JavaLangThrowable *__primaryException1 = nil;
    @try {
      id<OrgApacheLuceneAnalysisTokenattributesTermToBytesRefAttribute> termBytesAtt = JreRetainedLocalValue([((OrgApacheLuceneAnalysisTokenStream *) nil_chk(ts)) addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesTermToBytesRefAttribute_class_()]);
      id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute> offsetAtt = JreRetainedLocalValue([ts addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesOffsetAttribute_class_()]);
      id<OrgApacheLuceneAnalysisTokenattributesPositionLengthAttribute> posLenAtt = JreRetainedLocalValue([ts addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesPositionLengthAttribute_class_()]);
      id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute> posIncAtt = JreRetainedLocalValue([ts addAttributeWithIOSClass:OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute_class_()]);
      [ts reset];
      IOSObjectArray *lastTokens = [IOSObjectArray arrayWithLength:grams_ type:OrgApacheLuceneUtilBytesRefBuilder_class_()];
      jint maxEndOffset = -1;
      jboolean sawRealToken = false;
      while ([ts incrementToken]) {
        OrgApacheLuceneUtilBytesRef *tokenBytes = JreRetainedLocalValue([((id<OrgApacheLuceneAnalysisTokenattributesTermToBytesRefAttribute>) nil_chk(termBytesAtt)) getBytesRef]);
        sawRealToken |= (((OrgApacheLuceneUtilBytesRef *) nil_chk(tokenBytes))->length_ > 0);
        jint gramCount = [((id<OrgApacheLuceneAnalysisTokenattributesPositionLengthAttribute>) nil_chk(posLenAtt)) getPositionLength];
        JreAssert(gramCount <= grams_, @"org/apache/lucene/search/suggest/analyzing/FreeTextSuggester.java:498 condition failed: assert gramCount <= grams;");
        if (OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_countGramsWithOrgApacheLuceneUtilBytesRef_(self, tokenBytes) != gramCount) {
          @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$I$I", @"tokens must not contain separator byte; got token=", tokenBytes, @" but gramCount=", gramCount, @" does not match recalculated count=", OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_countGramsWithOrgApacheLuceneUtilBytesRef_(self, tokenBytes)));
        }
        maxEndOffset = JavaLangMath_maxWithInt_withInt_(maxEndOffset, [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(offsetAtt)) endOffset]);
        OrgApacheLuceneUtilBytesRefBuilder *b = create_OrgApacheLuceneUtilBytesRefBuilder_init();
        [b appendWithOrgApacheLuceneUtilBytesRef:tokenBytes];
        IOSObjectArray_Set(lastTokens, gramCount - 1, b);
      }
      [ts end];
      if (!sawRealToken) {
        @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"no tokens produced by analyzer, or the only tokens were empty strings");
      }
      jint endPosInc = [((id<OrgApacheLuceneAnalysisTokenattributesPositionIncrementAttribute>) nil_chk(posIncAtt)) getPositionIncrement];
      jboolean lastTokenEnded = [((id<OrgApacheLuceneAnalysisTokenattributesOffsetAttribute>) nil_chk(offsetAtt)) endOffset] > maxEndOffset || endPosInc > 0;
      if (lastTokenEnded) {
        for (jint i = grams_ - 1; i > 0; i--) {
          OrgApacheLuceneUtilBytesRefBuilder *token = IOSObjectArray_Get(lastTokens, i - 1);
          if (token == nil) {
            continue;
          }
          [token appendWithByte:separator_];
          IOSObjectArray_Set(lastTokens, i, token);
        }
        IOSObjectArray_SetAndConsume(lastTokens, 0, new_OrgApacheLuceneUtilBytesRefBuilder_init());
      }
      OrgApacheLuceneUtilFstFST_Arc *arc = create_OrgApacheLuceneUtilFstFST_Arc_init();
      OrgApacheLuceneUtilFstFST_BytesReader *bytesReader = JreRetainedLocalValue([((OrgApacheLuceneUtilFstFST *) nil_chk(fst_)) getBytesReader]);
      jdouble backoff = 1.0;
      id<JavaUtilList> results = create_JavaUtilArrayList_initWithInt_(num);
      id<JavaUtilSet> seen = create_JavaUtilHashSet_init();
      for (jint gram = grams_ - 1; gram >= 0; gram--) {
        OrgApacheLuceneUtilBytesRefBuilder *token = IOSObjectArray_Get(lastTokens, gram);
        if (token == nil || ([token length] == 0 && [key java_length] > 0)) {
          continue;
        }
        if (endPosInc > 0 && gram <= endPosInc) {
          break;
        }
        JavaLangLong *prefixOutput = nil;
        @try {
          prefixOutput = OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_lookupPrefixWithOrgApacheLuceneUtilFstFST_withOrgApacheLuceneUtilFstFST_BytesReader_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilFstFST_Arc_(self, fst_, bytesReader, [token get], arc);
        }
        @catch (JavaIoIOException *bogus) {
          @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(bogus);
        }
        if (prefixOutput == nil) {
          JreTimesAssignDoubleD(&backoff, OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_ALPHA);
          continue;
        }
        jlong contextCount = totTokens_;
        OrgApacheLuceneUtilBytesRef *lastTokenFragment = nil;
        for (jint i = [token length] - 1; i >= 0; i--) {
          if ([token byteAtWithInt:i] == separator_) {
            OrgApacheLuceneUtilBytesRef *context = create_OrgApacheLuceneUtilBytesRef_initWithByteArray_withInt_withInt_([token bytes], 0, i);
            JavaLangLong *output = OrgApacheLuceneUtilFstUtil_getWithOrgApacheLuceneUtilFstFST_withOrgApacheLuceneUtilIntsRef_(fst_, OrgApacheLuceneUtilFstUtil_toIntsRefWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilIntsRefBuilder_(context, create_OrgApacheLuceneUtilIntsRefBuilder_init()));
            JreAssert(output != nil, @"org/apache/lucene/search/suggest/analyzing/FreeTextSuggester.java:610 condition failed: assert output != null;");
            contextCount = OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_decodeWeightWithJavaLangLong_(self, output);
            lastTokenFragment = create_OrgApacheLuceneUtilBytesRef_initWithByteArray_withInt_withInt_([token bytes], i + 1, [token length] - i - 1);
            break;
          }
        }
        OrgApacheLuceneUtilBytesRefBuilder *finalLastToken = create_OrgApacheLuceneUtilBytesRefBuilder_init();
        if (lastTokenFragment == nil) {
          [finalLastToken copyBytesWithOrgApacheLuceneUtilBytesRef:[token get]];
        }
        else {
          [finalLastToken copyBytesWithOrgApacheLuceneUtilBytesRef:lastTokenFragment];
        }
        OrgApacheLuceneUtilCharsRefBuilder *spare = create_OrgApacheLuceneUtilCharsRefBuilder_init();
        OrgApacheLuceneUtilFstUtil_TopResults *completions = nil;
        @try {
          OrgApacheLuceneUtilFstUtil_TopNSearcher *searcher = create_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_2_initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_withOrgApacheLuceneUtilBytesRefBuilder_withJavaUtilSet_withOrgApacheLuceneUtilFstFST_withInt_withInt_withJavaUtilComparator_(self, finalLastToken, seen, fst_, num, num + [seen size], OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_weightComparator);
          [searcher addStartPathsWithOrgApacheLuceneUtilFstFST_Arc:arc withId:prefixOutput withBoolean:true withOrgApacheLuceneUtilIntsRefBuilder:create_OrgApacheLuceneUtilIntsRefBuilder_init()];
          completions = [searcher search];
          JreAssert(((OrgApacheLuceneUtilFstUtil_TopResults *) nil_chk(completions))->isComplete_, @"org/apache/lucene/search/suggest/analyzing/FreeTextSuggester.java:674 condition failed: assert completions.isComplete;");
        }
        @catch (JavaIoIOException *bogus) {
          @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(bogus);
        }
        jint prefixLength = [token length];
        OrgApacheLuceneUtilBytesRefBuilder *suffix = create_OrgApacheLuceneUtilBytesRefBuilder_init();
        for (OrgApacheLuceneUtilFstUtil_Result * __strong completion in nil_chk(completions)) {
          {
            [token setLengthWithInt:prefixLength];
            OrgApacheLuceneUtilFstUtil_toBytesRefWithOrgApacheLuceneUtilIntsRef_withOrgApacheLuceneUtilBytesRefBuilder_(((OrgApacheLuceneUtilFstUtil_Result *) nil_chk(completion))->input_, suffix);
            [token appendWithOrgApacheLuceneUtilBytesRefBuilder:suffix];
            OrgApacheLuceneUtilBytesRef *lastToken = JreRetainedLocalValue([token get]);
            for (jint i = [token length] - 1; i >= 0; i--) {
              if ([token byteAtWithInt:i] == separator_) {
                JreAssert([token length] - i - 1 > 0, @"org/apache/lucene/search/suggest/analyzing/FreeTextSuggester.java:698 condition failed: assert token.length()-i-1 > 0;");
                lastToken = create_OrgApacheLuceneUtilBytesRef_initWithByteArray_withInt_withInt_([token bytes], i + 1, [token length] - i - 1);
                break;
              }
            }
            if ([seen containsWithId:lastToken]) {
              goto continue_nextCompletion;
            }
            [seen addWithId:OrgApacheLuceneUtilBytesRef_deepCopyOfWithOrgApacheLuceneUtilBytesRef_(lastToken)];
            [spare copyUTF8BytesWithOrgApacheLuceneUtilBytesRef:[token get]];
            OrgApacheLuceneSearchSuggestLookup_LookupResult *result = create_OrgApacheLuceneSearchSuggestLookup_LookupResult_initWithJavaLangCharSequence_withLong_([spare description], JreFpToLong((JavaLangLong_MAX_VALUE * backoff * ((jdouble) OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_decodeWeightWithJavaLangLong_(self, completion->output_)) / contextCount)));
            [results addWithId:result];
            JreAssert([results size] == [seen size], @"org/apache/lucene/search/suggest/analyzing/FreeTextSuggester.java:711 condition failed: assert results.size() == seen.size();");
          }
          continue_nextCompletion: ;
        }
        JreTimesAssignDoubleD(&backoff, OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_ALPHA);
      }
      JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(results, create_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_3_init());
      if ([results size] > num) {
        [((id<JavaUtilList>) nil_chk([results subListWithInt:num withInt:[results size]])) clear];
      }
      return results;
    }
    @catch (JavaLangThrowable *e) {
      __primaryException1 = e;
      @throw e;
    }
    @finally {
      if (ts != nil) {
        if (__primaryException1 != nil) {
          @try {
            [ts close];
          }
          @catch (JavaLangThrowable *e) {
            [__primaryException1 addSuppressedWithJavaLangThrowable:e];
          }
        }
        else {
          [ts close];
        }
      }
    }
  }
}

- (jlong)encodeWeightWithLong:(jlong)ngramCount {
  return OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_encodeWeightWithLong_(self, ngramCount);
}

- (jlong)decodeWeightWithJavaLangLong:(JavaLangLong *)output {
  return OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_decodeWeightWithJavaLangLong_(self, output);
}

- (JavaLangLong *)lookupPrefixWithOrgApacheLuceneUtilFstFST:(OrgApacheLuceneUtilFstFST *)fst
                  withOrgApacheLuceneUtilFstFST_BytesReader:(OrgApacheLuceneUtilFstFST_BytesReader *)bytesReader
                            withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)scratch
                          withOrgApacheLuceneUtilFstFST_Arc:(OrgApacheLuceneUtilFstFST_Arc *)arc {
  return OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_lookupPrefixWithOrgApacheLuceneUtilFstFST_withOrgApacheLuceneUtilFstFST_BytesReader_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilFstFST_Arc_(self, fst, bytesReader, scratch, arc);
}

- (id)getWithJavaLangCharSequence:(id<JavaLangCharSequence>)key {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (void)dealloc {
  RELEASE_(fst_);
  RELEASE_(indexAnalyzer_);
  RELEASE_(queryAnalyzer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, 4, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisAnalyzer;", 0x2, 5, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, 8, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 9, 8, -1, -1, -1 },
    { NULL, "Z", 0x1, 10, 11, 8, -1, -1, -1 },
    { NULL, "Z", 0x1, 12, 13, 8, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 14, 15, -1, 16, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 14, 17, -1, 18, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 14, 19, -1, 20, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 21, 22, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 14, 23, 8, 24, -1, -1 },
    { NULL, "J", 0x2, 25, 26, -1, -1, -1, -1 },
    { NULL, "J", 0x2, 27, 28, -1, -1, -1, -1 },
    { NULL, "LJavaLangLong;", 0x2, 29, 30, 8, 31, -1, -1 },
    { NULL, "LNSObject;", 0x1, 32, 33, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneAnalysisAnalyzer:);
  methods[1].selector = @selector(initWithOrgApacheLuceneAnalysisAnalyzer:withOrgApacheLuceneAnalysisAnalyzer:);
  methods[2].selector = @selector(initWithOrgApacheLuceneAnalysisAnalyzer:withOrgApacheLuceneAnalysisAnalyzer:withInt:);
  methods[3].selector = @selector(initWithOrgApacheLuceneAnalysisAnalyzer:withOrgApacheLuceneAnalysisAnalyzer:withInt:withByte:);
  methods[4].selector = @selector(ramBytesUsed);
  methods[5].selector = @selector(getChildResources);
  methods[6].selector = @selector(addShinglesWithOrgApacheLuceneAnalysisAnalyzer:);
  methods[7].selector = @selector(buildWithOrgApacheLuceneSearchSuggestInputIterator:);
  methods[8].selector = @selector(buildWithOrgApacheLuceneSearchSuggestInputIterator:withDouble:);
  methods[9].selector = @selector(storeWithOrgApacheLuceneStoreDataOutput:);
  methods[10].selector = @selector(load__WithOrgApacheLuceneStoreDataInput:);
  methods[11].selector = @selector(lookupWithJavaLangCharSequence:withBoolean:withInt:);
  methods[12].selector = @selector(lookupWithJavaLangCharSequence:withInt:);
  methods[13].selector = @selector(lookupWithJavaLangCharSequence:withJavaUtilSet:withBoolean:withInt:);
  methods[14].selector = @selector(getCount);
  methods[15].selector = @selector(countGramsWithOrgApacheLuceneUtilBytesRef:);
  methods[16].selector = @selector(lookupWithJavaLangCharSequence:withJavaUtilSet:withInt:);
  methods[17].selector = @selector(encodeWeightWithLong:);
  methods[18].selector = @selector(decodeWeightWithJavaLangLong:);
  methods[19].selector = @selector(lookupPrefixWithOrgApacheLuceneUtilFstFST:withOrgApacheLuceneUtilFstFST_BytesReader:withOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneUtilFstFST_Arc:);
  methods[20].selector = @selector(getWithJavaLangCharSequence:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "CODEC_NAME", "LNSString;", .constantValue.asLong = 0, 0x19, -1, 34, -1, -1 },
    { "VERSION_START", "I", .constantValue.asInt = OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_VERSION_START, 0x19, -1, -1, -1, -1 },
    { "VERSION_CURRENT", "I", .constantValue.asInt = OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_VERSION_CURRENT, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_GRAMS", "I", .constantValue.asInt = OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_DEFAULT_GRAMS, 0x19, -1, -1, -1, -1 },
    { "ALPHA", "D", .constantValue.asDouble = OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_ALPHA, 0x19, -1, -1, -1, -1 },
    { "fst_", "LOrgApacheLuceneUtilFstFST;", .constantValue.asLong = 0, 0x2, -1, -1, 35, -1 },
    { "indexAnalyzer_", "LOrgApacheLuceneAnalysisAnalyzer;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "totTokens_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "queryAnalyzer_", "LOrgApacheLuceneAnalysisAnalyzer;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "grams_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "separator_", "B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "count_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "DEFAULT_SEPARATOR", "B", .constantValue.asChar = OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_DEFAULT_SEPARATOR, 0x19, -1, -1, -1, -1 },
    { "weightComparator", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x18, -1, 36, 37, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneAnalysisAnalyzer;", "LOrgApacheLuceneAnalysisAnalyzer;LOrgApacheLuceneAnalysisAnalyzer;", "LOrgApacheLuceneAnalysisAnalyzer;LOrgApacheLuceneAnalysisAnalyzer;I", "LOrgApacheLuceneAnalysisAnalyzer;LOrgApacheLuceneAnalysisAnalyzer;IB", "()Ljava/util/Collection<Lorg/apache/lucene/util/Accountable;>;", "addShingles", "build", "LOrgApacheLuceneSearchSuggestInputIterator;", "LJavaIoIOException;", "LOrgApacheLuceneSearchSuggestInputIterator;D", "store", "LOrgApacheLuceneStoreDataOutput;", "load", "LOrgApacheLuceneStoreDataInput;", "lookup", "LJavaLangCharSequence;ZI", "(Ljava/lang/CharSequence;ZI)Ljava/util/List<Lorg/apache/lucene/search/suggest/Lookup$LookupResult;>;", "LJavaLangCharSequence;I", "(Ljava/lang/CharSequence;I)Ljava/util/List<Lorg/apache/lucene/search/suggest/Lookup$LookupResult;>;", "LJavaLangCharSequence;LJavaUtilSet;ZI", "(Ljava/lang/CharSequence;Ljava/util/Set<Lorg/apache/lucene/util/BytesRef;>;ZI)Ljava/util/List<Lorg/apache/lucene/search/suggest/Lookup$LookupResult;>;", "countGrams", "LOrgApacheLuceneUtilBytesRef;", "LJavaLangCharSequence;LJavaUtilSet;I", "(Ljava/lang/CharSequence;Ljava/util/Set<Lorg/apache/lucene/util/BytesRef;>;I)Ljava/util/List<Lorg/apache/lucene/search/suggest/Lookup$LookupResult;>;", "encodeWeight", "J", "decodeWeight", "LJavaLangLong;", "lookupPrefix", "LOrgApacheLuceneUtilFstFST;LOrgApacheLuceneUtilFstFST_BytesReader;LOrgApacheLuceneUtilBytesRef;LOrgApacheLuceneUtilFstFST_Arc;", "(Lorg/apache/lucene/util/fst/FST<Ljava/lang/Long;>;Lorg/apache/lucene/util/fst/FST$BytesReader;Lorg/apache/lucene/util/BytesRef;Lorg/apache/lucene/util/fst/FST$Arc<Ljava/lang/Long;>;)Ljava/lang/Long;", "get", "LJavaLangCharSequence;", &OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_CODEC_NAME, "Lorg/apache/lucene/util/fst/FST<Ljava/lang/Long;>;", &OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_weightComparator, "Ljava/util/Comparator<Ljava/lang/Long;>;", "LOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester = { "FreeTextSuggester", "org.apache.lucene.search.suggest.analyzing", ptrTable, methods, fields, 7, 0x1, 21, 14, -1, 38, -1, -1, -1 };
  return &_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_weightComparator, new_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_4_init());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester)
  }
}

@end

void OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *self, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_(self, analyzer, analyzer, OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_DEFAULT_GRAMS);
}

OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *new_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester, initWithOrgApacheLuceneAnalysisAnalyzer_, analyzer)
}

OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *create_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester, initWithOrgApacheLuceneAnalysisAnalyzer_, analyzer)
}

void OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *self, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer) {
  OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_(self, indexAnalyzer, queryAnalyzer, OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_DEFAULT_GRAMS);
}

OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *new_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester, initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_, indexAnalyzer, queryAnalyzer)
}

OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *create_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester, initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_, indexAnalyzer, queryAnalyzer)
}

void OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *self, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint grams) {
  OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withByte_(self, indexAnalyzer, queryAnalyzer, grams, OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_DEFAULT_SEPARATOR);
}

OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *new_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_(OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint grams) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester, initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_, indexAnalyzer, queryAnalyzer, grams)
}

OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *create_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_(OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint grams) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester, initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_, indexAnalyzer, queryAnalyzer, grams)
}

void OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withByte_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *self, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint grams, jbyte separator) {
  OrgApacheLuceneSearchSuggestLookup_init(self);
  self->count_ = 0;
  self->grams_ = grams;
  JreStrongAssign(&self->indexAnalyzer_, OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_addShinglesWithOrgApacheLuceneAnalysisAnalyzer_(self, indexAnalyzer));
  JreStrongAssign(&self->queryAnalyzer_, OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_addShinglesWithOrgApacheLuceneAnalysisAnalyzer_(self, queryAnalyzer));
  if (grams < 1) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"grams must be >= 1");
  }
  if ((separator & (jint) 0x80) != 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"separator must be simple ascii character");
  }
  self->separator_ = separator;
}

OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *new_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withByte_(OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint grams, jbyte separator) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester, initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withByte_, indexAnalyzer, queryAnalyzer, grams, separator)
}

OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *create_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withByte_(OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint grams, jbyte separator) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester, initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withByte_, indexAnalyzer, queryAnalyzer, grams, separator)
}

OrgApacheLuceneAnalysisAnalyzer *OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_addShinglesWithOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *self, OrgApacheLuceneAnalysisAnalyzer *other) {
  if (self->grams_ == 1) {
    return other;
  }
  else {
    return create_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_1_initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(self, other, [((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(other)) getReuseStrategy]);
  }
}

jint OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_countGramsWithOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *self, OrgApacheLuceneUtilBytesRef *token) {
  jint count = 1;
  for (jint i = 0; i < ((OrgApacheLuceneUtilBytesRef *) nil_chk(token))->length_; i++) {
    if (IOSByteArray_Get(nil_chk(token->bytes_), token->offset_ + i) == self->separator_) {
      count++;
    }
  }
  return count;
}

jlong OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_encodeWeightWithLong_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *self, jlong ngramCount) {
  return JavaLangLong_MAX_VALUE - ngramCount;
}

jlong OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_decodeWeightWithJavaLangLong_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *self, JavaLangLong *output) {
  JreAssert(output != nil, @"org/apache/lucene/search/suggest/analyzing/FreeTextSuggester.java:747 condition failed: assert output != null;");
  return (jint) (JavaLangLong_MAX_VALUE - [((JavaLangLong *) nil_chk(output)) longLongValue]);
}

JavaLangLong *OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_lookupPrefixWithOrgApacheLuceneUtilFstFST_withOrgApacheLuceneUtilFstFST_BytesReader_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilFstFST_Arc_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *self, OrgApacheLuceneUtilFstFST *fst, OrgApacheLuceneUtilFstFST_BytesReader *bytesReader, OrgApacheLuceneUtilBytesRef *scratch, OrgApacheLuceneUtilFstFST_Arc *arc) {
  JavaLangLong *output = JreRetainedLocalValue([((OrgApacheLuceneUtilFstOutputs *) nil_chk(((OrgApacheLuceneUtilFstFST *) nil_chk(fst))->outputs_)) getNoOutput]);
  [fst getFirstArcWithOrgApacheLuceneUtilFstFST_Arc:arc];
  IOSByteArray *bytes = ((OrgApacheLuceneUtilBytesRef *) nil_chk(scratch))->bytes_;
  jint pos = scratch->offset_;
  jint end = pos + scratch->length_;
  while (pos < end) {
    if ([fst findTargetArcWithInt:IOSByteArray_Get(nil_chk(bytes), pos++) & (jint) 0xff withOrgApacheLuceneUtilFstFST_Arc:arc withOrgApacheLuceneUtilFstFST_Arc:arc withOrgApacheLuceneUtilFstFST_BytesReader:bytesReader] == nil) {
      return nil;
    }
    else {
      output = [fst->outputs_ addWithId:output withId:((OrgApacheLuceneUtilFstFST_Arc *) nil_chk(arc))->output_];
    }
  }
  return output;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester)

@implementation OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)compareWithId:(OrgApacheLuceneUtilBytesRef *)a
               withId:(OrgApacheLuceneUtilBytesRef *)b {
  [((OrgApacheLuceneStoreByteArrayDataInput *) nil_chk(readerA_)) resetWithByteArray:((OrgApacheLuceneUtilBytesRef *) nil_chk(a))->bytes_ withInt:a->offset_ withInt:a->length_];
  [((OrgApacheLuceneStoreByteArrayDataInput *) nil_chk(readerB_)) resetWithByteArray:((OrgApacheLuceneUtilBytesRef *) nil_chk(b))->bytes_ withInt:b->offset_ withInt:b->length_];
  ((OrgApacheLuceneUtilBytesRef *) nil_chk(scratchA_))->length_ = [readerA_ readShort];
  JreStrongAssign(&scratchA_->bytes_, a->bytes_);
  scratchA_->offset_ = [readerA_ getPosition];
  JreStrongAssign(&((OrgApacheLuceneUtilBytesRef *) nil_chk(scratchB_))->bytes_, b->bytes_);
  scratchB_->length_ = [readerB_ readShort];
  scratchB_->offset_ = [readerB_ getPosition];
  jint cmp = [scratchA_ compareToWithId:scratchB_];
  if (cmp != 0) {
    return cmp;
  }
  [readerA_ skipBytesWithLong:scratchA_->length_];
  [readerB_ skipBytesWithLong:scratchB_->length_];
  cmp = a->length_ - b->length_;
  if (cmp != 0) {
    return cmp;
  }
  scratchA_->offset_ = [readerA_ getPosition];
  scratchA_->length_ = a->length_ - scratchA_->offset_;
  scratchB_->offset_ = [readerB_ getPosition];
  scratchB_->length_ = b->length_ - scratchB_->offset_;
  return [scratchA_ compareToWithId:scratchB_];
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (void)dealloc {
  RELEASE_(readerA_);
  RELEASE_(readerB_);
  RELEASE_(scratchA_);
  RELEASE_(scratchB_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "readerA_", "LOrgApacheLuceneStoreByteArrayDataInput;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "readerB_", "LOrgApacheLuceneStoreByteArrayDataInput;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "scratchA_", "LOrgApacheLuceneUtilBytesRef;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "scratchB_", "LOrgApacheLuceneUtilBytesRef;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "compare", "LOrgApacheLuceneUtilBytesRef;LOrgApacheLuceneUtilBytesRef;", "LOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester;", "Ljava/lang/Object;Ljava/util/Comparator<Lorg/apache/lucene/util/BytesRef;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator = { "AnalyzingComparator", "org.apache.lucene.search.suggest.analyzing", ptrTable, methods, fields, 7, 0xa, 2, 4, 2, -1, -1, 3, -1 };
  return &_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator;
}

@end

void OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator_init(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->readerA_, new_OrgApacheLuceneStoreByteArrayDataInput_init());
  JreStrongAssignAndConsume(&self->readerB_, new_OrgApacheLuceneStoreByteArrayDataInput_init());
  JreStrongAssignAndConsume(&self->scratchA_, new_OrgApacheLuceneUtilBytesRef_init());
  JreStrongAssignAndConsume(&self->scratchB_, new_OrgApacheLuceneUtilBytesRef_init());
}

OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator *new_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator, init)
}

OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator *create_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_AnalyzingComparator)

@implementation OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_1

- (instancetype)initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester:(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *)outer$
                                           withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)capture$0
                             withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy:(OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *)reuseStrategy {
  OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_1_initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(self, outer$, capture$0, reuseStrategy);
  return self;
}

- (OrgApacheLuceneAnalysisAnalyzer *)getWrappedAnalyzerWithNSString:(NSString *)fieldName {
  return JreRetainedLocalValue(val$other_);
}

- (OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)wrapComponentsWithNSString:(NSString *)fieldName
                            withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:(OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *)components {
  OrgApacheLuceneAnalysisShingleShingleFilter *shingles = create_OrgApacheLuceneAnalysisShingleShingleFilter_initWithOrgApacheLuceneAnalysisTokenStream_withInt_withInt_([((OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents *) nil_chk(components)) getTokenStream], 2, this$0_->grams_);
  [shingles setTokenSeparatorWithNSString:JavaLangCharacter_toStringWithChar_((jchar) this$0_->separator_)];
  return create_OrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents_initWithOrgApacheLuceneAnalysisTokenizer_withOrgApacheLuceneAnalysisTokenStream_([components getTokenizer], shingles);
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$other_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisAnalyzer;", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents;", 0x4, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester:withOrgApacheLuceneAnalysisAnalyzer:withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy:);
  methods[1].selector = @selector(getWrappedAnalyzerWithNSString:);
  methods[2].selector = @selector(wrapComponentsWithNSString:withOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$other_", "LOrgApacheLuceneAnalysisAnalyzer;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester;LOrgApacheLuceneAnalysisAnalyzer;LOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy;", "getWrappedAnalyzer", "LNSString;", "wrapComponents", "LNSString;LOrgApacheLuceneAnalysisAnalyzer_TokenStreamComponents;", "LOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester;", "addShinglesWithOrgApacheLuceneAnalysisAnalyzer:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_1 = { "", "org.apache.lucene.search.suggest.analyzing", ptrTable, methods, fields, 7, 0x8010, 3, 2, 5, -1, 6, -1, -1 };
  return &_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_1;
}

@end

void OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_1_initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_1 *self, OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *outer$, OrgApacheLuceneAnalysisAnalyzer *capture$0, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *reuseStrategy) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$other_, capture$0);
  OrgApacheLuceneAnalysisAnalyzerWrapper_initWithOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(self, reuseStrategy);
}

OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_1 *new_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_1_initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *outer$, OrgApacheLuceneAnalysisAnalyzer *capture$0, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *reuseStrategy) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_1, initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_, outer$, capture$0, reuseStrategy)
}

OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_1 *create_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_1_initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *outer$, OrgApacheLuceneAnalysisAnalyzer *capture$0, OrgApacheLuceneAnalysisAnalyzer_ReuseStrategy *reuseStrategy) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_1, initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_ReuseStrategy_, outer$, capture$0, reuseStrategy)
}

@implementation OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_2

- (instancetype)initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester:(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *)outer$
                                        withOrgApacheLuceneUtilBytesRefBuilder:(OrgApacheLuceneUtilBytesRefBuilder *)capture$0
                                                               withJavaUtilSet:(id<JavaUtilSet>)capture$1
                                                 withOrgApacheLuceneUtilFstFST:(OrgApacheLuceneUtilFstFST *)fst
                                                                       withInt:(jint)topN
                                                                       withInt:(jint)maxQueueDepth
                                                        withJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_2_initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_withOrgApacheLuceneUtilBytesRefBuilder_withJavaUtilSet_withOrgApacheLuceneUtilFstFST_withInt_withInt_withJavaUtilComparator_(self, outer$, capture$0, capture$1, fst, topN, maxQueueDepth, comparator);
  return self;
}

- (void)addIfCompetitiveWithOrgApacheLuceneUtilFstUtil_FSTPath:(OrgApacheLuceneUtilFstUtil_FSTPath *)path {
  if (((OrgApacheLuceneUtilFstFST_Arc *) nil_chk(((OrgApacheLuceneUtilFstUtil_FSTPath *) nil_chk(path))->arc_))->label_ != this$0_->separator_) {
    [super addIfCompetitiveWithOrgApacheLuceneUtilFstUtil_FSTPath:path];
  }
  else {
  }
}

- (jboolean)acceptResultWithOrgApacheLuceneUtilIntsRef:(OrgApacheLuceneUtilIntsRef *)input
                                                withId:(JavaLangLong *)output {
  OrgApacheLuceneUtilFstUtil_toBytesRefWithOrgApacheLuceneUtilIntsRef_withOrgApacheLuceneUtilBytesRefBuilder_(input, scratchBytes_);
  [((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(val$finalLastToken_)) growWithInt:[val$finalLastToken_ length] + [((OrgApacheLuceneUtilBytesRefBuilder *) nil_chk(scratchBytes_)) length]];
  jint lenSav = [val$finalLastToken_ length];
  [val$finalLastToken_ appendWithOrgApacheLuceneUtilBytesRefBuilder:scratchBytes_];
  jboolean ret = [((id<JavaUtilSet>) nil_chk(val$seen_)) containsWithId:[val$finalLastToken_ get]] == false;
  [val$finalLastToken_ setLengthWithInt:lenSav];
  return ret;
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$finalLastToken_);
  RELEASE_(val$seen_);
  RELEASE_(scratchBytes_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, -1, 4, -1, -1 },
    { NULL, "Z", 0x4, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester:withOrgApacheLuceneUtilBytesRefBuilder:withJavaUtilSet:withOrgApacheLuceneUtilFstFST:withInt:withInt:withJavaUtilComparator:);
  methods[1].selector = @selector(addIfCompetitiveWithOrgApacheLuceneUtilFstUtil_FSTPath:);
  methods[2].selector = @selector(acceptResultWithOrgApacheLuceneUtilIntsRef:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$finalLastToken_", "LOrgApacheLuceneUtilBytesRefBuilder;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$seen_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1012, -1, -1, 7, -1 },
    { "scratchBytes_", "LOrgApacheLuceneUtilBytesRefBuilder;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester;LOrgApacheLuceneUtilBytesRefBuilder;LJavaUtilSet;LOrgApacheLuceneUtilFstFST;IILJavaUtilComparator;", "(Lorg/apache/lucene/util/fst/FST<Ljava/lang/Long;>;IILjava/util/Comparator<Ljava/lang/Long;>;)V", "addIfCompetitive", "LOrgApacheLuceneUtilFstUtil_FSTPath;", "(Lorg/apache/lucene/util/fst/Util$FSTPath<Ljava/lang/Long;>;)V", "acceptResult", "LOrgApacheLuceneUtilIntsRef;LJavaLangLong;", "Ljava/util/Set<Lorg/apache/lucene/util/BytesRef;>;", "LOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester;", "lookupWithJavaLangCharSequence:withJavaUtilSet:withInt:", "Lorg/apache/lucene/util/fst/Util$TopNSearcher<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_2 = { "", "org.apache.lucene.search.suggest.analyzing", ptrTable, methods, fields, 7, 0x8010, 3, 4, 8, -1, 9, 10, -1 };
  return &_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_2;
}

@end

void OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_2_initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_withOrgApacheLuceneUtilBytesRefBuilder_withJavaUtilSet_withOrgApacheLuceneUtilFstFST_withInt_withInt_withJavaUtilComparator_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_2 *self, OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *outer$, OrgApacheLuceneUtilBytesRefBuilder *capture$0, id<JavaUtilSet> capture$1, OrgApacheLuceneUtilFstFST *fst, jint topN, jint maxQueueDepth, id<JavaUtilComparator> comparator) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$finalLastToken_, capture$0);
  JreStrongAssign(&self->val$seen_, capture$1);
  OrgApacheLuceneUtilFstUtil_TopNSearcher_initWithOrgApacheLuceneUtilFstFST_withInt_withInt_withJavaUtilComparator_(self, fst, topN, maxQueueDepth, comparator);
  JreStrongAssignAndConsume(&self->scratchBytes_, new_OrgApacheLuceneUtilBytesRefBuilder_init());
}

OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_2 *new_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_2_initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_withOrgApacheLuceneUtilBytesRefBuilder_withJavaUtilSet_withOrgApacheLuceneUtilFstFST_withInt_withInt_withJavaUtilComparator_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *outer$, OrgApacheLuceneUtilBytesRefBuilder *capture$0, id<JavaUtilSet> capture$1, OrgApacheLuceneUtilFstFST *fst, jint topN, jint maxQueueDepth, id<JavaUtilComparator> comparator) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_2, initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_withOrgApacheLuceneUtilBytesRefBuilder_withJavaUtilSet_withOrgApacheLuceneUtilFstFST_withInt_withInt_withJavaUtilComparator_, outer$, capture$0, capture$1, fst, topN, maxQueueDepth, comparator)
}

OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_2 *create_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_2_initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_withOrgApacheLuceneUtilBytesRefBuilder_withJavaUtilSet_withOrgApacheLuceneUtilFstFST_withInt_withInt_withJavaUtilComparator_(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester *outer$, OrgApacheLuceneUtilBytesRefBuilder *capture$0, id<JavaUtilSet> capture$1, OrgApacheLuceneUtilFstFST *fst, jint topN, jint maxQueueDepth, id<JavaUtilComparator> comparator) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_2, initWithOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_withOrgApacheLuceneUtilBytesRefBuilder_withJavaUtilSet_withOrgApacheLuceneUtilFstFST_withInt_withInt_withJavaUtilComparator_, outer$, capture$0, capture$1, fst, topN, maxQueueDepth, comparator)
}

@implementation OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_3

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_3_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)compareWithId:(OrgApacheLuceneSearchSuggestLookup_LookupResult *)a
               withId:(OrgApacheLuceneSearchSuggestLookup_LookupResult *)b {
  if (((OrgApacheLuceneSearchSuggestLookup_LookupResult *) nil_chk(a))->value_ > ((OrgApacheLuceneSearchSuggestLookup_LookupResult *) nil_chk(b))->value_) {
    return -1;
  }
  else if (a->value_ < b->value_) {
    return 1;
  }
  else {
    return [((NSString *) nil_chk(((NSString *) cast_chk(a->key_, [NSString class])))) compareToWithId:(NSString *) cast_chk(b->key_, [NSString class])];
  }
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compare", "LOrgApacheLuceneSearchSuggestLookup_LookupResult;LOrgApacheLuceneSearchSuggestLookup_LookupResult;", "LOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester;", "lookupWithJavaLangCharSequence:withJavaUtilSet:withInt:", "Ljava/lang/Object;Ljava/util/Comparator<Lorg/apache/lucene/search/suggest/Lookup$LookupResult;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_3 = { "", "org.apache.lucene.search.suggest.analyzing", ptrTable, methods, NULL, 7, 0x8010, 2, 0, 2, -1, 3, 4, -1 };
  return &_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_3;
}

@end

void OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_3_init(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_3 *self) {
  NSObject_init(self);
}

OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_3 *new_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_3_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_3, init)
}

OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_3 *create_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_3_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_3, init)
}

@implementation OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_4

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)compareWithId:(JavaLangLong *)left
               withId:(JavaLangLong *)right {
  return [((JavaLangLong *) nil_chk(left)) compareToWithId:right];
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compare", "LJavaLangLong;LJavaLangLong;", "LOrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester;", "Ljava/lang/Object;Ljava/util/Comparator<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_4 = { "", "org.apache.lucene.search.suggest.analyzing", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, -1, 3, -1 };
  return &_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_4;
}

@end

void OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_4_init(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_4 *self) {
  NSObject_init(self);
}

OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_4 *new_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_4_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_4, init)
}

OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_4 *create_OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_4_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingFreeTextSuggester_4, init)
}
