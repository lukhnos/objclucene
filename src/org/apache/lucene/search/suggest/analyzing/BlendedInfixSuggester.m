//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./suggest/src/java/org/apache/lucene/search/suggest/analyzing/BlendedInfixSuggester.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Comparator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/NavigableSet.h"
#include "java/util/Set.h"
#include "java/util/TreeSet.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"
#include "org/apache/lucene/analysis/Analyzer.h"
#include "org/apache/lucene/document/FieldType.h"
#include "org/apache/lucene/document/TextField.h"
#include "org/apache/lucene/index/BinaryDocValues.h"
#include "org/apache/lucene/index/IndexOptions.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/MultiDocValues.h"
#include "org/apache/lucene/index/PostingsEnum.h"
#include "org/apache/lucene/index/Terms.h"
#include "org/apache/lucene/index/TermsEnum.h"
#include "org/apache/lucene/search/BooleanQuery.h"
#include "org/apache/lucene/search/FieldDoc.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/search/ScoreDoc.h"
#include "org/apache/lucene/search/TopFieldDocs.h"
#include "org/apache/lucene/search/suggest/Lookup.h"
#include "org/apache/lucene/search/suggest/analyzing/AnalyzingInfixSuggester.h"
#include "org/apache/lucene/search/suggest/analyzing/BlendedInfixSuggester.h"
#include "org/apache/lucene/store/Directory.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/Version.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/suggest/analyzing/BlendedInfixSuggester must not be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester () {
 @public
  /*!
   @brief Factor to multiply the number of searched elements
   */
  jint numFactor_;
  /*!
   @brief Type of blender used by the suggester
   */
  OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType *blenderType_;
}

/*!
 @brief Add an element to the tree respecting a size limit
 @param results the tree to add in
 @param result the result we try to add
 @param num size limit
 */
+ (void)boundedTreeAddWithJavaUtilTreeSet:(JavaUtilTreeSet *)results
withOrgApacheLuceneSearchSuggestLookup_LookupResult:(OrgApacheLuceneSearchSuggestLookup_LookupResult *)result
                                  withInt:(jint)num;

/*!
 @brief Create the coefficient to transform the weight.
 @param doc id of the document
 @param matchedTokens tokens found in the query
 @param prefixToken unfinished token in the query
 @return the coefficient
 @throw IOExceptionIf there are problems reading term vectors from the underlying Lucene index.
 */
- (jdouble)createCoefficientWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                           withInt:(jint)doc
                                                   withJavaUtilSet:(id<JavaUtilSet>)matchedTokens
                                                      withNSString:(NSString *)prefixToken;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester, blenderType_, OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType *)

inline id<JavaUtilComparator> OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_get_LOOKUP_COMP(void);
inline id<JavaUtilComparator> OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_set_LOOKUP_COMP(id<JavaUtilComparator> value);
static id<JavaUtilComparator> OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LOOKUP_COMP;
J2OBJC_STATIC_FIELD_OBJ(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester, LOOKUP_COMP, id<JavaUtilComparator>)

__attribute__((unused)) static void OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_boundedTreeAddWithJavaUtilTreeSet_withOrgApacheLuceneSearchSuggestLookup_LookupResult_withInt_(JavaUtilTreeSet *results, OrgApacheLuceneSearchSuggestLookup_LookupResult *result, jint num);

__attribute__((unused)) static jdouble OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_createCoefficientWithOrgApacheLuceneSearchIndexSearcher_withInt_withJavaUtilSet_withNSString_(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester *self, OrgApacheLuceneSearchIndexSearcher *searcher, jint doc, id<JavaUtilSet> matchedTokens, NSString *prefixToken);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester__Annotations$1(void);

__attribute__((unused)) static void OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_initWithNSString_withInt_(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType *self, NSString *__name, jint __ordinal);

@interface OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LookUpComparator : NSObject < JavaUtilComparator >

- (instancetype)init;

- (jint)compareWithId:(OrgApacheLuceneSearchSuggestLookup_LookupResult *)o1
               withId:(OrgApacheLuceneSearchSuggestLookup_LookupResult *)o2;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LookUpComparator)

__attribute__((unused)) static void OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LookUpComparator_init(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LookUpComparator *self);

__attribute__((unused)) static OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LookUpComparator *new_OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LookUpComparator_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LookUpComparator *create_OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LookUpComparator_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LookUpComparator)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester)

jdouble OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LINEAR_COEF = 0.1;
jint OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_DEFAULT_NUM_FACTOR = 10;

@implementation OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester

+ (jdouble)LINEAR_COEF {
  return OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LINEAR_COEF;
}

+ (void)setLINEAR_COEF:(jdouble)value {
  OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LINEAR_COEF = value;
}

+ (jint)DEFAULT_NUM_FACTOR {
  return OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_DEFAULT_NUM_FACTOR;
}

+ (void)setDEFAULT_NUM_FACTOR:(jint)value {
  OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_DEFAULT_NUM_FACTOR = value;
}

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                  withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer {
  OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_(self, dir, analyzer);
  return self;
}

- (instancetype)initWithOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)matchVersion
                 withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
               withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer {
  OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_(self, matchVersion, dir, analyzer);
  return self;
}

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                  withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)indexAnalyzer
                  withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)queryAnalyzer
                                              withInt:(jint)minPrefixChars
withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType:(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType *)blenderType
                                              withInt:(jint)numFactor
                                          withBoolean:(jboolean)commitOnBuild {
  OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_withInt_withBoolean_(self, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, blenderType, numFactor, commitOnBuild);
  return self;
}

- (instancetype)initWithOrgApacheLuceneUtilVersion:(OrgApacheLuceneUtilVersion *)matchVersion
                 withOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
               withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)indexAnalyzer
               withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)queryAnalyzer
                                           withInt:(jint)minPrefixChars
withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType:(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType *)blenderType
                                           withInt:(jint)numFactor
                                       withBoolean:(jboolean)commitOnBuild {
  OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_withInt_withBoolean_(self, matchVersion, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, blenderType, numFactor, commitOnBuild);
  return self;
}

- (instancetype)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                  withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)indexAnalyzer
                  withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)queryAnalyzer
                                              withInt:(jint)minPrefixChars
withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType:(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType *)blenderType
                                              withInt:(jint)numFactor
                                          withBoolean:(jboolean)commitOnBuild
                                          withBoolean:(jboolean)allTermsRequired
                                          withBoolean:(jboolean)highlight {
  OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_withInt_withBoolean_withBoolean_withBoolean_(self, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, blenderType, numFactor, commitOnBuild, allTermsRequired, highlight);
  return self;
}

- (id<JavaUtilList>)lookupWithJavaLangCharSequence:(id<JavaLangCharSequence>)key
                                   withJavaUtilSet:(id<JavaUtilSet>)contexts
                                       withBoolean:(jboolean)onlyMorePopular
                                           withInt:(jint)num {
  return [super lookupWithJavaLangCharSequence:key withJavaUtilSet:contexts withBoolean:onlyMorePopular withInt:num * numFactor_];
}

- (id<JavaUtilList>)lookupWithJavaLangCharSequence:(id<JavaLangCharSequence>)key
                                   withJavaUtilSet:(id<JavaUtilSet>)contexts
                                           withInt:(jint)num
                                       withBoolean:(jboolean)allTermsRequired
                                       withBoolean:(jboolean)doHighlight {
  return [super lookupWithJavaLangCharSequence:key withJavaUtilSet:contexts withInt:num * numFactor_ withBoolean:allTermsRequired withBoolean:doHighlight];
}

- (id<JavaUtilList>)lookupWithJavaLangCharSequence:(id<JavaLangCharSequence>)key
                                   withJavaUtilMap:(id<JavaUtilMap>)contextInfo
                                           withInt:(jint)num
                                       withBoolean:(jboolean)allTermsRequired
                                       withBoolean:(jboolean)doHighlight {
  return [super lookupWithJavaLangCharSequence:key withJavaUtilMap:contextInfo withInt:num * numFactor_ withBoolean:allTermsRequired withBoolean:doHighlight];
}

- (id<JavaUtilList>)lookupWithJavaLangCharSequence:(id<JavaLangCharSequence>)key
             withOrgApacheLuceneSearchBooleanQuery:(OrgApacheLuceneSearchBooleanQuery *)contextQuery
                                           withInt:(jint)num
                                       withBoolean:(jboolean)allTermsRequired
                                       withBoolean:(jboolean)doHighlight {
  return [super lookupWithJavaLangCharSequence:key withOrgApacheLuceneSearchBooleanQuery:contextQuery withInt:num * numFactor_ withBoolean:allTermsRequired withBoolean:doHighlight];
}

- (OrgApacheLuceneDocumentFieldType *)getTextFieldType {
  OrgApacheLuceneDocumentFieldType *ft = create_OrgApacheLuceneDocumentFieldType_initWithOrgApacheLuceneDocumentFieldType_(JreLoadStatic(OrgApacheLuceneDocumentTextField, TYPE_NOT_STORED));
  [ft setIndexOptionsWithOrgApacheLuceneIndexIndexOptions:JreLoadEnum(OrgApacheLuceneIndexIndexOptions, DOCS_AND_FREQS_AND_POSITIONS)];
  [ft setStoreTermVectorsWithBoolean:true];
  [ft setStoreTermVectorPositionsWithBoolean:true];
  [ft setOmitNormsWithBoolean:true];
  return ft;
}

- (id<JavaUtilList>)createResultsWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                  withOrgApacheLuceneSearchTopFieldDocs:(OrgApacheLuceneSearchTopFieldDocs *)hits
                                                                withInt:(jint)num
                                               withJavaLangCharSequence:(id<JavaLangCharSequence>)key
                                                            withBoolean:(jboolean)doHighlight
                                                        withJavaUtilSet:(id<JavaUtilSet>)matchedTokens
                                                           withNSString:(NSString *)prefixToken {
  OrgApacheLuceneIndexBinaryDocValues *textDV = OrgApacheLuceneIndexMultiDocValues_getBinaryValuesWithOrgApacheLuceneIndexIndexReader_withNSString_([((OrgApacheLuceneSearchIndexSearcher *) nil_chk(searcher)) getIndexReader], OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_TEXT_FIELD_NAME);
  JreAssert(textDV != nil, @"org/apache/lucene/search/suggest/analyzing/BlendedInfixSuggester.java:201 condition failed: assert textDV != null;");
  OrgApacheLuceneIndexBinaryDocValues *payloadsDV = OrgApacheLuceneIndexMultiDocValues_getBinaryValuesWithOrgApacheLuceneIndexIndexReader_withNSString_([searcher getIndexReader], @"payloads");
  JavaUtilTreeSet *results = create_JavaUtilTreeSet_initWithJavaUtilComparator_(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LOOKUP_COMP);
  jint actualNum = JreIntDiv(num, numFactor_);
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(((OrgApacheLuceneSearchTopFieldDocs *) nil_chk(hits))->scoreDocs_))->size_; i++) {
    OrgApacheLuceneSearchFieldDoc *fd = (OrgApacheLuceneSearchFieldDoc *) cast_chk(IOSObjectArray_Get(hits->scoreDocs_, i), [OrgApacheLuceneSearchFieldDoc class]);
    NSString *text = [((OrgApacheLuceneUtilBytesRef *) nil_chk([((OrgApacheLuceneIndexBinaryDocValues *) nil_chk(textDV)) getWithInt:((OrgApacheLuceneSearchFieldDoc *) nil_chk(fd))->doc_])) utf8ToString];
    jlong weight = [((JavaLangLong *) nil_chk((JavaLangLong *) cast_chk(IOSObjectArray_Get(nil_chk(fd->fields_), 0), [JavaLangLong class]))) longLongValue];
    OrgApacheLuceneUtilBytesRef *payload;
    if (payloadsDV != nil) {
      payload = OrgApacheLuceneUtilBytesRef_deepCopyOfWithOrgApacheLuceneUtilBytesRef_([payloadsDV getWithInt:fd->doc_]);
    }
    else {
      payload = nil;
    }
    jdouble coefficient;
    if ([((NSString *) nil_chk(text)) java_hasPrefix:[((id<JavaLangCharSequence>) nil_chk(key)) description]]) {
      coefficient = 1;
    }
    else {
      coefficient = OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_createCoefficientWithOrgApacheLuceneSearchIndexSearcher_withInt_withJavaUtilSet_withNSString_(self, searcher, fd->doc_, matchedTokens, prefixToken);
    }
    jlong score = JreFpToLong((weight * coefficient));
    OrgApacheLuceneSearchSuggestLookup_LookupResult *result;
    if (doHighlight) {
      result = create_OrgApacheLuceneSearchSuggestLookup_LookupResult_initWithJavaLangCharSequence_withId_withLong_withOrgApacheLuceneUtilBytesRef_(text, [self highlightWithNSString:text withJavaUtilSet:matchedTokens withNSString:prefixToken], score, payload);
    }
    else {
      result = create_OrgApacheLuceneSearchSuggestLookup_LookupResult_initWithJavaLangCharSequence_withLong_withOrgApacheLuceneUtilBytesRef_(text, score, payload);
    }
    OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_boundedTreeAddWithJavaUtilTreeSet_withOrgApacheLuceneSearchSuggestLookup_LookupResult_withInt_(results, result, actualNum);
  }
  return create_JavaUtilArrayList_initWithJavaUtilCollection_([results descendingSet]);
}

+ (void)boundedTreeAddWithJavaUtilTreeSet:(JavaUtilTreeSet *)results
withOrgApacheLuceneSearchSuggestLookup_LookupResult:(OrgApacheLuceneSearchSuggestLookup_LookupResult *)result
                                  withInt:(jint)num {
  OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_boundedTreeAddWithJavaUtilTreeSet_withOrgApacheLuceneSearchSuggestLookup_LookupResult_withInt_(results, result, num);
}

- (jdouble)createCoefficientWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                           withInt:(jint)doc
                                                   withJavaUtilSet:(id<JavaUtilSet>)matchedTokens
                                                      withNSString:(NSString *)prefixToken {
  return OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_createCoefficientWithOrgApacheLuceneSearchIndexSearcher_withInt_withJavaUtilSet_withNSString_(self, searcher, doc, matchedTokens, prefixToken);
}

- (jdouble)calculateCoefficientWithInt:(jint)position {
  jdouble coefficient;
  switch ([blenderType_ ordinal]) {
    case OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_Enum_POSITION_LINEAR:
    coefficient = 1 - OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LINEAR_COEF * position;
    break;
    case OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_Enum_POSITION_RECIPROCAL:
    coefficient = 1. / (position + 1);
    break;
    default:
    coefficient = 1;
  }
  return coefficient;
}

- (void)dealloc {
  RELEASE_(blenderType_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, 1, -1, 3, -1 },
    { NULL, NULL, 0x1, -1, 4, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, 1, -1, 6, -1 },
    { NULL, NULL, 0x1, -1, 7, 1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 8, 9, 1, 10, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 8, 11, 1, 12, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 8, 13, 1, 14, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 8, 15, 1, 16, -1, -1 },
    { NULL, "LOrgApacheLuceneDocumentFieldType;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x4, 17, 18, 1, 19, -1, -1 },
    { NULL, "V", 0xa, 20, 21, -1, 22, -1, -1 },
    { NULL, "D", 0x2, 23, 24, 1, 25, -1, -1 },
    { NULL, "D", 0x4, 26, 27, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneStoreDirectory:withOrgApacheLuceneAnalysisAnalyzer:);
  methods[1].selector = @selector(initWithOrgApacheLuceneUtilVersion:withOrgApacheLuceneStoreDirectory:withOrgApacheLuceneAnalysisAnalyzer:);
  methods[2].selector = @selector(initWithOrgApacheLuceneStoreDirectory:withOrgApacheLuceneAnalysisAnalyzer:withOrgApacheLuceneAnalysisAnalyzer:withInt:withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType:withInt:withBoolean:);
  methods[3].selector = @selector(initWithOrgApacheLuceneUtilVersion:withOrgApacheLuceneStoreDirectory:withOrgApacheLuceneAnalysisAnalyzer:withOrgApacheLuceneAnalysisAnalyzer:withInt:withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType:withInt:withBoolean:);
  methods[4].selector = @selector(initWithOrgApacheLuceneStoreDirectory:withOrgApacheLuceneAnalysisAnalyzer:withOrgApacheLuceneAnalysisAnalyzer:withInt:withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType:withInt:withBoolean:withBoolean:withBoolean:);
  methods[5].selector = @selector(lookupWithJavaLangCharSequence:withJavaUtilSet:withBoolean:withInt:);
  methods[6].selector = @selector(lookupWithJavaLangCharSequence:withJavaUtilSet:withInt:withBoolean:withBoolean:);
  methods[7].selector = @selector(lookupWithJavaLangCharSequence:withJavaUtilMap:withInt:withBoolean:withBoolean:);
  methods[8].selector = @selector(lookupWithJavaLangCharSequence:withOrgApacheLuceneSearchBooleanQuery:withInt:withBoolean:withBoolean:);
  methods[9].selector = @selector(getTextFieldType);
  methods[10].selector = @selector(createResultsWithOrgApacheLuceneSearchIndexSearcher:withOrgApacheLuceneSearchTopFieldDocs:withInt:withJavaLangCharSequence:withBoolean:withJavaUtilSet:withNSString:);
  methods[11].selector = @selector(boundedTreeAddWithJavaUtilTreeSet:withOrgApacheLuceneSearchSuggestLookup_LookupResult:withInt:);
  methods[12].selector = @selector(createCoefficientWithOrgApacheLuceneSearchIndexSearcher:withInt:withJavaUtilSet:withNSString:);
  methods[13].selector = @selector(calculateCoefficientWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "LINEAR_COEF", "D", .constantValue.asLong = 0, 0xc, -1, 28, -1, -1 },
    { "DEFAULT_NUM_FACTOR", "I", .constantValue.asLong = 0, 0x9, -1, 29, -1, -1 },
    { "numFactor_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "blenderType_", "LOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "LOOKUP_COMP", "LJavaUtilComparator;", .constantValue.asLong = 0, 0xa, -1, 30, 31, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneStoreDirectory;LOrgApacheLuceneAnalysisAnalyzer;", "LJavaIoIOException;", "LOrgApacheLuceneUtilVersion;LOrgApacheLuceneStoreDirectory;LOrgApacheLuceneAnalysisAnalyzer;", (void *)&OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester__Annotations$0, "LOrgApacheLuceneStoreDirectory;LOrgApacheLuceneAnalysisAnalyzer;LOrgApacheLuceneAnalysisAnalyzer;ILOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType;IZ", "LOrgApacheLuceneUtilVersion;LOrgApacheLuceneStoreDirectory;LOrgApacheLuceneAnalysisAnalyzer;LOrgApacheLuceneAnalysisAnalyzer;ILOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType;IZ", (void *)&OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester__Annotations$1, "LOrgApacheLuceneStoreDirectory;LOrgApacheLuceneAnalysisAnalyzer;LOrgApacheLuceneAnalysisAnalyzer;ILOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType;IZZZ", "lookup", "LJavaLangCharSequence;LJavaUtilSet;ZI", "(Ljava/lang/CharSequence;Ljava/util/Set<Lorg/apache/lucene/util/BytesRef;>;ZI)Ljava/util/List<Lorg/apache/lucene/search/suggest/Lookup$LookupResult;>;", "LJavaLangCharSequence;LJavaUtilSet;IZZ", "(Ljava/lang/CharSequence;Ljava/util/Set<Lorg/apache/lucene/util/BytesRef;>;IZZ)Ljava/util/List<Lorg/apache/lucene/search/suggest/Lookup$LookupResult;>;", "LJavaLangCharSequence;LJavaUtilMap;IZZ", "(Ljava/lang/CharSequence;Ljava/util/Map<Lorg/apache/lucene/util/BytesRef;Lorg/apache/lucene/search/BooleanClause$Occur;>;IZZ)Ljava/util/List<Lorg/apache/lucene/search/suggest/Lookup$LookupResult;>;", "LJavaLangCharSequence;LOrgApacheLuceneSearchBooleanQuery;IZZ", "(Ljava/lang/CharSequence;Lorg/apache/lucene/search/BooleanQuery;IZZ)Ljava/util/List<Lorg/apache/lucene/search/suggest/Lookup$LookupResult;>;", "createResults", "LOrgApacheLuceneSearchIndexSearcher;LOrgApacheLuceneSearchTopFieldDocs;ILJavaLangCharSequence;ZLJavaUtilSet;LNSString;", "(Lorg/apache/lucene/search/IndexSearcher;Lorg/apache/lucene/search/TopFieldDocs;ILjava/lang/CharSequence;ZLjava/util/Set<Ljava/lang/String;>;Ljava/lang/String;)Ljava/util/List<Lorg/apache/lucene/search/suggest/Lookup$LookupResult;>;", "boundedTreeAdd", "LJavaUtilTreeSet;LOrgApacheLuceneSearchSuggestLookup_LookupResult;I", "(Ljava/util/TreeSet<Lorg/apache/lucene/search/suggest/Lookup$LookupResult;>;Lorg/apache/lucene/search/suggest/Lookup$LookupResult;I)V", "createCoefficient", "LOrgApacheLuceneSearchIndexSearcher;ILJavaUtilSet;LNSString;", "(Lorg/apache/lucene/search/IndexSearcher;ILjava/util/Set<Ljava/lang/String;>;Ljava/lang/String;)D", "calculateCoefficient", "I", &OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LINEAR_COEF, &OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_DEFAULT_NUM_FACTOR, &OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LOOKUP_COMP, "Ljava/util/Comparator<Lorg/apache/lucene/search/suggest/Lookup$LookupResult;>;", "LOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType;LOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LookUpComparator;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester = { "BlendedInfixSuggester", "org.apache.lucene.search.suggest.analyzing", ptrTable, methods, fields, 7, 0x1, 14, 5, -1, 32, -1, -1, -1 };
  return &_OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LOOKUP_COMP, new_OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LookUpComparator_init());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester)
  }
}

@end

void OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester *self, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_(self, [((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(analyzer)) getVersion], dir, analyzer);
}

OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester *new_OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester, initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_, dir, analyzer)
}

OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester *create_OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester, initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_, dir, analyzer)
}

void OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester *self, OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_(self, matchVersion, dir, analyzer);
  JreStrongAssign(&self->blenderType_, JreLoadEnum(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType, POSITION_LINEAR));
  self->numFactor_ = OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_DEFAULT_NUM_FACTOR;
}

OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester *new_OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester, initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_, matchVersion, dir, analyzer)
}

OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester *create_OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *analyzer) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester, initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_, matchVersion, dir, analyzer)
}

void OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_withInt_withBoolean_(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester *self, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint minPrefixChars, OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType *blenderType, jint numFactor, jboolean commitOnBuild) {
  OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_withInt_withBoolean_(self, [((OrgApacheLuceneAnalysisAnalyzer *) nil_chk(indexAnalyzer)) getVersion], dir, indexAnalyzer, queryAnalyzer, minPrefixChars, blenderType, numFactor, commitOnBuild);
}

OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester *new_OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_withInt_withBoolean_(OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint minPrefixChars, OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType *blenderType, jint numFactor, jboolean commitOnBuild) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester, initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_withInt_withBoolean_, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, blenderType, numFactor, commitOnBuild)
}

OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester *create_OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_withInt_withBoolean_(OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint minPrefixChars, OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType *blenderType, jint numFactor, jboolean commitOnBuild) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester, initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_withInt_withBoolean_, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, blenderType, numFactor, commitOnBuild)
}

void OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_withInt_withBoolean_(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester *self, OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint minPrefixChars, OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType *blenderType, jint numFactor, jboolean commitOnBuild) {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_(self, matchVersion, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, commitOnBuild);
  JreStrongAssign(&self->blenderType_, blenderType);
  self->numFactor_ = numFactor;
}

OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester *new_OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_withInt_withBoolean_(OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint minPrefixChars, OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType *blenderType, jint numFactor, jboolean commitOnBuild) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester, initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_withInt_withBoolean_, matchVersion, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, blenderType, numFactor, commitOnBuild)
}

OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester *create_OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_withInt_withBoolean_(OrgApacheLuceneUtilVersion *matchVersion, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint minPrefixChars, OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType *blenderType, jint numFactor, jboolean commitOnBuild) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester, initWithOrgApacheLuceneUtilVersion_withOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_withInt_withBoolean_, matchVersion, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, blenderType, numFactor, commitOnBuild)
}

void OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_withInt_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester *self, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint minPrefixChars, OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType *blenderType, jint numFactor, jboolean commitOnBuild, jboolean allTermsRequired, jboolean highlight) {
  OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withBoolean_withBoolean_withBoolean_(self, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, commitOnBuild, allTermsRequired, highlight);
  JreStrongAssign(&self->blenderType_, blenderType);
  self->numFactor_ = numFactor;
}

OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester *new_OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_withInt_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint minPrefixChars, OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType *blenderType, jint numFactor, jboolean commitOnBuild, jboolean allTermsRequired, jboolean highlight) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester, initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_withInt_withBoolean_withBoolean_withBoolean_, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, blenderType, numFactor, commitOnBuild, allTermsRequired, highlight)
}

OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester *create_OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_withInt_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneAnalysisAnalyzer *indexAnalyzer, OrgApacheLuceneAnalysisAnalyzer *queryAnalyzer, jint minPrefixChars, OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType *blenderType, jint numFactor, jboolean commitOnBuild, jboolean allTermsRequired, jboolean highlight) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester, initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneAnalysisAnalyzer_withInt_withOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_withInt_withBoolean_withBoolean_withBoolean_, dir, indexAnalyzer, queryAnalyzer, minPrefixChars, blenderType, numFactor, commitOnBuild, allTermsRequired, highlight)
}

void OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_boundedTreeAddWithJavaUtilTreeSet_withOrgApacheLuceneSearchSuggestLookup_LookupResult_withInt_(JavaUtilTreeSet *results, OrgApacheLuceneSearchSuggestLookup_LookupResult *result, jint num) {
  OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_initialize();
  if ([((JavaUtilTreeSet *) nil_chk(results)) size] >= num) {
    if (((OrgApacheLuceneSearchSuggestLookup_LookupResult *) nil_chk([results first]))->value_ < ((OrgApacheLuceneSearchSuggestLookup_LookupResult *) nil_chk(result))->value_) {
      [results pollFirst];
    }
    else {
      return;
    }
  }
  [results addWithId:result];
}

jdouble OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_createCoefficientWithOrgApacheLuceneSearchIndexSearcher_withInt_withJavaUtilSet_withNSString_(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester *self, OrgApacheLuceneSearchIndexSearcher *searcher, jint doc, id<JavaUtilSet> matchedTokens, NSString *prefixToken) {
  OrgApacheLuceneIndexTerms *tv = JreRetainedLocalValue([((OrgApacheLuceneIndexIndexReader *) nil_chk([((OrgApacheLuceneSearchIndexSearcher *) nil_chk(searcher)) getIndexReader])) getTermVectorWithInt:doc withNSString:OrgApacheLuceneSearchSuggestAnalyzingAnalyzingInfixSuggester_TEXT_FIELD_NAME]);
  OrgApacheLuceneIndexTermsEnum *it = JreRetainedLocalValue([((OrgApacheLuceneIndexTerms *) nil_chk(tv)) iterator]);
  JavaLangInteger *position = JavaLangInteger_valueOfWithInt_(JavaLangInteger_MAX_VALUE);
  OrgApacheLuceneUtilBytesRef *term;
  while ((term = [((OrgApacheLuceneIndexTermsEnum *) nil_chk(it)) next]) != nil) {
    NSString *docTerm = JreRetainedLocalValue([((OrgApacheLuceneUtilBytesRef *) nil_chk(term)) utf8ToString]);
    if ([((id<JavaUtilSet>) nil_chk(matchedTokens)) containsWithId:docTerm] || (prefixToken != nil && [((NSString *) nil_chk(docTerm)) java_hasPrefix:prefixToken])) {
      OrgApacheLuceneIndexPostingsEnum *docPosEnum = JreRetainedLocalValue([it postingsWithOrgApacheLuceneIndexPostingsEnum:nil withInt:OrgApacheLuceneIndexPostingsEnum_OFFSETS]);
      [((OrgApacheLuceneIndexPostingsEnum *) nil_chk(docPosEnum)) nextDoc];
      jint p = [docPosEnum nextPosition];
      if (p < [position intValue]) {
        position = JavaLangInteger_valueOfWithInt_(p);
      }
    }
  }
  return [self calculateCoefficientWithInt:[position intValue]];
}

IOSObjectArray *OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType)

OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType *OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_values_[3];

@implementation OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType

+ (OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType *)CUSTOM {
  return JreEnum(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType, CUSTOM);
}

+ (OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType *)POSITION_LINEAR {
  return JreEnum(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType, POSITION_LINEAR);
}

+ (OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType *)POSITION_RECIPROCAL {
  return JreEnum(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType, POSITION_RECIPROCAL);
}

+ (IOSObjectArray *)values {
  return OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_values();
}

+ (OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType *)valueOfWithNSString:(NSString *)name {
  return OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_valueOfWithNSString_(name);
}

- (OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_Enum)toNSEnum {
  return (OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "CUSTOM", "LOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "POSITION_LINEAR", "LOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "POSITION_RECIPROCAL", "LOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType, CUSTOM), &JreEnum(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType, POSITION_LINEAR), &JreEnum(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType, POSITION_RECIPROCAL), "LOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester;", "Ljava/lang/Enum<Lorg/apache/lucene/search/suggest/analyzing/BlendedInfixSuggester$BlenderType;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType = { "BlenderType", "org.apache.lucene.search.suggest.analyzing", ptrTable, methods, fields, 7, 0x4019, 2, 3, 5, -1, -1, 6, -1 };
  return &_OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 3 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 3; i++) {
      ((void)(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_initWithNSString_withInt_(e, JreEnumConstantName(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType)
  }
}

@end

void OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_initWithNSString_withInt_(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_values() {
  OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_initialize();
  return [IOSObjectArray arrayWithObjects:OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_values_ count:3 type:OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_class_()];
}

OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType *OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_valueOfWithNSString_(NSString *name) {
  OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_initialize();
  for (int i = 0; i < 3; i++) {
    OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType *e = OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType *OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_fromOrdinal(NSUInteger ordinal) {
  OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_initialize();
  if (ordinal >= 3) {
    return nil;
  }
  return OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_BlenderType)

@implementation OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LookUpComparator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LookUpComparator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)compareWithId:(OrgApacheLuceneSearchSuggestLookup_LookupResult *)o1
               withId:(OrgApacheLuceneSearchSuggestLookup_LookupResult *)o2 {
  if (((OrgApacheLuceneSearchSuggestLookup_LookupResult *) nil_chk(o1))->value_ > ((OrgApacheLuceneSearchSuggestLookup_LookupResult *) nil_chk(o2))->value_) {
    return 1;
  }
  else if (o1->value_ < o2->value_) {
    return -1;
  }
  jint keyCompare = [((id<JavaUtilComparator>) nil_chk(JreLoadStatic(OrgApacheLuceneSearchSuggestLookup, CHARSEQUENCE_COMPARATOR))) compareWithId:o1->key_ withId:o2->key_];
  if (keyCompare != 0) {
    return keyCompare;
  }
  if (o1->payload_ != nil) {
    return [o1->payload_ compareToWithId:o2->payload_];
  }
  return 0;
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compare", "LOrgApacheLuceneSearchSuggestLookup_LookupResult;LOrgApacheLuceneSearchSuggestLookup_LookupResult;", "LOrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester;", "Ljava/lang/Object;Ljava/util/Comparator<Lorg/apache/lucene/search/suggest/Lookup$LookupResult;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LookUpComparator = { "LookUpComparator", "org.apache.lucene.search.suggest.analyzing", ptrTable, methods, NULL, 7, 0xa, 2, 0, 2, -1, -1, 3, -1 };
  return &_OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LookUpComparator;
}

@end

void OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LookUpComparator_init(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LookUpComparator *self) {
  NSObject_init(self);
}

OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LookUpComparator *new_OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LookUpComparator_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LookUpComparator, init)
}

OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LookUpComparator *create_OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LookUpComparator_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LookUpComparator, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSuggestAnalyzingBlendedInfixSuggester_LookUpComparator)
