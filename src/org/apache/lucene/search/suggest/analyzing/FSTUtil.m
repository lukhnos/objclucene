//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./suggest/src/java/org/apache/lucene/search/suggest/analyzing/FSTUtil.java
//

#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/apache/lucene/search/suggest/analyzing/FSTUtil.h"
#include "org/apache/lucene/util/IntsRef.h"
#include "org/apache/lucene/util/IntsRefBuilder.h"
#include "org/apache/lucene/util/automaton/Automaton.h"
#include "org/apache/lucene/util/automaton/Transition.h"
#include "org/apache/lucene/util/fst/FST.h"
#include "org/apache/lucene/util/fst/Outputs.h"
#include "org/apache/lucene/util/fst/Util.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/suggest/analyzing/FSTUtil must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchSuggestAnalyzingFSTUtil ()

- (instancetype)init;

@end

__attribute__((unused)) static void OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_init(OrgApacheLuceneSearchSuggestAnalyzingFSTUtil *self);

__attribute__((unused)) static OrgApacheLuceneSearchSuggestAnalyzingFSTUtil *new_OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchSuggestAnalyzingFSTUtil *create_OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_init(void);

@implementation OrgApacheLuceneSearchSuggestAnalyzingFSTUtil

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (id<JavaUtilList>)intersectPrefixPathsWithOrgApacheLuceneUtilAutomatonAutomaton:(OrgApacheLuceneUtilAutomatonAutomaton *)a
                                                    withOrgApacheLuceneUtilFstFST:(OrgApacheLuceneUtilFstFST *)fst {
  return OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_intersectPrefixPathsWithOrgApacheLuceneUtilAutomatonAutomaton_withOrgApacheLuceneUtilFstFST_(a, fst);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 0, 1, 2, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(intersectPrefixPathsWithOrgApacheLuceneUtilAutomatonAutomaton:withOrgApacheLuceneUtilFstFST:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "intersectPrefixPaths", "LOrgApacheLuceneUtilAutomatonAutomaton;LOrgApacheLuceneUtilFstFST;", "LJavaIoIOException;", "<T:Ljava/lang/Object;>(Lorg/apache/lucene/util/automaton/Automaton;Lorg/apache/lucene/util/fst/FST<TT;>;)Ljava/util/List<Lorg/apache/lucene/search/suggest/analyzing/FSTUtil$Path<TT;>;>;", "LOrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestAnalyzingFSTUtil = { "FSTUtil", "org.apache.lucene.search.suggest.analyzing", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, 4, -1, -1, -1 };
  return &_OrgApacheLuceneSearchSuggestAnalyzingFSTUtil;
}

@end

void OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_init(OrgApacheLuceneSearchSuggestAnalyzingFSTUtil *self) {
  NSObject_init(self);
}

OrgApacheLuceneSearchSuggestAnalyzingFSTUtil *new_OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingFSTUtil, init)
}

OrgApacheLuceneSearchSuggestAnalyzingFSTUtil *create_OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingFSTUtil, init)
}

id<JavaUtilList> OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_intersectPrefixPathsWithOrgApacheLuceneUtilAutomatonAutomaton_withOrgApacheLuceneUtilFstFST_(OrgApacheLuceneUtilAutomatonAutomaton *a, OrgApacheLuceneUtilFstFST *fst) {
  OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_initialize();
  JreAssert([((OrgApacheLuceneUtilAutomatonAutomaton *) nil_chk(a)) isDeterministic], @"org/apache/lucene/search/suggest/analyzing/FSTUtil.java:72 condition failed: assert a.isDeterministic();");
  id<JavaUtilList> queue = create_JavaUtilArrayList_init();
  id<JavaUtilList> endNodes = create_JavaUtilArrayList_init();
  if ([a getNumStates] == 0) {
    return endNodes;
  }
  [queue addWithId:create_OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path_initWithInt_withOrgApacheLuceneUtilFstFST_Arc_withId_withOrgApacheLuceneUtilIntsRefBuilder_(0, [((OrgApacheLuceneUtilFstFST *) nil_chk(fst)) getFirstArcWithOrgApacheLuceneUtilFstFST_Arc:create_OrgApacheLuceneUtilFstFST_Arc_init()], [((OrgApacheLuceneUtilFstOutputs *) nil_chk(fst->outputs_)) getNoOutput], create_OrgApacheLuceneUtilIntsRefBuilder_init())];
  OrgApacheLuceneUtilFstFST_Arc *scratchArc = create_OrgApacheLuceneUtilFstFST_Arc_init();
  OrgApacheLuceneUtilFstFST_BytesReader *fstReader = [fst getBytesReader];
  OrgApacheLuceneUtilAutomatonTransition *t = create_OrgApacheLuceneUtilAutomatonTransition_init();
  while ([queue size] != 0) {
    OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path *path = [queue removeWithInt:[queue size] - 1];
    if ([a isAcceptWithInt:((OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path *) nil_chk(path))->state_]) {
      [endNodes addWithId:path];
      continue;
    }
    OrgApacheLuceneUtilIntsRefBuilder *currentInput = JreRetainedLocalValue(path->input_);
    jint count = [a initTransitionWithInt:path->state_ withOrgApacheLuceneUtilAutomatonTransition:t];
    for (jint i = 0; i < count; i++) {
      [a getNextTransitionWithOrgApacheLuceneUtilAutomatonTransition:t];
      jint min = t->min_;
      jint max = t->max_;
      if (min == max) {
        OrgApacheLuceneUtilFstFST_Arc *nextArc = [fst findTargetArcWithInt:t->min_ withOrgApacheLuceneUtilFstFST_Arc:path->fstNode_ withOrgApacheLuceneUtilFstFST_Arc:scratchArc withOrgApacheLuceneUtilFstFST_BytesReader:fstReader];
        if (nextArc != nil) {
          OrgApacheLuceneUtilIntsRefBuilder *newInput = create_OrgApacheLuceneUtilIntsRefBuilder_init();
          [newInput copyIntsWithOrgApacheLuceneUtilIntsRef:[((OrgApacheLuceneUtilIntsRefBuilder *) nil_chk(currentInput)) get]];
          [newInput appendWithInt:t->min_];
          [queue addWithId:create_OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path_initWithInt_withOrgApacheLuceneUtilFstFST_Arc_withId_withOrgApacheLuceneUtilIntsRefBuilder_(t->dest_, [create_OrgApacheLuceneUtilFstFST_Arc_init() copyFromWithOrgApacheLuceneUtilFstFST_Arc:nextArc], [fst->outputs_ addWithId:path->output_ withId:nextArc->output_], newInput)];
        }
      }
      else {
        OrgApacheLuceneUtilFstFST_Arc *nextArc = OrgApacheLuceneUtilFstUtil_readCeilArcWithInt_withOrgApacheLuceneUtilFstFST_withOrgApacheLuceneUtilFstFST_Arc_withOrgApacheLuceneUtilFstFST_Arc_withOrgApacheLuceneUtilFstFST_BytesReader_(min, fst, path->fstNode_, scratchArc, fstReader);
        while (nextArc != nil && nextArc->label_ <= max) {
          JreAssert(nextArc->label_ <= max, @"org/apache/lucene/search/suggest/analyzing/FSTUtil.java:125 condition failed: assert nextArc.label <=  max;");
          JreAssert(nextArc->label_ >= min, JreStrcat("ICI", nextArc->label_, ' ', min));
          OrgApacheLuceneUtilIntsRefBuilder *newInput = create_OrgApacheLuceneUtilIntsRefBuilder_init();
          [newInput copyIntsWithOrgApacheLuceneUtilIntsRef:[((OrgApacheLuceneUtilIntsRefBuilder *) nil_chk(currentInput)) get]];
          [newInput appendWithInt:nextArc->label_];
          [queue addWithId:create_OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path_initWithInt_withOrgApacheLuceneUtilFstFST_Arc_withId_withOrgApacheLuceneUtilIntsRefBuilder_(t->dest_, [create_OrgApacheLuceneUtilFstFST_Arc_init() copyFromWithOrgApacheLuceneUtilFstFST_Arc:nextArc], [fst->outputs_ addWithId:path->output_ withId:nextArc->output_], newInput)];
          jint label = nextArc->label_;
          nextArc = [nextArc isLast] ? nil : [fst readNextRealArcWithOrgApacheLuceneUtilFstFST_Arc:nextArc withOrgApacheLuceneUtilFstFST_BytesReader:fstReader];
          JreAssert(nextArc == nil || label < nextArc->label_, JreStrcat("$I$I", @"last: ", label, @" next: ", nextArc->label_));
        }
      }
    }
  }
  return endNodes;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSuggestAnalyzingFSTUtil)

@implementation OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path

- (instancetype)initWithInt:(jint)state
withOrgApacheLuceneUtilFstFST_Arc:(OrgApacheLuceneUtilFstFST_Arc *)fstNode
                     withId:(id)output
withOrgApacheLuceneUtilIntsRefBuilder:(OrgApacheLuceneUtilIntsRefBuilder *)input {
  OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path_initWithInt_withOrgApacheLuceneUtilFstFST_Arc_withId_withOrgApacheLuceneUtilIntsRefBuilder_(self, state, fstNode, output, input);
  return self;
}

- (void)dealloc {
  RELEASE_(fstNode_);
  RELEASE_(output_);
  RELEASE_(input_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withOrgApacheLuceneUtilFstFST_Arc:withId:withOrgApacheLuceneUtilIntsRefBuilder:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "state_", "I", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "fstNode_", "LOrgApacheLuceneUtilFstFST_Arc;", .constantValue.asLong = 0, 0x11, -1, -1, 2, -1 },
    { "output_", "LNSObject;", .constantValue.asLong = 0, 0x11, -1, -1, 3, -1 },
    { "input_", "LOrgApacheLuceneUtilIntsRefBuilder;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ILOrgApacheLuceneUtilFstFST_Arc;LNSObject;LOrgApacheLuceneUtilIntsRefBuilder;", "(ILorg/apache/lucene/util/fst/FST$Arc<TT;>;TT;Lorg/apache/lucene/util/IntsRefBuilder;)V", "Lorg/apache/lucene/util/fst/FST$Arc<TT;>;", "TT;", "LOrgApacheLuceneSearchSuggestAnalyzingFSTUtil;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path = { "Path", "org.apache.lucene.search.suggest.analyzing", ptrTable, methods, fields, 7, 0x19, 1, 4, 4, -1, -1, 5, -1 };
  return &_OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path;
}

@end

void OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path_initWithInt_withOrgApacheLuceneUtilFstFST_Arc_withId_withOrgApacheLuceneUtilIntsRefBuilder_(OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path *self, jint state, OrgApacheLuceneUtilFstFST_Arc *fstNode, id output, OrgApacheLuceneUtilIntsRefBuilder *input) {
  NSObject_init(self);
  self->state_ = state;
  JreStrongAssign(&self->fstNode_, fstNode);
  JreStrongAssign(&self->output_, output);
  JreStrongAssign(&self->input_, input);
}

OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path *new_OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path_initWithInt_withOrgApacheLuceneUtilFstFST_Arc_withId_withOrgApacheLuceneUtilIntsRefBuilder_(jint state, OrgApacheLuceneUtilFstFST_Arc *fstNode, id output, OrgApacheLuceneUtilIntsRefBuilder *input) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path, initWithInt_withOrgApacheLuceneUtilFstFST_Arc_withId_withOrgApacheLuceneUtilIntsRefBuilder_, state, fstNode, output, input)
}

OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path *create_OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path_initWithInt_withOrgApacheLuceneUtilFstFST_Arc_withId_withOrgApacheLuceneUtilIntsRefBuilder_(jint state, OrgApacheLuceneUtilFstFST_Arc *fstNode, id output, OrgApacheLuceneUtilIntsRefBuilder *input) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path, initWithInt_withOrgApacheLuceneUtilFstFST_Arc_withId_withOrgApacheLuceneUtilIntsRefBuilder_, state, fstNode, output, input)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSuggestAnalyzingFSTUtil_Path)
