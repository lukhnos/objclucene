//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./suggest/src/java/org/apache/lucene/search/suggest/fst/WFSTCompletionLookup.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/CharSequence.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"
#include "org/apache/lucene/search/suggest/InputIterator.h"
#include "org/apache/lucene/search/suggest/Lookup.h"
#include "org/apache/lucene/search/suggest/SortedInputIterator.h"
#include "org/apache/lucene/search/suggest/fst/WFSTCompletionLookup.h"
#include "org/apache/lucene/store/ByteArrayDataInput.h"
#include "org/apache/lucene/store/ByteArrayDataOutput.h"
#include "org/apache/lucene/store/DataInput.h"
#include "org/apache/lucene/store/DataOutput.h"
#include "org/apache/lucene/util/Accountable.h"
#include "org/apache/lucene/util/Accountables.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"
#include "org/apache/lucene/util/CharsRefBuilder.h"
#include "org/apache/lucene/util/IntsRef.h"
#include "org/apache/lucene/util/IntsRefBuilder.h"
#include "org/apache/lucene/util/OfflineSorter.h"
#include "org/apache/lucene/util/fst/Builder.h"
#include "org/apache/lucene/util/fst/FST.h"
#include "org/apache/lucene/util/fst/Outputs.h"
#include "org/apache/lucene/util/fst/PositiveIntOutputs.h"
#include "org/apache/lucene/util/fst/Util.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/suggest/fst/WFSTCompletionLookup must not be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup () {
 @public
  /*!
   @brief FST<Long>, weights are encoded as costs: (Integer.MAX_VALUE-weight)
   */
  OrgApacheLuceneUtilFstFST *fst_;
  /*!
   @brief True if exact match suggestions should always be returned first.
   */
  jboolean exactFirst_;
  /*!
   @brief Number of entries the lookup was built with
   */
  jlong count_;
}

- (JavaLangLong *)lookupPrefixWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)scratch
                            withOrgApacheLuceneUtilFstFST_Arc:(OrgApacheLuceneUtilFstFST_Arc *)arc;

/*!
 @brief cost -&gt; weight
 */
+ (jint)decodeWeightWithLong:(jlong)encoded;

/*!
 @brief weight -&gt; cost
 */
+ (jint)encodeWeightWithLong:(jlong)value;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup, fst_, OrgApacheLuceneUtilFstFST *)

__attribute__((unused)) static JavaLangLong *OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_lookupPrefixWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilFstFST_Arc_(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup *self, OrgApacheLuceneUtilBytesRef *scratch, OrgApacheLuceneUtilFstFST_Arc *arc);

__attribute__((unused)) static jint OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_decodeWeightWithLong_(jlong encoded);

__attribute__((unused)) static jint OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_encodeWeightWithLong_(jlong value);

@interface OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_WFSTInputIterator : OrgApacheLuceneSearchSuggestSortedInputIterator

- (instancetype)initWithOrgApacheLuceneSearchSuggestFstWFSTCompletionLookup:(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup *)outer$
                              withOrgApacheLuceneSearchSuggestInputIterator:(id<OrgApacheLuceneSearchSuggestInputIterator>)source;

- (void)encodeWithOrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter:(OrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter *)writer
                           withOrgApacheLuceneStoreByteArrayDataOutput:(OrgApacheLuceneStoreByteArrayDataOutput *)output
                                                         withByteArray:(IOSByteArray *)buffer
                                       withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)spare
                                       withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)payload
                                                       withJavaUtilSet:(id<JavaUtilSet>)contexts
                                                              withLong:(jlong)weight;

- (jlong)decodeWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)scratch
    withOrgApacheLuceneStoreByteArrayDataInput:(OrgApacheLuceneStoreByteArrayDataInput *)tmpInput;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_WFSTInputIterator)

__attribute__((unused)) static void OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_WFSTInputIterator_initWithOrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_withOrgApacheLuceneSearchSuggestInputIterator_(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_WFSTInputIterator *self, OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup *outer$, id<OrgApacheLuceneSearchSuggestInputIterator> source);

__attribute__((unused)) static OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_WFSTInputIterator *new_OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_WFSTInputIterator_initWithOrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_withOrgApacheLuceneSearchSuggestInputIterator_(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup *outer$, id<OrgApacheLuceneSearchSuggestInputIterator> source) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_WFSTInputIterator *create_OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_WFSTInputIterator_initWithOrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_withOrgApacheLuceneSearchSuggestInputIterator_(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup *outer$, id<OrgApacheLuceneSearchSuggestInputIterator> source);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_WFSTInputIterator)

@interface OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_1 : NSObject < JavaUtilComparator >

- (instancetype)init;

- (jint)compareWithId:(JavaLangLong *)left
               withId:(JavaLangLong *)right;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_1)

__attribute__((unused)) static void OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_1_init(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_1 *self);

__attribute__((unused)) static OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_1 *new_OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_1 *create_OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_1_init(void);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup)

id<JavaUtilComparator> OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_weightComparator;

@implementation OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup

+ (id<JavaUtilComparator>)weightComparator {
  return OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_weightComparator;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithBoolean:(jboolean)exactFirst {
  OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_initWithBoolean_(self, exactFirst);
  return self;
}

- (void)buildWithOrgApacheLuceneSearchSuggestInputIterator:(id<OrgApacheLuceneSearchSuggestInputIterator>)iterator {
  if ([((id<OrgApacheLuceneSearchSuggestInputIterator>) nil_chk(iterator)) hasPayloads]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"this suggester doesn't support payloads");
  }
  if ([iterator hasContexts]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"this suggester doesn't support contexts");
  }
  count_ = 0;
  OrgApacheLuceneUtilBytesRef *scratch = create_OrgApacheLuceneUtilBytesRef_init();
  id<OrgApacheLuceneSearchSuggestInputIterator> iter = create_OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_WFSTInputIterator_initWithOrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_withOrgApacheLuceneSearchSuggestInputIterator_(self, iterator);
  OrgApacheLuceneUtilIntsRefBuilder *scratchInts = create_OrgApacheLuceneUtilIntsRefBuilder_init();
  OrgApacheLuceneUtilBytesRefBuilder *previous = nil;
  OrgApacheLuceneUtilFstPositiveIntOutputs *outputs = OrgApacheLuceneUtilFstPositiveIntOutputs_getSingleton();
  OrgApacheLuceneUtilFstBuilder *builder = create_OrgApacheLuceneUtilFstBuilder_initWithOrgApacheLuceneUtilFstFST_INPUT_TYPE_withOrgApacheLuceneUtilFstOutputs_(JreLoadEnum(OrgApacheLuceneUtilFstFST_INPUT_TYPE, BYTE1), outputs);
  while ((scratch = [iter next]) != nil) {
    jlong cost = [iter weight];
    if (previous == nil) {
      previous = create_OrgApacheLuceneUtilBytesRefBuilder_init();
    }
    else if ([((OrgApacheLuceneUtilBytesRef *) nil_chk(scratch)) isEqual:[previous get]]) {
      continue;
    }
    OrgApacheLuceneUtilFstUtil_toIntsRefWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilIntsRefBuilder_(scratch, scratchInts);
    [builder addWithOrgApacheLuceneUtilIntsRef:[scratchInts get] withId:JavaLangLong_valueOfWithLong_(cost)];
    [previous copyBytesWithOrgApacheLuceneUtilBytesRef:scratch];
    count_++;
  }
  JreStrongAssign(&fst_, [builder finish]);
}

- (jboolean)storeWithOrgApacheLuceneStoreDataOutput:(OrgApacheLuceneStoreDataOutput *)output {
  [((OrgApacheLuceneStoreDataOutput *) nil_chk(output)) writeVLongWithLong:count_];
  if (fst_ == nil) {
    return false;
  }
  [fst_ saveWithOrgApacheLuceneStoreDataOutput:output];
  return true;
}

- (jboolean)load__WithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)input {
  count_ = [((OrgApacheLuceneStoreDataInput *) nil_chk(input)) readVLong];
  JreStrongAssignAndConsume(&self->fst_, new_OrgApacheLuceneUtilFstFST_initWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilFstOutputs_(input, OrgApacheLuceneUtilFstPositiveIntOutputs_getSingleton()));
  return true;
}

- (id<JavaUtilList>)lookupWithJavaLangCharSequence:(id<JavaLangCharSequence>)key
                                   withJavaUtilSet:(id<JavaUtilSet>)contexts
                                       withBoolean:(jboolean)onlyMorePopular
                                           withInt:(jint)num {
  if (contexts != nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"this suggester doesn't support contexts");
  }
  JreAssert(num > 0, @"org/apache/lucene/search/suggest/fst/WFSTCompletionLookup.java:154 condition failed: assert num > 0;");
  if (onlyMorePopular) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"this suggester only works with onlyMorePopular=false");
  }
  if (fst_ == nil) {
    return JavaUtilCollections_emptyList();
  }
  OrgApacheLuceneUtilBytesRefBuilder *scratch = create_OrgApacheLuceneUtilBytesRefBuilder_init();
  [scratch copyCharsWithJavaLangCharSequence:key];
  jint prefixLength = [scratch length];
  OrgApacheLuceneUtilFstFST_Arc *arc = create_OrgApacheLuceneUtilFstFST_Arc_init();
  JavaLangLong *prefixOutput = nil;
  @try {
    prefixOutput = OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_lookupPrefixWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilFstFST_Arc_(self, [scratch get], arc);
  }
  @catch (JavaIoIOException *bogus) {
    @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(bogus);
  }
  if (prefixOutput == nil) {
    return JavaUtilCollections_emptyList();
  }
  id<JavaUtilList> results = create_JavaUtilArrayList_initWithInt_(num);
  OrgApacheLuceneUtilCharsRefBuilder *spare = create_OrgApacheLuceneUtilCharsRefBuilder_init();
  if (exactFirst_ && [arc isFinal]) {
    [spare copyUTF8BytesWithOrgApacheLuceneUtilBytesRef:[scratch get]];
    [results addWithId:create_OrgApacheLuceneSearchSuggestLookup_LookupResult_initWithJavaLangCharSequence_withLong_([spare description], OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_decodeWeightWithLong_([prefixOutput longLongValue] + [((JavaLangLong *) nil_chk(arc->nextFinalOutput_)) longLongValue]))];
    if (--num == 0) {
      return results;
    }
  }
  OrgApacheLuceneUtilFstUtil_TopResults *completions = nil;
  @try {
    completions = OrgApacheLuceneUtilFstUtil_shortestPathsWithOrgApacheLuceneUtilFstFST_withOrgApacheLuceneUtilFstFST_Arc_withId_withJavaUtilComparator_withInt_withBoolean_(fst_, arc, prefixOutput, OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_weightComparator, num, !exactFirst_);
    JreAssert(((OrgApacheLuceneUtilFstUtil_TopResults *) nil_chk(completions))->isComplete_, @"org/apache/lucene/search/suggest/fst/WFSTCompletionLookup.java:193 condition failed: assert completions.isComplete;");
  }
  @catch (JavaIoIOException *bogus) {
    @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(bogus);
  }
  OrgApacheLuceneUtilBytesRefBuilder *suffix = create_OrgApacheLuceneUtilBytesRefBuilder_init();
  for (OrgApacheLuceneUtilFstUtil_Result * __strong completion in nil_chk(completions)) {
    [scratch setLengthWithInt:prefixLength];
    OrgApacheLuceneUtilFstUtil_toBytesRefWithOrgApacheLuceneUtilIntsRef_withOrgApacheLuceneUtilBytesRefBuilder_(((OrgApacheLuceneUtilFstUtil_Result *) nil_chk(completion))->input_, suffix);
    [scratch appendWithOrgApacheLuceneUtilBytesRefBuilder:suffix];
    [spare copyUTF8BytesWithOrgApacheLuceneUtilBytesRef:[scratch get]];
    [results addWithId:create_OrgApacheLuceneSearchSuggestLookup_LookupResult_initWithJavaLangCharSequence_withLong_([spare description], OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_decodeWeightWithLong_([((JavaLangLong *) nil_chk(completion->output_)) longLongValue]))];
  }
  return results;
}

- (JavaLangLong *)lookupPrefixWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)scratch
                            withOrgApacheLuceneUtilFstFST_Arc:(OrgApacheLuceneUtilFstFST_Arc *)arc {
  return OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_lookupPrefixWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilFstFST_Arc_(self, scratch, arc);
}

- (id)getWithJavaLangCharSequence:(id<JavaLangCharSequence>)key {
  if (fst_ == nil) {
    return nil;
  }
  OrgApacheLuceneUtilFstFST_Arc *arc = create_OrgApacheLuceneUtilFstFST_Arc_init();
  JavaLangLong *result = nil;
  @try {
    result = OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_lookupPrefixWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilFstFST_Arc_(self, create_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(key), arc);
  }
  @catch (JavaIoIOException *bogus) {
    @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(bogus);
  }
  if (result == nil || ![arc isFinal]) {
    return nil;
  }
  else {
    return JavaLangInteger_valueOfWithInt_(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_decodeWeightWithLong_([result longLongValue] + [((JavaLangLong *) nil_chk(arc->nextFinalOutput_)) longLongValue]));
  }
}

+ (jint)decodeWeightWithLong:(jlong)encoded {
  return OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_decodeWeightWithLong_(encoded);
}

+ (jint)encodeWeightWithLong:(jlong)value {
  return OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_encodeWeightWithLong_(value);
}

- (jlong)ramBytesUsed {
  return (fst_ == nil) ? 0 : [((OrgApacheLuceneUtilFstFST *) nil_chk(fst_)) ramBytesUsed];
}

- (id<JavaUtilCollection>)getChildResources {
  if (fst_ == nil) {
    return JavaUtilCollections_emptyList();
  }
  else {
    return JavaUtilCollections_singletonWithId_(OrgApacheLuceneUtilAccountables_namedAccountableWithNSString_withOrgApacheLuceneUtilAccountable_(@"fst", fst_));
  }
}

- (jlong)getCount {
  return count_;
}

- (void)dealloc {
  RELEASE_(fst_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, 3, -1, -1, -1 },
    { NULL, "Z", 0x1, 6, 7, 3, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 8, 9, -1, 10, -1, -1 },
    { NULL, "LJavaLangLong;", 0x2, 11, 12, 3, 13, -1, -1 },
    { NULL, "LNSObject;", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 16, 17, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 18, 17, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, 19, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithBoolean:);
  methods[2].selector = @selector(buildWithOrgApacheLuceneSearchSuggestInputIterator:);
  methods[3].selector = @selector(storeWithOrgApacheLuceneStoreDataOutput:);
  methods[4].selector = @selector(load__WithOrgApacheLuceneStoreDataInput:);
  methods[5].selector = @selector(lookupWithJavaLangCharSequence:withJavaUtilSet:withBoolean:withInt:);
  methods[6].selector = @selector(lookupPrefixWithOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneUtilFstFST_Arc:);
  methods[7].selector = @selector(getWithJavaLangCharSequence:);
  methods[8].selector = @selector(decodeWeightWithLong:);
  methods[9].selector = @selector(encodeWeightWithLong:);
  methods[10].selector = @selector(ramBytesUsed);
  methods[11].selector = @selector(getChildResources);
  methods[12].selector = @selector(getCount);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "fst_", "LOrgApacheLuceneUtilFstFST;", .constantValue.asLong = 0, 0x2, -1, -1, 20, -1 },
    { "exactFirst_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "count_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "weightComparator", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x18, -1, 21, 22, -1 },
  };
  static const void *ptrTable[] = { "Z", "build", "LOrgApacheLuceneSearchSuggestInputIterator;", "LJavaIoIOException;", "store", "LOrgApacheLuceneStoreDataOutput;", "load", "LOrgApacheLuceneStoreDataInput;", "lookup", "LJavaLangCharSequence;LJavaUtilSet;ZI", "(Ljava/lang/CharSequence;Ljava/util/Set<Lorg/apache/lucene/util/BytesRef;>;ZI)Ljava/util/List<Lorg/apache/lucene/search/suggest/Lookup$LookupResult;>;", "lookupPrefix", "LOrgApacheLuceneUtilBytesRef;LOrgApacheLuceneUtilFstFST_Arc;", "(Lorg/apache/lucene/util/BytesRef;Lorg/apache/lucene/util/fst/FST$Arc<Ljava/lang/Long;>;)Ljava/lang/Long;", "get", "LJavaLangCharSequence;", "decodeWeight", "J", "encodeWeight", "()Ljava/util/Collection<Lorg/apache/lucene/util/Accountable;>;", "Lorg/apache/lucene/util/fst/FST<Ljava/lang/Long;>;", &OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_weightComparator, "Ljava/util/Comparator<Ljava/lang/Long;>;", "LOrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_WFSTInputIterator;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup = { "WFSTCompletionLookup", "org.apache.lucene.search.suggest.fst", ptrTable, methods, fields, 7, 0x1, 13, 4, -1, 23, -1, -1, -1 };
  return &_OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_weightComparator, new_OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_1_init());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup)
  }
}

@end

void OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_init(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup *self) {
  OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_initWithBoolean_(self, true);
}

OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup *new_OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup, init)
}

OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup *create_OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup, init)
}

void OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_initWithBoolean_(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup *self, jboolean exactFirst) {
  OrgApacheLuceneSearchSuggestLookup_init(self);
  JreStrongAssign(&self->fst_, nil);
  self->count_ = 0;
  self->exactFirst_ = exactFirst;
}

OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup *new_OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_initWithBoolean_(jboolean exactFirst) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup, initWithBoolean_, exactFirst)
}

OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup *create_OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_initWithBoolean_(jboolean exactFirst) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup, initWithBoolean_, exactFirst)
}

JavaLangLong *OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_lookupPrefixWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilFstFST_Arc_(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup *self, OrgApacheLuceneUtilBytesRef *scratch, OrgApacheLuceneUtilFstFST_Arc *arc) {
  JreAssert(0 == [((JavaLangLong *) nil_chk([((OrgApacheLuceneUtilFstOutputs *) nil_chk(((OrgApacheLuceneUtilFstFST *) nil_chk(self->fst_))->outputs_)) getNoOutput])) longLongValue], @"org/apache/lucene/search/suggest/fst/WFSTCompletionLookup.java:211 condition failed: assert 0 == fst.outputs.getNoOutput().longValue();");
  jlong output = 0;
  OrgApacheLuceneUtilFstFST_BytesReader *bytesReader = JreRetainedLocalValue([((OrgApacheLuceneUtilFstFST *) nil_chk(self->fst_)) getBytesReader]);
  [((OrgApacheLuceneUtilFstFST *) nil_chk(self->fst_)) getFirstArcWithOrgApacheLuceneUtilFstFST_Arc:arc];
  IOSByteArray *bytes = ((OrgApacheLuceneUtilBytesRef *) nil_chk(scratch))->bytes_;
  jint pos = scratch->offset_;
  jint end = pos + scratch->length_;
  while (pos < end) {
    if ([((OrgApacheLuceneUtilFstFST *) nil_chk(self->fst_)) findTargetArcWithInt:IOSByteArray_Get(nil_chk(bytes), pos++) & (jint) 0xff withOrgApacheLuceneUtilFstFST_Arc:arc withOrgApacheLuceneUtilFstFST_Arc:arc withOrgApacheLuceneUtilFstFST_BytesReader:bytesReader] == nil) {
      return nil;
    }
    else {
      output += [((JavaLangLong *) nil_chk(((OrgApacheLuceneUtilFstFST_Arc *) nil_chk(arc))->output_)) longLongValue];
    }
  }
  return JavaLangLong_valueOfWithLong_(output);
}

jint OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_decodeWeightWithLong_(jlong encoded) {
  OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_initialize();
  return (jint) (JavaLangInteger_MAX_VALUE - encoded);
}

jint OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_encodeWeightWithLong_(jlong value) {
  OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_initialize();
  if (value < 0 || value > JavaLangInteger_MAX_VALUE) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(JreStrcat("$J", @"cannot encode value: ", value));
  }
  return JavaLangInteger_MAX_VALUE - (jint) value;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup)

@implementation OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_WFSTInputIterator

- (instancetype)initWithOrgApacheLuceneSearchSuggestFstWFSTCompletionLookup:(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup *)outer$
                              withOrgApacheLuceneSearchSuggestInputIterator:(id<OrgApacheLuceneSearchSuggestInputIterator>)source {
  OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_WFSTInputIterator_initWithOrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_withOrgApacheLuceneSearchSuggestInputIterator_(self, outer$, source);
  return self;
}

- (void)encodeWithOrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter:(OrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter *)writer
                           withOrgApacheLuceneStoreByteArrayDataOutput:(OrgApacheLuceneStoreByteArrayDataOutput *)output
                                                         withByteArray:(IOSByteArray *)buffer
                                       withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)spare
                                       withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)payload
                                                       withJavaUtilSet:(id<JavaUtilSet>)contexts
                                                              withLong:(jlong)weight {
  if (((OrgApacheLuceneUtilBytesRef *) nil_chk(spare))->length_ + 4 >= ((IOSByteArray *) nil_chk(buffer))->size_) {
    buffer = OrgApacheLuceneUtilArrayUtil_growWithByteArray_withInt_(buffer, spare->length_ + 4);
  }
  [((OrgApacheLuceneStoreByteArrayDataOutput *) nil_chk(output)) resetWithByteArray:buffer];
  [output writeBytesWithByteArray:spare->bytes_ withInt:spare->offset_ withInt:spare->length_];
  [output writeIntWithInt:OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_encodeWeightWithLong_(weight)];
  [((OrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter *) nil_chk(writer)) writeWithByteArray:buffer withInt:0 withInt:[output getPosition]];
}

- (jlong)decodeWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)scratch
    withOrgApacheLuceneStoreByteArrayDataInput:(OrgApacheLuceneStoreByteArrayDataInput *)tmpInput {
  ((OrgApacheLuceneUtilBytesRef *) nil_chk(scratch))->length_ -= 4;
  [((OrgApacheLuceneStoreByteArrayDataInput *) nil_chk(tmpInput)) resetWithByteArray:scratch->bytes_ withInt:scratch->offset_ + scratch->length_ withInt:4];
  return [tmpInput readInt];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, 1, -1, -1, -1 },
    { NULL, "V", 0x4, 2, 3, 1, 4, -1, -1 },
    { NULL, "J", 0x4, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchSuggestFstWFSTCompletionLookup:withOrgApacheLuceneSearchSuggestInputIterator:);
  methods[1].selector = @selector(encodeWithOrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter:withOrgApacheLuceneStoreByteArrayDataOutput:withByteArray:withOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneUtilBytesRef:withJavaUtilSet:withLong:);
  methods[2].selector = @selector(decodeWithOrgApacheLuceneUtilBytesRef:withOrgApacheLuceneStoreByteArrayDataInput:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchSuggestFstWFSTCompletionLookup;LOrgApacheLuceneSearchSuggestInputIterator;", "LJavaIoIOException;", "encode", "LOrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter;LOrgApacheLuceneStoreByteArrayDataOutput;[BLOrgApacheLuceneUtilBytesRef;LOrgApacheLuceneUtilBytesRef;LJavaUtilSet;J", "(Lorg/apache/lucene/util/OfflineSorter$ByteSequencesWriter;Lorg/apache/lucene/store/ByteArrayDataOutput;[BLorg/apache/lucene/util/BytesRef;Lorg/apache/lucene/util/BytesRef;Ljava/util/Set<Lorg/apache/lucene/util/BytesRef;>;J)V", "decode", "LOrgApacheLuceneUtilBytesRef;LOrgApacheLuceneStoreByteArrayDataInput;", "LOrgApacheLuceneSearchSuggestFstWFSTCompletionLookup;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_WFSTInputIterator = { "WFSTInputIterator", "org.apache.lucene.search.suggest.fst", ptrTable, methods, NULL, 7, 0x12, 3, 0, 7, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_WFSTInputIterator;
}

@end

void OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_WFSTInputIterator_initWithOrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_withOrgApacheLuceneSearchSuggestInputIterator_(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_WFSTInputIterator *self, OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup *outer$, id<OrgApacheLuceneSearchSuggestInputIterator> source) {
  OrgApacheLuceneSearchSuggestSortedInputIterator_initWithOrgApacheLuceneSearchSuggestInputIterator_(self, source);
  JreAssert([((id<OrgApacheLuceneSearchSuggestInputIterator>) nil_chk(source)) hasPayloads] == false, @"org/apache/lucene/search/suggest/fst/WFSTCompletionLookup.java:268 condition failed: assert source.hasPayloads() == false;");
}

OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_WFSTInputIterator *new_OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_WFSTInputIterator_initWithOrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_withOrgApacheLuceneSearchSuggestInputIterator_(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup *outer$, id<OrgApacheLuceneSearchSuggestInputIterator> source) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_WFSTInputIterator, initWithOrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_withOrgApacheLuceneSearchSuggestInputIterator_, outer$, source)
}

OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_WFSTInputIterator *create_OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_WFSTInputIterator_initWithOrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_withOrgApacheLuceneSearchSuggestInputIterator_(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup *outer$, id<OrgApacheLuceneSearchSuggestInputIterator> source) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_WFSTInputIterator, initWithOrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_withOrgApacheLuceneSearchSuggestInputIterator_, outer$, source)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_WFSTInputIterator)

@implementation OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)compareWithId:(JavaLangLong *)left
               withId:(JavaLangLong *)right {
  return [((JavaLangLong *) nil_chk(left)) compareToWithId:right];
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compare", "LJavaLangLong;LJavaLangLong;", "LOrgApacheLuceneSearchSuggestFstWFSTCompletionLookup;", "Ljava/lang/Object;Ljava/util/Comparator<Ljava/lang/Long;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_1 = { "", "org.apache.lucene.search.suggest.fst", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, -1, 3, -1 };
  return &_OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_1;
}

@end

void OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_1_init(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_1 *self) {
  NSObject_init(self);
}

OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_1 *new_OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_1_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_1, init)
}

OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_1 *create_OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_1_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestFstWFSTCompletionLookup_1, init)
}
