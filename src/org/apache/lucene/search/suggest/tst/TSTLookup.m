//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./suggest/src/java/org/apache/lucene/search/suggest/tst/TSTLookup.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/CharSequence.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/util/ArrayList.h"
#include "java/util/Comparator.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "org/apache/lucene/search/suggest/InputIterator.h"
#include "org/apache/lucene/search/suggest/Lookup.h"
#include "org/apache/lucene/search/suggest/SortedInputIterator.h"
#include "org/apache/lucene/search/suggest/tst/TSTAutocomplete.h"
#include "org/apache/lucene/search/suggest/tst/TSTLookup.h"
#include "org/apache/lucene/search/suggest/tst/TernaryTreeNode.h"
#include "org/apache/lucene/store/DataInput.h"
#include "org/apache/lucene/store/DataOutput.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/CharsRefBuilder.h"
#include "org/apache/lucene/util/RamUsageEstimator.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/suggest/tst/TSTLookup must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchSuggestTstTSTLookup () {
 @public
  /*!
   @brief Number of entries the lookup was built with
   */
  jlong count_;
}

+ (jboolean)charSeqEqualsWithJavaLangCharSequence:(id<JavaLangCharSequence>)left
                         withJavaLangCharSequence:(id<JavaLangCharSequence>)right;

- (void)readRecursivelyWithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)inArg
      withOrgApacheLuceneSearchSuggestTstTernaryTreeNode:(OrgApacheLuceneSearchSuggestTstTernaryTreeNode *)node;

- (void)writeRecursivelyWithOrgApacheLuceneStoreDataOutput:(OrgApacheLuceneStoreDataOutput *)outArg
        withOrgApacheLuceneSearchSuggestTstTernaryTreeNode:(OrgApacheLuceneSearchSuggestTstTernaryTreeNode *)node;

@end

inline jbyte OrgApacheLuceneSearchSuggestTstTSTLookup_get_LO_KID(void);
#define OrgApacheLuceneSearchSuggestTstTSTLookup_LO_KID 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneSearchSuggestTstTSTLookup, LO_KID, jbyte)

inline jbyte OrgApacheLuceneSearchSuggestTstTSTLookup_get_EQ_KID(void);
#define OrgApacheLuceneSearchSuggestTstTSTLookup_EQ_KID 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneSearchSuggestTstTSTLookup, EQ_KID, jbyte)

inline jbyte OrgApacheLuceneSearchSuggestTstTSTLookup_get_HI_KID(void);
#define OrgApacheLuceneSearchSuggestTstTSTLookup_HI_KID 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneSearchSuggestTstTSTLookup, HI_KID, jbyte)

inline jbyte OrgApacheLuceneSearchSuggestTstTSTLookup_get_HAS_TOKEN(void);
#define OrgApacheLuceneSearchSuggestTstTSTLookup_HAS_TOKEN 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneSearchSuggestTstTSTLookup, HAS_TOKEN, jbyte)

inline jbyte OrgApacheLuceneSearchSuggestTstTSTLookup_get_HAS_VALUE(void);
#define OrgApacheLuceneSearchSuggestTstTSTLookup_HAS_VALUE 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneSearchSuggestTstTSTLookup, HAS_VALUE, jbyte)

__attribute__((unused)) static jboolean OrgApacheLuceneSearchSuggestTstTSTLookup_charSeqEqualsWithJavaLangCharSequence_withJavaLangCharSequence_(id<JavaLangCharSequence> left, id<JavaLangCharSequence> right);

__attribute__((unused)) static void OrgApacheLuceneSearchSuggestTstTSTLookup_readRecursivelyWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneSearchSuggestTstTernaryTreeNode_(OrgApacheLuceneSearchSuggestTstTSTLookup *self, OrgApacheLuceneStoreDataInput *inArg, OrgApacheLuceneSearchSuggestTstTernaryTreeNode *node);

__attribute__((unused)) static void OrgApacheLuceneSearchSuggestTstTSTLookup_writeRecursivelyWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneSearchSuggestTstTernaryTreeNode_(OrgApacheLuceneSearchSuggestTstTSTLookup *self, OrgApacheLuceneStoreDataOutput *outArg, OrgApacheLuceneSearchSuggestTstTernaryTreeNode *node);

@implementation OrgApacheLuceneSearchSuggestTstTSTLookup

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchSuggestTstTSTLookup_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)buildWithOrgApacheLuceneSearchSuggestInputIterator:(id<OrgApacheLuceneSearchSuggestInputIterator>)iterator {
  if ([((id<OrgApacheLuceneSearchSuggestInputIterator>) nil_chk(iterator)) hasPayloads]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"this suggester doesn't support payloads");
  }
  if ([iterator hasContexts]) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"this suggester doesn't support contexts");
  }
  JreStrongAssignAndConsume(&root_, new_OrgApacheLuceneSearchSuggestTstTernaryTreeNode_init());
  iterator = create_OrgApacheLuceneSearchSuggestSortedInputIterator_initWithOrgApacheLuceneSearchSuggestInputIterator_withJavaUtilComparator_(iterator, OrgApacheLuceneUtilBytesRef_getUTF8SortedAsUTF16Comparator());
  count_ = 0;
  JavaUtilArrayList *tokens = create_JavaUtilArrayList_init();
  JavaUtilArrayList *vals = create_JavaUtilArrayList_init();
  OrgApacheLuceneUtilBytesRef *spare;
  OrgApacheLuceneUtilCharsRefBuilder *charsSpare = create_OrgApacheLuceneUtilCharsRefBuilder_init();
  while ((spare = [iterator next]) != nil) {
    [charsSpare copyUTF8BytesWithOrgApacheLuceneUtilBytesRef:spare];
    [tokens addWithId:[charsSpare description]];
    [vals addWithId:JavaLangLong_valueOfWithLong_([iterator weight])];
    count_++;
  }
  [((OrgApacheLuceneSearchSuggestTstTSTAutocomplete *) nil_chk(autocomplete_)) balancedTreeWithNSObjectArray:[tokens toArray] withNSObjectArray:[vals toArray] withInt:0 withInt:[tokens size] - 1 withOrgApacheLuceneSearchSuggestTstTernaryTreeNode:root_];
}

- (jboolean)addWithJavaLangCharSequence:(id<JavaLangCharSequence>)key
                                 withId:(id)value {
  [((OrgApacheLuceneSearchSuggestTstTSTAutocomplete *) nil_chk(autocomplete_)) insertWithOrgApacheLuceneSearchSuggestTstTernaryTreeNode:root_ withJavaLangCharSequence:key withId:value withInt:0];
  return true;
}

- (id)getWithJavaLangCharSequence:(id<JavaLangCharSequence>)key {
  id<JavaUtilList> list = JreRetainedLocalValue([((OrgApacheLuceneSearchSuggestTstTSTAutocomplete *) nil_chk(autocomplete_)) prefixCompletionWithOrgApacheLuceneSearchSuggestTstTernaryTreeNode:root_ withJavaLangCharSequence:key withInt:0]);
  if (list == nil || [list isEmpty]) {
    return nil;
  }
  for (OrgApacheLuceneSearchSuggestTstTernaryTreeNode * __strong n in list) {
    if (OrgApacheLuceneSearchSuggestTstTSTLookup_charSeqEqualsWithJavaLangCharSequence_withJavaLangCharSequence_(((OrgApacheLuceneSearchSuggestTstTernaryTreeNode *) nil_chk(n))->token_, key)) {
      return n->val_;
    }
  }
  return nil;
}

+ (jboolean)charSeqEqualsWithJavaLangCharSequence:(id<JavaLangCharSequence>)left
                         withJavaLangCharSequence:(id<JavaLangCharSequence>)right {
  return OrgApacheLuceneSearchSuggestTstTSTLookup_charSeqEqualsWithJavaLangCharSequence_withJavaLangCharSequence_(left, right);
}

- (id<JavaUtilList>)lookupWithJavaLangCharSequence:(id<JavaLangCharSequence>)key
                                   withJavaUtilSet:(id<JavaUtilSet>)contexts
                                       withBoolean:(jboolean)onlyMorePopular
                                           withInt:(jint)num {
  if (contexts != nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"this suggester doesn't support contexts");
  }
  id<JavaUtilList> list = JreRetainedLocalValue([((OrgApacheLuceneSearchSuggestTstTSTAutocomplete *) nil_chk(autocomplete_)) prefixCompletionWithOrgApacheLuceneSearchSuggestTstTernaryTreeNode:root_ withJavaLangCharSequence:key withInt:0]);
  id<JavaUtilList> res = create_JavaUtilArrayList_init();
  if (list == nil || [list size] == 0) {
    return res;
  }
  jint maxCnt = JavaLangMath_minWithInt_withInt_(num, [list size]);
  if (onlyMorePopular) {
    OrgApacheLuceneSearchSuggestLookup_LookupPriorityQueue *queue = create_OrgApacheLuceneSearchSuggestLookup_LookupPriorityQueue_initWithInt_(num);
    for (OrgApacheLuceneSearchSuggestTstTernaryTreeNode * __strong ttn in list) {
      [queue insertWithOverflowWithId:create_OrgApacheLuceneSearchSuggestLookup_LookupResult_initWithJavaLangCharSequence_withLong_(((OrgApacheLuceneSearchSuggestTstTernaryTreeNode *) nil_chk(ttn))->token_, [((NSNumber *) nil_chk(((NSNumber *) cast_chk(ttn->val_, [NSNumber class])))) longLongValue])];
    }
    {
      IOSObjectArray *a__ = [queue getResults];
      OrgApacheLuceneSearchSuggestLookup_LookupResult * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      OrgApacheLuceneSearchSuggestLookup_LookupResult * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        OrgApacheLuceneSearchSuggestLookup_LookupResult *lr = *b__++;
        [res addWithId:lr];
      }
    }
  }
  else {
    for (jint i = 0; i < maxCnt; i++) {
      OrgApacheLuceneSearchSuggestTstTernaryTreeNode *ttn = JreRetainedLocalValue([list getWithInt:i]);
      [res addWithId:create_OrgApacheLuceneSearchSuggestLookup_LookupResult_initWithJavaLangCharSequence_withLong_(((OrgApacheLuceneSearchSuggestTstTernaryTreeNode *) nil_chk(ttn))->token_, [((NSNumber *) nil_chk(((NSNumber *) cast_chk(ttn->val_, [NSNumber class])))) longLongValue])];
    }
  }
  return res;
}

- (void)readRecursivelyWithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)inArg
      withOrgApacheLuceneSearchSuggestTstTernaryTreeNode:(OrgApacheLuceneSearchSuggestTstTernaryTreeNode *)node {
  OrgApacheLuceneSearchSuggestTstTSTLookup_readRecursivelyWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneSearchSuggestTstTernaryTreeNode_(self, inArg, node);
}

- (void)writeRecursivelyWithOrgApacheLuceneStoreDataOutput:(OrgApacheLuceneStoreDataOutput *)outArg
        withOrgApacheLuceneSearchSuggestTstTernaryTreeNode:(OrgApacheLuceneSearchSuggestTstTernaryTreeNode *)node {
  OrgApacheLuceneSearchSuggestTstTSTLookup_writeRecursivelyWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneSearchSuggestTstTernaryTreeNode_(self, outArg, node);
}

- (jboolean)storeWithOrgApacheLuceneStoreDataOutput:(OrgApacheLuceneStoreDataOutput *)output {
  @synchronized(self) {
    [((OrgApacheLuceneStoreDataOutput *) nil_chk(output)) writeVLongWithLong:count_];
    OrgApacheLuceneSearchSuggestTstTSTLookup_writeRecursivelyWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneSearchSuggestTstTernaryTreeNode_(self, output, root_);
    return true;
  }
}

- (jboolean)load__WithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)input {
  @synchronized(self) {
    count_ = [((OrgApacheLuceneStoreDataInput *) nil_chk(input)) readVLong];
    JreStrongAssignAndConsume(&root_, new_OrgApacheLuceneSearchSuggestTstTernaryTreeNode_init());
    OrgApacheLuceneSearchSuggestTstTSTLookup_readRecursivelyWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneSearchSuggestTstTernaryTreeNode_(self, input, root_);
    return true;
  }
}

- (jlong)ramBytesUsed {
  jlong mem = OrgApacheLuceneUtilRamUsageEstimator_shallowSizeOfWithId_(self);
  if (root_ != nil) {
    mem += [root_ sizeInBytes];
  }
  return mem;
}

- (jlong)getCount {
  return count_;
}

- (void)dealloc {
  RELEASE_(root_);
  RELEASE_(autocomplete_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 7, 8, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 9, 10, -1, 11, -1, -1 },
    { NULL, "V", 0x2, 12, 13, 2, -1, -1, -1 },
    { NULL, "V", 0x2, 14, 15, 2, -1, -1, -1 },
    { NULL, "Z", 0x21, 16, 17, 2, -1, -1, -1 },
    { NULL, "Z", 0x21, 18, 19, 2, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(buildWithOrgApacheLuceneSearchSuggestInputIterator:);
  methods[2].selector = @selector(addWithJavaLangCharSequence:withId:);
  methods[3].selector = @selector(getWithJavaLangCharSequence:);
  methods[4].selector = @selector(charSeqEqualsWithJavaLangCharSequence:withJavaLangCharSequence:);
  methods[5].selector = @selector(lookupWithJavaLangCharSequence:withJavaUtilSet:withBoolean:withInt:);
  methods[6].selector = @selector(readRecursivelyWithOrgApacheLuceneStoreDataInput:withOrgApacheLuceneSearchSuggestTstTernaryTreeNode:);
  methods[7].selector = @selector(writeRecursivelyWithOrgApacheLuceneStoreDataOutput:withOrgApacheLuceneSearchSuggestTstTernaryTreeNode:);
  methods[8].selector = @selector(storeWithOrgApacheLuceneStoreDataOutput:);
  methods[9].selector = @selector(load__WithOrgApacheLuceneStoreDataInput:);
  methods[10].selector = @selector(ramBytesUsed);
  methods[11].selector = @selector(getCount);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "root_", "LOrgApacheLuceneSearchSuggestTstTernaryTreeNode;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "autocomplete_", "LOrgApacheLuceneSearchSuggestTstTSTAutocomplete;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "count_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "LO_KID", "B", .constantValue.asChar = OrgApacheLuceneSearchSuggestTstTSTLookup_LO_KID, 0x1a, -1, -1, -1, -1 },
    { "EQ_KID", "B", .constantValue.asChar = OrgApacheLuceneSearchSuggestTstTSTLookup_EQ_KID, 0x1a, -1, -1, -1, -1 },
    { "HI_KID", "B", .constantValue.asChar = OrgApacheLuceneSearchSuggestTstTSTLookup_HI_KID, 0x1a, -1, -1, -1, -1 },
    { "HAS_TOKEN", "B", .constantValue.asChar = OrgApacheLuceneSearchSuggestTstTSTLookup_HAS_TOKEN, 0x1a, -1, -1, -1, -1 },
    { "HAS_VALUE", "B", .constantValue.asChar = OrgApacheLuceneSearchSuggestTstTSTLookup_HAS_VALUE, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "build", "LOrgApacheLuceneSearchSuggestInputIterator;", "LJavaIoIOException;", "add", "LJavaLangCharSequence;LNSObject;", "get", "LJavaLangCharSequence;", "charSeqEquals", "LJavaLangCharSequence;LJavaLangCharSequence;", "lookup", "LJavaLangCharSequence;LJavaUtilSet;ZI", "(Ljava/lang/CharSequence;Ljava/util/Set<Lorg/apache/lucene/util/BytesRef;>;ZI)Ljava/util/List<Lorg/apache/lucene/search/suggest/Lookup$LookupResult;>;", "readRecursively", "LOrgApacheLuceneStoreDataInput;LOrgApacheLuceneSearchSuggestTstTernaryTreeNode;", "writeRecursively", "LOrgApacheLuceneStoreDataOutput;LOrgApacheLuceneSearchSuggestTstTernaryTreeNode;", "store", "LOrgApacheLuceneStoreDataOutput;", "load", "LOrgApacheLuceneStoreDataInput;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestTstTSTLookup = { "TSTLookup", "org.apache.lucene.search.suggest.tst", ptrTable, methods, fields, 7, 0x1, 12, 8, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchSuggestTstTSTLookup;
}

@end

void OrgApacheLuceneSearchSuggestTstTSTLookup_init(OrgApacheLuceneSearchSuggestTstTSTLookup *self) {
  OrgApacheLuceneSearchSuggestLookup_init(self);
  JreStrongAssignAndConsume(&self->root_, new_OrgApacheLuceneSearchSuggestTstTernaryTreeNode_init());
  JreStrongAssignAndConsume(&self->autocomplete_, new_OrgApacheLuceneSearchSuggestTstTSTAutocomplete_init());
  self->count_ = 0;
}

OrgApacheLuceneSearchSuggestTstTSTLookup *new_OrgApacheLuceneSearchSuggestTstTSTLookup_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestTstTSTLookup, init)
}

OrgApacheLuceneSearchSuggestTstTSTLookup *create_OrgApacheLuceneSearchSuggestTstTSTLookup_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestTstTSTLookup, init)
}

jboolean OrgApacheLuceneSearchSuggestTstTSTLookup_charSeqEqualsWithJavaLangCharSequence_withJavaLangCharSequence_(id<JavaLangCharSequence> left, id<JavaLangCharSequence> right) {
  OrgApacheLuceneSearchSuggestTstTSTLookup_initialize();
  jint len = [((id<JavaLangCharSequence>) nil_chk(left)) java_length];
  if (len != [((id<JavaLangCharSequence>) nil_chk(right)) java_length]) {
    return false;
  }
  for (jint i = 0; i < len; i++) {
    if ([left charAtWithInt:i] != [right charAtWithInt:i]) {
      return false;
    }
  }
  return true;
}

void OrgApacheLuceneSearchSuggestTstTSTLookup_readRecursivelyWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneSearchSuggestTstTernaryTreeNode_(OrgApacheLuceneSearchSuggestTstTSTLookup *self, OrgApacheLuceneStoreDataInput *inArg, OrgApacheLuceneSearchSuggestTstTernaryTreeNode *node) {
  ((OrgApacheLuceneSearchSuggestTstTernaryTreeNode *) nil_chk(node))->splitchar_ = [((NSString *) nil_chk([((OrgApacheLuceneStoreDataInput *) nil_chk(inArg)) readString])) charAtWithInt:0];
  jbyte mask = [inArg readByte];
  if ((mask & OrgApacheLuceneSearchSuggestTstTSTLookup_HAS_TOKEN) != 0) {
    JreStrongAssign(&node->token_, [inArg readString]);
  }
  if ((mask & OrgApacheLuceneSearchSuggestTstTSTLookup_HAS_VALUE) != 0) {
    JreStrongAssign(&node->val_, JavaLangLong_valueOfWithLong_([inArg readLong]));
  }
  if ((mask & OrgApacheLuceneSearchSuggestTstTSTLookup_LO_KID) != 0) {
    JreStrongAssignAndConsume(&node->loKid_, new_OrgApacheLuceneSearchSuggestTstTernaryTreeNode_init());
    OrgApacheLuceneSearchSuggestTstTSTLookup_readRecursivelyWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneSearchSuggestTstTernaryTreeNode_(self, inArg, node->loKid_);
  }
  if ((mask & OrgApacheLuceneSearchSuggestTstTSTLookup_EQ_KID) != 0) {
    JreStrongAssignAndConsume(&node->eqKid_, new_OrgApacheLuceneSearchSuggestTstTernaryTreeNode_init());
    OrgApacheLuceneSearchSuggestTstTSTLookup_readRecursivelyWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneSearchSuggestTstTernaryTreeNode_(self, inArg, node->eqKid_);
  }
  if ((mask & OrgApacheLuceneSearchSuggestTstTSTLookup_HI_KID) != 0) {
    JreStrongAssignAndConsume(&node->hiKid_, new_OrgApacheLuceneSearchSuggestTstTernaryTreeNode_init());
    OrgApacheLuceneSearchSuggestTstTSTLookup_readRecursivelyWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneSearchSuggestTstTernaryTreeNode_(self, inArg, node->hiKid_);
  }
}

void OrgApacheLuceneSearchSuggestTstTSTLookup_writeRecursivelyWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneSearchSuggestTstTernaryTreeNode_(OrgApacheLuceneSearchSuggestTstTSTLookup *self, OrgApacheLuceneStoreDataOutput *outArg, OrgApacheLuceneSearchSuggestTstTernaryTreeNode *node) {
  [((OrgApacheLuceneStoreDataOutput *) nil_chk(outArg)) writeStringWithNSString:[NSString java_stringWithCharacters:[IOSCharArray arrayWithChars:(jchar[]){ ((OrgApacheLuceneSearchSuggestTstTernaryTreeNode *) nil_chk(node))->splitchar_ } count:1] offset:0 length:1]];
  jbyte mask = 0;
  if (node->eqKid_ != nil) mask |= OrgApacheLuceneSearchSuggestTstTSTLookup_EQ_KID;
  if (node->loKid_ != nil) mask |= OrgApacheLuceneSearchSuggestTstTSTLookup_LO_KID;
  if (node->hiKid_ != nil) mask |= OrgApacheLuceneSearchSuggestTstTSTLookup_HI_KID;
  if (node->token_ != nil) mask |= OrgApacheLuceneSearchSuggestTstTSTLookup_HAS_TOKEN;
  if (node->val_ != nil) mask |= OrgApacheLuceneSearchSuggestTstTSTLookup_HAS_VALUE;
  [outArg writeByteWithByte:mask];
  if (node->token_ != nil) [outArg writeStringWithNSString:node->token_];
  if (node->val_ != nil) [outArg writeLongWithLong:[((NSNumber *) cast_chk(node->val_, [NSNumber class])) longLongValue]];
  if (node->loKid_ != nil) {
    OrgApacheLuceneSearchSuggestTstTSTLookup_writeRecursivelyWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneSearchSuggestTstTernaryTreeNode_(self, outArg, node->loKid_);
  }
  if (node->eqKid_ != nil) {
    OrgApacheLuceneSearchSuggestTstTSTLookup_writeRecursivelyWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneSearchSuggestTstTernaryTreeNode_(self, outArg, node->eqKid_);
  }
  if (node->hiKid_ != nil) {
    OrgApacheLuceneSearchSuggestTstTSTLookup_writeRecursivelyWithOrgApacheLuceneStoreDataOutput_withOrgApacheLuceneSearchSuggestTstTernaryTreeNode_(self, outArg, node->hiKid_);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSuggestTstTSTLookup)
