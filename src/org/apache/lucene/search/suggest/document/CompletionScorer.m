//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./suggest/src/java/org/apache/lucene/search/suggest/document/CompletionScorer.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/search/BulkScorer.h"
#include "org/apache/lucene/search/LeafCollector.h"
#include "org/apache/lucene/search/suggest/document/CompletionScorer.h"
#include "org/apache/lucene/search/suggest/document/CompletionWeight.h"
#include "org/apache/lucene/search/suggest/document/NRTSuggester.h"
#include "org/apache/lucene/search/suggest/document/TopSuggestDocsCollector.h"
#include "org/apache/lucene/util/Bits.h"
#include "org/apache/lucene/util/automaton/Automaton.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/suggest/document/CompletionScorer must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchSuggestDocumentCompletionScorer () {
 @public
  OrgApacheLuceneSearchSuggestDocumentNRTSuggester *suggester_;
  id<OrgApacheLuceneUtilBits> filterDocs_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestDocumentCompletionScorer, suggester_, OrgApacheLuceneSearchSuggestDocumentNRTSuggester *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestDocumentCompletionScorer, filterDocs_, id<OrgApacheLuceneUtilBits>)

@implementation OrgApacheLuceneSearchSuggestDocumentCompletionScorer

- (instancetype)initWithOrgApacheLuceneSearchSuggestDocumentCompletionWeight:(OrgApacheLuceneSearchSuggestDocumentCompletionWeight *)weight
                        withOrgApacheLuceneSearchSuggestDocumentNRTSuggester:(OrgApacheLuceneSearchSuggestDocumentNRTSuggester *)suggester
                                          withOrgApacheLuceneIndexLeafReader:(OrgApacheLuceneIndexLeafReader *)reader
                                                 withOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)filterDocs
                                                                 withBoolean:(jboolean)filtered
                                   withOrgApacheLuceneUtilAutomatonAutomaton:(OrgApacheLuceneUtilAutomatonAutomaton *)automaton {
  OrgApacheLuceneSearchSuggestDocumentCompletionScorer_initWithOrgApacheLuceneSearchSuggestDocumentCompletionWeight_withOrgApacheLuceneSearchSuggestDocumentNRTSuggester_withOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withBoolean_withOrgApacheLuceneUtilAutomatonAutomaton_(self, weight, suggester, reader, filterDocs, filtered, automaton);
  return self;
}

- (jint)scoreWithOrgApacheLuceneSearchLeafCollector:(id<OrgApacheLuceneSearchLeafCollector>)collector
                        withOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)acceptDocs
                                            withInt:(jint)min
                                            withInt:(jint)max {
  if (!([collector isKindOfClass:[OrgApacheLuceneSearchSuggestDocumentTopSuggestDocsCollector class]])) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"collector is not of type TopSuggestDocsCollector");
  }
  [((OrgApacheLuceneSearchSuggestDocumentNRTSuggester *) nil_chk(suggester_)) lookupWithOrgApacheLuceneSearchSuggestDocumentCompletionScorer:self withOrgApacheLuceneUtilBits:acceptDocs withOrgApacheLuceneSearchSuggestDocumentTopSuggestDocsCollector:((OrgApacheLuceneSearchSuggestDocumentTopSuggestDocsCollector *) cast_chk(collector, [OrgApacheLuceneSearchSuggestDocumentTopSuggestDocsCollector class]))];
  return max;
}

- (jlong)cost {
  return 0;
}

- (jboolean)acceptWithInt:(jint)docID
withOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)liveDocs {
  return (filterDocs_ == nil || [filterDocs_ getWithInt:docID]) && (liveDocs == nil || [liveDocs getWithInt:docID]);
}

- (jfloat)scoreWithFloat:(jfloat)weight
               withFloat:(jfloat)boost {
  if (boost == 0.0f) {
    return weight;
  }
  if (weight == 0.0f) {
    return boost;
  }
  return weight * boost;
}

- (void)dealloc {
  RELEASE_(suggester_);
  RELEASE_(filterDocs_);
  RELEASE_(weight_);
  RELEASE_(reader_);
  RELEASE_(automaton_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, 1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, 3, 1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, 4, 5, -1, -1, -1, -1 },
    { NULL, "F", 0x1, 2, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchSuggestDocumentCompletionWeight:withOrgApacheLuceneSearchSuggestDocumentNRTSuggester:withOrgApacheLuceneIndexLeafReader:withOrgApacheLuceneUtilBits:withBoolean:withOrgApacheLuceneUtilAutomatonAutomaton:);
  methods[1].selector = @selector(scoreWithOrgApacheLuceneSearchLeafCollector:withOrgApacheLuceneUtilBits:withInt:withInt:);
  methods[2].selector = @selector(cost);
  methods[3].selector = @selector(acceptWithInt:withOrgApacheLuceneUtilBits:);
  methods[4].selector = @selector(scoreWithFloat:withFloat:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "suggester_", "LOrgApacheLuceneSearchSuggestDocumentNRTSuggester;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "filterDocs_", "LOrgApacheLuceneUtilBits;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "weight_", "LOrgApacheLuceneSearchSuggestDocumentCompletionWeight;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "reader_", "LOrgApacheLuceneIndexLeafReader;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "filtered_", "Z", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "automaton_", "LOrgApacheLuceneUtilAutomatonAutomaton;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchSuggestDocumentCompletionWeight;LOrgApacheLuceneSearchSuggestDocumentNRTSuggester;LOrgApacheLuceneIndexLeafReader;LOrgApacheLuceneUtilBits;ZLOrgApacheLuceneUtilAutomatonAutomaton;", "LJavaIoIOException;", "score", "LOrgApacheLuceneSearchLeafCollector;LOrgApacheLuceneUtilBits;II", "accept", "ILOrgApacheLuceneUtilBits;", "FF" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestDocumentCompletionScorer = { "CompletionScorer", "org.apache.lucene.search.suggest.document", ptrTable, methods, fields, 7, 0x1, 5, 6, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchSuggestDocumentCompletionScorer;
}

@end

void OrgApacheLuceneSearchSuggestDocumentCompletionScorer_initWithOrgApacheLuceneSearchSuggestDocumentCompletionWeight_withOrgApacheLuceneSearchSuggestDocumentNRTSuggester_withOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withBoolean_withOrgApacheLuceneUtilAutomatonAutomaton_(OrgApacheLuceneSearchSuggestDocumentCompletionScorer *self, OrgApacheLuceneSearchSuggestDocumentCompletionWeight *weight, OrgApacheLuceneSearchSuggestDocumentNRTSuggester *suggester, OrgApacheLuceneIndexLeafReader *reader, id<OrgApacheLuceneUtilBits> filterDocs, jboolean filtered, OrgApacheLuceneUtilAutomatonAutomaton *automaton) {
  OrgApacheLuceneSearchBulkScorer_init(self);
  JreStrongAssign(&self->weight_, weight);
  JreStrongAssign(&self->suggester_, suggester);
  JreStrongAssign(&self->reader_, reader);
  JreStrongAssign(&self->automaton_, automaton);
  self->filtered_ = filtered;
  JreStrongAssign(&self->filterDocs_, filterDocs);
}

OrgApacheLuceneSearchSuggestDocumentCompletionScorer *new_OrgApacheLuceneSearchSuggestDocumentCompletionScorer_initWithOrgApacheLuceneSearchSuggestDocumentCompletionWeight_withOrgApacheLuceneSearchSuggestDocumentNRTSuggester_withOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withBoolean_withOrgApacheLuceneUtilAutomatonAutomaton_(OrgApacheLuceneSearchSuggestDocumentCompletionWeight *weight, OrgApacheLuceneSearchSuggestDocumentNRTSuggester *suggester, OrgApacheLuceneIndexLeafReader *reader, id<OrgApacheLuceneUtilBits> filterDocs, jboolean filtered, OrgApacheLuceneUtilAutomatonAutomaton *automaton) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestDocumentCompletionScorer, initWithOrgApacheLuceneSearchSuggestDocumentCompletionWeight_withOrgApacheLuceneSearchSuggestDocumentNRTSuggester_withOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withBoolean_withOrgApacheLuceneUtilAutomatonAutomaton_, weight, suggester, reader, filterDocs, filtered, automaton)
}

OrgApacheLuceneSearchSuggestDocumentCompletionScorer *create_OrgApacheLuceneSearchSuggestDocumentCompletionScorer_initWithOrgApacheLuceneSearchSuggestDocumentCompletionWeight_withOrgApacheLuceneSearchSuggestDocumentNRTSuggester_withOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withBoolean_withOrgApacheLuceneUtilAutomatonAutomaton_(OrgApacheLuceneSearchSuggestDocumentCompletionWeight *weight, OrgApacheLuceneSearchSuggestDocumentNRTSuggester *suggester, OrgApacheLuceneIndexLeafReader *reader, id<OrgApacheLuceneUtilBits> filterDocs, jboolean filtered, OrgApacheLuceneUtilAutomatonAutomaton *automaton) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestDocumentCompletionScorer, initWithOrgApacheLuceneSearchSuggestDocumentCompletionWeight_withOrgApacheLuceneSearchSuggestDocumentNRTSuggester_withOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneUtilBits_withBoolean_withOrgApacheLuceneUtilAutomatonAutomaton_, weight, suggester, reader, filterDocs, filtered, automaton)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSuggestDocumentCompletionScorer)
