//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./suggest/src/java/org/apache/lucene/search/suggest/UnsortedInputIterator.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/util/List.h"
#include "java/util/Random.h"
#include "java/util/Set.h"
#include "org/apache/lucene/search/suggest/BufferedInputIterator.h"
#include "org/apache/lucene/search/suggest/InputIterator.h"
#include "org/apache/lucene/search/suggest/UnsortedInputIterator.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefArray.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/suggest/UnsortedInputIterator must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchSuggestUnsortedInputIterator () {
 @public
  IOSIntArray *ords_;
  jint currentOrd_;
  OrgApacheLuceneUtilBytesRefBuilder *spare_UnsortedInputIterator_;
  OrgApacheLuceneUtilBytesRefBuilder *payloadSpare_UnsortedInputIterator_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestUnsortedInputIterator, ords_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestUnsortedInputIterator, spare_UnsortedInputIterator_, OrgApacheLuceneUtilBytesRefBuilder *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestUnsortedInputIterator, payloadSpare_UnsortedInputIterator_, OrgApacheLuceneUtilBytesRefBuilder *)

@implementation OrgApacheLuceneSearchSuggestUnsortedInputIterator

- (instancetype)initWithOrgApacheLuceneSearchSuggestInputIterator:(id<OrgApacheLuceneSearchSuggestInputIterator>)source {
  OrgApacheLuceneSearchSuggestUnsortedInputIterator_initWithOrgApacheLuceneSearchSuggestInputIterator_(self, source);
  return self;
}

- (jlong)weight {
  JreAssert(currentOrd_ == IOSIntArray_Get(nil_chk(ords_), curPos_), @"org/apache/lucene/search/suggest/UnsortedInputIterator.java:59 condition failed: assert currentOrd == ords[curPos];");
  return IOSLongArray_Get(nil_chk(freqs_), currentOrd_);
}

- (OrgApacheLuceneUtilBytesRef *)next {
  if (++curPos_ < [((OrgApacheLuceneUtilBytesRefArray *) nil_chk(entries_)) size]) {
    currentOrd_ = IOSIntArray_Get(nil_chk(ords_), curPos_);
    return [((OrgApacheLuceneUtilBytesRefArray *) nil_chk(entries_)) getWithOrgApacheLuceneUtilBytesRefBuilder:spare_UnsortedInputIterator_ withInt:currentOrd_];
  }
  return nil;
}

- (OrgApacheLuceneUtilBytesRef *)payload {
  if ([self hasPayloads] && curPos_ < [((OrgApacheLuceneUtilBytesRefArray *) nil_chk(payloads_)) size]) {
    JreAssert(currentOrd_ == IOSIntArray_Get(nil_chk(ords_), curPos_), @"org/apache/lucene/search/suggest/UnsortedInputIterator.java:75 condition failed: assert currentOrd == ords[curPos];");
    return [((OrgApacheLuceneUtilBytesRefArray *) nil_chk(payloads_)) getWithOrgApacheLuceneUtilBytesRefBuilder:payloadSpare_UnsortedInputIterator_ withInt:currentOrd_];
  }
  return nil;
}

- (id<JavaUtilSet>)contexts {
  if ([self hasContexts] && curPos_ < [((id<JavaUtilList>) nil_chk(contextSets_)) size]) {
    JreAssert(currentOrd_ == IOSIntArray_Get(nil_chk(ords_), curPos_), @"org/apache/lucene/search/suggest/UnsortedInputIterator.java:84 condition failed: assert currentOrd == ords[curPos];");
    return [((id<JavaUtilList>) nil_chk(contextSets_)) getWithInt:currentOrd_];
  }
  return nil;
}

- (void)dealloc {
  RELEASE_(ords_);
  RELEASE_(spare_UnsortedInputIterator_);
  RELEASE_(payloadSpare_UnsortedInputIterator_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRef;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBytesRef;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchSuggestInputIterator:);
  methods[1].selector = @selector(weight);
  methods[2].selector = @selector(next);
  methods[3].selector = @selector(payload);
  methods[4].selector = @selector(contexts);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ords_", "[I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "currentOrd_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "spare_UnsortedInputIterator_", "LOrgApacheLuceneUtilBytesRefBuilder;", .constantValue.asLong = 0, 0x12, 3, -1, -1, -1 },
    { "payloadSpare_UnsortedInputIterator_", "LOrgApacheLuceneUtilBytesRefBuilder;", .constantValue.asLong = 0, 0x12, 4, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchSuggestInputIterator;", "LJavaIoIOException;", "()Ljava/util/Set<Lorg/apache/lucene/util/BytesRef;>;", "spare", "payloadSpare" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestUnsortedInputIterator = { "UnsortedInputIterator", "org.apache.lucene.search.suggest", ptrTable, methods, fields, 7, 0x1, 5, 4, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchSuggestUnsortedInputIterator;
}

@end

void OrgApacheLuceneSearchSuggestUnsortedInputIterator_initWithOrgApacheLuceneSearchSuggestInputIterator_(OrgApacheLuceneSearchSuggestUnsortedInputIterator *self, id<OrgApacheLuceneSearchSuggestInputIterator> source) {
  OrgApacheLuceneSearchSuggestBufferedInputIterator_initWithOrgApacheLuceneSearchSuggestInputIterator_(self, source);
  self->currentOrd_ = -1;
  JreStrongAssignAndConsume(&self->spare_UnsortedInputIterator_, new_OrgApacheLuceneUtilBytesRefBuilder_init());
  JreStrongAssignAndConsume(&self->payloadSpare_UnsortedInputIterator_, new_OrgApacheLuceneUtilBytesRefBuilder_init());
  JreStrongAssignAndConsume(&self->ords_, [IOSIntArray newArrayWithLength:[((OrgApacheLuceneUtilBytesRefArray *) nil_chk(self->entries_)) size]]);
  JavaUtilRandom *random = create_JavaUtilRandom_init();
  for (jint i = 0; i < self->ords_->size_; i++) {
    *IOSIntArray_GetRef(self->ords_, i) = i;
  }
  for (jint i = 0; i < self->ords_->size_; i++) {
    jint randomPosition = [random nextIntWithInt:self->ords_->size_];
    jint temp = IOSIntArray_Get(self->ords_, i);
    *IOSIntArray_GetRef(self->ords_, i) = IOSIntArray_Get(self->ords_, randomPosition);
    *IOSIntArray_GetRef(self->ords_, randomPosition) = temp;
  }
}

OrgApacheLuceneSearchSuggestUnsortedInputIterator *new_OrgApacheLuceneSearchSuggestUnsortedInputIterator_initWithOrgApacheLuceneSearchSuggestInputIterator_(id<OrgApacheLuceneSearchSuggestInputIterator> source) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSuggestUnsortedInputIterator, initWithOrgApacheLuceneSearchSuggestInputIterator_, source)
}

OrgApacheLuceneSearchSuggestUnsortedInputIterator *create_OrgApacheLuceneSearchSuggestUnsortedInputIterator_initWithOrgApacheLuceneSearchSuggestInputIterator_(id<OrgApacheLuceneSearchSuggestInputIterator> source) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSuggestUnsortedInputIterator, initWithOrgApacheLuceneSearchSuggestInputIterator_, source)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSuggestUnsortedInputIterator)
