//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./suggest/src/java/org/apache/lucene/search/suggest/BitsProducer.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/search/suggest/BitsProducer.h"
#include "org/apache/lucene/util/Bits.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/suggest/BitsProducer must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneSearchSuggestBitsProducer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchSuggestBitsProducer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id<OrgApacheLuceneUtilBits>)getBitsWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBits;", 0x401, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getBitsWithOrgApacheLuceneIndexLeafReaderContext:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getBits", "LOrgApacheLuceneIndexLeafReaderContext;", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSuggestBitsProducer = { "BitsProducer", "org.apache.lucene.search.suggest", ptrTable, methods, NULL, 7, 0x401, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchSuggestBitsProducer;
}

@end

void OrgApacheLuceneSearchSuggestBitsProducer_init(OrgApacheLuceneSearchSuggestBitsProducer *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSuggestBitsProducer)
