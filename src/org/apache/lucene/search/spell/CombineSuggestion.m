//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./suggest/src/java/org/apache/lucene/search/spell/CombineSuggestion.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/search/spell/CombineSuggestion.h"
#include "org/apache/lucene/search/spell/SuggestWord.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/spell/CombineSuggestion must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneSearchSpellCombineSuggestion

- (instancetype)initWithOrgApacheLuceneSearchSpellSuggestWord:(OrgApacheLuceneSearchSpellSuggestWord *)suggestion
                                                 withIntArray:(IOSIntArray *)originalTermIndexes {
  OrgApacheLuceneSearchSpellCombineSuggestion_initWithOrgApacheLuceneSearchSpellSuggestWord_withIntArray_(self, suggestion, originalTermIndexes);
  return self;
}

- (void)dealloc {
  RELEASE_(originalTermIndexes_);
  RELEASE_(suggestion_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchSpellSuggestWord:withIntArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "originalTermIndexes_", "[I", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "suggestion_", "LOrgApacheLuceneSearchSpellSuggestWord;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchSpellSuggestWord;[I" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSpellCombineSuggestion = { "CombineSuggestion", "org.apache.lucene.search.spell", ptrTable, methods, fields, 7, 0x1, 1, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchSpellCombineSuggestion;
}

@end

void OrgApacheLuceneSearchSpellCombineSuggestion_initWithOrgApacheLuceneSearchSpellSuggestWord_withIntArray_(OrgApacheLuceneSearchSpellCombineSuggestion *self, OrgApacheLuceneSearchSpellSuggestWord *suggestion, IOSIntArray *originalTermIndexes) {
  NSObject_init(self);
  JreStrongAssign(&self->suggestion_, suggestion);
  JreStrongAssign(&self->originalTermIndexes_, originalTermIndexes);
}

OrgApacheLuceneSearchSpellCombineSuggestion *new_OrgApacheLuceneSearchSpellCombineSuggestion_initWithOrgApacheLuceneSearchSpellSuggestWord_withIntArray_(OrgApacheLuceneSearchSpellSuggestWord *suggestion, IOSIntArray *originalTermIndexes) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSpellCombineSuggestion, initWithOrgApacheLuceneSearchSpellSuggestWord_withIntArray_, suggestion, originalTermIndexes)
}

OrgApacheLuceneSearchSpellCombineSuggestion *create_OrgApacheLuceneSearchSpellCombineSuggestion_initWithOrgApacheLuceneSearchSpellSuggestWord_withIntArray_(OrgApacheLuceneSearchSpellSuggestWord *suggestion, IOSIntArray *originalTermIndexes) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSpellCombineSuggestion, initWithOrgApacheLuceneSearchSpellSuggestWord_withIntArray_, suggestion, originalTermIndexes)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSpellCombineSuggestion)
