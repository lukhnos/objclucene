//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./suggest/src/java/org/apache/lucene/search/spell/SuggestWordQueue.java
//

#include "J2ObjC_source.h"
#include "java/util/Comparator.h"
#include "org/apache/lucene/search/spell/SuggestWord.h"
#include "org/apache/lucene/search/spell/SuggestWordQueue.h"
#include "org/apache/lucene/search/spell/SuggestWordScoreComparator.h"
#include "org/apache/lucene/util/PriorityQueue.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/spell/SuggestWordQueue must not be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface OrgApacheLuceneSearchSpellSuggestWordQueue () {
 @public
  id<JavaUtilComparator> comparator_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSpellSuggestWordQueue, comparator_, id<JavaUtilComparator>)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchSpellSuggestWordQueue)

id<JavaUtilComparator> OrgApacheLuceneSearchSpellSuggestWordQueue_DEFAULT_COMPARATOR;

@implementation OrgApacheLuceneSearchSpellSuggestWordQueue

+ (id<JavaUtilComparator>)DEFAULT_COMPARATOR {
  return OrgApacheLuceneSearchSpellSuggestWordQueue_DEFAULT_COMPARATOR;
}

- (instancetype)initWithInt:(jint)size {
  OrgApacheLuceneSearchSpellSuggestWordQueue_initWithInt_(self, size);
  return self;
}

- (instancetype)initWithInt:(jint)size
     withJavaUtilComparator:(id<JavaUtilComparator>)comparator {
  OrgApacheLuceneSearchSpellSuggestWordQueue_initWithInt_withJavaUtilComparator_(self, size, comparator);
  return self;
}

- (jboolean)lessThanWithId:(OrgApacheLuceneSearchSpellSuggestWord *)wa
                    withId:(OrgApacheLuceneSearchSpellSuggestWord *)wb {
  jint val = [((id<JavaUtilComparator>) nil_chk(comparator_)) compareWithId:wa withId:wb];
  return val < 0;
}

- (void)dealloc {
  RELEASE_(comparator_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, 2, -1, -1 },
    { NULL, "Z", 0x14, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(initWithInt:withJavaUtilComparator:);
  methods[2].selector = @selector(lessThanWithId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_COMPARATOR", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x19, -1, 5, 6, -1 },
    { "comparator_", "LJavaUtilComparator;", .constantValue.asLong = 0, 0x2, -1, -1, 6, -1 },
  };
  static const void *ptrTable[] = { "I", "ILJavaUtilComparator;", "(ILjava/util/Comparator<Lorg/apache/lucene/search/spell/SuggestWord;>;)V", "lessThan", "LOrgApacheLuceneSearchSpellSuggestWord;LOrgApacheLuceneSearchSpellSuggestWord;", &OrgApacheLuceneSearchSpellSuggestWordQueue_DEFAULT_COMPARATOR, "Ljava/util/Comparator<Lorg/apache/lucene/search/spell/SuggestWord;>;", "Lorg/apache/lucene/util/PriorityQueue<Lorg/apache/lucene/search/spell/SuggestWord;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchSpellSuggestWordQueue = { "SuggestWordQueue", "org.apache.lucene.search.spell", ptrTable, methods, fields, 7, 0x11, 3, 2, -1, -1, -1, 7, -1 };
  return &_OrgApacheLuceneSearchSpellSuggestWordQueue;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchSpellSuggestWordQueue class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneSearchSpellSuggestWordQueue_DEFAULT_COMPARATOR, new_OrgApacheLuceneSearchSpellSuggestWordScoreComparator_init());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchSpellSuggestWordQueue)
  }
}

@end

void OrgApacheLuceneSearchSpellSuggestWordQueue_initWithInt_(OrgApacheLuceneSearchSpellSuggestWordQueue *self, jint size) {
  OrgApacheLuceneUtilPriorityQueue_initWithInt_(self, size);
  JreStrongAssign(&self->comparator_, OrgApacheLuceneSearchSpellSuggestWordQueue_DEFAULT_COMPARATOR);
}

OrgApacheLuceneSearchSpellSuggestWordQueue *new_OrgApacheLuceneSearchSpellSuggestWordQueue_initWithInt_(jint size) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSpellSuggestWordQueue, initWithInt_, size)
}

OrgApacheLuceneSearchSpellSuggestWordQueue *create_OrgApacheLuceneSearchSpellSuggestWordQueue_initWithInt_(jint size) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSpellSuggestWordQueue, initWithInt_, size)
}

void OrgApacheLuceneSearchSpellSuggestWordQueue_initWithInt_withJavaUtilComparator_(OrgApacheLuceneSearchSpellSuggestWordQueue *self, jint size, id<JavaUtilComparator> comparator) {
  OrgApacheLuceneUtilPriorityQueue_initWithInt_(self, size);
  JreStrongAssign(&self->comparator_, comparator);
}

OrgApacheLuceneSearchSpellSuggestWordQueue *new_OrgApacheLuceneSearchSpellSuggestWordQueue_initWithInt_withJavaUtilComparator_(jint size, id<JavaUtilComparator> comparator) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchSpellSuggestWordQueue, initWithInt_withJavaUtilComparator_, size, comparator)
}

OrgApacheLuceneSearchSpellSuggestWordQueue *create_OrgApacheLuceneSearchSpellSuggestWordQueue_initWithInt_withJavaUtilComparator_(jint size, id<JavaUtilComparator> comparator) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchSpellSuggestWordQueue, initWithInt_withJavaUtilComparator_, size, comparator)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchSpellSuggestWordQueue)
