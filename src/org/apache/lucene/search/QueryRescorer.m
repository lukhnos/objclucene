//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/QueryRescorer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Float.h"
#include "java/lang/System.h"
#include "java/util/Arrays.h"
#include "java/util/Comparator.h"
#include "java/util/List.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/search/Explanation.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/QueryRescorer.h"
#include "org/apache/lucene/search/Rescorer.h"
#include "org/apache/lucene/search/ScoreDoc.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/TopDocs.h"
#include "org/apache/lucene/search/Weight.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/QueryRescorer must not be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgApacheLuceneSearchQueryRescorer () {
 @public
  OrgApacheLuceneSearchQuery *query_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchQueryRescorer, query_, OrgApacheLuceneSearchQuery *)

@interface OrgApacheLuceneSearchQueryRescorer_1 : NSObject < JavaUtilComparator >

- (instancetype)init;

- (jint)compareWithId:(OrgApacheLuceneSearchScoreDoc *)a
               withId:(OrgApacheLuceneSearchScoreDoc *)b;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchQueryRescorer_1)

__attribute__((unused)) static void OrgApacheLuceneSearchQueryRescorer_1_init(OrgApacheLuceneSearchQueryRescorer_1 *self);

__attribute__((unused)) static OrgApacheLuceneSearchQueryRescorer_1 *new_OrgApacheLuceneSearchQueryRescorer_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchQueryRescorer_1 *create_OrgApacheLuceneSearchQueryRescorer_1_init(void);

@interface OrgApacheLuceneSearchQueryRescorer_2 : NSObject < JavaUtilComparator >

- (instancetype)init;

- (jint)compareWithId:(OrgApacheLuceneSearchScoreDoc *)a
               withId:(OrgApacheLuceneSearchScoreDoc *)b;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchQueryRescorer_2)

__attribute__((unused)) static void OrgApacheLuceneSearchQueryRescorer_2_init(OrgApacheLuceneSearchQueryRescorer_2 *self);

__attribute__((unused)) static OrgApacheLuceneSearchQueryRescorer_2 *new_OrgApacheLuceneSearchQueryRescorer_2_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchQueryRescorer_2 *create_OrgApacheLuceneSearchQueryRescorer_2_init(void);

@interface OrgApacheLuceneSearchQueryRescorer_3 : OrgApacheLuceneSearchQueryRescorer {
 @public
  jdouble val$weight_;
}

- (instancetype)initWithDouble:(jdouble)capture$0
withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query;

- (jfloat)combineWithFloat:(jfloat)firstPassScore
               withBoolean:(jboolean)secondPassMatches
                 withFloat:(jfloat)secondPassScore;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchQueryRescorer_3)

__attribute__((unused)) static void OrgApacheLuceneSearchQueryRescorer_3_initWithDouble_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchQueryRescorer_3 *self, jdouble capture$0, OrgApacheLuceneSearchQuery *query);

__attribute__((unused)) static OrgApacheLuceneSearchQueryRescorer_3 *new_OrgApacheLuceneSearchQueryRescorer_3_initWithDouble_withOrgApacheLuceneSearchQuery_(jdouble capture$0, OrgApacheLuceneSearchQuery *query) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchQueryRescorer_3 *create_OrgApacheLuceneSearchQueryRescorer_3_initWithDouble_withOrgApacheLuceneSearchQuery_(jdouble capture$0, OrgApacheLuceneSearchQuery *query);

@implementation OrgApacheLuceneSearchQueryRescorer

- (instancetype)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query {
  OrgApacheLuceneSearchQueryRescorer_initWithOrgApacheLuceneSearchQuery_(self, query);
  return self;
}

- (jfloat)combineWithFloat:(jfloat)firstPassScore
               withBoolean:(jboolean)secondPassMatches
                 withFloat:(jfloat)secondPassScore {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgApacheLuceneSearchTopDocs *)rescoreWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                               withOrgApacheLuceneSearchTopDocs:(OrgApacheLuceneSearchTopDocs *)firstPassTopDocs
                                                                        withInt:(jint)topN {
  IOSObjectArray *hits = [((IOSObjectArray *) nil_chk(((OrgApacheLuceneSearchTopDocs *) nil_chk(firstPassTopDocs))->scoreDocs_)) java_clone];
  JavaUtilArrays_sortWithNSObjectArray_withJavaUtilComparator_(hits, create_OrgApacheLuceneSearchQueryRescorer_1_init());
  id<JavaUtilList> leaves = JreRetainedLocalValue([((OrgApacheLuceneIndexIndexReader *) nil_chk([((OrgApacheLuceneSearchIndexSearcher *) nil_chk(searcher)) getIndexReader])) leaves]);
  OrgApacheLuceneSearchWeight *weight = JreRetainedLocalValue([searcher createNormalizedWeightWithOrgApacheLuceneSearchQuery:query_ withBoolean:true]);
  jint hitUpto = 0;
  jint readerUpto = -1;
  jint endDoc = 0;
  jint docBase = 0;
  OrgApacheLuceneSearchScorer *scorer = nil;
  while (hitUpto < ((IOSObjectArray *) nil_chk(hits))->size_) {
    OrgApacheLuceneSearchScoreDoc *hit = IOSObjectArray_Get(hits, hitUpto);
    jint docID = ((OrgApacheLuceneSearchScoreDoc *) nil_chk(hit))->doc_;
    OrgApacheLuceneIndexLeafReaderContext *readerContext = nil;
    while (docID >= endDoc) {
      readerUpto++;
      readerContext = [((id<JavaUtilList>) nil_chk(leaves)) getWithInt:readerUpto];
      endDoc = ((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(readerContext))->docBase_ + [((OrgApacheLuceneIndexLeafReader *) nil_chk([readerContext reader])) maxDoc];
    }
    if (readerContext != nil) {
      docBase = readerContext->docBase_;
      scorer = [((OrgApacheLuceneSearchWeight *) nil_chk(weight)) scorerWithOrgApacheLuceneIndexLeafReaderContext:readerContext];
    }
    if (scorer != nil) {
      jint targetDoc = docID - docBase;
      jint actualDoc = [scorer docID];
      if (actualDoc < targetDoc) {
        actualDoc = [scorer advanceWithInt:targetDoc];
      }
      if (actualDoc == targetDoc) {
        hit->score_ = [self combineWithFloat:hit->score_ withBoolean:true withFloat:[scorer score]];
      }
      else {
        JreAssert(actualDoc > targetDoc, @"org/apache/lucene/search/QueryRescorer.java:100 condition failed: assert actualDoc > targetDoc;");
        hit->score_ = [self combineWithFloat:hit->score_ withBoolean:false withFloat:0.0f];
      }
    }
    else {
      hit->score_ = [self combineWithFloat:hit->score_ withBoolean:false withFloat:0.0f];
    }
    hitUpto++;
  }
  JavaUtilArrays_sortWithNSObjectArray_withJavaUtilComparator_(hits, create_OrgApacheLuceneSearchQueryRescorer_2_init());
  if (topN < hits->size_) {
    IOSObjectArray *subset = [IOSObjectArray arrayWithLength:topN type:OrgApacheLuceneSearchScoreDoc_class_()];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(hits, 0, subset, 0, topN);
    hits = subset;
  }
  return create_OrgApacheLuceneSearchTopDocs_initWithInt_withOrgApacheLuceneSearchScoreDocArray_withFloat_(firstPassTopDocs->totalHits_, hits, ((OrgApacheLuceneSearchScoreDoc *) nil_chk(IOSObjectArray_Get(hits, 0)))->score_);
}

- (OrgApacheLuceneSearchExplanation *)explainWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                               withOrgApacheLuceneSearchExplanation:(OrgApacheLuceneSearchExplanation *)firstPassExplanation
                                                                            withInt:(jint)docID {
  OrgApacheLuceneSearchExplanation *secondPassExplanation = JreRetainedLocalValue([((OrgApacheLuceneSearchIndexSearcher *) nil_chk(searcher)) explainWithOrgApacheLuceneSearchQuery:query_ withInt:docID]);
  JavaLangFloat *secondPassScore = [((OrgApacheLuceneSearchExplanation *) nil_chk(secondPassExplanation)) isMatch] ? JavaLangFloat_valueOfWithFloat_([secondPassExplanation getValue]) : nil;
  jfloat score;
  if (secondPassScore == nil) {
    score = [self combineWithFloat:[((OrgApacheLuceneSearchExplanation *) nil_chk(firstPassExplanation)) getValue] withBoolean:false withFloat:0.0f];
  }
  else {
    score = [self combineWithFloat:[((OrgApacheLuceneSearchExplanation *) nil_chk(firstPassExplanation)) getValue] withBoolean:true withFloat:[secondPassScore floatValue]];
  }
  OrgApacheLuceneSearchExplanation *first = OrgApacheLuceneSearchExplanation_matchWithFloat_withNSString_withOrgApacheLuceneSearchExplanationArray_([firstPassExplanation getValue], @"first pass score", [IOSObjectArray arrayWithObjects:(id[]){ firstPassExplanation } count:1 type:OrgApacheLuceneSearchExplanation_class_()]);
  OrgApacheLuceneSearchExplanation *second;
  if (secondPassScore == nil) {
    second = OrgApacheLuceneSearchExplanation_noMatchWithNSString_withOrgApacheLuceneSearchExplanationArray_(@"no second pass score", [IOSObjectArray arrayWithLength:0 type:OrgApacheLuceneSearchExplanation_class_()]);
  }
  else {
    second = OrgApacheLuceneSearchExplanation_matchWithFloat_withNSString_withOrgApacheLuceneSearchExplanationArray_([secondPassScore floatValue], @"second pass score", [IOSObjectArray arrayWithObjects:(id[]){ secondPassExplanation } count:1 type:OrgApacheLuceneSearchExplanation_class_()]);
  }
  return OrgApacheLuceneSearchExplanation_matchWithFloat_withNSString_withOrgApacheLuceneSearchExplanationArray_(score, JreStrcat("$@", @"combined first and second pass score using ", [self java_getClass]), [IOSObjectArray arrayWithObjects:(id[]){ first, second } count:2 type:OrgApacheLuceneSearchExplanation_class_()]);
}

+ (OrgApacheLuceneSearchTopDocs *)rescoreWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                               withOrgApacheLuceneSearchTopDocs:(OrgApacheLuceneSearchTopDocs *)topDocs
                                                 withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
                                                                     withDouble:(jdouble)weight
                                                                        withInt:(jint)topN {
  return OrgApacheLuceneSearchQueryRescorer_rescoreWithOrgApacheLuceneSearchIndexSearcher_withOrgApacheLuceneSearchTopDocs_withOrgApacheLuceneSearchQuery_withDouble_withInt_(searcher, topDocs, query, weight, topN);
}

- (void)dealloc {
  RELEASE_(query_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "F", 0x404, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchTopDocs;", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchExplanation;", 0x1, 6, 7, 5, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchTopDocs;", 0x9, 3, 8, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchQuery:);
  methods[1].selector = @selector(combineWithFloat:withBoolean:withFloat:);
  methods[2].selector = @selector(rescoreWithOrgApacheLuceneSearchIndexSearcher:withOrgApacheLuceneSearchTopDocs:withInt:);
  methods[3].selector = @selector(explainWithOrgApacheLuceneSearchIndexSearcher:withOrgApacheLuceneSearchExplanation:withInt:);
  methods[4].selector = @selector(rescoreWithOrgApacheLuceneSearchIndexSearcher:withOrgApacheLuceneSearchTopDocs:withOrgApacheLuceneSearchQuery:withDouble:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "query_", "LOrgApacheLuceneSearchQuery;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchQuery;", "combine", "FZF", "rescore", "LOrgApacheLuceneSearchIndexSearcher;LOrgApacheLuceneSearchTopDocs;I", "LJavaIoIOException;", "explain", "LOrgApacheLuceneSearchIndexSearcher;LOrgApacheLuceneSearchExplanation;I", "LOrgApacheLuceneSearchIndexSearcher;LOrgApacheLuceneSearchTopDocs;LOrgApacheLuceneSearchQuery;DI" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchQueryRescorer = { "QueryRescorer", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x401, 5, 1, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchQueryRescorer;
}

@end

void OrgApacheLuceneSearchQueryRescorer_initWithOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchQueryRescorer *self, OrgApacheLuceneSearchQuery *query) {
  OrgApacheLuceneSearchRescorer_init(self);
  JreStrongAssign(&self->query_, query);
}

OrgApacheLuceneSearchTopDocs *OrgApacheLuceneSearchQueryRescorer_rescoreWithOrgApacheLuceneSearchIndexSearcher_withOrgApacheLuceneSearchTopDocs_withOrgApacheLuceneSearchQuery_withDouble_withInt_(OrgApacheLuceneSearchIndexSearcher *searcher, OrgApacheLuceneSearchTopDocs *topDocs, OrgApacheLuceneSearchQuery *query, jdouble weight, jint topN) {
  OrgApacheLuceneSearchQueryRescorer_initialize();
  return [create_OrgApacheLuceneSearchQueryRescorer_3_initWithDouble_withOrgApacheLuceneSearchQuery_(weight, query) rescoreWithOrgApacheLuceneSearchIndexSearcher:searcher withOrgApacheLuceneSearchTopDocs:topDocs withInt:topN];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchQueryRescorer)

@implementation OrgApacheLuceneSearchQueryRescorer_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchQueryRescorer_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)compareWithId:(OrgApacheLuceneSearchScoreDoc *)a
               withId:(OrgApacheLuceneSearchScoreDoc *)b {
  return ((OrgApacheLuceneSearchScoreDoc *) nil_chk(a))->doc_ - ((OrgApacheLuceneSearchScoreDoc *) nil_chk(b))->doc_;
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compare", "LOrgApacheLuceneSearchScoreDoc;LOrgApacheLuceneSearchScoreDoc;", "LOrgApacheLuceneSearchQueryRescorer;", "rescoreWithOrgApacheLuceneSearchIndexSearcher:withOrgApacheLuceneSearchTopDocs:withInt:", "Ljava/lang/Object;Ljava/util/Comparator<Lorg/apache/lucene/search/ScoreDoc;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchQueryRescorer_1 = { "", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0x8010, 2, 0, 2, -1, 3, 4, -1 };
  return &_OrgApacheLuceneSearchQueryRescorer_1;
}

@end

void OrgApacheLuceneSearchQueryRescorer_1_init(OrgApacheLuceneSearchQueryRescorer_1 *self) {
  NSObject_init(self);
}

OrgApacheLuceneSearchQueryRescorer_1 *new_OrgApacheLuceneSearchQueryRescorer_1_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchQueryRescorer_1, init)
}

OrgApacheLuceneSearchQueryRescorer_1 *create_OrgApacheLuceneSearchQueryRescorer_1_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchQueryRescorer_1, init)
}

@implementation OrgApacheLuceneSearchQueryRescorer_2

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchQueryRescorer_2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)compareWithId:(OrgApacheLuceneSearchScoreDoc *)a
               withId:(OrgApacheLuceneSearchScoreDoc *)b {
  if (((OrgApacheLuceneSearchScoreDoc *) nil_chk(a))->score_ > ((OrgApacheLuceneSearchScoreDoc *) nil_chk(b))->score_) {
    return -1;
  }
  else if (a->score_ < b->score_) {
    return 1;
  }
  else {
    return a->doc_ - b->doc_;
  }
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "compare", "LOrgApacheLuceneSearchScoreDoc;LOrgApacheLuceneSearchScoreDoc;", "LOrgApacheLuceneSearchQueryRescorer;", "rescoreWithOrgApacheLuceneSearchIndexSearcher:withOrgApacheLuceneSearchTopDocs:withInt:", "Ljava/lang/Object;Ljava/util/Comparator<Lorg/apache/lucene/search/ScoreDoc;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchQueryRescorer_2 = { "", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0x8010, 2, 0, 2, -1, 3, 4, -1 };
  return &_OrgApacheLuceneSearchQueryRescorer_2;
}

@end

void OrgApacheLuceneSearchQueryRescorer_2_init(OrgApacheLuceneSearchQueryRescorer_2 *self) {
  NSObject_init(self);
}

OrgApacheLuceneSearchQueryRescorer_2 *new_OrgApacheLuceneSearchQueryRescorer_2_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchQueryRescorer_2, init)
}

OrgApacheLuceneSearchQueryRescorer_2 *create_OrgApacheLuceneSearchQueryRescorer_2_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchQueryRescorer_2, init)
}

@implementation OrgApacheLuceneSearchQueryRescorer_3

- (instancetype)initWithDouble:(jdouble)capture$0
withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query {
  OrgApacheLuceneSearchQueryRescorer_3_initWithDouble_withOrgApacheLuceneSearchQuery_(self, capture$0, query);
  return self;
}

- (jfloat)combineWithFloat:(jfloat)firstPassScore
               withBoolean:(jboolean)secondPassMatches
                 withFloat:(jfloat)secondPassScore {
  jfloat score = firstPassScore;
  if (secondPassMatches) {
    JrePlusAssignFloatD(&score, val$weight_ * secondPassScore);
  }
  return score;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "F", 0x4, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithDouble:withOrgApacheLuceneSearchQuery:);
  methods[1].selector = @selector(combineWithFloat:withBoolean:withFloat:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$weight_", "D", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "DLOrgApacheLuceneSearchQuery;", "combine", "FZF", "LOrgApacheLuceneSearchQueryRescorer;", "rescoreWithOrgApacheLuceneSearchIndexSearcher:withOrgApacheLuceneSearchTopDocs:withOrgApacheLuceneSearchQuery:withDouble:withInt:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchQueryRescorer_3 = { "", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x8018, 2, 1, 3, -1, 4, -1, -1 };
  return &_OrgApacheLuceneSearchQueryRescorer_3;
}

@end

void OrgApacheLuceneSearchQueryRescorer_3_initWithDouble_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchQueryRescorer_3 *self, jdouble capture$0, OrgApacheLuceneSearchQuery *query) {
  self->val$weight_ = capture$0;
  OrgApacheLuceneSearchQueryRescorer_initWithOrgApacheLuceneSearchQuery_(self, query);
}

OrgApacheLuceneSearchQueryRescorer_3 *new_OrgApacheLuceneSearchQueryRescorer_3_initWithDouble_withOrgApacheLuceneSearchQuery_(jdouble capture$0, OrgApacheLuceneSearchQuery *query) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchQueryRescorer_3, initWithDouble_withOrgApacheLuceneSearchQuery_, capture$0, query)
}

OrgApacheLuceneSearchQueryRescorer_3 *create_OrgApacheLuceneSearchQueryRescorer_3_initWithDouble_withOrgApacheLuceneSearchQuery_(jdouble capture$0, OrgApacheLuceneSearchQuery *query) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchQueryRescorer_3, initWithDouble_withOrgApacheLuceneSearchQuery_, capture$0, query)
}
