//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/FilterCachingPolicy.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/annotation/Annotation.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/IndexReaderContext.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/index/ReaderUtil.h"
#include "org/apache/lucene/search/DocIdSet.h"
#include "org/apache/lucene/search/Filter.h"
#include "org/apache/lucene/search/FilterCachingPolicy.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/FilterCachingPolicy must not be compiled with ARC (-fobjc-arc)"
#endif

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneSearchFilterCachingPolicy__Annotations$0(void);

@interface OrgApacheLuceneSearchFilterCachingPolicy_1 : NSObject < OrgApacheLuceneSearchFilterCachingPolicy >

- (instancetype)init;

- (void)onUseWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter;

- (jboolean)shouldCacheWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
             withOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                     withOrgApacheLuceneSearchDocIdSet:(OrgApacheLuceneSearchDocIdSet *)set;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchFilterCachingPolicy_1)

__attribute__((unused)) static void OrgApacheLuceneSearchFilterCachingPolicy_1_init(OrgApacheLuceneSearchFilterCachingPolicy_1 *self);

__attribute__((unused)) static OrgApacheLuceneSearchFilterCachingPolicy_1 *new_OrgApacheLuceneSearchFilterCachingPolicy_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchFilterCachingPolicy_1 *create_OrgApacheLuceneSearchFilterCachingPolicy_1_init(void);

@interface OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments () {
 @public
  jfloat minSizeRatio_;
}

@end

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchFilterCachingPolicy)

id<OrgApacheLuceneSearchFilterCachingPolicy> OrgApacheLuceneSearchFilterCachingPolicy_ALWAYS_CACHE;

@implementation OrgApacheLuceneSearchFilterCachingPolicy

+ (id<OrgApacheLuceneSearchFilterCachingPolicy>)ALWAYS_CACHE {
  return OrgApacheLuceneSearchFilterCachingPolicy_ALWAYS_CACHE;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "V", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 2, 3, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(onUseWithOrgApacheLuceneSearchFilter:);
  methods[1].selector = @selector(shouldCacheWithOrgApacheLuceneSearchFilter:withOrgApacheLuceneIndexLeafReaderContext:withOrgApacheLuceneSearchDocIdSet:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ALWAYS_CACHE", "LOrgApacheLuceneSearchFilterCachingPolicy;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "onUse", "LOrgApacheLuceneSearchFilter;", "shouldCache", "LOrgApacheLuceneSearchFilter;LOrgApacheLuceneIndexLeafReaderContext;LOrgApacheLuceneSearchDocIdSet;", "LJavaIoIOException;", &OrgApacheLuceneSearchFilterCachingPolicy_ALWAYS_CACHE, "LOrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments;", (void *)&OrgApacheLuceneSearchFilterCachingPolicy__Annotations$0 };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchFilterCachingPolicy = { "FilterCachingPolicy", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x609, 2, 1, -1, 6, -1, -1, 7 };
  return &_OrgApacheLuceneSearchFilterCachingPolicy;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchFilterCachingPolicy class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneSearchFilterCachingPolicy_ALWAYS_CACHE, new_OrgApacheLuceneSearchFilterCachingPolicy_1_init());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchFilterCachingPolicy)
  }
}

@end

IOSObjectArray *OrgApacheLuceneSearchFilterCachingPolicy__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchFilterCachingPolicy)

@implementation OrgApacheLuceneSearchFilterCachingPolicy_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchFilterCachingPolicy_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)onUseWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter {
}

- (jboolean)shouldCacheWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
             withOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                     withOrgApacheLuceneSearchDocIdSet:(OrgApacheLuceneSearchDocIdSet *)set {
  return true;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(onUseWithOrgApacheLuceneSearchFilter:);
  methods[2].selector = @selector(shouldCacheWithOrgApacheLuceneSearchFilter:withOrgApacheLuceneIndexLeafReaderContext:withOrgApacheLuceneSearchDocIdSet:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "onUse", "LOrgApacheLuceneSearchFilter;", "shouldCache", "LOrgApacheLuceneSearchFilter;LOrgApacheLuceneIndexLeafReaderContext;LOrgApacheLuceneSearchDocIdSet;", "LJavaIoIOException;", "LOrgApacheLuceneSearchFilterCachingPolicy;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchFilterCachingPolicy_1 = { "", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0x8018, 3, 0, 5, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchFilterCachingPolicy_1;
}

@end

void OrgApacheLuceneSearchFilterCachingPolicy_1_init(OrgApacheLuceneSearchFilterCachingPolicy_1 *self) {
  NSObject_init(self);
}

OrgApacheLuceneSearchFilterCachingPolicy_1 *new_OrgApacheLuceneSearchFilterCachingPolicy_1_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchFilterCachingPolicy_1, init)
}

OrgApacheLuceneSearchFilterCachingPolicy_1 *create_OrgApacheLuceneSearchFilterCachingPolicy_1_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchFilterCachingPolicy_1, init)
}

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments)

OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments *OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments_DEFAULT;

@implementation OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments

+ (OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments *)DEFAULT {
  return OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments_DEFAULT;
}

- (instancetype)initWithFloat:(jfloat)minSizeRatio {
  OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments_initWithFloat_(self, minSizeRatio);
  return self;
}

- (void)onUseWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter {
}

- (jboolean)shouldCacheWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
             withOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                     withOrgApacheLuceneSearchDocIdSet:(OrgApacheLuceneSearchDocIdSet *)set {
  OrgApacheLuceneIndexIndexReaderContext *topLevelContext = OrgApacheLuceneIndexReaderUtil_getTopLevelContextWithOrgApacheLuceneIndexIndexReaderContext_(context);
  jfloat sizeRatio = (jfloat) [((OrgApacheLuceneIndexLeafReader *) nil_chk([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader])) maxDoc] / [((OrgApacheLuceneIndexIndexReader *) nil_chk([((OrgApacheLuceneIndexIndexReaderContext *) nil_chk(topLevelContext)) reader])) maxDoc];
  return sizeRatio >= minSizeRatio_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithFloat:);
  methods[1].selector = @selector(onUseWithOrgApacheLuceneSearchFilter:);
  methods[2].selector = @selector(shouldCacheWithOrgApacheLuceneSearchFilter:withOrgApacheLuceneIndexLeafReaderContext:withOrgApacheLuceneSearchDocIdSet:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT", "LOrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
    { "minSizeRatio_", "F", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "F", "onUse", "LOrgApacheLuceneSearchFilter;", "shouldCache", "LOrgApacheLuceneSearchFilter;LOrgApacheLuceneIndexLeafReaderContext;LOrgApacheLuceneSearchDocIdSet;", "LJavaIoIOException;", &OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments_DEFAULT, "LOrgApacheLuceneSearchFilterCachingPolicy;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments = { "CacheOnLargeSegments", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x9, 3, 2, 7, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments_DEFAULT, new_OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments_initWithFloat_(0.03f));
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments)
  }
}

@end

void OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments_initWithFloat_(OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments *self, jfloat minSizeRatio) {
  NSObject_init(self);
  if (minSizeRatio <= 0 || minSizeRatio >= 1) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$F", @"minSizeRatio must be in ]0, 1[, got ", minSizeRatio));
  }
  self->minSizeRatio_ = minSizeRatio;
}

OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments *new_OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments_initWithFloat_(jfloat minSizeRatio) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments, initWithFloat_, minSizeRatio)
}

OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments *create_OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments_initWithFloat_(jfloat minSizeRatio) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments, initWithFloat_, minSizeRatio)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchFilterCachingPolicy_CacheOnLargeSegments)
