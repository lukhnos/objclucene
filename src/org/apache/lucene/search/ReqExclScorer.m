//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/ReqExclScorer.java
//

#include "J2ObjC_source.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/Set.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/search/ReqExclScorer.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/TwoPhaseIterator.h"
#include "org/apache/lucene/search/Weight.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/ReqExclScorer must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchReqExclScorer () {
 @public
  OrgApacheLuceneSearchScorer *reqScorer_;
  OrgApacheLuceneSearchDocIdSetIterator *reqApproximation_;
  OrgApacheLuceneSearchDocIdSetIterator *exclApproximation_;
  OrgApacheLuceneSearchTwoPhaseIterator *reqTwoPhaseIterator_;
  OrgApacheLuceneSearchTwoPhaseIterator *exclTwoPhaseIterator_;
}

/*!
 @brief Confirms whether or not the given <code>TwoPhaseIterator</code>
   matches on the current document.
 */
+ (jboolean)matchesWithOrgApacheLuceneSearchTwoPhaseIterator:(OrgApacheLuceneSearchTwoPhaseIterator *)it;

/*!
 @brief Confirm whether there is a match given the current positions of the
   req and excl approximations.This method has 2 important properties:
    - it only calls matches() on excl if the excl approximation is on
      the same doc ID as the req approximation
    - it does NOT call matches() on req if the excl approximation is exact
      and is on the same doc ID as the req approximation
 */
+ (jboolean)matchesWithInt:(jint)doc
                   withInt:(jint)exclDoc
withOrgApacheLuceneSearchTwoPhaseIterator:(OrgApacheLuceneSearchTwoPhaseIterator *)reqTwoPhaseIterator
withOrgApacheLuceneSearchTwoPhaseIterator:(OrgApacheLuceneSearchTwoPhaseIterator *)exclTwoPhaseIterator;

/*!
 @brief Advance to the next non-excluded doc.
 */
- (jint)toNonExcludedWithInt:(jint)doc;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchReqExclScorer, reqScorer_, OrgApacheLuceneSearchScorer *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchReqExclScorer, reqApproximation_, OrgApacheLuceneSearchDocIdSetIterator *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchReqExclScorer, exclApproximation_, OrgApacheLuceneSearchDocIdSetIterator *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchReqExclScorer, reqTwoPhaseIterator_, OrgApacheLuceneSearchTwoPhaseIterator *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchReqExclScorer, exclTwoPhaseIterator_, OrgApacheLuceneSearchTwoPhaseIterator *)

__attribute__((unused)) static jboolean OrgApacheLuceneSearchReqExclScorer_matchesWithOrgApacheLuceneSearchTwoPhaseIterator_(OrgApacheLuceneSearchTwoPhaseIterator *it);

__attribute__((unused)) static jboolean OrgApacheLuceneSearchReqExclScorer_matchesWithInt_withInt_withOrgApacheLuceneSearchTwoPhaseIterator_withOrgApacheLuceneSearchTwoPhaseIterator_(jint doc, jint exclDoc, OrgApacheLuceneSearchTwoPhaseIterator *reqTwoPhaseIterator, OrgApacheLuceneSearchTwoPhaseIterator *exclTwoPhaseIterator);

__attribute__((unused)) static jint OrgApacheLuceneSearchReqExclScorer_toNonExcludedWithInt_(OrgApacheLuceneSearchReqExclScorer *self, jint doc);

@interface OrgApacheLuceneSearchReqExclScorer_1 : OrgApacheLuceneSearchTwoPhaseIterator {
 @public
  OrgApacheLuceneSearchReqExclScorer *this$0_;
}

- (instancetype)initWithOrgApacheLuceneSearchReqExclScorer:(OrgApacheLuceneSearchReqExclScorer *)outer$
                 withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)approximation;

- (jboolean)matches;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchReqExclScorer_1)

__attribute__((unused)) static void OrgApacheLuceneSearchReqExclScorer_1_initWithOrgApacheLuceneSearchReqExclScorer_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchReqExclScorer_1 *self, OrgApacheLuceneSearchReqExclScorer *outer$, OrgApacheLuceneSearchDocIdSetIterator *approximation);

__attribute__((unused)) static OrgApacheLuceneSearchReqExclScorer_1 *new_OrgApacheLuceneSearchReqExclScorer_1_initWithOrgApacheLuceneSearchReqExclScorer_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchReqExclScorer *outer$, OrgApacheLuceneSearchDocIdSetIterator *approximation) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchReqExclScorer_1 *create_OrgApacheLuceneSearchReqExclScorer_1_initWithOrgApacheLuceneSearchReqExclScorer_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchReqExclScorer *outer$, OrgApacheLuceneSearchDocIdSetIterator *approximation);

@implementation OrgApacheLuceneSearchReqExclScorer

- (instancetype)initPackagePrivateWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)reqScorer
                                  withOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)exclScorer {
  OrgApacheLuceneSearchReqExclScorer_initPackagePrivateWithOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchScorer_(self, reqScorer, exclScorer);
  return self;
}

- (jint)nextDoc {
  return OrgApacheLuceneSearchReqExclScorer_toNonExcludedWithInt_(self, [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(reqApproximation_)) nextDoc]);
}

+ (jboolean)matchesWithOrgApacheLuceneSearchTwoPhaseIterator:(OrgApacheLuceneSearchTwoPhaseIterator *)it {
  return OrgApacheLuceneSearchReqExclScorer_matchesWithOrgApacheLuceneSearchTwoPhaseIterator_(it);
}

+ (jboolean)matchesWithInt:(jint)doc
                   withInt:(jint)exclDoc
withOrgApacheLuceneSearchTwoPhaseIterator:(OrgApacheLuceneSearchTwoPhaseIterator *)reqTwoPhaseIterator
withOrgApacheLuceneSearchTwoPhaseIterator:(OrgApacheLuceneSearchTwoPhaseIterator *)exclTwoPhaseIterator {
  return OrgApacheLuceneSearchReqExclScorer_matchesWithInt_withInt_withOrgApacheLuceneSearchTwoPhaseIterator_withOrgApacheLuceneSearchTwoPhaseIterator_(doc, exclDoc, reqTwoPhaseIterator, exclTwoPhaseIterator);
}

- (jint)toNonExcludedWithInt:(jint)doc {
  return OrgApacheLuceneSearchReqExclScorer_toNonExcludedWithInt_(self, doc);
}

- (jint)docID {
  return [((OrgApacheLuceneSearchScorer *) nil_chk(reqScorer_)) docID];
}

- (jint)freq {
  return [((OrgApacheLuceneSearchScorer *) nil_chk(reqScorer_)) freq];
}

- (jlong)cost {
  return [((OrgApacheLuceneSearchScorer *) nil_chk(reqScorer_)) cost];
}

- (jfloat)score {
  return [((OrgApacheLuceneSearchScorer *) nil_chk(reqScorer_)) score];
}

- (id<JavaUtilCollection>)getChildren {
  return JavaUtilCollections_singletonWithId_(create_OrgApacheLuceneSearchScorer_ChildScorer_initWithOrgApacheLuceneSearchScorer_withNSString_(reqScorer_, @"MUST"));
}

- (jint)advanceWithInt:(jint)target {
  return OrgApacheLuceneSearchReqExclScorer_toNonExcludedWithInt_(self, [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(reqApproximation_)) advanceWithInt:target]);
}

- (OrgApacheLuceneSearchTwoPhaseIterator *)asTwoPhaseIterator {
  if (reqTwoPhaseIterator_ == nil) {
    return nil;
  }
  return create_OrgApacheLuceneSearchReqExclScorer_1_initWithOrgApacheLuceneSearchReqExclScorer_withOrgApacheLuceneSearchDocIdSetIterator_(self, reqApproximation_);
}

- (void)dealloc {
  RELEASE_(reqScorer_);
  RELEASE_(reqApproximation_);
  RELEASE_(exclApproximation_);
  RELEASE_(reqTwoPhaseIterator_);
  RELEASE_(exclTwoPhaseIterator_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "Z", 0xa, 2, 3, 1, -1, -1, -1 },
    { NULL, "Z", 0xa, 2, 4, 1, -1, -1, -1 },
    { NULL, "I", 0x2, 5, 6, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, 7, -1, -1 },
    { NULL, "I", 0x1, 8, 6, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchTwoPhaseIterator;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithOrgApacheLuceneSearchScorer:withOrgApacheLuceneSearchScorer:);
  methods[1].selector = @selector(nextDoc);
  methods[2].selector = @selector(matchesWithOrgApacheLuceneSearchTwoPhaseIterator:);
  methods[3].selector = @selector(matchesWithInt:withInt:withOrgApacheLuceneSearchTwoPhaseIterator:withOrgApacheLuceneSearchTwoPhaseIterator:);
  methods[4].selector = @selector(toNonExcludedWithInt:);
  methods[5].selector = @selector(docID);
  methods[6].selector = @selector(freq);
  methods[7].selector = @selector(cost);
  methods[8].selector = @selector(score);
  methods[9].selector = @selector(getChildren);
  methods[10].selector = @selector(advanceWithInt:);
  methods[11].selector = @selector(asTwoPhaseIterator);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "reqScorer_", "LOrgApacheLuceneSearchScorer;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "reqApproximation_", "LOrgApacheLuceneSearchDocIdSetIterator;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "exclApproximation_", "LOrgApacheLuceneSearchDocIdSetIterator;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "reqTwoPhaseIterator_", "LOrgApacheLuceneSearchTwoPhaseIterator;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "exclTwoPhaseIterator_", "LOrgApacheLuceneSearchTwoPhaseIterator;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchScorer;LOrgApacheLuceneSearchScorer;", "LJavaIoIOException;", "matches", "LOrgApacheLuceneSearchTwoPhaseIterator;", "IILOrgApacheLuceneSearchTwoPhaseIterator;LOrgApacheLuceneSearchTwoPhaseIterator;", "toNonExcluded", "I", "()Ljava/util/Collection<Lorg/apache/lucene/search/Scorer$ChildScorer;>;", "advance" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchReqExclScorer = { "ReqExclScorer", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x0, 12, 5, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchReqExclScorer;
}

@end

void OrgApacheLuceneSearchReqExclScorer_initPackagePrivateWithOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchScorer_(OrgApacheLuceneSearchReqExclScorer *self, OrgApacheLuceneSearchScorer *reqScorer, OrgApacheLuceneSearchScorer *exclScorer) {
  OrgApacheLuceneSearchScorer_initWithOrgApacheLuceneSearchWeight_(self, ((OrgApacheLuceneSearchScorer *) nil_chk(reqScorer))->weight_);
  JreStrongAssign(&self->reqScorer_, reqScorer);
  JreStrongAssign(&self->reqTwoPhaseIterator_, [reqScorer asTwoPhaseIterator]);
  if (self->reqTwoPhaseIterator_ == nil) {
    JreStrongAssign(&self->reqApproximation_, reqScorer);
  }
  else {
    JreStrongAssign(&self->reqApproximation_, [self->reqTwoPhaseIterator_ approximation]);
  }
  JreStrongAssign(&self->exclTwoPhaseIterator_, [((OrgApacheLuceneSearchScorer *) nil_chk(exclScorer)) asTwoPhaseIterator]);
  if (self->exclTwoPhaseIterator_ == nil) {
    JreStrongAssign(&self->exclApproximation_, exclScorer);
  }
  else {
    JreStrongAssign(&self->exclApproximation_, [self->exclTwoPhaseIterator_ approximation]);
  }
}

OrgApacheLuceneSearchReqExclScorer *new_OrgApacheLuceneSearchReqExclScorer_initPackagePrivateWithOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchScorer_(OrgApacheLuceneSearchScorer *reqScorer, OrgApacheLuceneSearchScorer *exclScorer) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchReqExclScorer, initPackagePrivateWithOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchScorer_, reqScorer, exclScorer)
}

OrgApacheLuceneSearchReqExclScorer *create_OrgApacheLuceneSearchReqExclScorer_initPackagePrivateWithOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchScorer_(OrgApacheLuceneSearchScorer *reqScorer, OrgApacheLuceneSearchScorer *exclScorer) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchReqExclScorer, initPackagePrivateWithOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchScorer_, reqScorer, exclScorer)
}

jboolean OrgApacheLuceneSearchReqExclScorer_matchesWithOrgApacheLuceneSearchTwoPhaseIterator_(OrgApacheLuceneSearchTwoPhaseIterator *it) {
  OrgApacheLuceneSearchReqExclScorer_initialize();
  return it == nil || [it matches];
}

jboolean OrgApacheLuceneSearchReqExclScorer_matchesWithInt_withInt_withOrgApacheLuceneSearchTwoPhaseIterator_withOrgApacheLuceneSearchTwoPhaseIterator_(jint doc, jint exclDoc, OrgApacheLuceneSearchTwoPhaseIterator *reqTwoPhaseIterator, OrgApacheLuceneSearchTwoPhaseIterator *exclTwoPhaseIterator) {
  OrgApacheLuceneSearchReqExclScorer_initialize();
  JreAssert(exclDoc >= doc, @"org/apache/lucene/search/ReqExclScorer.java:81 condition failed: assert exclDoc >= doc;");
  if (doc == exclDoc && OrgApacheLuceneSearchReqExclScorer_matchesWithOrgApacheLuceneSearchTwoPhaseIterator_(exclTwoPhaseIterator)) {
    return false;
  }
  return OrgApacheLuceneSearchReqExclScorer_matchesWithOrgApacheLuceneSearchTwoPhaseIterator_(reqTwoPhaseIterator);
}

jint OrgApacheLuceneSearchReqExclScorer_toNonExcludedWithInt_(OrgApacheLuceneSearchReqExclScorer *self, jint doc) {
  jint exclDoc = [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(self->exclApproximation_)) docID];
  for (; ; doc = [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(self->reqApproximation_)) nextDoc]) {
    if (doc == OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS) {
      return OrgApacheLuceneSearchDocIdSetIterator_NO_MORE_DOCS;
    }
    if (exclDoc < doc) {
      exclDoc = [self->exclApproximation_ advanceWithInt:doc];
    }
    if (OrgApacheLuceneSearchReqExclScorer_matchesWithInt_withInt_withOrgApacheLuceneSearchTwoPhaseIterator_withOrgApacheLuceneSearchTwoPhaseIterator_(doc, exclDoc, self->reqTwoPhaseIterator_, self->exclTwoPhaseIterator_)) {
      return doc;
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchReqExclScorer)

@implementation OrgApacheLuceneSearchReqExclScorer_1

- (instancetype)initWithOrgApacheLuceneSearchReqExclScorer:(OrgApacheLuceneSearchReqExclScorer *)outer$
                 withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)approximation {
  OrgApacheLuceneSearchReqExclScorer_1_initWithOrgApacheLuceneSearchReqExclScorer_withOrgApacheLuceneSearchDocIdSetIterator_(self, outer$, approximation);
  return self;
}

- (jboolean)matches {
  jint doc = [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(this$0_->reqApproximation_)) docID];
  jint exclDoc = [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(this$0_->exclApproximation_)) docID];
  if (exclDoc < doc) {
    exclDoc = [this$0_->exclApproximation_ advanceWithInt:doc];
  }
  return OrgApacheLuceneSearchReqExclScorer_matchesWithInt_withInt_withOrgApacheLuceneSearchTwoPhaseIterator_withOrgApacheLuceneSearchTwoPhaseIterator_(doc, exclDoc, this$0_->reqTwoPhaseIterator_, this$0_->exclTwoPhaseIterator_);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchReqExclScorer:withOrgApacheLuceneSearchDocIdSetIterator:);
  methods[1].selector = @selector(matches);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneSearchReqExclScorer;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchReqExclScorer;LOrgApacheLuceneSearchDocIdSetIterator;", "LJavaIoIOException;", "LOrgApacheLuceneSearchReqExclScorer;", "asTwoPhaseIterator" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchReqExclScorer_1 = { "", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x8010, 2, 1, 2, -1, 3, -1, -1 };
  return &_OrgApacheLuceneSearchReqExclScorer_1;
}

@end

void OrgApacheLuceneSearchReqExclScorer_1_initWithOrgApacheLuceneSearchReqExclScorer_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchReqExclScorer_1 *self, OrgApacheLuceneSearchReqExclScorer *outer$, OrgApacheLuceneSearchDocIdSetIterator *approximation) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneSearchTwoPhaseIterator_initWithOrgApacheLuceneSearchDocIdSetIterator_(self, approximation);
}

OrgApacheLuceneSearchReqExclScorer_1 *new_OrgApacheLuceneSearchReqExclScorer_1_initWithOrgApacheLuceneSearchReqExclScorer_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchReqExclScorer *outer$, OrgApacheLuceneSearchDocIdSetIterator *approximation) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchReqExclScorer_1, initWithOrgApacheLuceneSearchReqExclScorer_withOrgApacheLuceneSearchDocIdSetIterator_, outer$, approximation)
}

OrgApacheLuceneSearchReqExclScorer_1 *create_OrgApacheLuceneSearchReqExclScorer_1_initWithOrgApacheLuceneSearchReqExclScorer_withOrgApacheLuceneSearchDocIdSetIterator_(OrgApacheLuceneSearchReqExclScorer *outer$, OrgApacheLuceneSearchDocIdSetIterator *approximation) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchReqExclScorer_1, initWithOrgApacheLuceneSearchReqExclScorer_withOrgApacheLuceneSearchDocIdSetIterator_, outer$, approximation)
}
