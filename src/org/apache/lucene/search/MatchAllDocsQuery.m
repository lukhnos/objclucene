//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/MatchAllDocsQuery.java
//

#include "J2ObjC_source.h"
#include "java/lang/StringBuilder.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/search/MatchAllDocsQuery.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/RandomAccessWeight.h"
#include "org/apache/lucene/search/Weight.h"
#include "org/apache/lucene/util/Bits.h"
#include "org/apache/lucene/util/ToStringUtils.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/MatchAllDocsQuery must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneSearchMatchAllDocsQuery_1 : OrgApacheLuceneSearchRandomAccessWeight {
 @public
  OrgApacheLuceneSearchMatchAllDocsQuery *this$0_;
}

- (instancetype)initWithOrgApacheLuceneSearchMatchAllDocsQuery:(OrgApacheLuceneSearchMatchAllDocsQuery *)outer$
                                withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query;

- (id<OrgApacheLuceneUtilBits>)getMatchingDocsWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchMatchAllDocsQuery_1)

__attribute__((unused)) static void OrgApacheLuceneSearchMatchAllDocsQuery_1_initWithOrgApacheLuceneSearchMatchAllDocsQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchMatchAllDocsQuery_1 *self, OrgApacheLuceneSearchMatchAllDocsQuery *outer$, OrgApacheLuceneSearchQuery *query);

__attribute__((unused)) static OrgApacheLuceneSearchMatchAllDocsQuery_1 *new_OrgApacheLuceneSearchMatchAllDocsQuery_1_initWithOrgApacheLuceneSearchMatchAllDocsQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchMatchAllDocsQuery *outer$, OrgApacheLuceneSearchQuery *query) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchMatchAllDocsQuery_1 *create_OrgApacheLuceneSearchMatchAllDocsQuery_1_initWithOrgApacheLuceneSearchMatchAllDocsQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchMatchAllDocsQuery *outer$, OrgApacheLuceneSearchQuery *query);

@implementation OrgApacheLuceneSearchMatchAllDocsQuery

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchMatchAllDocsQuery_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgApacheLuceneSearchWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                        withBoolean:(jboolean)needsScores {
  return create_OrgApacheLuceneSearchMatchAllDocsQuery_1_initWithOrgApacheLuceneSearchMatchAllDocsQuery_withOrgApacheLuceneSearchQuery_(self, self);
}

- (NSString *)toStringWithNSString:(NSString *)field {
  JavaLangStringBuilder *buffer = create_JavaLangStringBuilder_init();
  [buffer appendWithNSString:@"*:*"];
  [buffer appendWithNSString:OrgApacheLuceneUtilToStringUtils_boostWithFloat_([self getBoost])];
  return [buffer description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchWeight;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(createWeightWithOrgApacheLuceneSearchIndexSearcher:withBoolean:);
  methods[2].selector = @selector(toStringWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "createWeight", "LOrgApacheLuceneSearchIndexSearcher;Z", "toString", "LNSString;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchMatchAllDocsQuery = { "MatchAllDocsQuery", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0x11, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchMatchAllDocsQuery;
}

@end

void OrgApacheLuceneSearchMatchAllDocsQuery_init(OrgApacheLuceneSearchMatchAllDocsQuery *self) {
  OrgApacheLuceneSearchQuery_init(self);
}

OrgApacheLuceneSearchMatchAllDocsQuery *new_OrgApacheLuceneSearchMatchAllDocsQuery_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchMatchAllDocsQuery, init)
}

OrgApacheLuceneSearchMatchAllDocsQuery *create_OrgApacheLuceneSearchMatchAllDocsQuery_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchMatchAllDocsQuery, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchMatchAllDocsQuery)

@implementation OrgApacheLuceneSearchMatchAllDocsQuery_1

- (instancetype)initWithOrgApacheLuceneSearchMatchAllDocsQuery:(OrgApacheLuceneSearchMatchAllDocsQuery *)outer$
                                withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query {
  OrgApacheLuceneSearchMatchAllDocsQuery_1_initWithOrgApacheLuceneSearchMatchAllDocsQuery_withOrgApacheLuceneSearchQuery_(self, outer$, query);
  return self;
}

- (id<OrgApacheLuceneUtilBits>)getMatchingDocsWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context {
  return create_OrgApacheLuceneUtilBits_MatchAllBits_initWithInt_([((OrgApacheLuceneIndexLeafReader *) nil_chk([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader])) maxDoc]);
}

- (NSString *)description {
  return JreStrcat("$@C", @"weight(", this$0_, ')');
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilBits;", 0x4, 1, 2, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchMatchAllDocsQuery:withOrgApacheLuceneSearchQuery:);
  methods[1].selector = @selector(getMatchingDocsWithOrgApacheLuceneIndexLeafReaderContext:);
  methods[2].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneSearchMatchAllDocsQuery;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchMatchAllDocsQuery;LOrgApacheLuceneSearchQuery;", "getMatchingDocs", "LOrgApacheLuceneIndexLeafReaderContext;", "LJavaIoIOException;", "toString", "LOrgApacheLuceneSearchMatchAllDocsQuery;", "createWeightWithOrgApacheLuceneSearchIndexSearcher:withBoolean:" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchMatchAllDocsQuery_1 = { "", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x8010, 3, 1, 5, -1, 6, -1, -1 };
  return &_OrgApacheLuceneSearchMatchAllDocsQuery_1;
}

@end

void OrgApacheLuceneSearchMatchAllDocsQuery_1_initWithOrgApacheLuceneSearchMatchAllDocsQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchMatchAllDocsQuery_1 *self, OrgApacheLuceneSearchMatchAllDocsQuery *outer$, OrgApacheLuceneSearchQuery *query) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneSearchRandomAccessWeight_initWithOrgApacheLuceneSearchQuery_(self, query);
}

OrgApacheLuceneSearchMatchAllDocsQuery_1 *new_OrgApacheLuceneSearchMatchAllDocsQuery_1_initWithOrgApacheLuceneSearchMatchAllDocsQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchMatchAllDocsQuery *outer$, OrgApacheLuceneSearchQuery *query) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchMatchAllDocsQuery_1, initWithOrgApacheLuceneSearchMatchAllDocsQuery_withOrgApacheLuceneSearchQuery_, outer$, query)
}

OrgApacheLuceneSearchMatchAllDocsQuery_1 *create_OrgApacheLuceneSearchMatchAllDocsQuery_1_initWithOrgApacheLuceneSearchMatchAllDocsQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchMatchAllDocsQuery *outer$, OrgApacheLuceneSearchQuery *query) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchMatchAllDocsQuery_1, initWithOrgApacheLuceneSearchMatchAllDocsQuery_withOrgApacheLuceneSearchQuery_, outer$, query)
}
