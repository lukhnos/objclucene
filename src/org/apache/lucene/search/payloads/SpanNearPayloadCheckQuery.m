//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/payloads/SpanNearPayloadCheckQuery.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Collection.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/payloads/SpanNearPayloadCheckQuery.h"
#include "org/apache/lucene/search/payloads/SpanPayloadCheckQuery.h"
#include "org/apache/lucene/search/spans/SpanNearQuery.h"
#include "org/apache/lucene/search/spans/SpanQuery.h"
#include "org/apache/lucene/util/ToStringUtils.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/payloads/SpanNearPayloadCheckQuery must not be compiled with ARC (-fobjc-arc)"
#endif

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery__Annotations$0(void);

@implementation OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery

- (instancetype)initWithOrgApacheLuceneSearchSpansSpanNearQuery:(OrgApacheLuceneSearchSpansSpanNearQuery *)match
                                         withJavaUtilCollection:(id<JavaUtilCollection>)payloadToMatch {
  OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery_initWithOrgApacheLuceneSearchSpansSpanNearQuery_withJavaUtilCollection_(self, match, payloadToMatch);
  return self;
}

- (NSString *)toStringWithNSString:(NSString *)field {
  JavaLangStringBuilder *buffer = create_JavaLangStringBuilder_init();
  [buffer appendWithNSString:@"spanPayCheck("];
  [buffer appendWithNSString:[((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(match_)) toStringWithNSString:field]];
  [buffer appendWithNSString:@", payloadRef: "];
  for (IOSByteArray * __strong bytes in nil_chk(payloadToMatch_)) {
    OrgApacheLuceneUtilToStringUtils_byteArrayWithJavaLangStringBuilder_withByteArray_(buffer, bytes);
    [buffer appendWithChar:';'];
  }
  [buffer appendWithNSString:@")"];
  [buffer appendWithNSString:OrgApacheLuceneUtilToStringUtils_boostWithFloat_([self getBoost])];
  return [buffer description];
}

- (OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery *)java_clone {
  OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery *result = create_OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery_initWithOrgApacheLuceneSearchSpansSpanNearQuery_withJavaUtilCollection_((OrgApacheLuceneSearchSpansSpanNearQuery *) cast_chk([((OrgApacheLuceneSearchSpansSpanQuery *) nil_chk(match_)) java_clone], [OrgApacheLuceneSearchSpansSpanNearQuery class]), payloadToMatch_);
  [result setBoostWithFloat:[self getBoost]];
  return result;
}

- (jboolean)isEqual:(id)o {
  if (![super isEqual:o]) {
    return false;
  }
  OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery *other = (OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery *) cast_chk(o, [OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery class]);
  return [((id<JavaUtilCollection>) nil_chk(self->payloadToMatch_)) isEqual:((OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery *) nil_chk(other))->payloadToMatch_];
}

- (NSUInteger)hash {
  jint h = ((jint) [super hash]);
  h = (h * 15) ^ ((jint) [((id<JavaUtilCollection>) nil_chk(payloadToMatch_)) hash]);
  return h;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery;", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchSpansSpanNearQuery:withJavaUtilCollection:);
  methods[1].selector = @selector(toStringWithNSString:);
  methods[2].selector = @selector(java_clone);
  methods[3].selector = @selector(isEqual:);
  methods[4].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchSpansSpanNearQuery;LJavaUtilCollection;", "(Lorg/apache/lucene/search/spans/SpanNearQuery;Ljava/util/Collection<[B>;)V", "toString", "LNSString;", "clone", "equals", "LNSObject;", "hashCode", (void *)&OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery__Annotations$0 };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery = { "SpanNearPayloadCheckQuery", "org.apache.lucene.search.payloads", ptrTable, methods, NULL, 7, 0x1, 5, 0, -1, -1, -1, -1, 8 };
  return &_OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery;
}

@end

void OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery_initWithOrgApacheLuceneSearchSpansSpanNearQuery_withJavaUtilCollection_(OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery *self, OrgApacheLuceneSearchSpansSpanNearQuery *match, id<JavaUtilCollection> payloadToMatch) {
  OrgApacheLuceneSearchPayloadsSpanPayloadCheckQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_withJavaUtilCollection_(self, match, payloadToMatch);
}

OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery *new_OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery_initWithOrgApacheLuceneSearchSpansSpanNearQuery_withJavaUtilCollection_(OrgApacheLuceneSearchSpansSpanNearQuery *match, id<JavaUtilCollection> payloadToMatch) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery, initWithOrgApacheLuceneSearchSpansSpanNearQuery_withJavaUtilCollection_, match, payloadToMatch)
}

OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery *create_OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery_initWithOrgApacheLuceneSearchSpansSpanNearQuery_withJavaUtilCollection_(OrgApacheLuceneSearchSpansSpanNearQuery *match, id<JavaUtilCollection> payloadToMatch) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery, initWithOrgApacheLuceneSearchSpansSpanNearQuery_withJavaUtilCollection_, match, payloadToMatch)
}

IOSObjectArray *OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchPayloadsSpanNearPayloadCheckQuery)
