//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/RegexpQuery.java
//

#include "J2ObjC_source.h"
#include "java/lang/StringBuilder.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/search/AutomatonQuery.h"
#include "org/apache/lucene/search/RegexpQuery.h"
#include "org/apache/lucene/util/ToStringUtils.h"
#include "org/apache/lucene/util/automaton/Automaton.h"
#include "org/apache/lucene/util/automaton/AutomatonProvider.h"
#include "org/apache/lucene/util/automaton/Operations.h"
#include "org/apache/lucene/util/automaton/RegExp.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/search/RegexpQuery must not be compiled with ARC (-fobjc-arc)"
#endif

/*!
 @brief A provider that provides no named automata
 */
inline id<OrgApacheLuceneUtilAutomatonAutomatonProvider> OrgApacheLuceneSearchRegexpQuery_get_defaultProvider(void);
inline id<OrgApacheLuceneUtilAutomatonAutomatonProvider> OrgApacheLuceneSearchRegexpQuery_set_defaultProvider(id<OrgApacheLuceneUtilAutomatonAutomatonProvider> value);
static id<OrgApacheLuceneUtilAutomatonAutomatonProvider> OrgApacheLuceneSearchRegexpQuery_defaultProvider;
J2OBJC_STATIC_FIELD_OBJ(OrgApacheLuceneSearchRegexpQuery, defaultProvider, id<OrgApacheLuceneUtilAutomatonAutomatonProvider>)

@interface OrgApacheLuceneSearchRegexpQuery_1 : NSObject < OrgApacheLuceneUtilAutomatonAutomatonProvider >

- (instancetype)init;

- (OrgApacheLuceneUtilAutomatonAutomaton *)getAutomatonWithNSString:(NSString *)name;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchRegexpQuery_1)

__attribute__((unused)) static void OrgApacheLuceneSearchRegexpQuery_1_init(OrgApacheLuceneSearchRegexpQuery_1 *self);

__attribute__((unused)) static OrgApacheLuceneSearchRegexpQuery_1 *new_OrgApacheLuceneSearchRegexpQuery_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneSearchRegexpQuery_1 *create_OrgApacheLuceneSearchRegexpQuery_1_init(void);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneSearchRegexpQuery)

@implementation OrgApacheLuceneSearchRegexpQuery

- (instancetype)initWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term {
  OrgApacheLuceneSearchRegexpQuery_initWithOrgApacheLuceneIndexTerm_(self, term);
  return self;
}

- (instancetype)initWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
                                         withInt:(jint)flags {
  OrgApacheLuceneSearchRegexpQuery_initWithOrgApacheLuceneIndexTerm_withInt_(self, term, flags);
  return self;
}

- (instancetype)initWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
                                         withInt:(jint)flags
                                         withInt:(jint)maxDeterminizedStates {
  OrgApacheLuceneSearchRegexpQuery_initWithOrgApacheLuceneIndexTerm_withInt_withInt_(self, term, flags, maxDeterminizedStates);
  return self;
}

- (instancetype)initWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
                                         withInt:(jint)flags
withOrgApacheLuceneUtilAutomatonAutomatonProvider:(id<OrgApacheLuceneUtilAutomatonAutomatonProvider>)provider
                                         withInt:(jint)maxDeterminizedStates {
  OrgApacheLuceneSearchRegexpQuery_initWithOrgApacheLuceneIndexTerm_withInt_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(self, term, flags, provider, maxDeterminizedStates);
  return self;
}

- (NSString *)toStringWithNSString:(NSString *)field {
  JavaLangStringBuilder *buffer = create_JavaLangStringBuilder_init();
  if (![((NSString *) nil_chk([((OrgApacheLuceneIndexTerm *) nil_chk(term_)) field])) isEqual:field]) {
    [buffer appendWithNSString:[term_ field]];
    [buffer appendWithNSString:@":"];
  }
  [buffer appendWithChar:'/'];
  [buffer appendWithNSString:[term_ text]];
  [buffer appendWithChar:'/'];
  [buffer appendWithNSString:OrgApacheLuceneUtilToStringUtils_boostWithFloat_([self getBoost])];
  return [buffer description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, 5, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneIndexTerm:);
  methods[1].selector = @selector(initWithOrgApacheLuceneIndexTerm:withInt:);
  methods[2].selector = @selector(initWithOrgApacheLuceneIndexTerm:withInt:withInt:);
  methods[3].selector = @selector(initWithOrgApacheLuceneIndexTerm:withInt:withOrgApacheLuceneUtilAutomatonAutomatonProvider:withInt:);
  methods[4].selector = @selector(toStringWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "defaultProvider", "LOrgApacheLuceneUtilAutomatonAutomatonProvider;", .constantValue.asLong = 0, 0xa, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneIndexTerm;", "LOrgApacheLuceneIndexTerm;I", "LOrgApacheLuceneIndexTerm;II", "LOrgApacheLuceneIndexTerm;ILOrgApacheLuceneUtilAutomatonAutomatonProvider;I", "toString", "LNSString;", &OrgApacheLuceneSearchRegexpQuery_defaultProvider };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchRegexpQuery = { "RegexpQuery", "org.apache.lucene.search", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchRegexpQuery;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneSearchRegexpQuery class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneSearchRegexpQuery_defaultProvider, new_OrgApacheLuceneSearchRegexpQuery_1_init());
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneSearchRegexpQuery)
  }
}

@end

void OrgApacheLuceneSearchRegexpQuery_initWithOrgApacheLuceneIndexTerm_(OrgApacheLuceneSearchRegexpQuery *self, OrgApacheLuceneIndexTerm *term) {
  OrgApacheLuceneSearchRegexpQuery_initWithOrgApacheLuceneIndexTerm_withInt_(self, term, OrgApacheLuceneUtilAutomatonRegExp_ALL);
}

OrgApacheLuceneSearchRegexpQuery *new_OrgApacheLuceneSearchRegexpQuery_initWithOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexTerm *term) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchRegexpQuery, initWithOrgApacheLuceneIndexTerm_, term)
}

OrgApacheLuceneSearchRegexpQuery *create_OrgApacheLuceneSearchRegexpQuery_initWithOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexTerm *term) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchRegexpQuery, initWithOrgApacheLuceneIndexTerm_, term)
}

void OrgApacheLuceneSearchRegexpQuery_initWithOrgApacheLuceneIndexTerm_withInt_(OrgApacheLuceneSearchRegexpQuery *self, OrgApacheLuceneIndexTerm *term, jint flags) {
  OrgApacheLuceneSearchRegexpQuery_initWithOrgApacheLuceneIndexTerm_withInt_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(self, term, flags, OrgApacheLuceneSearchRegexpQuery_defaultProvider, OrgApacheLuceneUtilAutomatonOperations_DEFAULT_MAX_DETERMINIZED_STATES);
}

OrgApacheLuceneSearchRegexpQuery *new_OrgApacheLuceneSearchRegexpQuery_initWithOrgApacheLuceneIndexTerm_withInt_(OrgApacheLuceneIndexTerm *term, jint flags) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchRegexpQuery, initWithOrgApacheLuceneIndexTerm_withInt_, term, flags)
}

OrgApacheLuceneSearchRegexpQuery *create_OrgApacheLuceneSearchRegexpQuery_initWithOrgApacheLuceneIndexTerm_withInt_(OrgApacheLuceneIndexTerm *term, jint flags) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchRegexpQuery, initWithOrgApacheLuceneIndexTerm_withInt_, term, flags)
}

void OrgApacheLuceneSearchRegexpQuery_initWithOrgApacheLuceneIndexTerm_withInt_withInt_(OrgApacheLuceneSearchRegexpQuery *self, OrgApacheLuceneIndexTerm *term, jint flags, jint maxDeterminizedStates) {
  OrgApacheLuceneSearchRegexpQuery_initWithOrgApacheLuceneIndexTerm_withInt_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(self, term, flags, OrgApacheLuceneSearchRegexpQuery_defaultProvider, maxDeterminizedStates);
}

OrgApacheLuceneSearchRegexpQuery *new_OrgApacheLuceneSearchRegexpQuery_initWithOrgApacheLuceneIndexTerm_withInt_withInt_(OrgApacheLuceneIndexTerm *term, jint flags, jint maxDeterminizedStates) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchRegexpQuery, initWithOrgApacheLuceneIndexTerm_withInt_withInt_, term, flags, maxDeterminizedStates)
}

OrgApacheLuceneSearchRegexpQuery *create_OrgApacheLuceneSearchRegexpQuery_initWithOrgApacheLuceneIndexTerm_withInt_withInt_(OrgApacheLuceneIndexTerm *term, jint flags, jint maxDeterminizedStates) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchRegexpQuery, initWithOrgApacheLuceneIndexTerm_withInt_withInt_, term, flags, maxDeterminizedStates)
}

void OrgApacheLuceneSearchRegexpQuery_initWithOrgApacheLuceneIndexTerm_withInt_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(OrgApacheLuceneSearchRegexpQuery *self, OrgApacheLuceneIndexTerm *term, jint flags, id<OrgApacheLuceneUtilAutomatonAutomatonProvider> provider, jint maxDeterminizedStates) {
  OrgApacheLuceneSearchAutomatonQuery_initWithOrgApacheLuceneIndexTerm_withOrgApacheLuceneUtilAutomatonAutomaton_withInt_(self, term, [create_OrgApacheLuceneUtilAutomatonRegExp_initWithNSString_withInt_([((OrgApacheLuceneIndexTerm *) nil_chk(term)) text], flags) toAutomatonWithOrgApacheLuceneUtilAutomatonAutomatonProvider:provider withInt:maxDeterminizedStates], maxDeterminizedStates);
}

OrgApacheLuceneSearchRegexpQuery *new_OrgApacheLuceneSearchRegexpQuery_initWithOrgApacheLuceneIndexTerm_withInt_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(OrgApacheLuceneIndexTerm *term, jint flags, id<OrgApacheLuceneUtilAutomatonAutomatonProvider> provider, jint maxDeterminizedStates) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchRegexpQuery, initWithOrgApacheLuceneIndexTerm_withInt_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_, term, flags, provider, maxDeterminizedStates)
}

OrgApacheLuceneSearchRegexpQuery *create_OrgApacheLuceneSearchRegexpQuery_initWithOrgApacheLuceneIndexTerm_withInt_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_(OrgApacheLuceneIndexTerm *term, jint flags, id<OrgApacheLuceneUtilAutomatonAutomatonProvider> provider, jint maxDeterminizedStates) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchRegexpQuery, initWithOrgApacheLuceneIndexTerm_withInt_withOrgApacheLuceneUtilAutomatonAutomatonProvider_withInt_, term, flags, provider, maxDeterminizedStates)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneSearchRegexpQuery)

@implementation OrgApacheLuceneSearchRegexpQuery_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneSearchRegexpQuery_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgApacheLuceneUtilAutomatonAutomaton *)getAutomatonWithNSString:(NSString *)name {
  return JreRetainedLocalValue(nil);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneUtilAutomatonAutomaton;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getAutomatonWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getAutomaton", "LNSString;", "LOrgApacheLuceneSearchRegexpQuery;" };
  static const J2ObjcClassInfo _OrgApacheLuceneSearchRegexpQuery_1 = { "", "org.apache.lucene.search", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 2, -1, -1, -1, -1 };
  return &_OrgApacheLuceneSearchRegexpQuery_1;
}

@end

void OrgApacheLuceneSearchRegexpQuery_1_init(OrgApacheLuceneSearchRegexpQuery_1 *self) {
  NSObject_init(self);
}

OrgApacheLuceneSearchRegexpQuery_1 *new_OrgApacheLuceneSearchRegexpQuery_1_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneSearchRegexpQuery_1, init)
}

OrgApacheLuceneSearchRegexpQuery_1 *create_OrgApacheLuceneSearchRegexpQuery_1_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneSearchRegexpQuery_1, init)
}
