//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/store/RAMInputStream.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/EOFException.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "org/apache/lucene/store/IndexInput.h"
#include "org/apache/lucene/store/RAMFile.h"
#include "org/apache/lucene/store/RAMInputStream.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/store/RAMInputStream must not be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface OrgApacheLuceneStoreRAMInputStream () {
 @public
  OrgApacheLuceneStoreRAMFile *file_;
  jlong length_;
  IOSByteArray *currentBuffer_;
  jint currentBufferIndex_;
  jint bufferPosition_;
  jlong bufferStart_;
  jint bufferLength_;
}

- (void)switchCurrentBufferWithBoolean:(jboolean)enforceEOF;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneStoreRAMInputStream, file_, OrgApacheLuceneStoreRAMFile *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneStoreRAMInputStream, currentBuffer_, IOSByteArray *)

__attribute__((unused)) static jlong OrgApacheLuceneStoreRAMInputStream_length(OrgApacheLuceneStoreRAMInputStream *self);

__attribute__((unused)) static void OrgApacheLuceneStoreRAMInputStream_switchCurrentBufferWithBoolean_(OrgApacheLuceneStoreRAMInputStream *self, jboolean enforceEOF);

__attribute__((unused)) static jlong OrgApacheLuceneStoreRAMInputStream_getFilePointer(OrgApacheLuceneStoreRAMInputStream *self);

__attribute__((unused)) static void OrgApacheLuceneStoreRAMInputStream_seekWithLong_(OrgApacheLuceneStoreRAMInputStream *self, jlong pos);

__attribute__((unused)) static OrgApacheLuceneStoreIndexInput *OrgApacheLuceneStoreRAMInputStream_sliceWithNSString_withLong_withLong_(OrgApacheLuceneStoreRAMInputStream *self, NSString *sliceDescription, jlong offset, jlong length);

@interface OrgApacheLuceneStoreRAMInputStream_1 : OrgApacheLuceneStoreRAMInputStream {
 @public
  jlong val$offset_;
}

- (instancetype)initWithLong:(jlong)capture$0
                withNSString:(NSString *)name
withOrgApacheLuceneStoreRAMFile:(OrgApacheLuceneStoreRAMFile *)f
                    withLong:(jlong)length;

- (void)seekWithLong:(jlong)pos;

- (jlong)getFilePointer;

- (jlong)length;

- (OrgApacheLuceneStoreIndexInput *)sliceWithNSString:(NSString *)sliceDescription
                                             withLong:(jlong)ofs
                                             withLong:(jlong)len;

- (OrgApacheLuceneStoreIndexInput *)java_clone;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneStoreRAMInputStream_1)

__attribute__((unused)) static void OrgApacheLuceneStoreRAMInputStream_1_initWithLong_withNSString_withOrgApacheLuceneStoreRAMFile_withLong_(OrgApacheLuceneStoreRAMInputStream_1 *self, jlong capture$0, NSString *name, OrgApacheLuceneStoreRAMFile *f, jlong length);

__attribute__((unused)) static OrgApacheLuceneStoreRAMInputStream_1 *new_OrgApacheLuceneStoreRAMInputStream_1_initWithLong_withNSString_withOrgApacheLuceneStoreRAMFile_withLong_(jlong capture$0, NSString *name, OrgApacheLuceneStoreRAMFile *f, jlong length) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneStoreRAMInputStream_1 *create_OrgApacheLuceneStoreRAMInputStream_1_initWithLong_withNSString_withOrgApacheLuceneStoreRAMFile_withLong_(jlong capture$0, NSString *name, OrgApacheLuceneStoreRAMFile *f, jlong length);

@implementation OrgApacheLuceneStoreRAMInputStream

+ (jint)BUFFER_SIZE {
  return OrgApacheLuceneStoreRAMInputStream_BUFFER_SIZE;
}

- (instancetype)initWithNSString:(NSString *)name
 withOrgApacheLuceneStoreRAMFile:(OrgApacheLuceneStoreRAMFile *)f {
  OrgApacheLuceneStoreRAMInputStream_initWithNSString_withOrgApacheLuceneStoreRAMFile_(self, name, f);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
 withOrgApacheLuceneStoreRAMFile:(OrgApacheLuceneStoreRAMFile *)f
                        withLong:(jlong)length {
  OrgApacheLuceneStoreRAMInputStream_initWithNSString_withOrgApacheLuceneStoreRAMFile_withLong_(self, name, f, length);
  return self;
}

- (void)close {
}

- (jlong)length {
  return OrgApacheLuceneStoreRAMInputStream_length(self);
}

- (jbyte)readByte {
  if (bufferPosition_ >= bufferLength_) {
    currentBufferIndex_++;
    OrgApacheLuceneStoreRAMInputStream_switchCurrentBufferWithBoolean_(self, true);
  }
  return IOSByteArray_Get(nil_chk(currentBuffer_), bufferPosition_++);
}

- (void)readBytesWithByteArray:(IOSByteArray *)b
                       withInt:(jint)offset
                       withInt:(jint)len {
  while (len > 0) {
    if (bufferPosition_ >= bufferLength_) {
      currentBufferIndex_++;
      OrgApacheLuceneStoreRAMInputStream_switchCurrentBufferWithBoolean_(self, true);
    }
    jint remainInBuffer = bufferLength_ - bufferPosition_;
    jint bytesToCopy = len < remainInBuffer ? len : remainInBuffer;
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(currentBuffer_, bufferPosition_, b, offset, bytesToCopy);
    offset += bytesToCopy;
    len -= bytesToCopy;
    bufferPosition_ += bytesToCopy;
  }
}

- (void)switchCurrentBufferWithBoolean:(jboolean)enforceEOF {
  OrgApacheLuceneStoreRAMInputStream_switchCurrentBufferWithBoolean_(self, enforceEOF);
}

- (jlong)getFilePointer {
  return OrgApacheLuceneStoreRAMInputStream_getFilePointer(self);
}

- (void)seekWithLong:(jlong)pos {
  OrgApacheLuceneStoreRAMInputStream_seekWithLong_(self, pos);
}

- (OrgApacheLuceneStoreIndexInput *)sliceWithNSString:(NSString *)sliceDescription
                                             withLong:(jlong)offset
                                             withLong:(jlong)length {
  return OrgApacheLuceneStoreRAMInputStream_sliceWithNSString_withLong_withLong_(self, sliceDescription, offset, length);
}

- (void)dealloc {
  RELEASE_(file_);
  RELEASE_(currentBuffer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, 2, 1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "B", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 1, -1, -1, -1 },
    { NULL, "V", 0x12, 5, 6, 1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreIndexInput;", 0x1, 9, 10, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withOrgApacheLuceneStoreRAMFile:);
  methods[1].selector = @selector(initWithNSString:withOrgApacheLuceneStoreRAMFile:withLong:);
  methods[2].selector = @selector(close);
  methods[3].selector = @selector(length);
  methods[4].selector = @selector(readByte);
  methods[5].selector = @selector(readBytesWithByteArray:withInt:withInt:);
  methods[6].selector = @selector(switchCurrentBufferWithBoolean:);
  methods[7].selector = @selector(getFilePointer);
  methods[8].selector = @selector(seekWithLong:);
  methods[9].selector = @selector(sliceWithNSString:withLong:withLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BUFFER_SIZE", "I", .constantValue.asInt = OrgApacheLuceneStoreRAMInputStream_BUFFER_SIZE, 0x18, -1, -1, -1, -1 },
    { "file_", "LOrgApacheLuceneStoreRAMFile;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "length_", "J", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "currentBuffer_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "currentBufferIndex_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bufferPosition_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bufferStart_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "bufferLength_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LOrgApacheLuceneStoreRAMFile;", "LJavaIoIOException;", "LNSString;LOrgApacheLuceneStoreRAMFile;J", "readBytes", "[BII", "switchCurrentBuffer", "Z", "seek", "J", "slice", "LNSString;JJ" };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreRAMInputStream = { "RAMInputStream", "org.apache.lucene.store", ptrTable, methods, fields, 7, 0x1, 10, 8, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneStoreRAMInputStream;
}

@end

void OrgApacheLuceneStoreRAMInputStream_initWithNSString_withOrgApacheLuceneStoreRAMFile_(OrgApacheLuceneStoreRAMInputStream *self, NSString *name, OrgApacheLuceneStoreRAMFile *f) {
  OrgApacheLuceneStoreRAMInputStream_initWithNSString_withOrgApacheLuceneStoreRAMFile_withLong_(self, name, f, ((OrgApacheLuceneStoreRAMFile *) nil_chk(f))->length_);
}

OrgApacheLuceneStoreRAMInputStream *new_OrgApacheLuceneStoreRAMInputStream_initWithNSString_withOrgApacheLuceneStoreRAMFile_(NSString *name, OrgApacheLuceneStoreRAMFile *f) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreRAMInputStream, initWithNSString_withOrgApacheLuceneStoreRAMFile_, name, f)
}

OrgApacheLuceneStoreRAMInputStream *create_OrgApacheLuceneStoreRAMInputStream_initWithNSString_withOrgApacheLuceneStoreRAMFile_(NSString *name, OrgApacheLuceneStoreRAMFile *f) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreRAMInputStream, initWithNSString_withOrgApacheLuceneStoreRAMFile_, name, f)
}

void OrgApacheLuceneStoreRAMInputStream_initWithNSString_withOrgApacheLuceneStoreRAMFile_withLong_(OrgApacheLuceneStoreRAMInputStream *self, NSString *name, OrgApacheLuceneStoreRAMFile *f, jlong length) {
  OrgApacheLuceneStoreIndexInput_initWithNSString_(self, JreStrcat("$$C", @"RAMInputStream(name=", name, ')'));
  JreStrongAssign(&self->file_, f);
  self->length_ = length;
  if (JreLongDiv(length, OrgApacheLuceneStoreRAMInputStream_BUFFER_SIZE) >= JavaLangInteger_MAX_VALUE) {
    @throw create_JavaIoIOException_initWithNSString_(JreStrcat("$J$$", @"RAMInputStream too large length=", length, @": ", name));
  }
  self->currentBufferIndex_ = -1;
  JreStrongAssign(&self->currentBuffer_, nil);
}

OrgApacheLuceneStoreRAMInputStream *new_OrgApacheLuceneStoreRAMInputStream_initWithNSString_withOrgApacheLuceneStoreRAMFile_withLong_(NSString *name, OrgApacheLuceneStoreRAMFile *f, jlong length) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreRAMInputStream, initWithNSString_withOrgApacheLuceneStoreRAMFile_withLong_, name, f, length)
}

OrgApacheLuceneStoreRAMInputStream *create_OrgApacheLuceneStoreRAMInputStream_initWithNSString_withOrgApacheLuceneStoreRAMFile_withLong_(NSString *name, OrgApacheLuceneStoreRAMFile *f, jlong length) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreRAMInputStream, initWithNSString_withOrgApacheLuceneStoreRAMFile_withLong_, name, f, length)
}

jlong OrgApacheLuceneStoreRAMInputStream_length(OrgApacheLuceneStoreRAMInputStream *self) {
  return self->length_;
}

void OrgApacheLuceneStoreRAMInputStream_switchCurrentBufferWithBoolean_(OrgApacheLuceneStoreRAMInputStream *self, jboolean enforceEOF) {
  self->bufferStart_ = (jlong) OrgApacheLuceneStoreRAMInputStream_BUFFER_SIZE * (jlong) self->currentBufferIndex_;
  if (self->bufferStart_ > self->length_ || self->currentBufferIndex_ >= [((OrgApacheLuceneStoreRAMFile *) nil_chk(self->file_)) numBuffers]) {
    if (enforceEOF) {
      @throw create_JavaIoEOFException_initWithNSString_(JreStrcat("$@", @"read past EOF: ", self));
    }
    else {
      self->currentBufferIndex_--;
      self->bufferPosition_ = OrgApacheLuceneStoreRAMInputStream_BUFFER_SIZE;
    }
  }
  else {
    JreStrongAssign(&self->currentBuffer_, [((OrgApacheLuceneStoreRAMFile *) nil_chk(self->file_)) getBufferWithInt:self->currentBufferIndex_]);
    self->bufferPosition_ = 0;
    jlong buflen = self->length_ - self->bufferStart_;
    self->bufferLength_ = buflen > OrgApacheLuceneStoreRAMInputStream_BUFFER_SIZE ? OrgApacheLuceneStoreRAMInputStream_BUFFER_SIZE : (jint) buflen;
  }
}

jlong OrgApacheLuceneStoreRAMInputStream_getFilePointer(OrgApacheLuceneStoreRAMInputStream *self) {
  return self->currentBufferIndex_ < 0 ? 0 : self->bufferStart_ + self->bufferPosition_;
}

void OrgApacheLuceneStoreRAMInputStream_seekWithLong_(OrgApacheLuceneStoreRAMInputStream *self, jlong pos) {
  if (self->currentBuffer_ == nil || pos < self->bufferStart_ || pos >= self->bufferStart_ + OrgApacheLuceneStoreRAMInputStream_BUFFER_SIZE) {
    self->currentBufferIndex_ = (jint) (JreLongDiv(pos, OrgApacheLuceneStoreRAMInputStream_BUFFER_SIZE));
    OrgApacheLuceneStoreRAMInputStream_switchCurrentBufferWithBoolean_(self, false);
  }
  self->bufferPosition_ = (jint) (JreLongMod(pos, OrgApacheLuceneStoreRAMInputStream_BUFFER_SIZE));
}

OrgApacheLuceneStoreIndexInput *OrgApacheLuceneStoreRAMInputStream_sliceWithNSString_withLong_withLong_(OrgApacheLuceneStoreRAMInputStream *self, NSString *sliceDescription, jlong offset, jlong length) {
  if (offset < 0 || length < 0 || offset + length > self->length_) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$@", @"slice() ", sliceDescription, @" out of bounds: ", self));
  }
  return create_OrgApacheLuceneStoreRAMInputStream_1_initWithLong_withNSString_withOrgApacheLuceneStoreRAMFile_withLong_(offset, [self getFullSliceDescriptionWithNSString:sliceDescription], self->file_, offset + length);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneStoreRAMInputStream)

@implementation OrgApacheLuceneStoreRAMInputStream_1

- (instancetype)initWithLong:(jlong)capture$0
                withNSString:(NSString *)name
withOrgApacheLuceneStoreRAMFile:(OrgApacheLuceneStoreRAMFile *)f
                    withLong:(jlong)length {
  OrgApacheLuceneStoreRAMInputStream_1_initWithLong_withNSString_withOrgApacheLuceneStoreRAMFile_withLong_(self, capture$0, name, f, length);
  return self;
}

- (void)seekWithLong:(jlong)pos {
  if (pos < 0LL) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"Seeking to negative position: ", self));
  }
  OrgApacheLuceneStoreRAMInputStream_seekWithLong_(self, pos + val$offset_);
}

- (jlong)getFilePointer {
  return OrgApacheLuceneStoreRAMInputStream_getFilePointer(self) - val$offset_;
}

- (jlong)length {
  return OrgApacheLuceneStoreRAMInputStream_length(self) - val$offset_;
}

- (OrgApacheLuceneStoreIndexInput *)sliceWithNSString:(NSString *)sliceDescription
                                             withLong:(jlong)ofs
                                             withLong:(jlong)len {
  return OrgApacheLuceneStoreRAMInputStream_sliceWithNSString_withLong_withLong_(self, sliceDescription, val$offset_ + ofs, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreIndexInput;", 0x1, 4, 5, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithLong:withNSString:withOrgApacheLuceneStoreRAMFile:withLong:);
  methods[1].selector = @selector(seekWithLong:);
  methods[2].selector = @selector(getFilePointer);
  methods[3].selector = @selector(length);
  methods[4].selector = @selector(sliceWithNSString:withLong:withLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$offset_", "J", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "JLNSString;LOrgApacheLuceneStoreRAMFile;J", "LJavaIoIOException;", "seek", "J", "slice", "LNSString;JJ", "LOrgApacheLuceneStoreRAMInputStream;", "sliceWithNSString:withLong:withLong:" };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreRAMInputStream_1 = { "", "org.apache.lucene.store", ptrTable, methods, fields, 7, 0x8010, 5, 1, 6, -1, 7, -1, -1 };
  return &_OrgApacheLuceneStoreRAMInputStream_1;
}

@end

void OrgApacheLuceneStoreRAMInputStream_1_initWithLong_withNSString_withOrgApacheLuceneStoreRAMFile_withLong_(OrgApacheLuceneStoreRAMInputStream_1 *self, jlong capture$0, NSString *name, OrgApacheLuceneStoreRAMFile *f, jlong length) {
  self->val$offset_ = capture$0;
  OrgApacheLuceneStoreRAMInputStream_initWithNSString_withOrgApacheLuceneStoreRAMFile_withLong_(self, name, f, length);
  {
    [self seekWithLong:0LL];
  }
}

OrgApacheLuceneStoreRAMInputStream_1 *new_OrgApacheLuceneStoreRAMInputStream_1_initWithLong_withNSString_withOrgApacheLuceneStoreRAMFile_withLong_(jlong capture$0, NSString *name, OrgApacheLuceneStoreRAMFile *f, jlong length) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreRAMInputStream_1, initWithLong_withNSString_withOrgApacheLuceneStoreRAMFile_withLong_, capture$0, name, f, length)
}

OrgApacheLuceneStoreRAMInputStream_1 *create_OrgApacheLuceneStoreRAMInputStream_1_initWithLong_withNSString_withOrgApacheLuceneStoreRAMFile_withLong_(jlong capture$0, NSString *name, OrgApacheLuceneStoreRAMFile *f, jlong length) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreRAMInputStream_1, initWithLong_withNSString_withOrgApacheLuceneStoreRAMFile_withLong_, capture$0, name, f, length)
}
