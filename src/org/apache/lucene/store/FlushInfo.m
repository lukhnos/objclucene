//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/store/FlushInfo.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/store/FlushInfo.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/store/FlushInfo must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneStoreFlushInfo

- (instancetype)initWithInt:(jint)numDocs
                   withLong:(jlong)estimatedSegmentSize {
  OrgApacheLuceneStoreFlushInfo_initWithInt_withLong_(self, numDocs, estimatedSegmentSize);
  return self;
}

- (NSUInteger)hash {
  jint prime = 31;
  jint result = 1;
  result = prime * result + (jint) (estimatedSegmentSize_ ^ (JreURShift64(estimatedSegmentSize_, 32)));
  result = prime * result + numDocs_;
  return result;
}

- (jboolean)isEqual:(id)obj {
  if (JreObjectEqualsEquals(self, obj)) return true;
  if (obj == nil) return false;
  if (!JreObjectEqualsEquals([self java_getClass], [obj java_getClass])) return false;
  OrgApacheLuceneStoreFlushInfo *other = (OrgApacheLuceneStoreFlushInfo *) cast_chk(obj, [OrgApacheLuceneStoreFlushInfo class]);
  if (estimatedSegmentSize_ != other->estimatedSegmentSize_) return false;
  if (numDocs_ != other->numDocs_) return false;
  return true;
}

- (NSString *)description {
  return JreStrcat("$I$JC", @"FlushInfo [numDocs=", numDocs_, @", estimatedSegmentSize=", estimatedSegmentSize_, ']');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withLong:);
  methods[1].selector = @selector(hash);
  methods[2].selector = @selector(isEqual:);
  methods[3].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "numDocs_", "I", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "estimatedSegmentSize_", "J", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "IJ", "hashCode", "equals", "LNSObject;", "toString" };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreFlushInfo = { "FlushInfo", "org.apache.lucene.store", ptrTable, methods, fields, 7, 0x1, 4, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneStoreFlushInfo;
}

@end

void OrgApacheLuceneStoreFlushInfo_initWithInt_withLong_(OrgApacheLuceneStoreFlushInfo *self, jint numDocs, jlong estimatedSegmentSize) {
  NSObject_init(self);
  self->numDocs_ = numDocs;
  self->estimatedSegmentSize_ = estimatedSegmentSize;
}

OrgApacheLuceneStoreFlushInfo *new_OrgApacheLuceneStoreFlushInfo_initWithInt_withLong_(jint numDocs, jlong estimatedSegmentSize) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreFlushInfo, initWithInt_withLong_, numDocs, estimatedSegmentSize)
}

OrgApacheLuceneStoreFlushInfo *create_OrgApacheLuceneStoreFlushInfo_initWithInt_withLong_(jint numDocs, jlong estimatedSegmentSize) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreFlushInfo, initWithInt_withLong_, numDocs, estimatedSegmentSize)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneStoreFlushInfo)
