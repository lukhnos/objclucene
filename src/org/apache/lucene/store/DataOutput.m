//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/store/DataOutput.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "org/apache/lucene/store/DataInput.h"
#include "org/apache/lucene/store/DataOutput.h"
#include "org/apache/lucene/util/BitUtil.h"
#include "org/apache/lucene/util/BytesRef.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/store/DataOutput must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneStoreDataOutput () {
 @public
  IOSByteArray *copyBuffer_;
}

- (void)writeSignedVLongWithLong:(jlong)i;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneStoreDataOutput, copyBuffer_, IOSByteArray *)

inline jint OrgApacheLuceneStoreDataOutput_get_COPY_BUFFER_SIZE(void);
inline jint OrgApacheLuceneStoreDataOutput_set_COPY_BUFFER_SIZE(jint value);
inline jint *OrgApacheLuceneStoreDataOutput_getRef_COPY_BUFFER_SIZE(void);
static jint OrgApacheLuceneStoreDataOutput_COPY_BUFFER_SIZE = 16384;
J2OBJC_STATIC_FIELD_PRIMITIVE(OrgApacheLuceneStoreDataOutput, COPY_BUFFER_SIZE, jint)

__attribute__((unused)) static void OrgApacheLuceneStoreDataOutput_writeVIntWithInt_(OrgApacheLuceneStoreDataOutput *self, jint i);

__attribute__((unused)) static void OrgApacheLuceneStoreDataOutput_writeSignedVLongWithLong_(OrgApacheLuceneStoreDataOutput *self, jlong i);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneStoreDataOutput__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneStoreDataOutput__Annotations$1(void);

@implementation OrgApacheLuceneStoreDataOutput

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneStoreDataOutput_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)writeByteWithByte:(jbyte)b {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeBytesWithByteArray:(IOSByteArray *)b
                        withInt:(jint)length {
  [self writeBytesWithByteArray:b withInt:0 withInt:length];
}

- (void)writeBytesWithByteArray:(IOSByteArray *)b
                        withInt:(jint)offset
                        withInt:(jint)length {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)writeIntWithInt:(jint)i {
  [self writeByteWithByte:(jbyte) (JreRShift32(i, 24))];
  [self writeByteWithByte:(jbyte) (JreRShift32(i, 16))];
  [self writeByteWithByte:(jbyte) (JreRShift32(i, 8))];
  [self writeByteWithByte:(jbyte) i];
}

- (void)writeShortWithShort:(jshort)i {
  [self writeByteWithByte:(jbyte) (JreRShift32(i, 8))];
  [self writeByteWithByte:(jbyte) i];
}

- (void)writeVIntWithInt:(jint)i {
  OrgApacheLuceneStoreDataOutput_writeVIntWithInt_(self, i);
}

- (void)writeZIntWithInt:(jint)i {
  OrgApacheLuceneStoreDataOutput_writeVIntWithInt_(self, OrgApacheLuceneUtilBitUtil_zigZagEncodeWithInt_(i));
}

- (void)writeLongWithLong:(jlong)i {
  [self writeIntWithInt:(jint) (JreRShift64(i, 32))];
  [self writeIntWithInt:(jint) i];
}

- (void)writeVLongWithLong:(jlong)i {
  if (i < 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$JC", @"cannot write negative vLong (got: ", i, ')'));
  }
  OrgApacheLuceneStoreDataOutput_writeSignedVLongWithLong_(self, i);
}

- (void)writeSignedVLongWithLong:(jlong)i {
  OrgApacheLuceneStoreDataOutput_writeSignedVLongWithLong_(self, i);
}

- (void)writeZLongWithLong:(jlong)i {
  OrgApacheLuceneStoreDataOutput_writeSignedVLongWithLong_(self, OrgApacheLuceneUtilBitUtil_zigZagEncodeWithLong_(i));
}

- (void)writeStringWithNSString:(NSString *)s {
  OrgApacheLuceneUtilBytesRef *utf8Result = create_OrgApacheLuceneUtilBytesRef_initWithJavaLangCharSequence_(s);
  OrgApacheLuceneStoreDataOutput_writeVIntWithInt_(self, utf8Result->length_);
  [self writeBytesWithByteArray:utf8Result->bytes_ withInt:utf8Result->offset_ withInt:utf8Result->length_];
}

- (void)copyBytesWithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)input
                                          withLong:(jlong)numBytes {
  JreAssert(numBytes >= 0, JreStrcat("$J", @"numBytes=", numBytes));
  jlong left = numBytes;
  if (copyBuffer_ == nil) JreStrongAssignAndConsume(&copyBuffer_, [IOSByteArray newArrayWithLength:OrgApacheLuceneStoreDataOutput_COPY_BUFFER_SIZE]);
  while (left > 0) {
    jint toCopy;
    if (left > OrgApacheLuceneStoreDataOutput_COPY_BUFFER_SIZE) toCopy = OrgApacheLuceneStoreDataOutput_COPY_BUFFER_SIZE;
    else toCopy = (jint) left;
    [((OrgApacheLuceneStoreDataInput *) nil_chk(input)) readBytesWithByteArray:copyBuffer_ withInt:0 withInt:toCopy];
    [self writeBytesWithByteArray:copyBuffer_ withInt:0 withInt:toCopy];
    left -= toCopy;
  }
}

- (void)writeStringStringMapWithJavaUtilMap:(id<JavaUtilMap>)map {
  if (map == nil) {
    [self writeIntWithInt:0];
  }
  else {
    [self writeIntWithInt:[map size]];
    for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([map entrySet])) {
      [self writeStringWithNSString:[((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey]];
      [self writeStringWithNSString:[entry_ getValue]];
    }
  }
}

- (void)writeMapOfStringsWithJavaUtilMap:(id<JavaUtilMap>)map {
  OrgApacheLuceneStoreDataOutput_writeVIntWithInt_(self, [((id<JavaUtilMap>) nil_chk(map)) size]);
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([map entrySet])) {
    [self writeStringWithNSString:[((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey]];
    [self writeStringWithNSString:[entry_ getValue]];
  }
}

- (void)writeStringSetWithJavaUtilSet:(id<JavaUtilSet>)set {
  if (set == nil) {
    [self writeIntWithInt:0];
  }
  else {
    [self writeIntWithInt:[set size]];
    for (NSString * __strong value in set) {
      [self writeStringWithNSString:value];
    }
  }
}

- (void)writeSetOfStringsWithJavaUtilSet:(id<JavaUtilSet>)set {
  OrgApacheLuceneStoreDataOutput_writeVIntWithInt_(self, [((id<JavaUtilSet>) nil_chk(set)) size]);
  for (NSString * __strong value in set) {
    [self writeStringWithNSString:value];
  }
}

- (void)dealloc {
  RELEASE_(copyBuffer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
    { NULL, "V", 0x401, 3, 5, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, 2, -1, -1, -1 },
    { NULL, "V", 0x11, 10, 7, 2, -1, -1, -1 },
    { NULL, "V", 0x11, 11, 7, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 13, 2, -1, -1, -1 },
    { NULL, "V", 0x11, 14, 13, 2, -1, -1, -1 },
    { NULL, "V", 0x2, 15, 13, 2, -1, -1, -1 },
    { NULL, "V", 0x11, 16, 13, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 18, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 20, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 21, 22, 2, 23, 24, -1 },
    { NULL, "V", 0x1, 25, 22, 2, 23, -1, -1 },
    { NULL, "V", 0x1, 26, 27, 2, 28, 29, -1 },
    { NULL, "V", 0x1, 30, 27, 2, 28, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(writeByteWithByte:);
  methods[2].selector = @selector(writeBytesWithByteArray:withInt:);
  methods[3].selector = @selector(writeBytesWithByteArray:withInt:withInt:);
  methods[4].selector = @selector(writeIntWithInt:);
  methods[5].selector = @selector(writeShortWithShort:);
  methods[6].selector = @selector(writeVIntWithInt:);
  methods[7].selector = @selector(writeZIntWithInt:);
  methods[8].selector = @selector(writeLongWithLong:);
  methods[9].selector = @selector(writeVLongWithLong:);
  methods[10].selector = @selector(writeSignedVLongWithLong:);
  methods[11].selector = @selector(writeZLongWithLong:);
  methods[12].selector = @selector(writeStringWithNSString:);
  methods[13].selector = @selector(copyBytesWithOrgApacheLuceneStoreDataInput:withLong:);
  methods[14].selector = @selector(writeStringStringMapWithJavaUtilMap:);
  methods[15].selector = @selector(writeMapOfStringsWithJavaUtilMap:);
  methods[16].selector = @selector(writeStringSetWithJavaUtilSet:);
  methods[17].selector = @selector(writeSetOfStringsWithJavaUtilSet:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "COPY_BUFFER_SIZE", "I", .constantValue.asLong = 0, 0xa, -1, 31, -1, -1 },
    { "copyBuffer_", "[B", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "writeByte", "B", "LJavaIoIOException;", "writeBytes", "[BI", "[BII", "writeInt", "I", "writeShort", "S", "writeVInt", "writeZInt", "writeLong", "J", "writeVLong", "writeSignedVLong", "writeZLong", "writeString", "LNSString;", "copyBytes", "LOrgApacheLuceneStoreDataInput;J", "writeStringStringMap", "LJavaUtilMap;", "(Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V", (void *)&OrgApacheLuceneStoreDataOutput__Annotations$0, "writeMapOfStrings", "writeStringSet", "LJavaUtilSet;", "(Ljava/util/Set<Ljava/lang/String;>;)V", (void *)&OrgApacheLuceneStoreDataOutput__Annotations$1, "writeSetOfStrings", &OrgApacheLuceneStoreDataOutput_COPY_BUFFER_SIZE };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreDataOutput = { "DataOutput", "org.apache.lucene.store", ptrTable, methods, fields, 7, 0x401, 18, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneStoreDataOutput;
}

@end

void OrgApacheLuceneStoreDataOutput_init(OrgApacheLuceneStoreDataOutput *self) {
  NSObject_init(self);
}

void OrgApacheLuceneStoreDataOutput_writeVIntWithInt_(OrgApacheLuceneStoreDataOutput *self, jint i) {
  while ((i & ~(jint) 0x7F) != 0) {
    [self writeByteWithByte:(jbyte) ((i & (jint) 0x7F) | (jint) 0x80)];
    JreURShiftAssignInt(&i, 7);
  }
  [self writeByteWithByte:(jbyte) i];
}

void OrgApacheLuceneStoreDataOutput_writeSignedVLongWithLong_(OrgApacheLuceneStoreDataOutput *self, jlong i) {
  while ((i & ~(jlong) 0x7FLL) != 0LL) {
    [self writeByteWithByte:(jbyte) ((i & (jlong) 0x7FLL) | (jlong) 0x80LL)];
    JreURShiftAssignLong(&i, 7);
  }
  [self writeByteWithByte:(jbyte) i];
}

IOSObjectArray *OrgApacheLuceneStoreDataOutput__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheLuceneStoreDataOutput__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneStoreDataOutput)
