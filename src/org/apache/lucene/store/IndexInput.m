//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/store/IndexInput.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/apache/lucene/store/DataInput.h"
#include "org/apache/lucene/store/IndexInput.h"
#include "org/apache/lucene/store/RandomAccessInput.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/store/IndexInput must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneStoreIndexInput () {
 @public
  NSString *resourceDescription_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneStoreIndexInput, resourceDescription_, NSString *)

@interface OrgApacheLuceneStoreIndexInput_1 : NSObject < OrgApacheLuceneStoreRandomAccessInput > {
 @public
  OrgApacheLuceneStoreIndexInput *val$slice_;
}

- (instancetype)initWithOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)capture$0;

- (jbyte)readByteWithLong:(jlong)pos;

- (jshort)readShortWithLong:(jlong)pos;

- (jint)readIntWithLong:(jlong)pos;

- (jlong)readLongWithLong:(jlong)pos;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneStoreIndexInput_1)

__attribute__((unused)) static void OrgApacheLuceneStoreIndexInput_1_initWithOrgApacheLuceneStoreIndexInput_(OrgApacheLuceneStoreIndexInput_1 *self, OrgApacheLuceneStoreIndexInput *capture$0);

__attribute__((unused)) static OrgApacheLuceneStoreIndexInput_1 *new_OrgApacheLuceneStoreIndexInput_1_initWithOrgApacheLuceneStoreIndexInput_(OrgApacheLuceneStoreIndexInput *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneStoreIndexInput_1 *create_OrgApacheLuceneStoreIndexInput_1_initWithOrgApacheLuceneStoreIndexInput_(OrgApacheLuceneStoreIndexInput *capture$0);

@implementation OrgApacheLuceneStoreIndexInput

- (instancetype)initWithNSString:(NSString *)resourceDescription {
  OrgApacheLuceneStoreIndexInput_initWithNSString_(self, resourceDescription);
  return self;
}

- (void)close {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jlong)getFilePointer {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)seekWithLong:(jlong)pos {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jlong)length {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)description {
  return resourceDescription_;
}

- (OrgApacheLuceneStoreIndexInput *)java_clone {
  return (OrgApacheLuceneStoreIndexInput *) cast_chk([super java_clone], [OrgApacheLuceneStoreIndexInput class]);
}

- (OrgApacheLuceneStoreIndexInput *)sliceWithNSString:(NSString *)sliceDescription
                                             withLong:(jlong)offset
                                             withLong:(jlong)length {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getFullSliceDescriptionWithNSString:(NSString *)sliceDescription {
  if (sliceDescription == nil) {
    return [self description];
  }
  else {
    return JreStrcat("$$$C", [self description], @" [slice=", sliceDescription, ']');
  }
}

- (id<OrgApacheLuceneStoreRandomAccessInput>)randomAccessSliceWithLong:(jlong)offset
                                                              withLong:(jlong)length {
  OrgApacheLuceneStoreIndexInput *slice = [self sliceWithNSString:@"randomaccess" withLong:offset withLong:length];
  if ([OrgApacheLuceneStoreRandomAccessInput_class_() isInstance:slice]) {
    return (id<OrgApacheLuceneStoreRandomAccessInput>) cast_check(slice, OrgApacheLuceneStoreRandomAccessInput_class_());
  }
  else {
    return create_OrgApacheLuceneStoreIndexInput_1_initWithOrgApacheLuceneStoreIndexInput_(slice);
  }
}

- (void)dealloc {
  RELEASE_(resourceDescription_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x401, -1, -1, 1, -1, -1, -1 },
    { NULL, "J", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 2, 3, 1, -1, -1, -1 },
    { NULL, "J", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreIndexInput;", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreIndexInput;", 0x401, 6, 7, 1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, 8, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreRandomAccessInput;", 0x1, 9, 10, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(close);
  methods[2].selector = @selector(getFilePointer);
  methods[3].selector = @selector(seekWithLong:);
  methods[4].selector = @selector(length);
  methods[5].selector = @selector(description);
  methods[6].selector = @selector(java_clone);
  methods[7].selector = @selector(sliceWithNSString:withLong:withLong:);
  methods[8].selector = @selector(getFullSliceDescriptionWithNSString:);
  methods[9].selector = @selector(randomAccessSliceWithLong:withLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "resourceDescription_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LJavaIoIOException;", "seek", "J", "toString", "clone", "slice", "LNSString;JJ", "getFullSliceDescription", "randomAccessSlice", "JJ" };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreIndexInput = { "IndexInput", "org.apache.lucene.store", ptrTable, methods, fields, 7, 0x401, 10, 1, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneStoreIndexInput;
}

@end

void OrgApacheLuceneStoreIndexInput_initWithNSString_(OrgApacheLuceneStoreIndexInput *self, NSString *resourceDescription) {
  OrgApacheLuceneStoreDataInput_init(self);
  if (resourceDescription == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"resourceDescription must not be null");
  }
  JreStrongAssign(&self->resourceDescription_, resourceDescription);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneStoreIndexInput)

@implementation OrgApacheLuceneStoreIndexInput_1

- (instancetype)initWithOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)capture$0 {
  OrgApacheLuceneStoreIndexInput_1_initWithOrgApacheLuceneStoreIndexInput_(self, capture$0);
  return self;
}

- (jbyte)readByteWithLong:(jlong)pos {
  [((OrgApacheLuceneStoreIndexInput *) nil_chk(val$slice_)) seekWithLong:pos];
  return [val$slice_ readByte];
}

- (jshort)readShortWithLong:(jlong)pos {
  [((OrgApacheLuceneStoreIndexInput *) nil_chk(val$slice_)) seekWithLong:pos];
  return [val$slice_ readShort];
}

- (jint)readIntWithLong:(jlong)pos {
  [((OrgApacheLuceneStoreIndexInput *) nil_chk(val$slice_)) seekWithLong:pos];
  return [val$slice_ readInt];
}

- (jlong)readLongWithLong:(jlong)pos {
  [((OrgApacheLuceneStoreIndexInput *) nil_chk(val$slice_)) seekWithLong:pos];
  return [val$slice_ readLong];
}

- (void)dealloc {
  RELEASE_(val$slice_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "B", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "S", 0x1, 4, 2, 3, -1, -1, -1 },
    { NULL, "I", 0x1, 5, 2, 3, -1, -1, -1 },
    { NULL, "J", 0x1, 6, 2, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneStoreIndexInput:);
  methods[1].selector = @selector(readByteWithLong:);
  methods[2].selector = @selector(readShortWithLong:);
  methods[3].selector = @selector(readIntWithLong:);
  methods[4].selector = @selector(readLongWithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$slice_", "LOrgApacheLuceneStoreIndexInput;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneStoreIndexInput;", "readByte", "J", "LJavaIoIOException;", "readShort", "readInt", "readLong", "randomAccessSliceWithLong:withLong:" };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreIndexInput_1 = { "", "org.apache.lucene.store", ptrTable, methods, fields, 7, 0x8010, 5, 1, 0, -1, 7, -1, -1 };
  return &_OrgApacheLuceneStoreIndexInput_1;
}

@end

void OrgApacheLuceneStoreIndexInput_1_initWithOrgApacheLuceneStoreIndexInput_(OrgApacheLuceneStoreIndexInput_1 *self, OrgApacheLuceneStoreIndexInput *capture$0) {
  JreStrongAssign(&self->val$slice_, capture$0);
  NSObject_init(self);
}

OrgApacheLuceneStoreIndexInput_1 *new_OrgApacheLuceneStoreIndexInput_1_initWithOrgApacheLuceneStoreIndexInput_(OrgApacheLuceneStoreIndexInput *capture$0) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreIndexInput_1, initWithOrgApacheLuceneStoreIndexInput_, capture$0)
}

OrgApacheLuceneStoreIndexInput_1 *create_OrgApacheLuceneStoreIndexInput_1_initWithOrgApacheLuceneStoreIndexInput_(OrgApacheLuceneStoreIndexInput *capture$0) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreIndexInput_1, initWithOrgApacheLuceneStoreIndexInput_, capture$0)
}
