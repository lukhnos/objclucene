//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/store/OutputStreamDataOutput.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/OutputStream.h"
#include "org/apache/lucene/store/DataOutput.h"
#include "org/apache/lucene/store/OutputStreamDataOutput.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/store/OutputStreamDataOutput must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneStoreOutputStreamDataOutput () {
 @public
  JavaIoOutputStream *os_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneStoreOutputStreamDataOutput, os_, JavaIoOutputStream *)

@implementation OrgApacheLuceneStoreOutputStreamDataOutput

- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)os {
  OrgApacheLuceneStoreOutputStreamDataOutput_initWithJavaIoOutputStream_(self, os);
  return self;
}

- (void)writeByteWithByte:(jbyte)b {
  [((JavaIoOutputStream *) nil_chk(os_)) writeWithInt:b];
}

- (void)writeBytesWithByteArray:(IOSByteArray *)b
                        withInt:(jint)offset
                        withInt:(jint)length {
  [((JavaIoOutputStream *) nil_chk(os_)) writeWithByteArray:b withInt:offset withInt:length];
}

- (void)close {
  [((JavaIoOutputStream *) nil_chk(os_)) close];
}

- (void)dealloc {
  RELEASE_(os_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, 3, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoOutputStream:);
  methods[1].selector = @selector(writeByteWithByte:);
  methods[2].selector = @selector(writeBytesWithByteArray:withInt:withInt:);
  methods[3].selector = @selector(close);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "os_", "LJavaIoOutputStream;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoOutputStream;", "writeByte", "B", "LJavaIoIOException;", "writeBytes", "[BII" };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreOutputStreamDataOutput = { "OutputStreamDataOutput", "org.apache.lucene.store", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneStoreOutputStreamDataOutput;
}

@end

void OrgApacheLuceneStoreOutputStreamDataOutput_initWithJavaIoOutputStream_(OrgApacheLuceneStoreOutputStreamDataOutput *self, JavaIoOutputStream *os) {
  OrgApacheLuceneStoreDataOutput_init(self);
  JreStrongAssign(&self->os_, os);
}

OrgApacheLuceneStoreOutputStreamDataOutput *new_OrgApacheLuceneStoreOutputStreamDataOutput_initWithJavaIoOutputStream_(JavaIoOutputStream *os) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreOutputStreamDataOutput, initWithJavaIoOutputStream_, os)
}

OrgApacheLuceneStoreOutputStreamDataOutput *create_OrgApacheLuceneStoreOutputStreamDataOutput_initWithJavaIoOutputStream_(JavaIoOutputStream *os) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreOutputStreamDataOutput, initWithJavaIoOutputStream_, os)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneStoreOutputStreamDataOutput)
