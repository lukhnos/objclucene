//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/store/NativeFSLockFactory.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/lang/Throwable.h"
#include "java/nio/channels/FileChannel.h"
#include "java/nio/channels/FileLock.h"
#include "java/util/Collections.h"
#include "java/util/HashSet.h"
#include "java/util/Set.h"
#include "org/apache/lucene/store/AlreadyClosedException.h"
#include "org/apache/lucene/store/FSDirectory.h"
#include "org/apache/lucene/store/FSLockFactory.h"
#include "org/apache/lucene/store/Lock.h"
#include "org/apache/lucene/store/LockObtainFailedException.h"
#include "org/apache/lucene/store/NativeFSLockFactory.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/lukhnos/portmobile/channels/utils/FileChannelUtils.h"
#include "org/lukhnos/portmobile/file/Files.h"
#include "org/lukhnos/portmobile/file/Path.h"
#include "org/lukhnos/portmobile/file/StandardOpenOption.h"
#include "org/lukhnos/portmobile/file/attribute/BasicFileAttributes.h"
#include "org/lukhnos/portmobile/file/attribute/FileTime.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/store/NativeFSLockFactory must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneStoreNativeFSLockFactory ()

- (instancetype)init;

+ (void)clearLockHeldWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path;

@end

inline id<JavaUtilSet> OrgApacheLuceneStoreNativeFSLockFactory_get_LOCK_HELD(void);
static id<JavaUtilSet> OrgApacheLuceneStoreNativeFSLockFactory_LOCK_HELD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneStoreNativeFSLockFactory, LOCK_HELD, id<JavaUtilSet>)

__attribute__((unused)) static void OrgApacheLuceneStoreNativeFSLockFactory_init(OrgApacheLuceneStoreNativeFSLockFactory *self);

__attribute__((unused)) static OrgApacheLuceneStoreNativeFSLockFactory *new_OrgApacheLuceneStoreNativeFSLockFactory_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneStoreNativeFSLockFactory *create_OrgApacheLuceneStoreNativeFSLockFactory_init(void);

__attribute__((unused)) static void OrgApacheLuceneStoreNativeFSLockFactory_clearLockHeldWithOrgLukhnosPortmobileFilePath_(OrgLukhnosPortmobileFilePath *path);

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneStoreNativeFSLockFactory)

OrgApacheLuceneStoreNativeFSLockFactory *OrgApacheLuceneStoreNativeFSLockFactory_INSTANCE;

@implementation OrgApacheLuceneStoreNativeFSLockFactory

+ (OrgApacheLuceneStoreNativeFSLockFactory *)INSTANCE {
  return OrgApacheLuceneStoreNativeFSLockFactory_INSTANCE;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneStoreNativeFSLockFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgApacheLuceneStoreLock *)obtainFSLockWithOrgApacheLuceneStoreFSDirectory:(OrgApacheLuceneStoreFSDirectory *)dir
                                                                 withNSString:(NSString *)lockName {
  OrgLukhnosPortmobileFilePath *lockDir = JreRetainedLocalValue([((OrgApacheLuceneStoreFSDirectory *) nil_chk(dir)) getDirectory]);
  OrgLukhnosPortmobileFileFiles_createDirectoriesWithOrgLukhnosPortmobileFilePath_(lockDir);
  OrgLukhnosPortmobileFilePath *lockFile = JreRetainedLocalValue([((OrgLukhnosPortmobileFilePath *) nil_chk(lockDir)) resolveWithNSString:lockName]);
  @try {
    OrgLukhnosPortmobileFileFiles_createFileWithOrgLukhnosPortmobileFilePath_(lockFile);
  }
  @catch (JavaIoIOException *ignore) {
  }
  OrgLukhnosPortmobileFilePath *realPath = [((OrgLukhnosPortmobileFilePath *) nil_chk(lockFile)) toRealPath];
  OrgLukhnosPortmobileFileAttributeFileTime *creationTime = [((OrgLukhnosPortmobileFileAttributeBasicFileAttributes *) nil_chk(OrgLukhnosPortmobileFileFiles_readAttributesWithOrgLukhnosPortmobileFilePath_withIOSClass_(realPath, OrgLukhnosPortmobileFileAttributeBasicFileAttributes_class_()))) creationTime];
  if ([((id<JavaUtilSet>) nil_chk(OrgApacheLuceneStoreNativeFSLockFactory_LOCK_HELD)) addWithId:[((OrgLukhnosPortmobileFilePath *) nil_chk(realPath)) description]]) {
    JavaNioChannelsFileChannel *channel = nil;
    JavaNioChannelsFileLock *lock = nil;
    @try {
      channel = OrgLukhnosPortmobileChannelsUtilsFileChannelUtils_openWithOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFileStandardOpenOptionArray_(realPath, [IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(OrgLukhnosPortmobileFileStandardOpenOption, CREATE), JreLoadEnum(OrgLukhnosPortmobileFileStandardOpenOption, WRITE) } count:2 type:OrgLukhnosPortmobileFileStandardOpenOption_class_()]);
      lock = [((JavaNioChannelsFileChannel *) nil_chk(channel)) tryLock];
      if (lock != nil) {
        return create_OrgApacheLuceneStoreNativeFSLockFactory_NativeFSLock_initWithJavaNioChannelsFileLock_withJavaNioChannelsFileChannel_withOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFileAttributeFileTime_(lock, channel, realPath, creationTime);
      }
      else {
        @throw create_OrgApacheLuceneStoreLockObtainFailedException_initWithNSString_(JreStrcat("$@", @"Lock held by another program: ", realPath));
      }
    }
    @finally {
      if (lock == nil) {
        OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ channel } count:1 type:JavaIoCloseable_class_()]);
        OrgApacheLuceneStoreNativeFSLockFactory_clearLockHeldWithOrgLukhnosPortmobileFilePath_(realPath);
      }
    }
  }
  else {
    @throw create_OrgApacheLuceneStoreLockObtainFailedException_initWithNSString_(JreStrcat("$@", @"Lock held by this virtual machine: ", realPath));
  }
}

+ (void)clearLockHeldWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path {
  OrgApacheLuceneStoreNativeFSLockFactory_clearLockHeldWithOrgLukhnosPortmobileFilePath_(path);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreLock;", 0x4, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1a, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(obtainFSLockWithOrgApacheLuceneStoreFSDirectory:withNSString:);
  methods[2].selector = @selector(clearLockHeldWithOrgLukhnosPortmobileFilePath:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LOrgApacheLuceneStoreNativeFSLockFactory;", .constantValue.asLong = 0, 0x19, -1, 5, -1, -1 },
    { "LOCK_HELD", "LJavaUtilSet;", .constantValue.asLong = 0, 0x1a, -1, 6, 7, -1 },
  };
  static const void *ptrTable[] = { "obtainFSLock", "LOrgApacheLuceneStoreFSDirectory;LNSString;", "LJavaIoIOException;", "clearLockHeld", "LOrgLukhnosPortmobileFilePath;", &OrgApacheLuceneStoreNativeFSLockFactory_INSTANCE, &OrgApacheLuceneStoreNativeFSLockFactory_LOCK_HELD, "Ljava/util/Set<Ljava/lang/String;>;", "LOrgApacheLuceneStoreNativeFSLockFactory_NativeFSLock;" };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreNativeFSLockFactory = { "NativeFSLockFactory", "org.apache.lucene.store", ptrTable, methods, fields, 7, 0x11, 3, 2, -1, 8, -1, -1, -1 };
  return &_OrgApacheLuceneStoreNativeFSLockFactory;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneStoreNativeFSLockFactory class]) {
    JreStrongAssignAndConsume(&OrgApacheLuceneStoreNativeFSLockFactory_INSTANCE, new_OrgApacheLuceneStoreNativeFSLockFactory_init());
    JreStrongAssign(&OrgApacheLuceneStoreNativeFSLockFactory_LOCK_HELD, JavaUtilCollections_synchronizedSetWithJavaUtilSet_(create_JavaUtilHashSet_init()));
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneStoreNativeFSLockFactory)
  }
}

@end

void OrgApacheLuceneStoreNativeFSLockFactory_init(OrgApacheLuceneStoreNativeFSLockFactory *self) {
  OrgApacheLuceneStoreFSLockFactory_init(self);
}

OrgApacheLuceneStoreNativeFSLockFactory *new_OrgApacheLuceneStoreNativeFSLockFactory_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreNativeFSLockFactory, init)
}

OrgApacheLuceneStoreNativeFSLockFactory *create_OrgApacheLuceneStoreNativeFSLockFactory_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreNativeFSLockFactory, init)
}

void OrgApacheLuceneStoreNativeFSLockFactory_clearLockHeldWithOrgLukhnosPortmobileFilePath_(OrgLukhnosPortmobileFilePath *path) {
  OrgApacheLuceneStoreNativeFSLockFactory_initialize();
  jboolean remove = [((id<JavaUtilSet>) nil_chk(OrgApacheLuceneStoreNativeFSLockFactory_LOCK_HELD)) removeWithId:[((OrgLukhnosPortmobileFilePath *) nil_chk(path)) description]];
  if (remove == false) {
    @throw create_OrgApacheLuceneStoreAlreadyClosedException_initWithNSString_(JreStrcat("$@", @"Lock path was cleared but never marked as held: ", path));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneStoreNativeFSLockFactory)

@implementation OrgApacheLuceneStoreNativeFSLockFactory_NativeFSLock

- (instancetype)initWithJavaNioChannelsFileLock:(JavaNioChannelsFileLock *)lock
                 withJavaNioChannelsFileChannel:(JavaNioChannelsFileChannel *)channel
               withOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path
  withOrgLukhnosPortmobileFileAttributeFileTime:(OrgLukhnosPortmobileFileAttributeFileTime *)creationTime {
  OrgApacheLuceneStoreNativeFSLockFactory_NativeFSLock_initWithJavaNioChannelsFileLock_withJavaNioChannelsFileChannel_withOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFileAttributeFileTime_(self, lock, channel, path, creationTime);
  return self;
}

- (void)ensureValid {
  if (JreLoadVolatileBoolean(&closed_)) {
    @throw create_OrgApacheLuceneStoreAlreadyClosedException_initWithNSString_(JreStrcat("$@", @"Lock instance already released: ", self));
  }
  if (![((id<JavaUtilSet>) nil_chk(JreLoadStatic(OrgApacheLuceneStoreNativeFSLockFactory, LOCK_HELD))) containsWithId:[((OrgLukhnosPortmobileFilePath *) nil_chk(path_)) description]]) {
    @throw create_OrgApacheLuceneStoreAlreadyClosedException_initWithNSString_(JreStrcat("$@", @"Lock path unexpectedly cleared from map: ", self));
  }
  if (![((JavaNioChannelsFileLock *) nil_chk(lock_)) isValid]) {
    @throw create_OrgApacheLuceneStoreAlreadyClosedException_initWithNSString_(JreStrcat("$@", @"FileLock invalidated by an external force: ", self));
  }
  jlong size = [((JavaNioChannelsFileChannel *) nil_chk(channel_)) size];
  if (size != 0) {
    @throw create_OrgApacheLuceneStoreAlreadyClosedException_initWithNSString_(JreStrcat("$J$@C", @"Unexpected lock file size: ", size, @", (lock=", self, ')'));
  }
  OrgLukhnosPortmobileFileAttributeFileTime *ctime = JreRetainedLocalValue([((OrgLukhnosPortmobileFileAttributeBasicFileAttributes *) nil_chk(OrgLukhnosPortmobileFileFiles_readAttributesWithOrgLukhnosPortmobileFilePath_withIOSClass_(path_, OrgLukhnosPortmobileFileAttributeBasicFileAttributes_class_()))) creationTime]);
  if (![((OrgLukhnosPortmobileFileAttributeFileTime *) nil_chk(creationTime_)) isEqual:ctime]) {
    @throw create_OrgApacheLuceneStoreAlreadyClosedException_initWithNSString_(JreStrcat("$@$@C", @"Underlying file changed by an external force at ", creationTime_, @", (lock=", self, ')'));
  }
}

- (void)close {
  @synchronized(self) {
    if (JreLoadVolatileBoolean(&closed_)) {
      return;
    }
    @try {
      JavaNioChannelsFileChannel *channel = self->channel_;
      JavaLangThrowable *__primaryException1 = nil;
      @try {
        JreAssert(self->lock_ != nil, @"org/apache/lucene/store/NativeFSLockFactory.java:194 condition failed: assert this.lock != null;");
        JreAssert(channel != nil, @"org/apache/lucene/store/NativeFSLockFactory.java:195 condition failed: assert channel != null;");
        [((JavaNioChannelsFileLock *) nil_chk(self->lock_)) release__];
      }
      @catch (JavaLangThrowable *e) {
        __primaryException1 = e;
        @throw e;
      }
      @finally {
        if (channel != nil) {
          if (__primaryException1 != nil) {
            @try {
              [channel close];
            }
            @catch (JavaLangThrowable *e) {
              [__primaryException1 addSuppressedWithJavaLangThrowable:e];
            }
          }
          else {
            [channel close];
          }
        }
      }
    }
    @finally {
      JreAssignVolatileBoolean(&closed_, true);
      OrgApacheLuceneStoreNativeFSLockFactory_clearLockHeldWithOrgLukhnosPortmobileFilePath_(path_);
    }
  }
}

- (NSString *)description {
  return JreStrcat("$@$@$@C", @"NativeFSLock(path=", path_, @",impl=", lock_, @",ctime=", creationTime_, ')');
}

- (void)dealloc {
  RELEASE_(lock_);
  RELEASE_(channel_);
  RELEASE_(path_);
  RELEASE_(creationTime_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "V", 0x21, -1, -1, 1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaNioChannelsFileLock:withJavaNioChannelsFileChannel:withOrgLukhnosPortmobileFilePath:withOrgLukhnosPortmobileFileAttributeFileTime:);
  methods[1].selector = @selector(ensureValid);
  methods[2].selector = @selector(close);
  methods[3].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "lock_", "LJavaNioChannelsFileLock;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "channel_", "LJavaNioChannelsFileChannel;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "path_", "LOrgLukhnosPortmobileFilePath;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "creationTime_", "LOrgLukhnosPortmobileFileAttributeFileTime;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "closed_", "Z", .constantValue.asLong = 0, 0x40, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaNioChannelsFileLock;LJavaNioChannelsFileChannel;LOrgLukhnosPortmobileFilePath;LOrgLukhnosPortmobileFileAttributeFileTime;", "LJavaIoIOException;", "toString", "LOrgApacheLuceneStoreNativeFSLockFactory;" };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreNativeFSLockFactory_NativeFSLock = { "NativeFSLock", "org.apache.lucene.store", ptrTable, methods, fields, 7, 0x18, 4, 5, 3, -1, -1, -1, -1 };
  return &_OrgApacheLuceneStoreNativeFSLockFactory_NativeFSLock;
}

@end

void OrgApacheLuceneStoreNativeFSLockFactory_NativeFSLock_initWithJavaNioChannelsFileLock_withJavaNioChannelsFileChannel_withOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFileAttributeFileTime_(OrgApacheLuceneStoreNativeFSLockFactory_NativeFSLock *self, JavaNioChannelsFileLock *lock, JavaNioChannelsFileChannel *channel, OrgLukhnosPortmobileFilePath *path, OrgLukhnosPortmobileFileAttributeFileTime *creationTime) {
  OrgApacheLuceneStoreLock_init(self);
  JreStrongAssign(&self->lock_, lock);
  JreStrongAssign(&self->channel_, channel);
  JreStrongAssign(&self->path_, path);
  JreStrongAssign(&self->creationTime_, creationTime);
}

OrgApacheLuceneStoreNativeFSLockFactory_NativeFSLock *new_OrgApacheLuceneStoreNativeFSLockFactory_NativeFSLock_initWithJavaNioChannelsFileLock_withJavaNioChannelsFileChannel_withOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFileAttributeFileTime_(JavaNioChannelsFileLock *lock, JavaNioChannelsFileChannel *channel, OrgLukhnosPortmobileFilePath *path, OrgLukhnosPortmobileFileAttributeFileTime *creationTime) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreNativeFSLockFactory_NativeFSLock, initWithJavaNioChannelsFileLock_withJavaNioChannelsFileChannel_withOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFileAttributeFileTime_, lock, channel, path, creationTime)
}

OrgApacheLuceneStoreNativeFSLockFactory_NativeFSLock *create_OrgApacheLuceneStoreNativeFSLockFactory_NativeFSLock_initWithJavaNioChannelsFileLock_withJavaNioChannelsFileChannel_withOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFileAttributeFileTime_(JavaNioChannelsFileLock *lock, JavaNioChannelsFileChannel *channel, OrgLukhnosPortmobileFilePath *path, OrgLukhnosPortmobileFileAttributeFileTime *creationTime) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreNativeFSLockFactory_NativeFSLock, initWithJavaNioChannelsFileLock_withJavaNioChannelsFileChannel_withOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFileAttributeFileTime_, lock, channel, path, creationTime)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneStoreNativeFSLockFactory_NativeFSLock)
