//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/store/FSDirectory.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/FileOutputStream.h"
#include "java/io/FilterOutputStream.h"
#include "java/io/OutputStream.h"
#include "java/lang/Math.h"
#include "java/lang/Throwable.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/List.h"
#include "org/apache/lucene/store/BaseDirectory.h"
#include "org/apache/lucene/store/FSDirectory.h"
#include "org/apache/lucene/store/FSLockFactory.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/store/LockFactory.h"
#include "org/apache/lucene/store/MMapDirectory.h"
#include "org/apache/lucene/store/NIOFSDirectory.h"
#include "org/apache/lucene/store/OutputStreamIndexOutput.h"
#include "org/apache/lucene/store/SimpleFSDirectory.h"
#include "org/apache/lucene/util/Constants.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/lukhnos/portmobile/file/DirectoryStream.h"
#include "org/lukhnos/portmobile/file/Files.h"
#include "org/lukhnos/portmobile/file/Path.h"
#include "org/lukhnos/portmobile/file/StandardCopyOption.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/store/FSDirectory must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneStoreFSDirectory_FSIndexOutput_1 : JavaIoFilterOutputStream

- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)x0;

- (void)writeWithByteArray:(IOSByteArray *)b
                   withInt:(jint)offset
                   withInt:(jint)length;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneStoreFSDirectory_FSIndexOutput_1)

__attribute__((unused)) static void OrgApacheLuceneStoreFSDirectory_FSIndexOutput_1_initWithJavaIoOutputStream_(OrgApacheLuceneStoreFSDirectory_FSIndexOutput_1 *self, JavaIoOutputStream *x0);

__attribute__((unused)) static OrgApacheLuceneStoreFSDirectory_FSIndexOutput_1 *new_OrgApacheLuceneStoreFSDirectory_FSIndexOutput_1_initWithJavaIoOutputStream_(JavaIoOutputStream *x0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneStoreFSDirectory_FSIndexOutput_1 *create_OrgApacheLuceneStoreFSDirectory_FSIndexOutput_1_initWithJavaIoOutputStream_(JavaIoOutputStream *x0);

@implementation OrgApacheLuceneStoreFSDirectory

- (instancetype)initWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path
                 withOrgApacheLuceneStoreLockFactory:(OrgApacheLuceneStoreLockFactory *)lockFactory {
  OrgApacheLuceneStoreFSDirectory_initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_(self, path, lockFactory);
  return self;
}

+ (OrgApacheLuceneStoreFSDirectory *)openWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path {
  return OrgApacheLuceneStoreFSDirectory_openWithOrgLukhnosPortmobileFilePath_(path);
}

+ (OrgApacheLuceneStoreFSDirectory *)openWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path
                                      withOrgApacheLuceneStoreLockFactory:(OrgApacheLuceneStoreLockFactory *)lockFactory {
  return OrgApacheLuceneStoreFSDirectory_openWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_(path, lockFactory);
}

+ (IOSObjectArray *)listAllWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)dir {
  return OrgApacheLuceneStoreFSDirectory_listAllWithOrgLukhnosPortmobileFilePath_(dir);
}

- (IOSObjectArray *)listAll {
  [self ensureOpen];
  return OrgApacheLuceneStoreFSDirectory_listAllWithOrgLukhnosPortmobileFilePath_(directory_);
}

- (jlong)fileLengthWithNSString:(NSString *)name {
  [self ensureOpen];
  return OrgLukhnosPortmobileFileFiles_sizeWithOrgLukhnosPortmobileFilePath_([((OrgLukhnosPortmobileFilePath *) nil_chk(directory_)) resolveWithNSString:name]);
}

- (void)deleteFileWithNSString:(NSString *)name {
  [self ensureOpen];
  OrgLukhnosPortmobileFileFiles_delete__WithOrgLukhnosPortmobileFilePath_([((OrgLukhnosPortmobileFilePath *) nil_chk(directory_)) resolveWithNSString:name]);
}

- (OrgApacheLuceneStoreIndexOutput *)createOutputWithNSString:(NSString *)name
                            withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context {
  [self ensureOpen];
  [self ensureCanWriteWithNSString:name];
  return create_OrgApacheLuceneStoreFSDirectory_FSIndexOutput_initWithOrgApacheLuceneStoreFSDirectory_withNSString_(self, name);
}

- (void)ensureCanWriteWithNSString:(NSString *)name {
  OrgLukhnosPortmobileFileFiles_deleteIfExistsWithOrgLukhnosPortmobileFilePath_([((OrgLukhnosPortmobileFilePath *) nil_chk(directory_)) resolveWithNSString:name]);
}

- (void)syncWithJavaUtilCollection:(id<JavaUtilCollection>)names {
  [self ensureOpen];
  for (NSString * __strong name in nil_chk(names)) {
    [self fsyncWithNSString:name];
  }
}

- (void)renameFileWithNSString:(NSString *)source
                  withNSString:(NSString *)dest {
  [self ensureOpen];
  OrgLukhnosPortmobileFileFiles_moveWithOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFileStandardCopyOptionArray_([((OrgLukhnosPortmobileFilePath *) nil_chk(directory_)) resolveWithNSString:source], [directory_ resolveWithNSString:dest], [IOSObjectArray arrayWithObjects:(id[]){ JreLoadStatic(OrgLukhnosPortmobileFileStandardCopyOption, ATOMIC_MOVE) } count:1 type:OrgLukhnosPortmobileFileStandardCopyOption_class_()]);
  OrgApacheLuceneUtilIOUtils_fsyncWithOrgLukhnosPortmobileFilePath_withBoolean_(directory_, true);
}

- (void)close {
  @synchronized(self) {
    JreAssignVolatileBoolean(&isOpen_, false);
  }
}

- (OrgLukhnosPortmobileFilePath *)getDirectory {
  [self ensureOpen];
  return directory_;
}

- (NSString *)description {
  return JreStrcat("$C@$@", [[self java_getClass] getSimpleName], '@', directory_, @" lockFactory=", lockFactory_);
}

- (void)fsyncWithNSString:(NSString *)name {
  OrgApacheLuceneUtilIOUtils_fsyncWithOrgLukhnosPortmobileFilePath_withBoolean_([((OrgLukhnosPortmobileFilePath *) nil_chk(directory_)) resolveWithNSString:name], false);
}

- (void)dealloc {
  RELEASE_(directory_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreFSDirectory;", 0x9, 2, 3, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreFSDirectory;", 0x9, 2, 0, 1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x9, 4, 3, 1, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "J", 0x1, 5, 6, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 6, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreIndexOutput;", 0x1, 8, 9, 1, -1, -1, -1 },
    { NULL, "V", 0x4, 10, 6, 1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, 1, 13, -1, -1 },
    { NULL, "V", 0x1, 14, 15, 1, -1, -1, -1 },
    { NULL, "V", 0x21, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgLukhnosPortmobileFilePath;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 16, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 17, 6, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgLukhnosPortmobileFilePath:withOrgApacheLuceneStoreLockFactory:);
  methods[1].selector = @selector(openWithOrgLukhnosPortmobileFilePath:);
  methods[2].selector = @selector(openWithOrgLukhnosPortmobileFilePath:withOrgApacheLuceneStoreLockFactory:);
  methods[3].selector = @selector(listAllWithOrgLukhnosPortmobileFilePath:);
  methods[4].selector = @selector(listAll);
  methods[5].selector = @selector(fileLengthWithNSString:);
  methods[6].selector = @selector(deleteFileWithNSString:);
  methods[7].selector = @selector(createOutputWithNSString:withOrgApacheLuceneStoreIOContext:);
  methods[8].selector = @selector(ensureCanWriteWithNSString:);
  methods[9].selector = @selector(syncWithJavaUtilCollection:);
  methods[10].selector = @selector(renameFileWithNSString:withNSString:);
  methods[11].selector = @selector(close);
  methods[12].selector = @selector(getDirectory);
  methods[13].selector = @selector(description);
  methods[14].selector = @selector(fsyncWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "directory_", "LOrgLukhnosPortmobileFilePath;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgLukhnosPortmobileFilePath;LOrgApacheLuceneStoreLockFactory;", "LJavaIoIOException;", "open", "LOrgLukhnosPortmobileFilePath;", "listAll", "fileLength", "LNSString;", "deleteFile", "createOutput", "LNSString;LOrgApacheLuceneStoreIOContext;", "ensureCanWrite", "sync", "LJavaUtilCollection;", "(Ljava/util/Collection<Ljava/lang/String;>;)V", "renameFile", "LNSString;LNSString;", "toString", "fsync", "LOrgApacheLuceneStoreFSDirectory_FSIndexOutput;" };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreFSDirectory = { "FSDirectory", "org.apache.lucene.store", ptrTable, methods, fields, 7, 0x401, 15, 1, -1, 18, -1, -1, -1 };
  return &_OrgApacheLuceneStoreFSDirectory;
}

@end

void OrgApacheLuceneStoreFSDirectory_initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_(OrgApacheLuceneStoreFSDirectory *self, OrgLukhnosPortmobileFilePath *path, OrgApacheLuceneStoreLockFactory *lockFactory) {
  OrgApacheLuceneStoreBaseDirectory_initWithOrgApacheLuceneStoreLockFactory_(self, lockFactory);
  if (!OrgLukhnosPortmobileFileFiles_isDirectoryWithOrgLukhnosPortmobileFilePath_(path)) {
    OrgLukhnosPortmobileFileFiles_createDirectoriesWithOrgLukhnosPortmobileFilePath_(path);
  }
  JreStrongAssign(&self->directory_, [((OrgLukhnosPortmobileFilePath *) nil_chk(path)) toRealPath]);
}

OrgApacheLuceneStoreFSDirectory *OrgApacheLuceneStoreFSDirectory_openWithOrgLukhnosPortmobileFilePath_(OrgLukhnosPortmobileFilePath *path) {
  OrgApacheLuceneStoreFSDirectory_initialize();
  return OrgApacheLuceneStoreFSDirectory_openWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_(path, OrgApacheLuceneStoreFSLockFactory_getDefault());
}

OrgApacheLuceneStoreFSDirectory *OrgApacheLuceneStoreFSDirectory_openWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_(OrgLukhnosPortmobileFilePath *path, OrgApacheLuceneStoreLockFactory *lockFactory) {
  OrgApacheLuceneStoreFSDirectory_initialize();
  if (JreLoadStatic(OrgApacheLuceneUtilConstants, JRE_IS_64BIT) && JreLoadStatic(OrgApacheLuceneStoreMMapDirectory, UNMAP_SUPPORTED)) {
    return create_OrgApacheLuceneStoreMMapDirectory_initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_(path, lockFactory);
  }
  else if (JreLoadStatic(OrgApacheLuceneUtilConstants, WINDOWS)) {
    return create_OrgApacheLuceneStoreSimpleFSDirectory_initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_(path, lockFactory);
  }
  else {
    return create_OrgApacheLuceneStoreNIOFSDirectory_initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_(path, lockFactory);
  }
}

IOSObjectArray *OrgApacheLuceneStoreFSDirectory_listAllWithOrgLukhnosPortmobileFilePath_(OrgLukhnosPortmobileFilePath *dir) {
  OrgApacheLuceneStoreFSDirectory_initialize();
  id<JavaUtilList> entries = create_JavaUtilArrayList_init();
  {
    id<OrgLukhnosPortmobileFileDirectoryStream> stream = OrgLukhnosPortmobileFileFiles_newDirectoryStreamWithOrgLukhnosPortmobileFilePath_(dir);
    JavaLangThrowable *__primaryException1 = nil;
    @try {
      for (OrgLukhnosPortmobileFilePath * __strong path in nil_chk(stream)) {
        [entries addWithId:[((OrgLukhnosPortmobileFilePath *) nil_chk([((OrgLukhnosPortmobileFilePath *) nil_chk(path)) getFileName])) description]];
      }
    }
    @catch (JavaLangThrowable *e) {
      __primaryException1 = e;
      @throw e;
    }
    @finally {
      if (stream != nil) {
        if (__primaryException1 != nil) {
          @try {
            [stream close];
          }
          @catch (JavaLangThrowable *e) {
            [__primaryException1 addSuppressedWithJavaLangThrowable:e];
          }
        }
        else {
          [stream close];
        }
      }
    }
  }
  return [entries toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[entries size] type:NSString_class_()]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneStoreFSDirectory)

@implementation OrgApacheLuceneStoreFSDirectory_FSIndexOutput

+ (jint)CHUNK_SIZE {
  return OrgApacheLuceneStoreFSDirectory_FSIndexOutput_CHUNK_SIZE;
}

- (instancetype)initWithOrgApacheLuceneStoreFSDirectory:(OrgApacheLuceneStoreFSDirectory *)outer$
                                           withNSString:(NSString *)name {
  OrgApacheLuceneStoreFSDirectory_FSIndexOutput_initWithOrgApacheLuceneStoreFSDirectory_withNSString_(self, outer$, name);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneStoreFSDirectory:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "CHUNK_SIZE", "I", .constantValue.asInt = OrgApacheLuceneStoreFSDirectory_FSIndexOutput_CHUNK_SIZE, 0x18, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneStoreFSDirectory;LNSString;", "LJavaIoIOException;", "LOrgApacheLuceneStoreFSDirectory;" };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreFSDirectory_FSIndexOutput = { "FSIndexOutput", "org.apache.lucene.store", ptrTable, methods, fields, 7, 0x10, 1, 1, 2, -1, -1, -1, -1 };
  return &_OrgApacheLuceneStoreFSDirectory_FSIndexOutput;
}

@end

void OrgApacheLuceneStoreFSDirectory_FSIndexOutput_initWithOrgApacheLuceneStoreFSDirectory_withNSString_(OrgApacheLuceneStoreFSDirectory_FSIndexOutput *self, OrgApacheLuceneStoreFSDirectory *outer$, NSString *name) {
  OrgApacheLuceneStoreOutputStreamIndexOutput_initWithNSString_withJavaIoOutputStream_withInt_(self, JreStrcat("$@$", @"FSIndexOutput(path=\"", [((OrgLukhnosPortmobileFilePath *) nil_chk(outer$->directory_)) resolveWithNSString:name], @"\")"), create_OrgApacheLuceneStoreFSDirectory_FSIndexOutput_1_initWithJavaIoOutputStream_(OrgLukhnosPortmobileFileFiles_newOutputStreamWithOrgLukhnosPortmobileFilePath_([outer$->directory_ resolveWithNSString:name])), OrgApacheLuceneStoreFSDirectory_FSIndexOutput_CHUNK_SIZE);
}

OrgApacheLuceneStoreFSDirectory_FSIndexOutput *new_OrgApacheLuceneStoreFSDirectory_FSIndexOutput_initWithOrgApacheLuceneStoreFSDirectory_withNSString_(OrgApacheLuceneStoreFSDirectory *outer$, NSString *name) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreFSDirectory_FSIndexOutput, initWithOrgApacheLuceneStoreFSDirectory_withNSString_, outer$, name)
}

OrgApacheLuceneStoreFSDirectory_FSIndexOutput *create_OrgApacheLuceneStoreFSDirectory_FSIndexOutput_initWithOrgApacheLuceneStoreFSDirectory_withNSString_(OrgApacheLuceneStoreFSDirectory *outer$, NSString *name) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreFSDirectory_FSIndexOutput, initWithOrgApacheLuceneStoreFSDirectory_withNSString_, outer$, name)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneStoreFSDirectory_FSIndexOutput)

@implementation OrgApacheLuceneStoreFSDirectory_FSIndexOutput_1

- (instancetype)initWithJavaIoOutputStream:(JavaIoOutputStream *)x0 {
  OrgApacheLuceneStoreFSDirectory_FSIndexOutput_1_initWithJavaIoOutputStream_(self, x0);
  return self;
}

- (void)writeWithByteArray:(IOSByteArray *)b
                   withInt:(jint)offset
                   withInt:(jint)length {
  while (length > 0) {
    jint chunk = JavaLangMath_minWithInt_withInt_(length, OrgApacheLuceneStoreFSDirectory_FSIndexOutput_CHUNK_SIZE);
    [((JavaIoOutputStream *) nil_chk(out_)) writeWithByteArray:b withInt:offset withInt:chunk];
    length -= chunk;
    offset += chunk;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaIoOutputStream:);
  methods[1].selector = @selector(writeWithByteArray:withInt:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaIoOutputStream;", "write", "[BII", "LJavaIoIOException;", "LOrgApacheLuceneStoreFSDirectory_FSIndexOutput;", "initWithOrgApacheLuceneStoreFSDirectory:withNSString:" };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreFSDirectory_FSIndexOutput_1 = { "", "org.apache.lucene.store", ptrTable, methods, NULL, 7, 0x8010, 2, 0, 4, -1, 5, -1, -1 };
  return &_OrgApacheLuceneStoreFSDirectory_FSIndexOutput_1;
}

@end

void OrgApacheLuceneStoreFSDirectory_FSIndexOutput_1_initWithJavaIoOutputStream_(OrgApacheLuceneStoreFSDirectory_FSIndexOutput_1 *self, JavaIoOutputStream *x0) {
  JavaIoFilterOutputStream_initWithJavaIoOutputStream_(self, x0);
}

OrgApacheLuceneStoreFSDirectory_FSIndexOutput_1 *new_OrgApacheLuceneStoreFSDirectory_FSIndexOutput_1_initWithJavaIoOutputStream_(JavaIoOutputStream *x0) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreFSDirectory_FSIndexOutput_1, initWithJavaIoOutputStream_, x0)
}

OrgApacheLuceneStoreFSDirectory_FSIndexOutput_1 *create_OrgApacheLuceneStoreFSDirectory_FSIndexOutput_1_initWithJavaIoOutputStream_(JavaIoOutputStream *x0) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreFSDirectory_FSIndexOutput_1, initWithJavaIoOutputStream_, x0)
}
