//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/store/SimpleFSDirectory.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/EOFException.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/nio/Buffer.h"
#include "java/nio/ByteBuffer.h"
#include "java/nio/channels/SeekableByteChannel.h"
#include "org/apache/lucene/store/BufferedIndexInput.h"
#include "org/apache/lucene/store/FSDirectory.h"
#include "org/apache/lucene/store/FSLockFactory.h"
#include "org/apache/lucene/store/IOContext.h"
#include "org/apache/lucene/store/IndexInput.h"
#include "org/apache/lucene/store/LockFactory.h"
#include "org/apache/lucene/store/SimpleFSDirectory.h"
#include "org/lukhnos/portmobile/file/Files.h"
#include "org/lukhnos/portmobile/file/Path.h"
#include "org/lukhnos/portmobile/file/StandardOpenOption.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/store/SimpleFSDirectory must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput () {
 @public
  JavaNioByteBuffer *byteBuf_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput, byteBuf_, JavaNioByteBuffer *)

/*!
 @brief The maximum chunk size for reads of 16384 bytes.
 */
inline jint OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput_get_CHUNK_SIZE(void);
#define OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput_CHUNK_SIZE 16384
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput, CHUNK_SIZE, jint)

__attribute__((unused)) static jlong OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput_length(OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput *self);

@implementation OrgApacheLuceneStoreSimpleFSDirectory

- (instancetype)initWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path
                 withOrgApacheLuceneStoreLockFactory:(OrgApacheLuceneStoreLockFactory *)lockFactory {
  OrgApacheLuceneStoreSimpleFSDirectory_initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_(self, path, lockFactory);
  return self;
}

- (instancetype)initWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path {
  OrgApacheLuceneStoreSimpleFSDirectory_initWithOrgLukhnosPortmobileFilePath_(self, path);
  return self;
}

- (OrgApacheLuceneStoreIndexInput *)openInputWithNSString:(NSString *)name
                        withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context {
  [self ensureOpen];
  OrgLukhnosPortmobileFilePath *path = JreRetainedLocalValue([((OrgLukhnosPortmobileFilePath *) nil_chk(directory_)) resolveWithNSString:name]);
  id<JavaNioChannelsSeekableByteChannel> channel = OrgLukhnosPortmobileFileFiles_newByteChannelWithOrgLukhnosPortmobileFilePath_withOrgLukhnosPortmobileFileStandardOpenOption_(path, JreLoadEnum(OrgLukhnosPortmobileFileStandardOpenOption, READ));
  return create_OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput_initWithNSString_withJavaNioChannelsSeekableByteChannel_withOrgApacheLuceneStoreIOContext_(JreStrcat("$@$", @"SimpleFSIndexInput(path=\"", path, @"\")"), channel, context);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreIndexInput;", 0x1, 3, 4, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgLukhnosPortmobileFilePath:withOrgApacheLuceneStoreLockFactory:);
  methods[1].selector = @selector(initWithOrgLukhnosPortmobileFilePath:);
  methods[2].selector = @selector(openInputWithNSString:withOrgApacheLuceneStoreIOContext:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgLukhnosPortmobileFilePath;LOrgApacheLuceneStoreLockFactory;", "LJavaIoIOException;", "LOrgLukhnosPortmobileFilePath;", "openInput", "LNSString;LOrgApacheLuceneStoreIOContext;", "LOrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput;" };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreSimpleFSDirectory = { "SimpleFSDirectory", "org.apache.lucene.store", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, 5, -1, -1, -1 };
  return &_OrgApacheLuceneStoreSimpleFSDirectory;
}

@end

void OrgApacheLuceneStoreSimpleFSDirectory_initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_(OrgApacheLuceneStoreSimpleFSDirectory *self, OrgLukhnosPortmobileFilePath *path, OrgApacheLuceneStoreLockFactory *lockFactory) {
  OrgApacheLuceneStoreFSDirectory_initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_(self, path, lockFactory);
}

OrgApacheLuceneStoreSimpleFSDirectory *new_OrgApacheLuceneStoreSimpleFSDirectory_initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_(OrgLukhnosPortmobileFilePath *path, OrgApacheLuceneStoreLockFactory *lockFactory) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreSimpleFSDirectory, initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_, path, lockFactory)
}

OrgApacheLuceneStoreSimpleFSDirectory *create_OrgApacheLuceneStoreSimpleFSDirectory_initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_(OrgLukhnosPortmobileFilePath *path, OrgApacheLuceneStoreLockFactory *lockFactory) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreSimpleFSDirectory, initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_, path, lockFactory)
}

void OrgApacheLuceneStoreSimpleFSDirectory_initWithOrgLukhnosPortmobileFilePath_(OrgApacheLuceneStoreSimpleFSDirectory *self, OrgLukhnosPortmobileFilePath *path) {
  OrgApacheLuceneStoreSimpleFSDirectory_initWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneStoreLockFactory_(self, path, OrgApacheLuceneStoreFSLockFactory_getDefault());
}

OrgApacheLuceneStoreSimpleFSDirectory *new_OrgApacheLuceneStoreSimpleFSDirectory_initWithOrgLukhnosPortmobileFilePath_(OrgLukhnosPortmobileFilePath *path) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreSimpleFSDirectory, initWithOrgLukhnosPortmobileFilePath_, path)
}

OrgApacheLuceneStoreSimpleFSDirectory *create_OrgApacheLuceneStoreSimpleFSDirectory_initWithOrgLukhnosPortmobileFilePath_(OrgLukhnosPortmobileFilePath *path) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreSimpleFSDirectory, initWithOrgLukhnosPortmobileFilePath_, path)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneStoreSimpleFSDirectory)

@implementation OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput

- (instancetype)initWithNSString:(NSString *)resourceDesc
withJavaNioChannelsSeekableByteChannel:(id<JavaNioChannelsSeekableByteChannel>)channel
withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context {
  OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput_initWithNSString_withJavaNioChannelsSeekableByteChannel_withOrgApacheLuceneStoreIOContext_(self, resourceDesc, channel, context);
  return self;
}

- (instancetype)initWithNSString:(NSString *)resourceDesc
withJavaNioChannelsSeekableByteChannel:(id<JavaNioChannelsSeekableByteChannel>)channel
                        withLong:(jlong)off
                        withLong:(jlong)length
                         withInt:(jint)bufferSize {
  OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput_initWithNSString_withJavaNioChannelsSeekableByteChannel_withLong_withLong_withInt_(self, resourceDesc, channel, off, length, bufferSize);
  return self;
}

- (void)close {
  if (!isClone_) {
    [((id<JavaNioChannelsSeekableByteChannel>) nil_chk(channel_)) close];
  }
}

- (OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput *)java_clone {
  OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput *clone = (OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput *) cast_chk([super java_clone], [OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput class]);
  ((OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput *) nil_chk(clone))->isClone_ = true;
  return clone;
}

- (OrgApacheLuceneStoreIndexInput *)sliceWithNSString:(NSString *)sliceDescription
                                             withLong:(jlong)offset
                                             withLong:(jlong)length {
  if (offset < 0 || length < 0 || offset + length > OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput_length(self)) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$@", @"slice() ", sliceDescription, @" out of bounds: ", self));
  }
  return create_OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput_initWithNSString_withJavaNioChannelsSeekableByteChannel_withLong_withLong_withInt_([self getFullSliceDescriptionWithNSString:sliceDescription], channel_, off_ + offset, length, [self getBufferSize]);
}

- (jlong)length {
  return OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput_length(self);
}

- (void)newBufferWithByteArray:(IOSByteArray *)newBuffer {
  [super newBufferWithByteArray:newBuffer];
  JreStrongAssign(&byteBuf_, JavaNioByteBuffer_wrapWithByteArray_(newBuffer));
}

- (void)readInternalWithByteArray:(IOSByteArray *)b
                          withInt:(jint)offset
                          withInt:(jint)len {
  JavaNioByteBuffer *bb;
  if (JreObjectEqualsEquals(b, buffer_)) {
    JreAssert(byteBuf_ != nil, @"org/apache/lucene/store/SimpleFSDirectory.java:155 condition failed: assert byteBuf != null;");
    bb = byteBuf_;
    [((JavaNioBuffer *) nil_chk([((JavaNioByteBuffer *) nil_chk(byteBuf_)) clear])) positionWithInt:offset];
  }
  else {
    bb = JavaNioByteBuffer_wrapWithByteArray_withInt_withInt_(b, offset, len);
  }
  @synchronized(channel_) {
    jlong pos = [self getFilePointer] + off_;
    if (pos + len > end_) {
      @throw create_JavaIoEOFException_initWithNSString_(JreStrcat("$@", @"read past EOF: ", self));
    }
    @try {
      [((id<JavaNioChannelsSeekableByteChannel>) nil_chk(channel_)) positionWithLong:pos];
      jint readLength = len;
      while (readLength > 0) {
        jint toRead = JavaLangMath_minWithInt_withInt_(OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput_CHUNK_SIZE, readLength);
        [((JavaNioByteBuffer *) nil_chk(bb)) limitWithInt:[bb position] + toRead];
        JreAssert([bb remaining] == toRead, @"org/apache/lucene/store/SimpleFSDirectory.java:176 condition failed: assert bb.remaining() == toRead;");
        jint i = [channel_ readWithJavaNioByteBuffer:bb];
        if (i < 0) {
          @throw create_JavaIoEOFException_initWithNSString_(JreStrcat("$@$I$I$J$I$J", @"read past EOF: ", self, @" off: ", offset, @" len: ", len, @" pos: ", pos, @" chunkLen: ", toRead, @" end: ", end_));
        }
        JreAssert(i > 0, @"SeekableByteChannel.read with non zero-length bb.remaining() must always read at least one byte (Channel is in blocking mode, see spec of ReadableByteChannel)");
        pos += i;
        readLength -= i;
      }
      JreAssert(readLength == 0, @"org/apache/lucene/store/SimpleFSDirectory.java:185 condition failed: assert readLength == 0;");
    }
    @catch (JavaIoIOException *ioe) {
      @throw create_JavaIoIOException_initWithNSString_withJavaLangThrowable_(JreStrcat("$$@", [ioe getMessage], @": ", self), ioe);
    }
  }
}

- (void)seekInternalWithLong:(jlong)pos {
}

- (void)dealloc {
  RELEASE_(channel_);
  RELEASE_(byteBuf_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput;", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneStoreIndexInput;", 0x1, 4, 5, 1, -1, -1, -1 },
    { NULL, "J", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 8, 9, 1, -1, -1, -1 },
    { NULL, "V", 0x4, 10, 11, 1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withJavaNioChannelsSeekableByteChannel:withOrgApacheLuceneStoreIOContext:);
  methods[1].selector = @selector(initWithNSString:withJavaNioChannelsSeekableByteChannel:withLong:withLong:withInt:);
  methods[2].selector = @selector(close);
  methods[3].selector = @selector(java_clone);
  methods[4].selector = @selector(sliceWithNSString:withLong:withLong:);
  methods[5].selector = @selector(length);
  methods[6].selector = @selector(newBufferWithByteArray:);
  methods[7].selector = @selector(readInternalWithByteArray:withInt:withInt:);
  methods[8].selector = @selector(seekInternalWithLong:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "CHUNK_SIZE", "I", .constantValue.asInt = OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput_CHUNK_SIZE, 0x1a, -1, -1, -1, -1 },
    { "channel_", "LJavaNioChannelsSeekableByteChannel;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "isClone_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "off_", "J", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "end_", "J", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "byteBuf_", "LJavaNioByteBuffer;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LJavaNioChannelsSeekableByteChannel;LOrgApacheLuceneStoreIOContext;", "LJavaIoIOException;", "LNSString;LJavaNioChannelsSeekableByteChannel;JJI", "clone", "slice", "LNSString;JJ", "newBuffer", "[B", "readInternal", "[BII", "seekInternal", "J", "LOrgApacheLuceneStoreSimpleFSDirectory;" };
  static const J2ObjcClassInfo _OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput = { "SimpleFSIndexInput", "org.apache.lucene.store", ptrTable, methods, fields, 7, 0x18, 9, 6, 12, -1, -1, -1, -1 };
  return &_OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput;
}

@end

void OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput_initWithNSString_withJavaNioChannelsSeekableByteChannel_withOrgApacheLuceneStoreIOContext_(OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput *self, NSString *resourceDesc, id<JavaNioChannelsSeekableByteChannel> channel, OrgApacheLuceneStoreIOContext *context) {
  OrgApacheLuceneStoreBufferedIndexInput_initWithNSString_withOrgApacheLuceneStoreIOContext_(self, resourceDesc, context);
  self->isClone_ = false;
  JreStrongAssign(&self->channel_, channel);
  self->off_ = 0LL;
  self->end_ = [((id<JavaNioChannelsSeekableByteChannel>) nil_chk(channel)) size];
}

OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput *new_OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput_initWithNSString_withJavaNioChannelsSeekableByteChannel_withOrgApacheLuceneStoreIOContext_(NSString *resourceDesc, id<JavaNioChannelsSeekableByteChannel> channel, OrgApacheLuceneStoreIOContext *context) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput, initWithNSString_withJavaNioChannelsSeekableByteChannel_withOrgApacheLuceneStoreIOContext_, resourceDesc, channel, context)
}

OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput *create_OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput_initWithNSString_withJavaNioChannelsSeekableByteChannel_withOrgApacheLuceneStoreIOContext_(NSString *resourceDesc, id<JavaNioChannelsSeekableByteChannel> channel, OrgApacheLuceneStoreIOContext *context) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput, initWithNSString_withJavaNioChannelsSeekableByteChannel_withOrgApacheLuceneStoreIOContext_, resourceDesc, channel, context)
}

void OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput_initWithNSString_withJavaNioChannelsSeekableByteChannel_withLong_withLong_withInt_(OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput *self, NSString *resourceDesc, id<JavaNioChannelsSeekableByteChannel> channel, jlong off, jlong length, jint bufferSize) {
  OrgApacheLuceneStoreBufferedIndexInput_initWithNSString_withInt_(self, resourceDesc, bufferSize);
  self->isClone_ = false;
  JreStrongAssign(&self->channel_, channel);
  self->off_ = off;
  self->end_ = off + length;
  self->isClone_ = true;
}

OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput *new_OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput_initWithNSString_withJavaNioChannelsSeekableByteChannel_withLong_withLong_withInt_(NSString *resourceDesc, id<JavaNioChannelsSeekableByteChannel> channel, jlong off, jlong length, jint bufferSize) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput, initWithNSString_withJavaNioChannelsSeekableByteChannel_withLong_withLong_withInt_, resourceDesc, channel, off, length, bufferSize)
}

OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput *create_OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput_initWithNSString_withJavaNioChannelsSeekableByteChannel_withLong_withLong_withInt_(NSString *resourceDesc, id<JavaNioChannelsSeekableByteChannel> channel, jlong off, jlong length, jint bufferSize) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput, initWithNSString_withJavaNioChannelsSeekableByteChannel_withLong_withLong_withInt_, resourceDesc, channel, off, length, bufferSize)
}

jlong OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput_length(OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput *self) {
  return self->end_ - self->off_;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneStoreSimpleFSDirectory_SimpleFSIndexInput)
