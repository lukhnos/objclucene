//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./sandbox/src/java/org/apache/lucene/bkdtree/BKDPointInBBoxQuery.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/StringBuilder.h"
#include "java/util/Set.h"
#include "org/apache/lucene/bkdtree/BKDPointInBBoxQuery.h"
#include "org/apache/lucene/bkdtree/BKDTreeReader.h"
#include "org/apache/lucene/bkdtree/BKDTreeSortedNumericDocValues.h"
#include "org/apache/lucene/bkdtree/BKDTreeWriter.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/index/SortedNumericDocValues.h"
#include "org/apache/lucene/search/BooleanClause.h"
#include "org/apache/lucene/search/BooleanQuery.h"
#include "org/apache/lucene/search/DocIdSet.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/search/Explanation.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/Weight.h"
#include "org/apache/lucene/util/ToStringUtils.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/bkdtree/BKDPointInBBoxQuery must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1 : OrgApacheLuceneSearchWeight {
 @public
  OrgApacheLuceneBkdtreeBKDPointInBBoxQuery *this$0_;
  jfloat queryNorm_;
  jfloat queryWeight_;
}

- (instancetype)initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery:(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery *)outer$
                                   withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query;

- (void)extractTermsWithJavaUtilSet:(id<JavaUtilSet>)terms;

- (jfloat)getValueForNormalization;

- (void)normalizeWithFloat:(jfloat)norm
                 withFloat:(jfloat)topLevelBoost;

- (OrgApacheLuceneSearchExplanation *)explainWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                                                               withInt:(jint)doc;

- (OrgApacheLuceneSearchScorer *)scorerWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1)

__attribute__((unused)) static void OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1 *self, OrgApacheLuceneBkdtreeBKDPointInBBoxQuery *outer$, OrgApacheLuceneSearchQuery *query);

__attribute__((unused)) static OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1 *new_OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery *outer$, OrgApacheLuceneSearchQuery *query) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1 *create_OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery *outer$, OrgApacheLuceneSearchQuery *query);

@interface OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_1 : OrgApacheLuceneSearchScorer {
 @public
  OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1 *this$0_;
  OrgApacheLuceneSearchDocIdSetIterator *val$disi_;
}

- (instancetype)initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1:(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1 *)outer$
                          withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)capture$0
                                    withOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight;

- (jfloat)score;

- (jint)freq;

- (jint)docID;

- (jint)nextDoc;

- (jint)advanceWithInt:(jint)target;

- (jlong)cost;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_1)

__attribute__((unused)) static void OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_1_initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_withOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchWeight_(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_1 *self, OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1 *outer$, OrgApacheLuceneSearchDocIdSetIterator *capture$0, OrgApacheLuceneSearchWeight *weight);

__attribute__((unused)) static OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_1 *new_OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_1_initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_withOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchWeight_(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1 *outer$, OrgApacheLuceneSearchDocIdSetIterator *capture$0, OrgApacheLuceneSearchWeight *weight) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_1 *create_OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_1_initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_withOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchWeight_(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1 *outer$, OrgApacheLuceneSearchDocIdSetIterator *capture$0, OrgApacheLuceneSearchWeight *weight);

@implementation OrgApacheLuceneBkdtreeBKDPointInBBoxQuery

- (instancetype)initWithNSString:(NSString *)field
                      withDouble:(jdouble)minLat
                      withDouble:(jdouble)maxLat
                      withDouble:(jdouble)minLon
                      withDouble:(jdouble)maxLon {
  OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_initWithNSString_withDouble_withDouble_withDouble_withDouble_(self, field, minLat, maxLat, minLon, maxLon);
  return self;
}

- (OrgApacheLuceneSearchWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                        withBoolean:(jboolean)needsScores {
  return create_OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_withOrgApacheLuceneSearchQuery_(self, self);
}

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader {
  if (maxLon_ < minLon_) {
    OrgApacheLuceneSearchBooleanQuery_Builder *q = create_OrgApacheLuceneSearchBooleanQuery_Builder_init();
    [q setDisableCoordWithBoolean:true];
    OrgApacheLuceneBkdtreeBKDPointInBBoxQuery *left = create_OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_initWithNSString_withDouble_withDouble_withDouble_withDouble_(field_, minLat_, maxLat_, OrgApacheLuceneBkdtreeBKDTreeWriter_MIN_LON_INCL, maxLon_);
    [left setBoostWithFloat:[self getBoost]];
    [q addWithOrgApacheLuceneSearchBooleanClause:create_OrgApacheLuceneSearchBooleanClause_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchBooleanClause_Occur_(left, JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, SHOULD))];
    OrgApacheLuceneBkdtreeBKDPointInBBoxQuery *right = create_OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_initWithNSString_withDouble_withDouble_withDouble_withDouble_(field_, minLat_, maxLat_, minLon_, JreLoadStatic(OrgApacheLuceneBkdtreeBKDTreeWriter, MAX_LON_INCL));
    [right setBoostWithFloat:[self getBoost]];
    [q addWithOrgApacheLuceneSearchBooleanClause:create_OrgApacheLuceneSearchBooleanClause_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchBooleanClause_Occur_(right, JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, SHOULD))];
    return [q build];
  }
  else {
    return self;
  }
}

- (NSUInteger)hash {
  jint hash_ = ((jint) [super hash]);
  hash_ += (jint) JavaLangDouble_doubleToRawLongBitsWithDouble_(minLat_) ^ (jint) 0x14fa55fb;
  hash_ += (jint) JavaLangDouble_doubleToRawLongBitsWithDouble_(maxLat_) ^ (jint) 0x733fa5fe;
  hash_ += (jint) JavaLangDouble_doubleToRawLongBitsWithDouble_(minLon_) ^ (jint) 0x14fa55fb;
  hash_ += (jint) JavaLangDouble_doubleToRawLongBitsWithDouble_(maxLon_) ^ (jint) 0x733fa5fe;
  return hash_;
}

- (jboolean)isEqual:(id)other {
  if ([super isEqual:other] && [other isKindOfClass:[OrgApacheLuceneBkdtreeBKDPointInBBoxQuery class]]) {
    OrgApacheLuceneBkdtreeBKDPointInBBoxQuery *q = (OrgApacheLuceneBkdtreeBKDPointInBBoxQuery *) cast_chk(other, [OrgApacheLuceneBkdtreeBKDPointInBBoxQuery class]);
    return [((NSString *) nil_chk(field_)) isEqual:((OrgApacheLuceneBkdtreeBKDPointInBBoxQuery *) nil_chk(q))->field_] && minLat_ == q->minLat_ && maxLat_ == q->maxLat_ && minLon_ == q->minLon_ && maxLon_ == q->maxLon_;
  }
  return false;
}

- (NSString *)toStringWithNSString:(NSString *)field {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [sb appendWithNSString:[[self java_getClass] getSimpleName]];
  [sb appendWithChar:':'];
  if ([((NSString *) nil_chk(self->field_)) isEqual:field] == false) {
    [sb appendWithNSString:@"field="];
    [sb appendWithNSString:self->field_];
    [sb appendWithChar:':'];
  }
  return [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@" Lower Left: ["])) appendWithDouble:minLon_])) appendWithChar:','])) appendWithDouble:minLat_])) appendWithChar:']'])) appendWithNSString:@" Upper Right: ["])) appendWithDouble:maxLon_])) appendWithChar:','])) appendWithDouble:maxLat_])) appendWithNSString:@"]"])) appendWithNSString:OrgApacheLuceneUtilToStringUtils_boostWithFloat_([self getBoost])])) description];
}

- (void)dealloc {
  RELEASE_(field_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchWeight;", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchQuery;", 0x1, 4, 5, 3, -1, -1, -1 },
    { NULL, "I", 0x1, 6, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, 10, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withDouble:withDouble:withDouble:withDouble:);
  methods[1].selector = @selector(createWeightWithOrgApacheLuceneSearchIndexSearcher:withBoolean:);
  methods[2].selector = @selector(rewriteWithOrgApacheLuceneIndexIndexReader:);
  methods[3].selector = @selector(hash);
  methods[4].selector = @selector(isEqual:);
  methods[5].selector = @selector(toStringWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "field_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "minLat_", "D", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "maxLat_", "D", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "minLon_", "D", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "maxLon_", "D", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;DDDD", "createWeight", "LOrgApacheLuceneSearchIndexSearcher;Z", "LJavaIoIOException;", "rewrite", "LOrgApacheLuceneIndexIndexReader;", "hashCode", "equals", "LNSObject;", "toString", "LNSString;" };
  static const J2ObjcClassInfo _OrgApacheLuceneBkdtreeBKDPointInBBoxQuery = { "BKDPointInBBoxQuery", "org.apache.lucene.bkdtree", ptrTable, methods, fields, 7, 0x1, 6, 5, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneBkdtreeBKDPointInBBoxQuery;
}

@end

void OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_initWithNSString_withDouble_withDouble_withDouble_withDouble_(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery *self, NSString *field, jdouble minLat, jdouble maxLat, jdouble minLon, jdouble maxLon) {
  OrgApacheLuceneSearchQuery_init(self);
  JreStrongAssign(&self->field_, field);
  if (OrgApacheLuceneBkdtreeBKDTreeWriter_validLatWithDouble_(minLat) == false) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$D$", @"minLat=", minLat, @" is not a valid latitude"));
  }
  if (OrgApacheLuceneBkdtreeBKDTreeWriter_validLatWithDouble_(maxLat) == false) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$D$", @"maxLat=", maxLat, @" is not a valid latitude"));
  }
  if (OrgApacheLuceneBkdtreeBKDTreeWriter_validLonWithDouble_(minLon) == false) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$D$", @"minLon=", minLon, @" is not a valid longitude"));
  }
  if (OrgApacheLuceneBkdtreeBKDTreeWriter_validLonWithDouble_(maxLon) == false) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$D$", @"maxLon=", maxLon, @" is not a valid longitude"));
  }
  self->minLon_ = minLon;
  self->maxLon_ = maxLon;
  self->minLat_ = minLat;
  self->maxLat_ = maxLat;
}

OrgApacheLuceneBkdtreeBKDPointInBBoxQuery *new_OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_initWithNSString_withDouble_withDouble_withDouble_withDouble_(NSString *field, jdouble minLat, jdouble maxLat, jdouble minLon, jdouble maxLon) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery, initWithNSString_withDouble_withDouble_withDouble_withDouble_, field, minLat, maxLat, minLon, maxLon)
}

OrgApacheLuceneBkdtreeBKDPointInBBoxQuery *create_OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_initWithNSString_withDouble_withDouble_withDouble_withDouble_(NSString *field, jdouble minLat, jdouble maxLat, jdouble minLon, jdouble maxLon) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery, initWithNSString_withDouble_withDouble_withDouble_withDouble_, field, minLat, maxLat, minLon, maxLon)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery)

@implementation OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1

- (instancetype)initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery:(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery *)outer$
                                   withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query {
  OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_withOrgApacheLuceneSearchQuery_(self, outer$, query);
  return self;
}

- (void)extractTermsWithJavaUtilSet:(id<JavaUtilSet>)terms {
}

- (jfloat)getValueForNormalization {
  queryWeight_ = [this$0_ getBoost];
  return queryWeight_ * queryWeight_;
}

- (void)normalizeWithFloat:(jfloat)norm
                 withFloat:(jfloat)topLevelBoost {
  queryNorm_ = norm * topLevelBoost;
  JreTimesAssignFloatF(&queryWeight_, queryNorm_);
}

- (OrgApacheLuceneSearchExplanation *)explainWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                                                               withInt:(jint)doc {
  OrgApacheLuceneSearchScorer *s = [self scorerWithOrgApacheLuceneIndexLeafReaderContext:context];
  jboolean exists = s != nil && [s advanceWithInt:doc] == doc;
  if (exists) {
    return OrgApacheLuceneSearchExplanation_matchWithFloat_withNSString_withOrgApacheLuceneSearchExplanationArray_(queryWeight_, JreStrcat("$$", [this$0_ description], @", product of:"), [IOSObjectArray arrayWithObjects:(id[]){ OrgApacheLuceneSearchExplanation_matchWithFloat_withNSString_withOrgApacheLuceneSearchExplanationArray_([this$0_ getBoost], @"boost", [IOSObjectArray arrayWithLength:0 type:OrgApacheLuceneSearchExplanation_class_()]), OrgApacheLuceneSearchExplanation_matchWithFloat_withNSString_withOrgApacheLuceneSearchExplanationArray_(queryNorm_, @"queryNorm", [IOSObjectArray arrayWithLength:0 type:OrgApacheLuceneSearchExplanation_class_()]) } count:2 type:OrgApacheLuceneSearchExplanation_class_()]);
  }
  else {
    return OrgApacheLuceneSearchExplanation_noMatchWithNSString_withOrgApacheLuceneSearchExplanationArray_(JreStrcat("$$I", [this$0_ description], @" doesn't match id ", doc), [IOSObjectArray arrayWithLength:0 type:OrgApacheLuceneSearchExplanation_class_()]);
  }
}

- (OrgApacheLuceneSearchScorer *)scorerWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context {
  OrgApacheLuceneIndexLeafReader *reader = JreRetainedLocalValue([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader]);
  OrgApacheLuceneIndexSortedNumericDocValues *sdv = JreRetainedLocalValue([((OrgApacheLuceneIndexLeafReader *) nil_chk(reader)) getSortedNumericDocValuesWithNSString:this$0_->field_]);
  if (sdv == nil) {
    return JreRetainedLocalValue(nil);
  }
  if ([sdv isKindOfClass:[OrgApacheLuceneBkdtreeBKDTreeSortedNumericDocValues class]] == false) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$$@", @"field \"", this$0_->field_, @"\" was not indexed with BKDTreeDocValuesFormat: got: ", sdv));
  }
  OrgApacheLuceneBkdtreeBKDTreeSortedNumericDocValues *treeDV = (OrgApacheLuceneBkdtreeBKDTreeSortedNumericDocValues *) cast_chk(sdv, [OrgApacheLuceneBkdtreeBKDTreeSortedNumericDocValues class]);
  OrgApacheLuceneBkdtreeBKDTreeReader *tree = JreRetainedLocalValue([treeDV getBKDTreeReader]);
  OrgApacheLuceneSearchDocIdSet *result = JreRetainedLocalValue([((OrgApacheLuceneBkdtreeBKDTreeReader *) nil_chk(tree)) intersectWithDouble:this$0_->minLat_ withDouble:this$0_->maxLat_ withDouble:this$0_->minLon_ withDouble:this$0_->maxLon_ withOrgApacheLuceneIndexSortedNumericDocValues:treeDV->delegate_]);
  OrgApacheLuceneSearchDocIdSetIterator *disi = [((OrgApacheLuceneSearchDocIdSet *) nil_chk(result)) iterator];
  return create_OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_1_initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_withOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchWeight_(self, disi, self);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, 3, -1, -1 },
    { NULL, "F", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchExplanation;", 0x1, 7, 8, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchScorer;", 0x1, 9, 10, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery:withOrgApacheLuceneSearchQuery:);
  methods[1].selector = @selector(extractTermsWithJavaUtilSet:);
  methods[2].selector = @selector(getValueForNormalization);
  methods[3].selector = @selector(normalizeWithFloat:withFloat:);
  methods[4].selector = @selector(explainWithOrgApacheLuceneIndexLeafReaderContext:withInt:);
  methods[5].selector = @selector(scorerWithOrgApacheLuceneIndexLeafReaderContext:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneBkdtreeBKDPointInBBoxQuery;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "queryNorm_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "queryWeight_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneBkdtreeBKDPointInBBoxQuery;LOrgApacheLuceneSearchQuery;", "extractTerms", "LJavaUtilSet;", "(Ljava/util/Set<Lorg/apache/lucene/index/Term;>;)V", "LJavaIoIOException;", "normalize", "FF", "explain", "LOrgApacheLuceneIndexLeafReaderContext;I", "scorer", "LOrgApacheLuceneIndexLeafReaderContext;", "LOrgApacheLuceneBkdtreeBKDPointInBBoxQuery;", "createWeightWithOrgApacheLuceneSearchIndexSearcher:withBoolean:" };
  static const J2ObjcClassInfo _OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1 = { "", "org.apache.lucene.bkdtree", ptrTable, methods, fields, 7, 0x8010, 6, 3, 11, -1, 12, -1, -1 };
  return &_OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1;
}

@end

void OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1 *self, OrgApacheLuceneBkdtreeBKDPointInBBoxQuery *outer$, OrgApacheLuceneSearchQuery *query) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneSearchWeight_initWithOrgApacheLuceneSearchQuery_(self, query);
}

OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1 *new_OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery *outer$, OrgApacheLuceneSearchQuery *query) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1, initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_withOrgApacheLuceneSearchQuery_, outer$, query)
}

OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1 *create_OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery *outer$, OrgApacheLuceneSearchQuery *query) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1, initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_withOrgApacheLuceneSearchQuery_, outer$, query)
}

@implementation OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_1

- (instancetype)initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1:(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1 *)outer$
                          withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)capture$0
                                    withOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight {
  OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_1_initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_withOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchWeight_(self, outer$, capture$0, weight);
  return self;
}

- (jfloat)score {
  return this$0_->queryWeight_;
}

- (jint)freq {
  return 1;
}

- (jint)docID {
  return [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(val$disi_)) docID];
}

- (jint)nextDoc {
  return [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(val$disi_)) nextDoc];
}

- (jint)advanceWithInt:(jint)target {
  return [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(val$disi_)) advanceWithInt:target];
}

- (jlong)cost {
  return [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(val$disi_)) cost];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$disi_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, 3, 1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1:withOrgApacheLuceneSearchDocIdSetIterator:withOrgApacheLuceneSearchWeight:);
  methods[1].selector = @selector(score);
  methods[2].selector = @selector(freq);
  methods[3].selector = @selector(docID);
  methods[4].selector = @selector(nextDoc);
  methods[5].selector = @selector(advanceWithInt:);
  methods[6].selector = @selector(cost);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$disi_", "LOrgApacheLuceneSearchDocIdSetIterator;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1;LOrgApacheLuceneSearchDocIdSetIterator;LOrgApacheLuceneSearchWeight;", "LJavaIoIOException;", "advance", "I", "LOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1;", "scorerWithOrgApacheLuceneIndexLeafReaderContext:" };
  static const J2ObjcClassInfo _OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_1 = { "", "org.apache.lucene.bkdtree", ptrTable, methods, fields, 7, 0x8010, 7, 2, 4, -1, 5, -1, -1 };
  return &_OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_1;
}

@end

void OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_1_initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_withOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchWeight_(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_1 *self, OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1 *outer$, OrgApacheLuceneSearchDocIdSetIterator *capture$0, OrgApacheLuceneSearchWeight *weight) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$disi_, capture$0);
  OrgApacheLuceneSearchScorer_initWithOrgApacheLuceneSearchWeight_(self, weight);
}

OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_1 *new_OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_1_initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_withOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchWeight_(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1 *outer$, OrgApacheLuceneSearchDocIdSetIterator *capture$0, OrgApacheLuceneSearchWeight *weight) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_1, initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_withOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchWeight_, outer$, capture$0, weight)
}

OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_1 *create_OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_1_initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_withOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchWeight_(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1 *outer$, OrgApacheLuceneSearchDocIdSetIterator *capture$0, OrgApacheLuceneSearchWeight *weight) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_1, initWithOrgApacheLuceneBkdtreeBKDPointInBBoxQuery_1_withOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchWeight_, outer$, capture$0, weight)
}
