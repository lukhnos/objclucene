//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./sandbox/src/java/org/apache/lucene/bkdtree/BKDTreeWriter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/lang/Double.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/Throwable.h"
#include "java/util/Arrays.h"
#include "java/util/Comparator.h"
#include "java/util/function/Function.h"
#include "java/util/function/ToDoubleFunction.h"
#include "java/util/function/ToIntFunction.h"
#include "java/util/function/ToLongFunction.h"
#include "org/apache/lucene/bkdtree/BKDTreeWriter.h"
#include "org/apache/lucene/bkdtree/GrowingHeapLatLonWriter.h"
#include "org/apache/lucene/bkdtree/HeapLatLonWriter.h"
#include "org/apache/lucene/bkdtree/LatLonReader.h"
#include "org/apache/lucene/bkdtree/LatLonWriter.h"
#include "org/apache/lucene/bkdtree/OfflineLatLonWriter.h"
#include "org/apache/lucene/store/ByteArrayDataInput.h"
#include "org/apache/lucene/store/ByteArrayDataOutput.h"
#include "org/apache/lucene/store/IndexOutput.h"
#include "org/apache/lucene/util/ArrayUtil.h"
#include "org/apache/lucene/util/BytesRef.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"
#include "org/apache/lucene/util/IOUtils.h"
#include "org/apache/lucene/util/InPlaceMergeSorter.h"
#include "org/apache/lucene/util/LongBitSet.h"
#include "org/apache/lucene/util/OfflineSorter.h"
#include "org/lukhnos/portmobile/file/DirectoryStream.h"
#include "org/lukhnos/portmobile/file/Files.h"
#include "org/lukhnos/portmobile/file/Path.h"

@class OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice;

#if __has_feature(objc_arc)
#error "org/apache/lucene/bkdtree/BKDTreeWriter must not be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wprotocol"

@interface OrgApacheLuceneBkdtreeBKDTreeWriter () {
 @public
  IOSByteArray *scratchBytes_;
  OrgApacheLuceneStoreByteArrayDataOutput *scratchBytesOutput_;
  OrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter *writer_;
  OrgApacheLuceneBkdtreeGrowingHeapLatLonWriter *heapWriter_;
  OrgLukhnosPortmobileFilePath *tempInput_;
  OrgLukhnosPortmobileFilePath *tempDir_;
  jint maxPointsInLeafNode_;
  jint maxPointsSortInHeap_;
  jlong pointCount_;
}

/*!
 @brief If the current segment has too many points then we switchover to temp files / offline sort.
 */
- (void)switchToOffline;

/*!
 @brief Changes incoming <code>ByteSequencesWriter</code> file to to fixed-width-per-entry file, because we need to be able to slice
   as we recurse in <code>build</code>.
 */
- (id<OrgApacheLuceneBkdtreeLatLonWriter>)convertToFixedWidthWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)inArg;

- (id<OrgApacheLuceneBkdtreeLatLonWriter>)sortWithBoolean:(jboolean)lon;

- (jboolean)directoryIsEmptyWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)inArg;

/*!
 @brief Marks bits for the ords (points) that belong in the left sub tree.
 */
- (jlong)markLeftTreeWithInt:(jint)splitDim
withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice:(OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice *)source
withOrgApacheLuceneUtilLongBitSet:(OrgApacheLuceneUtilLongBitSet *)bitSet
                withIntArray:(IOSIntArray *)splitValueRet
                     withInt:(jint)minLatEnc
                     withInt:(jint)maxLatEnc
                     withInt:(jint)minLonEnc
                     withInt:(jint)maxLonEnc;

/*!
 @brief The incoming PathSlice for the dim we will split is already partitioned/sorted.
 */
- (void)buildWithInt:(jint)nodeID
             withInt:(jint)leafNodeOffset
withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice:(OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice *)lastLatSorted
withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice:(OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice *)lastLonSorted
withOrgApacheLuceneUtilLongBitSet:(OrgApacheLuceneUtilLongBitSet *)bitSet
withOrgApacheLuceneStoreIndexOutput:(OrgApacheLuceneStoreIndexOutput *)outArg
             withInt:(jint)minLatEnc
             withInt:(jint)maxLatEnc
             withInt:(jint)minLonEnc
             withInt:(jint)maxLonEnc
        withIntArray:(IOSIntArray *)splitValues
       withLongArray:(IOSLongArray *)leafBlockFPs;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneBkdtreeBKDTreeWriter, scratchBytes_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneBkdtreeBKDTreeWriter, scratchBytesOutput_, OrgApacheLuceneStoreByteArrayDataOutput *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneBkdtreeBKDTreeWriter, writer_, OrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneBkdtreeBKDTreeWriter, heapWriter_, OrgApacheLuceneBkdtreeGrowingHeapLatLonWriter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneBkdtreeBKDTreeWriter, tempInput_, OrgLukhnosPortmobileFilePath *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneBkdtreeBKDTreeWriter, tempDir_, OrgLukhnosPortmobileFilePath *)

inline jint OrgApacheLuceneBkdtreeBKDTreeWriter_get_BITS(void);
#define OrgApacheLuceneBkdtreeBKDTreeWriter_BITS 32
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneBkdtreeBKDTreeWriter, BITS, jint)

inline jdouble OrgApacheLuceneBkdtreeBKDTreeWriter_get_LON_SCALE(void);
#define OrgApacheLuceneBkdtreeBKDTreeWriter_LON_SCALE 1.1930464702777777E7
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneBkdtreeBKDTreeWriter, LON_SCALE, jdouble)

inline jdouble OrgApacheLuceneBkdtreeBKDTreeWriter_get_LAT_SCALE(void);
#define OrgApacheLuceneBkdtreeBKDTreeWriter_LAT_SCALE 2.3860929405555554E7
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneBkdtreeBKDTreeWriter, LAT_SCALE, jdouble)

__attribute__((unused)) static void OrgApacheLuceneBkdtreeBKDTreeWriter_switchToOffline(OrgApacheLuceneBkdtreeBKDTreeWriter *self);

__attribute__((unused)) static id<OrgApacheLuceneBkdtreeLatLonWriter> OrgApacheLuceneBkdtreeBKDTreeWriter_convertToFixedWidthWithOrgLukhnosPortmobileFilePath_(OrgApacheLuceneBkdtreeBKDTreeWriter *self, OrgLukhnosPortmobileFilePath *inArg);

__attribute__((unused)) static id<OrgApacheLuceneBkdtreeLatLonWriter> OrgApacheLuceneBkdtreeBKDTreeWriter_sortWithBoolean_(OrgApacheLuceneBkdtreeBKDTreeWriter *self, jboolean lon);

__attribute__((unused)) static jboolean OrgApacheLuceneBkdtreeBKDTreeWriter_directoryIsEmptyWithOrgLukhnosPortmobileFilePath_(OrgApacheLuceneBkdtreeBKDTreeWriter *self, OrgLukhnosPortmobileFilePath *inArg);

__attribute__((unused)) static jlong OrgApacheLuceneBkdtreeBKDTreeWriter_markLeftTreeWithInt_withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_withOrgApacheLuceneUtilLongBitSet_withIntArray_withInt_withInt_withInt_withInt_(OrgApacheLuceneBkdtreeBKDTreeWriter *self, jint splitDim, OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice *source, OrgApacheLuceneUtilLongBitSet *bitSet, IOSIntArray *splitValueRet, jint minLatEnc, jint maxLatEnc, jint minLonEnc, jint maxLonEnc);

__attribute__((unused)) static void OrgApacheLuceneBkdtreeBKDTreeWriter_buildWithInt_withInt_withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_withOrgApacheLuceneUtilLongBitSet_withOrgApacheLuceneStoreIndexOutput_withInt_withInt_withInt_withInt_withIntArray_withLongArray_(OrgApacheLuceneBkdtreeBKDTreeWriter *self, jint nodeID, jint leafNodeOffset, OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice *lastLatSorted, OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice *lastLonSorted, OrgApacheLuceneUtilLongBitSet *bitSet, OrgApacheLuceneStoreIndexOutput *outArg, jint minLatEnc, jint maxLatEnc, jint minLonEnc, jint maxLonEnc, IOSIntArray *splitValues, IOSLongArray *leafBlockFPs);

@interface OrgApacheLuceneBkdtreeBKDTreeWriter_1 : OrgApacheLuceneUtilInPlaceMergeSorter {
 @public
  OrgApacheLuceneBkdtreeBKDTreeWriter *this$0_;
  jboolean val$lon_;
}

- (instancetype)initWithOrgApacheLuceneBkdtreeBKDTreeWriter:(OrgApacheLuceneBkdtreeBKDTreeWriter *)outer$
                                                withBoolean:(jboolean)capture$0;

- (void)swapWithInt:(jint)i
            withInt:(jint)j;

- (jint)compareWithInt:(jint)i
               withInt:(jint)j;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneBkdtreeBKDTreeWriter_1)

__attribute__((unused)) static void OrgApacheLuceneBkdtreeBKDTreeWriter_1_initWithOrgApacheLuceneBkdtreeBKDTreeWriter_withBoolean_(OrgApacheLuceneBkdtreeBKDTreeWriter_1 *self, OrgApacheLuceneBkdtreeBKDTreeWriter *outer$, jboolean capture$0);

__attribute__((unused)) static OrgApacheLuceneBkdtreeBKDTreeWriter_1 *new_OrgApacheLuceneBkdtreeBKDTreeWriter_1_initWithOrgApacheLuceneBkdtreeBKDTreeWriter_withBoolean_(OrgApacheLuceneBkdtreeBKDTreeWriter *outer$, jboolean capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneBkdtreeBKDTreeWriter_1 *create_OrgApacheLuceneBkdtreeBKDTreeWriter_1_initWithOrgApacheLuceneBkdtreeBKDTreeWriter_withBoolean_(OrgApacheLuceneBkdtreeBKDTreeWriter *outer$, jboolean capture$0);

@interface OrgApacheLuceneBkdtreeBKDTreeWriter_2 : NSObject < JavaUtilComparator > {
 @public
  OrgApacheLuceneStoreByteArrayDataInput *val$reader_;
  jboolean val$lon_;
  OrgApacheLuceneStoreByteArrayDataInput *readerB_;
}

- (instancetype)initWithOrgApacheLuceneStoreByteArrayDataInput:(OrgApacheLuceneStoreByteArrayDataInput *)capture$0
                                                   withBoolean:(jboolean)capture$1;

- (jint)compareWithId:(OrgApacheLuceneUtilBytesRef *)a
               withId:(OrgApacheLuceneUtilBytesRef *)b;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneBkdtreeBKDTreeWriter_2)

J2OBJC_FIELD_SETTER(OrgApacheLuceneBkdtreeBKDTreeWriter_2, readerB_, OrgApacheLuceneStoreByteArrayDataInput *)

__attribute__((unused)) static void OrgApacheLuceneBkdtreeBKDTreeWriter_2_initWithOrgApacheLuceneStoreByteArrayDataInput_withBoolean_(OrgApacheLuceneBkdtreeBKDTreeWriter_2 *self, OrgApacheLuceneStoreByteArrayDataInput *capture$0, jboolean capture$1);

__attribute__((unused)) static OrgApacheLuceneBkdtreeBKDTreeWriter_2 *new_OrgApacheLuceneBkdtreeBKDTreeWriter_2_initWithOrgApacheLuceneStoreByteArrayDataInput_withBoolean_(OrgApacheLuceneStoreByteArrayDataInput *capture$0, jboolean capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneBkdtreeBKDTreeWriter_2 *create_OrgApacheLuceneBkdtreeBKDTreeWriter_2_initWithOrgApacheLuceneStoreByteArrayDataInput_withBoolean_(OrgApacheLuceneStoreByteArrayDataInput *capture$0, jboolean capture$1);

/*!
 @brief Sliced reference to points in an OfflineSorter.ByteSequencesWriter file.
 */
@interface OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice : NSObject {
 @public
  id<OrgApacheLuceneBkdtreeLatLonWriter> writer_;
  jlong start_;
  jlong count_;
}

- (instancetype)initWithOrgApacheLuceneBkdtreeLatLonWriter:(id<OrgApacheLuceneBkdtreeLatLonWriter>)writer
                                                  withLong:(jlong)start
                                                  withLong:(jlong)count;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice)

J2OBJC_FIELD_SETTER(OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice, writer_, id<OrgApacheLuceneBkdtreeLatLonWriter>)

__attribute__((unused)) static void OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_initWithOrgApacheLuceneBkdtreeLatLonWriter_withLong_withLong_(OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice *self, id<OrgApacheLuceneBkdtreeLatLonWriter> writer, jlong start, jlong count);

__attribute__((unused)) static OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice *new_OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_initWithOrgApacheLuceneBkdtreeLatLonWriter_withLong_withLong_(id<OrgApacheLuceneBkdtreeLatLonWriter> writer, jlong start, jlong count) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice *create_OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_initWithOrgApacheLuceneBkdtreeLatLonWriter_withLong_withLong_(id<OrgApacheLuceneBkdtreeLatLonWriter> writer, jlong start, jlong count);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice)

J2OBJC_INITIALIZED_DEFN(OrgApacheLuceneBkdtreeBKDTreeWriter)

jdouble OrgApacheLuceneBkdtreeBKDTreeWriter_MAX_LAT_INCL;
jdouble OrgApacheLuceneBkdtreeBKDTreeWriter_MAX_LON_INCL;

@implementation OrgApacheLuceneBkdtreeBKDTreeWriter

+ (jint)BYTES_PER_DOC {
  return OrgApacheLuceneBkdtreeBKDTreeWriter_BYTES_PER_DOC;
}

+ (jint)DEFAULT_MAX_POINTS_IN_LEAF_NODE {
  return OrgApacheLuceneBkdtreeBKDTreeWriter_DEFAULT_MAX_POINTS_IN_LEAF_NODE;
}

+ (jint)DEFAULT_MAX_POINTS_SORT_IN_HEAP {
  return OrgApacheLuceneBkdtreeBKDTreeWriter_DEFAULT_MAX_POINTS_SORT_IN_HEAP;
}

+ (jdouble)MAX_LAT_INCL {
  return OrgApacheLuceneBkdtreeBKDTreeWriter_MAX_LAT_INCL;
}

+ (jdouble)MAX_LON_INCL {
  return OrgApacheLuceneBkdtreeBKDTreeWriter_MAX_LON_INCL;
}

+ (jdouble)MIN_LAT_INCL {
  return OrgApacheLuceneBkdtreeBKDTreeWriter_MIN_LAT_INCL;
}

+ (jdouble)MIN_LON_INCL {
  return OrgApacheLuceneBkdtreeBKDTreeWriter_MIN_LON_INCL;
}

+ (jdouble)TOLERANCE {
  return OrgApacheLuceneBkdtreeBKDTreeWriter_TOLERANCE;
}

- (instancetype)initPackagePrivate {
  OrgApacheLuceneBkdtreeBKDTreeWriter_initPackagePrivate(self);
  return self;
}

- (instancetype)initPackagePrivateWithInt:(jint)maxPointsInLeafNode
                                  withInt:(jint)maxPointsSortInHeap {
  OrgApacheLuceneBkdtreeBKDTreeWriter_initPackagePrivateWithInt_withInt_(self, maxPointsInLeafNode, maxPointsSortInHeap);
  return self;
}

+ (void)verifyParamsWithInt:(jint)maxPointsInLeafNode
                    withInt:(jint)maxPointsSortInHeap {
  OrgApacheLuceneBkdtreeBKDTreeWriter_verifyParamsWithInt_withInt_(maxPointsInLeafNode, maxPointsSortInHeap);
}

- (void)addWithDouble:(jdouble)lat
           withDouble:(jdouble)lon
              withInt:(jint)docID {
  if (OrgApacheLuceneBkdtreeBKDTreeWriter_validLatWithDouble_(lat) == false) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$D", @"invalid lat: ", lat));
  }
  if (OrgApacheLuceneBkdtreeBKDTreeWriter_validLonWithDouble_(lon) == false) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$D", @"invalid lon: ", lon));
  }
  [self addWithInt:OrgApacheLuceneBkdtreeBKDTreeWriter_encodeLatWithDouble_(lat) withInt:OrgApacheLuceneBkdtreeBKDTreeWriter_encodeLonWithDouble_(lon) withInt:docID];
}

- (void)switchToOffline {
  OrgApacheLuceneBkdtreeBKDTreeWriter_switchToOffline(self);
}

- (void)addWithInt:(jint)latEnc
           withInt:(jint)lonEnc
           withInt:(jint)docID {
  JreAssert(latEnc > JavaLangInteger_MIN_VALUE, @"org/apache/lucene/bkdtree/BKDTreeWriter.java:166 condition failed: assert latEnc > Integer.MIN_VALUE;");
  JreAssert(latEnc < JavaLangInteger_MAX_VALUE, @"org/apache/lucene/bkdtree/BKDTreeWriter.java:167 condition failed: assert latEnc < Integer.MAX_VALUE;");
  JreAssert(lonEnc > JavaLangInteger_MIN_VALUE, @"org/apache/lucene/bkdtree/BKDTreeWriter.java:168 condition failed: assert lonEnc > Integer.MIN_VALUE;");
  JreAssert(lonEnc < JavaLangInteger_MAX_VALUE, @"org/apache/lucene/bkdtree/BKDTreeWriter.java:169 condition failed: assert lonEnc < Integer.MAX_VALUE;");
  if (pointCount_ >= maxPointsSortInHeap_) {
    if (writer_ == nil) {
      OrgApacheLuceneBkdtreeBKDTreeWriter_switchToOffline(self);
    }
    [((OrgApacheLuceneStoreByteArrayDataOutput *) nil_chk(scratchBytesOutput_)) resetWithByteArray:scratchBytes_];
    [scratchBytesOutput_ writeIntWithInt:latEnc];
    [scratchBytesOutput_ writeIntWithInt:lonEnc];
    [scratchBytesOutput_ writeVIntWithInt:docID];
    [scratchBytesOutput_ writeVLongWithLong:pointCount_];
    [((OrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter *) nil_chk(writer_)) writeWithByteArray:scratchBytes_ withInt:0 withInt:((IOSByteArray *) nil_chk(scratchBytes_))->size_];
  }
  else {
    [((OrgApacheLuceneBkdtreeGrowingHeapLatLonWriter *) nil_chk(heapWriter_)) appendWithInt:latEnc withInt:lonEnc withLong:pointCount_ withInt:docID];
  }
  pointCount_++;
}

- (id<OrgApacheLuceneBkdtreeLatLonWriter>)convertToFixedWidthWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)inArg {
  return OrgApacheLuceneBkdtreeBKDTreeWriter_convertToFixedWidthWithOrgLukhnosPortmobileFilePath_(self, inArg);
}

- (id<OrgApacheLuceneBkdtreeLatLonWriter>)sortWithBoolean:(jboolean)lon {
  return OrgApacheLuceneBkdtreeBKDTreeWriter_sortWithBoolean_(self, lon);
}

- (jlong)finishWithOrgApacheLuceneStoreIndexOutput:(OrgApacheLuceneStoreIndexOutput *)outArg {
  if (writer_ != nil) {
    [writer_ close];
  }
  OrgApacheLuceneUtilLongBitSet *bitSet = create_OrgApacheLuceneUtilLongBitSet_initWithLong_(pointCount_);
  jlong countPerLeaf = pointCount_;
  jlong innerNodeCount = 1;
  while (countPerLeaf > maxPointsInLeafNode_) {
    countPerLeaf /= 2;
    innerNodeCount *= 2;
  }
  if (1 + 2 * innerNodeCount >= JavaLangInteger_MAX_VALUE) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I$", @"too many nodes; increase maxPointsInLeafNode (currently ", maxPointsInLeafNode_, @") and reindex"));
  }
  innerNodeCount--;
  jint numLeaves = (jint) (innerNodeCount + 1);
  IOSIntArray *splitValues = [IOSIntArray arrayWithLength:numLeaves];
  IOSLongArray *leafBlockFPs = [IOSLongArray arrayWithLength:numLeaves];
  JreAssert(JreLongDiv(pointCount_, splitValues->size_) <= maxPointsInLeafNode_, JreStrcat("$J$I$I", @"pointCount=", pointCount_, @" splitValues.length=", splitValues->size_, @" maxPointsInLeafNode=", maxPointsInLeafNode_));
  id<OrgApacheLuceneBkdtreeLatLonWriter> latSortedWriter = nil;
  id<OrgApacheLuceneBkdtreeLatLonWriter> lonSortedWriter = nil;
  jboolean success = false;
  @try {
    lonSortedWriter = OrgApacheLuceneBkdtreeBKDTreeWriter_sortWithBoolean_(self, true);
    latSortedWriter = OrgApacheLuceneBkdtreeBKDTreeWriter_sortWithBoolean_(self, false);
    JreStrongAssign(&heapWriter_, nil);
    OrgApacheLuceneBkdtreeBKDTreeWriter_buildWithInt_withInt_withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_withOrgApacheLuceneUtilLongBitSet_withOrgApacheLuceneStoreIndexOutput_withInt_withInt_withInt_withInt_withIntArray_withLongArray_(self, 1, numLeaves, create_OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_initWithOrgApacheLuceneBkdtreeLatLonWriter_withLong_withLong_(latSortedWriter, 0, pointCount_), create_OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_initWithOrgApacheLuceneBkdtreeLatLonWriter_withLong_withLong_(lonSortedWriter, 0, pointCount_), bitSet, outArg, JavaLangInteger_MIN_VALUE, JavaLangInteger_MAX_VALUE, JavaLangInteger_MIN_VALUE, JavaLangInteger_MAX_VALUE, splitValues, leafBlockFPs);
    success = true;
  }
  @finally {
    if (success) {
      [((id<OrgApacheLuceneBkdtreeLatLonWriter>) nil_chk(latSortedWriter)) destroy];
      [((id<OrgApacheLuceneBkdtreeLatLonWriter>) nil_chk(lonSortedWriter)) destroy];
      OrgApacheLuceneUtilIOUtils_rmWithOrgLukhnosPortmobileFilePathArray_([IOSObjectArray arrayWithObjects:(id[]){ tempInput_ } count:1 type:OrgLukhnosPortmobileFilePath_class_()]);
    }
    else {
      @try {
        [((id<OrgApacheLuceneBkdtreeLatLonWriter>) nil_chk(latSortedWriter)) destroy];
      }
      @catch (JavaLangThrowable *t) {
      }
      @try {
        [((id<OrgApacheLuceneBkdtreeLatLonWriter>) nil_chk(lonSortedWriter)) destroy];
      }
      @catch (JavaLangThrowable *t) {
      }
      OrgApacheLuceneUtilIOUtils_deleteFilesIgnoringExceptionsWithOrgLukhnosPortmobileFilePathArray_([IOSObjectArray arrayWithObjects:(id[]){ tempInput_ } count:1 type:OrgLukhnosPortmobileFilePath_class_()]);
    }
  }
  jlong indexFP = [((OrgApacheLuceneStoreIndexOutput *) nil_chk(outArg)) getFilePointer];
  [outArg writeVIntWithInt:numLeaves];
  for (jint i = 0; i < splitValues->size_; i++) {
    [outArg writeIntWithInt:IOSIntArray_Get(splitValues, i)];
  }
  for (jint i = 0; i < leafBlockFPs->size_; i++) {
    [outArg writeVLongWithLong:IOSLongArray_Get(leafBlockFPs, i)];
  }
  if (tempDir_ != nil) {
    JreAssert(OrgApacheLuceneBkdtreeBKDTreeWriter_directoryIsEmptyWithOrgLukhnosPortmobileFilePath_(self, tempDir_), @"org/apache/lucene/bkdtree/BKDTreeWriter.java:447 condition failed: assert directoryIsEmpty(tempDir);");
    OrgApacheLuceneUtilIOUtils_rmWithOrgLukhnosPortmobileFilePathArray_([IOSObjectArray arrayWithObjects:(id[]){ tempDir_ } count:1 type:OrgLukhnosPortmobileFilePath_class_()]);
  }
  return indexFP;
}

- (jboolean)directoryIsEmptyWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)inArg {
  return OrgApacheLuceneBkdtreeBKDTreeWriter_directoryIsEmptyWithOrgLukhnosPortmobileFilePath_(self, inArg);
}

- (jlong)markLeftTreeWithInt:(jint)splitDim
withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice:(OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice *)source
withOrgApacheLuceneUtilLongBitSet:(OrgApacheLuceneUtilLongBitSet *)bitSet
                withIntArray:(IOSIntArray *)splitValueRet
                     withInt:(jint)minLatEnc
                     withInt:(jint)maxLatEnc
                     withInt:(jint)minLonEnc
                     withInt:(jint)maxLonEnc {
  return OrgApacheLuceneBkdtreeBKDTreeWriter_markLeftTreeWithInt_withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_withOrgApacheLuceneUtilLongBitSet_withIntArray_withInt_withInt_withInt_withInt_(self, splitDim, source, bitSet, splitValueRet, minLatEnc, maxLatEnc, minLonEnc, maxLonEnc);
}

- (void)buildWithInt:(jint)nodeID
             withInt:(jint)leafNodeOffset
withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice:(OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice *)lastLatSorted
withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice:(OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice *)lastLonSorted
withOrgApacheLuceneUtilLongBitSet:(OrgApacheLuceneUtilLongBitSet *)bitSet
withOrgApacheLuceneStoreIndexOutput:(OrgApacheLuceneStoreIndexOutput *)outArg
             withInt:(jint)minLatEnc
             withInt:(jint)maxLatEnc
             withInt:(jint)minLonEnc
             withInt:(jint)maxLonEnc
        withIntArray:(IOSIntArray *)splitValues
       withLongArray:(IOSLongArray *)leafBlockFPs {
  OrgApacheLuceneBkdtreeBKDTreeWriter_buildWithInt_withInt_withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_withOrgApacheLuceneUtilLongBitSet_withOrgApacheLuceneStoreIndexOutput_withInt_withInt_withInt_withInt_withIntArray_withLongArray_(self, nodeID, leafNodeOffset, lastLatSorted, lastLonSorted, bitSet, outArg, minLatEnc, maxLatEnc, minLonEnc, maxLonEnc, splitValues, leafBlockFPs);
}

- (id<OrgApacheLuceneBkdtreeLatLonWriter>)getWriterWithLong:(jlong)count {
  if (count < maxPointsSortInHeap_) {
    return create_OrgApacheLuceneBkdtreeHeapLatLonWriter_initPackagePrivateWithInt_((jint) count);
  }
  else {
    return create_OrgApacheLuceneBkdtreeOfflineLatLonWriter_initPackagePrivateWithOrgLukhnosPortmobileFilePath_withLong_(tempDir_, count);
  }
}

+ (jboolean)validLatWithDouble:(jdouble)lat {
  return OrgApacheLuceneBkdtreeBKDTreeWriter_validLatWithDouble_(lat);
}

+ (jboolean)validLonWithDouble:(jdouble)lon {
  return OrgApacheLuceneBkdtreeBKDTreeWriter_validLonWithDouble_(lon);
}

+ (jint)encodeLatWithDouble:(jdouble)lat {
  return OrgApacheLuceneBkdtreeBKDTreeWriter_encodeLatWithDouble_(lat);
}

+ (jint)encodeLonWithDouble:(jdouble)lon {
  return OrgApacheLuceneBkdtreeBKDTreeWriter_encodeLonWithDouble_(lon);
}

+ (jdouble)decodeLatWithInt:(jint)x {
  return OrgApacheLuceneBkdtreeBKDTreeWriter_decodeLatWithInt_(x);
}

+ (jdouble)decodeLonWithInt:(jint)x {
  return OrgApacheLuceneBkdtreeBKDTreeWriter_decodeLonWithInt_(x);
}

- (void)dealloc {
  RELEASE_(scratchBytes_);
  RELEASE_(scratchBytesOutput_);
  RELEASE_(writer_);
  RELEASE_(heapWriter_);
  RELEASE_(tempInput_);
  RELEASE_(tempDir_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, 0, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, 0, -1, -1, -1 },
    { NULL, "V", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 0, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, 0, -1, -1, -1 },
    { NULL, "V", 0x0, 3, 5, 0, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneBkdtreeLatLonWriter;", 0x2, 6, 7, 0, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneBkdtreeLatLonWriter;", 0x2, 8, 9, 0, -1, -1, -1 },
    { NULL, "J", 0x1, 10, 11, 0, -1, -1, -1 },
    { NULL, "Z", 0x2, 12, 7, -1, -1, -1, -1 },
    { NULL, "J", 0x2, 13, 14, 0, -1, -1, -1 },
    { NULL, "V", 0x2, 15, 16, 0, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneBkdtreeLatLonWriter;", 0x0, 17, 18, 0, -1, -1, -1 },
    { NULL, "Z", 0x8, 19, 20, -1, -1, -1, -1 },
    { NULL, "Z", 0x8, 21, 20, -1, -1, -1, -1 },
    { NULL, "I", 0x8, 22, 20, -1, -1, -1, -1 },
    { NULL, "I", 0x8, 23, 20, -1, -1, -1, -1 },
    { NULL, "D", 0x8, 24, 25, -1, -1, -1, -1 },
    { NULL, "D", 0x8, 26, 25, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivate);
  methods[1].selector = @selector(initPackagePrivateWithInt:withInt:);
  methods[2].selector = @selector(verifyParamsWithInt:withInt:);
  methods[3].selector = @selector(addWithDouble:withDouble:withInt:);
  methods[4].selector = @selector(switchToOffline);
  methods[5].selector = @selector(addWithInt:withInt:withInt:);
  methods[6].selector = @selector(convertToFixedWidthWithOrgLukhnosPortmobileFilePath:);
  methods[7].selector = @selector(sortWithBoolean:);
  methods[8].selector = @selector(finishWithOrgApacheLuceneStoreIndexOutput:);
  methods[9].selector = @selector(directoryIsEmptyWithOrgLukhnosPortmobileFilePath:);
  methods[10].selector = @selector(markLeftTreeWithInt:withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice:withOrgApacheLuceneUtilLongBitSet:withIntArray:withInt:withInt:withInt:withInt:);
  methods[11].selector = @selector(buildWithInt:withInt:withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice:withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice:withOrgApacheLuceneUtilLongBitSet:withOrgApacheLuceneStoreIndexOutput:withInt:withInt:withInt:withInt:withIntArray:withLongArray:);
  methods[12].selector = @selector(getWriterWithLong:);
  methods[13].selector = @selector(validLatWithDouble:);
  methods[14].selector = @selector(validLonWithDouble:);
  methods[15].selector = @selector(encodeLatWithDouble:);
  methods[16].selector = @selector(encodeLonWithDouble:);
  methods[17].selector = @selector(decodeLatWithInt:);
  methods[18].selector = @selector(decodeLonWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "BYTES_PER_DOC", "I", .constantValue.asInt = OrgApacheLuceneBkdtreeBKDTreeWriter_BYTES_PER_DOC, 0x18, -1, -1, -1, -1 },
    { "DEFAULT_MAX_POINTS_IN_LEAF_NODE", "I", .constantValue.asInt = OrgApacheLuceneBkdtreeBKDTreeWriter_DEFAULT_MAX_POINTS_IN_LEAF_NODE, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_MAX_POINTS_SORT_IN_HEAP", "I", .constantValue.asInt = OrgApacheLuceneBkdtreeBKDTreeWriter_DEFAULT_MAX_POINTS_SORT_IN_HEAP, 0x19, -1, -1, -1, -1 },
    { "scratchBytes_", "[B", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "scratchBytesOutput_", "LOrgApacheLuceneStoreByteArrayDataOutput;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "writer_", "LOrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "heapWriter_", "LOrgApacheLuceneBkdtreeGrowingHeapLatLonWriter;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "tempInput_", "LOrgLukhnosPortmobileFilePath;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "tempDir_", "LOrgLukhnosPortmobileFilePath;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "maxPointsInLeafNode_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "maxPointsSortInHeap_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "pointCount_", "J", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "MAX_LAT_INCL", "D", .constantValue.asLong = 0, 0x18, -1, 27, -1, -1 },
    { "MAX_LON_INCL", "D", .constantValue.asLong = 0, 0x18, -1, 28, -1, -1 },
    { "MIN_LAT_INCL", "D", .constantValue.asDouble = OrgApacheLuceneBkdtreeBKDTreeWriter_MIN_LAT_INCL, 0x18, -1, -1, -1, -1 },
    { "MIN_LON_INCL", "D", .constantValue.asDouble = OrgApacheLuceneBkdtreeBKDTreeWriter_MIN_LON_INCL, 0x18, -1, -1, -1, -1 },
    { "BITS", "I", .constantValue.asInt = OrgApacheLuceneBkdtreeBKDTreeWriter_BITS, 0x1a, -1, -1, -1, -1 },
    { "LON_SCALE", "D", .constantValue.asDouble = OrgApacheLuceneBkdtreeBKDTreeWriter_LON_SCALE, 0x1a, -1, -1, -1, -1 },
    { "LAT_SCALE", "D", .constantValue.asDouble = OrgApacheLuceneBkdtreeBKDTreeWriter_LAT_SCALE, 0x1a, -1, -1, -1, -1 },
    { "TOLERANCE", "D", .constantValue.asDouble = OrgApacheLuceneBkdtreeBKDTreeWriter_TOLERANCE, 0x19, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoIOException;", "II", "verifyParams", "add", "DDI", "III", "convertToFixedWidth", "LOrgLukhnosPortmobileFilePath;", "sort", "Z", "finish", "LOrgApacheLuceneStoreIndexOutput;", "directoryIsEmpty", "markLeftTree", "ILOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice;LOrgApacheLuceneUtilLongBitSet;[IIIII", "build", "IILOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice;LOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice;LOrgApacheLuceneUtilLongBitSet;LOrgApacheLuceneStoreIndexOutput;IIII[I[J", "getWriter", "J", "validLat", "D", "validLon", "encodeLat", "encodeLon", "decodeLat", "I", "decodeLon", &OrgApacheLuceneBkdtreeBKDTreeWriter_MAX_LAT_INCL, &OrgApacheLuceneBkdtreeBKDTreeWriter_MAX_LON_INCL, "LOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice;" };
  static const J2ObjcClassInfo _OrgApacheLuceneBkdtreeBKDTreeWriter = { "BKDTreeWriter", "org.apache.lucene.bkdtree", ptrTable, methods, fields, 7, 0x0, 19, 20, -1, 29, -1, -1, -1 };
  return &_OrgApacheLuceneBkdtreeBKDTreeWriter;
}

+ (void)initialize {
  if (self == [OrgApacheLuceneBkdtreeBKDTreeWriter class]) {
    OrgApacheLuceneBkdtreeBKDTreeWriter_MAX_LAT_INCL = JavaLangMath_nextAfterWithDouble_withDouble_(90.0, JavaLangDouble_POSITIVE_INFINITY);
    OrgApacheLuceneBkdtreeBKDTreeWriter_MAX_LON_INCL = JavaLangMath_nextAfterWithDouble_withDouble_(180.0, JavaLangDouble_POSITIVE_INFINITY);
    J2OBJC_SET_INITIALIZED(OrgApacheLuceneBkdtreeBKDTreeWriter)
  }
}

@end

void OrgApacheLuceneBkdtreeBKDTreeWriter_initPackagePrivate(OrgApacheLuceneBkdtreeBKDTreeWriter *self) {
  OrgApacheLuceneBkdtreeBKDTreeWriter_initPackagePrivateWithInt_withInt_(self, OrgApacheLuceneBkdtreeBKDTreeWriter_DEFAULT_MAX_POINTS_IN_LEAF_NODE, OrgApacheLuceneBkdtreeBKDTreeWriter_DEFAULT_MAX_POINTS_SORT_IN_HEAP);
}

OrgApacheLuceneBkdtreeBKDTreeWriter *new_OrgApacheLuceneBkdtreeBKDTreeWriter_initPackagePrivate() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneBkdtreeBKDTreeWriter, initPackagePrivate)
}

OrgApacheLuceneBkdtreeBKDTreeWriter *create_OrgApacheLuceneBkdtreeBKDTreeWriter_initPackagePrivate() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneBkdtreeBKDTreeWriter, initPackagePrivate)
}

void OrgApacheLuceneBkdtreeBKDTreeWriter_initPackagePrivateWithInt_withInt_(OrgApacheLuceneBkdtreeBKDTreeWriter *self, jint maxPointsInLeafNode, jint maxPointsSortInHeap) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->scratchBytes_, [IOSByteArray newArrayWithLength:OrgApacheLuceneBkdtreeBKDTreeWriter_BYTES_PER_DOC]);
  JreStrongAssignAndConsume(&self->scratchBytesOutput_, new_OrgApacheLuceneStoreByteArrayDataOutput_initWithByteArray_(self->scratchBytes_));
  OrgApacheLuceneBkdtreeBKDTreeWriter_verifyParamsWithInt_withInt_(maxPointsInLeafNode, maxPointsSortInHeap);
  self->maxPointsInLeafNode_ = maxPointsInLeafNode;
  self->maxPointsSortInHeap_ = maxPointsSortInHeap;
  JreStrongAssignAndConsume(&self->heapWriter_, new_OrgApacheLuceneBkdtreeGrowingHeapLatLonWriter_initPackagePrivateWithInt_(maxPointsSortInHeap));
}

OrgApacheLuceneBkdtreeBKDTreeWriter *new_OrgApacheLuceneBkdtreeBKDTreeWriter_initPackagePrivateWithInt_withInt_(jint maxPointsInLeafNode, jint maxPointsSortInHeap) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneBkdtreeBKDTreeWriter, initPackagePrivateWithInt_withInt_, maxPointsInLeafNode, maxPointsSortInHeap)
}

OrgApacheLuceneBkdtreeBKDTreeWriter *create_OrgApacheLuceneBkdtreeBKDTreeWriter_initPackagePrivateWithInt_withInt_(jint maxPointsInLeafNode, jint maxPointsSortInHeap) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneBkdtreeBKDTreeWriter, initPackagePrivateWithInt_withInt_, maxPointsInLeafNode, maxPointsSortInHeap)
}

void OrgApacheLuceneBkdtreeBKDTreeWriter_verifyParamsWithInt_withInt_(jint maxPointsInLeafNode, jint maxPointsSortInHeap) {
  OrgApacheLuceneBkdtreeBKDTreeWriter_initialize();
  if (maxPointsInLeafNode <= 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"maxPointsInLeafNode must be > 0; got ", maxPointsInLeafNode));
  }
  if (maxPointsInLeafNode > JreLoadStatic(OrgApacheLuceneUtilArrayUtil, MAX_ARRAY_LENGTH)) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$I", @"maxPointsInLeafNode must be <= ArrayUtil.MAX_ARRAY_LENGTH (= ", JreLoadStatic(OrgApacheLuceneUtilArrayUtil, MAX_ARRAY_LENGTH), @"); got ", maxPointsInLeafNode));
  }
  if (maxPointsSortInHeap < maxPointsInLeafNode) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$I", @"maxPointsSortInHeap must be >= maxPointsInLeafNode; got ", maxPointsSortInHeap, @" vs maxPointsInLeafNode=", maxPointsInLeafNode));
  }
  if (maxPointsSortInHeap > JreLoadStatic(OrgApacheLuceneUtilArrayUtil, MAX_ARRAY_LENGTH)) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$I", @"maxPointsSortInHeap must be <= ArrayUtil.MAX_ARRAY_LENGTH (= ", JreLoadStatic(OrgApacheLuceneUtilArrayUtil, MAX_ARRAY_LENGTH), @"); got ", maxPointsSortInHeap));
  }
}

void OrgApacheLuceneBkdtreeBKDTreeWriter_switchToOffline(OrgApacheLuceneBkdtreeBKDTreeWriter *self) {
  JreStrongAssign(&self->tempDir_, OrgLukhnosPortmobileFileFiles_createTempDirectoryWithOrgLukhnosPortmobileFilePath_withNSString_(OrgApacheLuceneUtilOfflineSorter_defaultTempDir(), [OrgApacheLuceneBkdtreeBKDTreeWriter_class_() getSimpleName]));
  JreStrongAssign(&self->tempInput_, [((OrgLukhnosPortmobileFilePath *) nil_chk(self->tempDir_)) resolveWithNSString:@"in"]);
  JreStrongAssignAndConsume(&self->writer_, new_OrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter_initWithOrgLukhnosPortmobileFilePath_(self->tempInput_));
  for (jint i = 0; i < self->pointCount_; i++) {
    [((OrgApacheLuceneStoreByteArrayDataOutput *) nil_chk(self->scratchBytesOutput_)) resetWithByteArray:self->scratchBytes_];
    [self->scratchBytesOutput_ writeIntWithInt:IOSIntArray_Get(nil_chk(((OrgApacheLuceneBkdtreeGrowingHeapLatLonWriter *) nil_chk(self->heapWriter_))->latEncs_), i)];
    [self->scratchBytesOutput_ writeIntWithInt:IOSIntArray_Get(nil_chk(((OrgApacheLuceneBkdtreeGrowingHeapLatLonWriter *) nil_chk(self->heapWriter_))->lonEncs_), i)];
    [self->scratchBytesOutput_ writeVIntWithInt:IOSIntArray_Get(nil_chk(((OrgApacheLuceneBkdtreeGrowingHeapLatLonWriter *) nil_chk(self->heapWriter_))->docIDs_), i)];
    [self->scratchBytesOutput_ writeVLongWithLong:i];
    [((OrgApacheLuceneUtilOfflineSorter_ByteSequencesWriter *) nil_chk(self->writer_)) writeWithByteArray:self->scratchBytes_ withInt:0 withInt:((IOSByteArray *) nil_chk(self->scratchBytes_))->size_];
  }
  JreStrongAssign(&self->heapWriter_, nil);
}

id<OrgApacheLuceneBkdtreeLatLonWriter> OrgApacheLuceneBkdtreeBKDTreeWriter_convertToFixedWidthWithOrgLukhnosPortmobileFilePath_(OrgApacheLuceneBkdtreeBKDTreeWriter *self, OrgLukhnosPortmobileFilePath *inArg) {
  OrgApacheLuceneUtilBytesRefBuilder *scratch = create_OrgApacheLuceneUtilBytesRefBuilder_init();
  [scratch growWithInt:OrgApacheLuceneBkdtreeBKDTreeWriter_BYTES_PER_DOC];
  OrgApacheLuceneUtilBytesRef *bytes = JreRetainedLocalValue([scratch get]);
  OrgApacheLuceneStoreByteArrayDataInput *dataReader = create_OrgApacheLuceneStoreByteArrayDataInput_init();
  OrgApacheLuceneUtilOfflineSorter_ByteSequencesReader *reader = nil;
  id<OrgApacheLuceneBkdtreeLatLonWriter> sortedWriter = nil;
  jboolean success = false;
  @try {
    reader = create_OrgApacheLuceneUtilOfflineSorter_ByteSequencesReader_initWithOrgLukhnosPortmobileFilePath_(inArg);
    sortedWriter = [self getWriterWithLong:self->pointCount_];
    for (jlong i = 0; i < self->pointCount_; i++) {
      jboolean result = [reader readWithOrgApacheLuceneUtilBytesRefBuilder:scratch];
      JreAssert(result, @"org/apache/lucene/bkdtree/BKDTreeWriter.java:205 condition failed: assert result;");
      [dataReader resetWithByteArray:((OrgApacheLuceneUtilBytesRef *) nil_chk(bytes))->bytes_ withInt:bytes->offset_ withInt:bytes->length_];
      jint latEnc = [dataReader readInt];
      jint lonEnc = [dataReader readInt];
      jint docID = [dataReader readVInt];
      jlong ord = [dataReader readVLong];
      JreAssert(docID >= 0, JreStrcat("$I", @"docID=", docID));
      JreAssert(latEnc > JavaLangInteger_MIN_VALUE, @"org/apache/lucene/bkdtree/BKDTreeWriter.java:212 condition failed: assert latEnc > Integer.MIN_VALUE;");
      JreAssert(latEnc < JavaLangInteger_MAX_VALUE, @"org/apache/lucene/bkdtree/BKDTreeWriter.java:213 condition failed: assert latEnc < Integer.MAX_VALUE;");
      JreAssert(lonEnc > JavaLangInteger_MIN_VALUE, @"org/apache/lucene/bkdtree/BKDTreeWriter.java:214 condition failed: assert lonEnc > Integer.MIN_VALUE;");
      JreAssert(lonEnc < JavaLangInteger_MAX_VALUE, @"org/apache/lucene/bkdtree/BKDTreeWriter.java:215 condition failed: assert lonEnc < Integer.MAX_VALUE;");
      [((id<OrgApacheLuceneBkdtreeLatLonWriter>) nil_chk(sortedWriter)) appendWithInt:latEnc withInt:lonEnc withLong:ord withInt:docID];
    }
    success = true;
  }
  @finally {
    if (success) {
      OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ sortedWriter, reader } count:2 type:JavaIoCloseable_class_()]);
    }
    else {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader } count:1 type:JavaIoCloseable_class_()]);
      @try {
        [((id<OrgApacheLuceneBkdtreeLatLonWriter>) nil_chk(sortedWriter)) destroy];
      }
      @catch (JavaLangThrowable *t) {
      }
    }
  }
  return sortedWriter;
}

id<OrgApacheLuceneBkdtreeLatLonWriter> OrgApacheLuceneBkdtreeBKDTreeWriter_sortWithBoolean_(OrgApacheLuceneBkdtreeBKDTreeWriter *self, jboolean lon) {
  if (self->heapWriter_ != nil) {
    JreAssert(self->pointCount_ < JavaLangInteger_MAX_VALUE, @"org/apache/lucene/bkdtree/BKDTreeWriter.java:238 condition failed: assert pointCount < Integer.MAX_VALUE;");
    [create_OrgApacheLuceneBkdtreeBKDTreeWriter_1_initWithOrgApacheLuceneBkdtreeBKDTreeWriter_withBoolean_(self, lon) sortWithInt:0 withInt:(jint) self->pointCount_];
    OrgApacheLuceneBkdtreeHeapLatLonWriter *sorted = create_OrgApacheLuceneBkdtreeHeapLatLonWriter_initPackagePrivateWithInt_((jint) self->pointCount_);
    for (jint i = 0; i < self->pointCount_; i++) {
      [sorted appendWithInt:IOSIntArray_Get(nil_chk(((OrgApacheLuceneBkdtreeGrowingHeapLatLonWriter *) nil_chk(self->heapWriter_))->latEncs_), i) withInt:IOSIntArray_Get(nil_chk(self->heapWriter_->lonEncs_), i) withLong:IOSLongArray_Get(nil_chk(self->heapWriter_->ords_), i) withInt:IOSIntArray_Get(nil_chk(self->heapWriter_->docIDs_), i)];
    }
    return sorted;
  }
  else {
    JreAssert(self->tempDir_ != nil, @"org/apache/lucene/bkdtree/BKDTreeWriter.java:295 condition failed: assert tempDir != null;");
    OrgApacheLuceneStoreByteArrayDataInput *reader = create_OrgApacheLuceneStoreByteArrayDataInput_init();
    id<JavaUtilComparator> cmp = create_OrgApacheLuceneBkdtreeBKDTreeWriter_2_initWithOrgApacheLuceneStoreByteArrayDataInput_withBoolean_(reader, lon);
    OrgLukhnosPortmobileFilePath *sorted = JreRetainedLocalValue([((OrgLukhnosPortmobileFilePath *) nil_chk(self->tempDir_)) resolveWithNSString:@"sorted"]);
    jboolean success = false;
    @try {
      OrgApacheLuceneUtilOfflineSorter *latSorter = create_OrgApacheLuceneUtilOfflineSorter_initWithJavaUtilComparator_withOrgApacheLuceneUtilOfflineSorter_BufferSize_withOrgLukhnosPortmobileFilePath_withInt_(cmp, OrgApacheLuceneUtilOfflineSorter_BufferSize_automatic(), self->tempDir_, OrgApacheLuceneUtilOfflineSorter_MAX_TEMPFILES);
      [latSorter sortWithOrgLukhnosPortmobileFilePath:self->tempInput_ withOrgLukhnosPortmobileFilePath:sorted];
      id<OrgApacheLuceneBkdtreeLatLonWriter> writer = OrgApacheLuceneBkdtreeBKDTreeWriter_convertToFixedWidthWithOrgLukhnosPortmobileFilePath_(self, sorted);
      success = true;
      return writer;
    }
    @finally {
      if (success) {
        OrgApacheLuceneUtilIOUtils_rmWithOrgLukhnosPortmobileFilePathArray_([IOSObjectArray arrayWithObjects:(id[]){ sorted } count:1 type:OrgLukhnosPortmobileFilePath_class_()]);
      }
      else {
        OrgApacheLuceneUtilIOUtils_deleteFilesIgnoringExceptionsWithOrgLukhnosPortmobileFilePathArray_([IOSObjectArray arrayWithObjects:(id[]){ sorted } count:1 type:OrgLukhnosPortmobileFilePath_class_()]);
      }
    }
  }
}

jboolean OrgApacheLuceneBkdtreeBKDTreeWriter_directoryIsEmptyWithOrgLukhnosPortmobileFilePath_(OrgApacheLuceneBkdtreeBKDTreeWriter *self, OrgLukhnosPortmobileFilePath *inArg) {
  @try {
    id<OrgLukhnosPortmobileFileDirectoryStream> dir = OrgLukhnosPortmobileFileFiles_newDirectoryStreamWithOrgLukhnosPortmobileFilePath_(inArg);
    JavaLangThrowable *__primaryException1 = nil;
    @try {
      for (OrgLukhnosPortmobileFilePath * __strong path in nil_chk(dir)) {
        JreAssert(false, JreStrcat("$@$@", @"dir=", inArg, @" still has file=", path));
        return false;
      }
    }
    @catch (JavaLangThrowable *e) {
      __primaryException1 = e;
      @throw e;
    }
    @finally {
      if (dir != nil) {
        if (__primaryException1 != nil) {
          @try {
            [dir close];
          }
          @catch (JavaLangThrowable *e) {
            [__primaryException1 addSuppressedWithJavaLangThrowable:e];
          }
        }
        else {
          [dir close];
        }
      }
    }
  }
  @catch (JavaIoIOException *ioe) {
  }
  return true;
}

jlong OrgApacheLuceneBkdtreeBKDTreeWriter_markLeftTreeWithInt_withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_withOrgApacheLuceneUtilLongBitSet_withIntArray_withInt_withInt_withInt_withInt_(OrgApacheLuceneBkdtreeBKDTreeWriter *self, jint splitDim, OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice *source, OrgApacheLuceneUtilLongBitSet *bitSet, IOSIntArray *splitValueRet, jint minLatEnc, jint maxLatEnc, jint minLonEnc, jint maxLonEnc) {
  jlong leftCount = JreLongDiv(((OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice *) nil_chk(source))->count_, 2);
  id<OrgApacheLuceneBkdtreeLatLonReader> reader = JreRetainedLocalValue([((id<OrgApacheLuceneBkdtreeLatLonWriter>) nil_chk(source->writer_)) getReaderWithLong:source->start_ + leftCount]);
  jboolean success = false;
  jint splitValue;
  @try {
    jboolean result = [((id<OrgApacheLuceneBkdtreeLatLonReader>) nil_chk(reader)) next];
    JreAssert(result, @"org/apache/lucene/bkdtree/BKDTreeWriter.java:499 condition failed: assert result;");
    jint latSplitEnc = [reader latEnc];
    JreAssert(latSplitEnc >= minLatEnc && latSplitEnc < maxLatEnc, JreStrcat("$I$I$I", @"latSplitEnc=", latSplitEnc, @" minLatEnc=", minLatEnc, @" maxLatEnc=", maxLatEnc));
    jint lonSplitEnc = [reader lonEnc];
    JreAssert(lonSplitEnc >= minLonEnc && lonSplitEnc < maxLonEnc, JreStrcat("$I$I$I", @"lonSplitEnc=", lonSplitEnc, @" minLonEnc=", minLonEnc, @" maxLonEnc=", maxLonEnc));
    if (splitDim == 0) {
      splitValue = latSplitEnc;
    }
    else {
      splitValue = lonSplitEnc;
    }
    success = true;
  }
  @finally {
    if (success) {
      OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader } count:1 type:JavaIoCloseable_class_()]);
    }
    else {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader } count:1 type:JavaIoCloseable_class_()]);
    }
  }
  *IOSIntArray_GetRef(nil_chk(splitValueRet), 0) = splitValue;
  JreAssert([((OrgApacheLuceneUtilLongBitSet *) nil_chk(bitSet)) cardinality] == 0, JreStrcat("$J", @"cardinality=", [bitSet cardinality]));
  success = false;
  reader = [source->writer_ getReaderWithLong:source->start_];
  @try {
    jint lastValue = JavaLangInteger_MIN_VALUE;
    for (jint i = 0; i < leftCount; i++) {
      jboolean result = [((id<OrgApacheLuceneBkdtreeLatLonReader>) nil_chk(reader)) next];
      JreAssert(result, @"org/apache/lucene/bkdtree/BKDTreeWriter.java:534 condition failed: assert result;");
      jint latEnc = [reader latEnc];
      jint lonEnc = [reader lonEnc];
      jint value;
      if (splitDim == 0) {
        value = latEnc;
      }
      else {
        value = lonEnc;
      }
      JreAssert(value >= lastValue, @"org/apache/lucene/bkdtree/BKDTreeWriter.java:546 condition failed: assert value >= lastValue;");
      lastValue = value;
      if (value == splitValue) {
        leftCount = i;
        break;
      }
      JreAssert(value < splitValue, JreStrcat("$I$I$I", @"i=", i, @" value=", value, @" vs splitValue=", splitValue));
      jlong ord = [reader ord];
      jint docID = [reader docID];
      JreAssert(docID >= 0, JreStrcat("$I$@", @"docID=", docID, @" reader=", reader));
      JreAssert([bitSet getWithLong:ord] == false, @"org/apache/lucene/bkdtree/BKDTreeWriter.java:561 condition failed: assert bitSet.get(ord) == false;");
      [bitSet setWithLong:ord];
    }
    success = true;
  }
  @finally {
    if (success) {
      OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader } count:1 type:JavaIoCloseable_class_()]);
    }
    else {
      OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader } count:1 type:JavaIoCloseable_class_()]);
    }
  }
  JreAssert(leftCount == [bitSet cardinality], JreStrcat("$J$J", @"leftCount=", leftCount, @" cardinality=", [bitSet cardinality]));
  return leftCount;
}

void OrgApacheLuceneBkdtreeBKDTreeWriter_buildWithInt_withInt_withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_withOrgApacheLuceneUtilLongBitSet_withOrgApacheLuceneStoreIndexOutput_withInt_withInt_withInt_withInt_withIntArray_withLongArray_(OrgApacheLuceneBkdtreeBKDTreeWriter *self, jint nodeID, jint leafNodeOffset, OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice *lastLatSorted, OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice *lastLonSorted, OrgApacheLuceneUtilLongBitSet *bitSet, OrgApacheLuceneStoreIndexOutput *outArg, jint minLatEnc, jint maxLatEnc, jint minLonEnc, jint maxLonEnc, IOSIntArray *splitValues, IOSLongArray *leafBlockFPs) {
  OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice *source;
  OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice *nextSource;
  jlong latRange = (jlong) maxLatEnc - (jlong) minLatEnc;
  jlong lonRange = (jlong) maxLonEnc - (jlong) minLonEnc;
  jint splitDim;
  if (latRange >= lonRange) {
    splitDim = 0;
    source = lastLatSorted;
    nextSource = lastLonSorted;
  }
  else {
    splitDim = 1;
    source = lastLonSorted;
    nextSource = lastLatSorted;
  }
  jlong count = ((OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice *) nil_chk(source))->count_;
  if (count == 0) {
    if (nodeID < ((IOSIntArray *) nil_chk(splitValues))->size_) {
      *IOSIntArray_GetRef(splitValues, nodeID) = JavaLangInteger_MAX_VALUE;
    }
    return;
  }
  if (nodeID >= leafNodeOffset) {
    JreAssert(maxLatEnc > minLatEnc, @"org/apache/lucene/bkdtree/BKDTreeWriter.java:625 condition failed: assert maxLatEnc > minLatEnc;");
    JreAssert(maxLonEnc > minLonEnc, @"org/apache/lucene/bkdtree/BKDTreeWriter.java:626 condition failed: assert maxLonEnc > minLonEnc;");
    JreAssert(count == source->count_, JreStrcat("$J$J", @"count=", count, @" vs source.count=", source->count_));
    id<OrgApacheLuceneBkdtreeLatLonReader> reader = JreRetainedLocalValue([((id<OrgApacheLuceneBkdtreeLatLonWriter>) nil_chk(source->writer_)) getReaderWithLong:source->start_]);
    IOSIntArray *docIDs = [IOSIntArray arrayWithLength:(jint) count];
    jboolean success = false;
    @try {
      for (jint i = 0; i < source->count_; i++) {
        jboolean result = [((id<OrgApacheLuceneBkdtreeLatLonReader>) nil_chk(reader)) next];
        JreAssert(result, @"org/apache/lucene/bkdtree/BKDTreeWriter.java:650 condition failed: assert result;");
        *IOSIntArray_GetRef(docIDs, i) = [reader docID];
      }
      success = true;
    }
    @finally {
      if (success) {
        OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader } count:1 type:JavaIoCloseable_class_()]);
      }
      else {
        OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader } count:1 type:JavaIoCloseable_class_()]);
      }
    }
    JavaUtilArrays_sortWithIntArray_(docIDs);
    jint lastDocID = -1;
    jint uniqueCount = 0;
    for (jint i = 0; i < docIDs->size_; i++) {
      jint docID = IOSIntArray_Get(docIDs, i);
      if (docID != lastDocID) {
        uniqueCount++;
        lastDocID = docID;
      }
    }
    JreAssert(uniqueCount <= count, @"org/apache/lucene/bkdtree/BKDTreeWriter.java:675 condition failed: assert uniqueCount <= count;");
    jlong startFP = [((OrgApacheLuceneStoreIndexOutput *) nil_chk(outArg)) getFilePointer];
    [outArg writeVIntWithInt:uniqueCount];
    *IOSLongArray_GetRef(nil_chk(leafBlockFPs), nodeID - leafNodeOffset) = startFP;
    lastDocID = -1;
    for (jint i = 0; i < docIDs->size_; i++) {
      jint docID = IOSIntArray_Get(docIDs, i);
      if (docID != lastDocID) {
        [outArg writeIntWithInt:docID];
        lastDocID = docID;
      }
    }
  }
  else {
    JreAssert(nodeID < ((IOSIntArray *) nil_chk(splitValues))->size_, JreStrcat("$I$I", @"nodeID=", nodeID, @" splitValues.length=", splitValues->size_));
    IOSIntArray *splitValueArray = [IOSIntArray arrayWithLength:1];
    JreAssert(source->count_ == count, @"org/apache/lucene/bkdtree/BKDTreeWriter.java:705 condition failed: assert source.count == count;");
    jlong leftCount = OrgApacheLuceneBkdtreeBKDTreeWriter_markLeftTreeWithInt_withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_withOrgApacheLuceneUtilLongBitSet_withIntArray_withInt_withInt_withInt_withInt_(self, splitDim, source, bitSet, splitValueArray, minLatEnc, maxLatEnc, minLonEnc, maxLonEnc);
    jint splitValue = IOSIntArray_Get(splitValueArray, 0);
    id<OrgApacheLuceneBkdtreeLatLonWriter> leftWriter = nil;
    id<OrgApacheLuceneBkdtreeLatLonWriter> rightWriter = nil;
    id<OrgApacheLuceneBkdtreeLatLonReader> reader = nil;
    jboolean success = false;
    jint nextLeftCount = 0;
    @try {
      leftWriter = [self getWriterWithLong:leftCount];
      rightWriter = [self getWriterWithLong:((OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice *) nil_chk(nextSource))->count_ - leftCount];
      JreAssert(nextSource->count_ == count, @"org/apache/lucene/bkdtree/BKDTreeWriter.java:728 condition failed: assert nextSource.count == count;");
      reader = [((id<OrgApacheLuceneBkdtreeLatLonWriter>) nil_chk(nextSource->writer_)) getReaderWithLong:nextSource->start_];
      for (jint i = 0; i < nextSource->count_; i++) {
        jboolean result = [((id<OrgApacheLuceneBkdtreeLatLonReader>) nil_chk(reader)) next];
        JreAssert(result, @"org/apache/lucene/bkdtree/BKDTreeWriter.java:735 condition failed: assert result;");
        jint latEnc = [reader latEnc];
        jint lonEnc = [reader lonEnc];
        jlong ord = [reader ord];
        jint docID = [reader docID];
        JreAssert(docID >= 0, JreStrcat("$I$@", @"docID=", docID, @" reader=", reader));
        if ([((OrgApacheLuceneUtilLongBitSet *) nil_chk(bitSet)) getWithLong:ord]) {
          if (splitDim == 0) {
            JreAssert(latEnc < splitValue, JreStrcat("$I$I", @"latEnc=", latEnc, @" splitValue=", splitValue));
          }
          else {
            JreAssert(lonEnc < splitValue, JreStrcat("$I$I", @"lonEnc=", lonEnc, @" splitValue=", splitValue));
          }
          [((id<OrgApacheLuceneBkdtreeLatLonWriter>) nil_chk(leftWriter)) appendWithInt:latEnc withInt:lonEnc withLong:ord withInt:docID];
          nextLeftCount++;
        }
        else {
          if (splitDim == 0) {
            JreAssert(latEnc >= splitValue, JreStrcat("$I$I", @"latEnc=", latEnc, @" splitValue=", splitValue));
          }
          else {
            JreAssert(lonEnc >= splitValue, JreStrcat("$I$I", @"lonEnc=", lonEnc, @" splitValue=", splitValue));
          }
          [((id<OrgApacheLuceneBkdtreeLatLonWriter>) nil_chk(rightWriter)) appendWithInt:latEnc withInt:lonEnc withLong:ord withInt:docID];
        }
      }
      [((OrgApacheLuceneUtilLongBitSet *) nil_chk(bitSet)) clearWithLong:0 withLong:self->pointCount_];
      success = true;
    }
    @finally {
      if (success) {
        OrgApacheLuceneUtilIOUtils_closeWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader, leftWriter, rightWriter } count:3 type:JavaIoCloseable_class_()]);
      }
      else {
        OrgApacheLuceneUtilIOUtils_closeWhileHandlingExceptionWithJavaIoCloseableArray_([IOSObjectArray arrayWithObjects:(id[]){ reader, leftWriter, rightWriter } count:3 type:JavaIoCloseable_class_()]);
      }
    }
    JreAssert(leftCount == nextLeftCount, JreStrcat("$J$I", @"leftCount=", leftCount, @" nextLeftCount=", nextLeftCount));
    JreAssert(count == ((OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice *) nil_chk(nextSource))->count_, JreStrcat("$J$J", @"count=", count, @" nextSource.count=", count));
    success = false;
    @try {
      if (splitDim == 0) {
        OrgApacheLuceneBkdtreeBKDTreeWriter_buildWithInt_withInt_withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_withOrgApacheLuceneUtilLongBitSet_withOrgApacheLuceneStoreIndexOutput_withInt_withInt_withInt_withInt_withIntArray_withLongArray_(self, 2 * nodeID, leafNodeOffset, create_OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_initWithOrgApacheLuceneBkdtreeLatLonWriter_withLong_withLong_(source->writer_, source->start_, leftCount), create_OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_initWithOrgApacheLuceneBkdtreeLatLonWriter_withLong_withLong_(leftWriter, 0, leftCount), bitSet, outArg, minLatEnc, splitValue, minLonEnc, maxLonEnc, splitValues, leafBlockFPs);
        [((id<OrgApacheLuceneBkdtreeLatLonWriter>) nil_chk(leftWriter)) destroy];
        OrgApacheLuceneBkdtreeBKDTreeWriter_buildWithInt_withInt_withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_withOrgApacheLuceneUtilLongBitSet_withOrgApacheLuceneStoreIndexOutput_withInt_withInt_withInt_withInt_withIntArray_withLongArray_(self, 2 * nodeID + 1, leafNodeOffset, create_OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_initWithOrgApacheLuceneBkdtreeLatLonWriter_withLong_withLong_(source->writer_, source->start_ + leftCount, count - leftCount), create_OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_initWithOrgApacheLuceneBkdtreeLatLonWriter_withLong_withLong_(rightWriter, 0, count - leftCount), bitSet, outArg, splitValue, maxLatEnc, minLonEnc, maxLonEnc, splitValues, leafBlockFPs);
        [((id<OrgApacheLuceneBkdtreeLatLonWriter>) nil_chk(rightWriter)) destroy];
      }
      else {
        OrgApacheLuceneBkdtreeBKDTreeWriter_buildWithInt_withInt_withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_withOrgApacheLuceneUtilLongBitSet_withOrgApacheLuceneStoreIndexOutput_withInt_withInt_withInt_withInt_withIntArray_withLongArray_(self, 2 * nodeID, leafNodeOffset, create_OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_initWithOrgApacheLuceneBkdtreeLatLonWriter_withLong_withLong_(leftWriter, 0, leftCount), create_OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_initWithOrgApacheLuceneBkdtreeLatLonWriter_withLong_withLong_(source->writer_, source->start_, leftCount), bitSet, outArg, minLatEnc, maxLatEnc, minLonEnc, splitValue, splitValues, leafBlockFPs);
        [((id<OrgApacheLuceneBkdtreeLatLonWriter>) nil_chk(leftWriter)) destroy];
        OrgApacheLuceneBkdtreeBKDTreeWriter_buildWithInt_withInt_withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_withOrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_withOrgApacheLuceneUtilLongBitSet_withOrgApacheLuceneStoreIndexOutput_withInt_withInt_withInt_withInt_withIntArray_withLongArray_(self, 2 * nodeID + 1, leafNodeOffset, create_OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_initWithOrgApacheLuceneBkdtreeLatLonWriter_withLong_withLong_(rightWriter, 0, count - leftCount), create_OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_initWithOrgApacheLuceneBkdtreeLatLonWriter_withLong_withLong_(source->writer_, source->start_ + leftCount, count - leftCount), bitSet, outArg, minLatEnc, maxLatEnc, splitValue, maxLonEnc, splitValues, leafBlockFPs);
        [((id<OrgApacheLuceneBkdtreeLatLonWriter>) nil_chk(rightWriter)) destroy];
      }
      success = true;
    }
    @finally {
      if (success == false) {
        @try {
          [((id<OrgApacheLuceneBkdtreeLatLonWriter>) nil_chk(leftWriter)) destroy];
        }
        @catch (JavaLangThrowable *t) {
        }
        @try {
          [((id<OrgApacheLuceneBkdtreeLatLonWriter>) nil_chk(rightWriter)) destroy];
        }
        @catch (JavaLangThrowable *t) {
        }
      }
    }
    *IOSIntArray_GetRef(splitValues, nodeID) = splitValue;
  }
}

jboolean OrgApacheLuceneBkdtreeBKDTreeWriter_validLatWithDouble_(jdouble lat) {
  OrgApacheLuceneBkdtreeBKDTreeWriter_initialize();
  return JavaLangDouble_isNaNWithDouble_(lat) == false && lat >= OrgApacheLuceneBkdtreeBKDTreeWriter_MIN_LAT_INCL && lat <= OrgApacheLuceneBkdtreeBKDTreeWriter_MAX_LAT_INCL;
}

jboolean OrgApacheLuceneBkdtreeBKDTreeWriter_validLonWithDouble_(jdouble lon) {
  OrgApacheLuceneBkdtreeBKDTreeWriter_initialize();
  return JavaLangDouble_isNaNWithDouble_(lon) == false && lon >= OrgApacheLuceneBkdtreeBKDTreeWriter_MIN_LON_INCL && lon <= OrgApacheLuceneBkdtreeBKDTreeWriter_MAX_LON_INCL;
}

jint OrgApacheLuceneBkdtreeBKDTreeWriter_encodeLatWithDouble_(jdouble lat) {
  OrgApacheLuceneBkdtreeBKDTreeWriter_initialize();
  JreAssert(OrgApacheLuceneBkdtreeBKDTreeWriter_validLatWithDouble_(lat), JreStrcat("$D", @"lat=", lat));
  jlong x = JreFpToLong((lat * OrgApacheLuceneBkdtreeBKDTreeWriter_LAT_SCALE));
  JreAssert(x < JavaLangInteger_MAX_VALUE, JreStrcat("$D$J", @"lat=", lat, @" mapped to Integer.MAX_VALUE + ", (x - JavaLangInteger_MAX_VALUE)));
  JreAssert(x > JavaLangInteger_MIN_VALUE, JreStrcat("$D$", @"lat=", lat, @" mapped to Integer.MIN_VALUE"));
  return (jint) x;
}

jint OrgApacheLuceneBkdtreeBKDTreeWriter_encodeLonWithDouble_(jdouble lon) {
  OrgApacheLuceneBkdtreeBKDTreeWriter_initialize();
  JreAssert(OrgApacheLuceneBkdtreeBKDTreeWriter_validLonWithDouble_(lon), JreStrcat("$D", @"lon=", lon));
  jlong x = JreFpToLong((lon * OrgApacheLuceneBkdtreeBKDTreeWriter_LON_SCALE));
  JreAssert(x < JavaLangInteger_MAX_VALUE, @"org/apache/lucene/bkdtree/BKDTreeWriter.java:883 condition failed: assert x < Integer.MAX_VALUE;");
  JreAssert(x > JavaLangInteger_MIN_VALUE, @"org/apache/lucene/bkdtree/BKDTreeWriter.java:884 condition failed: assert x > Integer.MIN_VALUE;");
  return (jint) x;
}

jdouble OrgApacheLuceneBkdtreeBKDTreeWriter_decodeLatWithInt_(jint x) {
  OrgApacheLuceneBkdtreeBKDTreeWriter_initialize();
  return x / OrgApacheLuceneBkdtreeBKDTreeWriter_LAT_SCALE;
}

jdouble OrgApacheLuceneBkdtreeBKDTreeWriter_decodeLonWithInt_(jint x) {
  OrgApacheLuceneBkdtreeBKDTreeWriter_initialize();
  return x / OrgApacheLuceneBkdtreeBKDTreeWriter_LON_SCALE;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneBkdtreeBKDTreeWriter)

@implementation OrgApacheLuceneBkdtreeBKDTreeWriter_1

- (instancetype)initWithOrgApacheLuceneBkdtreeBKDTreeWriter:(OrgApacheLuceneBkdtreeBKDTreeWriter *)outer$
                                                withBoolean:(jboolean)capture$0 {
  OrgApacheLuceneBkdtreeBKDTreeWriter_1_initWithOrgApacheLuceneBkdtreeBKDTreeWriter_withBoolean_(self, outer$, capture$0);
  return self;
}

- (void)swapWithInt:(jint)i
            withInt:(jint)j {
  jint docID = IOSIntArray_Get(nil_chk(((OrgApacheLuceneBkdtreeGrowingHeapLatLonWriter *) nil_chk(this$0_->heapWriter_))->docIDs_), i);
  *IOSIntArray_GetRef(this$0_->heapWriter_->docIDs_, i) = IOSIntArray_Get(this$0_->heapWriter_->docIDs_, j);
  *IOSIntArray_GetRef(this$0_->heapWriter_->docIDs_, j) = docID;
  jlong ord = IOSLongArray_Get(nil_chk(this$0_->heapWriter_->ords_), i);
  *IOSLongArray_GetRef(this$0_->heapWriter_->ords_, i) = IOSLongArray_Get(this$0_->heapWriter_->ords_, j);
  *IOSLongArray_GetRef(this$0_->heapWriter_->ords_, j) = ord;
  jint latEnc = IOSIntArray_Get(nil_chk(this$0_->heapWriter_->latEncs_), i);
  *IOSIntArray_GetRef(this$0_->heapWriter_->latEncs_, i) = IOSIntArray_Get(this$0_->heapWriter_->latEncs_, j);
  *IOSIntArray_GetRef(this$0_->heapWriter_->latEncs_, j) = latEnc;
  jint lonEnc = IOSIntArray_Get(nil_chk(this$0_->heapWriter_->lonEncs_), i);
  *IOSIntArray_GetRef(this$0_->heapWriter_->lonEncs_, i) = IOSIntArray_Get(this$0_->heapWriter_->lonEncs_, j);
  *IOSIntArray_GetRef(this$0_->heapWriter_->lonEncs_, j) = lonEnc;
}

- (jint)compareWithInt:(jint)i
               withInt:(jint)j {
  jint cmp;
  if (val$lon_) {
    cmp = JavaLangInteger_compareWithInt_withInt_(IOSIntArray_Get(nil_chk(((OrgApacheLuceneBkdtreeGrowingHeapLatLonWriter *) nil_chk(this$0_->heapWriter_))->lonEncs_), i), IOSIntArray_Get(this$0_->heapWriter_->lonEncs_, j));
  }
  else {
    cmp = JavaLangInteger_compareWithInt_withInt_(IOSIntArray_Get(nil_chk(((OrgApacheLuceneBkdtreeGrowingHeapLatLonWriter *) nil_chk(this$0_->heapWriter_))->latEncs_), i), IOSIntArray_Get(this$0_->heapWriter_->latEncs_, j));
  }
  if (cmp != 0) {
    return cmp;
  }
  cmp = JavaLangInteger_compareWithInt_withInt_(IOSIntArray_Get(nil_chk(((OrgApacheLuceneBkdtreeGrowingHeapLatLonWriter *) nil_chk(this$0_->heapWriter_))->docIDs_), i), IOSIntArray_Get(this$0_->heapWriter_->docIDs_, j));
  if (cmp != 0) {
    return cmp;
  }
  return JavaLangLong_compareWithLong_withLong_(IOSLongArray_Get(nil_chk(((OrgApacheLuceneBkdtreeGrowingHeapLatLonWriter *) nil_chk(this$0_->heapWriter_))->ords_), i), IOSLongArray_Get(this$0_->heapWriter_->ords_, j));
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x4, 3, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneBkdtreeBKDTreeWriter:withBoolean:);
  methods[1].selector = @selector(swapWithInt:withInt:);
  methods[2].selector = @selector(compareWithInt:withInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneBkdtreeBKDTreeWriter;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$lon_", "Z", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneBkdtreeBKDTreeWriter;Z", "swap", "II", "compare", "LOrgApacheLuceneBkdtreeBKDTreeWriter;", "sortWithBoolean:" };
  static const J2ObjcClassInfo _OrgApacheLuceneBkdtreeBKDTreeWriter_1 = { "", "org.apache.lucene.bkdtree", ptrTable, methods, fields, 7, 0x8010, 3, 2, 4, -1, 5, -1, -1 };
  return &_OrgApacheLuceneBkdtreeBKDTreeWriter_1;
}

@end

void OrgApacheLuceneBkdtreeBKDTreeWriter_1_initWithOrgApacheLuceneBkdtreeBKDTreeWriter_withBoolean_(OrgApacheLuceneBkdtreeBKDTreeWriter_1 *self, OrgApacheLuceneBkdtreeBKDTreeWriter *outer$, jboolean capture$0) {
  JreStrongAssign(&self->this$0_, outer$);
  self->val$lon_ = capture$0;
  OrgApacheLuceneUtilInPlaceMergeSorter_init(self);
}

OrgApacheLuceneBkdtreeBKDTreeWriter_1 *new_OrgApacheLuceneBkdtreeBKDTreeWriter_1_initWithOrgApacheLuceneBkdtreeBKDTreeWriter_withBoolean_(OrgApacheLuceneBkdtreeBKDTreeWriter *outer$, jboolean capture$0) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneBkdtreeBKDTreeWriter_1, initWithOrgApacheLuceneBkdtreeBKDTreeWriter_withBoolean_, outer$, capture$0)
}

OrgApacheLuceneBkdtreeBKDTreeWriter_1 *create_OrgApacheLuceneBkdtreeBKDTreeWriter_1_initWithOrgApacheLuceneBkdtreeBKDTreeWriter_withBoolean_(OrgApacheLuceneBkdtreeBKDTreeWriter *outer$, jboolean capture$0) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneBkdtreeBKDTreeWriter_1, initWithOrgApacheLuceneBkdtreeBKDTreeWriter_withBoolean_, outer$, capture$0)
}

@implementation OrgApacheLuceneBkdtreeBKDTreeWriter_2

- (instancetype)initWithOrgApacheLuceneStoreByteArrayDataInput:(OrgApacheLuceneStoreByteArrayDataInput *)capture$0
                                                   withBoolean:(jboolean)capture$1 {
  OrgApacheLuceneBkdtreeBKDTreeWriter_2_initWithOrgApacheLuceneStoreByteArrayDataInput_withBoolean_(self, capture$0, capture$1);
  return self;
}

- (jint)compareWithId:(OrgApacheLuceneUtilBytesRef *)a
               withId:(OrgApacheLuceneUtilBytesRef *)b {
  [((OrgApacheLuceneStoreByteArrayDataInput *) nil_chk(val$reader_)) resetWithByteArray:((OrgApacheLuceneUtilBytesRef *) nil_chk(a))->bytes_ withInt:a->offset_ withInt:a->length_];
  jint latAEnc = [val$reader_ readInt];
  jint lonAEnc = [val$reader_ readInt];
  jint docIDA = [val$reader_ readVInt];
  jlong ordA = [val$reader_ readVLong];
  [val$reader_ resetWithByteArray:((OrgApacheLuceneUtilBytesRef *) nil_chk(b))->bytes_ withInt:b->offset_ withInt:b->length_];
  jint latBEnc = [val$reader_ readInt];
  jint lonBEnc = [val$reader_ readInt];
  jint docIDB = [val$reader_ readVInt];
  jlong ordB = [val$reader_ readVLong];
  jint cmp;
  if (val$lon_) {
    cmp = JavaLangInteger_compareWithInt_withInt_(lonAEnc, lonBEnc);
  }
  else {
    cmp = JavaLangInteger_compareWithInt_withInt_(latAEnc, latBEnc);
  }
  if (cmp != 0) {
    return cmp;
  }
  cmp = JavaLangInteger_compareWithInt_withInt_(docIDA, docIDB);
  if (cmp != 0) {
    return cmp;
  }
  return JavaLangLong_compareWithLong_withLong_(ordA, ordB);
}

- (id<JavaUtilComparator>)reversed {
  return JavaUtilComparator_reversed(self);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilComparator:(id<JavaUtilComparator>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilComparator_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0
                                             withJavaUtilComparator:(id<JavaUtilComparator>)arg1 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_withJavaUtilComparator_(self, arg0, arg1);
}

- (id<JavaUtilComparator>)thenComparingWithJavaUtilFunctionFunction:(id<JavaUtilFunctionFunction>)arg0 {
  return JavaUtilComparator_thenComparingWithJavaUtilFunctionFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingIntWithJavaUtilFunctionToIntFunction:(id<JavaUtilFunctionToIntFunction>)arg0 {
  return JavaUtilComparator_thenComparingIntWithJavaUtilFunctionToIntFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingLongWithJavaUtilFunctionToLongFunction:(id<JavaUtilFunctionToLongFunction>)arg0 {
  return JavaUtilComparator_thenComparingLongWithJavaUtilFunctionToLongFunction_(self, arg0);
}

- (id<JavaUtilComparator>)thenComparingDoubleWithJavaUtilFunctionToDoubleFunction:(id<JavaUtilFunctionToDoubleFunction>)arg0 {
  return JavaUtilComparator_thenComparingDoubleWithJavaUtilFunctionToDoubleFunction_(self, arg0);
}

- (void)dealloc {
  RELEASE_(val$reader_);
  RELEASE_(readerB_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneStoreByteArrayDataInput:withBoolean:);
  methods[1].selector = @selector(compareWithId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$reader_", "LOrgApacheLuceneStoreByteArrayDataInput;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$lon_", "Z", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "readerB_", "LOrgApacheLuceneStoreByteArrayDataInput;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneStoreByteArrayDataInput;Z", "compare", "LOrgApacheLuceneUtilBytesRef;LOrgApacheLuceneUtilBytesRef;", "LOrgApacheLuceneBkdtreeBKDTreeWriter;", "sortWithBoolean:", "Ljava/lang/Object;Ljava/util/Comparator<Lorg/apache/lucene/util/BytesRef;>;" };
  static const J2ObjcClassInfo _OrgApacheLuceneBkdtreeBKDTreeWriter_2 = { "", "org.apache.lucene.bkdtree", ptrTable, methods, fields, 7, 0x8010, 2, 3, 3, -1, 4, 5, -1 };
  return &_OrgApacheLuceneBkdtreeBKDTreeWriter_2;
}

@end

void OrgApacheLuceneBkdtreeBKDTreeWriter_2_initWithOrgApacheLuceneStoreByteArrayDataInput_withBoolean_(OrgApacheLuceneBkdtreeBKDTreeWriter_2 *self, OrgApacheLuceneStoreByteArrayDataInput *capture$0, jboolean capture$1) {
  JreStrongAssign(&self->val$reader_, capture$0);
  self->val$lon_ = capture$1;
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->readerB_, new_OrgApacheLuceneStoreByteArrayDataInput_init());
}

OrgApacheLuceneBkdtreeBKDTreeWriter_2 *new_OrgApacheLuceneBkdtreeBKDTreeWriter_2_initWithOrgApacheLuceneStoreByteArrayDataInput_withBoolean_(OrgApacheLuceneStoreByteArrayDataInput *capture$0, jboolean capture$1) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneBkdtreeBKDTreeWriter_2, initWithOrgApacheLuceneStoreByteArrayDataInput_withBoolean_, capture$0, capture$1)
}

OrgApacheLuceneBkdtreeBKDTreeWriter_2 *create_OrgApacheLuceneBkdtreeBKDTreeWriter_2_initWithOrgApacheLuceneStoreByteArrayDataInput_withBoolean_(OrgApacheLuceneStoreByteArrayDataInput *capture$0, jboolean capture$1) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneBkdtreeBKDTreeWriter_2, initWithOrgApacheLuceneStoreByteArrayDataInput_withBoolean_, capture$0, capture$1)
}

@implementation OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice

- (instancetype)initWithOrgApacheLuceneBkdtreeLatLonWriter:(id<OrgApacheLuceneBkdtreeLatLonWriter>)writer
                                                  withLong:(jlong)start
                                                  withLong:(jlong)count {
  OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_initWithOrgApacheLuceneBkdtreeLatLonWriter_withLong_withLong_(self, writer, start, count);
  return self;
}

- (NSString *)description {
  return JreStrcat("$J$J$@C", @"PathSlice(start=", start_, @" count=", count_, @" writer=", writer_, ')');
}

- (void)dealloc {
  RELEASE_(writer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneBkdtreeLatLonWriter:withLong:withLong:);
  methods[1].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "writer_", "LOrgApacheLuceneBkdtreeLatLonWriter;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "start_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "count_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneBkdtreeLatLonWriter;JJ", "toString", "LOrgApacheLuceneBkdtreeBKDTreeWriter;" };
  static const J2ObjcClassInfo _OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice = { "PathSlice", "org.apache.lucene.bkdtree", ptrTable, methods, fields, 7, 0x1a, 2, 3, 2, -1, -1, -1, -1 };
  return &_OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice;
}

@end

void OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_initWithOrgApacheLuceneBkdtreeLatLonWriter_withLong_withLong_(OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice *self, id<OrgApacheLuceneBkdtreeLatLonWriter> writer, jlong start, jlong count) {
  NSObject_init(self);
  JreStrongAssign(&self->writer_, writer);
  self->start_ = start;
  self->count_ = count;
}

OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice *new_OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_initWithOrgApacheLuceneBkdtreeLatLonWriter_withLong_withLong_(id<OrgApacheLuceneBkdtreeLatLonWriter> writer, jlong start, jlong count) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice, initWithOrgApacheLuceneBkdtreeLatLonWriter_withLong_withLong_, writer, start, count)
}

OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice *create_OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice_initWithOrgApacheLuceneBkdtreeLatLonWriter_withLong_withLong_(id<OrgApacheLuceneBkdtreeLatLonWriter> writer, jlong start, jlong count) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice, initWithOrgApacheLuceneBkdtreeLatLonWriter_withLong_withLong_, writer, start, count)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneBkdtreeBKDTreeWriter_PathSlice)
