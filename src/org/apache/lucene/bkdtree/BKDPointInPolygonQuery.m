//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./sandbox/src/java/org/apache/lucene/bkdtree/BKDPointInPolygonQuery.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Math.h"
#include "java/lang/StringBuilder.h"
#include "java/util/Arrays.h"
#include "java/util/Set.h"
#include "org/apache/lucene/bkdtree/BKDPointInPolygonQuery.h"
#include "org/apache/lucene/bkdtree/BKDTreeReader.h"
#include "org/apache/lucene/bkdtree/BKDTreeSortedNumericDocValues.h"
#include "org/apache/lucene/bkdtree/BKDTreeWriter.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/index/SortedNumericDocValues.h"
#include "org/apache/lucene/search/DocIdSet.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/search/Explanation.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/search/Query.h"
#include "org/apache/lucene/search/Scorer.h"
#include "org/apache/lucene/search/Weight.h"
#include "org/apache/lucene/util/GeoUtils.h"
#include "org/apache/lucene/util/ToStringUtils.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/bkdtree/BKDPointInPolygonQuery must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 : OrgApacheLuceneSearchWeight {
 @public
  OrgApacheLuceneBkdtreeBKDPointInPolygonQuery *this$0_;
  jfloat queryNorm_;
  jfloat queryWeight_;
}

- (instancetype)initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery:(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery *)outer$
                                      withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query;

- (void)extractTermsWithJavaUtilSet:(id<JavaUtilSet>)terms;

- (jfloat)getValueForNormalization;

- (void)normalizeWithFloat:(jfloat)norm
                 withFloat:(jfloat)topLevelBoost;

- (OrgApacheLuceneSearchExplanation *)explainWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                                                               withInt:(jint)doc;

- (OrgApacheLuceneSearchScorer *)scorerWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1)

__attribute__((unused)) static void OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 *self, OrgApacheLuceneBkdtreeBKDPointInPolygonQuery *outer$, OrgApacheLuceneSearchQuery *query);

__attribute__((unused)) static OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 *new_OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery *outer$, OrgApacheLuceneSearchQuery *query) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 *create_OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery *outer$, OrgApacheLuceneSearchQuery *query);

@interface OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_1 : NSObject < OrgApacheLuceneBkdtreeBKDTreeReader_LatLonFilter > {
 @public
  OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 *this$0_;
}

- (instancetype)initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1:(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 *)outer$;

- (jboolean)acceptWithDouble:(jdouble)lat
                  withDouble:(jdouble)lon;

- (OrgApacheLuceneBkdtreeBKDTreeReader_Relation *)compareWithDouble:(jdouble)cellLatMin
                                                         withDouble:(jdouble)cellLatMax
                                                         withDouble:(jdouble)cellLonMin
                                                         withDouble:(jdouble)cellLonMax;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_1)

__attribute__((unused)) static void OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_1_initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_1 *self, OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 *outer$);

__attribute__((unused)) static OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_1 *new_OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_1_initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_1 *create_OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_1_initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 *outer$);

@interface OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_2 : OrgApacheLuceneSearchScorer {
 @public
  OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 *this$0_;
  OrgApacheLuceneSearchDocIdSetIterator *val$disi_;
}

- (instancetype)initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1:(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 *)outer$
                             withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)capture$0
                                       withOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight;

- (jfloat)score;

- (jint)freq;

- (jint)docID;

- (jint)nextDoc;

- (jint)advanceWithInt:(jint)target;

- (jlong)cost;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_2)

__attribute__((unused)) static void OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_2_initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_withOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchWeight_(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_2 *self, OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 *outer$, OrgApacheLuceneSearchDocIdSetIterator *capture$0, OrgApacheLuceneSearchWeight *weight);

__attribute__((unused)) static OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_2 *new_OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_2_initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_withOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchWeight_(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 *outer$, OrgApacheLuceneSearchDocIdSetIterator *capture$0, OrgApacheLuceneSearchWeight *weight) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_2 *create_OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_2_initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_withOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchWeight_(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 *outer$, OrgApacheLuceneSearchDocIdSetIterator *capture$0, OrgApacheLuceneSearchWeight *weight);

@implementation OrgApacheLuceneBkdtreeBKDPointInPolygonQuery

- (instancetype)initWithNSString:(NSString *)field
                 withDoubleArray:(IOSDoubleArray *)polyLats
                 withDoubleArray:(IOSDoubleArray *)polyLons {
  OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_initWithNSString_withDoubleArray_withDoubleArray_(self, field, polyLats, polyLons);
  return self;
}

- (OrgApacheLuceneSearchWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                        withBoolean:(jboolean)needsScores {
  return create_OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_withOrgApacheLuceneSearchQuery_(self, self);
}

- (jboolean)isEqual:(id)o {
  if (JreObjectEqualsEquals(self, o)) return true;
  if (o == nil || !JreObjectEqualsEquals([self java_getClass], [o java_getClass])) return false;
  if (![super isEqual:o]) return false;
  OrgApacheLuceneBkdtreeBKDPointInPolygonQuery *that = (OrgApacheLuceneBkdtreeBKDPointInPolygonQuery *) cast_chk(o, [OrgApacheLuceneBkdtreeBKDPointInPolygonQuery class]);
  if (JavaUtilArrays_equalsWithDoubleArray_withDoubleArray_(polyLons_, that->polyLons_) == false) {
    return false;
  }
  if (JavaUtilArrays_equalsWithDoubleArray_withDoubleArray_(polyLats_, that->polyLats_) == false) {
    return false;
  }
  return true;
}

- (NSUInteger)hash {
  jint result = ((jint) [super hash]);
  result = 31 * result + JavaUtilArrays_hashCodeWithDoubleArray_(polyLons_);
  result = 31 * result + JavaUtilArrays_hashCodeWithDoubleArray_(polyLats_);
  return result;
}

- (NSString *)toStringWithNSString:(NSString *)field {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [sb appendWithNSString:[[self java_getClass] getSimpleName]];
  [sb appendWithChar:':'];
  if ([((NSString *) nil_chk(self->field_)) isEqual:field] == false) {
    [sb appendWithNSString:@" field="];
    [sb appendWithNSString:self->field_];
    [sb appendWithChar:':'];
  }
  [sb appendWithNSString:@" Points: "];
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(polyLons_))->size_; ++i) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"["])) appendWithDouble:IOSDoubleArray_Get(polyLons_, i)])) appendWithNSString:@", "])) appendWithDouble:IOSDoubleArray_Get(nil_chk(polyLats_), i)])) appendWithNSString:@"] "];
  }
  [sb appendWithNSString:OrgApacheLuceneUtilToStringUtils_boostWithFloat_([self getBoost])];
  return [sb description];
}

- (void)dealloc {
  RELEASE_(field_);
  RELEASE_(polyLats_);
  RELEASE_(polyLons_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchWeight;", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "Z", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "I", 0x11, 6, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withDoubleArray:withDoubleArray:);
  methods[1].selector = @selector(createWeightWithOrgApacheLuceneSearchIndexSearcher:withBoolean:);
  methods[2].selector = @selector(isEqual:);
  methods[3].selector = @selector(hash);
  methods[4].selector = @selector(toStringWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "field_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "minLat_", "D", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "maxLat_", "D", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "minLon_", "D", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "maxLon_", "D", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "polyLats_", "[D", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "polyLons_", "[D", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;[D[D", "createWeight", "LOrgApacheLuceneSearchIndexSearcher;Z", "LJavaIoIOException;", "equals", "LNSObject;", "hashCode", "toString", "LNSString;" };
  static const J2ObjcClassInfo _OrgApacheLuceneBkdtreeBKDPointInPolygonQuery = { "BKDPointInPolygonQuery", "org.apache.lucene.bkdtree", ptrTable, methods, fields, 7, 0x1, 5, 7, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneBkdtreeBKDPointInPolygonQuery;
}

@end

void OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_initWithNSString_withDoubleArray_withDoubleArray_(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery *self, NSString *field, IOSDoubleArray *polyLats, IOSDoubleArray *polyLons) {
  OrgApacheLuceneSearchQuery_init(self);
  JreStrongAssign(&self->field_, field);
  if (((IOSDoubleArray *) nil_chk(polyLats))->size_ != ((IOSDoubleArray *) nil_chk(polyLons))->size_) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"polyLats and polyLons must be equal length");
  }
  if (polyLats->size_ < 4) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"at least 4 polygon points required");
  }
  if (IOSDoubleArray_Get(polyLats, 0) != IOSDoubleArray_Get(polyLats, polyLats->size_ - 1)) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$D$I$D", @"first and last points of the polygon must be the same (it must close itself): polyLats[0]=", IOSDoubleArray_Get(polyLats, 0), @" polyLats[", (polyLats->size_ - 1), @"]=", IOSDoubleArray_Get(polyLats, polyLats->size_ - 1)));
  }
  if (IOSDoubleArray_Get(polyLons, 0) != IOSDoubleArray_Get(polyLons, polyLons->size_ - 1)) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$D$I$D", @"first and last points of the polygon must be the same (it must close itself): polyLons[0]=", IOSDoubleArray_Get(polyLons, 0), @" polyLons[", (polyLons->size_ - 1), @"]=", IOSDoubleArray_Get(polyLons, polyLons->size_ - 1)));
  }
  JreStrongAssign(&self->polyLats_, polyLats);
  JreStrongAssign(&self->polyLons_, polyLons);
  jdouble minLon = JavaLangDouble_POSITIVE_INFINITY;
  jdouble minLat = JavaLangDouble_POSITIVE_INFINITY;
  jdouble maxLon = JavaLangDouble_NEGATIVE_INFINITY;
  jdouble maxLat = JavaLangDouble_NEGATIVE_INFINITY;
  for (jint i = 0; i < polyLats->size_; i++) {
    jdouble lat = IOSDoubleArray_Get(polyLats, i);
    if (OrgApacheLuceneBkdtreeBKDTreeWriter_validLatWithDouble_(lat) == false) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$D$", @"polyLats[", i, @"]=", lat, @" is not a valid latitude"));
    }
    minLat = JavaLangMath_minWithDouble_withDouble_(minLat, lat);
    maxLat = JavaLangMath_maxWithDouble_withDouble_(maxLat, lat);
    jdouble lon = IOSDoubleArray_Get(polyLons, i);
    if (OrgApacheLuceneBkdtreeBKDTreeWriter_validLonWithDouble_(lon) == false) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$D$", @"polyLons[", i, @"]=", lat, @" is not a valid longitude"));
    }
    minLon = JavaLangMath_minWithDouble_withDouble_(minLon, lon);
    maxLon = JavaLangMath_maxWithDouble_withDouble_(maxLon, lon);
  }
  self->minLon_ = minLon;
  self->maxLon_ = maxLon;
  self->minLat_ = minLat;
  self->maxLat_ = maxLat;
}

OrgApacheLuceneBkdtreeBKDPointInPolygonQuery *new_OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_initWithNSString_withDoubleArray_withDoubleArray_(NSString *field, IOSDoubleArray *polyLats, IOSDoubleArray *polyLons) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery, initWithNSString_withDoubleArray_withDoubleArray_, field, polyLats, polyLons)
}

OrgApacheLuceneBkdtreeBKDPointInPolygonQuery *create_OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_initWithNSString_withDoubleArray_withDoubleArray_(NSString *field, IOSDoubleArray *polyLats, IOSDoubleArray *polyLons) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery, initWithNSString_withDoubleArray_withDoubleArray_, field, polyLats, polyLons)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery)

@implementation OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1

- (instancetype)initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery:(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery *)outer$
                                      withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query {
  OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_withOrgApacheLuceneSearchQuery_(self, outer$, query);
  return self;
}

- (void)extractTermsWithJavaUtilSet:(id<JavaUtilSet>)terms {
}

- (jfloat)getValueForNormalization {
  queryWeight_ = [this$0_ getBoost];
  return queryWeight_ * queryWeight_;
}

- (void)normalizeWithFloat:(jfloat)norm
                 withFloat:(jfloat)topLevelBoost {
  queryNorm_ = norm * topLevelBoost;
  JreTimesAssignFloatF(&queryWeight_, queryNorm_);
}

- (OrgApacheLuceneSearchExplanation *)explainWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                                                               withInt:(jint)doc {
  OrgApacheLuceneSearchScorer *s = [self scorerWithOrgApacheLuceneIndexLeafReaderContext:context];
  jboolean exists = s != nil && [s advanceWithInt:doc] == doc;
  if (exists) {
    return OrgApacheLuceneSearchExplanation_matchWithFloat_withNSString_withOrgApacheLuceneSearchExplanationArray_(queryWeight_, JreStrcat("$$", [this$0_ description], @", product of:"), [IOSObjectArray arrayWithObjects:(id[]){ OrgApacheLuceneSearchExplanation_matchWithFloat_withNSString_withOrgApacheLuceneSearchExplanationArray_([this$0_ getBoost], @"boost", [IOSObjectArray arrayWithLength:0 type:OrgApacheLuceneSearchExplanation_class_()]), OrgApacheLuceneSearchExplanation_matchWithFloat_withNSString_withOrgApacheLuceneSearchExplanationArray_(queryNorm_, @"queryNorm", [IOSObjectArray arrayWithLength:0 type:OrgApacheLuceneSearchExplanation_class_()]) } count:2 type:OrgApacheLuceneSearchExplanation_class_()]);
  }
  else {
    return OrgApacheLuceneSearchExplanation_noMatchWithNSString_withOrgApacheLuceneSearchExplanationArray_(JreStrcat("$$I", [this$0_ description], @" doesn't match id ", doc), [IOSObjectArray arrayWithLength:0 type:OrgApacheLuceneSearchExplanation_class_()]);
  }
}

- (OrgApacheLuceneSearchScorer *)scorerWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context {
  OrgApacheLuceneIndexLeafReader *reader = JreRetainedLocalValue([((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader]);
  OrgApacheLuceneIndexSortedNumericDocValues *sdv = JreRetainedLocalValue([((OrgApacheLuceneIndexLeafReader *) nil_chk(reader)) getSortedNumericDocValuesWithNSString:this$0_->field_]);
  if (sdv == nil) {
    return JreRetainedLocalValue(nil);
  }
  if ([sdv isKindOfClass:[OrgApacheLuceneBkdtreeBKDTreeSortedNumericDocValues class]] == false) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$$@", @"field \"", this$0_->field_, @"\" was not indexed with BKDTreeDocValuesFormat: got: ", sdv));
  }
  OrgApacheLuceneBkdtreeBKDTreeSortedNumericDocValues *treeDV = (OrgApacheLuceneBkdtreeBKDTreeSortedNumericDocValues *) cast_chk(sdv, [OrgApacheLuceneBkdtreeBKDTreeSortedNumericDocValues class]);
  OrgApacheLuceneBkdtreeBKDTreeReader *tree = JreRetainedLocalValue([treeDV getBKDTreeReader]);
  OrgApacheLuceneSearchDocIdSet *result = JreRetainedLocalValue([((OrgApacheLuceneBkdtreeBKDTreeReader *) nil_chk(tree)) intersectWithDouble:this$0_->minLat_ withDouble:this$0_->maxLat_ withDouble:this$0_->minLon_ withDouble:this$0_->maxLon_ withOrgApacheLuceneBkdtreeBKDTreeReader_LatLonFilter:create_OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_1_initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_(self) withOrgApacheLuceneIndexSortedNumericDocValues:treeDV->delegate_]);
  OrgApacheLuceneSearchDocIdSetIterator *disi = [((OrgApacheLuceneSearchDocIdSet *) nil_chk(result)) iterator];
  return create_OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_2_initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_withOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchWeight_(self, disi, self);
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, 3, -1, -1 },
    { NULL, "F", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchExplanation;", 0x1, 7, 8, 4, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchScorer;", 0x1, 9, 10, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery:withOrgApacheLuceneSearchQuery:);
  methods[1].selector = @selector(extractTermsWithJavaUtilSet:);
  methods[2].selector = @selector(getValueForNormalization);
  methods[3].selector = @selector(normalizeWithFloat:withFloat:);
  methods[4].selector = @selector(explainWithOrgApacheLuceneIndexLeafReaderContext:withInt:);
  methods[5].selector = @selector(scorerWithOrgApacheLuceneIndexLeafReaderContext:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneBkdtreeBKDPointInPolygonQuery;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "queryNorm_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "queryWeight_", "F", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneBkdtreeBKDPointInPolygonQuery;LOrgApacheLuceneSearchQuery;", "extractTerms", "LJavaUtilSet;", "(Ljava/util/Set<Lorg/apache/lucene/index/Term;>;)V", "LJavaIoIOException;", "normalize", "FF", "explain", "LOrgApacheLuceneIndexLeafReaderContext;I", "scorer", "LOrgApacheLuceneIndexLeafReaderContext;", "LOrgApacheLuceneBkdtreeBKDPointInPolygonQuery;", "createWeightWithOrgApacheLuceneSearchIndexSearcher:withBoolean:" };
  static const J2ObjcClassInfo _OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 = { "", "org.apache.lucene.bkdtree", ptrTable, methods, fields, 7, 0x8010, 6, 3, 11, -1, 12, -1, -1 };
  return &_OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1;
}

@end

void OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 *self, OrgApacheLuceneBkdtreeBKDPointInPolygonQuery *outer$, OrgApacheLuceneSearchQuery *query) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneSearchWeight_initWithOrgApacheLuceneSearchQuery_(self, query);
}

OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 *new_OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery *outer$, OrgApacheLuceneSearchQuery *query) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1, initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_withOrgApacheLuceneSearchQuery_, outer$, query)
}

OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 *create_OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_withOrgApacheLuceneSearchQuery_(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery *outer$, OrgApacheLuceneSearchQuery *query) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1, initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_withOrgApacheLuceneSearchQuery_, outer$, query)
}

@implementation OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_1

- (instancetype)initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1:(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 *)outer$ {
  OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_1_initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_(self, outer$);
  return self;
}

- (jboolean)acceptWithDouble:(jdouble)lat
                  withDouble:(jdouble)lon {
  return OrgApacheLuceneUtilGeoUtils_pointInPolygonWithDoubleArray_withDoubleArray_withDouble_withDouble_(this$0_->this$0_->polyLons_, this$0_->this$0_->polyLats_, lat, lon);
}

- (OrgApacheLuceneBkdtreeBKDTreeReader_Relation *)compareWithDouble:(jdouble)cellLatMin
                                                         withDouble:(jdouble)cellLatMax
                                                         withDouble:(jdouble)cellLonMin
                                                         withDouble:(jdouble)cellLonMax {
  if (OrgApacheLuceneUtilGeoUtils_rectWithinPolyWithDouble_withDouble_withDouble_withDouble_withDoubleArray_withDoubleArray_withDouble_withDouble_withDouble_withDouble_(cellLonMin, cellLatMin, cellLonMax, cellLatMax, this$0_->this$0_->polyLons_, this$0_->this$0_->polyLats_, this$0_->this$0_->minLon_, this$0_->this$0_->minLat_, this$0_->this$0_->maxLon_, this$0_->this$0_->maxLat_)) {
    return JreRetainedLocalValue(JreLoadEnum(OrgApacheLuceneBkdtreeBKDTreeReader_Relation, INSIDE));
  }
  else if (OrgApacheLuceneUtilGeoUtils_rectCrossesPolyWithDouble_withDouble_withDouble_withDouble_withDoubleArray_withDoubleArray_withDouble_withDouble_withDouble_withDouble_(cellLonMin, cellLatMin, cellLonMax, cellLatMax, this$0_->this$0_->polyLons_, this$0_->this$0_->polyLats_, this$0_->this$0_->minLon_, this$0_->this$0_->minLat_, this$0_->this$0_->maxLon_, this$0_->this$0_->maxLat_)) {
    return JreRetainedLocalValue(JreLoadEnum(OrgApacheLuceneBkdtreeBKDTreeReader_Relation, CROSSES));
  }
  else {
    return JreRetainedLocalValue(JreLoadEnum(OrgApacheLuceneBkdtreeBKDTreeReader_Relation, OUTSIDE));
  }
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneBkdtreeBKDTreeReader_Relation;", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1:);
  methods[1].selector = @selector(acceptWithDouble:withDouble:);
  methods[2].selector = @selector(compareWithDouble:withDouble:withDouble:withDouble:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1;", "accept", "DD", "compare", "DDDD", "scorerWithOrgApacheLuceneIndexLeafReaderContext:" };
  static const J2ObjcClassInfo _OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_1 = { "", "org.apache.lucene.bkdtree", ptrTable, methods, fields, 7, 0x8010, 3, 1, 0, -1, 5, -1, -1 };
  return &_OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_1;
}

@end

void OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_1_initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_1 *self, OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 *outer$) {
  JreStrongAssign(&self->this$0_, outer$);
  NSObject_init(self);
}

OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_1 *new_OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_1_initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 *outer$) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_1, initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_, outer$)
}

OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_1 *create_OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_1_initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 *outer$) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_1, initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_, outer$)
}

@implementation OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_2

- (instancetype)initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1:(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 *)outer$
                             withOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)capture$0
                                       withOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight {
  OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_2_initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_withOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchWeight_(self, outer$, capture$0, weight);
  return self;
}

- (jfloat)score {
  return this$0_->queryWeight_;
}

- (jint)freq {
  return 1;
}

- (jint)docID {
  return [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(val$disi_)) docID];
}

- (jint)nextDoc {
  return [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(val$disi_)) nextDoc];
}

- (jint)advanceWithInt:(jint)target {
  return [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(val$disi_)) advanceWithInt:target];
}

- (jlong)cost {
  return [((OrgApacheLuceneSearchDocIdSetIterator *) nil_chk(val$disi_)) cost];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$disi_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, 3, 1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1:withOrgApacheLuceneSearchDocIdSetIterator:withOrgApacheLuceneSearchWeight:);
  methods[1].selector = @selector(score);
  methods[2].selector = @selector(freq);
  methods[3].selector = @selector(docID);
  methods[4].selector = @selector(nextDoc);
  methods[5].selector = @selector(advanceWithInt:);
  methods[6].selector = @selector(cost);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$disi_", "LOrgApacheLuceneSearchDocIdSetIterator;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1;LOrgApacheLuceneSearchDocIdSetIterator;LOrgApacheLuceneSearchWeight;", "LJavaIoIOException;", "advance", "I", "LOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1;", "scorerWithOrgApacheLuceneIndexLeafReaderContext:" };
  static const J2ObjcClassInfo _OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_2 = { "", "org.apache.lucene.bkdtree", ptrTable, methods, fields, 7, 0x8010, 7, 2, 4, -1, 5, -1, -1 };
  return &_OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_2;
}

@end

void OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_2_initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_withOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchWeight_(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_2 *self, OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 *outer$, OrgApacheLuceneSearchDocIdSetIterator *capture$0, OrgApacheLuceneSearchWeight *weight) {
  JreStrongAssign(&self->this$0_, outer$);
  JreStrongAssign(&self->val$disi_, capture$0);
  OrgApacheLuceneSearchScorer_initWithOrgApacheLuceneSearchWeight_(self, weight);
}

OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_2 *new_OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_2_initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_withOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchWeight_(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 *outer$, OrgApacheLuceneSearchDocIdSetIterator *capture$0, OrgApacheLuceneSearchWeight *weight) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_2, initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_withOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchWeight_, outer$, capture$0, weight)
}

OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_2 *create_OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_2_initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_withOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchWeight_(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1 *outer$, OrgApacheLuceneSearchDocIdSetIterator *capture$0, OrgApacheLuceneSearchWeight *weight) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_2, initWithOrgApacheLuceneBkdtreeBKDPointInPolygonQuery_1_withOrgApacheLuceneSearchDocIdSetIterator_withOrgApacheLuceneSearchWeight_, outer$, capture$0, weight)
}
