//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queries/src/java/org/apache/lucene/queries/FilterClause.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/queries/FilterClause.h"
#include "org/apache/lucene/search/BooleanClause.h"
#include "org/apache/lucene/search/Filter.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queries/FilterClause must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneQueriesFilterClause () {
 @public
  OrgApacheLuceneSearchBooleanClause_Occur *occur_;
  OrgApacheLuceneSearchFilter *filter_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesFilterClause, occur_, OrgApacheLuceneSearchBooleanClause_Occur *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesFilterClause, filter_, OrgApacheLuceneSearchFilter *)

@implementation OrgApacheLuceneQueriesFilterClause

- (instancetype)initWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
       withOrgApacheLuceneSearchBooleanClause_Occur:(OrgApacheLuceneSearchBooleanClause_Occur *)occur {
  OrgApacheLuceneQueriesFilterClause_initWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchBooleanClause_Occur_(self, filter, occur);
  return self;
}

- (OrgApacheLuceneSearchFilter *)getFilter {
  return filter_;
}

- (OrgApacheLuceneSearchBooleanClause_Occur *)getOccur {
  return occur_;
}

- (jboolean)isEqual:(id)o {
  if (JreObjectEqualsEquals(o, self)) return true;
  if (o == nil || !([o isKindOfClass:[OrgApacheLuceneQueriesFilterClause class]])) return false;
  OrgApacheLuceneQueriesFilterClause *other = (OrgApacheLuceneQueriesFilterClause *) cast_chk(o, [OrgApacheLuceneQueriesFilterClause class]);
  return [((OrgApacheLuceneSearchFilter *) nil_chk(self->filter_)) isEqual:other->filter_] && self->occur_ == other->occur_;
}

- (NSUInteger)hash {
  return ((jint) [((OrgApacheLuceneSearchFilter *) nil_chk(filter_)) hash]) ^ ((jint) [((OrgApacheLuceneSearchBooleanClause_Occur *) nil_chk(occur_)) hash]);
}

- (NSString *)toStringWithNSString:(NSString *)field {
  return JreStrcat("$$", [((OrgApacheLuceneSearchBooleanClause_Occur *) nil_chk(occur_)) description], [((OrgApacheLuceneSearchFilter *) nil_chk(filter_)) toStringWithNSString:field]);
}

- (NSString *)description {
  return [self toStringWithNSString:@""];
}

- (void)dealloc {
  RELEASE_(occur_);
  RELEASE_(filter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchFilter;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchBooleanClause_Occur;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneSearchFilter:withOrgApacheLuceneSearchBooleanClause_Occur:);
  methods[1].selector = @selector(getFilter);
  methods[2].selector = @selector(getOccur);
  methods[3].selector = @selector(isEqual:);
  methods[4].selector = @selector(hash);
  methods[5].selector = @selector(toStringWithNSString:);
  methods[6].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "occur_", "LOrgApacheLuceneSearchBooleanClause_Occur;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "filter_", "LOrgApacheLuceneSearchFilter;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneSearchFilter;LOrgApacheLuceneSearchBooleanClause_Occur;", "equals", "LNSObject;", "hashCode", "toString", "LNSString;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueriesFilterClause = { "FilterClause", "org.apache.lucene.queries", ptrTable, methods, fields, 7, 0x11, 7, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueriesFilterClause;
}

@end

void OrgApacheLuceneQueriesFilterClause_initWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchBooleanClause_Occur_(OrgApacheLuceneQueriesFilterClause *self, OrgApacheLuceneSearchFilter *filter, OrgApacheLuceneSearchBooleanClause_Occur *occur) {
  NSObject_init(self);
  JreStrongAssign(&self->occur_, occur);
  JreStrongAssign(&self->filter_, filter);
}

OrgApacheLuceneQueriesFilterClause *new_OrgApacheLuceneQueriesFilterClause_initWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchBooleanClause_Occur_(OrgApacheLuceneSearchFilter *filter, OrgApacheLuceneSearchBooleanClause_Occur *occur) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueriesFilterClause, initWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchBooleanClause_Occur_, filter, occur)
}

OrgApacheLuceneQueriesFilterClause *create_OrgApacheLuceneQueriesFilterClause_initWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchBooleanClause_Occur_(OrgApacheLuceneSearchFilter *filter, OrgApacheLuceneSearchBooleanClause_Occur *occur) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueriesFilterClause, initWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchBooleanClause_Occur_, filter, occur)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueriesFilterClause)
