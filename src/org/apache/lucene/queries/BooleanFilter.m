//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queries/src/java/org/apache/lucene/queries/BooleanFilter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Iterable.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Spliterator.h"
#include "java/util/function/Consumer.h"
#include "org/apache/lucene/index/LeafReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/queries/BooleanFilter.h"
#include "org/apache/lucene/queries/FilterClause.h"
#include "org/apache/lucene/search/BitsFilteredDocIdSet.h"
#include "org/apache/lucene/search/BooleanClause.h"
#include "org/apache/lucene/search/DocIdSet.h"
#include "org/apache/lucene/search/DocIdSetIterator.h"
#include "org/apache/lucene/search/Filter.h"
#include "org/apache/lucene/util/BitDocIdSet.h"
#include "org/apache/lucene/util/Bits.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queries/BooleanFilter must not be compiled with ARC (-fobjc-arc)"
#endif

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface OrgApacheLuceneQueriesBooleanFilter () {
 @public
  id<JavaUtilList> clauses_;
}

+ (OrgApacheLuceneSearchDocIdSetIterator *)getDISIWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
                                        withOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context;

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesBooleanFilter, clauses_, id<JavaUtilList>)

__attribute__((unused)) static OrgApacheLuceneSearchDocIdSetIterator *OrgApacheLuceneQueriesBooleanFilter_getDISIWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneIndexLeafReaderContext_(OrgApacheLuceneSearchFilter *filter, OrgApacheLuceneIndexLeafReaderContext *context);

__attribute__((unused)) static IOSObjectArray *OrgApacheLuceneQueriesBooleanFilter__Annotations$0(void);

@implementation OrgApacheLuceneQueriesBooleanFilter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheLuceneQueriesBooleanFilter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgApacheLuceneSearchDocIdSet *)getDocIdSetWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                                            withOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)acceptDocs {
  OrgApacheLuceneUtilBitDocIdSet_Builder *res = nil;
  OrgApacheLuceneIndexLeafReader *reader = [((OrgApacheLuceneIndexLeafReaderContext *) nil_chk(context)) reader];
  jboolean hasShouldClauses = false;
  for (OrgApacheLuceneQueriesFilterClause * __strong fc in nil_chk(clauses_)) {
    if ([((OrgApacheLuceneQueriesFilterClause *) nil_chk(fc)) getOccur] == JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, SHOULD)) {
      hasShouldClauses = true;
      OrgApacheLuceneSearchDocIdSetIterator *disi = OrgApacheLuceneQueriesBooleanFilter_getDISIWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneIndexLeafReaderContext_([fc getFilter], context);
      if (disi == nil) continue;
      if (res == nil) {
        res = create_OrgApacheLuceneUtilBitDocIdSet_Builder_initWithInt_([((OrgApacheLuceneIndexLeafReader *) nil_chk(reader)) maxDoc]);
      }
      [res or__WithOrgApacheLuceneSearchDocIdSetIterator:disi];
    }
  }
  if (hasShouldClauses && res == nil) return nil;
  for (OrgApacheLuceneQueriesFilterClause * __strong fc in clauses_) {
    if ([((OrgApacheLuceneQueriesFilterClause *) nil_chk(fc)) getOccur] == JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST_NOT)) {
      if (res == nil) {
        JreAssert(!hasShouldClauses, @"org/apache/lucene/queries/BooleanFilter.java:79 condition failed: assert !hasShouldClauses;");
        res = create_OrgApacheLuceneUtilBitDocIdSet_Builder_initWithInt_withBoolean_([((OrgApacheLuceneIndexLeafReader *) nil_chk(reader)) maxDoc], true);
      }
      OrgApacheLuceneSearchDocIdSetIterator *disi = OrgApacheLuceneQueriesBooleanFilter_getDISIWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneIndexLeafReaderContext_([fc getFilter], context);
      if (disi != nil) {
        [res andNotWithOrgApacheLuceneSearchDocIdSetIterator:disi];
      }
    }
  }
  for (OrgApacheLuceneQueriesFilterClause * __strong fc in clauses_) {
    if ([((OrgApacheLuceneQueriesFilterClause *) nil_chk(fc)) getOccur] == JreLoadEnum(OrgApacheLuceneSearchBooleanClause_Occur, MUST)) {
      OrgApacheLuceneSearchDocIdSetIterator *disi = OrgApacheLuceneQueriesBooleanFilter_getDISIWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneIndexLeafReaderContext_([fc getFilter], context);
      if (disi == nil) {
        return nil;
      }
      if (res == nil) {
        res = create_OrgApacheLuceneUtilBitDocIdSet_Builder_initWithInt_([((OrgApacheLuceneIndexLeafReader *) nil_chk(reader)) maxDoc]);
        [res or__WithOrgApacheLuceneSearchDocIdSetIterator:disi];
      }
      else {
        [res and__WithOrgApacheLuceneSearchDocIdSetIterator:disi];
      }
    }
  }
  if (res == nil) {
    return nil;
  }
  return OrgApacheLuceneSearchBitsFilteredDocIdSet_wrapWithOrgApacheLuceneSearchDocIdSet_withOrgApacheLuceneUtilBits_([res build], acceptDocs);
}

+ (OrgApacheLuceneSearchDocIdSetIterator *)getDISIWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
                                        withOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context {
  return OrgApacheLuceneQueriesBooleanFilter_getDISIWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneIndexLeafReaderContext_(filter, context);
}

- (void)addWithOrgApacheLuceneQueriesFilterClause:(OrgApacheLuceneQueriesFilterClause *)filterClause {
  [((id<JavaUtilList>) nil_chk(clauses_)) addWithId:filterClause];
}

- (void)addWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
withOrgApacheLuceneSearchBooleanClause_Occur:(OrgApacheLuceneSearchBooleanClause_Occur *)occur {
  [self addWithOrgApacheLuceneQueriesFilterClause:create_OrgApacheLuceneQueriesFilterClause_initWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneSearchBooleanClause_Occur_(filter, occur)];
}

- (id<JavaUtilList>)clauses {
  return clauses_;
}

- (id<JavaUtilIterator>)iterator {
  return [((id<JavaUtilList>) nil_chk([self clauses])) iterator];
}

- (jboolean)isEqual:(id)obj {
  if (JreObjectEqualsEquals(self, obj)) {
    return true;
  }
  if ([super isEqual:obj] == false) {
    return false;
  }
  OrgApacheLuceneQueriesBooleanFilter *other = (OrgApacheLuceneQueriesBooleanFilter *) cast_chk(obj, [OrgApacheLuceneQueriesBooleanFilter class]);
  return [((id<JavaUtilList>) nil_chk(clauses_)) isEqual:((OrgApacheLuceneQueriesBooleanFilter *) nil_chk(other))->clauses_];
}

- (NSUInteger)hash {
  return 31 * ((jint) [super hash]) + ((jint) [((id<JavaUtilList>) nil_chk(clauses_)) hash]);
}

- (NSString *)toStringWithNSString:(NSString *)field {
  JavaLangStringBuilder *buffer = create_JavaLangStringBuilder_initWithNSString_(@"BooleanFilter(");
  jint minLen = [buffer java_length];
  for (OrgApacheLuceneQueriesFilterClause * __strong c in nil_chk(clauses_)) {
    if ([buffer java_length] > minLen) {
      [buffer appendWithChar:' '];
    }
    [buffer appendWithId:c];
  }
  return [((JavaLangStringBuilder *) nil_chk([buffer appendWithChar:')'])) description];
}

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

- (void)dealloc {
  RELEASE_(clauses_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchDocIdSet;", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneSearchDocIdSetIterator;", 0xa, 3, 4, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 5, 7, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 8, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x11, -1, -1, -1, 9, -1, -1 },
    { NULL, "Z", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 12, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 13, 14, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getDocIdSetWithOrgApacheLuceneIndexLeafReaderContext:withOrgApacheLuceneUtilBits:);
  methods[2].selector = @selector(getDISIWithOrgApacheLuceneSearchFilter:withOrgApacheLuceneIndexLeafReaderContext:);
  methods[3].selector = @selector(addWithOrgApacheLuceneQueriesFilterClause:);
  methods[4].selector = @selector(addWithOrgApacheLuceneSearchFilter:withOrgApacheLuceneSearchBooleanClause_Occur:);
  methods[5].selector = @selector(clauses);
  methods[6].selector = @selector(iterator);
  methods[7].selector = @selector(isEqual:);
  methods[8].selector = @selector(hash);
  methods[9].selector = @selector(toStringWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "clauses_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 15, -1 },
  };
  static const void *ptrTable[] = { "getDocIdSet", "LOrgApacheLuceneIndexLeafReaderContext;LOrgApacheLuceneUtilBits;", "LJavaIoIOException;", "getDISI", "LOrgApacheLuceneSearchFilter;LOrgApacheLuceneIndexLeafReaderContext;", "add", "LOrgApacheLuceneQueriesFilterClause;", "LOrgApacheLuceneSearchFilter;LOrgApacheLuceneSearchBooleanClause_Occur;", "()Ljava/util/List<Lorg/apache/lucene/queries/FilterClause;>;", "()Ljava/util/Iterator<Lorg/apache/lucene/queries/FilterClause;>;", "equals", "LNSObject;", "hashCode", "toString", "LNSString;", "Ljava/util/List<Lorg/apache/lucene/queries/FilterClause;>;", "Lorg/apache/lucene/search/Filter;Ljava/lang/Iterable<Lorg/apache/lucene/queries/FilterClause;>;", (void *)&OrgApacheLuceneQueriesBooleanFilter__Annotations$0 };
  static const J2ObjcClassInfo _OrgApacheLuceneQueriesBooleanFilter = { "BooleanFilter", "org.apache.lucene.queries", ptrTable, methods, fields, 7, 0x1, 10, 1, -1, -1, -1, 16, 17 };
  return &_OrgApacheLuceneQueriesBooleanFilter;
}

@end

void OrgApacheLuceneQueriesBooleanFilter_init(OrgApacheLuceneQueriesBooleanFilter *self) {
  OrgApacheLuceneSearchFilter_init(self);
  JreStrongAssignAndConsume(&self->clauses_, new_JavaUtilArrayList_init());
}

OrgApacheLuceneQueriesBooleanFilter *new_OrgApacheLuceneQueriesBooleanFilter_init() {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueriesBooleanFilter, init)
}

OrgApacheLuceneQueriesBooleanFilter *create_OrgApacheLuceneQueriesBooleanFilter_init() {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueriesBooleanFilter, init)
}

OrgApacheLuceneSearchDocIdSetIterator *OrgApacheLuceneQueriesBooleanFilter_getDISIWithOrgApacheLuceneSearchFilter_withOrgApacheLuceneIndexLeafReaderContext_(OrgApacheLuceneSearchFilter *filter, OrgApacheLuceneIndexLeafReaderContext *context) {
  OrgApacheLuceneQueriesBooleanFilter_initialize();
  OrgApacheLuceneSearchDocIdSet *set = [((OrgApacheLuceneSearchFilter *) nil_chk(filter)) getDocIdSetWithOrgApacheLuceneIndexLeafReaderContext:context withOrgApacheLuceneUtilBits:nil];
  return set == nil ? nil : [set iterator];
}

IOSObjectArray *OrgApacheLuceneQueriesBooleanFilter__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueriesBooleanFilter)
