//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queries/src/java/org/apache/lucene/queries/function/valuesource/FieldCacheSource.java
//

#include "J2ObjC_source.h"
#include "org/apache/lucene/queries/function/ValueSource.h"
#include "org/apache/lucene/queries/function/valuesource/FieldCacheSource.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queries/function/valuesource/FieldCacheSource must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneQueriesFunctionValuesourceFieldCacheSource

- (instancetype)initWithNSString:(NSString *)field {
  OrgApacheLuceneQueriesFunctionValuesourceFieldCacheSource_initWithNSString_(self, field);
  return self;
}

- (NSString *)getField {
  return field_;
}

- (NSString *)description__ {
  return field_;
}

- (jboolean)isEqual:(id)o {
  if (!([o isKindOfClass:[OrgApacheLuceneQueriesFunctionValuesourceFieldCacheSource class]])) return false;
  OrgApacheLuceneQueriesFunctionValuesourceFieldCacheSource *other = (OrgApacheLuceneQueriesFunctionValuesourceFieldCacheSource *) cast_chk(o, [OrgApacheLuceneQueriesFunctionValuesourceFieldCacheSource class]);
  return [((NSString *) nil_chk(self->field_)) isEqual:((OrgApacheLuceneQueriesFunctionValuesourceFieldCacheSource *) nil_chk(other))->field_];
}

- (NSUInteger)hash {
  return ((jint) [((NSString *) nil_chk(field_)) hash]);
}

- (void)dealloc {
  RELEASE_(field_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(getField);
  methods[2].selector = @selector(description__);
  methods[3].selector = @selector(isEqual:);
  methods[4].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "field_", "LNSString;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "description", "equals", "LNSObject;", "hashCode" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueriesFunctionValuesourceFieldCacheSource = { "FieldCacheSource", "org.apache.lucene.queries.function.valuesource", ptrTable, methods, fields, 7, 0x401, 5, 1, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueriesFunctionValuesourceFieldCacheSource;
}

@end

void OrgApacheLuceneQueriesFunctionValuesourceFieldCacheSource_initWithNSString_(OrgApacheLuceneQueriesFunctionValuesourceFieldCacheSource *self, NSString *field) {
  OrgApacheLuceneQueriesFunctionValueSource_init(self);
  JreStrongAssign(&self->field_, field);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueriesFunctionValuesourceFieldCacheSource)
