//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queries/src/java/org/apache/lucene/queries/function/valuesource/ConstValueSource.java
//

#include "J2ObjC_source.h"
#include "java/lang/Float.h"
#include "java/util/Map.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/queries/function/FunctionValues.h"
#include "org/apache/lucene/queries/function/ValueSource.h"
#include "org/apache/lucene/queries/function/docvalues/FloatDocValues.h"
#include "org/apache/lucene/queries/function/valuesource/ConstNumberSource.h"
#include "org/apache/lucene/queries/function/valuesource/ConstValueSource.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queries/function/valuesource/ConstValueSource must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneQueriesFunctionValuesourceConstValueSource () {
 @public
  jdouble dv_;
}

@end

@interface OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_1 : OrgApacheLuceneQueriesFunctionDocvaluesFloatDocValues {
 @public
  OrgApacheLuceneQueriesFunctionValuesourceConstValueSource *this$0_;
}

- (instancetype)initWithOrgApacheLuceneQueriesFunctionValuesourceConstValueSource:(OrgApacheLuceneQueriesFunctionValuesourceConstValueSource *)outer$
                                    withOrgApacheLuceneQueriesFunctionValueSource:(OrgApacheLuceneQueriesFunctionValueSource *)vs;

- (jfloat)floatValWithInt:(jint)doc;

- (jint)intValWithInt:(jint)doc;

- (jlong)longValWithInt:(jint)doc;

- (jdouble)doubleValWithInt:(jint)doc;

- (NSString *)toStringWithInt:(jint)doc;

- (id)objectValWithInt:(jint)doc;

- (jboolean)boolValWithInt:(jint)doc;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_1)

__attribute__((unused)) static void OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_1_initWithOrgApacheLuceneQueriesFunctionValuesourceConstValueSource_withOrgApacheLuceneQueriesFunctionValueSource_(OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_1 *self, OrgApacheLuceneQueriesFunctionValuesourceConstValueSource *outer$, OrgApacheLuceneQueriesFunctionValueSource *vs);

__attribute__((unused)) static OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_1 *new_OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_1_initWithOrgApacheLuceneQueriesFunctionValuesourceConstValueSource_withOrgApacheLuceneQueriesFunctionValueSource_(OrgApacheLuceneQueriesFunctionValuesourceConstValueSource *outer$, OrgApacheLuceneQueriesFunctionValueSource *vs) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_1 *create_OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_1_initWithOrgApacheLuceneQueriesFunctionValuesourceConstValueSource_withOrgApacheLuceneQueriesFunctionValueSource_(OrgApacheLuceneQueriesFunctionValuesourceConstValueSource *outer$, OrgApacheLuceneQueriesFunctionValueSource *vs);

@implementation OrgApacheLuceneQueriesFunctionValuesourceConstValueSource

- (instancetype)initWithFloat:(jfloat)constant {
  OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_initWithFloat_(self, constant);
  return self;
}

- (NSString *)description__ {
  return JreStrcat("$FC", @"const(", constant_, ')');
}

- (OrgApacheLuceneQueriesFunctionFunctionValues *)getValuesWithJavaUtilMap:(id<JavaUtilMap>)context
                                 withOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)readerContext {
  return create_OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_1_initWithOrgApacheLuceneQueriesFunctionValuesourceConstValueSource_withOrgApacheLuceneQueriesFunctionValueSource_(self, self);
}

- (NSUInteger)hash {
  return JavaLangFloat_floatToIntBitsWithFloat_(constant_) * 31;
}

- (jboolean)isEqual:(id)o {
  if (!([o isKindOfClass:[OrgApacheLuceneQueriesFunctionValuesourceConstValueSource class]])) return false;
  OrgApacheLuceneQueriesFunctionValuesourceConstValueSource *other = (OrgApacheLuceneQueriesFunctionValuesourceConstValueSource *) cast_chk(o, [OrgApacheLuceneQueriesFunctionValuesourceConstValueSource class]);
  return self->constant_ == ((OrgApacheLuceneQueriesFunctionValuesourceConstValueSource *) nil_chk(other))->constant_;
}

- (jint)getInt {
  return JreFpToInt(constant_);
}

- (jlong)getLong {
  return JreFpToLong(constant_);
}

- (jfloat)getFloat {
  return constant_;
}

- (jdouble)getDouble {
  return dv_;
}

- (NSNumber *)getNumber {
  return JavaLangFloat_valueOfWithFloat_(constant_);
}

- (jboolean)getBool {
  return constant_ != 0.0f;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueriesFunctionFunctionValues;", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "I", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithFloat:);
  methods[1].selector = @selector(description__);
  methods[2].selector = @selector(getValuesWithJavaUtilMap:withOrgApacheLuceneIndexLeafReaderContext:);
  methods[3].selector = @selector(hash);
  methods[4].selector = @selector(isEqual:);
  methods[5].selector = @selector(getInt);
  methods[6].selector = @selector(getLong);
  methods[7].selector = @selector(getFloat);
  methods[8].selector = @selector(getDouble);
  methods[9].selector = @selector(getNumber);
  methods[10].selector = @selector(getBool);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "constant_", "F", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "dv_", "D", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "F", "description", "getValues", "LJavaUtilMap;LOrgApacheLuceneIndexLeafReaderContext;", "LJavaIoIOException;", "hashCode", "equals", "LNSObject;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueriesFunctionValuesourceConstValueSource = { "ConstValueSource", "org.apache.lucene.queries.function.valuesource", ptrTable, methods, fields, 7, 0x1, 11, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueriesFunctionValuesourceConstValueSource;
}

@end

void OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_initWithFloat_(OrgApacheLuceneQueriesFunctionValuesourceConstValueSource *self, jfloat constant) {
  OrgApacheLuceneQueriesFunctionValuesourceConstNumberSource_init(self);
  self->constant_ = constant;
  self->dv_ = constant;
}

OrgApacheLuceneQueriesFunctionValuesourceConstValueSource *new_OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_initWithFloat_(jfloat constant) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueriesFunctionValuesourceConstValueSource, initWithFloat_, constant)
}

OrgApacheLuceneQueriesFunctionValuesourceConstValueSource *create_OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_initWithFloat_(jfloat constant) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueriesFunctionValuesourceConstValueSource, initWithFloat_, constant)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueriesFunctionValuesourceConstValueSource)

@implementation OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_1

- (instancetype)initWithOrgApacheLuceneQueriesFunctionValuesourceConstValueSource:(OrgApacheLuceneQueriesFunctionValuesourceConstValueSource *)outer$
                                    withOrgApacheLuceneQueriesFunctionValueSource:(OrgApacheLuceneQueriesFunctionValueSource *)vs {
  OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_1_initWithOrgApacheLuceneQueriesFunctionValuesourceConstValueSource_withOrgApacheLuceneQueriesFunctionValueSource_(self, outer$, vs);
  return self;
}

- (jfloat)floatValWithInt:(jint)doc {
  return this$0_->constant_;
}

- (jint)intValWithInt:(jint)doc {
  return JreFpToInt(this$0_->constant_);
}

- (jlong)longValWithInt:(jint)doc {
  return JreFpToLong(this$0_->constant_);
}

- (jdouble)doubleValWithInt:(jint)doc {
  return this$0_->dv_;
}

- (NSString *)toStringWithInt:(jint)doc {
  return JreRetainedLocalValue([this$0_ description__]);
}

- (id)objectValWithInt:(jint)doc {
  return JavaLangFloat_valueOfWithFloat_(this$0_->constant_);
}

- (jboolean)boolValWithInt:(jint)doc {
  return this$0_->constant_ != 0.0f;
}

- (void)dealloc {
  RELEASE_(this$0_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "F", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 5, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 6, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 7, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 8, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneQueriesFunctionValuesourceConstValueSource:withOrgApacheLuceneQueriesFunctionValueSource:);
  methods[1].selector = @selector(floatValWithInt:);
  methods[2].selector = @selector(intValWithInt:);
  methods[3].selector = @selector(longValWithInt:);
  methods[4].selector = @selector(doubleValWithInt:);
  methods[5].selector = @selector(toStringWithInt:);
  methods[6].selector = @selector(objectValWithInt:);
  methods[7].selector = @selector(boolValWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneQueriesFunctionValuesourceConstValueSource;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneQueriesFunctionValuesourceConstValueSource;LOrgApacheLuceneQueriesFunctionValueSource;", "floatVal", "I", "intVal", "longVal", "doubleVal", "toString", "objectVal", "boolVal", "LOrgApacheLuceneQueriesFunctionValuesourceConstValueSource;", "getValuesWithJavaUtilMap:withOrgApacheLuceneIndexLeafReaderContext:" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_1 = { "", "org.apache.lucene.queries.function.valuesource", ptrTable, methods, fields, 7, 0x8010, 8, 1, 9, -1, 10, -1, -1 };
  return &_OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_1;
}

@end

void OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_1_initWithOrgApacheLuceneQueriesFunctionValuesourceConstValueSource_withOrgApacheLuceneQueriesFunctionValueSource_(OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_1 *self, OrgApacheLuceneQueriesFunctionValuesourceConstValueSource *outer$, OrgApacheLuceneQueriesFunctionValueSource *vs) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneQueriesFunctionDocvaluesFloatDocValues_initWithOrgApacheLuceneQueriesFunctionValueSource_(self, vs);
}

OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_1 *new_OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_1_initWithOrgApacheLuceneQueriesFunctionValuesourceConstValueSource_withOrgApacheLuceneQueriesFunctionValueSource_(OrgApacheLuceneQueriesFunctionValuesourceConstValueSource *outer$, OrgApacheLuceneQueriesFunctionValueSource *vs) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_1, initWithOrgApacheLuceneQueriesFunctionValuesourceConstValueSource_withOrgApacheLuceneQueriesFunctionValueSource_, outer$, vs)
}

OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_1 *create_OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_1_initWithOrgApacheLuceneQueriesFunctionValuesourceConstValueSource_withOrgApacheLuceneQueriesFunctionValueSource_(OrgApacheLuceneQueriesFunctionValuesourceConstValueSource *outer$, OrgApacheLuceneQueriesFunctionValueSource *vs) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueriesFunctionValuesourceConstValueSource_1, initWithOrgApacheLuceneQueriesFunctionValuesourceConstValueSource_withOrgApacheLuceneQueriesFunctionValueSource_, outer$, vs)
}
