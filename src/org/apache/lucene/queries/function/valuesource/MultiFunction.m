//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queries/src/java/org/apache/lucene/queries/function/valuesource/MultiFunction.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/StringBuilder.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/queries/function/FunctionValues.h"
#include "org/apache/lucene/queries/function/ValueSource.h"
#include "org/apache/lucene/queries/function/valuesource/MultiFunction.h"
#include "org/apache/lucene/search/IndexSearcher.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queries/function/valuesource/MultiFunction must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_Values () {
 @public
  OrgApacheLuceneQueriesFunctionValuesourceMultiFunction *this$0_;
}

@end

@implementation OrgApacheLuceneQueriesFunctionValuesourceMultiFunction

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)sources {
  OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_initWithJavaUtilList_(self, sources);
  return self;
}

- (NSString *)name {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)description__ {
  return OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_description__WithNSString_withJavaUtilList_([self name], sources_);
}

+ (jboolean)allExistsWithInt:(jint)doc
withOrgApacheLuceneQueriesFunctionFunctionValuesArray:(IOSObjectArray *)values {
  return OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_allExistsWithInt_withOrgApacheLuceneQueriesFunctionFunctionValuesArray_(doc, values);
}

+ (jboolean)anyExistsWithInt:(jint)doc
withOrgApacheLuceneQueriesFunctionFunctionValuesArray:(IOSObjectArray *)values {
  return OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_anyExistsWithInt_withOrgApacheLuceneQueriesFunctionFunctionValuesArray_(doc, values);
}

+ (jboolean)allExistsWithInt:(jint)doc
withOrgApacheLuceneQueriesFunctionFunctionValues:(OrgApacheLuceneQueriesFunctionFunctionValues *)values1
withOrgApacheLuceneQueriesFunctionFunctionValues:(OrgApacheLuceneQueriesFunctionFunctionValues *)values2 {
  return OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_allExistsWithInt_withOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionFunctionValues_(doc, values1, values2);
}

+ (jboolean)anyExistsWithInt:(jint)doc
withOrgApacheLuceneQueriesFunctionFunctionValues:(OrgApacheLuceneQueriesFunctionFunctionValues *)values1
withOrgApacheLuceneQueriesFunctionFunctionValues:(OrgApacheLuceneQueriesFunctionFunctionValues *)values2 {
  return OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_anyExistsWithInt_withOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionFunctionValues_(doc, values1, values2);
}

+ (NSString *)description__WithNSString:(NSString *)name
                       withJavaUtilList:(id<JavaUtilList>)sources {
  return OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_description__WithNSString_withJavaUtilList_(name, sources);
}

+ (IOSObjectArray *)valsArrWithJavaUtilList:(id<JavaUtilList>)sources
                            withJavaUtilMap:(id<JavaUtilMap>)fcontext
  withOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)readerContext {
  return OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_valsArrWithJavaUtilList_withJavaUtilMap_withOrgApacheLuceneIndexLeafReaderContext_(sources, fcontext, readerContext);
}

+ (NSString *)toStringWithNSString:(NSString *)name
withOrgApacheLuceneQueriesFunctionFunctionValuesArray:(IOSObjectArray *)valsArr
                           withInt:(jint)doc {
  return OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_toStringWithNSString_withOrgApacheLuceneQueriesFunctionFunctionValuesArray_withInt_(name, valsArr, doc);
}

- (void)createWeightWithJavaUtilMap:(id<JavaUtilMap>)context
withOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher {
  for (OrgApacheLuceneQueriesFunctionValueSource * __strong source in nil_chk(sources_)) [((OrgApacheLuceneQueriesFunctionValueSource *) nil_chk(source)) createWeightWithJavaUtilMap:context withOrgApacheLuceneSearchIndexSearcher:searcher];
}

- (NSUInteger)hash {
  return ((jint) [((id<JavaUtilList>) nil_chk(sources_)) hash]) + ((jint) [((NSString *) nil_chk([self name])) hash]);
}

- (jboolean)isEqual:(id)o {
  if (!JreObjectEqualsEquals([self java_getClass], [nil_chk(o) java_getClass])) return false;
  OrgApacheLuceneQueriesFunctionValuesourceMultiFunction *other = (OrgApacheLuceneQueriesFunctionValuesourceMultiFunction *) cast_chk(o, [OrgApacheLuceneQueriesFunctionValuesourceMultiFunction class]);
  return [((id<JavaUtilList>) nil_chk(self->sources_)) isEqual:other->sources_];
}

- (void)dealloc {
  RELEASE_(sources_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSString;", 0x404, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 5, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 3, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 5, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 2, 7, -1, 8, -1, -1 },
    { NULL, "[LOrgApacheLuceneQueriesFunctionFunctionValues;", 0x9, 9, 10, 11, 12, -1, -1 },
    { NULL, "LNSString;", 0x9, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, 11, -1, -1, -1 },
    { NULL, "I", 0x1, 17, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 18, 19, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilList:);
  methods[1].selector = @selector(name);
  methods[2].selector = @selector(description__);
  methods[3].selector = @selector(allExistsWithInt:withOrgApacheLuceneQueriesFunctionFunctionValuesArray:);
  methods[4].selector = @selector(anyExistsWithInt:withOrgApacheLuceneQueriesFunctionFunctionValuesArray:);
  methods[5].selector = @selector(allExistsWithInt:withOrgApacheLuceneQueriesFunctionFunctionValues:withOrgApacheLuceneQueriesFunctionFunctionValues:);
  methods[6].selector = @selector(anyExistsWithInt:withOrgApacheLuceneQueriesFunctionFunctionValues:withOrgApacheLuceneQueriesFunctionFunctionValues:);
  methods[7].selector = @selector(description__WithNSString:withJavaUtilList:);
  methods[8].selector = @selector(valsArrWithJavaUtilList:withJavaUtilMap:withOrgApacheLuceneIndexLeafReaderContext:);
  methods[9].selector = @selector(toStringWithNSString:withOrgApacheLuceneQueriesFunctionFunctionValuesArray:withInt:);
  methods[10].selector = @selector(createWeightWithJavaUtilMap:withOrgApacheLuceneSearchIndexSearcher:);
  methods[11].selector = @selector(hash);
  methods[12].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "sources_", "LJavaUtilList;", .constantValue.asLong = 0, 0x14, -1, -1, 20, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilList;", "(Ljava/util/List<Lorg/apache/lucene/queries/function/ValueSource;>;)V", "description", "allExists", "I[LOrgApacheLuceneQueriesFunctionFunctionValues;", "anyExists", "ILOrgApacheLuceneQueriesFunctionFunctionValues;LOrgApacheLuceneQueriesFunctionFunctionValues;", "LNSString;LJavaUtilList;", "(Ljava/lang/String;Ljava/util/List<Lorg/apache/lucene/queries/function/ValueSource;>;)Ljava/lang/String;", "valsArr", "LJavaUtilList;LJavaUtilMap;LOrgApacheLuceneIndexLeafReaderContext;", "LJavaIoIOException;", "(Ljava/util/List<Lorg/apache/lucene/queries/function/ValueSource;>;Ljava/util/Map;Lorg/apache/lucene/index/LeafReaderContext;)[Lorg/apache/lucene/queries/function/FunctionValues;", "toString", "LNSString;[LOrgApacheLuceneQueriesFunctionFunctionValues;I", "createWeight", "LJavaUtilMap;LOrgApacheLuceneSearchIndexSearcher;", "hashCode", "equals", "LNSObject;", "Ljava/util/List<Lorg/apache/lucene/queries/function/ValueSource;>;", "LOrgApacheLuceneQueriesFunctionValuesourceMultiFunction_Values;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueriesFunctionValuesourceMultiFunction = { "MultiFunction", "org.apache.lucene.queries.function.valuesource", ptrTable, methods, fields, 7, 0x401, 13, 1, -1, 21, -1, -1, -1 };
  return &_OrgApacheLuceneQueriesFunctionValuesourceMultiFunction;
}

@end

void OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_initWithJavaUtilList_(OrgApacheLuceneQueriesFunctionValuesourceMultiFunction *self, id<JavaUtilList> sources) {
  OrgApacheLuceneQueriesFunctionValueSource_init(self);
  JreStrongAssign(&self->sources_, sources);
}

jboolean OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_allExistsWithInt_withOrgApacheLuceneQueriesFunctionFunctionValuesArray_(jint doc, IOSObjectArray *values) {
  OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_initialize();
  {
    IOSObjectArray *a__ = values;
    OrgApacheLuceneQueriesFunctionFunctionValues * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgApacheLuceneQueriesFunctionFunctionValues * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneQueriesFunctionFunctionValues *v = *b__++;
      if (![((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(v)) existsWithInt:doc]) {
        return false;
      }
    }
  }
  return true;
}

jboolean OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_anyExistsWithInt_withOrgApacheLuceneQueriesFunctionFunctionValuesArray_(jint doc, IOSObjectArray *values) {
  OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_initialize();
  {
    IOSObjectArray *a__ = values;
    OrgApacheLuceneQueriesFunctionFunctionValues * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgApacheLuceneQueriesFunctionFunctionValues * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneQueriesFunctionFunctionValues *v = *b__++;
      if ([((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(v)) existsWithInt:doc]) {
        return true;
      }
    }
  }
  return false;
}

jboolean OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_allExistsWithInt_withOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionFunctionValues_(jint doc, OrgApacheLuceneQueriesFunctionFunctionValues *values1, OrgApacheLuceneQueriesFunctionFunctionValues *values2) {
  OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_initialize();
  return [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(values1)) existsWithInt:doc] && [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(values2)) existsWithInt:doc];
}

jboolean OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_anyExistsWithInt_withOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionFunctionValues_(jint doc, OrgApacheLuceneQueriesFunctionFunctionValues *values1, OrgApacheLuceneQueriesFunctionFunctionValues *values2) {
  OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_initialize();
  return [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(values1)) existsWithInt:doc] || [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(values2)) existsWithInt:doc];
}

NSString *OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_description__WithNSString_withJavaUtilList_(NSString *name, id<JavaUtilList> sources) {
  OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_initialize();
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:name])) appendWithChar:'('];
  jboolean firstTime = true;
  for (OrgApacheLuceneQueriesFunctionValueSource * __strong source in nil_chk(sources)) {
    if (firstTime) {
      firstTime = false;
    }
    else {
      [sb appendWithChar:','];
    }
    [sb appendWithId:source];
  }
  [sb appendWithChar:')'];
  return [sb description];
}

IOSObjectArray *OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_valsArrWithJavaUtilList_withJavaUtilMap_withOrgApacheLuceneIndexLeafReaderContext_(id<JavaUtilList> sources, id<JavaUtilMap> fcontext, OrgApacheLuceneIndexLeafReaderContext *readerContext) {
  OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_initialize();
  IOSObjectArray *valsArr = [IOSObjectArray arrayWithLength:[((id<JavaUtilList>) nil_chk(sources)) size] type:OrgApacheLuceneQueriesFunctionFunctionValues_class_()];
  jint i = 0;
  for (OrgApacheLuceneQueriesFunctionValueSource * __strong source in sources) {
    IOSObjectArray_Set(valsArr, i++, [((OrgApacheLuceneQueriesFunctionValueSource *) nil_chk(source)) getValuesWithJavaUtilMap:fcontext withOrgApacheLuceneIndexLeafReaderContext:readerContext]);
  }
  return valsArr;
}

NSString *OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_toStringWithNSString_withOrgApacheLuceneQueriesFunctionFunctionValuesArray_withInt_(NSString *name, IOSObjectArray *valsArr, jint doc) {
  OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_initialize();
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:name])) appendWithChar:'('];
  jboolean firstTime = true;
  {
    IOSObjectArray *a__ = valsArr;
    OrgApacheLuceneQueriesFunctionFunctionValues * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgApacheLuceneQueriesFunctionFunctionValues * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneQueriesFunctionFunctionValues *vals = *b__++;
      if (firstTime) {
        firstTime = false;
      }
      else {
        [sb appendWithChar:','];
      }
      [sb appendWithNSString:[((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(vals)) toStringWithInt:doc]];
    }
  }
  [sb appendWithChar:')'];
  return [sb description];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueriesFunctionValuesourceMultiFunction)

@implementation OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_Values

- (instancetype)initWithOrgApacheLuceneQueriesFunctionValuesourceMultiFunction:(OrgApacheLuceneQueriesFunctionValuesourceMultiFunction *)outer$
                         withOrgApacheLuceneQueriesFunctionFunctionValuesArray:(IOSObjectArray *)valsArr {
  OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_Values_initWithOrgApacheLuceneQueriesFunctionValuesourceMultiFunction_withOrgApacheLuceneQueriesFunctionFunctionValuesArray_(self, outer$, valsArr);
  return self;
}

- (NSString *)toStringWithInt:(jint)doc {
  return OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_toStringWithNSString_withOrgApacheLuceneQueriesFunctionFunctionValuesArray_withInt_([this$0_ name], valsArr_, doc);
}

- (OrgApacheLuceneQueriesFunctionFunctionValues_ValueFiller *)getValueFiller {
  return [super getValueFiller];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(valsArr_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueriesFunctionFunctionValues_ValueFiller;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneQueriesFunctionValuesourceMultiFunction:withOrgApacheLuceneQueriesFunctionFunctionValuesArray:);
  methods[1].selector = @selector(toStringWithInt:);
  methods[2].selector = @selector(getValueFiller);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", "LOrgApacheLuceneQueriesFunctionValuesourceMultiFunction;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "valsArr_", "[LOrgApacheLuceneQueriesFunctionFunctionValues;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneQueriesFunctionValuesourceMultiFunction;[LOrgApacheLuceneQueriesFunctionFunctionValues;", "toString", "I", "LOrgApacheLuceneQueriesFunctionValuesourceMultiFunction;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_Values = { "Values", "org.apache.lucene.queries.function.valuesource", ptrTable, methods, fields, 7, 0x1, 3, 2, 3, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_Values;
}

@end

void OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_Values_initWithOrgApacheLuceneQueriesFunctionValuesourceMultiFunction_withOrgApacheLuceneQueriesFunctionFunctionValuesArray_(OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_Values *self, OrgApacheLuceneQueriesFunctionValuesourceMultiFunction *outer$, IOSObjectArray *valsArr) {
  JreStrongAssign(&self->this$0_, outer$);
  OrgApacheLuceneQueriesFunctionFunctionValues_init(self);
  JreStrongAssign(&self->valsArr_, valsArr);
}

OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_Values *new_OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_Values_initWithOrgApacheLuceneQueriesFunctionValuesourceMultiFunction_withOrgApacheLuceneQueriesFunctionFunctionValuesArray_(OrgApacheLuceneQueriesFunctionValuesourceMultiFunction *outer$, IOSObjectArray *valsArr) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_Values, initWithOrgApacheLuceneQueriesFunctionValuesourceMultiFunction_withOrgApacheLuceneQueriesFunctionFunctionValuesArray_, outer$, valsArr)
}

OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_Values *create_OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_Values_initWithOrgApacheLuceneQueriesFunctionValuesourceMultiFunction_withOrgApacheLuceneQueriesFunctionFunctionValuesArray_(OrgApacheLuceneQueriesFunctionValuesourceMultiFunction *outer$, IOSObjectArray *valsArr) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_Values, initWithOrgApacheLuceneQueriesFunctionValuesourceMultiFunction_withOrgApacheLuceneQueriesFunctionFunctionValuesArray_, outer$, valsArr)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueriesFunctionValuesourceMultiFunction_Values)
