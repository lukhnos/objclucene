//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queries/src/java/org/apache/lucene/queries/function/valuesource/IfFunction.java
//

#include "J2ObjC_source.h"
#include "java/util/Map.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/queries/function/FunctionValues.h"
#include "org/apache/lucene/queries/function/ValueSource.h"
#include "org/apache/lucene/queries/function/valuesource/BoolFunction.h"
#include "org/apache/lucene/queries/function/valuesource/IfFunction.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/util/BytesRefBuilder.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queries/function/valuesource/IfFunction must not be compiled with ARC (-fobjc-arc)"
#endif

@interface OrgApacheLuceneQueriesFunctionValuesourceIfFunction () {
 @public
  OrgApacheLuceneQueriesFunctionValueSource *ifSource_;
  OrgApacheLuceneQueriesFunctionValueSource *trueSource_;
  OrgApacheLuceneQueriesFunctionValueSource *falseSource_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesFunctionValuesourceIfFunction, ifSource_, OrgApacheLuceneQueriesFunctionValueSource *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesFunctionValuesourceIfFunction, trueSource_, OrgApacheLuceneQueriesFunctionValueSource *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesFunctionValuesourceIfFunction, falseSource_, OrgApacheLuceneQueriesFunctionValueSource *)

@interface OrgApacheLuceneQueriesFunctionValuesourceIfFunction_1 : OrgApacheLuceneQueriesFunctionFunctionValues {
 @public
  OrgApacheLuceneQueriesFunctionFunctionValues *val$ifVals_;
  OrgApacheLuceneQueriesFunctionFunctionValues *val$trueVals_;
  OrgApacheLuceneQueriesFunctionFunctionValues *val$falseVals_;
}

- (instancetype)initWithOrgApacheLuceneQueriesFunctionFunctionValues:(OrgApacheLuceneQueriesFunctionFunctionValues *)capture$0
                    withOrgApacheLuceneQueriesFunctionFunctionValues:(OrgApacheLuceneQueriesFunctionFunctionValues *)capture$1
                    withOrgApacheLuceneQueriesFunctionFunctionValues:(OrgApacheLuceneQueriesFunctionFunctionValues *)capture$2;

- (jbyte)byteValWithInt:(jint)doc;

- (jshort)shortValWithInt:(jint)doc;

- (jfloat)floatValWithInt:(jint)doc;

- (jint)intValWithInt:(jint)doc;

- (jlong)longValWithInt:(jint)doc;

- (jdouble)doubleValWithInt:(jint)doc;

- (NSString *)strValWithInt:(jint)doc;

- (jboolean)boolValWithInt:(jint)doc;

- (jboolean)bytesValWithInt:(jint)doc
withOrgApacheLuceneUtilBytesRefBuilder:(OrgApacheLuceneUtilBytesRefBuilder *)target;

- (id)objectValWithInt:(jint)doc;

- (jboolean)existsWithInt:(jint)doc;

- (OrgApacheLuceneQueriesFunctionFunctionValues_ValueFiller *)getValueFiller;

- (NSString *)toStringWithInt:(jint)doc;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueriesFunctionValuesourceIfFunction_1)

__attribute__((unused)) static void OrgApacheLuceneQueriesFunctionValuesourceIfFunction_1_initWithOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionFunctionValues_(OrgApacheLuceneQueriesFunctionValuesourceIfFunction_1 *self, OrgApacheLuceneQueriesFunctionFunctionValues *capture$0, OrgApacheLuceneQueriesFunctionFunctionValues *capture$1, OrgApacheLuceneQueriesFunctionFunctionValues *capture$2);

__attribute__((unused)) static OrgApacheLuceneQueriesFunctionValuesourceIfFunction_1 *new_OrgApacheLuceneQueriesFunctionValuesourceIfFunction_1_initWithOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionFunctionValues_(OrgApacheLuceneQueriesFunctionFunctionValues *capture$0, OrgApacheLuceneQueriesFunctionFunctionValues *capture$1, OrgApacheLuceneQueriesFunctionFunctionValues *capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheLuceneQueriesFunctionValuesourceIfFunction_1 *create_OrgApacheLuceneQueriesFunctionValuesourceIfFunction_1_initWithOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionFunctionValues_(OrgApacheLuceneQueriesFunctionFunctionValues *capture$0, OrgApacheLuceneQueriesFunctionFunctionValues *capture$1, OrgApacheLuceneQueriesFunctionFunctionValues *capture$2);

@implementation OrgApacheLuceneQueriesFunctionValuesourceIfFunction

- (instancetype)initWithOrgApacheLuceneQueriesFunctionValueSource:(OrgApacheLuceneQueriesFunctionValueSource *)ifSource
                    withOrgApacheLuceneQueriesFunctionValueSource:(OrgApacheLuceneQueriesFunctionValueSource *)trueSource
                    withOrgApacheLuceneQueriesFunctionValueSource:(OrgApacheLuceneQueriesFunctionValueSource *)falseSource {
  OrgApacheLuceneQueriesFunctionValuesourceIfFunction_initWithOrgApacheLuceneQueriesFunctionValueSource_withOrgApacheLuceneQueriesFunctionValueSource_withOrgApacheLuceneQueriesFunctionValueSource_(self, ifSource, trueSource, falseSource);
  return self;
}

- (OrgApacheLuceneQueriesFunctionFunctionValues *)getValuesWithJavaUtilMap:(id<JavaUtilMap>)context
                                 withOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)readerContext {
  OrgApacheLuceneQueriesFunctionFunctionValues *ifVals = [((OrgApacheLuceneQueriesFunctionValueSource *) nil_chk(ifSource_)) getValuesWithJavaUtilMap:context withOrgApacheLuceneIndexLeafReaderContext:readerContext];
  OrgApacheLuceneQueriesFunctionFunctionValues *trueVals = [((OrgApacheLuceneQueriesFunctionValueSource *) nil_chk(trueSource_)) getValuesWithJavaUtilMap:context withOrgApacheLuceneIndexLeafReaderContext:readerContext];
  OrgApacheLuceneQueriesFunctionFunctionValues *falseVals = [((OrgApacheLuceneQueriesFunctionValueSource *) nil_chk(falseSource_)) getValuesWithJavaUtilMap:context withOrgApacheLuceneIndexLeafReaderContext:readerContext];
  return create_OrgApacheLuceneQueriesFunctionValuesourceIfFunction_1_initWithOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionFunctionValues_(ifVals, trueVals, falseVals);
}

- (NSString *)description__ {
  return JreStrcat("$$C$C@C", @"if(", [((OrgApacheLuceneQueriesFunctionValueSource *) nil_chk(ifSource_)) description__], ',', [((OrgApacheLuceneQueriesFunctionValueSource *) nil_chk(trueSource_)) description__], ',', falseSource_, ')');
}

- (NSUInteger)hash {
  jint h = ((jint) [((OrgApacheLuceneQueriesFunctionValueSource *) nil_chk(ifSource_)) hash]);
  h = h * 31 + ((jint) [((OrgApacheLuceneQueriesFunctionValueSource *) nil_chk(trueSource_)) hash]);
  h = h * 31 + ((jint) [((OrgApacheLuceneQueriesFunctionValueSource *) nil_chk(falseSource_)) hash]);
  return h;
}

- (jboolean)isEqual:(id)o {
  if (!([o isKindOfClass:[OrgApacheLuceneQueriesFunctionValuesourceIfFunction class]])) return false;
  OrgApacheLuceneQueriesFunctionValuesourceIfFunction *other = (OrgApacheLuceneQueriesFunctionValuesourceIfFunction *) cast_chk(o, [OrgApacheLuceneQueriesFunctionValuesourceIfFunction class]);
  return [((OrgApacheLuceneQueriesFunctionValueSource *) nil_chk(ifSource_)) isEqual:((OrgApacheLuceneQueriesFunctionValuesourceIfFunction *) nil_chk(other))->ifSource_] && [((OrgApacheLuceneQueriesFunctionValueSource *) nil_chk(trueSource_)) isEqual:other->trueSource_] && [((OrgApacheLuceneQueriesFunctionValueSource *) nil_chk(falseSource_)) isEqual:other->falseSource_];
}

- (void)createWeightWithJavaUtilMap:(id<JavaUtilMap>)context
withOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher {
  [((OrgApacheLuceneQueriesFunctionValueSource *) nil_chk(ifSource_)) createWeightWithJavaUtilMap:context withOrgApacheLuceneSearchIndexSearcher:searcher];
  [((OrgApacheLuceneQueriesFunctionValueSource *) nil_chk(trueSource_)) createWeightWithJavaUtilMap:context withOrgApacheLuceneSearchIndexSearcher:searcher];
  [((OrgApacheLuceneQueriesFunctionValueSource *) nil_chk(falseSource_)) createWeightWithJavaUtilMap:context withOrgApacheLuceneSearchIndexSearcher:searcher];
}

- (void)dealloc {
  RELEASE_(ifSource_);
  RELEASE_(trueSource_);
  RELEASE_(falseSource_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueriesFunctionFunctionValues;", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneQueriesFunctionValueSource:withOrgApacheLuceneQueriesFunctionValueSource:withOrgApacheLuceneQueriesFunctionValueSource:);
  methods[1].selector = @selector(getValuesWithJavaUtilMap:withOrgApacheLuceneIndexLeafReaderContext:);
  methods[2].selector = @selector(description__);
  methods[3].selector = @selector(hash);
  methods[4].selector = @selector(isEqual:);
  methods[5].selector = @selector(createWeightWithJavaUtilMap:withOrgApacheLuceneSearchIndexSearcher:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ifSource_", "LOrgApacheLuceneQueriesFunctionValueSource;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "trueSource_", "LOrgApacheLuceneQueriesFunctionValueSource;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "falseSource_", "LOrgApacheLuceneQueriesFunctionValueSource;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneQueriesFunctionValueSource;LOrgApacheLuceneQueriesFunctionValueSource;LOrgApacheLuceneQueriesFunctionValueSource;", "getValues", "LJavaUtilMap;LOrgApacheLuceneIndexLeafReaderContext;", "LJavaIoIOException;", "description", "hashCode", "equals", "LNSObject;", "createWeight", "LJavaUtilMap;LOrgApacheLuceneSearchIndexSearcher;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueriesFunctionValuesourceIfFunction = { "IfFunction", "org.apache.lucene.queries.function.valuesource", ptrTable, methods, fields, 7, 0x1, 6, 3, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueriesFunctionValuesourceIfFunction;
}

@end

void OrgApacheLuceneQueriesFunctionValuesourceIfFunction_initWithOrgApacheLuceneQueriesFunctionValueSource_withOrgApacheLuceneQueriesFunctionValueSource_withOrgApacheLuceneQueriesFunctionValueSource_(OrgApacheLuceneQueriesFunctionValuesourceIfFunction *self, OrgApacheLuceneQueriesFunctionValueSource *ifSource, OrgApacheLuceneQueriesFunctionValueSource *trueSource, OrgApacheLuceneQueriesFunctionValueSource *falseSource) {
  OrgApacheLuceneQueriesFunctionValuesourceBoolFunction_init(self);
  JreStrongAssign(&self->ifSource_, ifSource);
  JreStrongAssign(&self->trueSource_, trueSource);
  JreStrongAssign(&self->falseSource_, falseSource);
}

OrgApacheLuceneQueriesFunctionValuesourceIfFunction *new_OrgApacheLuceneQueriesFunctionValuesourceIfFunction_initWithOrgApacheLuceneQueriesFunctionValueSource_withOrgApacheLuceneQueriesFunctionValueSource_withOrgApacheLuceneQueriesFunctionValueSource_(OrgApacheLuceneQueriesFunctionValueSource *ifSource, OrgApacheLuceneQueriesFunctionValueSource *trueSource, OrgApacheLuceneQueriesFunctionValueSource *falseSource) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueriesFunctionValuesourceIfFunction, initWithOrgApacheLuceneQueriesFunctionValueSource_withOrgApacheLuceneQueriesFunctionValueSource_withOrgApacheLuceneQueriesFunctionValueSource_, ifSource, trueSource, falseSource)
}

OrgApacheLuceneQueriesFunctionValuesourceIfFunction *create_OrgApacheLuceneQueriesFunctionValuesourceIfFunction_initWithOrgApacheLuceneQueriesFunctionValueSource_withOrgApacheLuceneQueriesFunctionValueSource_withOrgApacheLuceneQueriesFunctionValueSource_(OrgApacheLuceneQueriesFunctionValueSource *ifSource, OrgApacheLuceneQueriesFunctionValueSource *trueSource, OrgApacheLuceneQueriesFunctionValueSource *falseSource) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueriesFunctionValuesourceIfFunction, initWithOrgApacheLuceneQueriesFunctionValueSource_withOrgApacheLuceneQueriesFunctionValueSource_withOrgApacheLuceneQueriesFunctionValueSource_, ifSource, trueSource, falseSource)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueriesFunctionValuesourceIfFunction)

@implementation OrgApacheLuceneQueriesFunctionValuesourceIfFunction_1

- (instancetype)initWithOrgApacheLuceneQueriesFunctionFunctionValues:(OrgApacheLuceneQueriesFunctionFunctionValues *)capture$0
                    withOrgApacheLuceneQueriesFunctionFunctionValues:(OrgApacheLuceneQueriesFunctionFunctionValues *)capture$1
                    withOrgApacheLuceneQueriesFunctionFunctionValues:(OrgApacheLuceneQueriesFunctionFunctionValues *)capture$2 {
  OrgApacheLuceneQueriesFunctionValuesourceIfFunction_1_initWithOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionFunctionValues_(self, capture$0, capture$1, capture$2);
  return self;
}

- (jbyte)byteValWithInt:(jint)doc {
  return [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$ifVals_)) boolValWithInt:doc] ? [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$trueVals_)) byteValWithInt:doc] : [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$falseVals_)) byteValWithInt:doc];
}

- (jshort)shortValWithInt:(jint)doc {
  return [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$ifVals_)) boolValWithInt:doc] ? [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$trueVals_)) shortValWithInt:doc] : [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$falseVals_)) shortValWithInt:doc];
}

- (jfloat)floatValWithInt:(jint)doc {
  return [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$ifVals_)) boolValWithInt:doc] ? [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$trueVals_)) floatValWithInt:doc] : [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$falseVals_)) floatValWithInt:doc];
}

- (jint)intValWithInt:(jint)doc {
  return [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$ifVals_)) boolValWithInt:doc] ? [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$trueVals_)) intValWithInt:doc] : [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$falseVals_)) intValWithInt:doc];
}

- (jlong)longValWithInt:(jint)doc {
  return [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$ifVals_)) boolValWithInt:doc] ? [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$trueVals_)) longValWithInt:doc] : [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$falseVals_)) longValWithInt:doc];
}

- (jdouble)doubleValWithInt:(jint)doc {
  return [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$ifVals_)) boolValWithInt:doc] ? [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$trueVals_)) doubleValWithInt:doc] : [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$falseVals_)) doubleValWithInt:doc];
}

- (NSString *)strValWithInt:(jint)doc {
  return JreRetainedLocalValue([((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$ifVals_)) boolValWithInt:doc] ? [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$trueVals_)) strValWithInt:doc] : [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$falseVals_)) strValWithInt:doc]);
}

- (jboolean)boolValWithInt:(jint)doc {
  return [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$ifVals_)) boolValWithInt:doc] ? [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$trueVals_)) boolValWithInt:doc] : [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$falseVals_)) boolValWithInt:doc];
}

- (jboolean)bytesValWithInt:(jint)doc
withOrgApacheLuceneUtilBytesRefBuilder:(OrgApacheLuceneUtilBytesRefBuilder *)target {
  return [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$ifVals_)) boolValWithInt:doc] ? [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$trueVals_)) bytesValWithInt:doc withOrgApacheLuceneUtilBytesRefBuilder:target] : [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$falseVals_)) bytesValWithInt:doc withOrgApacheLuceneUtilBytesRefBuilder:target];
}

- (id)objectValWithInt:(jint)doc {
  return JreRetainedLocalValue([((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$ifVals_)) boolValWithInt:doc] ? [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$trueVals_)) objectValWithInt:doc] : [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$falseVals_)) objectValWithInt:doc]);
}

- (jboolean)existsWithInt:(jint)doc {
  return [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$ifVals_)) boolValWithInt:doc] ? [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$trueVals_)) existsWithInt:doc] : [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$falseVals_)) existsWithInt:doc];
}

- (OrgApacheLuceneQueriesFunctionFunctionValues_ValueFiller *)getValueFiller {
  return JreRetainedLocalValue([super getValueFiller]);
}

- (NSString *)toStringWithInt:(jint)doc {
  return JreStrcat("$$C$C$C", @"if(", [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$ifVals_)) toStringWithInt:doc], ',', [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$trueVals_)) toStringWithInt:doc], ',', [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(val$falseVals_)) toStringWithInt:doc], ')');
}

- (void)dealloc {
  RELEASE_(val$ifVals_);
  RELEASE_(val$trueVals_);
  RELEASE_(val$falseVals_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "B", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "S", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "F", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 5, 2, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 6, 2, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 7, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 8, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 9, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 12, 2, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 13, 2, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueriesFunctionFunctionValues_ValueFiller;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 14, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneQueriesFunctionFunctionValues:withOrgApacheLuceneQueriesFunctionFunctionValues:withOrgApacheLuceneQueriesFunctionFunctionValues:);
  methods[1].selector = @selector(byteValWithInt:);
  methods[2].selector = @selector(shortValWithInt:);
  methods[3].selector = @selector(floatValWithInt:);
  methods[4].selector = @selector(intValWithInt:);
  methods[5].selector = @selector(longValWithInt:);
  methods[6].selector = @selector(doubleValWithInt:);
  methods[7].selector = @selector(strValWithInt:);
  methods[8].selector = @selector(boolValWithInt:);
  methods[9].selector = @selector(bytesValWithInt:withOrgApacheLuceneUtilBytesRefBuilder:);
  methods[10].selector = @selector(objectValWithInt:);
  methods[11].selector = @selector(existsWithInt:);
  methods[12].selector = @selector(getValueFiller);
  methods[13].selector = @selector(toStringWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$ifVals_", "LOrgApacheLuceneQueriesFunctionFunctionValues;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$trueVals_", "LOrgApacheLuceneQueriesFunctionFunctionValues;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "val$falseVals_", "LOrgApacheLuceneQueriesFunctionFunctionValues;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheLuceneQueriesFunctionFunctionValues;LOrgApacheLuceneQueriesFunctionFunctionValues;LOrgApacheLuceneQueriesFunctionFunctionValues;", "byteVal", "I", "shortVal", "floatVal", "intVal", "longVal", "doubleVal", "strVal", "boolVal", "bytesVal", "ILOrgApacheLuceneUtilBytesRefBuilder;", "objectVal", "exists", "toString", "LOrgApacheLuceneQueriesFunctionValuesourceIfFunction;", "getValuesWithJavaUtilMap:withOrgApacheLuceneIndexLeafReaderContext:" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueriesFunctionValuesourceIfFunction_1 = { "", "org.apache.lucene.queries.function.valuesource", ptrTable, methods, fields, 7, 0x8010, 14, 3, 15, -1, 16, -1, -1 };
  return &_OrgApacheLuceneQueriesFunctionValuesourceIfFunction_1;
}

@end

void OrgApacheLuceneQueriesFunctionValuesourceIfFunction_1_initWithOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionFunctionValues_(OrgApacheLuceneQueriesFunctionValuesourceIfFunction_1 *self, OrgApacheLuceneQueriesFunctionFunctionValues *capture$0, OrgApacheLuceneQueriesFunctionFunctionValues *capture$1, OrgApacheLuceneQueriesFunctionFunctionValues *capture$2) {
  JreStrongAssign(&self->val$ifVals_, capture$0);
  JreStrongAssign(&self->val$trueVals_, capture$1);
  JreStrongAssign(&self->val$falseVals_, capture$2);
  OrgApacheLuceneQueriesFunctionFunctionValues_init(self);
}

OrgApacheLuceneQueriesFunctionValuesourceIfFunction_1 *new_OrgApacheLuceneQueriesFunctionValuesourceIfFunction_1_initWithOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionFunctionValues_(OrgApacheLuceneQueriesFunctionFunctionValues *capture$0, OrgApacheLuceneQueriesFunctionFunctionValues *capture$1, OrgApacheLuceneQueriesFunctionFunctionValues *capture$2) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueriesFunctionValuesourceIfFunction_1, initWithOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionFunctionValues_, capture$0, capture$1, capture$2)
}

OrgApacheLuceneQueriesFunctionValuesourceIfFunction_1 *create_OrgApacheLuceneQueriesFunctionValuesourceIfFunction_1_initWithOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionFunctionValues_(OrgApacheLuceneQueriesFunctionFunctionValues *capture$0, OrgApacheLuceneQueriesFunctionFunctionValues *capture$1, OrgApacheLuceneQueriesFunctionFunctionValues *capture$2) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueriesFunctionValuesourceIfFunction_1, initWithOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionFunctionValues_withOrgApacheLuceneQueriesFunctionFunctionValues_, capture$0, capture$1, capture$2)
}
