//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queries/src/java/org/apache/lucene/queries/function/valuesource/DocFreqValueSource.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Double.h"
#include "java/lang/Integer.h"
#include "java/util/Map.h"
#include "org/apache/lucene/index/IndexReader.h"
#include "org/apache/lucene/index/LeafReaderContext.h"
#include "org/apache/lucene/index/Term.h"
#include "org/apache/lucene/queries/function/FunctionValues.h"
#include "org/apache/lucene/queries/function/ValueSource.h"
#include "org/apache/lucene/queries/function/docvalues/DoubleDocValues.h"
#include "org/apache/lucene/queries/function/docvalues/IntDocValues.h"
#include "org/apache/lucene/queries/function/valuesource/DocFreqValueSource.h"
#include "org/apache/lucene/search/IndexSearcher.h"
#include "org/apache/lucene/util/BytesRef.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queries/function/valuesource/DocFreqValueSource must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneQueriesFunctionValuesourceConstIntDocValues

- (instancetype)initPackagePrivateWithInt:(jint)val
withOrgApacheLuceneQueriesFunctionValueSource:(OrgApacheLuceneQueriesFunctionValueSource *)parent {
  OrgApacheLuceneQueriesFunctionValuesourceConstIntDocValues_initPackagePrivateWithInt_withOrgApacheLuceneQueriesFunctionValueSource_(self, val, parent);
  return self;
}

- (jfloat)floatValWithInt:(jint)doc {
  return fval_;
}

- (jint)intValWithInt:(jint)doc {
  return ival_;
}

- (jlong)longValWithInt:(jint)doc {
  return lval_;
}

- (jdouble)doubleValWithInt:(jint)doc {
  return dval_;
}

- (NSString *)strValWithInt:(jint)doc {
  return sval_;
}

- (NSString *)toStringWithInt:(jint)doc {
  return JreStrcat("$C$", [((OrgApacheLuceneQueriesFunctionValueSource *) nil_chk(parent_)) description__], '=', sval_);
}

- (void)dealloc {
  RELEASE_(sval_);
  RELEASE_(parent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "F", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 5, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 6, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithInt:withOrgApacheLuceneQueriesFunctionValueSource:);
  methods[1].selector = @selector(floatValWithInt:);
  methods[2].selector = @selector(intValWithInt:);
  methods[3].selector = @selector(longValWithInt:);
  methods[4].selector = @selector(doubleValWithInt:);
  methods[5].selector = @selector(strValWithInt:);
  methods[6].selector = @selector(toStringWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ival_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "fval_", "F", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "dval_", "D", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "lval_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "sval_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "parent_", "LOrgApacheLuceneQueriesFunctionValueSource;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ILOrgApacheLuceneQueriesFunctionValueSource;", "floatVal", "I", "intVal", "longVal", "doubleVal", "strVal", "toString" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueriesFunctionValuesourceConstIntDocValues = { "ConstIntDocValues", "org.apache.lucene.queries.function.valuesource", ptrTable, methods, fields, 7, 0x0, 7, 6, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueriesFunctionValuesourceConstIntDocValues;
}

@end

void OrgApacheLuceneQueriesFunctionValuesourceConstIntDocValues_initPackagePrivateWithInt_withOrgApacheLuceneQueriesFunctionValueSource_(OrgApacheLuceneQueriesFunctionValuesourceConstIntDocValues *self, jint val, OrgApacheLuceneQueriesFunctionValueSource *parent) {
  OrgApacheLuceneQueriesFunctionDocvaluesIntDocValues_initWithOrgApacheLuceneQueriesFunctionValueSource_(self, parent);
  self->ival_ = val;
  self->fval_ = val;
  self->dval_ = val;
  self->lval_ = val;
  JreStrongAssign(&self->sval_, JavaLangInteger_toStringWithInt_(val));
  JreStrongAssign(&self->parent_, parent);
}

OrgApacheLuceneQueriesFunctionValuesourceConstIntDocValues *new_OrgApacheLuceneQueriesFunctionValuesourceConstIntDocValues_initPackagePrivateWithInt_withOrgApacheLuceneQueriesFunctionValueSource_(jint val, OrgApacheLuceneQueriesFunctionValueSource *parent) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueriesFunctionValuesourceConstIntDocValues, initPackagePrivateWithInt_withOrgApacheLuceneQueriesFunctionValueSource_, val, parent)
}

OrgApacheLuceneQueriesFunctionValuesourceConstIntDocValues *create_OrgApacheLuceneQueriesFunctionValuesourceConstIntDocValues_initPackagePrivateWithInt_withOrgApacheLuceneQueriesFunctionValueSource_(jint val, OrgApacheLuceneQueriesFunctionValueSource *parent) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueriesFunctionValuesourceConstIntDocValues, initPackagePrivateWithInt_withOrgApacheLuceneQueriesFunctionValueSource_, val, parent)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueriesFunctionValuesourceConstIntDocValues)

@implementation OrgApacheLuceneQueriesFunctionValuesourceConstDoubleDocValues

- (instancetype)initPackagePrivateWithDouble:(jdouble)val
withOrgApacheLuceneQueriesFunctionValueSource:(OrgApacheLuceneQueriesFunctionValueSource *)parent {
  OrgApacheLuceneQueriesFunctionValuesourceConstDoubleDocValues_initPackagePrivateWithDouble_withOrgApacheLuceneQueriesFunctionValueSource_(self, val, parent);
  return self;
}

- (jfloat)floatValWithInt:(jint)doc {
  return fval_;
}

- (jint)intValWithInt:(jint)doc {
  return ival_;
}

- (jlong)longValWithInt:(jint)doc {
  return lval_;
}

- (jdouble)doubleValWithInt:(jint)doc {
  return dval_;
}

- (NSString *)strValWithInt:(jint)doc {
  return sval_;
}

- (NSString *)toStringWithInt:(jint)doc {
  return JreStrcat("$C$", [((OrgApacheLuceneQueriesFunctionValueSource *) nil_chk(parent_)) description__], '=', sval_);
}

- (void)dealloc {
  RELEASE_(sval_);
  RELEASE_(parent_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, -1, -1, -1 },
    { NULL, "F", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, 2, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 4, 2, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 5, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 6, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initPackagePrivateWithDouble:withOrgApacheLuceneQueriesFunctionValueSource:);
  methods[1].selector = @selector(floatValWithInt:);
  methods[2].selector = @selector(intValWithInt:);
  methods[3].selector = @selector(longValWithInt:);
  methods[4].selector = @selector(doubleValWithInt:);
  methods[5].selector = @selector(strValWithInt:);
  methods[6].selector = @selector(toStringWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ival_", "I", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "fval_", "F", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "dval_", "D", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "lval_", "J", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "sval_", "LNSString;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "parent_", "LOrgApacheLuceneQueriesFunctionValueSource;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "DLOrgApacheLuceneQueriesFunctionValueSource;", "floatVal", "I", "intVal", "longVal", "doubleVal", "strVal", "toString" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueriesFunctionValuesourceConstDoubleDocValues = { "ConstDoubleDocValues", "org.apache.lucene.queries.function.valuesource", ptrTable, methods, fields, 7, 0x0, 7, 6, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueriesFunctionValuesourceConstDoubleDocValues;
}

@end

void OrgApacheLuceneQueriesFunctionValuesourceConstDoubleDocValues_initPackagePrivateWithDouble_withOrgApacheLuceneQueriesFunctionValueSource_(OrgApacheLuceneQueriesFunctionValuesourceConstDoubleDocValues *self, jdouble val, OrgApacheLuceneQueriesFunctionValueSource *parent) {
  OrgApacheLuceneQueriesFunctionDocvaluesDoubleDocValues_initWithOrgApacheLuceneQueriesFunctionValueSource_(self, parent);
  self->ival_ = JreFpToInt(val);
  self->fval_ = (jfloat) val;
  self->dval_ = val;
  self->lval_ = JreFpToLong(val);
  JreStrongAssign(&self->sval_, JavaLangDouble_toStringWithDouble_(val));
  JreStrongAssign(&self->parent_, parent);
}

OrgApacheLuceneQueriesFunctionValuesourceConstDoubleDocValues *new_OrgApacheLuceneQueriesFunctionValuesourceConstDoubleDocValues_initPackagePrivateWithDouble_withOrgApacheLuceneQueriesFunctionValueSource_(jdouble val, OrgApacheLuceneQueriesFunctionValueSource *parent) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueriesFunctionValuesourceConstDoubleDocValues, initPackagePrivateWithDouble_withOrgApacheLuceneQueriesFunctionValueSource_, val, parent)
}

OrgApacheLuceneQueriesFunctionValuesourceConstDoubleDocValues *create_OrgApacheLuceneQueriesFunctionValuesourceConstDoubleDocValues_initPackagePrivateWithDouble_withOrgApacheLuceneQueriesFunctionValueSource_(jdouble val, OrgApacheLuceneQueriesFunctionValueSource *parent) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueriesFunctionValuesourceConstDoubleDocValues, initPackagePrivateWithDouble_withOrgApacheLuceneQueriesFunctionValueSource_, val, parent)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueriesFunctionValuesourceConstDoubleDocValues)

@implementation OrgApacheLuceneQueriesFunctionValuesourceDocFreqValueSource

- (instancetype)initWithNSString:(NSString *)field
                    withNSString:(NSString *)val
                    withNSString:(NSString *)indexedField
 withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)indexedBytes {
  OrgApacheLuceneQueriesFunctionValuesourceDocFreqValueSource_initWithNSString_withNSString_withNSString_withOrgApacheLuceneUtilBytesRef_(self, field, val, indexedField, indexedBytes);
  return self;
}

- (NSString *)name {
  return @"docfreq";
}

- (NSString *)description__ {
  return JreStrcat("$C$C$C", [self name], '(', field_, ',', val_, ')');
}

- (OrgApacheLuceneQueriesFunctionFunctionValues *)getValuesWithJavaUtilMap:(id<JavaUtilMap>)context
                                 withOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)readerContext {
  OrgApacheLuceneSearchIndexSearcher *searcher = (OrgApacheLuceneSearchIndexSearcher *) cast_chk([((id<JavaUtilMap>) nil_chk(context)) getWithId:@"searcher"], [OrgApacheLuceneSearchIndexSearcher class]);
  jint docfreq = [((OrgApacheLuceneIndexIndexReader *) nil_chk([((OrgApacheLuceneSearchIndexSearcher *) nil_chk(searcher)) getIndexReader])) docFreqWithOrgApacheLuceneIndexTerm:create_OrgApacheLuceneIndexTerm_initWithNSString_withOrgApacheLuceneUtilBytesRef_(indexedField_, indexedBytes_)];
  return create_OrgApacheLuceneQueriesFunctionValuesourceConstIntDocValues_initPackagePrivateWithInt_withOrgApacheLuceneQueriesFunctionValueSource_(docfreq, self);
}

- (void)createWeightWithJavaUtilMap:(id<JavaUtilMap>)context
withOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher {
  [((id<JavaUtilMap>) nil_chk(context)) putWithId:@"searcher" withId:searcher];
}

- (NSUInteger)hash {
  return ((jint) [[self java_getClass] hash]) + ((jint) [((NSString *) nil_chk(indexedField_)) hash]) * 29 + ((jint) [((OrgApacheLuceneUtilBytesRef *) nil_chk(indexedBytes_)) hash]);
}

- (jboolean)isEqual:(id)o {
  if (!JreObjectEqualsEquals([self java_getClass], [nil_chk(o) java_getClass])) return false;
  OrgApacheLuceneQueriesFunctionValuesourceDocFreqValueSource *other = (OrgApacheLuceneQueriesFunctionValuesourceDocFreqValueSource *) cast_chk(o, [OrgApacheLuceneQueriesFunctionValuesourceDocFreqValueSource class]);
  return [((NSString *) nil_chk(self->indexedField_)) isEqual:other->indexedField_] && [((OrgApacheLuceneUtilBytesRef *) nil_chk(self->indexedBytes_)) isEqual:other->indexedBytes_];
}

- (void)dealloc {
  RELEASE_(field_);
  RELEASE_(indexedField_);
  RELEASE_(val_);
  RELEASE_(indexedBytes_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheLuceneQueriesFunctionFunctionValues;", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, 4, -1, -1, -1 },
    { NULL, "I", 0x1, 7, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 8, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withNSString:withNSString:withOrgApacheLuceneUtilBytesRef:);
  methods[1].selector = @selector(name);
  methods[2].selector = @selector(description__);
  methods[3].selector = @selector(getValuesWithJavaUtilMap:withOrgApacheLuceneIndexLeafReaderContext:);
  methods[4].selector = @selector(createWeightWithJavaUtilMap:withOrgApacheLuceneSearchIndexSearcher:);
  methods[5].selector = @selector(hash);
  methods[6].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "field_", "LNSString;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "indexedField_", "LNSString;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "val_", "LNSString;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "indexedBytes_", "LOrgApacheLuceneUtilBytesRef;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSString;LNSString;LOrgApacheLuceneUtilBytesRef;", "description", "getValues", "LJavaUtilMap;LOrgApacheLuceneIndexLeafReaderContext;", "LJavaIoIOException;", "createWeight", "LJavaUtilMap;LOrgApacheLuceneSearchIndexSearcher;", "hashCode", "equals", "LNSObject;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueriesFunctionValuesourceDocFreqValueSource = { "DocFreqValueSource", "org.apache.lucene.queries.function.valuesource", ptrTable, methods, fields, 7, 0x1, 7, 4, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueriesFunctionValuesourceDocFreqValueSource;
}

@end

void OrgApacheLuceneQueriesFunctionValuesourceDocFreqValueSource_initWithNSString_withNSString_withNSString_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneQueriesFunctionValuesourceDocFreqValueSource *self, NSString *field, NSString *val, NSString *indexedField, OrgApacheLuceneUtilBytesRef *indexedBytes) {
  OrgApacheLuceneQueriesFunctionValueSource_init(self);
  JreStrongAssign(&self->field_, field);
  JreStrongAssign(&self->val_, val);
  JreStrongAssign(&self->indexedField_, indexedField);
  JreStrongAssign(&self->indexedBytes_, indexedBytes);
}

OrgApacheLuceneQueriesFunctionValuesourceDocFreqValueSource *new_OrgApacheLuceneQueriesFunctionValuesourceDocFreqValueSource_initWithNSString_withNSString_withNSString_withOrgApacheLuceneUtilBytesRef_(NSString *field, NSString *val, NSString *indexedField, OrgApacheLuceneUtilBytesRef *indexedBytes) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueriesFunctionValuesourceDocFreqValueSource, initWithNSString_withNSString_withNSString_withOrgApacheLuceneUtilBytesRef_, field, val, indexedField, indexedBytes)
}

OrgApacheLuceneQueriesFunctionValuesourceDocFreqValueSource *create_OrgApacheLuceneQueriesFunctionValuesourceDocFreqValueSource_initWithNSString_withNSString_withNSString_withOrgApacheLuceneUtilBytesRef_(NSString *field, NSString *val, NSString *indexedField, OrgApacheLuceneUtilBytesRef *indexedBytes) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueriesFunctionValuesourceDocFreqValueSource, initWithNSString_withNSString_withNSString_withOrgApacheLuceneUtilBytesRef_, field, val, indexedField, indexedBytes)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueriesFunctionValuesourceDocFreqValueSource)
