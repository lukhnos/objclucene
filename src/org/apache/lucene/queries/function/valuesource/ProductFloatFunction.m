//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queries/src/java/org/apache/lucene/queries/function/valuesource/ProductFloatFunction.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "org/apache/lucene/queries/function/FunctionValues.h"
#include "org/apache/lucene/queries/function/valuesource/MultiFloatFunction.h"
#include "org/apache/lucene/queries/function/valuesource/ProductFloatFunction.h"

#if __has_feature(objc_arc)
#error "org/apache/lucene/queries/function/valuesource/ProductFloatFunction must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgApacheLuceneQueriesFunctionValuesourceProductFloatFunction

- (instancetype)initWithOrgApacheLuceneQueriesFunctionValueSourceArray:(IOSObjectArray *)sources {
  OrgApacheLuceneQueriesFunctionValuesourceProductFloatFunction_initWithOrgApacheLuceneQueriesFunctionValueSourceArray_(self, sources);
  return self;
}

- (NSString *)name {
  return @"product";
}

- (jfloat)funcWithInt:(jint)doc
withOrgApacheLuceneQueriesFunctionFunctionValuesArray:(IOSObjectArray *)valsArr {
  jfloat val = 1.0f;
  {
    IOSObjectArray *a__ = valsArr;
    OrgApacheLuceneQueriesFunctionFunctionValues * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    OrgApacheLuceneQueriesFunctionFunctionValues * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      OrgApacheLuceneQueriesFunctionFunctionValues *vals = *b__++;
      JreTimesAssignFloatF(&val, [((OrgApacheLuceneQueriesFunctionFunctionValues *) nil_chk(vals)) floatValWithInt:doc]);
    }
  }
  return val;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0x4, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithOrgApacheLuceneQueriesFunctionValueSourceArray:);
  methods[1].selector = @selector(name);
  methods[2].selector = @selector(funcWithInt:withOrgApacheLuceneQueriesFunctionFunctionValuesArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "[LOrgApacheLuceneQueriesFunctionValueSource;", "func", "I[LOrgApacheLuceneQueriesFunctionFunctionValues;" };
  static const J2ObjcClassInfo _OrgApacheLuceneQueriesFunctionValuesourceProductFloatFunction = { "ProductFloatFunction", "org.apache.lucene.queries.function.valuesource", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheLuceneQueriesFunctionValuesourceProductFloatFunction;
}

@end

void OrgApacheLuceneQueriesFunctionValuesourceProductFloatFunction_initWithOrgApacheLuceneQueriesFunctionValueSourceArray_(OrgApacheLuceneQueriesFunctionValuesourceProductFloatFunction *self, IOSObjectArray *sources) {
  OrgApacheLuceneQueriesFunctionValuesourceMultiFloatFunction_initWithOrgApacheLuceneQueriesFunctionValueSourceArray_(self, sources);
}

OrgApacheLuceneQueriesFunctionValuesourceProductFloatFunction *new_OrgApacheLuceneQueriesFunctionValuesourceProductFloatFunction_initWithOrgApacheLuceneQueriesFunctionValueSourceArray_(IOSObjectArray *sources) {
  J2OBJC_NEW_IMPL(OrgApacheLuceneQueriesFunctionValuesourceProductFloatFunction, initWithOrgApacheLuceneQueriesFunctionValueSourceArray_, sources)
}

OrgApacheLuceneQueriesFunctionValuesourceProductFloatFunction *create_OrgApacheLuceneQueriesFunctionValuesourceProductFloatFunction_initWithOrgApacheLuceneQueriesFunctionValueSourceArray_(IOSObjectArray *sources) {
  J2OBJC_CREATE_IMPL(OrgApacheLuceneQueriesFunctionValuesourceProductFloatFunction, initWithOrgApacheLuceneQueriesFunctionValueSourceArray_, sources)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheLuceneQueriesFunctionValuesourceProductFloatFunction)
