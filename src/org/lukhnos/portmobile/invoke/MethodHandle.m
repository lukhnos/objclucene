//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/lukhnos/portmobile/invoke/MethodHandle.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/InstantiationException.h"
#include "java/lang/ReflectiveOperationException.h"
#include "org/lukhnos/portmobile/invoke/MethodHandle.h"
#include "org/lukhnos/portmobile/invoke/MethodType.h"

#if __has_feature(objc_arc)
#error "org/lukhnos/portmobile/invoke/MethodHandle must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgLukhnosPortmobileInvokeMethodHandle

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgLukhnosPortmobileInvokeMethodHandle_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)invokeExact {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (OrgLukhnosPortmobileInvokeMethodHandle *)asTypeWithOrgLukhnosPortmobileInvokeMethodType:(OrgLukhnosPortmobileInvokeMethodType *)newType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgLukhnosPortmobileInvokeMethodHandle;", 0x401, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(invokeExact);
  methods[2].selector = @selector(asTypeWithOrgLukhnosPortmobileInvokeMethodType:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "asType", "LOrgLukhnosPortmobileInvokeMethodType;", "LOrgLukhnosPortmobileInvokeMethodHandle_NoArgsConstructor;" };
  static const J2ObjcClassInfo _OrgLukhnosPortmobileInvokeMethodHandle = { "MethodHandle", "org.lukhnos.portmobile.invoke", ptrTable, methods, NULL, 7, 0x401, 3, 0, -1, 2, -1, -1, -1 };
  return &_OrgLukhnosPortmobileInvokeMethodHandle;
}

@end

void OrgLukhnosPortmobileInvokeMethodHandle_init(OrgLukhnosPortmobileInvokeMethodHandle *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgLukhnosPortmobileInvokeMethodHandle)

@implementation OrgLukhnosPortmobileInvokeMethodHandle_NoArgsConstructor

- (instancetype)initWithIOSClass:(IOSClass *)clazz {
  OrgLukhnosPortmobileInvokeMethodHandle_NoArgsConstructor_initWithIOSClass_(self, clazz);
  return self;
}

- (id)invokeExact {
  @try {
    return [((IOSClass *) nil_chk(clazz_)) newInstance];
  }
  @catch (JavaLangInstantiationException *e) {
    return nil;
  }
  @catch (JavaLangIllegalAccessException *e) {
    return nil;
  }
}

- (OrgLukhnosPortmobileInvokeMethodHandle *)asTypeWithOrgLukhnosPortmobileInvokeMethodType:(OrgLukhnosPortmobileInvokeMethodType *)newType {
  return self;
}

- (void)dealloc {
  RELEASE_(clazz_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgLukhnosPortmobileInvokeMethodHandle;", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:);
  methods[1].selector = @selector(invokeExact);
  methods[2].selector = @selector(asTypeWithOrgLukhnosPortmobileInvokeMethodType:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "clazz_", "LIOSClass;", .constantValue.asLong = 0, 0x0, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;", "(Ljava/lang/Class<*>;)V", "asType", "LOrgLukhnosPortmobileInvokeMethodType;", "Ljava/lang/Class<*>;", "LOrgLukhnosPortmobileInvokeMethodHandle;" };
  static const J2ObjcClassInfo _OrgLukhnosPortmobileInvokeMethodHandle_NoArgsConstructor = { "NoArgsConstructor", "org.lukhnos.portmobile.invoke", ptrTable, methods, fields, 7, 0x9, 3, 1, 5, -1, -1, -1, -1 };
  return &_OrgLukhnosPortmobileInvokeMethodHandle_NoArgsConstructor;
}

@end

void OrgLukhnosPortmobileInvokeMethodHandle_NoArgsConstructor_initWithIOSClass_(OrgLukhnosPortmobileInvokeMethodHandle_NoArgsConstructor *self, IOSClass *clazz) {
  OrgLukhnosPortmobileInvokeMethodHandle_init(self);
  JreStrongAssign(&self->clazz_, clazz);
}

OrgLukhnosPortmobileInvokeMethodHandle_NoArgsConstructor *new_OrgLukhnosPortmobileInvokeMethodHandle_NoArgsConstructor_initWithIOSClass_(IOSClass *clazz) {
  J2OBJC_NEW_IMPL(OrgLukhnosPortmobileInvokeMethodHandle_NoArgsConstructor, initWithIOSClass_, clazz)
}

OrgLukhnosPortmobileInvokeMethodHandle_NoArgsConstructor *create_OrgLukhnosPortmobileInvokeMethodHandle_NoArgsConstructor_initWithIOSClass_(IOSClass *clazz) {
  J2OBJC_CREATE_IMPL(OrgLukhnosPortmobileInvokeMethodHandle_NoArgsConstructor, initWithIOSClass_, clazz)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgLukhnosPortmobileInvokeMethodHandle_NoArgsConstructor)
