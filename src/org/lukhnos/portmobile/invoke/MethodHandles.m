//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/lukhnos/portmobile/invoke/MethodHandles.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "org/lukhnos/portmobile/invoke/MethodHandle.h"
#include "org/lukhnos/portmobile/invoke/MethodHandles.h"
#include "org/lukhnos/portmobile/invoke/MethodType.h"

#if __has_feature(objc_arc)
#error "org/lukhnos/portmobile/invoke/MethodHandles must not be compiled with ARC (-fobjc-arc)"
#endif

J2OBJC_INITIALIZED_DEFN(OrgLukhnosPortmobileInvokeMethodHandles)

OrgLukhnosPortmobileInvokeMethodHandles_Lookup *OrgLukhnosPortmobileInvokeMethodHandles_publicLookupInstance;

@implementation OrgLukhnosPortmobileInvokeMethodHandles

+ (OrgLukhnosPortmobileInvokeMethodHandles_Lookup *)publicLookupInstance {
  return OrgLukhnosPortmobileInvokeMethodHandles_publicLookupInstance;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgLukhnosPortmobileInvokeMethodHandles_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (OrgLukhnosPortmobileInvokeMethodHandles_Lookup *)publicLookup {
  return OrgLukhnosPortmobileInvokeMethodHandles_publicLookup();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgLukhnosPortmobileInvokeMethodHandles_Lookup;", 0x9, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(publicLookup);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "publicLookupInstance", "LOrgLukhnosPortmobileInvokeMethodHandles_Lookup;", .constantValue.asLong = 0, 0x19, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &OrgLukhnosPortmobileInvokeMethodHandles_publicLookupInstance, "LOrgLukhnosPortmobileInvokeMethodHandles_Lookup;" };
  static const J2ObjcClassInfo _OrgLukhnosPortmobileInvokeMethodHandles = { "MethodHandles", "org.lukhnos.portmobile.invoke", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, 1, -1, -1, -1 };
  return &_OrgLukhnosPortmobileInvokeMethodHandles;
}

+ (void)initialize {
  if (self == [OrgLukhnosPortmobileInvokeMethodHandles class]) {
    JreStrongAssignAndConsume(&OrgLukhnosPortmobileInvokeMethodHandles_publicLookupInstance, new_OrgLukhnosPortmobileInvokeMethodHandles_Lookup_init());
    J2OBJC_SET_INITIALIZED(OrgLukhnosPortmobileInvokeMethodHandles)
  }
}

@end

void OrgLukhnosPortmobileInvokeMethodHandles_init(OrgLukhnosPortmobileInvokeMethodHandles *self) {
  NSObject_init(self);
}

OrgLukhnosPortmobileInvokeMethodHandles *new_OrgLukhnosPortmobileInvokeMethodHandles_init() {
  J2OBJC_NEW_IMPL(OrgLukhnosPortmobileInvokeMethodHandles, init)
}

OrgLukhnosPortmobileInvokeMethodHandles *create_OrgLukhnosPortmobileInvokeMethodHandles_init() {
  J2OBJC_CREATE_IMPL(OrgLukhnosPortmobileInvokeMethodHandles, init)
}

OrgLukhnosPortmobileInvokeMethodHandles_Lookup *OrgLukhnosPortmobileInvokeMethodHandles_publicLookup() {
  OrgLukhnosPortmobileInvokeMethodHandles_initialize();
  return OrgLukhnosPortmobileInvokeMethodHandles_publicLookupInstance;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgLukhnosPortmobileInvokeMethodHandles)

@implementation OrgLukhnosPortmobileInvokeMethodHandles_Lookup

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgLukhnosPortmobileInvokeMethodHandles_Lookup_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgLukhnosPortmobileInvokeMethodHandle *)findConstructorWithIOSClass:(IOSClass *)refc
                               withOrgLukhnosPortmobileInvokeMethodType:(OrgLukhnosPortmobileInvokeMethodType *)type {
  return create_OrgLukhnosPortmobileInvokeMethodHandle_NoArgsConstructor_initWithIOSClass_(refc);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgLukhnosPortmobileInvokeMethodHandle;", 0x1, 0, 1, 2, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(findConstructorWithIOSClass:withOrgLukhnosPortmobileInvokeMethodType:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "findConstructor", "LIOSClass;LOrgLukhnosPortmobileInvokeMethodType;", "LJavaLangNoSuchMethodException;LJavaLangIllegalAccessException;", "(Ljava/lang/Class<*>;Lorg/lukhnos/portmobile/invoke/MethodType;)Lorg/lukhnos/portmobile/invoke/MethodHandle;", "LOrgLukhnosPortmobileInvokeMethodHandles;" };
  static const J2ObjcClassInfo _OrgLukhnosPortmobileInvokeMethodHandles_Lookup = { "Lookup", "org.lukhnos.portmobile.invoke", ptrTable, methods, NULL, 7, 0x9, 2, 0, 4, -1, -1, -1, -1 };
  return &_OrgLukhnosPortmobileInvokeMethodHandles_Lookup;
}

@end

void OrgLukhnosPortmobileInvokeMethodHandles_Lookup_init(OrgLukhnosPortmobileInvokeMethodHandles_Lookup *self) {
  NSObject_init(self);
}

OrgLukhnosPortmobileInvokeMethodHandles_Lookup *new_OrgLukhnosPortmobileInvokeMethodHandles_Lookup_init() {
  J2OBJC_NEW_IMPL(OrgLukhnosPortmobileInvokeMethodHandles_Lookup, init)
}

OrgLukhnosPortmobileInvokeMethodHandles_Lookup *create_OrgLukhnosPortmobileInvokeMethodHandles_Lookup_init() {
  J2OBJC_CREATE_IMPL(OrgLukhnosPortmobileInvokeMethodHandles_Lookup, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgLukhnosPortmobileInvokeMethodHandles_Lookup)
