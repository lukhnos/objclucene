//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/lukhnos/portmobile/invoke/MethodType.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "org/lukhnos/portmobile/invoke/MethodType.h"

#if __has_feature(objc_arc)
#error "org/lukhnos/portmobile/invoke/MethodType must not be compiled with ARC (-fobjc-arc)"
#endif

@implementation OrgLukhnosPortmobileInvokeMethodType

- (instancetype)initWithIOSClass:(IOSClass *)clazz {
  OrgLukhnosPortmobileInvokeMethodType_initWithIOSClass_(self, clazz);
  return self;
}

+ (OrgLukhnosPortmobileInvokeMethodType *)methodTypeWithIOSClass:(IOSClass *)clazz {
  return OrgLukhnosPortmobileInvokeMethodType_methodTypeWithIOSClass_(clazz);
}

- (IOSClass *)getType {
  return clazz_;
}

- (void)dealloc {
  RELEASE_(clazz_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, 0, -1, 1, -1, -1 },
    { NULL, "LOrgLukhnosPortmobileInvokeMethodType;", 0x9, 2, 0, -1, 3, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:);
  methods[1].selector = @selector(methodTypeWithIOSClass:);
  methods[2].selector = @selector(getType);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "clazz_", "LIOSClass;", .constantValue.asLong = 0, 0x0, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;", "(Ljava/lang/Class<*>;)V", "methodType", "(Ljava/lang/Class<*>;)Lorg/lukhnos/portmobile/invoke/MethodType;", "()Ljava/lang/Class<*>;", "Ljava/lang/Class<*>;" };
  static const J2ObjcClassInfo _OrgLukhnosPortmobileInvokeMethodType = { "MethodType", "org.lukhnos.portmobile.invoke", ptrTable, methods, fields, 7, 0x1, 3, 1, -1, -1, -1, -1, -1 };
  return &_OrgLukhnosPortmobileInvokeMethodType;
}

@end

void OrgLukhnosPortmobileInvokeMethodType_initWithIOSClass_(OrgLukhnosPortmobileInvokeMethodType *self, IOSClass *clazz) {
  NSObject_init(self);
  JreStrongAssign(&self->clazz_, clazz);
}

OrgLukhnosPortmobileInvokeMethodType *new_OrgLukhnosPortmobileInvokeMethodType_initWithIOSClass_(IOSClass *clazz) {
  J2OBJC_NEW_IMPL(OrgLukhnosPortmobileInvokeMethodType, initWithIOSClass_, clazz)
}

OrgLukhnosPortmobileInvokeMethodType *create_OrgLukhnosPortmobileInvokeMethodType_initWithIOSClass_(IOSClass *clazz) {
  J2OBJC_CREATE_IMPL(OrgLukhnosPortmobileInvokeMethodType, initWithIOSClass_, clazz)
}

OrgLukhnosPortmobileInvokeMethodType *OrgLukhnosPortmobileInvokeMethodType_methodTypeWithIOSClass_(IOSClass *clazz) {
  OrgLukhnosPortmobileInvokeMethodType_initialize();
  return create_OrgLukhnosPortmobileInvokeMethodType_initWithIOSClass_(clazz);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgLukhnosPortmobileInvokeMethodType)
