//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/lukhnos/portmobile/file/StandardCopyOption.java
//

#include "J2ObjC_source.h"
#include "org/lukhnos/portmobile/file/StandardCopyOption.h"

#if __has_feature(objc_arc)
#error "org/lukhnos/portmobile/file/StandardCopyOption must not be compiled with ARC (-fobjc-arc)"
#endif

J2OBJC_INITIALIZED_DEFN(OrgLukhnosPortmobileFileStandardCopyOption)

OrgLukhnosPortmobileFileStandardCopyOption *OrgLukhnosPortmobileFileStandardCopyOption_ATOMIC_MOVE;

@implementation OrgLukhnosPortmobileFileStandardCopyOption

+ (OrgLukhnosPortmobileFileStandardCopyOption *)ATOMIC_MOVE {
  return OrgLukhnosPortmobileFileStandardCopyOption_ATOMIC_MOVE;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgLukhnosPortmobileFileStandardCopyOption_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ATOMIC_MOVE", "LOrgLukhnosPortmobileFileStandardCopyOption;", .constantValue.asLong = 0, 0x19, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &OrgLukhnosPortmobileFileStandardCopyOption_ATOMIC_MOVE };
  static const J2ObjcClassInfo _OrgLukhnosPortmobileFileStandardCopyOption = { "StandardCopyOption", "org.lukhnos.portmobile.file", ptrTable, methods, fields, 7, 0x1, 1, 1, -1, -1, -1, -1, -1 };
  return &_OrgLukhnosPortmobileFileStandardCopyOption;
}

+ (void)initialize {
  if (self == [OrgLukhnosPortmobileFileStandardCopyOption class]) {
    JreStrongAssignAndConsume(&OrgLukhnosPortmobileFileStandardCopyOption_ATOMIC_MOVE, new_OrgLukhnosPortmobileFileStandardCopyOption_init());
    J2OBJC_SET_INITIALIZED(OrgLukhnosPortmobileFileStandardCopyOption)
  }
}

@end

void OrgLukhnosPortmobileFileStandardCopyOption_init(OrgLukhnosPortmobileFileStandardCopyOption *self) {
  NSObject_init(self);
}

OrgLukhnosPortmobileFileStandardCopyOption *new_OrgLukhnosPortmobileFileStandardCopyOption_init() {
  J2OBJC_NEW_IMPL(OrgLukhnosPortmobileFileStandardCopyOption, init)
}

OrgLukhnosPortmobileFileStandardCopyOption *create_OrgLukhnosPortmobileFileStandardCopyOption_init() {
  J2OBJC_CREATE_IMPL(OrgLukhnosPortmobileFileStandardCopyOption, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgLukhnosPortmobileFileStandardCopyOption)
