//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/lukhnos/portmobile/file/StandardOpenOption.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/lukhnos/portmobile/file/StandardOpenOption.h"

#if __has_feature(objc_arc)
#error "org/lukhnos/portmobile/file/StandardOpenOption must not be compiled with ARC (-fobjc-arc)"
#endif

__attribute__((unused)) static void OrgLukhnosPortmobileFileStandardOpenOption_initWithNSString_withInt_(OrgLukhnosPortmobileFileStandardOpenOption *self, NSString *__name, jint __ordinal);

J2OBJC_INITIALIZED_DEFN(OrgLukhnosPortmobileFileStandardOpenOption)

OrgLukhnosPortmobileFileStandardOpenOption *OrgLukhnosPortmobileFileStandardOpenOption_values_[3];

@implementation OrgLukhnosPortmobileFileStandardOpenOption

+ (OrgLukhnosPortmobileFileStandardOpenOption *)READ {
  return JreEnum(OrgLukhnosPortmobileFileStandardOpenOption, READ);
}

+ (OrgLukhnosPortmobileFileStandardOpenOption *)WRITE {
  return JreEnum(OrgLukhnosPortmobileFileStandardOpenOption, WRITE);
}

+ (OrgLukhnosPortmobileFileStandardOpenOption *)CREATE {
  return JreEnum(OrgLukhnosPortmobileFileStandardOpenOption, CREATE);
}

+ (IOSObjectArray *)values {
  return OrgLukhnosPortmobileFileStandardOpenOption_values();
}

+ (OrgLukhnosPortmobileFileStandardOpenOption *)valueOfWithNSString:(NSString *)name {
  return OrgLukhnosPortmobileFileStandardOpenOption_valueOfWithNSString_(name);
}

- (OrgLukhnosPortmobileFileStandardOpenOption_Enum)toNSEnum {
  return (OrgLukhnosPortmobileFileStandardOpenOption_Enum)[self ordinal];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgLukhnosPortmobileFileStandardOpenOption;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgLukhnosPortmobileFileStandardOpenOption;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "READ", "LOrgLukhnosPortmobileFileStandardOpenOption;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "WRITE", "LOrgLukhnosPortmobileFileStandardOpenOption;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "CREATE", "LOrgLukhnosPortmobileFileStandardOpenOption;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgLukhnosPortmobileFileStandardOpenOption, READ), &JreEnum(OrgLukhnosPortmobileFileStandardOpenOption, WRITE), &JreEnum(OrgLukhnosPortmobileFileStandardOpenOption, CREATE), "Ljava/lang/Enum<Lorg/lukhnos/portmobile/file/StandardOpenOption;>;" };
  static const J2ObjcClassInfo _OrgLukhnosPortmobileFileStandardOpenOption = { "StandardOpenOption", "org.lukhnos.portmobile.file", ptrTable, methods, fields, 7, 0x4011, 2, 3, -1, -1, -1, 5, -1 };
  return &_OrgLukhnosPortmobileFileStandardOpenOption;
}

+ (void)initialize {
  if (self == [OrgLukhnosPortmobileFileStandardOpenOption class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 3 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 3; i++) {
      ((void)(OrgLukhnosPortmobileFileStandardOpenOption_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      OrgLukhnosPortmobileFileStandardOpenOption_initWithNSString_withInt_(e, JreEnumConstantName(OrgLukhnosPortmobileFileStandardOpenOption_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(OrgLukhnosPortmobileFileStandardOpenOption)
  }
}

@end

void OrgLukhnosPortmobileFileStandardOpenOption_initWithNSString_withInt_(OrgLukhnosPortmobileFileStandardOpenOption *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *OrgLukhnosPortmobileFileStandardOpenOption_values() {
  OrgLukhnosPortmobileFileStandardOpenOption_initialize();
  return [IOSObjectArray arrayWithObjects:OrgLukhnosPortmobileFileStandardOpenOption_values_ count:3 type:OrgLukhnosPortmobileFileStandardOpenOption_class_()];
}

OrgLukhnosPortmobileFileStandardOpenOption *OrgLukhnosPortmobileFileStandardOpenOption_valueOfWithNSString_(NSString *name) {
  OrgLukhnosPortmobileFileStandardOpenOption_initialize();
  for (int i = 0; i < 3; i++) {
    OrgLukhnosPortmobileFileStandardOpenOption *e = OrgLukhnosPortmobileFileStandardOpenOption_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgLukhnosPortmobileFileStandardOpenOption *OrgLukhnosPortmobileFileStandardOpenOption_fromOrdinal(NSUInteger ordinal) {
  OrgLukhnosPortmobileFileStandardOpenOption_initialize();
  if (ordinal >= 3) {
    return nil;
  }
  return OrgLukhnosPortmobileFileStandardOpenOption_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgLukhnosPortmobileFileStandardOpenOption)
