//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchSpansSpanPositionCheckQuery")
#ifdef RESTRICT_OrgApacheLuceneSearchSpansSpanPositionCheckQuery
#define INCLUDE_ALL_OrgApacheLuceneSearchSpansSpanPositionCheckQuery 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchSpansSpanPositionCheckQuery 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchSpansSpanPositionCheckQuery

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchSpansSpanPositionCheckQuery_) && (INCLUDE_ALL_OrgApacheLuceneSearchSpansSpanPositionCheckQuery || defined(INCLUDE_OrgApacheLuceneSearchSpansSpanPositionCheckQuery))
#define OrgApacheLuceneSearchSpansSpanPositionCheckQuery_

#define RESTRICT_OrgApacheLuceneSearchSpansSpanQuery 1
#define INCLUDE_OrgApacheLuceneSearchSpansSpanQuery 1
#include "org/apache/lucene/search/spans/SpanQuery.h"

@class OrgApacheLuceneIndexIndexReader;
@class OrgApacheLuceneSearchIndexSearcher;
@class OrgApacheLuceneSearchQuery;
@class OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus;
@class OrgApacheLuceneSearchSpansSpanWeight;
@class OrgApacheLuceneSearchSpansSpans;

/*!
 @brief Base class for filtering a SpanQuery based on the position of a match.
 */
@interface OrgApacheLuceneSearchSpansSpanPositionCheckQuery : OrgApacheLuceneSearchSpansSpanQuery < NSCopying > {
 @public
  OrgApacheLuceneSearchSpansSpanQuery *match_;
}

#pragma mark Public

- (instancetype __nonnull)initWithOrgApacheLuceneSearchSpansSpanQuery:(OrgApacheLuceneSearchSpansSpanQuery *)match;

- (OrgApacheLuceneSearchSpansSpanWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                                 withBoolean:(jboolean)needsScores;

/*!
 @brief Returns true iff <code>o</code> is equal to this.
 */
- (jboolean)isEqual:(id)o;

- (NSString *)getField;

/*!
 @return the SpanQuery whose matches are filtered.
 */
- (OrgApacheLuceneSearchSpansSpanQuery *)getMatch;

- (NSUInteger)hash;

- (OrgApacheLuceneSearchQuery *)java_clone;

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader;

#pragma mark Protected

/*!
 @brief Implementing classes are required to return whether the current position is a match for the passed in
  "match" <code>SpanQuery</code>.
 This is only called if the underlying last <code>Spans.nextStartPosition()</code> for the
  match indicated a valid start position.
 @param spans The <code>Spans</code>  instance, positioned at the spot to check
 @return whether the match is accepted, rejected, or rejected and should move to the next doc.
 - seealso: Spans#nextDoc()
 */
- (OrgApacheLuceneSearchSpansFilterSpans_AcceptStatus *)acceptPositionWithOrgApacheLuceneSearchSpansSpans:(OrgApacheLuceneSearchSpansSpans *)spans;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSpansSpanPositionCheckQuery)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSpansSpanPositionCheckQuery, match_, OrgApacheLuceneSearchSpansSpanQuery *)

FOUNDATION_EXPORT void OrgApacheLuceneSearchSpansSpanPositionCheckQuery_initWithOrgApacheLuceneSearchSpansSpanQuery_(OrgApacheLuceneSearchSpansSpanPositionCheckQuery *self, OrgApacheLuceneSearchSpansSpanQuery *match);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSpansSpanPositionCheckQuery)

#endif

#if !defined (OrgApacheLuceneSearchSpansSpanPositionCheckQuery_SpanPositionCheckWeight_) && (INCLUDE_ALL_OrgApacheLuceneSearchSpansSpanPositionCheckQuery || defined(INCLUDE_OrgApacheLuceneSearchSpansSpanPositionCheckQuery_SpanPositionCheckWeight))
#define OrgApacheLuceneSearchSpansSpanPositionCheckQuery_SpanPositionCheckWeight_

#define RESTRICT_OrgApacheLuceneSearchSpansSpanWeight 1
#define INCLUDE_OrgApacheLuceneSearchSpansSpanWeight 1
#include "org/apache/lucene/search/spans/SpanWeight.h"

@class OrgApacheLuceneIndexLeafReaderContext;
@class OrgApacheLuceneSearchIndexSearcher;
@class OrgApacheLuceneSearchSpansSpanPositionCheckQuery;
@class OrgApacheLuceneSearchSpansSpanQuery;
@class OrgApacheLuceneSearchSpansSpanWeight_Postings;
@class OrgApacheLuceneSearchSpansSpans;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface OrgApacheLuceneSearchSpansSpanPositionCheckQuery_SpanPositionCheckWeight : OrgApacheLuceneSearchSpansSpanWeight {
 @public
  OrgApacheLuceneSearchSpansSpanWeight *matchWeight_;
}

#pragma mark Public

- (instancetype __nonnull)initWithOrgApacheLuceneSearchSpansSpanPositionCheckQuery:(OrgApacheLuceneSearchSpansSpanPositionCheckQuery *)outer$
                                          withOrgApacheLuceneSearchSpansSpanWeight:(OrgApacheLuceneSearchSpansSpanWeight *)matchWeight
                                            withOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                   withJavaUtilMap:(id<JavaUtilMap>)terms;

- (void)extractTermContextsWithJavaUtilMap:(id<JavaUtilMap>)contexts;

- (void)extractTermsWithJavaUtilSet:(id<JavaUtilSet>)terms;

- (OrgApacheLuceneSearchSpansSpans *)getSpansWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                     withOrgApacheLuceneSearchSpansSpanWeight_Postings:(OrgApacheLuceneSearchSpansSpanWeight_Postings *)requiredPostings;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithOrgApacheLuceneSearchSpansSpanQuery:(OrgApacheLuceneSearchSpansSpanQuery *)arg0
                               withOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)arg1
                                                      withJavaUtilMap:(id<JavaUtilMap>)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSpansSpanPositionCheckQuery_SpanPositionCheckWeight)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSpansSpanPositionCheckQuery_SpanPositionCheckWeight, matchWeight_, OrgApacheLuceneSearchSpansSpanWeight *)

FOUNDATION_EXPORT void OrgApacheLuceneSearchSpansSpanPositionCheckQuery_SpanPositionCheckWeight_initWithOrgApacheLuceneSearchSpansSpanPositionCheckQuery_withOrgApacheLuceneSearchSpansSpanWeight_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_(OrgApacheLuceneSearchSpansSpanPositionCheckQuery_SpanPositionCheckWeight *self, OrgApacheLuceneSearchSpansSpanPositionCheckQuery *outer$, OrgApacheLuceneSearchSpansSpanWeight *matchWeight, OrgApacheLuceneSearchIndexSearcher *searcher, id<JavaUtilMap> terms);

FOUNDATION_EXPORT OrgApacheLuceneSearchSpansSpanPositionCheckQuery_SpanPositionCheckWeight *new_OrgApacheLuceneSearchSpansSpanPositionCheckQuery_SpanPositionCheckWeight_initWithOrgApacheLuceneSearchSpansSpanPositionCheckQuery_withOrgApacheLuceneSearchSpansSpanWeight_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_(OrgApacheLuceneSearchSpansSpanPositionCheckQuery *outer$, OrgApacheLuceneSearchSpansSpanWeight *matchWeight, OrgApacheLuceneSearchIndexSearcher *searcher, id<JavaUtilMap> terms) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchSpansSpanPositionCheckQuery_SpanPositionCheckWeight *create_OrgApacheLuceneSearchSpansSpanPositionCheckQuery_SpanPositionCheckWeight_initWithOrgApacheLuceneSearchSpansSpanPositionCheckQuery_withOrgApacheLuceneSearchSpansSpanWeight_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_(OrgApacheLuceneSearchSpansSpanPositionCheckQuery *outer$, OrgApacheLuceneSearchSpansSpanWeight *matchWeight, OrgApacheLuceneSearchIndexSearcher *searcher, id<JavaUtilMap> terms);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSpansSpanPositionCheckQuery_SpanPositionCheckWeight)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchSpansSpanPositionCheckQuery")
