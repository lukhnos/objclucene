//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/spans/TermSpans.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchSpansTermSpans")
#ifdef RESTRICT_OrgApacheLuceneSearchSpansTermSpans
#define INCLUDE_ALL_OrgApacheLuceneSearchSpansTermSpans 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchSpansTermSpans 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchSpansTermSpans

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchSpansTermSpans_) && (INCLUDE_ALL_OrgApacheLuceneSearchSpansTermSpans || defined(INCLUDE_OrgApacheLuceneSearchSpansTermSpans))
#define OrgApacheLuceneSearchSpansTermSpans_

#define RESTRICT_OrgApacheLuceneSearchSpansSpans 1
#define INCLUDE_OrgApacheLuceneSearchSpansSpans 1
#include "org/apache/lucene/search/spans/Spans.h"

@class OrgApacheLuceneIndexPostingsEnum;
@class OrgApacheLuceneIndexTerm;
@protocol OrgApacheLuceneSearchSpansSpanCollector;

/*!
 @brief Expert:
  Public for extension only.
 This does not work correctly for terms that indexed at position Integer.MAX_VALUE.
 */
@interface OrgApacheLuceneSearchSpansTermSpans : OrgApacheLuceneSearchSpansSpans {
 @public
  OrgApacheLuceneIndexPostingsEnum *postings_;
  OrgApacheLuceneIndexTerm *term_;
  jint doc_;
  jint freq_;
  jint count_;
  jint position_;
  jboolean readPayload_;
}

#pragma mark Public

- (instancetype __nonnull)initWithOrgApacheLuceneIndexPostingsEnum:(OrgApacheLuceneIndexPostingsEnum *)postings
                                      withOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term;

- (jint)advanceWithInt:(jint)target;

- (void)collectWithOrgApacheLuceneSearchSpansSpanCollector:(id<OrgApacheLuceneSearchSpansSpanCollector>)collector;

- (jlong)cost;

- (jint)docID;

- (jint)endPosition;

- (OrgApacheLuceneIndexPostingsEnum *)getPostings;

- (jint)nextDoc;

- (jint)nextStartPosition;

- (jint)startPosition;

- (NSString *)description;

- (jint)width;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSpansTermSpans)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSpansTermSpans, postings_, OrgApacheLuceneIndexPostingsEnum *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSpansTermSpans, term_, OrgApacheLuceneIndexTerm *)

FOUNDATION_EXPORT void OrgApacheLuceneSearchSpansTermSpans_initWithOrgApacheLuceneIndexPostingsEnum_withOrgApacheLuceneIndexTerm_(OrgApacheLuceneSearchSpansTermSpans *self, OrgApacheLuceneIndexPostingsEnum *postings, OrgApacheLuceneIndexTerm *term);

FOUNDATION_EXPORT OrgApacheLuceneSearchSpansTermSpans *new_OrgApacheLuceneSearchSpansTermSpans_initWithOrgApacheLuceneIndexPostingsEnum_withOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexPostingsEnum *postings, OrgApacheLuceneIndexTerm *term) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchSpansTermSpans *create_OrgApacheLuceneSearchSpansTermSpans_initWithOrgApacheLuceneIndexPostingsEnum_withOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexPostingsEnum *postings, OrgApacheLuceneIndexTerm *term);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSpansTermSpans)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchSpansTermSpans")
