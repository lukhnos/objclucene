//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/spans/SpanWeight.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchSpansSpanWeight")
#ifdef RESTRICT_OrgApacheLuceneSearchSpansSpanWeight
#define INCLUDE_ALL_OrgApacheLuceneSearchSpansSpanWeight 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchSpansSpanWeight 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchSpansSpanWeight

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchSpansSpanWeight_) && (INCLUDE_ALL_OrgApacheLuceneSearchSpansSpanWeight || defined(INCLUDE_OrgApacheLuceneSearchSpansSpanWeight))
#define OrgApacheLuceneSearchSpansSpanWeight_

#define RESTRICT_OrgApacheLuceneSearchWeight 1
#define INCLUDE_OrgApacheLuceneSearchWeight 1
#include "org/apache/lucene/search/Weight.h"

@class OrgApacheLuceneIndexLeafReaderContext;
@class OrgApacheLuceneSearchExplanation;
@class OrgApacheLuceneSearchIndexSearcher;
@class OrgApacheLuceneSearchQuery;
@class OrgApacheLuceneSearchScorer;
@class OrgApacheLuceneSearchSimilaritiesSimilarity;
@class OrgApacheLuceneSearchSimilaritiesSimilarity_SimScorer;
@class OrgApacheLuceneSearchSimilaritiesSimilarity_SimWeight;
@class OrgApacheLuceneSearchSpansSpanQuery;
@class OrgApacheLuceneSearchSpansSpanWeight_Postings;
@class OrgApacheLuceneSearchSpansSpans;
@protocol JavaUtilMap;

/*!
 @brief Expert-only.Public for use by other weight implementations
 */
@interface OrgApacheLuceneSearchSpansSpanWeight : OrgApacheLuceneSearchWeight {
 @public
  OrgApacheLuceneSearchSimilaritiesSimilarity *similarity_;
  OrgApacheLuceneSearchSimilaritiesSimilarity_SimWeight *simWeight_;
  NSString *field_;
}

#pragma mark Public

/*!
 @brief Create a new SpanWeight
 @param query the parent query
 @param searcher the IndexSearcher to query against
 @param termContexts a map of terms to termcontexts for use in building the similarity.  May                      be null if scores are not required
 @throw IOExceptionon error
 */
- (instancetype __nonnull)initWithOrgApacheLuceneSearchSpansSpanQuery:(OrgApacheLuceneSearchSpansSpanQuery *)query
                               withOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                      withJavaUtilMap:(id<JavaUtilMap>)termContexts;

- (OrgApacheLuceneSearchExplanation *)explainWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                                                               withInt:(jint)doc;

/*!
 @brief Collect all TermContexts used by this Weight
 @param contexts a map to add the TermContexts to
 */
- (void)extractTermContextsWithJavaUtilMap:(id<JavaUtilMap>)contexts;

- (OrgApacheLuceneSearchSimilaritiesSimilarity_SimScorer *)getSimScorerWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context;

/*!
 @brief Expert: Return a Spans object iterating over matches from this Weight
 @param ctx a LeafReaderContext for this Spans
 @param requiredPostings the postings information required
 @return a Spans
 @throw IOExceptionon error
 */
- (OrgApacheLuceneSearchSpansSpans *)getSpansWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)ctx
                                     withOrgApacheLuceneSearchSpansSpanWeight_Postings:(OrgApacheLuceneSearchSpansSpanWeight_Postings *)requiredPostings;

- (jfloat)getValueForNormalization;

- (void)normalizeWithFloat:(jfloat)queryNorm
                 withFloat:(jfloat)topLevelBoost;

- (OrgApacheLuceneSearchScorer *)scorerWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSpansSpanWeight)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSpansSpanWeight, similarity_, OrgApacheLuceneSearchSimilaritiesSimilarity *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSpansSpanWeight, simWeight_, OrgApacheLuceneSearchSimilaritiesSimilarity_SimWeight *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSpansSpanWeight, field_, NSString *)

FOUNDATION_EXPORT void OrgApacheLuceneSearchSpansSpanWeight_initWithOrgApacheLuceneSearchSpansSpanQuery_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_(OrgApacheLuceneSearchSpansSpanWeight *self, OrgApacheLuceneSearchSpansSpanQuery *query, OrgApacheLuceneSearchIndexSearcher *searcher, id<JavaUtilMap> termContexts);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSpansSpanWeight)

#endif

#if !defined (OrgApacheLuceneSearchSpansSpanWeight_Postings_) && (INCLUDE_ALL_OrgApacheLuceneSearchSpansSpanWeight || defined(INCLUDE_OrgApacheLuceneSearchSpansSpanWeight_Postings))
#define OrgApacheLuceneSearchSpansSpanWeight_Postings_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, OrgApacheLuceneSearchSpansSpanWeight_Postings_Enum) {
  OrgApacheLuceneSearchSpansSpanWeight_Postings_Enum_POSITIONS = 0,
  OrgApacheLuceneSearchSpansSpanWeight_Postings_Enum_PAYLOADS = 1,
  OrgApacheLuceneSearchSpansSpanWeight_Postings_Enum_OFFSETS = 2,
};

/*!
 @brief Enumeration defining what postings information should be retrieved from the
  index for a given Spans
 */
@interface OrgApacheLuceneSearchSpansSpanWeight_Postings : JavaLangEnum

@property (readonly, class, nonnull) OrgApacheLuceneSearchSpansSpanWeight_Postings *POSITIONS NS_SWIFT_NAME(POSITIONS);
@property (readonly, class, nonnull) OrgApacheLuceneSearchSpansSpanWeight_Postings *PAYLOADS NS_SWIFT_NAME(PAYLOADS);
@property (readonly, class, nonnull) OrgApacheLuceneSearchSpansSpanWeight_Postings *OFFSETS NS_SWIFT_NAME(OFFSETS);
#pragma mark Public

- (OrgApacheLuceneSearchSpansSpanWeight_Postings *)atLeastWithOrgApacheLuceneSearchSpansSpanWeight_Postings:(OrgApacheLuceneSearchSpansSpanWeight_Postings *)postings;

- (jint)getRequiredPostings;

+ (OrgApacheLuceneSearchSpansSpanWeight_Postings *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (OrgApacheLuceneSearchSpansSpanWeight_Postings_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneSearchSpansSpanWeight_Postings)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgApacheLuceneSearchSpansSpanWeight_Postings *OrgApacheLuceneSearchSpansSpanWeight_Postings_values_[];

inline OrgApacheLuceneSearchSpansSpanWeight_Postings *OrgApacheLuceneSearchSpansSpanWeight_Postings_get_POSITIONS(void);
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneSearchSpansSpanWeight_Postings, POSITIONS)

inline OrgApacheLuceneSearchSpansSpanWeight_Postings *OrgApacheLuceneSearchSpansSpanWeight_Postings_get_PAYLOADS(void);
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneSearchSpansSpanWeight_Postings, PAYLOADS)

inline OrgApacheLuceneSearchSpansSpanWeight_Postings *OrgApacheLuceneSearchSpansSpanWeight_Postings_get_OFFSETS(void);
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneSearchSpansSpanWeight_Postings, OFFSETS)

FOUNDATION_EXPORT IOSObjectArray *OrgApacheLuceneSearchSpansSpanWeight_Postings_values(void);

FOUNDATION_EXPORT OrgApacheLuceneSearchSpansSpanWeight_Postings *OrgApacheLuceneSearchSpansSpanWeight_Postings_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgApacheLuceneSearchSpansSpanWeight_Postings *OrgApacheLuceneSearchSpansSpanWeight_Postings_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSpansSpanWeight_Postings)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchSpansSpanWeight")
