//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/spans/SpanTermQuery.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchSpansSpanTermQuery")
#ifdef RESTRICT_OrgApacheLuceneSearchSpansSpanTermQuery
#define INCLUDE_ALL_OrgApacheLuceneSearchSpansSpanTermQuery 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchSpansSpanTermQuery 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchSpansSpanTermQuery

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchSpansSpanTermQuery_) && (INCLUDE_ALL_OrgApacheLuceneSearchSpansSpanTermQuery || defined(INCLUDE_OrgApacheLuceneSearchSpansSpanTermQuery))
#define OrgApacheLuceneSearchSpansSpanTermQuery_

#define RESTRICT_OrgApacheLuceneSearchSpansSpanQuery 1
#define INCLUDE_OrgApacheLuceneSearchSpansSpanQuery 1
#include "org/apache/lucene/search/spans/SpanQuery.h"

@class OrgApacheLuceneIndexTerm;
@class OrgApacheLuceneIndexTermContext;
@class OrgApacheLuceneSearchIndexSearcher;
@class OrgApacheLuceneSearchSpansSpanWeight;

/*!
 @brief Matches spans containing a term.
 This should not be used for terms that are indexed at position Integer.MAX_VALUE.
 */
@interface OrgApacheLuceneSearchSpansSpanTermQuery : OrgApacheLuceneSearchSpansSpanQuery {
 @public
  OrgApacheLuceneIndexTerm *term_;
  OrgApacheLuceneIndexTermContext *termContext_;
}

#pragma mark Public

/*!
 @brief Construct a SpanTermQuery matching the named term's spans.
 */
- (instancetype __nonnull)initWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term;

/*!
 @brief Expert: Construct a SpanTermQuery matching the named term's spans, using
  the provided TermContext
 */
- (instancetype __nonnull)initWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
                       withOrgApacheLuceneIndexTermContext:(OrgApacheLuceneIndexTermContext *)context;

- (OrgApacheLuceneSearchSpansSpanWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                                 withBoolean:(jboolean)needsScores;

- (jboolean)isEqual:(id)obj;

- (NSString *)getField;

/*!
 @brief Return the term whose spans are matched.
 */
- (OrgApacheLuceneIndexTerm *)getTerm;

- (NSUInteger)hash;

- (NSString *)toStringWithNSString:(NSString *)field;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSpansSpanTermQuery)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSpansSpanTermQuery, term_, OrgApacheLuceneIndexTerm *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSpansSpanTermQuery, termContext_, OrgApacheLuceneIndexTermContext *)

FOUNDATION_EXPORT void OrgApacheLuceneSearchSpansSpanTermQuery_initWithOrgApacheLuceneIndexTerm_(OrgApacheLuceneSearchSpansSpanTermQuery *self, OrgApacheLuceneIndexTerm *term);

FOUNDATION_EXPORT OrgApacheLuceneSearchSpansSpanTermQuery *new_OrgApacheLuceneSearchSpansSpanTermQuery_initWithOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexTerm *term) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchSpansSpanTermQuery *create_OrgApacheLuceneSearchSpansSpanTermQuery_initWithOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexTerm *term);

FOUNDATION_EXPORT void OrgApacheLuceneSearchSpansSpanTermQuery_initWithOrgApacheLuceneIndexTerm_withOrgApacheLuceneIndexTermContext_(OrgApacheLuceneSearchSpansSpanTermQuery *self, OrgApacheLuceneIndexTerm *term, OrgApacheLuceneIndexTermContext *context);

FOUNDATION_EXPORT OrgApacheLuceneSearchSpansSpanTermQuery *new_OrgApacheLuceneSearchSpansSpanTermQuery_initWithOrgApacheLuceneIndexTerm_withOrgApacheLuceneIndexTermContext_(OrgApacheLuceneIndexTerm *term, OrgApacheLuceneIndexTermContext *context) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchSpansSpanTermQuery *create_OrgApacheLuceneSearchSpansSpanTermQuery_initWithOrgApacheLuceneIndexTerm_withOrgApacheLuceneIndexTermContext_(OrgApacheLuceneIndexTerm *term, OrgApacheLuceneIndexTermContext *context);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSpansSpanTermQuery)

#endif

#if !defined (OrgApacheLuceneSearchSpansSpanTermQuery_SpanTermWeight_) && (INCLUDE_ALL_OrgApacheLuceneSearchSpansSpanTermQuery || defined(INCLUDE_OrgApacheLuceneSearchSpansSpanTermQuery_SpanTermWeight))
#define OrgApacheLuceneSearchSpansSpanTermQuery_SpanTermWeight_

#define RESTRICT_OrgApacheLuceneSearchSpansSpanWeight 1
#define INCLUDE_OrgApacheLuceneSearchSpansSpanWeight 1
#include "org/apache/lucene/search/spans/SpanWeight.h"

@class OrgApacheLuceneIndexLeafReaderContext;
@class OrgApacheLuceneIndexTermContext;
@class OrgApacheLuceneSearchIndexSearcher;
@class OrgApacheLuceneSearchSpansSpanQuery;
@class OrgApacheLuceneSearchSpansSpanTermQuery;
@class OrgApacheLuceneSearchSpansSpanWeight_Postings;
@class OrgApacheLuceneSearchSpansSpans;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface OrgApacheLuceneSearchSpansSpanTermQuery_SpanTermWeight : OrgApacheLuceneSearchSpansSpanWeight {
 @public
  OrgApacheLuceneIndexTermContext *termContext_;
}

#pragma mark Public

- (instancetype __nonnull)initWithOrgApacheLuceneSearchSpansSpanTermQuery:(OrgApacheLuceneSearchSpansSpanTermQuery *)outer$
                                      withOrgApacheLuceneIndexTermContext:(OrgApacheLuceneIndexTermContext *)termContext
                                   withOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                          withJavaUtilMap:(id<JavaUtilMap>)terms;

- (void)extractTermContextsWithJavaUtilMap:(id<JavaUtilMap>)contexts;

- (void)extractTermsWithJavaUtilSet:(id<JavaUtilSet>)terms;

- (OrgApacheLuceneSearchSpansSpans *)getSpansWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                     withOrgApacheLuceneSearchSpansSpanWeight_Postings:(OrgApacheLuceneSearchSpansSpanWeight_Postings *)requiredPostings;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithOrgApacheLuceneSearchSpansSpanQuery:(OrgApacheLuceneSearchSpansSpanQuery *)arg0
                               withOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)arg1
                                                      withJavaUtilMap:(id<JavaUtilMap>)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSpansSpanTermQuery_SpanTermWeight)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSpansSpanTermQuery_SpanTermWeight, termContext_, OrgApacheLuceneIndexTermContext *)

FOUNDATION_EXPORT void OrgApacheLuceneSearchSpansSpanTermQuery_SpanTermWeight_initWithOrgApacheLuceneSearchSpansSpanTermQuery_withOrgApacheLuceneIndexTermContext_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_(OrgApacheLuceneSearchSpansSpanTermQuery_SpanTermWeight *self, OrgApacheLuceneSearchSpansSpanTermQuery *outer$, OrgApacheLuceneIndexTermContext *termContext, OrgApacheLuceneSearchIndexSearcher *searcher, id<JavaUtilMap> terms);

FOUNDATION_EXPORT OrgApacheLuceneSearchSpansSpanTermQuery_SpanTermWeight *new_OrgApacheLuceneSearchSpansSpanTermQuery_SpanTermWeight_initWithOrgApacheLuceneSearchSpansSpanTermQuery_withOrgApacheLuceneIndexTermContext_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_(OrgApacheLuceneSearchSpansSpanTermQuery *outer$, OrgApacheLuceneIndexTermContext *termContext, OrgApacheLuceneSearchIndexSearcher *searcher, id<JavaUtilMap> terms) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchSpansSpanTermQuery_SpanTermWeight *create_OrgApacheLuceneSearchSpansSpanTermQuery_SpanTermWeight_initWithOrgApacheLuceneSearchSpansSpanTermQuery_withOrgApacheLuceneIndexTermContext_withOrgApacheLuceneSearchIndexSearcher_withJavaUtilMap_(OrgApacheLuceneSearchSpansSpanTermQuery *outer$, OrgApacheLuceneIndexTermContext *termContext, OrgApacheLuceneSearchIndexSearcher *searcher, id<JavaUtilMap> terms);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSpansSpanTermQuery_SpanTermWeight)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchSpansSpanTermQuery")
