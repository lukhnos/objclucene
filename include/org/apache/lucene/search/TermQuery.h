//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/TermQuery.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchTermQuery")
#ifdef RESTRICT_OrgApacheLuceneSearchTermQuery
#define INCLUDE_ALL_OrgApacheLuceneSearchTermQuery 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchTermQuery 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchTermQuery

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchTermQuery_) && (INCLUDE_ALL_OrgApacheLuceneSearchTermQuery || defined(INCLUDE_OrgApacheLuceneSearchTermQuery))
#define OrgApacheLuceneSearchTermQuery_

#define RESTRICT_OrgApacheLuceneSearchQuery 1
#define INCLUDE_OrgApacheLuceneSearchQuery 1
#include "org/apache/lucene/search/Query.h"

@class OrgApacheLuceneIndexTerm;
@class OrgApacheLuceneIndexTermContext;
@class OrgApacheLuceneSearchIndexSearcher;
@class OrgApacheLuceneSearchWeight;

/*!
 @brief A Query that matches documents containing a term.This may be combined with
  other terms with a <code>BooleanQuery</code>.
 */
@interface OrgApacheLuceneSearchTermQuery : OrgApacheLuceneSearchQuery

#pragma mark Public

/*!
 @brief Constructs a query for the term <code>t</code>.
 */
- (instancetype __nonnull)initWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)t;

/*!
 @brief Expert: constructs a TermQuery that will use the provided docFreq instead
  of looking up the docFreq against the searcher.
 */
- (instancetype __nonnull)initWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)t
                       withOrgApacheLuceneIndexTermContext:(OrgApacheLuceneIndexTermContext *)states;

- (OrgApacheLuceneSearchWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                        withBoolean:(jboolean)needsScores;

/*!
 @brief Returns true iff <code>o</code> is equal to this.
 */
- (jboolean)isEqual:(id)o;

/*!
 @brief Returns the term of this query.
 */
- (OrgApacheLuceneIndexTerm *)getTerm;

- (NSUInteger)hash;

/*!
 @brief Prints a user-readable version of this query.
 */
- (NSString *)toStringWithNSString:(NSString *)field;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchTermQuery)

FOUNDATION_EXPORT void OrgApacheLuceneSearchTermQuery_initWithOrgApacheLuceneIndexTerm_(OrgApacheLuceneSearchTermQuery *self, OrgApacheLuceneIndexTerm *t);

FOUNDATION_EXPORT OrgApacheLuceneSearchTermQuery *new_OrgApacheLuceneSearchTermQuery_initWithOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexTerm *t) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchTermQuery *create_OrgApacheLuceneSearchTermQuery_initWithOrgApacheLuceneIndexTerm_(OrgApacheLuceneIndexTerm *t);

FOUNDATION_EXPORT void OrgApacheLuceneSearchTermQuery_initWithOrgApacheLuceneIndexTerm_withOrgApacheLuceneIndexTermContext_(OrgApacheLuceneSearchTermQuery *self, OrgApacheLuceneIndexTerm *t, OrgApacheLuceneIndexTermContext *states);

FOUNDATION_EXPORT OrgApacheLuceneSearchTermQuery *new_OrgApacheLuceneSearchTermQuery_initWithOrgApacheLuceneIndexTerm_withOrgApacheLuceneIndexTermContext_(OrgApacheLuceneIndexTerm *t, OrgApacheLuceneIndexTermContext *states) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchTermQuery *create_OrgApacheLuceneSearchTermQuery_initWithOrgApacheLuceneIndexTerm_withOrgApacheLuceneIndexTermContext_(OrgApacheLuceneIndexTerm *t, OrgApacheLuceneIndexTermContext *states);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchTermQuery)

#endif

#if !defined (OrgApacheLuceneSearchTermQuery_TermWeight_) && (INCLUDE_ALL_OrgApacheLuceneSearchTermQuery || defined(INCLUDE_OrgApacheLuceneSearchTermQuery_TermWeight))
#define OrgApacheLuceneSearchTermQuery_TermWeight_

#define RESTRICT_OrgApacheLuceneSearchWeight 1
#define INCLUDE_OrgApacheLuceneSearchWeight 1
#include "org/apache/lucene/search/Weight.h"

@class OrgApacheLuceneIndexLeafReaderContext;
@class OrgApacheLuceneIndexTermContext;
@class OrgApacheLuceneSearchExplanation;
@class OrgApacheLuceneSearchIndexSearcher;
@class OrgApacheLuceneSearchQuery;
@class OrgApacheLuceneSearchScorer;
@class OrgApacheLuceneSearchTermQuery;
@protocol JavaUtilSet;

@interface OrgApacheLuceneSearchTermQuery_TermWeight : OrgApacheLuceneSearchWeight

#pragma mark Public

- (instancetype __nonnull)initWithOrgApacheLuceneSearchTermQuery:(OrgApacheLuceneSearchTermQuery *)outer$
                          withOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                     withBoolean:(jboolean)needsScores
                             withOrgApacheLuceneIndexTermContext:(OrgApacheLuceneIndexTermContext *)termStates;

- (OrgApacheLuceneSearchExplanation *)explainWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                                                               withInt:(jint)doc;

- (void)extractTermsWithJavaUtilSet:(id<JavaUtilSet>)terms;

- (jfloat)getValueForNormalization;

- (void)normalizeWithFloat:(jfloat)queryNorm
                 withFloat:(jfloat)topLevelBoost;

- (OrgApacheLuceneSearchScorer *)scorerWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchTermQuery_TermWeight)

FOUNDATION_EXPORT void OrgApacheLuceneSearchTermQuery_TermWeight_initWithOrgApacheLuceneSearchTermQuery_withOrgApacheLuceneSearchIndexSearcher_withBoolean_withOrgApacheLuceneIndexTermContext_(OrgApacheLuceneSearchTermQuery_TermWeight *self, OrgApacheLuceneSearchTermQuery *outer$, OrgApacheLuceneSearchIndexSearcher *searcher, jboolean needsScores, OrgApacheLuceneIndexTermContext *termStates);

FOUNDATION_EXPORT OrgApacheLuceneSearchTermQuery_TermWeight *new_OrgApacheLuceneSearchTermQuery_TermWeight_initWithOrgApacheLuceneSearchTermQuery_withOrgApacheLuceneSearchIndexSearcher_withBoolean_withOrgApacheLuceneIndexTermContext_(OrgApacheLuceneSearchTermQuery *outer$, OrgApacheLuceneSearchIndexSearcher *searcher, jboolean needsScores, OrgApacheLuceneIndexTermContext *termStates) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchTermQuery_TermWeight *create_OrgApacheLuceneSearchTermQuery_TermWeight_initWithOrgApacheLuceneSearchTermQuery_withOrgApacheLuceneSearchIndexSearcher_withBoolean_withOrgApacheLuceneIndexTermContext_(OrgApacheLuceneSearchTermQuery *outer$, OrgApacheLuceneSearchIndexSearcher *searcher, jboolean needsScores, OrgApacheLuceneIndexTermContext *termStates);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchTermQuery_TermWeight)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchTermQuery")
