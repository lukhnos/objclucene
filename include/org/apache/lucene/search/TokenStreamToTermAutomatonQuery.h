//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./sandbox/src/java/org/apache/lucene/search/TokenStreamToTermAutomatonQuery.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchTokenStreamToTermAutomatonQuery")
#ifdef RESTRICT_OrgApacheLuceneSearchTokenStreamToTermAutomatonQuery
#define INCLUDE_ALL_OrgApacheLuceneSearchTokenStreamToTermAutomatonQuery 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchTokenStreamToTermAutomatonQuery 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchTokenStreamToTermAutomatonQuery

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchTokenStreamToTermAutomatonQuery_) && (INCLUDE_ALL_OrgApacheLuceneSearchTokenStreamToTermAutomatonQuery || defined(INCLUDE_OrgApacheLuceneSearchTokenStreamToTermAutomatonQuery))
#define OrgApacheLuceneSearchTokenStreamToTermAutomatonQuery_

@class OrgApacheLuceneAnalysisTokenStream;
@class OrgApacheLuceneSearchTermAutomatonQuery;

/*!
 @brief Consumes a TokenStream and creates an <code>TermAutomatonQuery</code>
   where the transition labels are tokens from the <code>TermToBytesRefAttribute</code>
 .
 <p>This code is very new and likely has exciting bugs!
 */
@interface OrgApacheLuceneSearchTokenStreamToTermAutomatonQuery : NSObject

#pragma mark Public

/*!
 @brief Sole constructor.
 */
- (instancetype __nonnull)init;

/*!
 @brief Whether to generate holes in the automaton for missing positions, <code>true</code> by default.
 */
- (void)setPreservePositionIncrementsWithBoolean:(jboolean)enablePositionIncrements;

/*!
 @brief Pulls the graph (including <code>PositionLengthAttribute</code>
 ) from the provided <code>TokenStream</code>
 , and creates the corresponding
   automaton where arcs are bytes (or Unicode code points 
   if unicodeArcs = true) from each term.
 */
- (OrgApacheLuceneSearchTermAutomatonQuery *)toQueryWithNSString:(NSString *)field
                          withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)inArg;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchTokenStreamToTermAutomatonQuery)

FOUNDATION_EXPORT void OrgApacheLuceneSearchTokenStreamToTermAutomatonQuery_init(OrgApacheLuceneSearchTokenStreamToTermAutomatonQuery *self);

FOUNDATION_EXPORT OrgApacheLuceneSearchTokenStreamToTermAutomatonQuery *new_OrgApacheLuceneSearchTokenStreamToTermAutomatonQuery_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchTokenStreamToTermAutomatonQuery *create_OrgApacheLuceneSearchTokenStreamToTermAutomatonQuery_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchTokenStreamToTermAutomatonQuery)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchTokenStreamToTermAutomatonQuery")
