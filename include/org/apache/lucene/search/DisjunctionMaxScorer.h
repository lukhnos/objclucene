//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/DisjunctionMaxScorer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchDisjunctionMaxScorer")
#ifdef RESTRICT_OrgApacheLuceneSearchDisjunctionMaxScorer
#define INCLUDE_ALL_OrgApacheLuceneSearchDisjunctionMaxScorer 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchDisjunctionMaxScorer 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchDisjunctionMaxScorer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchDisjunctionMaxScorer_) && (INCLUDE_ALL_OrgApacheLuceneSearchDisjunctionMaxScorer || defined(INCLUDE_OrgApacheLuceneSearchDisjunctionMaxScorer))
#define OrgApacheLuceneSearchDisjunctionMaxScorer_

#define RESTRICT_OrgApacheLuceneSearchDisjunctionScorer 1
#define INCLUDE_OrgApacheLuceneSearchDisjunctionScorer 1
#include "org/apache/lucene/search/DisjunctionScorer.h"

@class OrgApacheLuceneSearchDisiWrapper;
@class OrgApacheLuceneSearchWeight;
@protocol JavaUtilList;

/*!
 @brief The Scorer for DisjunctionMaxQuery.The union of all documents generated by the the subquery scorers
  is generated in document number order.
 The score for each document is the maximum of the scores computed
  by the subquery scorers that generate that document, plus tieBreakerMultiplier times the sum of the scores
  for the other subqueries that generate the document.
 */
@interface OrgApacheLuceneSearchDisjunctionMaxScorer : OrgApacheLuceneSearchDisjunctionScorer

#pragma mark Protected

- (jfloat)scoreWithOrgApacheLuceneSearchDisiWrapper:(OrgApacheLuceneSearchDisiWrapper *)topList;

#pragma mark Package-Private

/*!
 @brief Creates a new instance of DisjunctionMaxScorer
 @param weight The Weight to be used.
 @param tieBreakerMultiplier Multiplier applied to non-maximum-scoring subqueries for a
            document as they are summed into the result.
 @param subScorers The sub scorers this Scorer should iterate on
 */
- (instancetype __nonnull)initPackagePrivateWithOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight
                                                                  withFloat:(jfloat)tieBreakerMultiplier
                                                           withJavaUtilList:(id<JavaUtilList>)subScorers
                                                                withBoolean:(jboolean)needsScores;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initPackagePrivateWithOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)arg0
                                                           withJavaUtilList:(id<JavaUtilList>)arg1
                                                                withBoolean:(jboolean)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchDisjunctionMaxScorer)

FOUNDATION_EXPORT void OrgApacheLuceneSearchDisjunctionMaxScorer_initPackagePrivateWithOrgApacheLuceneSearchWeight_withFloat_withJavaUtilList_withBoolean_(OrgApacheLuceneSearchDisjunctionMaxScorer *self, OrgApacheLuceneSearchWeight *weight, jfloat tieBreakerMultiplier, id<JavaUtilList> subScorers, jboolean needsScores);

FOUNDATION_EXPORT OrgApacheLuceneSearchDisjunctionMaxScorer *new_OrgApacheLuceneSearchDisjunctionMaxScorer_initPackagePrivateWithOrgApacheLuceneSearchWeight_withFloat_withJavaUtilList_withBoolean_(OrgApacheLuceneSearchWeight *weight, jfloat tieBreakerMultiplier, id<JavaUtilList> subScorers, jboolean needsScores) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchDisjunctionMaxScorer *create_OrgApacheLuceneSearchDisjunctionMaxScorer_initPackagePrivateWithOrgApacheLuceneSearchWeight_withFloat_withJavaUtilList_withBoolean_(OrgApacheLuceneSearchWeight *weight, jfloat tieBreakerMultiplier, id<JavaUtilList> subScorers, jboolean needsScores);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchDisjunctionMaxScorer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchDisjunctionMaxScorer")
