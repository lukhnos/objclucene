//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/BitsFilteredDocIdSet.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchBitsFilteredDocIdSet")
#ifdef RESTRICT_OrgApacheLuceneSearchBitsFilteredDocIdSet
#define INCLUDE_ALL_OrgApacheLuceneSearchBitsFilteredDocIdSet 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchBitsFilteredDocIdSet 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchBitsFilteredDocIdSet

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchBitsFilteredDocIdSet_) && (INCLUDE_ALL_OrgApacheLuceneSearchBitsFilteredDocIdSet || defined(INCLUDE_OrgApacheLuceneSearchBitsFilteredDocIdSet))
#define OrgApacheLuceneSearchBitsFilteredDocIdSet_

#define RESTRICT_OrgApacheLuceneSearchFilteredDocIdSet 1
#define INCLUDE_OrgApacheLuceneSearchFilteredDocIdSet 1
#include "org/apache/lucene/search/FilteredDocIdSet.h"

@class OrgApacheLuceneSearchDocIdSet;
@protocol OrgApacheLuceneUtilBits;

/*!
 @brief This implementation supplies a filtered DocIdSet, that excludes all
  docids which are not in a Bits instance.This is especially useful in 
 <code>org.apache.lucene.search.Filter</code> to apply the <code>acceptDocs</code>
  passed to <code>getDocIdSet()</code> before returning the final DocIdSet.
 - seealso: DocIdSet
 - seealso: org.apache.lucene.search.Filter
 */
@interface OrgApacheLuceneSearchBitsFilteredDocIdSet : OrgApacheLuceneSearchFilteredDocIdSet

#pragma mark Public

/*!
 @brief Constructor.
 @param innerSet Underlying DocIdSet
 @param acceptDocs Allowed docs, all docids not in this set will not be returned by this DocIdSet
 */
- (instancetype __nonnull)initWithOrgApacheLuceneSearchDocIdSet:(OrgApacheLuceneSearchDocIdSet *)innerSet
                                    withOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)acceptDocs;

/*!
 @brief Convenience wrapper method: If <code>acceptDocs == null</code> it returns the original set without wrapping.
 @param set Underlying DocIdSet. If <code>null</code> , this method returns <code>null</code>
 @param acceptDocs Allowed docs, all docids not in this set will not be returned by this DocIdSet.  If 
 <code>null</code> , this method returns the original set without wrapping.
 */
+ (OrgApacheLuceneSearchDocIdSet *)wrapWithOrgApacheLuceneSearchDocIdSet:(OrgApacheLuceneSearchDocIdSet *)set
                                             withOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)acceptDocs;

#pragma mark Protected

- (jboolean)matchWithInt:(jint)docid;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithOrgApacheLuceneSearchDocIdSet:(OrgApacheLuceneSearchDocIdSet *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchBitsFilteredDocIdSet)

FOUNDATION_EXPORT OrgApacheLuceneSearchDocIdSet *OrgApacheLuceneSearchBitsFilteredDocIdSet_wrapWithOrgApacheLuceneSearchDocIdSet_withOrgApacheLuceneUtilBits_(OrgApacheLuceneSearchDocIdSet *set, id<OrgApacheLuceneUtilBits> acceptDocs);

FOUNDATION_EXPORT void OrgApacheLuceneSearchBitsFilteredDocIdSet_initWithOrgApacheLuceneSearchDocIdSet_withOrgApacheLuceneUtilBits_(OrgApacheLuceneSearchBitsFilteredDocIdSet *self, OrgApacheLuceneSearchDocIdSet *innerSet, id<OrgApacheLuceneUtilBits> acceptDocs);

FOUNDATION_EXPORT OrgApacheLuceneSearchBitsFilteredDocIdSet *new_OrgApacheLuceneSearchBitsFilteredDocIdSet_initWithOrgApacheLuceneSearchDocIdSet_withOrgApacheLuceneUtilBits_(OrgApacheLuceneSearchDocIdSet *innerSet, id<OrgApacheLuceneUtilBits> acceptDocs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchBitsFilteredDocIdSet *create_OrgApacheLuceneSearchBitsFilteredDocIdSet_initWithOrgApacheLuceneSearchDocIdSet_withOrgApacheLuceneUtilBits_(OrgApacheLuceneSearchDocIdSet *innerSet, id<OrgApacheLuceneUtilBits> acceptDocs);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchBitsFilteredDocIdSet)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchBitsFilteredDocIdSet")
