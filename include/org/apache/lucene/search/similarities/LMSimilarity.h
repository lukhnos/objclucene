//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/similarities/LMSimilarity.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchSimilaritiesLMSimilarity")
#ifdef RESTRICT_OrgApacheLuceneSearchSimilaritiesLMSimilarity
#define INCLUDE_ALL_OrgApacheLuceneSearchSimilaritiesLMSimilarity 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchSimilaritiesLMSimilarity 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchSimilaritiesLMSimilarity
#ifdef INCLUDE_OrgApacheLuceneSearchSimilaritiesLMSimilarity_DefaultCollectionModel
#define INCLUDE_OrgApacheLuceneSearchSimilaritiesLMSimilarity_CollectionModel 1
#endif

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchSimilaritiesLMSimilarity_) && (INCLUDE_ALL_OrgApacheLuceneSearchSimilaritiesLMSimilarity || defined(INCLUDE_OrgApacheLuceneSearchSimilaritiesLMSimilarity))
#define OrgApacheLuceneSearchSimilaritiesLMSimilarity_

#define RESTRICT_OrgApacheLuceneSearchSimilaritiesSimilarityBase 1
#define INCLUDE_OrgApacheLuceneSearchSimilaritiesSimilarityBase 1
#include "org/apache/lucene/search/similarities/SimilarityBase.h"

@class OrgApacheLuceneSearchCollectionStatistics;
@class OrgApacheLuceneSearchSimilaritiesBasicStats;
@class OrgApacheLuceneSearchTermStatistics;
@protocol JavaUtilList;
@protocol OrgApacheLuceneSearchSimilaritiesLMSimilarity_CollectionModel;

/*!
 @brief Abstract superclass for language modeling Similarities.The following inner
  types are introduced: 
 <ul>
    <li><code>LMStats</code>, which defines a new statistic, the probability that
    the collection language model generates the current term;</li>
    <li><code>CollectionModel</code>, which is a strategy interface for object that
    compute the collection language model <code>p(w|C)</code>;</li>
    <li><code>DefaultCollectionModel</code>, an implementation of the former, that
    computes the term probability as the number of occurrences of the term in the
    collection, divided by the total number of tokens.
 </li>
  </ul>
 */
@interface OrgApacheLuceneSearchSimilaritiesLMSimilarity : OrgApacheLuceneSearchSimilaritiesSimilarityBase {
 @public
  /*!
   @brief The collection model.
   */
  id<OrgApacheLuceneSearchSimilaritiesLMSimilarity_CollectionModel> collectionModel_;
}

#pragma mark Public

/*!
 @brief Creates a new instance with the default collection language model.
 */
- (instancetype __nonnull)init;

/*!
 @brief Creates a new instance with the specified collection language model.
 */
- (instancetype __nonnull)initWithOrgApacheLuceneSearchSimilaritiesLMSimilarity_CollectionModel:(id<OrgApacheLuceneSearchSimilaritiesLMSimilarity_CollectionModel>)collectionModel;

/*!
 @brief Returns the name of the LM method.The values of the parameters should be
  included as well.
 <p>Used in <code>toString()</code></p>.
 */
- (NSString *)getName;

/*!
 @brief Returns the name of the LM method.If a custom collection model strategy is
  used, its name is included as well.
 - seealso: #getName()
 - seealso: CollectionModel#getName()
 - seealso: DefaultCollectionModel
 */
- (NSString *)description;

#pragma mark Protected

- (void)explainWithJavaUtilList:(id<JavaUtilList>)subExpls
withOrgApacheLuceneSearchSimilaritiesBasicStats:(OrgApacheLuceneSearchSimilaritiesBasicStats *)stats
                        withInt:(jint)doc
                      withFloat:(jfloat)freq
                      withFloat:(jfloat)docLen;

/*!
 @brief Computes the collection probability of the current term in addition to the
  usual statistics.
 */
- (void)fillBasicStatsWithOrgApacheLuceneSearchSimilaritiesBasicStats:(OrgApacheLuceneSearchSimilaritiesBasicStats *)stats
                        withOrgApacheLuceneSearchCollectionStatistics:(OrgApacheLuceneSearchCollectionStatistics *)collectionStats
                              withOrgApacheLuceneSearchTermStatistics:(OrgApacheLuceneSearchTermStatistics *)termStats;

- (OrgApacheLuceneSearchSimilaritiesBasicStats *)newStatsWithNSString:(NSString *)field
                                                            withFloat:(jfloat)queryBoost OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSimilaritiesLMSimilarity)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSimilaritiesLMSimilarity, collectionModel_, id<OrgApacheLuceneSearchSimilaritiesLMSimilarity_CollectionModel>)

FOUNDATION_EXPORT void OrgApacheLuceneSearchSimilaritiesLMSimilarity_initWithOrgApacheLuceneSearchSimilaritiesLMSimilarity_CollectionModel_(OrgApacheLuceneSearchSimilaritiesLMSimilarity *self, id<OrgApacheLuceneSearchSimilaritiesLMSimilarity_CollectionModel> collectionModel);

FOUNDATION_EXPORT void OrgApacheLuceneSearchSimilaritiesLMSimilarity_init(OrgApacheLuceneSearchSimilaritiesLMSimilarity *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSimilaritiesLMSimilarity)

#endif

#if !defined (OrgApacheLuceneSearchSimilaritiesLMSimilarity_LMStats_) && (INCLUDE_ALL_OrgApacheLuceneSearchSimilaritiesLMSimilarity || defined(INCLUDE_OrgApacheLuceneSearchSimilaritiesLMSimilarity_LMStats))
#define OrgApacheLuceneSearchSimilaritiesLMSimilarity_LMStats_

#define RESTRICT_OrgApacheLuceneSearchSimilaritiesBasicStats 1
#define INCLUDE_OrgApacheLuceneSearchSimilaritiesBasicStats 1
#include "org/apache/lucene/search/similarities/BasicStats.h"

/*!
 @brief Stores the collection distribution of the current term.
 */
@interface OrgApacheLuceneSearchSimilaritiesLMSimilarity_LMStats : OrgApacheLuceneSearchSimilaritiesBasicStats

#pragma mark Public

/*!
 @brief Creates LMStats for the provided field and query-time boost
 */
- (instancetype __nonnull)initWithNSString:(NSString *)field
                                 withFloat:(jfloat)queryBoost;

/*!
 @brief Returns the probability that the current term is generated by the
  collection.
 */
- (jfloat)getCollectionProbability;

/*!
 @brief Sets the probability that the current term is generated by the
  collection.
 */
- (void)setCollectionProbabilityWithFloat:(jfloat)collectionProbability;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSimilaritiesLMSimilarity_LMStats)

FOUNDATION_EXPORT void OrgApacheLuceneSearchSimilaritiesLMSimilarity_LMStats_initWithNSString_withFloat_(OrgApacheLuceneSearchSimilaritiesLMSimilarity_LMStats *self, NSString *field, jfloat queryBoost);

FOUNDATION_EXPORT OrgApacheLuceneSearchSimilaritiesLMSimilarity_LMStats *new_OrgApacheLuceneSearchSimilaritiesLMSimilarity_LMStats_initWithNSString_withFloat_(NSString *field, jfloat queryBoost) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchSimilaritiesLMSimilarity_LMStats *create_OrgApacheLuceneSearchSimilaritiesLMSimilarity_LMStats_initWithNSString_withFloat_(NSString *field, jfloat queryBoost);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSimilaritiesLMSimilarity_LMStats)

#endif

#if !defined (OrgApacheLuceneSearchSimilaritiesLMSimilarity_CollectionModel_) && (INCLUDE_ALL_OrgApacheLuceneSearchSimilaritiesLMSimilarity || defined(INCLUDE_OrgApacheLuceneSearchSimilaritiesLMSimilarity_CollectionModel))
#define OrgApacheLuceneSearchSimilaritiesLMSimilarity_CollectionModel_

@class OrgApacheLuceneSearchSimilaritiesBasicStats;

/*!
 @brief A strategy for computing the collection language model.
 */
@protocol OrgApacheLuceneSearchSimilaritiesLMSimilarity_CollectionModel < JavaObject >

/*!
 @brief Computes the probability <code>p(w|C)</code> according to the language model
  strategy for the current term.
 */
- (jfloat)computeProbabilityWithOrgApacheLuceneSearchSimilaritiesBasicStats:(OrgApacheLuceneSearchSimilaritiesBasicStats *)stats;

/*!
 @brief The name of the collection model strategy.
 */
- (NSString *)getName;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSimilaritiesLMSimilarity_CollectionModel)

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSimilaritiesLMSimilarity_CollectionModel)

#endif

#if !defined (OrgApacheLuceneSearchSimilaritiesLMSimilarity_DefaultCollectionModel_) && (INCLUDE_ALL_OrgApacheLuceneSearchSimilaritiesLMSimilarity || defined(INCLUDE_OrgApacheLuceneSearchSimilaritiesLMSimilarity_DefaultCollectionModel))
#define OrgApacheLuceneSearchSimilaritiesLMSimilarity_DefaultCollectionModel_

@class OrgApacheLuceneSearchSimilaritiesBasicStats;

/*!
 @brief Models <code>p(w|C)</code> as the number of occurrences of the term in the
  collection, divided by the total number of tokens <code>+ 1</code>.
 */
@interface OrgApacheLuceneSearchSimilaritiesLMSimilarity_DefaultCollectionModel : NSObject < OrgApacheLuceneSearchSimilaritiesLMSimilarity_CollectionModel >

#pragma mark Public

/*!
 @brief Sole constructor: parameter-free
 */
- (instancetype __nonnull)init;

- (jfloat)computeProbabilityWithOrgApacheLuceneSearchSimilaritiesBasicStats:(OrgApacheLuceneSearchSimilaritiesBasicStats *)stats;

- (NSString *)getName;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSimilaritiesLMSimilarity_DefaultCollectionModel)

FOUNDATION_EXPORT void OrgApacheLuceneSearchSimilaritiesLMSimilarity_DefaultCollectionModel_init(OrgApacheLuceneSearchSimilaritiesLMSimilarity_DefaultCollectionModel *self);

FOUNDATION_EXPORT OrgApacheLuceneSearchSimilaritiesLMSimilarity_DefaultCollectionModel *new_OrgApacheLuceneSearchSimilaritiesLMSimilarity_DefaultCollectionModel_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchSimilaritiesLMSimilarity_DefaultCollectionModel *create_OrgApacheLuceneSearchSimilaritiesLMSimilarity_DefaultCollectionModel_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSimilaritiesLMSimilarity_DefaultCollectionModel)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchSimilaritiesLMSimilarity")
