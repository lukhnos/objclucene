//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/TopTermsRewrite.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchTopTermsRewrite")
#ifdef RESTRICT_OrgApacheLuceneSearchTopTermsRewrite
#define INCLUDE_ALL_OrgApacheLuceneSearchTopTermsRewrite 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchTopTermsRewrite 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchTopTermsRewrite

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchTopTermsRewrite_) && (INCLUDE_ALL_OrgApacheLuceneSearchTopTermsRewrite || defined(INCLUDE_OrgApacheLuceneSearchTopTermsRewrite))
#define OrgApacheLuceneSearchTopTermsRewrite_

#define RESTRICT_OrgApacheLuceneSearchTermCollectingRewrite 1
#define INCLUDE_OrgApacheLuceneSearchTermCollectingRewrite 1
#include "org/apache/lucene/search/TermCollectingRewrite.h"

@class OrgApacheLuceneIndexIndexReader;
@class OrgApacheLuceneSearchMultiTermQuery;
@class OrgApacheLuceneSearchQuery;

/*!
 @brief Base rewrite method for collecting only the top terms
  via a priority queue.
 */
@interface OrgApacheLuceneSearchTopTermsRewrite : OrgApacheLuceneSearchTermCollectingRewrite

#pragma mark Public

/*!
 @brief Create a TopTermsBooleanQueryRewrite for 
  at most <code>size</code> terms.
 <p>
  NOTE: if <code>BooleanQuery.getMaxClauseCount</code> is smaller than  
 <code>size</code>, then it will be used instead.
 */
- (instancetype __nonnull)initWithInt:(jint)size;

- (jboolean)isEqual:(id)obj;

/*!
 @brief return the maximum priority queue size
 */
- (jint)getSize;

- (NSUInteger)hash;

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                   withOrgApacheLuceneSearchMultiTermQuery:(OrgApacheLuceneSearchMultiTermQuery *)query;

#pragma mark Protected

/*!
 @brief return the maximum size of the priority queue (for boolean rewrites this is BooleanQuery#getMaxClauseCount).
 */
- (jint)getMaxSize;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initPackagePrivate NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneSearchTopTermsRewrite)

FOUNDATION_EXPORT void OrgApacheLuceneSearchTopTermsRewrite_initWithInt_(OrgApacheLuceneSearchTopTermsRewrite *self, jint size);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchTopTermsRewrite)

#endif

#if !defined (OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm_) && (INCLUDE_ALL_OrgApacheLuceneSearchTopTermsRewrite || defined(INCLUDE_OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm))
#define OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm_

#define RESTRICT_JavaLangComparable 1
#define INCLUDE_JavaLangComparable 1
#include "java/lang/Comparable.h"

@class OrgApacheLuceneIndexTermContext;
@class OrgApacheLuceneUtilBytesRefBuilder;

@interface OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm : NSObject < JavaLangComparable > {
 @public
  OrgApacheLuceneUtilBytesRefBuilder *bytes_;
  jfloat boost_;
  OrgApacheLuceneIndexTermContext *termState_;
}

#pragma mark Public

- (instancetype __nonnull)initWithOrgApacheLuceneIndexTermContext:(OrgApacheLuceneIndexTermContext *)termState;

- (jint)compareToWithId:(OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *)other;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm, bytes_, OrgApacheLuceneUtilBytesRefBuilder *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm, termState_, OrgApacheLuceneIndexTermContext *)

FOUNDATION_EXPORT void OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm_initWithOrgApacheLuceneIndexTermContext_(OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *self, OrgApacheLuceneIndexTermContext *termState);

FOUNDATION_EXPORT OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *new_OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm_initWithOrgApacheLuceneIndexTermContext_(OrgApacheLuceneIndexTermContext *termState) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm *create_OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm_initWithOrgApacheLuceneIndexTermContext_(OrgApacheLuceneIndexTermContext *termState);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchTopTermsRewrite_ScoreTerm)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchTopTermsRewrite")
