//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./suggest/src/java/org/apache/lucene/search/suggest/tst/TSTLookup.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchSuggestTstTSTLookup")
#ifdef RESTRICT_OrgApacheLuceneSearchSuggestTstTSTLookup
#define INCLUDE_ALL_OrgApacheLuceneSearchSuggestTstTSTLookup 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchSuggestTstTSTLookup 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchSuggestTstTSTLookup

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchSuggestTstTSTLookup_) && (INCLUDE_ALL_OrgApacheLuceneSearchSuggestTstTSTLookup || defined(INCLUDE_OrgApacheLuceneSearchSuggestTstTSTLookup))
#define OrgApacheLuceneSearchSuggestTstTSTLookup_

#define RESTRICT_OrgApacheLuceneSearchSuggestLookup 1
#define INCLUDE_OrgApacheLuceneSearchSuggestLookup 1
#include "org/apache/lucene/search/suggest/Lookup.h"

@class OrgApacheLuceneSearchSuggestTstTSTAutocomplete;
@class OrgApacheLuceneSearchSuggestTstTernaryTreeNode;
@class OrgApacheLuceneStoreDataInput;
@class OrgApacheLuceneStoreDataOutput;
@protocol JavaLangCharSequence;
@protocol JavaUtilList;
@protocol JavaUtilSet;
@protocol OrgApacheLuceneSearchSuggestInputIterator;

/*!
 @brief Suggest implementation based on a  
 <a href="http://en.wikipedia.org/wiki/Ternary_search_tree">Ternary Search Tree</a>
 - seealso: TSTAutocomplete
 */
@interface OrgApacheLuceneSearchSuggestTstTSTLookup : OrgApacheLuceneSearchSuggestLookup {
 @public
  OrgApacheLuceneSearchSuggestTstTernaryTreeNode *root_;
  OrgApacheLuceneSearchSuggestTstTSTAutocomplete *autocomplete_;
}

#pragma mark Public

/*!
 @brief Creates a new TSTLookup with an empty Ternary Search Tree.
 - seealso: #build(InputIterator)
 */
- (instancetype __nonnull)init;

/*!
 @brief Adds a new node if <code>key</code> already exists,
  otherwise replaces its value.
 <p>
  This method always returns true.
 */
- (jboolean)addWithJavaLangCharSequence:(id<JavaLangCharSequence>)key
                                 withId:(id)value;

- (void)buildWithOrgApacheLuceneSearchSuggestInputIterator:(id<OrgApacheLuceneSearchSuggestInputIterator>)iterator;

/*!
 @brief Returns the value for the specified key, or null
  if the key does not exist.
 */
- (id)getWithJavaLangCharSequence:(id<JavaLangCharSequence>)key;

- (jlong)getCount;

- (jboolean)load__WithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)input;

- (id<JavaUtilList>)lookupWithJavaLangCharSequence:(id<JavaLangCharSequence>)key
                                   withJavaUtilSet:(id<JavaUtilSet>)contexts
                                       withBoolean:(jboolean)onlyMorePopular
                                           withInt:(jint)num;

/*!
 @brief Returns byte size of the underlying TST
 */
- (jlong)ramBytesUsed;

- (jboolean)storeWithOrgApacheLuceneStoreDataOutput:(OrgApacheLuceneStoreDataOutput *)output;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSuggestTstTSTLookup)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestTstTSTLookup, root_, OrgApacheLuceneSearchSuggestTstTernaryTreeNode *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestTstTSTLookup, autocomplete_, OrgApacheLuceneSearchSuggestTstTSTAutocomplete *)

FOUNDATION_EXPORT void OrgApacheLuceneSearchSuggestTstTSTLookup_init(OrgApacheLuceneSearchSuggestTstTSTLookup *self);

FOUNDATION_EXPORT OrgApacheLuceneSearchSuggestTstTSTLookup *new_OrgApacheLuceneSearchSuggestTstTSTLookup_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchSuggestTstTSTLookup *create_OrgApacheLuceneSearchSuggestTstTSTLookup_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSuggestTstTSTLookup)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchSuggestTstTSTLookup")
