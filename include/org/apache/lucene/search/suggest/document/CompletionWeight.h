//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./suggest/src/java/org/apache/lucene/search/suggest/document/CompletionWeight.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchSuggestDocumentCompletionWeight")
#ifdef RESTRICT_OrgApacheLuceneSearchSuggestDocumentCompletionWeight
#define INCLUDE_ALL_OrgApacheLuceneSearchSuggestDocumentCompletionWeight 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchSuggestDocumentCompletionWeight 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchSuggestDocumentCompletionWeight

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchSuggestDocumentCompletionWeight_) && (INCLUDE_ALL_OrgApacheLuceneSearchSuggestDocumentCompletionWeight || defined(INCLUDE_OrgApacheLuceneSearchSuggestDocumentCompletionWeight))
#define OrgApacheLuceneSearchSuggestDocumentCompletionWeight_

#define RESTRICT_OrgApacheLuceneSearchWeight 1
#define INCLUDE_OrgApacheLuceneSearchWeight 1
#include "org/apache/lucene/search/Weight.h"

@class OrgApacheLuceneIndexLeafReaderContext;
@class OrgApacheLuceneSearchBulkScorer;
@class OrgApacheLuceneSearchExplanation;
@class OrgApacheLuceneSearchQuery;
@class OrgApacheLuceneSearchScorer;
@class OrgApacheLuceneSearchSuggestDocumentCompletionQuery;
@class OrgApacheLuceneUtilAutomatonAutomaton;
@class OrgApacheLuceneUtilIntsRef;
@protocol JavaLangCharSequence;
@protocol JavaUtilSet;

/*!
 @brief Expert: the Weight for CompletionQuery, used to
  score and explain these queries.
 Subclasses can override <code>setNextMatch(IntsRef)</code>,
  <code>boost()</code> and <code>context()</code>
  to calculate the boost and extract the context of
  a matched path prefix.
 */
@interface OrgApacheLuceneSearchSuggestDocumentCompletionWeight : OrgApacheLuceneSearchWeight

#pragma mark Public

/*!
 @brief Creates a weight for <code>query</code> with an <code>automaton</code>,
  using the <code>reader</code> for index stats
 */
- (instancetype __nonnull)initWithOrgApacheLuceneSearchSuggestDocumentCompletionQuery:(OrgApacheLuceneSearchSuggestDocumentCompletionQuery *)query
                                            withOrgApacheLuceneUtilAutomatonAutomaton:(OrgApacheLuceneUtilAutomatonAutomaton *)automaton;

- (OrgApacheLuceneSearchBulkScorer *)bulkScorerWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context;

- (OrgApacheLuceneSearchExplanation *)explainWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context
                                                                               withInt:(jint)doc;

- (void)extractTermsWithJavaUtilSet:(id<JavaUtilSet>)terms;

/*!
 @brief Returns the automaton specified
  by the <code>CompletionQuery</code>
 @return query automaton
 */
- (OrgApacheLuceneUtilAutomatonAutomaton *)getAutomaton;

- (jfloat)getValueForNormalization;

- (void)normalizeWithFloat:(jfloat)norm
                 withFloat:(jfloat)topLevelBoost;

- (OrgApacheLuceneSearchScorer *)scorerWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context;

#pragma mark Protected

/*!
 @brief Returns the boost of the partial path set by <code>setNextMatch(IntsRef)</code>
 @return suggestion query-time boost
 */
- (jfloat)boost;

/*!
 @brief Returns the context of the partial path set by <code>setNextMatch(IntsRef)</code>
 @return suggestion context
 */
- (id<JavaLangCharSequence>)context;

/*!
 @brief Set for every partial path in the index that matched the query
  automaton.
 Subclasses should override <code>boost()</code> and <code>context()</code>
  to return an appropriate value with respect to the current pathPrefix.
 @param pathPrefix the prefix of a matched path
 */
- (void)setNextMatchWithOrgApacheLuceneUtilIntsRef:(OrgApacheLuceneUtilIntsRef *)pathPrefix;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSuggestDocumentCompletionWeight)

FOUNDATION_EXPORT void OrgApacheLuceneSearchSuggestDocumentCompletionWeight_initWithOrgApacheLuceneSearchSuggestDocumentCompletionQuery_withOrgApacheLuceneUtilAutomatonAutomaton_(OrgApacheLuceneSearchSuggestDocumentCompletionWeight *self, OrgApacheLuceneSearchSuggestDocumentCompletionQuery *query, OrgApacheLuceneUtilAutomatonAutomaton *automaton);

FOUNDATION_EXPORT OrgApacheLuceneSearchSuggestDocumentCompletionWeight *new_OrgApacheLuceneSearchSuggestDocumentCompletionWeight_initWithOrgApacheLuceneSearchSuggestDocumentCompletionQuery_withOrgApacheLuceneUtilAutomatonAutomaton_(OrgApacheLuceneSearchSuggestDocumentCompletionQuery *query, OrgApacheLuceneUtilAutomatonAutomaton *automaton) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchSuggestDocumentCompletionWeight *create_OrgApacheLuceneSearchSuggestDocumentCompletionWeight_initWithOrgApacheLuceneSearchSuggestDocumentCompletionQuery_withOrgApacheLuceneUtilAutomatonAutomaton_(OrgApacheLuceneSearchSuggestDocumentCompletionQuery *query, OrgApacheLuceneUtilAutomatonAutomaton *automaton);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSuggestDocumentCompletionWeight)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchSuggestDocumentCompletionWeight")
