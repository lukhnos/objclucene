//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./suggest/src/java/org/apache/lucene/search/suggest/document/CompletionQuery.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchSuggestDocumentCompletionQuery")
#ifdef RESTRICT_OrgApacheLuceneSearchSuggestDocumentCompletionQuery
#define INCLUDE_ALL_OrgApacheLuceneSearchSuggestDocumentCompletionQuery 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchSuggestDocumentCompletionQuery 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchSuggestDocumentCompletionQuery

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchSuggestDocumentCompletionQuery_) && (INCLUDE_ALL_OrgApacheLuceneSearchSuggestDocumentCompletionQuery || defined(INCLUDE_OrgApacheLuceneSearchSuggestDocumentCompletionQuery))
#define OrgApacheLuceneSearchSuggestDocumentCompletionQuery_

#define RESTRICT_OrgApacheLuceneSearchQuery 1
#define INCLUDE_OrgApacheLuceneSearchQuery 1
#include "org/apache/lucene/search/Query.h"

@class OrgApacheLuceneIndexIndexReader;
@class OrgApacheLuceneIndexTerm;
@class OrgApacheLuceneSearchSuggestBitsProducer;

/*!
 @brief Abstract <code>Query</code> that match documents containing terms with a specified prefix
  filtered by <code>BitsProducer</code>.This should be used to query against any <code>SuggestField</code>s
  or <code>ContextSuggestField</code>s of documents.
 <p>
  Use <code>SuggestIndexSearcher.suggest(CompletionQuery, int)</code> to execute any query
  that provides a concrete implementation of this query. Example below shows using this query
  to retrieve the top 5 documents. 
 <pre class="prettyprint">
   SuggestIndexSearcher searcher = new SuggestIndexSearcher(reader);
   TopSuggestDocs suggestDocs = searcher.suggest(query, 5); 
 
@endcode
  This query rewrites to an appropriate <code>CompletionQuery</code> depending on the
  type (<code>SuggestField</code> or <code>ContextSuggestField</code>) of the field the query is run against.
 */
@interface OrgApacheLuceneSearchSuggestDocumentCompletionQuery : OrgApacheLuceneSearchQuery

#pragma mark Public

/*!
 @brief Returns the field name this query should
  be run against
 */
- (NSString *)getField;

/*!
 @brief Returns a <code>BitsProducer</code>.Only suggestions matching the returned
  bits will be returned.
 */
- (OrgApacheLuceneSearchSuggestBitsProducer *)getFilter;

/*!
 @brief Returns the term to be queried against
 */
- (OrgApacheLuceneIndexTerm *)getTerm;

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader;

- (NSString *)toStringWithNSString:(NSString *)field;

#pragma mark Protected

/*!
 @brief Creates a base Completion query against a <code>term</code>
  with a <code>filter</code> to scope the documents
 */
- (instancetype __nonnull)initWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
              withOrgApacheLuceneSearchSuggestBitsProducer:(OrgApacheLuceneSearchSuggestBitsProducer *)filter;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSuggestDocumentCompletionQuery)

FOUNDATION_EXPORT void OrgApacheLuceneSearchSuggestDocumentCompletionQuery_initWithOrgApacheLuceneIndexTerm_withOrgApacheLuceneSearchSuggestBitsProducer_(OrgApacheLuceneSearchSuggestDocumentCompletionQuery *self, OrgApacheLuceneIndexTerm *term, OrgApacheLuceneSearchSuggestBitsProducer *filter);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSuggestDocumentCompletionQuery)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchSuggestDocumentCompletionQuery")
