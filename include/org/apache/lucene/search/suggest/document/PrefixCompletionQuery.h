//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./suggest/src/java/org/apache/lucene/search/suggest/document/PrefixCompletionQuery.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery")
#ifdef RESTRICT_OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery
#define INCLUDE_ALL_OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery_) && (INCLUDE_ALL_OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery || defined(INCLUDE_OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery))
#define OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery_

#define RESTRICT_OrgApacheLuceneSearchSuggestDocumentCompletionQuery 1
#define INCLUDE_OrgApacheLuceneSearchSuggestDocumentCompletionQuery 1
#include "org/apache/lucene/search/suggest/document/CompletionQuery.h"

@class OrgApacheLuceneAnalysisAnalyzer;
@class OrgApacheLuceneIndexTerm;
@class OrgApacheLuceneSearchIndexSearcher;
@class OrgApacheLuceneSearchSuggestBitsProducer;
@class OrgApacheLuceneSearchSuggestDocumentCompletionAnalyzer;
@class OrgApacheLuceneSearchWeight;

/*!
 @brief A <code>CompletionQuery</code> which takes an <code>Analyzer</code>
  to analyze the prefix of the query term.
 <p>
  Example usage of querying an analyzed prefix 'sugg'
  against a field 'suggest_field' is as follows: 
 <pre class="prettyprint">
   CompletionQuery query = new PrefixCompletionQuery(analyzer, new Term("suggest_field", "sugg")); 
 
@endcode
 */
@interface OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery : OrgApacheLuceneSearchSuggestDocumentCompletionQuery {
 @public
  /*!
   @brief Used to analyze the term text
   */
  OrgApacheLuceneSearchSuggestDocumentCompletionAnalyzer *analyzer_;
}

#pragma mark Public

/*!
 @brief Calls <code>PrefixCompletionQuery.PrefixCompletionQuery(Analyzer, Term, BitsProducer)</code>
  with no filter
 */
- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                     withOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term;

/*!
 @brief Constructs an analyzed prefix completion query
 @param analyzer used to analyze the provided <code>Term.text()</code>
 @param term query is run against <code>Term.field()</code>  and <code>Term.text()</code>
               is analyzed with  <code> analyzer </code>
 @param filter used to query on a sub set of documents
 */
- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                     withOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
                     withOrgApacheLuceneSearchSuggestBitsProducer:(OrgApacheLuceneSearchSuggestBitsProducer *)filter;

- (OrgApacheLuceneSearchWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                        withBoolean:(jboolean)needsScores;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)arg0
              withOrgApacheLuceneSearchSuggestBitsProducer:(OrgApacheLuceneSearchSuggestBitsProducer *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery, analyzer_, OrgApacheLuceneSearchSuggestDocumentCompletionAnalyzer *)

FOUNDATION_EXPORT void OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneIndexTerm_(OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery *self, OrgApacheLuceneAnalysisAnalyzer *analyzer, OrgApacheLuceneIndexTerm *term);

FOUNDATION_EXPORT OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery *new_OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneIndexTerm_(OrgApacheLuceneAnalysisAnalyzer *analyzer, OrgApacheLuceneIndexTerm *term) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery *create_OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneIndexTerm_(OrgApacheLuceneAnalysisAnalyzer *analyzer, OrgApacheLuceneIndexTerm *term);

FOUNDATION_EXPORT void OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneIndexTerm_withOrgApacheLuceneSearchSuggestBitsProducer_(OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery *self, OrgApacheLuceneAnalysisAnalyzer *analyzer, OrgApacheLuceneIndexTerm *term, OrgApacheLuceneSearchSuggestBitsProducer *filter);

FOUNDATION_EXPORT OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery *new_OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneIndexTerm_withOrgApacheLuceneSearchSuggestBitsProducer_(OrgApacheLuceneAnalysisAnalyzer *analyzer, OrgApacheLuceneIndexTerm *term, OrgApacheLuceneSearchSuggestBitsProducer *filter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery *create_OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery_initWithOrgApacheLuceneAnalysisAnalyzer_withOrgApacheLuceneIndexTerm_withOrgApacheLuceneSearchSuggestBitsProducer_(OrgApacheLuceneAnalysisAnalyzer *analyzer, OrgApacheLuceneIndexTerm *term, OrgApacheLuceneSearchSuggestBitsProducer *filter);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchSuggestDocumentPrefixCompletionQuery")
