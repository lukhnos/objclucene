//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./suggest/src/java/org/apache/lucene/search/suggest/document/TopSuggestDocsCollector.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchSuggestDocumentTopSuggestDocsCollector")
#ifdef RESTRICT_OrgApacheLuceneSearchSuggestDocumentTopSuggestDocsCollector
#define INCLUDE_ALL_OrgApacheLuceneSearchSuggestDocumentTopSuggestDocsCollector 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchSuggestDocumentTopSuggestDocsCollector 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchSuggestDocumentTopSuggestDocsCollector

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchSuggestDocumentTopSuggestDocsCollector_) && (INCLUDE_ALL_OrgApacheLuceneSearchSuggestDocumentTopSuggestDocsCollector || defined(INCLUDE_OrgApacheLuceneSearchSuggestDocumentTopSuggestDocsCollector))
#define OrgApacheLuceneSearchSuggestDocumentTopSuggestDocsCollector_

#define RESTRICT_OrgApacheLuceneSearchSimpleCollector 1
#define INCLUDE_OrgApacheLuceneSearchSimpleCollector 1
#include "org/apache/lucene/search/SimpleCollector.h"

@class OrgApacheLuceneIndexLeafReaderContext;
@class OrgApacheLuceneSearchSuggestDocumentTopSuggestDocs;
@protocol JavaLangCharSequence;

/*!
 @brief <code>org.apache.lucene.search.Collector</code> that collects completion and
  score, along with document id
 <p>
  Non scoring collector that collect completions in order of their
  pre-computed scores.
 <p>
  NOTE: One document can be collected multiple times if a document
  is matched for multiple unique completions for a given query 
 <p>
  Subclasses should only override 
 <code>TopSuggestDocsCollector.collect(int, CharSequence, CharSequence, float)</code>.
  <p>
  NOTE: <code>setScorer(org.apache.lucene.search.Scorer)</code> and 
 <code>collect(int)</code> is not used
 */
@interface OrgApacheLuceneSearchSuggestDocumentTopSuggestDocsCollector : OrgApacheLuceneSearchSimpleCollector {
 @public
  /*!
   @brief Document base offset for the current Leaf
   */
  jint docBase_;
}

#pragma mark Public

/*!
 @brief Sole constructor
  Collects at most <code>num</code> completions
  with corresponding document and weight
 */
- (instancetype __nonnull)initWithInt:(jint)num;

/*!
 @brief Ignored
 */
- (void)collectWithInt:(jint)doc;

/*!
 @brief Called for every matched completion,
  similar to <code>org.apache.lucene.search.LeafCollector.collect(int)</code>
  but for completions.
 NOTE: collection at the leaf level is guaranteed to be in
  descending order of score
 */
- (void)collectWithInt:(jint)docID
withJavaLangCharSequence:(id<JavaLangCharSequence>)key
withJavaLangCharSequence:(id<JavaLangCharSequence>)context
             withFloat:(jfloat)score;

/*!
 @brief Returns at most <code>num</code> Top scoring <code>org.apache.lucene.search.suggest.document.TopSuggestDocs</code>s
 */
- (OrgApacheLuceneSearchSuggestDocumentTopSuggestDocs *)get;

/*!
 @brief Returns the number of results to be collected
 */
- (jint)getCountToCollect;

/*!
 @brief Ignored
 */
- (jboolean)needsScores;

#pragma mark Protected

- (void)doSetNextReaderWithOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)context;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSuggestDocumentTopSuggestDocsCollector)

FOUNDATION_EXPORT void OrgApacheLuceneSearchSuggestDocumentTopSuggestDocsCollector_initWithInt_(OrgApacheLuceneSearchSuggestDocumentTopSuggestDocsCollector *self, jint num);

FOUNDATION_EXPORT OrgApacheLuceneSearchSuggestDocumentTopSuggestDocsCollector *new_OrgApacheLuceneSearchSuggestDocumentTopSuggestDocsCollector_initWithInt_(jint num) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchSuggestDocumentTopSuggestDocsCollector *create_OrgApacheLuceneSearchSuggestDocumentTopSuggestDocsCollector_initWithInt_(jint num);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSuggestDocumentTopSuggestDocsCollector)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchSuggestDocumentTopSuggestDocsCollector")
