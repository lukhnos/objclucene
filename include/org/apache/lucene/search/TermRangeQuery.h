//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/TermRangeQuery.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchTermRangeQuery")
#ifdef RESTRICT_OrgApacheLuceneSearchTermRangeQuery
#define INCLUDE_ALL_OrgApacheLuceneSearchTermRangeQuery 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchTermRangeQuery 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchTermRangeQuery

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchTermRangeQuery_) && (INCLUDE_ALL_OrgApacheLuceneSearchTermRangeQuery || defined(INCLUDE_OrgApacheLuceneSearchTermRangeQuery))
#define OrgApacheLuceneSearchTermRangeQuery_

#define RESTRICT_OrgApacheLuceneSearchAutomatonQuery 1
#define INCLUDE_OrgApacheLuceneSearchAutomatonQuery 1
#include "org/apache/lucene/search/AutomatonQuery.h"

@class OrgApacheLuceneIndexTerm;
@class OrgApacheLuceneUtilAutomatonAutomaton;
@class OrgApacheLuceneUtilBytesRef;

/*!
 @brief A Query that matches documents within an range of terms.
 <p>This query matches the documents looking for terms that fall into the
  supplied range according to <code>BytesRef.compareTo(BytesRef)</code>.
  
 <p>This query uses the <code>MultiTermQuery.CONSTANT_SCORE_REWRITE</code>
  rewrite method.
 @since 2.9
 */
@interface OrgApacheLuceneSearchTermRangeQuery : OrgApacheLuceneSearchAutomatonQuery

#pragma mark Public

/*!
 @brief Constructs a query selecting all terms greater/equal than <code>lowerTerm</code>
  but less/equal than <code>upperTerm</code>.
 <p>
  If an endpoint is null, it is said 
  to be "open". Either or both endpoints may be open.  Open endpoints may not 
  be exclusive (you can't select all but the first or last term without 
  explicitly specifying the term to exclude.)
 @param field The field that holds both lower and upper terms.
 @param lowerTerm The term text at the lower end of the range
 @param upperTerm The term text at the upper end of the range
 @param includeLower If true, the 
  <code> lowerTerm </code>  is           included in the range.
 @param includeUpper If true, the 
  <code> upperTerm </code>  is           included in the range.
 */
- (instancetype __nonnull)initWithNSString:(NSString *)field
           withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)lowerTerm
           withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)upperTerm
                               withBoolean:(jboolean)includeLower
                               withBoolean:(jboolean)includeUpper;

- (jboolean)isEqual:(id)obj;

/*!
 @brief Returns the lower value of this range query
 */
- (OrgApacheLuceneUtilBytesRef *)getLowerTerm;

/*!
 @brief Returns the upper value of this range query
 */
- (OrgApacheLuceneUtilBytesRef *)getUpperTerm;

- (NSUInteger)hash;

/*!
 @brief Returns <code>true</code> if the lower endpoint is inclusive
 */
- (jboolean)includesLower;

/*!
 @brief Returns <code>true</code> if the upper endpoint is inclusive
 */
- (jboolean)includesUpper;

/*!
 @brief Factory that creates a new TermRangeQuery using Strings for term text.
 */
+ (OrgApacheLuceneSearchTermRangeQuery *)newStringRangeWithNSString:(NSString *)field
                                                       withNSString:(NSString *)lowerTerm
                                                       withNSString:(NSString *)upperTerm
                                                        withBoolean:(jboolean)includeLower
                                                        withBoolean:(jboolean)includeUpper OBJC_METHOD_FAMILY_NONE;

+ (OrgApacheLuceneUtilAutomatonAutomaton *)toAutomatonWithOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)lowerTerm
                                                      withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)upperTerm
                                                                          withBoolean:(jboolean)includeLower
                                                                          withBoolean:(jboolean)includeUpper;

/*!
 @brief Prints a user-readable version of this query.
 */
- (NSString *)toStringWithNSString:(NSString *)field;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)arg0
                 withOrgApacheLuceneUtilAutomatonAutomaton:(OrgApacheLuceneUtilAutomatonAutomaton *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)arg0
                 withOrgApacheLuceneUtilAutomatonAutomaton:(OrgApacheLuceneUtilAutomatonAutomaton *)arg1
                                                   withInt:(jint)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)arg0
                 withOrgApacheLuceneUtilAutomatonAutomaton:(OrgApacheLuceneUtilAutomatonAutomaton *)arg1
                                                   withInt:(jint)arg2
                                               withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchTermRangeQuery)

FOUNDATION_EXPORT void OrgApacheLuceneSearchTermRangeQuery_initWithNSString_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_withBoolean_withBoolean_(OrgApacheLuceneSearchTermRangeQuery *self, NSString *field, OrgApacheLuceneUtilBytesRef *lowerTerm, OrgApacheLuceneUtilBytesRef *upperTerm, jboolean includeLower, jboolean includeUpper);

FOUNDATION_EXPORT OrgApacheLuceneSearchTermRangeQuery *new_OrgApacheLuceneSearchTermRangeQuery_initWithNSString_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_withBoolean_withBoolean_(NSString *field, OrgApacheLuceneUtilBytesRef *lowerTerm, OrgApacheLuceneUtilBytesRef *upperTerm, jboolean includeLower, jboolean includeUpper) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchTermRangeQuery *create_OrgApacheLuceneSearchTermRangeQuery_initWithNSString_withOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_withBoolean_withBoolean_(NSString *field, OrgApacheLuceneUtilBytesRef *lowerTerm, OrgApacheLuceneUtilBytesRef *upperTerm, jboolean includeLower, jboolean includeUpper);

FOUNDATION_EXPORT OrgApacheLuceneUtilAutomatonAutomaton *OrgApacheLuceneSearchTermRangeQuery_toAutomatonWithOrgApacheLuceneUtilBytesRef_withOrgApacheLuceneUtilBytesRef_withBoolean_withBoolean_(OrgApacheLuceneUtilBytesRef *lowerTerm, OrgApacheLuceneUtilBytesRef *upperTerm, jboolean includeLower, jboolean includeUpper);

FOUNDATION_EXPORT OrgApacheLuceneSearchTermRangeQuery *OrgApacheLuceneSearchTermRangeQuery_newStringRangeWithNSString_withNSString_withNSString_withBoolean_withBoolean_(NSString *field, NSString *lowerTerm, NSString *upperTerm, jboolean includeLower, jboolean includeUpper);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchTermRangeQuery)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchTermRangeQuery")
