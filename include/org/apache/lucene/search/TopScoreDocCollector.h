//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/TopScoreDocCollector.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchTopScoreDocCollector")
#ifdef RESTRICT_OrgApacheLuceneSearchTopScoreDocCollector
#define INCLUDE_ALL_OrgApacheLuceneSearchTopScoreDocCollector 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchTopScoreDocCollector 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchTopScoreDocCollector

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchTopScoreDocCollector_) && (INCLUDE_ALL_OrgApacheLuceneSearchTopScoreDocCollector || defined(INCLUDE_OrgApacheLuceneSearchTopScoreDocCollector))
#define OrgApacheLuceneSearchTopScoreDocCollector_

#define RESTRICT_OrgApacheLuceneSearchTopDocsCollector 1
#define INCLUDE_OrgApacheLuceneSearchTopDocsCollector 1
#include "org/apache/lucene/search/TopDocsCollector.h"

@class IOSObjectArray;
@class OrgApacheLuceneSearchScoreDoc;
@class OrgApacheLuceneSearchTopDocs;
@class OrgApacheLuceneUtilPriorityQueue;

/*!
 @brief A <code>Collector</code> implementation that collects the top-scoring hits,
  returning them as a <code>TopDocs</code>.This is used by <code>IndexSearcher</code> to
  implement <code>TopDocs</code>-based search.
 Hits are sorted by score descending
  and then (when the scores are tied) docID ascending. When you create an
  instance of this collector you should know in advance whether documents are
  going to be collected in doc Id order or not. 
 <p><b>NOTE</b>: The values <code>Float.NaN</code> and 
 <code>Float.NEGATIVE_INFINITY</code> are not valid scores.  This
  collector will not properly collect hits with such
  scores.
 */
@interface OrgApacheLuceneSearchTopScoreDocCollector : OrgApacheLuceneSearchTopDocsCollector {
 @public
  OrgApacheLuceneSearchScoreDoc *pqTop_;
}

#pragma mark Public

/*!
 @brief Creates a new <code>TopScoreDocCollector</code> given the number of hits to
  collect and whether documents are scored in order by the input 
 <code>Scorer</code> to <code>LeafCollector.setScorer(Scorer)</code>.
 <p><b>NOTE</b>: The instances returned by this method
  pre-allocate a full array of length 
 <code>numHits</code>, and fill the array with sentinel
  objects.
 */
+ (OrgApacheLuceneSearchTopScoreDocCollector *)createWithInt:(jint)numHits;

/*!
 @brief Creates a new <code>TopScoreDocCollector</code> given the number of hits to
  collect, the bottom of the previous page, and whether documents are scored in order by the input 
 <code>Scorer</code> to <code>LeafCollector.setScorer(Scorer)</code>.
 <p><b>NOTE</b>: The instances returned by this method
  pre-allocate a full array of length 
 <code>numHits</code>, and fill the array with sentinel
  objects.
 */
+ (OrgApacheLuceneSearchTopScoreDocCollector *)createWithInt:(jint)numHits
                           withOrgApacheLuceneSearchScoreDoc:(OrgApacheLuceneSearchScoreDoc *)after;

- (jboolean)needsScores;

#pragma mark Protected

- (OrgApacheLuceneSearchTopDocs *)newTopDocsWithOrgApacheLuceneSearchScoreDocArray:(IOSObjectArray *)results
                                                                           withInt:(jint)start OBJC_METHOD_FAMILY_NONE;

#pragma mark Package-Private

- (instancetype __nonnull)initWithInt:(jint)numHits;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithOrgApacheLuceneUtilPriorityQueue:(OrgApacheLuceneUtilPriorityQueue *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchTopScoreDocCollector)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchTopScoreDocCollector, pqTop_, OrgApacheLuceneSearchScoreDoc *)

FOUNDATION_EXPORT OrgApacheLuceneSearchTopScoreDocCollector *OrgApacheLuceneSearchTopScoreDocCollector_createWithInt_(jint numHits);

FOUNDATION_EXPORT OrgApacheLuceneSearchTopScoreDocCollector *OrgApacheLuceneSearchTopScoreDocCollector_createWithInt_withOrgApacheLuceneSearchScoreDoc_(jint numHits, OrgApacheLuceneSearchScoreDoc *after);

FOUNDATION_EXPORT void OrgApacheLuceneSearchTopScoreDocCollector_initWithInt_(OrgApacheLuceneSearchTopScoreDocCollector *self, jint numHits);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchTopScoreDocCollector)

#endif

#if !defined (OrgApacheLuceneSearchTopScoreDocCollector_ScorerLeafCollector_) && (INCLUDE_ALL_OrgApacheLuceneSearchTopScoreDocCollector || defined(INCLUDE_OrgApacheLuceneSearchTopScoreDocCollector_ScorerLeafCollector))
#define OrgApacheLuceneSearchTopScoreDocCollector_ScorerLeafCollector_

#define RESTRICT_OrgApacheLuceneSearchLeafCollector 1
#define INCLUDE_OrgApacheLuceneSearchLeafCollector 1
#include "org/apache/lucene/search/LeafCollector.h"

@class OrgApacheLuceneSearchScorer;

@interface OrgApacheLuceneSearchTopScoreDocCollector_ScorerLeafCollector : NSObject < OrgApacheLuceneSearchLeafCollector > {
 @public
  OrgApacheLuceneSearchScorer *scorer_;
}

#pragma mark Public

- (void)setScorerWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)scorer;

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchTopScoreDocCollector_ScorerLeafCollector)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchTopScoreDocCollector_ScorerLeafCollector, scorer_, OrgApacheLuceneSearchScorer *)

FOUNDATION_EXPORT void OrgApacheLuceneSearchTopScoreDocCollector_ScorerLeafCollector_init(OrgApacheLuceneSearchTopScoreDocCollector_ScorerLeafCollector *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchTopScoreDocCollector_ScorerLeafCollector)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchTopScoreDocCollector")
