//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/FilterCache.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchFilterCache")
#ifdef RESTRICT_OrgApacheLuceneSearchFilterCache
#define INCLUDE_ALL_OrgApacheLuceneSearchFilterCache 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchFilterCache 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchFilterCache

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchFilterCache_) && (INCLUDE_ALL_OrgApacheLuceneSearchFilterCache || defined(INCLUDE_OrgApacheLuceneSearchFilterCache))
#define OrgApacheLuceneSearchFilterCache_

@class OrgApacheLuceneSearchFilter;
@protocol OrgApacheLuceneSearchFilterCachingPolicy;

/*!
 @brief A cache for filters.
 - seealso: LRUFilterCache
 */
@protocol OrgApacheLuceneSearchFilterCache < JavaObject >

/*!
 @brief Return a wrapper around the provided <code>filter</code> that will cache 
 <code>DocIdSet</code>s per-segment accordingly to the given <code>policy</code>.
 */
- (OrgApacheLuceneSearchFilter *)doCacheWithOrgApacheLuceneSearchFilter:(OrgApacheLuceneSearchFilter *)filter
                           withOrgApacheLuceneSearchFilterCachingPolicy:(id<OrgApacheLuceneSearchFilterCachingPolicy>)policy;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchFilterCache)

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchFilterCache)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchFilterCache")
