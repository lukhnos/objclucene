//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/ReqExclScorer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchReqExclScorer")
#ifdef RESTRICT_OrgApacheLuceneSearchReqExclScorer
#define INCLUDE_ALL_OrgApacheLuceneSearchReqExclScorer 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchReqExclScorer 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchReqExclScorer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchReqExclScorer_) && (INCLUDE_ALL_OrgApacheLuceneSearchReqExclScorer || defined(INCLUDE_OrgApacheLuceneSearchReqExclScorer))
#define OrgApacheLuceneSearchReqExclScorer_

#define RESTRICT_OrgApacheLuceneSearchScorer 1
#define INCLUDE_OrgApacheLuceneSearchScorer 1
#include "org/apache/lucene/search/Scorer.h"

@class OrgApacheLuceneSearchTwoPhaseIterator;
@class OrgApacheLuceneSearchWeight;
@protocol JavaUtilCollection;

/*!
 @brief A Scorer for queries with a required subscorer
  and an excluding (prohibited) sub <code>Scorer</code>.
 <br>
  This <code>Scorer</code> implements <code>Scorer.advance(int)</code>,
  and it uses the advance() on the given scorers.
 */
@interface OrgApacheLuceneSearchReqExclScorer : OrgApacheLuceneSearchScorer

#pragma mark Public

/*!
 @brief Construct a <code>ReqExclScorer</code>.
 @param reqScorer The scorer that must match, except where
 @param exclScorer indicates exclusion.
 */
- (instancetype __nonnull)initPackagePrivateWithOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)reqScorer
                                            withOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)exclScorer;

- (jint)advanceWithInt:(jint)target;

- (OrgApacheLuceneSearchTwoPhaseIterator *)asTwoPhaseIterator;

- (jlong)cost;

- (jint)docID;

- (jint)freq;

- (id<JavaUtilCollection>)getChildren;

- (jint)nextDoc;

- (jfloat)score;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchReqExclScorer)

FOUNDATION_EXPORT void OrgApacheLuceneSearchReqExclScorer_initPackagePrivateWithOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchScorer_(OrgApacheLuceneSearchReqExclScorer *self, OrgApacheLuceneSearchScorer *reqScorer, OrgApacheLuceneSearchScorer *exclScorer);

FOUNDATION_EXPORT OrgApacheLuceneSearchReqExclScorer *new_OrgApacheLuceneSearchReqExclScorer_initPackagePrivateWithOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchScorer_(OrgApacheLuceneSearchScorer *reqScorer, OrgApacheLuceneSearchScorer *exclScorer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchReqExclScorer *create_OrgApacheLuceneSearchReqExclScorer_initPackagePrivateWithOrgApacheLuceneSearchScorer_withOrgApacheLuceneSearchScorer_(OrgApacheLuceneSearchScorer *reqScorer, OrgApacheLuceneSearchScorer *exclScorer);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchReqExclScorer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchReqExclScorer")
