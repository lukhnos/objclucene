//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./join/src/java/org/apache/lucene/search/join/ToParentBlockJoinQuery.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchJoinToParentBlockJoinQuery")
#ifdef RESTRICT_OrgApacheLuceneSearchJoinToParentBlockJoinQuery
#define INCLUDE_ALL_OrgApacheLuceneSearchJoinToParentBlockJoinQuery 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchJoinToParentBlockJoinQuery 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchJoinToParentBlockJoinQuery

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchJoinToParentBlockJoinQuery_) && (INCLUDE_ALL_OrgApacheLuceneSearchJoinToParentBlockJoinQuery || defined(INCLUDE_OrgApacheLuceneSearchJoinToParentBlockJoinQuery))
#define OrgApacheLuceneSearchJoinToParentBlockJoinQuery_

#define RESTRICT_OrgApacheLuceneSearchQuery 1
#define INCLUDE_OrgApacheLuceneSearchQuery 1
#include "org/apache/lucene/search/Query.h"

@class OrgApacheLuceneIndexIndexReader;
@class OrgApacheLuceneSearchIndexSearcher;
@class OrgApacheLuceneSearchJoinScoreMode;
@class OrgApacheLuceneSearchWeight;
@protocol OrgApacheLuceneSearchJoinBitSetProducer;

/*!
 @brief This query requires that you index
  children and parent docs as a single block, using the 
 <code>IndexWriter.addDocuments()</code> or <code>IndexWriter.updateDocuments()</code>
  API.In each block, the
  child documents must appear first, ending with the parent
  document.
 At search time you provide a Filter
  identifying the parents, however this Filter must provide
  an <code>BitSet</code> per sub-reader. 
 <p>Once the block index is built, use this query to wrap
  any sub-query matching only child docs and join matches in that
  child document space up to the parent document space.
  You can then use this Query as a clause with
  other queries in the parent document space.</p>
  
 <p>See <code>ToChildBlockJoinQuery</code> if you need to join
  in the reverse order. 
 <p>The child documents must be orthogonal to the parent
  documents: the wrapped child query must never
  return a parent document.</p>
  If you'd like to retrieve <code>TopGroups</code> for the
  resulting query, use the <code>ToParentBlockJoinCollector</code>.
  Note that this is not necessary, ie, if you simply want
  to collect the parent documents and don't need to see
  which child documents matched under that parent, then
  you can use any collector. 
 <p><b>NOTE</b>: If the overall query contains parent-only
  matches, for example you OR a parent-only query with a
  joined child-only query, then the resulting collected documents
  will be correct, however the <code>TopGroups</code> you get
  from <code>ToParentBlockJoinCollector</code> will not contain every
  child for parents that had matched. 
 <p>See <code>org.apache.lucene.search.join</code> for an
  overview. </p>
 */
@interface OrgApacheLuceneSearchJoinToParentBlockJoinQuery : OrgApacheLuceneSearchQuery

#pragma mark Public

/*!
 @brief Create a ToParentBlockJoinQuery.
 @param childQuery Query matching child documents.
 @param parentsFilter Filter identifying the parent documents.
 @param scoreMode How to aggregate multiple child scores  into a single parent score.
 */
- (instancetype __nonnull)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)childQuery
                 withOrgApacheLuceneSearchJoinBitSetProducer:(id<OrgApacheLuceneSearchJoinBitSetProducer>)parentsFilter
                      withOrgApacheLuceneSearchJoinScoreMode:(OrgApacheLuceneSearchJoinScoreMode *)scoreMode;

- (OrgApacheLuceneSearchWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                        withBoolean:(jboolean)needsScores;

- (jboolean)isEqual:(id)_other;

/*!
 @brief Return our child query.
 */
- (OrgApacheLuceneSearchQuery *)getChildQuery;

- (NSUInteger)hash;

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader;

- (NSString *)toStringWithNSString:(NSString *)field;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchJoinToParentBlockJoinQuery)

FOUNDATION_EXPORT void OrgApacheLuceneSearchJoinToParentBlockJoinQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchJoinBitSetProducer_withOrgApacheLuceneSearchJoinScoreMode_(OrgApacheLuceneSearchJoinToParentBlockJoinQuery *self, OrgApacheLuceneSearchQuery *childQuery, id<OrgApacheLuceneSearchJoinBitSetProducer> parentsFilter, OrgApacheLuceneSearchJoinScoreMode *scoreMode);

FOUNDATION_EXPORT OrgApacheLuceneSearchJoinToParentBlockJoinQuery *new_OrgApacheLuceneSearchJoinToParentBlockJoinQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchJoinBitSetProducer_withOrgApacheLuceneSearchJoinScoreMode_(OrgApacheLuceneSearchQuery *childQuery, id<OrgApacheLuceneSearchJoinBitSetProducer> parentsFilter, OrgApacheLuceneSearchJoinScoreMode *scoreMode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchJoinToParentBlockJoinQuery *create_OrgApacheLuceneSearchJoinToParentBlockJoinQuery_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneSearchJoinBitSetProducer_withOrgApacheLuceneSearchJoinScoreMode_(OrgApacheLuceneSearchQuery *childQuery, id<OrgApacheLuceneSearchJoinBitSetProducer> parentsFilter, OrgApacheLuceneSearchJoinScoreMode *scoreMode);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchJoinToParentBlockJoinQuery)

#endif

#if !defined (OrgApacheLuceneSearchJoinToParentBlockJoinQuery_BlockJoinScorer_) && (INCLUDE_ALL_OrgApacheLuceneSearchJoinToParentBlockJoinQuery || defined(INCLUDE_OrgApacheLuceneSearchJoinToParentBlockJoinQuery_BlockJoinScorer))
#define OrgApacheLuceneSearchJoinToParentBlockJoinQuery_BlockJoinScorer_

#define RESTRICT_OrgApacheLuceneSearchScorer 1
#define INCLUDE_OrgApacheLuceneSearchScorer 1
#include "org/apache/lucene/search/Scorer.h"

@class IOSFloatArray;
@class IOSIntArray;
@class OrgApacheLuceneSearchExplanation;
@class OrgApacheLuceneSearchJoinScoreMode;
@class OrgApacheLuceneSearchWeight;
@class OrgApacheLuceneUtilBitSet;
@protocol JavaUtilCollection;

@interface OrgApacheLuceneSearchJoinToParentBlockJoinQuery_BlockJoinScorer : OrgApacheLuceneSearchScorer

#pragma mark Public

- (instancetype __nonnull)initWithOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)weight
                              withOrgApacheLuceneSearchScorer:(OrgApacheLuceneSearchScorer *)childScorer
                                withOrgApacheLuceneUtilBitSet:(OrgApacheLuceneUtilBitSet *)parentBits
                                                      withInt:(jint)firstChildDoc
                       withOrgApacheLuceneSearchJoinScoreMode:(OrgApacheLuceneSearchJoinScoreMode *)scoreMode;

- (jint)advanceWithInt:(jint)parentTarget;

- (jlong)cost;

- (jint)docID;

- (OrgApacheLuceneSearchExplanation *)explainWithInt:(jint)docBase;

- (jint)freq;

- (id<JavaUtilCollection>)getChildren;

- (jint)nextDoc;

- (jfloat)score;

/*!
 @brief Instructs this scorer to keep track of the child docIds and score ids for retrieval purposes.
 */
- (void)trackPendingChildHits;

#pragma mark Package-Private

- (jint)getChildCount;

- (jint)getParentDoc;

- (IOSIntArray *)swapChildDocsWithIntArray:(IOSIntArray *)other;

- (IOSFloatArray *)swapChildScoresWithFloatArray:(IOSFloatArray *)other;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithOrgApacheLuceneSearchWeight:(OrgApacheLuceneSearchWeight *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchJoinToParentBlockJoinQuery_BlockJoinScorer)

FOUNDATION_EXPORT void OrgApacheLuceneSearchJoinToParentBlockJoinQuery_BlockJoinScorer_initWithOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchScorer_withOrgApacheLuceneUtilBitSet_withInt_withOrgApacheLuceneSearchJoinScoreMode_(OrgApacheLuceneSearchJoinToParentBlockJoinQuery_BlockJoinScorer *self, OrgApacheLuceneSearchWeight *weight, OrgApacheLuceneSearchScorer *childScorer, OrgApacheLuceneUtilBitSet *parentBits, jint firstChildDoc, OrgApacheLuceneSearchJoinScoreMode *scoreMode);

FOUNDATION_EXPORT OrgApacheLuceneSearchJoinToParentBlockJoinQuery_BlockJoinScorer *new_OrgApacheLuceneSearchJoinToParentBlockJoinQuery_BlockJoinScorer_initWithOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchScorer_withOrgApacheLuceneUtilBitSet_withInt_withOrgApacheLuceneSearchJoinScoreMode_(OrgApacheLuceneSearchWeight *weight, OrgApacheLuceneSearchScorer *childScorer, OrgApacheLuceneUtilBitSet *parentBits, jint firstChildDoc, OrgApacheLuceneSearchJoinScoreMode *scoreMode) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchJoinToParentBlockJoinQuery_BlockJoinScorer *create_OrgApacheLuceneSearchJoinToParentBlockJoinQuery_BlockJoinScorer_initWithOrgApacheLuceneSearchWeight_withOrgApacheLuceneSearchScorer_withOrgApacheLuceneUtilBitSet_withInt_withOrgApacheLuceneSearchJoinScoreMode_(OrgApacheLuceneSearchWeight *weight, OrgApacheLuceneSearchScorer *childScorer, OrgApacheLuceneUtilBitSet *parentBits, jint firstChildDoc, OrgApacheLuceneSearchJoinScoreMode *scoreMode);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchJoinToParentBlockJoinQuery_BlockJoinScorer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchJoinToParentBlockJoinQuery")
