//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./join/src/java/org/apache/lucene/search/join/BlockJoinSelector.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchJoinBlockJoinSelector")
#ifdef RESTRICT_OrgApacheLuceneSearchJoinBlockJoinSelector
#define INCLUDE_ALL_OrgApacheLuceneSearchJoinBlockJoinSelector 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchJoinBlockJoinSelector 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchJoinBlockJoinSelector

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchJoinBlockJoinSelector_) && (INCLUDE_ALL_OrgApacheLuceneSearchJoinBlockJoinSelector || defined(INCLUDE_OrgApacheLuceneSearchJoinBlockJoinSelector))
#define OrgApacheLuceneSearchJoinBlockJoinSelector_

@class OrgApacheLuceneIndexNumericDocValues;
@class OrgApacheLuceneIndexSortedDocValues;
@class OrgApacheLuceneIndexSortedNumericDocValues;
@class OrgApacheLuceneIndexSortedSetDocValues;
@class OrgApacheLuceneSearchJoinBlockJoinSelector_Type;
@class OrgApacheLuceneUtilBitSet;
@protocol OrgApacheLuceneUtilBits;

/*!
 @brief Select a value from a block of documents.
 */
@interface OrgApacheLuceneSearchJoinBlockJoinSelector : NSObject

#pragma mark Public

/*!
 @brief Return a <code>Bits</code> instance that returns true if, and only if, any of
   the children of the given parent document has a value.
 */
+ (id<OrgApacheLuceneUtilBits>)wrapWithOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)docsWithValue
                                 withOrgApacheLuceneUtilBitSet:(OrgApacheLuceneUtilBitSet *)parents
                                 withOrgApacheLuceneUtilBitSet:(OrgApacheLuceneUtilBitSet *)children;

/*!
 @brief Wraps the provided <code>NumericDocValues</code> in order to only select
   one value per parent among its <code>children</code> using the configured
   <code>selection</code> type.
 */
+ (OrgApacheLuceneIndexNumericDocValues *)wrapWithOrgApacheLuceneIndexNumericDocValues:(OrgApacheLuceneIndexNumericDocValues *)values
                                                           withOrgApacheLuceneUtilBits:(id<OrgApacheLuceneUtilBits>)docsWithValue
                                   withOrgApacheLuceneSearchJoinBlockJoinSelector_Type:(OrgApacheLuceneSearchJoinBlockJoinSelector_Type *)selection
                                                         withOrgApacheLuceneUtilBitSet:(OrgApacheLuceneUtilBitSet *)parents
                                                         withOrgApacheLuceneUtilBitSet:(OrgApacheLuceneUtilBitSet *)children;

/*!
 @brief Wraps the provided <code>SortedDocValues</code> in order to only select
   one value per parent among its <code>children</code> using the configured
   <code>selection</code> type.
 */
+ (OrgApacheLuceneIndexSortedDocValues *)wrapWithOrgApacheLuceneIndexSortedDocValues:(OrgApacheLuceneIndexSortedDocValues *)values
                                 withOrgApacheLuceneSearchJoinBlockJoinSelector_Type:(OrgApacheLuceneSearchJoinBlockJoinSelector_Type *)selection
                                                       withOrgApacheLuceneUtilBitSet:(OrgApacheLuceneUtilBitSet *)parents
                                                       withOrgApacheLuceneUtilBitSet:(OrgApacheLuceneUtilBitSet *)children;

/*!
 @brief Wraps the provided <code>SortedNumericDocValues</code> in order to only select
   one value per parent among its <code>children</code> using the configured
   <code>selection</code> type.
 */
+ (OrgApacheLuceneIndexNumericDocValues *)wrapWithOrgApacheLuceneIndexSortedNumericDocValues:(OrgApacheLuceneIndexSortedNumericDocValues *)sortedNumerics
                                         withOrgApacheLuceneSearchJoinBlockJoinSelector_Type:(OrgApacheLuceneSearchJoinBlockJoinSelector_Type *)selection
                                                               withOrgApacheLuceneUtilBitSet:(OrgApacheLuceneUtilBitSet *)parents
                                                               withOrgApacheLuceneUtilBitSet:(OrgApacheLuceneUtilBitSet *)children;

/*!
 @brief Wraps the provided <code>SortedSetDocValues</code> in order to only select
   one value per parent among its <code>children</code> using the configured
   <code>selection</code> type.
 */
+ (OrgApacheLuceneIndexSortedDocValues *)wrapWithOrgApacheLuceneIndexSortedSetDocValues:(OrgApacheLuceneIndexSortedSetDocValues *)sortedSet
                                    withOrgApacheLuceneSearchJoinBlockJoinSelector_Type:(OrgApacheLuceneSearchJoinBlockJoinSelector_Type *)selection
                                                          withOrgApacheLuceneUtilBitSet:(OrgApacheLuceneUtilBitSet *)parents
                                                          withOrgApacheLuceneUtilBitSet:(OrgApacheLuceneUtilBitSet *)children;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchJoinBlockJoinSelector)

FOUNDATION_EXPORT id<OrgApacheLuceneUtilBits> OrgApacheLuceneSearchJoinBlockJoinSelector_wrapWithOrgApacheLuceneUtilBits_withOrgApacheLuceneUtilBitSet_withOrgApacheLuceneUtilBitSet_(id<OrgApacheLuceneUtilBits> docsWithValue, OrgApacheLuceneUtilBitSet *parents, OrgApacheLuceneUtilBitSet *children);

FOUNDATION_EXPORT OrgApacheLuceneIndexSortedDocValues *OrgApacheLuceneSearchJoinBlockJoinSelector_wrapWithOrgApacheLuceneIndexSortedSetDocValues_withOrgApacheLuceneSearchJoinBlockJoinSelector_Type_withOrgApacheLuceneUtilBitSet_withOrgApacheLuceneUtilBitSet_(OrgApacheLuceneIndexSortedSetDocValues *sortedSet, OrgApacheLuceneSearchJoinBlockJoinSelector_Type *selection, OrgApacheLuceneUtilBitSet *parents, OrgApacheLuceneUtilBitSet *children);

FOUNDATION_EXPORT OrgApacheLuceneIndexSortedDocValues *OrgApacheLuceneSearchJoinBlockJoinSelector_wrapWithOrgApacheLuceneIndexSortedDocValues_withOrgApacheLuceneSearchJoinBlockJoinSelector_Type_withOrgApacheLuceneUtilBitSet_withOrgApacheLuceneUtilBitSet_(OrgApacheLuceneIndexSortedDocValues *values, OrgApacheLuceneSearchJoinBlockJoinSelector_Type *selection, OrgApacheLuceneUtilBitSet *parents, OrgApacheLuceneUtilBitSet *children);

FOUNDATION_EXPORT OrgApacheLuceneIndexNumericDocValues *OrgApacheLuceneSearchJoinBlockJoinSelector_wrapWithOrgApacheLuceneIndexSortedNumericDocValues_withOrgApacheLuceneSearchJoinBlockJoinSelector_Type_withOrgApacheLuceneUtilBitSet_withOrgApacheLuceneUtilBitSet_(OrgApacheLuceneIndexSortedNumericDocValues *sortedNumerics, OrgApacheLuceneSearchJoinBlockJoinSelector_Type *selection, OrgApacheLuceneUtilBitSet *parents, OrgApacheLuceneUtilBitSet *children);

FOUNDATION_EXPORT OrgApacheLuceneIndexNumericDocValues *OrgApacheLuceneSearchJoinBlockJoinSelector_wrapWithOrgApacheLuceneIndexNumericDocValues_withOrgApacheLuceneUtilBits_withOrgApacheLuceneSearchJoinBlockJoinSelector_Type_withOrgApacheLuceneUtilBitSet_withOrgApacheLuceneUtilBitSet_(OrgApacheLuceneIndexNumericDocValues *values, id<OrgApacheLuceneUtilBits> docsWithValue, OrgApacheLuceneSearchJoinBlockJoinSelector_Type *selection, OrgApacheLuceneUtilBitSet *parents, OrgApacheLuceneUtilBitSet *children);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchJoinBlockJoinSelector)

#endif

#if !defined (OrgApacheLuceneSearchJoinBlockJoinSelector_Type_) && (INCLUDE_ALL_OrgApacheLuceneSearchJoinBlockJoinSelector || defined(INCLUDE_OrgApacheLuceneSearchJoinBlockJoinSelector_Type))
#define OrgApacheLuceneSearchJoinBlockJoinSelector_Type_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, OrgApacheLuceneSearchJoinBlockJoinSelector_Type_Enum) {
  OrgApacheLuceneSearchJoinBlockJoinSelector_Type_Enum_MIN = 0,
  OrgApacheLuceneSearchJoinBlockJoinSelector_Type_Enum_MAX = 1,
};

/*!
 @brief Type of selection to perform.If none of the documents in the block have
   a value then no value will be selected.
 */
@interface OrgApacheLuceneSearchJoinBlockJoinSelector_Type : JavaLangEnum

@property (readonly, class, nonnull) OrgApacheLuceneSearchJoinBlockJoinSelector_Type *MIN NS_SWIFT_NAME(MIN);
@property (readonly, class, nonnull) OrgApacheLuceneSearchJoinBlockJoinSelector_Type *MAX NS_SWIFT_NAME(MAX);
#pragma mark Public

+ (OrgApacheLuceneSearchJoinBlockJoinSelector_Type *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (OrgApacheLuceneSearchJoinBlockJoinSelector_Type_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneSearchJoinBlockJoinSelector_Type)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgApacheLuceneSearchJoinBlockJoinSelector_Type *OrgApacheLuceneSearchJoinBlockJoinSelector_Type_values_[];

/*!
 @brief Only consider the minimum value from the block when sorting.
 */
inline OrgApacheLuceneSearchJoinBlockJoinSelector_Type *OrgApacheLuceneSearchJoinBlockJoinSelector_Type_get_MIN(void);
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneSearchJoinBlockJoinSelector_Type, MIN)

/*!
 @brief Only consider the maximum value from the block when sorting.
 */
inline OrgApacheLuceneSearchJoinBlockJoinSelector_Type *OrgApacheLuceneSearchJoinBlockJoinSelector_Type_get_MAX(void);
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneSearchJoinBlockJoinSelector_Type, MAX)

FOUNDATION_EXPORT IOSObjectArray *OrgApacheLuceneSearchJoinBlockJoinSelector_Type_values(void);

FOUNDATION_EXPORT OrgApacheLuceneSearchJoinBlockJoinSelector_Type *OrgApacheLuceneSearchJoinBlockJoinSelector_Type_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgApacheLuceneSearchJoinBlockJoinSelector_Type *OrgApacheLuceneSearchJoinBlockJoinSelector_Type_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchJoinBlockJoinSelector_Type)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchJoinBlockJoinSelector")
