//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/payloads/PayloadFunction.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchPayloadsPayloadFunction")
#ifdef RESTRICT_OrgApacheLuceneSearchPayloadsPayloadFunction
#define INCLUDE_ALL_OrgApacheLuceneSearchPayloadsPayloadFunction 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchPayloadsPayloadFunction 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchPayloadsPayloadFunction

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchPayloadsPayloadFunction_) && (INCLUDE_ALL_OrgApacheLuceneSearchPayloadsPayloadFunction || defined(INCLUDE_OrgApacheLuceneSearchPayloadsPayloadFunction))
#define OrgApacheLuceneSearchPayloadsPayloadFunction_

@class OrgApacheLuceneSearchExplanation;

/*!
 @brief An abstract class that defines a way for Payload*Query instances to transform
  the cumulative effects of payload scores for a document.
 - seealso: org.apache.lucene.search.payloads.PayloadTermQueryfor more information
 */
@interface OrgApacheLuceneSearchPayloadsPayloadFunction : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Calculate the score up to this point for this doc and field
 @param docId The current doc
 @param field The field
 @param start The start position of the matching Span
 @param end The end position of the matching Span
 @param numPayloadsSeen The number of payloads seen so far
 @param currentScore The current score so far
 @param currentPayloadScore The score for the current payload
 @return The new current Score
 - seealso: org.apache.lucene.search.spans.Spans
 */
- (jfloat)currentScoreWithInt:(jint)docId
                 withNSString:(NSString *)field
                      withInt:(jint)start
                      withInt:(jint)end
                      withInt:(jint)numPayloadsSeen
                    withFloat:(jfloat)currentScore
                    withFloat:(jfloat)currentPayloadScore;

/*!
 @brief Calculate the final score for all the payloads seen so far for this doc/field
 @param docId The current doc
 @param field The current field
 @param numPayloadsSeen The total number of payloads seen on this document
 @param payloadScore The raw score for those payloads
 @return The final score for the payloads
 */
- (jfloat)docScoreWithInt:(jint)docId
             withNSString:(NSString *)field
                  withInt:(jint)numPayloadsSeen
                withFloat:(jfloat)payloadScore;

- (jboolean)isEqual:(id)o;

- (OrgApacheLuceneSearchExplanation *)explainWithInt:(jint)docId
                                        withNSString:(NSString *)field
                                             withInt:(jint)numPayloadsSeen
                                           withFloat:(jfloat)payloadScore;

- (NSUInteger)hash;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchPayloadsPayloadFunction)

FOUNDATION_EXPORT void OrgApacheLuceneSearchPayloadsPayloadFunction_init(OrgApacheLuceneSearchPayloadsPayloadFunction *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchPayloadsPayloadFunction)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchPayloadsPayloadFunction")
