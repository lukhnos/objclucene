//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/SortField.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchSortField")
#ifdef RESTRICT_OrgApacheLuceneSearchSortField
#define INCLUDE_ALL_OrgApacheLuceneSearchSortField 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchSortField 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchSortField

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchSortField_) && (INCLUDE_ALL_OrgApacheLuceneSearchSortField || defined(INCLUDE_OrgApacheLuceneSearchSortField))
#define OrgApacheLuceneSearchSortField_

@class OrgApacheLuceneSearchFieldComparator;
@class OrgApacheLuceneSearchFieldComparatorSource;
@class OrgApacheLuceneSearchIndexSearcher;
@class OrgApacheLuceneSearchSortField_Type;
@protocol JavaUtilComparator;

/*!
 @brief Stores information about how to sort documents by terms in an individual
  field.Fields must be indexed in order to sort by them.
 <p>Created: Feb 11, 2004 1:25:29 PM
 @since lucene 1.4
 - seealso: Sort
 */
@interface OrgApacheLuceneSearchSortField : NSObject {
 @public
  jboolean reverse_;
  id missingValue_;
}
@property (readonly, class, strong) OrgApacheLuceneSearchSortField *FIELD_SCORE NS_SWIFT_NAME(FIELD_SCORE);
@property (readonly, class, strong) OrgApacheLuceneSearchSortField *FIELD_DOC NS_SWIFT_NAME(FIELD_DOC);
@property (readonly, class, strong) id STRING_FIRST NS_SWIFT_NAME(STRING_FIRST);
@property (readonly, class, strong) id STRING_LAST NS_SWIFT_NAME(STRING_LAST);

#pragma mark Public

/*!
 @brief Creates a sort with a custom comparison function.
 @param field Name of field to sort by; cannot be  <code> null </code>
  .
 @param comparator Returns a comparator for sorting hits.
 */
- (instancetype __nonnull)initWithNSString:(NSString *)field
withOrgApacheLuceneSearchFieldComparatorSource:(OrgApacheLuceneSearchFieldComparatorSource *)comparator;

/*!
 @brief Creates a sort, possibly in reverse, with a custom comparison function.
 @param field Name of field to sort by; cannot be  <code> null </code>
  .
 @param comparator Returns a comparator for sorting hits.
 @param reverse True if natural order should be reversed.
 */
- (instancetype __nonnull)initWithNSString:(NSString *)field
withOrgApacheLuceneSearchFieldComparatorSource:(OrgApacheLuceneSearchFieldComparatorSource *)comparator
                               withBoolean:(jboolean)reverse;

/*!
 @brief Creates a sort by terms in the given field with the type of term
  values explicitly given.
 @param field Name of field to sort by.  Can be  <code> null </code>  if
                  <code> type </code>  is SCORE or DOC.
 @param type Type of values in the terms.
 */
- (instancetype __nonnull)initWithNSString:(NSString *)field
   withOrgApacheLuceneSearchSortField_Type:(OrgApacheLuceneSearchSortField_Type *)type;

/*!
 @brief Creates a sort, possibly in reverse, by terms in the given field with the
  type of term values explicitly given.
 @param field Name of field to sort by.  Can be  <code> null </code>  if
                  <code> type </code>  is SCORE or DOC.
 @param type Type of values in the terms.
 @param reverse True if natural order should be reversed.
 */
- (instancetype __nonnull)initWithNSString:(NSString *)field
   withOrgApacheLuceneSearchSortField_Type:(OrgApacheLuceneSearchSortField_Type *)type
                               withBoolean:(jboolean)reverse;

/*!
 @brief Returns true if <code>o</code> is equal to this.If a
   <code>FieldComparatorSource</code> was provided, it must properly
   implement equals (unless a singleton is always used).
 */
- (jboolean)isEqual:(id)o;

- (id<JavaUtilComparator>)getBytesComparator;

/*!
 @brief Returns the <code>FieldComparator</code> to use for
  sorting.
 @param numHits number of top hits the queue will store
 @param sortPos position of this SortField within <code>Sort</code>
  .  The comparator is primary if sortPos==0,
     secondary if sortPos==1, etc.  Some comparators can    optimize themselves when they are the primary sort.
 @return <code>FieldComparator</code> to use when sorting
 */
- (OrgApacheLuceneSearchFieldComparator *)getComparatorWithInt:(jint)numHits
                                                       withInt:(jint)sortPos;

/*!
 @brief Returns the <code>FieldComparatorSource</code> used for
  custom sorting
 */
- (OrgApacheLuceneSearchFieldComparatorSource *)getComparatorSource;

/*!
 @brief Returns the name of the field.Could return <code>null</code>
  if the sort is by SCORE or DOC.
 @return Name of field, possibly <code>null</code>.
 */
- (NSString *)getField;

/*!
 @brief Returns whether the sort should be reversed.
 @return True if natural order should be reversed.
 */
- (jboolean)getReverse;

/*!
 @brief Returns the type of contents in the field.
 @return One of the constants SCORE, DOC, STRING, INT or FLOAT.
 */
- (OrgApacheLuceneSearchSortField_Type *)getType;

/*!
 @brief Returns true if <code>o</code> is equal to this.If a
   <code>FieldComparatorSource</code> was provided, it must properly
   implement hashCode (unless a singleton is always
   used).
 */
- (NSUInteger)hash;

/*!
 @brief Whether the relevance score is needed to sort documents.
 */
- (jboolean)needsScores;

/*!
 @brief Rewrites this SortField, returning a new SortField if a change is made.
 Subclasses should override this define their rewriting behavior when this
  SortField is of type <code>SortField.Type.REWRITEABLE</code>
 @param searcher IndexSearcher to use during rewriting
 @return New rewritten SortField, or <code>this</code> if nothing has changed.
 @throw IOExceptionCan be thrown by the rewriting
 */
- (OrgApacheLuceneSearchSortField *)rewriteWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher;

- (void)setBytesComparatorWithJavaUtilComparator:(id<JavaUtilComparator>)b;

- (void)setMissingValueWithId:(id)missingValue;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneSearchSortField)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSortField, missingValue_, id)

/*!
 @brief Represents sorting by document score (relevance).
 */
inline OrgApacheLuceneSearchSortField *OrgApacheLuceneSearchSortField_get_FIELD_SCORE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneSearchSortField *OrgApacheLuceneSearchSortField_FIELD_SCORE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneSearchSortField, FIELD_SCORE, OrgApacheLuceneSearchSortField *)

/*!
 @brief Represents sorting by document number (index order).
 */
inline OrgApacheLuceneSearchSortField *OrgApacheLuceneSearchSortField_get_FIELD_DOC(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneSearchSortField *OrgApacheLuceneSearchSortField_FIELD_DOC;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneSearchSortField, FIELD_DOC, OrgApacheLuceneSearchSortField *)

/*!
 @brief Pass this to <code>setMissingValue</code> to have missing
   string values sort first.
 */
inline id OrgApacheLuceneSearchSortField_get_STRING_FIRST(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id OrgApacheLuceneSearchSortField_STRING_FIRST;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneSearchSortField, STRING_FIRST, id)

/*!
 @brief Pass this to <code>setMissingValue</code> to have missing
   string values sort last.
 */
inline id OrgApacheLuceneSearchSortField_get_STRING_LAST(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id OrgApacheLuceneSearchSortField_STRING_LAST;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneSearchSortField, STRING_LAST, id)

FOUNDATION_EXPORT void OrgApacheLuceneSearchSortField_initWithNSString_withOrgApacheLuceneSearchSortField_Type_(OrgApacheLuceneSearchSortField *self, NSString *field, OrgApacheLuceneSearchSortField_Type *type);

FOUNDATION_EXPORT OrgApacheLuceneSearchSortField *new_OrgApacheLuceneSearchSortField_initWithNSString_withOrgApacheLuceneSearchSortField_Type_(NSString *field, OrgApacheLuceneSearchSortField_Type *type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchSortField *create_OrgApacheLuceneSearchSortField_initWithNSString_withOrgApacheLuceneSearchSortField_Type_(NSString *field, OrgApacheLuceneSearchSortField_Type *type);

FOUNDATION_EXPORT void OrgApacheLuceneSearchSortField_initWithNSString_withOrgApacheLuceneSearchSortField_Type_withBoolean_(OrgApacheLuceneSearchSortField *self, NSString *field, OrgApacheLuceneSearchSortField_Type *type, jboolean reverse);

FOUNDATION_EXPORT OrgApacheLuceneSearchSortField *new_OrgApacheLuceneSearchSortField_initWithNSString_withOrgApacheLuceneSearchSortField_Type_withBoolean_(NSString *field, OrgApacheLuceneSearchSortField_Type *type, jboolean reverse) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchSortField *create_OrgApacheLuceneSearchSortField_initWithNSString_withOrgApacheLuceneSearchSortField_Type_withBoolean_(NSString *field, OrgApacheLuceneSearchSortField_Type *type, jboolean reverse);

FOUNDATION_EXPORT void OrgApacheLuceneSearchSortField_initWithNSString_withOrgApacheLuceneSearchFieldComparatorSource_(OrgApacheLuceneSearchSortField *self, NSString *field, OrgApacheLuceneSearchFieldComparatorSource *comparator);

FOUNDATION_EXPORT OrgApacheLuceneSearchSortField *new_OrgApacheLuceneSearchSortField_initWithNSString_withOrgApacheLuceneSearchFieldComparatorSource_(NSString *field, OrgApacheLuceneSearchFieldComparatorSource *comparator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchSortField *create_OrgApacheLuceneSearchSortField_initWithNSString_withOrgApacheLuceneSearchFieldComparatorSource_(NSString *field, OrgApacheLuceneSearchFieldComparatorSource *comparator);

FOUNDATION_EXPORT void OrgApacheLuceneSearchSortField_initWithNSString_withOrgApacheLuceneSearchFieldComparatorSource_withBoolean_(OrgApacheLuceneSearchSortField *self, NSString *field, OrgApacheLuceneSearchFieldComparatorSource *comparator, jboolean reverse);

FOUNDATION_EXPORT OrgApacheLuceneSearchSortField *new_OrgApacheLuceneSearchSortField_initWithNSString_withOrgApacheLuceneSearchFieldComparatorSource_withBoolean_(NSString *field, OrgApacheLuceneSearchFieldComparatorSource *comparator, jboolean reverse) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchSortField *create_OrgApacheLuceneSearchSortField_initWithNSString_withOrgApacheLuceneSearchFieldComparatorSource_withBoolean_(NSString *field, OrgApacheLuceneSearchFieldComparatorSource *comparator, jboolean reverse);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSortField)

#endif

#if !defined (OrgApacheLuceneSearchSortField_Type_) && (INCLUDE_ALL_OrgApacheLuceneSearchSortField || defined(INCLUDE_OrgApacheLuceneSearchSortField_Type))
#define OrgApacheLuceneSearchSortField_Type_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, OrgApacheLuceneSearchSortField_Type_Enum) {
  OrgApacheLuceneSearchSortField_Type_Enum_SCORE = 0,
  OrgApacheLuceneSearchSortField_Type_Enum_DOC = 1,
  OrgApacheLuceneSearchSortField_Type_Enum_STRING = 2,
  OrgApacheLuceneSearchSortField_Type_Enum_INT = 3,
  OrgApacheLuceneSearchSortField_Type_Enum_FLOAT = 4,
  OrgApacheLuceneSearchSortField_Type_Enum_LONG = 5,
  OrgApacheLuceneSearchSortField_Type_Enum_DOUBLE = 6,
  OrgApacheLuceneSearchSortField_Type_Enum_CUSTOM = 7,
  OrgApacheLuceneSearchSortField_Type_Enum_STRING_VAL = 8,
  OrgApacheLuceneSearchSortField_Type_Enum_BYTES = 9,
  OrgApacheLuceneSearchSortField_Type_Enum_REWRITEABLE = 10,
};

/*!
 @brief Specifies the type of the terms to be sorted, or special types such as CUSTOM
 */
@interface OrgApacheLuceneSearchSortField_Type : JavaLangEnum

@property (readonly, class, nonnull) OrgApacheLuceneSearchSortField_Type *SCORE NS_SWIFT_NAME(SCORE);
@property (readonly, class, nonnull) OrgApacheLuceneSearchSortField_Type *DOC NS_SWIFT_NAME(DOC);
@property (readonly, class, nonnull) OrgApacheLuceneSearchSortField_Type *STRING NS_SWIFT_NAME(STRING);
@property (readonly, class, nonnull) OrgApacheLuceneSearchSortField_Type *INT NS_SWIFT_NAME(INT);
@property (readonly, class, nonnull) OrgApacheLuceneSearchSortField_Type *FLOAT NS_SWIFT_NAME(FLOAT);
@property (readonly, class, nonnull) OrgApacheLuceneSearchSortField_Type *LONG NS_SWIFT_NAME(LONG);
@property (readonly, class, nonnull) OrgApacheLuceneSearchSortField_Type *DOUBLE NS_SWIFT_NAME(DOUBLE);
@property (readonly, class, nonnull) OrgApacheLuceneSearchSortField_Type *CUSTOM NS_SWIFT_NAME(CUSTOM);
@property (readonly, class, nonnull) OrgApacheLuceneSearchSortField_Type *STRING_VAL NS_SWIFT_NAME(STRING_VAL);
@property (readonly, class, nonnull) OrgApacheLuceneSearchSortField_Type *BYTES NS_SWIFT_NAME(BYTES);
@property (readonly, class, nonnull) OrgApacheLuceneSearchSortField_Type *REWRITEABLE NS_SWIFT_NAME(REWRITEABLE);
#pragma mark Public

+ (OrgApacheLuceneSearchSortField_Type *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (OrgApacheLuceneSearchSortField_Type_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneSearchSortField_Type)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgApacheLuceneSearchSortField_Type *OrgApacheLuceneSearchSortField_Type_values_[];

/*!
 @brief Sort by document score (relevance).Sort values are Float and higher
  values are at the front.
 */
inline OrgApacheLuceneSearchSortField_Type *OrgApacheLuceneSearchSortField_Type_get_SCORE(void);
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneSearchSortField_Type, SCORE)

/*!
 @brief Sort by document number (index order).Sort values are Integer and lower
  values are at the front.
 */
inline OrgApacheLuceneSearchSortField_Type *OrgApacheLuceneSearchSortField_Type_get_DOC(void);
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneSearchSortField_Type, DOC)

/*!
 @brief Sort using term values as Strings.Sort values are String and lower
  values are at the front.
 */
inline OrgApacheLuceneSearchSortField_Type *OrgApacheLuceneSearchSortField_Type_get_STRING(void);
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneSearchSortField_Type, STRING)

/*!
 @brief Sort using term values as encoded Integers.Sort values are Integer and
  lower values are at the front.
 */
inline OrgApacheLuceneSearchSortField_Type *OrgApacheLuceneSearchSortField_Type_get_INT(void);
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneSearchSortField_Type, INT)

/*!
 @brief Sort using term values as encoded Floats.Sort values are Float and
  lower values are at the front.
 */
inline OrgApacheLuceneSearchSortField_Type *OrgApacheLuceneSearchSortField_Type_get_FLOAT(void);
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneSearchSortField_Type, FLOAT)

/*!
 @brief Sort using term values as encoded Longs.Sort values are Long and
  lower values are at the front.
 */
inline OrgApacheLuceneSearchSortField_Type *OrgApacheLuceneSearchSortField_Type_get_LONG(void);
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneSearchSortField_Type, LONG)

/*!
 @brief Sort using term values as encoded Doubles.Sort values are Double and
  lower values are at the front.
 */
inline OrgApacheLuceneSearchSortField_Type *OrgApacheLuceneSearchSortField_Type_get_DOUBLE(void);
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneSearchSortField_Type, DOUBLE)

/*!
 @brief Sort using a custom Comparator.Sort values are any Comparable and
  sorting is done according to natural order.
 */
inline OrgApacheLuceneSearchSortField_Type *OrgApacheLuceneSearchSortField_Type_get_CUSTOM(void);
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneSearchSortField_Type, CUSTOM)

/*!
 @brief Sort using term values as Strings, but comparing by
  value (using String.compareTo) for all comparisons.
 This is typically slower than <code>STRING</code>, which
  uses ordinals to do the sorting.
 */
inline OrgApacheLuceneSearchSortField_Type *OrgApacheLuceneSearchSortField_Type_get_STRING_VAL(void);
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneSearchSortField_Type, STRING_VAL)

/*!
 @brief Sort use byte[] index values.
 */
inline OrgApacheLuceneSearchSortField_Type *OrgApacheLuceneSearchSortField_Type_get_BYTES(void);
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneSearchSortField_Type, BYTES)

/*!
 @brief Force rewriting of SortField using <code>SortField.rewrite(IndexSearcher)</code>
  before it can be used for sorting
 */
inline OrgApacheLuceneSearchSortField_Type *OrgApacheLuceneSearchSortField_Type_get_REWRITEABLE(void);
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneSearchSortField_Type, REWRITEABLE)

FOUNDATION_EXPORT IOSObjectArray *OrgApacheLuceneSearchSortField_Type_values(void);

FOUNDATION_EXPORT OrgApacheLuceneSearchSortField_Type *OrgApacheLuceneSearchSortField_Type_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgApacheLuceneSearchSortField_Type *OrgApacheLuceneSearchSortField_Type_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSortField_Type)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchSortField")
