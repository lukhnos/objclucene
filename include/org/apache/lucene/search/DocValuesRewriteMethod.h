//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/DocValuesRewriteMethod.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchDocValuesRewriteMethod")
#ifdef RESTRICT_OrgApacheLuceneSearchDocValuesRewriteMethod
#define INCLUDE_ALL_OrgApacheLuceneSearchDocValuesRewriteMethod 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchDocValuesRewriteMethod 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchDocValuesRewriteMethod

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchDocValuesRewriteMethod_) && (INCLUDE_ALL_OrgApacheLuceneSearchDocValuesRewriteMethod || defined(INCLUDE_OrgApacheLuceneSearchDocValuesRewriteMethod))
#define OrgApacheLuceneSearchDocValuesRewriteMethod_

#define RESTRICT_OrgApacheLuceneSearchMultiTermQuery 1
#define INCLUDE_OrgApacheLuceneSearchMultiTermQuery_RewriteMethod 1
#include "org/apache/lucene/search/MultiTermQuery.h"

@class OrgApacheLuceneIndexIndexReader;
@class OrgApacheLuceneSearchMultiTermQuery;
@class OrgApacheLuceneSearchQuery;

/*!
 @brief Rewrites MultiTermQueries into a filter, using DocValues for term enumeration.
 <p>
  This can be used to perform these queries against an unindexed docvalues field.
 */
@interface OrgApacheLuceneSearchDocValuesRewriteMethod : OrgApacheLuceneSearchMultiTermQuery_RewriteMethod

#pragma mark Public

- (instancetype __nonnull)init;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                   withOrgApacheLuceneSearchMultiTermQuery:(OrgApacheLuceneSearchMultiTermQuery *)query;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchDocValuesRewriteMethod)

FOUNDATION_EXPORT void OrgApacheLuceneSearchDocValuesRewriteMethod_init(OrgApacheLuceneSearchDocValuesRewriteMethod *self);

FOUNDATION_EXPORT OrgApacheLuceneSearchDocValuesRewriteMethod *new_OrgApacheLuceneSearchDocValuesRewriteMethod_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchDocValuesRewriteMethod *create_OrgApacheLuceneSearchDocValuesRewriteMethod_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchDocValuesRewriteMethod)

#endif

#if !defined (OrgApacheLuceneSearchDocValuesRewriteMethod_MultiTermQueryDocValuesWrapper_) && (INCLUDE_ALL_OrgApacheLuceneSearchDocValuesRewriteMethod || defined(INCLUDE_OrgApacheLuceneSearchDocValuesRewriteMethod_MultiTermQueryDocValuesWrapper))
#define OrgApacheLuceneSearchDocValuesRewriteMethod_MultiTermQueryDocValuesWrapper_

#define RESTRICT_OrgApacheLuceneSearchQuery 1
#define INCLUDE_OrgApacheLuceneSearchQuery 1
#include "org/apache/lucene/search/Query.h"

@class OrgApacheLuceneSearchIndexSearcher;
@class OrgApacheLuceneSearchMultiTermQuery;
@class OrgApacheLuceneSearchWeight;

@interface OrgApacheLuceneSearchDocValuesRewriteMethod_MultiTermQueryDocValuesWrapper : OrgApacheLuceneSearchQuery {
 @public
  OrgApacheLuceneSearchMultiTermQuery *query_;
}

#pragma mark Public

- (OrgApacheLuceneSearchWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                        withBoolean:(jboolean)needsScores;

- (jboolean)isEqual:(id)o;

/*!
 @brief Returns the field name for this query
 */
- (NSString *)getField;

- (NSUInteger)hash;

- (NSString *)toStringWithNSString:(NSString *)field;

#pragma mark Protected

/*!
 @brief Wrap a <code>MultiTermQuery</code> as a Filter.
 */
- (instancetype __nonnull)initWithOrgApacheLuceneSearchMultiTermQuery:(OrgApacheLuceneSearchMultiTermQuery *)query;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchDocValuesRewriteMethod_MultiTermQueryDocValuesWrapper)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchDocValuesRewriteMethod_MultiTermQueryDocValuesWrapper, query_, OrgApacheLuceneSearchMultiTermQuery *)

FOUNDATION_EXPORT void OrgApacheLuceneSearchDocValuesRewriteMethod_MultiTermQueryDocValuesWrapper_initWithOrgApacheLuceneSearchMultiTermQuery_(OrgApacheLuceneSearchDocValuesRewriteMethod_MultiTermQueryDocValuesWrapper *self, OrgApacheLuceneSearchMultiTermQuery *query);

FOUNDATION_EXPORT OrgApacheLuceneSearchDocValuesRewriteMethod_MultiTermQueryDocValuesWrapper *new_OrgApacheLuceneSearchDocValuesRewriteMethod_MultiTermQueryDocValuesWrapper_initWithOrgApacheLuceneSearchMultiTermQuery_(OrgApacheLuceneSearchMultiTermQuery *query) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchDocValuesRewriteMethod_MultiTermQueryDocValuesWrapper *create_OrgApacheLuceneSearchDocValuesRewriteMethod_MultiTermQueryDocValuesWrapper_initWithOrgApacheLuceneSearchMultiTermQuery_(OrgApacheLuceneSearchMultiTermQuery *query);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchDocValuesRewriteMethod_MultiTermQueryDocValuesWrapper)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchDocValuesRewriteMethod")
