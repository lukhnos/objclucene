//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/QueryRescorer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchQueryRescorer")
#ifdef RESTRICT_OrgApacheLuceneSearchQueryRescorer
#define INCLUDE_ALL_OrgApacheLuceneSearchQueryRescorer 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchQueryRescorer 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchQueryRescorer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchQueryRescorer_) && (INCLUDE_ALL_OrgApacheLuceneSearchQueryRescorer || defined(INCLUDE_OrgApacheLuceneSearchQueryRescorer))
#define OrgApacheLuceneSearchQueryRescorer_

#define RESTRICT_OrgApacheLuceneSearchRescorer 1
#define INCLUDE_OrgApacheLuceneSearchRescorer 1
#include "org/apache/lucene/search/Rescorer.h"

@class OrgApacheLuceneSearchExplanation;
@class OrgApacheLuceneSearchIndexSearcher;
@class OrgApacheLuceneSearchQuery;
@class OrgApacheLuceneSearchTopDocs;

/*!
 @brief A <code>Rescorer</code> that uses a provided Query to assign
   scores to the first-pass hits.
 */
@interface OrgApacheLuceneSearchQueryRescorer : OrgApacheLuceneSearchRescorer

#pragma mark Public

/*!
 @brief Sole constructor, passing the 2nd pass query to
   assign scores to the 1st pass hits.
 */
- (instancetype __nonnull)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query;

- (OrgApacheLuceneSearchExplanation *)explainWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                               withOrgApacheLuceneSearchExplanation:(OrgApacheLuceneSearchExplanation *)firstPassExplanation
                                                                            withInt:(jint)docID;

- (OrgApacheLuceneSearchTopDocs *)rescoreWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                               withOrgApacheLuceneSearchTopDocs:(OrgApacheLuceneSearchTopDocs *)firstPassTopDocs
                                                                        withInt:(jint)topN;

/*!
 @brief Sugar API, calling {#rescore} using a simple linear
   combination of firstPassScore + weight * secondPassScore
 */
+ (OrgApacheLuceneSearchTopDocs *)rescoreWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                               withOrgApacheLuceneSearchTopDocs:(OrgApacheLuceneSearchTopDocs *)topDocs
                                                 withOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
                                                                     withDouble:(jdouble)weight
                                                                        withInt:(jint)topN;

#pragma mark Protected

/*!
 @brief Implement this in a subclass to combine the first pass and
  second pass scores.If secondPassMatches is false then
  the second pass query failed to match a hit from the
  first pass query, and you should ignore the
  secondPassScore.
 */
- (jfloat)combineWithFloat:(jfloat)firstPassScore
               withBoolean:(jboolean)secondPassMatches
                 withFloat:(jfloat)secondPassScore;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchQueryRescorer)

FOUNDATION_EXPORT void OrgApacheLuceneSearchQueryRescorer_initWithOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchQueryRescorer *self, OrgApacheLuceneSearchQuery *query);

FOUNDATION_EXPORT OrgApacheLuceneSearchTopDocs *OrgApacheLuceneSearchQueryRescorer_rescoreWithOrgApacheLuceneSearchIndexSearcher_withOrgApacheLuceneSearchTopDocs_withOrgApacheLuceneSearchQuery_withDouble_withInt_(OrgApacheLuceneSearchIndexSearcher *searcher, OrgApacheLuceneSearchTopDocs *topDocs, OrgApacheLuceneSearchQuery *query, jdouble weight, jint topN);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchQueryRescorer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchQueryRescorer")
