//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/MultiPhraseQuery.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchMultiPhraseQuery")
#ifdef RESTRICT_OrgApacheLuceneSearchMultiPhraseQuery
#define INCLUDE_ALL_OrgApacheLuceneSearchMultiPhraseQuery 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchMultiPhraseQuery 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchMultiPhraseQuery

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchMultiPhraseQuery_) && (INCLUDE_ALL_OrgApacheLuceneSearchMultiPhraseQuery || defined(INCLUDE_OrgApacheLuceneSearchMultiPhraseQuery))
#define OrgApacheLuceneSearchMultiPhraseQuery_

#define RESTRICT_OrgApacheLuceneSearchQuery 1
#define INCLUDE_OrgApacheLuceneSearchQuery 1
#include "org/apache/lucene/search/Query.h"

@class IOSIntArray;
@class IOSObjectArray;
@class OrgApacheLuceneIndexIndexReader;
@class OrgApacheLuceneIndexTerm;
@class OrgApacheLuceneSearchIndexSearcher;
@class OrgApacheLuceneSearchWeight;
@protocol JavaUtilList;

/*!
 @brief MultiPhraseQuery is a generalized version of PhraseQuery, with an added
  method <code>add(Term[])</code>.
 To use this class, to search for the phrase "Microsoft app*" first use
  add(Term) on the term "Microsoft", then find all terms that have "app" as
  prefix using IndexReader.terms(Term), and use MultiPhraseQuery.add(Term[]
  terms) to add them to the query.
 */
@interface OrgApacheLuceneSearchMultiPhraseQuery : OrgApacheLuceneSearchQuery

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Add a single term at the next position in the phrase.
 */
- (void)addWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term;

/*!
 @brief Add multiple terms at the next position in the phrase.Any of the terms
  may match.
 */
- (void)addWithOrgApacheLuceneIndexTermArray:(IOSObjectArray *)terms;

/*!
 @brief Allows to specify the relative position of terms within the phrase.
 */
- (void)addWithOrgApacheLuceneIndexTermArray:(IOSObjectArray *)terms
                                     withInt:(jint)position;

- (OrgApacheLuceneSearchWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                        withBoolean:(jboolean)needsScores;

/*!
 @brief Returns true if <code>o</code> is equal to this.
 */
- (jboolean)isEqual:(id)o;

/*!
 @brief Returns the relative positions of terms in this phrase.
 */
- (IOSIntArray *)getPositions;

/*!
 @brief Sets the phrase slop for this query.
 - seealso: PhraseQuery#getSlop()
 */
- (jint)getSlop;

/*!
 @brief Returns a List of the terms in the multiphrase.
 Do not modify the List or its contents.
 */
- (id<JavaUtilList>)getTermArrays;

/*!
 @brief Returns a hash code value for this object.
 */
- (NSUInteger)hash;

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader;

/*!
 @brief Sets the phrase slop for this query.
 - seealso: PhraseQuery#getSlop()
 */
- (void)setSlopWithInt:(jint)s;

/*!
 @brief Prints a user-readable version of this query.
 */
- (NSString *)toStringWithNSString:(NSString *)f;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchMultiPhraseQuery)

FOUNDATION_EXPORT void OrgApacheLuceneSearchMultiPhraseQuery_init(OrgApacheLuceneSearchMultiPhraseQuery *self);

FOUNDATION_EXPORT OrgApacheLuceneSearchMultiPhraseQuery *new_OrgApacheLuceneSearchMultiPhraseQuery_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchMultiPhraseQuery *create_OrgApacheLuceneSearchMultiPhraseQuery_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchMultiPhraseQuery)

#endif

#if !defined (OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_) && (INCLUDE_ALL_OrgApacheLuceneSearchMultiPhraseQuery || defined(INCLUDE_OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum))
#define OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_

#define RESTRICT_OrgApacheLuceneIndexPostingsEnum 1
#define INCLUDE_OrgApacheLuceneIndexPostingsEnum 1
#include "org/apache/lucene/index/PostingsEnum.h"

@class IOSObjectArray;
@class OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_DocsQueue;
@class OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_PositionsQueue;
@class OrgApacheLuceneUtilBytesRef;
@protocol JavaUtilCollection;

/*!
 @brief Takes the logical union of multiple PostingsEnum iterators.
 <p>
  Note: positions are merged during freq()
 */
@interface OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum : OrgApacheLuceneIndexPostingsEnum {
 @public
  /*!
   @brief queue ordered by docid
   */
  OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_DocsQueue *docsQueue_;
  /*!
   @brief cost of this enum: sum of its subs
   */
  jlong cost_;
  /*!
   @brief queue ordered by position for current doc
   */
  OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_PositionsQueue *posQueue_;
  /*!
   @brief current doc posQueue is working
   */
  jint posQueueDoc_;
  /*!
   @brief list of subs (unordered)
   */
  IOSObjectArray *subs_;
}

#pragma mark Public

- (jint)advanceWithInt:(jint)target;

- (jlong)cost;

- (jint)docID;

- (jint)endOffset;

- (jint)freq;

- (OrgApacheLuceneUtilBytesRef *)getPayload;

- (jint)nextDoc;

- (jint)nextPosition;

- (jint)startOffset;

#pragma mark Package-Private

- (instancetype __nonnull)initWithJavaUtilCollection:(id<JavaUtilCollection>)subs;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum, docsQueue_, OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_DocsQueue *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum, posQueue_, OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_PositionsQueue *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum, subs_, IOSObjectArray *)

FOUNDATION_EXPORT void OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_initWithJavaUtilCollection_(OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum *self, id<JavaUtilCollection> subs);

FOUNDATION_EXPORT OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum *new_OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_initWithJavaUtilCollection_(id<JavaUtilCollection> subs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum *create_OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_initWithJavaUtilCollection_(id<JavaUtilCollection> subs);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum)

#endif

#if !defined (OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_DocsQueue_) && (INCLUDE_ALL_OrgApacheLuceneSearchMultiPhraseQuery || defined(INCLUDE_OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_DocsQueue))
#define OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_DocsQueue_

#define RESTRICT_OrgApacheLuceneUtilPriorityQueue 1
#define INCLUDE_OrgApacheLuceneUtilPriorityQueue 1
#include "org/apache/lucene/util/PriorityQueue.h"

@class OrgApacheLuceneIndexPostingsEnum;

/*!
 @brief disjunction of postings ordered by docid.
 */
@interface OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_DocsQueue : OrgApacheLuceneUtilPriorityQueue

#pragma mark Public

- (OrgApacheLuceneIndexPostingsEnum *)addWithId:(OrgApacheLuceneIndexPostingsEnum *)arg0;

- (OrgApacheLuceneIndexPostingsEnum *)insertWithOverflowWithId:(OrgApacheLuceneIndexPostingsEnum *)arg0;

- (jboolean)lessThanWithId:(OrgApacheLuceneIndexPostingsEnum *)a
                    withId:(OrgApacheLuceneIndexPostingsEnum *)b;

- (OrgApacheLuceneIndexPostingsEnum *)pop;

- (OrgApacheLuceneIndexPostingsEnum *)top;

- (OrgApacheLuceneIndexPostingsEnum *)updateTop;

- (OrgApacheLuceneIndexPostingsEnum *)updateTopWithId:(OrgApacheLuceneIndexPostingsEnum *)arg0;

#pragma mark Protected

- (OrgApacheLuceneIndexPostingsEnum *)getSentinelObject;

#pragma mark Package-Private

- (instancetype __nonnull)initWithInt:(jint)size;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithInt:(jint)arg0
                          withBoolean:(jboolean)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_DocsQueue)

FOUNDATION_EXPORT void OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_DocsQueue_initWithInt_(OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_DocsQueue *self, jint size);

FOUNDATION_EXPORT OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_DocsQueue *new_OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_DocsQueue_initWithInt_(jint size) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_DocsQueue *create_OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_DocsQueue_initWithInt_(jint size);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_DocsQueue)

#endif

#if !defined (OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_PositionsQueue_) && (INCLUDE_ALL_OrgApacheLuceneSearchMultiPhraseQuery || defined(INCLUDE_OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_PositionsQueue))
#define OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_PositionsQueue_

/*!
 @brief queue of terms for a single document.its a sorted array of
  all the positions from all the postings
 */
@interface OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_PositionsQueue : NSObject

#pragma mark Package-Private

- (instancetype __nonnull)init;

- (void)addWithInt:(jint)i;

- (void)clear;

- (jint)next;

- (jint)size;

- (void)sort;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_PositionsQueue)

FOUNDATION_EXPORT void OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_PositionsQueue_init(OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_PositionsQueue *self);

FOUNDATION_EXPORT OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_PositionsQueue *new_OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_PositionsQueue_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_PositionsQueue *create_OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_PositionsQueue_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchMultiPhraseQuery_UnionPostingsEnum_PositionsQueue)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchMultiPhraseQuery")
