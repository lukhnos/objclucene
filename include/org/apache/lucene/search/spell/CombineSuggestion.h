//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./suggest/src/java/org/apache/lucene/search/spell/CombineSuggestion.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchSpellCombineSuggestion")
#ifdef RESTRICT_OrgApacheLuceneSearchSpellCombineSuggestion
#define INCLUDE_ALL_OrgApacheLuceneSearchSpellCombineSuggestion 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchSpellCombineSuggestion 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchSpellCombineSuggestion

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchSpellCombineSuggestion_) && (INCLUDE_ALL_OrgApacheLuceneSearchSpellCombineSuggestion || defined(INCLUDE_OrgApacheLuceneSearchSpellCombineSuggestion))
#define OrgApacheLuceneSearchSpellCombineSuggestion_

@class IOSIntArray;
@class OrgApacheLuceneSearchSpellSuggestWord;

/*!
 @brief <p>A suggestion generated by combining one or more original query terms</p>
 */
@interface OrgApacheLuceneSearchSpellCombineSuggestion : NSObject {
 @public
  /*!
   @brief <p>The indexes from the passed-in array of terms used to make this word combination</p>
   */
  IOSIntArray *originalTermIndexes_;
  /*!
   @brief <p>The word combination suggestion</p>
   */
  OrgApacheLuceneSearchSpellSuggestWord *suggestion_;
}

#pragma mark Public

/*!
 @brief Creates a new CombineSuggestion from a <code>suggestion</code> and
  an array of term ids (referencing the indexes to the original terms that
  form this combined suggestion)
 */
- (instancetype __nonnull)initWithOrgApacheLuceneSearchSpellSuggestWord:(OrgApacheLuceneSearchSpellSuggestWord *)suggestion
                                                           withIntArray:(IOSIntArray *)originalTermIndexes;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSpellCombineSuggestion)

J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSpellCombineSuggestion, originalTermIndexes_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneSearchSpellCombineSuggestion, suggestion_, OrgApacheLuceneSearchSpellSuggestWord *)

FOUNDATION_EXPORT void OrgApacheLuceneSearchSpellCombineSuggestion_initWithOrgApacheLuceneSearchSpellSuggestWord_withIntArray_(OrgApacheLuceneSearchSpellCombineSuggestion *self, OrgApacheLuceneSearchSpellSuggestWord *suggestion, IOSIntArray *originalTermIndexes);

FOUNDATION_EXPORT OrgApacheLuceneSearchSpellCombineSuggestion *new_OrgApacheLuceneSearchSpellCombineSuggestion_initWithOrgApacheLuceneSearchSpellSuggestWord_withIntArray_(OrgApacheLuceneSearchSpellSuggestWord *suggestion, IOSIntArray *originalTermIndexes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchSpellCombineSuggestion *create_OrgApacheLuceneSearchSpellCombineSuggestion_initWithOrgApacheLuceneSearchSpellSuggestWord_withIntArray_(OrgApacheLuceneSearchSpellSuggestWord *suggestion, IOSIntArray *originalTermIndexes);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSpellCombineSuggestion)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchSpellCombineSuggestion")
