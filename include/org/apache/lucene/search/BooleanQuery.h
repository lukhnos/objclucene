//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/BooleanQuery.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchBooleanQuery")
#ifdef RESTRICT_OrgApacheLuceneSearchBooleanQuery
#define INCLUDE_ALL_OrgApacheLuceneSearchBooleanQuery 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchBooleanQuery 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchBooleanQuery

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchBooleanQuery_) && (INCLUDE_ALL_OrgApacheLuceneSearchBooleanQuery || defined(INCLUDE_OrgApacheLuceneSearchBooleanQuery))
#define OrgApacheLuceneSearchBooleanQuery_

#define RESTRICT_OrgApacheLuceneSearchQuery 1
#define INCLUDE_OrgApacheLuceneSearchQuery 1
#include "org/apache/lucene/search/Query.h"

#define RESTRICT_JavaLangIterable 1
#define INCLUDE_JavaLangIterable 1
#include "java/lang/Iterable.h"

@class IOSObjectArray;
@class OrgApacheLuceneIndexIndexReader;
@class OrgApacheLuceneSearchBooleanClause;
@class OrgApacheLuceneSearchBooleanClause_Occur;
@class OrgApacheLuceneSearchIndexSearcher;
@class OrgApacheLuceneSearchWeight;
@protocol JavaUtilFunctionConsumer;
@protocol JavaUtilIterator;
@protocol JavaUtilList;
@protocol JavaUtilSpliterator;

/*!
 @brief A Query that matches documents matching boolean combinations of other
  queries, e.g.
 <code>TermQuery</code>s, <code>PhraseQuery</code>s or other
  BooleanQuerys.
 */
@interface OrgApacheLuceneSearchBooleanQuery : OrgApacheLuceneSearchQuery < JavaLangIterable >

#pragma mark Public

/*!
 @brief Constructs an empty boolean query.
 */
- (instancetype __nonnull)init;

/*!
 @brief Constructs an empty boolean query.
 <code>Similarity.coord(int,int)</code> may be disabled in scoring, as
  appropriate. For example, this score factor does not make sense for most
  automatically generated queries, like <code>WildcardQuery</code> and <code>FuzzyQuery</code>
 .
 @param disableCoord disables <code>Similarity.coord(int,int)</code>  in scoring.
 - seealso: Builder#setDisableCoord(boolean)
 */
- (instancetype __nonnull)initWithBoolean:(jboolean)disableCoord;

/*!
 @brief Adds a clause to a boolean query.
 @throw TooManyClausesif the new number of clauses exceeds the maximum clause number
 - seealso: #getMaxClauseCount()
 */
- (void)addWithOrgApacheLuceneSearchBooleanClause:(OrgApacheLuceneSearchBooleanClause *)clause;

/*!
 @brief Adds a clause to a boolean query.
 @throw TooManyClausesif the new number of clauses exceeds the maximum clause number
 - seealso: #getMaxClauseCount()
 */
- (void)addWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
withOrgApacheLuceneSearchBooleanClause_Occur:(OrgApacheLuceneSearchBooleanClause_Occur *)occur;

/*!
 @brief Return a list of the clauses of this <code>BooleanQuery</code>.
 */
- (id<JavaUtilList>)clauses;

- (OrgApacheLuceneSearchBooleanQuery *)java_clone;

- (OrgApacheLuceneSearchWeight *)createWeightWithOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher
                                                                        withBoolean:(jboolean)needsScores;

- (jboolean)isEqual:(id)o;

/*!
 @brief Returns the set of clauses in this query.
 */
- (IOSObjectArray *)getClauses;

/*!
 @brief Return the maximum number of clauses permitted, 1024 by default.
 Attempts to add more than the permitted number of clauses cause <code>TooManyClauses</code>
  to be thrown.
 - seealso: #setMaxClauseCount(int)
 */
+ (jint)getMaxClauseCount;

/*!
 @brief Gets the minimum number of the optional BooleanClauses
  which must be satisfied.
 */
- (jint)getMinimumNumberShouldMatch;

- (NSUInteger)hash;

/*!
 @brief Return whether the coord factor is disabled.
 */
- (jboolean)isCoordDisabled;

/*!
 @brief Returns an iterator on the clauses in this query.It implements the <code>Iterable</code> interface to
  make it possible to do: 
 <pre class="prettyprint">for (BooleanClause clause : booleanQuery) {}
@endcode
 */
- (id<JavaUtilIterator>)iterator;

- (OrgApacheLuceneSearchQuery *)rewriteWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader;

/*!
 @brief Set the maximum number of clauses permitted per BooleanQuery.
 Default value is 1024.
 */
+ (void)setMaxClauseCountWithInt:(jint)maxClauseCount;

/*!
 @brief Set the minimum number of matching SHOULD clauses.
 - seealso: #getMinimumNumberShouldMatch
 */
- (void)setMinimumNumberShouldMatchWithInt:(jint)min;

/*!
 @brief Prints a user-readable version of this query.
 */
- (NSString *)toStringWithNSString:(NSString *)field;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchBooleanQuery)

FOUNDATION_EXPORT jint OrgApacheLuceneSearchBooleanQuery_getMaxClauseCount(void);

FOUNDATION_EXPORT void OrgApacheLuceneSearchBooleanQuery_setMaxClauseCountWithInt_(jint maxClauseCount);

FOUNDATION_EXPORT void OrgApacheLuceneSearchBooleanQuery_init(OrgApacheLuceneSearchBooleanQuery *self);

FOUNDATION_EXPORT OrgApacheLuceneSearchBooleanQuery *new_OrgApacheLuceneSearchBooleanQuery_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchBooleanQuery *create_OrgApacheLuceneSearchBooleanQuery_init(void);

FOUNDATION_EXPORT void OrgApacheLuceneSearchBooleanQuery_initWithBoolean_(OrgApacheLuceneSearchBooleanQuery *self, jboolean disableCoord);

FOUNDATION_EXPORT OrgApacheLuceneSearchBooleanQuery *new_OrgApacheLuceneSearchBooleanQuery_initWithBoolean_(jboolean disableCoord) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchBooleanQuery *create_OrgApacheLuceneSearchBooleanQuery_initWithBoolean_(jboolean disableCoord);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchBooleanQuery)

#endif

#if !defined (OrgApacheLuceneSearchBooleanQuery_TooManyClauses_) && (INCLUDE_ALL_OrgApacheLuceneSearchBooleanQuery || defined(INCLUDE_OrgApacheLuceneSearchBooleanQuery_TooManyClauses))
#define OrgApacheLuceneSearchBooleanQuery_TooManyClauses_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@class JavaLangThrowable;

/*!
 @brief Thrown when an attempt is made to add more than <code>getMaxClauseCount()</code>
  clauses.This typically happens if
  a PrefixQuery, FuzzyQuery, WildcardQuery, or TermRangeQuery 
  is expanded to many terms during search.
 */
@interface OrgApacheLuceneSearchBooleanQuery_TooManyClauses : JavaLangRuntimeException

#pragma mark Public

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1
                               withBoolean:(jboolean)arg2
                               withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchBooleanQuery_TooManyClauses)

FOUNDATION_EXPORT void OrgApacheLuceneSearchBooleanQuery_TooManyClauses_init(OrgApacheLuceneSearchBooleanQuery_TooManyClauses *self);

FOUNDATION_EXPORT OrgApacheLuceneSearchBooleanQuery_TooManyClauses *new_OrgApacheLuceneSearchBooleanQuery_TooManyClauses_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchBooleanQuery_TooManyClauses *create_OrgApacheLuceneSearchBooleanQuery_TooManyClauses_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchBooleanQuery_TooManyClauses)

#endif

#if !defined (OrgApacheLuceneSearchBooleanQuery_Builder_) && (INCLUDE_ALL_OrgApacheLuceneSearchBooleanQuery || defined(INCLUDE_OrgApacheLuceneSearchBooleanQuery_Builder))
#define OrgApacheLuceneSearchBooleanQuery_Builder_

@class OrgApacheLuceneSearchBooleanClause;
@class OrgApacheLuceneSearchBooleanClause_Occur;
@class OrgApacheLuceneSearchBooleanQuery;
@class OrgApacheLuceneSearchQuery;

/*!
 @brief A builder for boolean queries.
 */
@interface OrgApacheLuceneSearchBooleanQuery_Builder : NSObject

#pragma mark Public

/*!
 @brief Sole constructor.
 */
- (instancetype __nonnull)init;

/*!
 @brief Add a clause to the <code>BooleanQuery</code>.
 */
- (OrgApacheLuceneSearchBooleanQuery_Builder *)addWithOrgApacheLuceneSearchBooleanClause:(OrgApacheLuceneSearchBooleanClause *)clause;

/*!
 @brief Add a clause to the <code>BooleanQuery</code>.
 @throw TooManyClausesif the new number of clauses exceeds the maximum clause number
 */
- (OrgApacheLuceneSearchBooleanQuery_Builder *)addWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
                                    withOrgApacheLuceneSearchBooleanClause_Occur:(OrgApacheLuceneSearchBooleanClause_Occur *)occur;

/*!
 @brief Create a new <code>BooleanQuery</code> based on the parameters that have
   been set on this builder.
 */
- (OrgApacheLuceneSearchBooleanQuery *)build;

/*!
 @brief <code>Similarity.coord(int,int)</code> may be disabled in scoring, as
  appropriate.For example, this score factor does not make sense for most
  automatically generated queries, like <code>WildcardQuery</code> and <code>FuzzyQuery</code>
 .
 */
- (OrgApacheLuceneSearchBooleanQuery_Builder *)setDisableCoordWithBoolean:(jboolean)disableCoord;

/*!
 @brief Specifies a minimum number of the optional BooleanClauses
  which must be satisfied.
 <p>
  By default no optional clauses are necessary for a match
  (unless there are no required clauses).  If this method is used,
  then the specified number of clauses is required. 
 </p>
  <p>
  Use of this method is totally independent of specifying that
  any specific clauses are required (or prohibited).  This number will
  only be compared against the number of matching optional clauses. 
 </p>
 @param min the number of optional clauses that must match
 */
- (OrgApacheLuceneSearchBooleanQuery_Builder *)setMinimumNumberShouldMatchWithInt:(jint)min;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchBooleanQuery_Builder)

FOUNDATION_EXPORT void OrgApacheLuceneSearchBooleanQuery_Builder_init(OrgApacheLuceneSearchBooleanQuery_Builder *self);

FOUNDATION_EXPORT OrgApacheLuceneSearchBooleanQuery_Builder *new_OrgApacheLuceneSearchBooleanQuery_Builder_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchBooleanQuery_Builder *create_OrgApacheLuceneSearchBooleanQuery_Builder_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchBooleanQuery_Builder)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchBooleanQuery")
