//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./highlighter/src/java/org/apache/lucene/search/highlight/SimpleSpanFragmenter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchHighlightSimpleSpanFragmenter")
#ifdef RESTRICT_OrgApacheLuceneSearchHighlightSimpleSpanFragmenter
#define INCLUDE_ALL_OrgApacheLuceneSearchHighlightSimpleSpanFragmenter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchHighlightSimpleSpanFragmenter 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchHighlightSimpleSpanFragmenter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchHighlightSimpleSpanFragmenter_) && (INCLUDE_ALL_OrgApacheLuceneSearchHighlightSimpleSpanFragmenter || defined(INCLUDE_OrgApacheLuceneSearchHighlightSimpleSpanFragmenter))
#define OrgApacheLuceneSearchHighlightSimpleSpanFragmenter_

#define RESTRICT_OrgApacheLuceneSearchHighlightFragmenter 1
#define INCLUDE_OrgApacheLuceneSearchHighlightFragmenter 1
#include "org/apache/lucene/search/highlight/Fragmenter.h"

@class OrgApacheLuceneAnalysisTokenStream;
@class OrgApacheLuceneSearchHighlightQueryScorer;

/*!
 @brief <code>Fragmenter</code> implementation which breaks text up into same-size
  fragments but does not split up <code>Spans</code>.This is a simple sample class.
 */
@interface OrgApacheLuceneSearchHighlightSimpleSpanFragmenter : NSObject < OrgApacheLuceneSearchHighlightFragmenter >

#pragma mark Public

/*!
 @param queryScorer QueryScorer that was used to score hits
 */
- (instancetype __nonnull)initWithOrgApacheLuceneSearchHighlightQueryScorer:(OrgApacheLuceneSearchHighlightQueryScorer *)queryScorer;

/*!
 @param queryScorer QueryScorer that was used to score hits
 @param fragmentSize size in bytes of each fragment
 */
- (instancetype __nonnull)initWithOrgApacheLuceneSearchHighlightQueryScorer:(OrgApacheLuceneSearchHighlightQueryScorer *)queryScorer
                                                                    withInt:(jint)fragmentSize;

- (jboolean)isNewFragment;

- (void)startWithNSString:(NSString *)originalText
withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)tokenStream;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchHighlightSimpleSpanFragmenter)

FOUNDATION_EXPORT void OrgApacheLuceneSearchHighlightSimpleSpanFragmenter_initWithOrgApacheLuceneSearchHighlightQueryScorer_(OrgApacheLuceneSearchHighlightSimpleSpanFragmenter *self, OrgApacheLuceneSearchHighlightQueryScorer *queryScorer);

FOUNDATION_EXPORT OrgApacheLuceneSearchHighlightSimpleSpanFragmenter *new_OrgApacheLuceneSearchHighlightSimpleSpanFragmenter_initWithOrgApacheLuceneSearchHighlightQueryScorer_(OrgApacheLuceneSearchHighlightQueryScorer *queryScorer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchHighlightSimpleSpanFragmenter *create_OrgApacheLuceneSearchHighlightSimpleSpanFragmenter_initWithOrgApacheLuceneSearchHighlightQueryScorer_(OrgApacheLuceneSearchHighlightQueryScorer *queryScorer);

FOUNDATION_EXPORT void OrgApacheLuceneSearchHighlightSimpleSpanFragmenter_initWithOrgApacheLuceneSearchHighlightQueryScorer_withInt_(OrgApacheLuceneSearchHighlightSimpleSpanFragmenter *self, OrgApacheLuceneSearchHighlightQueryScorer *queryScorer, jint fragmentSize);

FOUNDATION_EXPORT OrgApacheLuceneSearchHighlightSimpleSpanFragmenter *new_OrgApacheLuceneSearchHighlightSimpleSpanFragmenter_initWithOrgApacheLuceneSearchHighlightQueryScorer_withInt_(OrgApacheLuceneSearchHighlightQueryScorer *queryScorer, jint fragmentSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchHighlightSimpleSpanFragmenter *create_OrgApacheLuceneSearchHighlightSimpleSpanFragmenter_initWithOrgApacheLuceneSearchHighlightQueryScorer_withInt_(OrgApacheLuceneSearchHighlightQueryScorer *queryScorer, jint fragmentSize);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchHighlightSimpleSpanFragmenter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchHighlightSimpleSpanFragmenter")
