//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./highlighter/src/java/org/apache/lucene/search/highlight/OffsetLimitTokenFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchHighlightOffsetLimitTokenFilter")
#ifdef RESTRICT_OrgApacheLuceneSearchHighlightOffsetLimitTokenFilter
#define INCLUDE_ALL_OrgApacheLuceneSearchHighlightOffsetLimitTokenFilter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchHighlightOffsetLimitTokenFilter 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchHighlightOffsetLimitTokenFilter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchHighlightOffsetLimitTokenFilter_) && (INCLUDE_ALL_OrgApacheLuceneSearchHighlightOffsetLimitTokenFilter || defined(INCLUDE_OrgApacheLuceneSearchHighlightOffsetLimitTokenFilter))
#define OrgApacheLuceneSearchHighlightOffsetLimitTokenFilter_

#define RESTRICT_OrgApacheLuceneAnalysisTokenFilter 1
#define INCLUDE_OrgApacheLuceneAnalysisTokenFilter 1
#include "org/apache/lucene/analysis/TokenFilter.h"

@class OrgApacheLuceneAnalysisTokenStream;

/*!
 @brief This TokenFilter limits the number of tokens while indexing by adding up the
  current offset.
 */
@interface OrgApacheLuceneSearchHighlightOffsetLimitTokenFilter : OrgApacheLuceneAnalysisTokenFilter

#pragma mark Public

- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input
                                                             withInt:(jint)offsetLimit;

- (jboolean)incrementToken;

- (void)reset;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchHighlightOffsetLimitTokenFilter)

FOUNDATION_EXPORT void OrgApacheLuceneSearchHighlightOffsetLimitTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_withInt_(OrgApacheLuceneSearchHighlightOffsetLimitTokenFilter *self, OrgApacheLuceneAnalysisTokenStream *input, jint offsetLimit);

FOUNDATION_EXPORT OrgApacheLuceneSearchHighlightOffsetLimitTokenFilter *new_OrgApacheLuceneSearchHighlightOffsetLimitTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_withInt_(OrgApacheLuceneAnalysisTokenStream *input, jint offsetLimit) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchHighlightOffsetLimitTokenFilter *create_OrgApacheLuceneSearchHighlightOffsetLimitTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_withInt_(OrgApacheLuceneAnalysisTokenStream *input, jint offsetLimit);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchHighlightOffsetLimitTokenFilter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchHighlightOffsetLimitTokenFilter")
