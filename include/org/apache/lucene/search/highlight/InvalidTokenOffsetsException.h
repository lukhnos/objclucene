//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./highlighter/src/java/org/apache/lucene/search/highlight/InvalidTokenOffsetsException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchHighlightInvalidTokenOffsetsException")
#ifdef RESTRICT_OrgApacheLuceneSearchHighlightInvalidTokenOffsetsException
#define INCLUDE_ALL_OrgApacheLuceneSearchHighlightInvalidTokenOffsetsException 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchHighlightInvalidTokenOffsetsException 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchHighlightInvalidTokenOffsetsException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchHighlightInvalidTokenOffsetsException_) && (INCLUDE_ALL_OrgApacheLuceneSearchHighlightInvalidTokenOffsetsException || defined(INCLUDE_OrgApacheLuceneSearchHighlightInvalidTokenOffsetsException))
#define OrgApacheLuceneSearchHighlightInvalidTokenOffsetsException_

#define RESTRICT_JavaLangException 1
#define INCLUDE_JavaLangException 1
#include "java/lang/Exception.h"

@class JavaLangThrowable;

/*!
 @brief Exception thrown if TokenStream Tokens are incompatible with provided text
 */
@interface OrgApacheLuceneSearchHighlightInvalidTokenOffsetsException : JavaLangException

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)message;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1
                               withBoolean:(jboolean)arg2
                               withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchHighlightInvalidTokenOffsetsException)

FOUNDATION_EXPORT void OrgApacheLuceneSearchHighlightInvalidTokenOffsetsException_initWithNSString_(OrgApacheLuceneSearchHighlightInvalidTokenOffsetsException *self, NSString *message);

FOUNDATION_EXPORT OrgApacheLuceneSearchHighlightInvalidTokenOffsetsException *new_OrgApacheLuceneSearchHighlightInvalidTokenOffsetsException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchHighlightInvalidTokenOffsetsException *create_OrgApacheLuceneSearchHighlightInvalidTokenOffsetsException_initWithNSString_(NSString *message);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchHighlightInvalidTokenOffsetsException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchHighlightInvalidTokenOffsetsException")
