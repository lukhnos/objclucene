//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./highlighter/src/java/org/apache/lucene/search/highlight/QueryScorer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchHighlightQueryScorer")
#ifdef RESTRICT_OrgApacheLuceneSearchHighlightQueryScorer
#define INCLUDE_ALL_OrgApacheLuceneSearchHighlightQueryScorer 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchHighlightQueryScorer 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchHighlightQueryScorer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchHighlightQueryScorer_) && (INCLUDE_ALL_OrgApacheLuceneSearchHighlightQueryScorer || defined(INCLUDE_OrgApacheLuceneSearchHighlightQueryScorer))
#define OrgApacheLuceneSearchHighlightQueryScorer_

#define RESTRICT_OrgApacheLuceneSearchHighlightScorer 1
#define INCLUDE_OrgApacheLuceneSearchHighlightScorer 1
#include "org/apache/lucene/search/highlight/Scorer.h"

@class IOSObjectArray;
@class OrgApacheLuceneAnalysisTokenStream;
@class OrgApacheLuceneIndexIndexReader;
@class OrgApacheLuceneSearchHighlightTextFragment;
@class OrgApacheLuceneSearchHighlightWeightedSpanTerm;
@class OrgApacheLuceneSearchHighlightWeightedSpanTermExtractor;
@class OrgApacheLuceneSearchQuery;

/*!
 @brief <code>Scorer</code> implementation which scores text fragments by the number of
  unique query terms found.This class converts appropriate <code>Query</code>s to 
 <code>SpanQuery</code>s and attempts to score only those terms that participated in
  generating the 'hit' on the document.
 */
@interface OrgApacheLuceneSearchHighlightQueryScorer : NSObject < OrgApacheLuceneSearchHighlightScorer >

#pragma mark Public

/*!
 @param query Query to use for highlighting
 */
- (instancetype __nonnull)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query;

/*!
 @param query Query to use for highlighting
 @param field Field to highlight - pass null to ignore fields
 @param reader<code>IndexReader</code>  to use for quasi tf/idf scoring
 */
- (instancetype __nonnull)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
                         withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                withNSString:(NSString *)field;

/*!
 @param query to use for highlighting
 @param reader<code>IndexReader</code>  to use for quasi tf/idf scoring
 @param field to highlight - pass null to ignore fields
 */
- (instancetype __nonnull)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
                         withOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                withNSString:(NSString *)field
                                                withNSString:(NSString *)defaultField;

/*!
 @param query Query to use for highlighting
 @param field Field to highlight - pass null to ignore fields
 */
- (instancetype __nonnull)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
                                                withNSString:(NSString *)field;

/*!
 @param defaultField - The default field for queries with the field name unspecified
 */
- (instancetype __nonnull)initWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)query
                                                withNSString:(NSString *)field
                                                withNSString:(NSString *)defaultField;

/*!
 @param weightedTerms an array of pre-created <code>WeightedSpanTerm</code> s
 */
- (instancetype __nonnull)initWithOrgApacheLuceneSearchHighlightWeightedSpanTermArray:(IOSObjectArray *)weightedTerms;

- (jfloat)getFragmentScore;

/*!
 @return The highest weighted term (useful for passing to
          GradientFormatter to set top end of coloring scale).
 */
- (jfloat)getMaxTermWeight;

- (jfloat)getTokenScore;

/*!
 @brief Retrieve the <code>WeightedSpanTerm</code> for the specified token.Useful for passing
  Span information to a <code>Fragmenter</code>.
 @param token to get <code>WeightedSpanTerm</code>  for
 @return WeightedSpanTerm for token
 */
- (OrgApacheLuceneSearchHighlightWeightedSpanTerm *)getWeightedSpanTermWithNSString:(NSString *)token;

- (OrgApacheLuceneAnalysisTokenStream *)init__WithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)tokenStream OBJC_METHOD_FAMILY_NONE;

/*!
 @return true if multi-term queries should be expanded
 */
- (jboolean)isExpandMultiTermQuery;

/*!
 @brief Whether or not we should capture payloads in <code>MemoryIndex</code> at each position so that queries can access them.
 This does not apply to term vector based TokenStreams, which support payloads only when the term vector has them.
 */
- (jboolean)isUsePayloads;

/*!
 @brief Controls whether or not multi-term queries are expanded
  against a <code>MemoryIndex</code> <code>IndexReader</code>.
 @param expandMultiTermQuery true if multi-term queries should be expanded
 */
- (void)setExpandMultiTermQueryWithBoolean:(jboolean)expandMultiTermQuery;

- (void)setMaxDocCharsToAnalyzeWithInt:(jint)maxDocCharsToAnalyze;

- (void)setUsePayloadsWithBoolean:(jboolean)usePayloads;

/*!
 @brief By default, <code>TokenStream</code>s that are not of the type 
 <code>CachingTokenFilter</code> are wrapped in a <code>CachingTokenFilter</code> to
  ensure an efficient reset - if you are already using a different caching 
 <code>TokenStream</code> impl and you don't want it to be wrapped, set this to
  false.Note that term-vector based tokenstreams are detected and won't be
  wrapped either.
 */
- (void)setWrapIfNotCachingTokenFilterWithBoolean:(jboolean)wrap;

- (void)startFragmentWithOrgApacheLuceneSearchHighlightTextFragment:(OrgApacheLuceneSearchHighlightTextFragment *)newFragment;

#pragma mark Protected

- (OrgApacheLuceneSearchHighlightWeightedSpanTermExtractor *)newTermExtractorWithNSString:(NSString *)defaultField OBJC_METHOD_FAMILY_NONE;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchHighlightQueryScorer)

FOUNDATION_EXPORT void OrgApacheLuceneSearchHighlightQueryScorer_initWithOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchHighlightQueryScorer *self, OrgApacheLuceneSearchQuery *query);

FOUNDATION_EXPORT OrgApacheLuceneSearchHighlightQueryScorer *new_OrgApacheLuceneSearchHighlightQueryScorer_initWithOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchQuery *query) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchHighlightQueryScorer *create_OrgApacheLuceneSearchHighlightQueryScorer_initWithOrgApacheLuceneSearchQuery_(OrgApacheLuceneSearchQuery *query);

FOUNDATION_EXPORT void OrgApacheLuceneSearchHighlightQueryScorer_initWithOrgApacheLuceneSearchQuery_withNSString_(OrgApacheLuceneSearchHighlightQueryScorer *self, OrgApacheLuceneSearchQuery *query, NSString *field);

FOUNDATION_EXPORT OrgApacheLuceneSearchHighlightQueryScorer *new_OrgApacheLuceneSearchHighlightQueryScorer_initWithOrgApacheLuceneSearchQuery_withNSString_(OrgApacheLuceneSearchQuery *query, NSString *field) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchHighlightQueryScorer *create_OrgApacheLuceneSearchHighlightQueryScorer_initWithOrgApacheLuceneSearchQuery_withNSString_(OrgApacheLuceneSearchQuery *query, NSString *field);

FOUNDATION_EXPORT void OrgApacheLuceneSearchHighlightQueryScorer_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneIndexIndexReader_withNSString_(OrgApacheLuceneSearchHighlightQueryScorer *self, OrgApacheLuceneSearchQuery *query, OrgApacheLuceneIndexIndexReader *reader, NSString *field);

FOUNDATION_EXPORT OrgApacheLuceneSearchHighlightQueryScorer *new_OrgApacheLuceneSearchHighlightQueryScorer_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneIndexIndexReader_withNSString_(OrgApacheLuceneSearchQuery *query, OrgApacheLuceneIndexIndexReader *reader, NSString *field) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchHighlightQueryScorer *create_OrgApacheLuceneSearchHighlightQueryScorer_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneIndexIndexReader_withNSString_(OrgApacheLuceneSearchQuery *query, OrgApacheLuceneIndexIndexReader *reader, NSString *field);

FOUNDATION_EXPORT void OrgApacheLuceneSearchHighlightQueryScorer_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneIndexIndexReader_withNSString_withNSString_(OrgApacheLuceneSearchHighlightQueryScorer *self, OrgApacheLuceneSearchQuery *query, OrgApacheLuceneIndexIndexReader *reader, NSString *field, NSString *defaultField);

FOUNDATION_EXPORT OrgApacheLuceneSearchHighlightQueryScorer *new_OrgApacheLuceneSearchHighlightQueryScorer_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneIndexIndexReader_withNSString_withNSString_(OrgApacheLuceneSearchQuery *query, OrgApacheLuceneIndexIndexReader *reader, NSString *field, NSString *defaultField) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchHighlightQueryScorer *create_OrgApacheLuceneSearchHighlightQueryScorer_initWithOrgApacheLuceneSearchQuery_withOrgApacheLuceneIndexIndexReader_withNSString_withNSString_(OrgApacheLuceneSearchQuery *query, OrgApacheLuceneIndexIndexReader *reader, NSString *field, NSString *defaultField);

FOUNDATION_EXPORT void OrgApacheLuceneSearchHighlightQueryScorer_initWithOrgApacheLuceneSearchQuery_withNSString_withNSString_(OrgApacheLuceneSearchHighlightQueryScorer *self, OrgApacheLuceneSearchQuery *query, NSString *field, NSString *defaultField);

FOUNDATION_EXPORT OrgApacheLuceneSearchHighlightQueryScorer *new_OrgApacheLuceneSearchHighlightQueryScorer_initWithOrgApacheLuceneSearchQuery_withNSString_withNSString_(OrgApacheLuceneSearchQuery *query, NSString *field, NSString *defaultField) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchHighlightQueryScorer *create_OrgApacheLuceneSearchHighlightQueryScorer_initWithOrgApacheLuceneSearchQuery_withNSString_withNSString_(OrgApacheLuceneSearchQuery *query, NSString *field, NSString *defaultField);

FOUNDATION_EXPORT void OrgApacheLuceneSearchHighlightQueryScorer_initWithOrgApacheLuceneSearchHighlightWeightedSpanTermArray_(OrgApacheLuceneSearchHighlightQueryScorer *self, IOSObjectArray *weightedTerms);

FOUNDATION_EXPORT OrgApacheLuceneSearchHighlightQueryScorer *new_OrgApacheLuceneSearchHighlightQueryScorer_initWithOrgApacheLuceneSearchHighlightWeightedSpanTermArray_(IOSObjectArray *weightedTerms) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchHighlightQueryScorer *create_OrgApacheLuceneSearchHighlightQueryScorer_initWithOrgApacheLuceneSearchHighlightWeightedSpanTermArray_(IOSObjectArray *weightedTerms);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchHighlightQueryScorer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchHighlightQueryScorer")
