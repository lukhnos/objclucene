//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/search/SortedSetSortField.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneSearchSortedSetSortField")
#ifdef RESTRICT_OrgApacheLuceneSearchSortedSetSortField
#define INCLUDE_ALL_OrgApacheLuceneSearchSortedSetSortField 0
#else
#define INCLUDE_ALL_OrgApacheLuceneSearchSortedSetSortField 1
#endif
#undef RESTRICT_OrgApacheLuceneSearchSortedSetSortField

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneSearchSortedSetSortField_) && (INCLUDE_ALL_OrgApacheLuceneSearchSortedSetSortField || defined(INCLUDE_OrgApacheLuceneSearchSortedSetSortField))
#define OrgApacheLuceneSearchSortedSetSortField_

#define RESTRICT_OrgApacheLuceneSearchSortField 1
#define INCLUDE_OrgApacheLuceneSearchSortField 1
#include "org/apache/lucene/search/SortField.h"

@class OrgApacheLuceneSearchFieldComparator;
@class OrgApacheLuceneSearchFieldComparatorSource;
@class OrgApacheLuceneSearchSortField_Type;
@class OrgApacheLuceneSearchSortedSetSelector_Type;

/*!
 @brief SortField for <code>SortedSetDocValues</code>.
 <p>
  A SortedSetDocValues contains multiple values for a field, so sorting with
  this technique "selects" a value as the representative sort value for the document. 
 <p>
  By default, the minimum value in the set is selected as the sort value, but
  this can be customized. Selectors other than the default do have some limitations
  to ensure that all selections happen in constant-time for performance. 
 <p>
  Like sorting by string, this also supports sorting missing values as first or last,
  via <code>setMissingValue(Object)</code>.
 - seealso: SortedSetSelector
 */
@interface OrgApacheLuceneSearchSortedSetSortField : OrgApacheLuceneSearchSortField

#pragma mark Public

/*!
 @brief Creates a sort, possibly in reverse, by the minimum value in the set 
  for the document.
 @param field Name of field to sort by.  Must not be null.
 @param reverse True if natural order should be reversed.
 */
- (instancetype __nonnull)initWithNSString:(NSString *)field
                               withBoolean:(jboolean)reverse;

/*!
 @brief Creates a sort, possibly in reverse, specifying how the sort value from 
  the document's set is selected.
 @param field Name of field to sort by.  Must not be null.
 @param reverse True if natural order should be reversed.
 @param selector custom selector type for choosing the sort value from the set.  
  <p>  NOTE: selectors other than 
 <code>SortedSetSelector.Type.MIN</code>  require optional codec support.
 */
- (instancetype __nonnull)initWithNSString:(NSString *)field
                               withBoolean:(jboolean)reverse
withOrgApacheLuceneSearchSortedSetSelector_Type:(OrgApacheLuceneSearchSortedSetSelector_Type *)selector;

- (jboolean)isEqual:(id)obj;

- (OrgApacheLuceneSearchFieldComparator *)getComparatorWithInt:(jint)numHits
                                                       withInt:(jint)sortPos;

/*!
 @brief Returns the selector in use for this sort
 */
- (OrgApacheLuceneSearchSortedSetSelector_Type *)getSelector;

- (NSUInteger)hash;

/*!
 @brief Set how missing values (the empty set) are sorted.
 <p>
  Note that this must be <code>STRING_FIRST</code> or <code>STRING_LAST</code>.
 */
- (void)setMissingValueWithId:(id)missingValue;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
withOrgApacheLuceneSearchFieldComparatorSource:(OrgApacheLuceneSearchFieldComparatorSource *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
withOrgApacheLuceneSearchFieldComparatorSource:(OrgApacheLuceneSearchFieldComparatorSource *)arg1
                               withBoolean:(jboolean)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
   withOrgApacheLuceneSearchSortField_Type:(OrgApacheLuceneSearchSortField_Type *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
   withOrgApacheLuceneSearchSortField_Type:(OrgApacheLuceneSearchSortField_Type *)arg1
                               withBoolean:(jboolean)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneSearchSortedSetSortField)

FOUNDATION_EXPORT void OrgApacheLuceneSearchSortedSetSortField_initWithNSString_withBoolean_(OrgApacheLuceneSearchSortedSetSortField *self, NSString *field, jboolean reverse);

FOUNDATION_EXPORT OrgApacheLuceneSearchSortedSetSortField *new_OrgApacheLuceneSearchSortedSetSortField_initWithNSString_withBoolean_(NSString *field, jboolean reverse) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchSortedSetSortField *create_OrgApacheLuceneSearchSortedSetSortField_initWithNSString_withBoolean_(NSString *field, jboolean reverse);

FOUNDATION_EXPORT void OrgApacheLuceneSearchSortedSetSortField_initWithNSString_withBoolean_withOrgApacheLuceneSearchSortedSetSelector_Type_(OrgApacheLuceneSearchSortedSetSortField *self, NSString *field, jboolean reverse, OrgApacheLuceneSearchSortedSetSelector_Type *selector);

FOUNDATION_EXPORT OrgApacheLuceneSearchSortedSetSortField *new_OrgApacheLuceneSearchSortedSetSortField_initWithNSString_withBoolean_withOrgApacheLuceneSearchSortedSetSelector_Type_(NSString *field, jboolean reverse, OrgApacheLuceneSearchSortedSetSelector_Type *selector) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneSearchSortedSetSortField *create_OrgApacheLuceneSearchSortedSetSortField_initWithNSString_withBoolean_withOrgApacheLuceneSearchSortedSetSelector_Type_(NSString *field, jboolean reverse, OrgApacheLuceneSearchSortedSetSelector_Type *selector);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneSearchSortedSetSortField)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneSearchSortedSetSortField")
