//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queries/src/java/org/apache/lucene/queries/function/valuesource/SimpleBoolFunction.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneQueriesFunctionValuesourceSimpleBoolFunction")
#ifdef RESTRICT_OrgApacheLuceneQueriesFunctionValuesourceSimpleBoolFunction
#define INCLUDE_ALL_OrgApacheLuceneQueriesFunctionValuesourceSimpleBoolFunction 0
#else
#define INCLUDE_ALL_OrgApacheLuceneQueriesFunctionValuesourceSimpleBoolFunction 1
#endif
#undef RESTRICT_OrgApacheLuceneQueriesFunctionValuesourceSimpleBoolFunction

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneQueriesFunctionValuesourceSimpleBoolFunction_) && (INCLUDE_ALL_OrgApacheLuceneQueriesFunctionValuesourceSimpleBoolFunction || defined(INCLUDE_OrgApacheLuceneQueriesFunctionValuesourceSimpleBoolFunction))
#define OrgApacheLuceneQueriesFunctionValuesourceSimpleBoolFunction_

#define RESTRICT_OrgApacheLuceneQueriesFunctionValuesourceBoolFunction 1
#define INCLUDE_OrgApacheLuceneQueriesFunctionValuesourceBoolFunction 1
#include "org/apache/lucene/queries/function/valuesource/BoolFunction.h"

@class OrgApacheLuceneIndexLeafReaderContext;
@class OrgApacheLuceneQueriesFunctionDocvaluesBoolDocValues;
@class OrgApacheLuceneQueriesFunctionFunctionValues;
@class OrgApacheLuceneQueriesFunctionValueSource;
@class OrgApacheLuceneSearchIndexSearcher;
@protocol JavaUtilMap;

/*!
 @brief <code>BoolFunction</code> implementation which applies an extendible boolean
  function to the values of a single wrapped <code>ValueSource</code>.
 Functions this can be used for include whether a field has a value or not,
  or inverting the boolean value of the wrapped ValueSource.
 */
@interface OrgApacheLuceneQueriesFunctionValuesourceSimpleBoolFunction : OrgApacheLuceneQueriesFunctionValuesourceBoolFunction {
 @public
  OrgApacheLuceneQueriesFunctionValueSource *source_;
}

#pragma mark Public

- (instancetype __nonnull)initWithOrgApacheLuceneQueriesFunctionValueSource:(OrgApacheLuceneQueriesFunctionValueSource *)source;

- (void)createWeightWithJavaUtilMap:(id<JavaUtilMap>)context
withOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher;

- (NSString *)description__;

- (jboolean)isEqual:(id)o;

- (OrgApacheLuceneQueriesFunctionDocvaluesBoolDocValues *)getValuesWithJavaUtilMap:(id<JavaUtilMap>)context
                                         withOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)readerContext;

- (NSUInteger)hash;

#pragma mark Protected

- (jboolean)funcWithInt:(jint)doc
withOrgApacheLuceneQueriesFunctionFunctionValues:(OrgApacheLuceneQueriesFunctionFunctionValues *)vals;

- (NSString *)name;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueriesFunctionValuesourceSimpleBoolFunction)

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesFunctionValuesourceSimpleBoolFunction, source_, OrgApacheLuceneQueriesFunctionValueSource *)

FOUNDATION_EXPORT void OrgApacheLuceneQueriesFunctionValuesourceSimpleBoolFunction_initWithOrgApacheLuceneQueriesFunctionValueSource_(OrgApacheLuceneQueriesFunctionValuesourceSimpleBoolFunction *self, OrgApacheLuceneQueriesFunctionValueSource *source);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueriesFunctionValuesourceSimpleBoolFunction)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneQueriesFunctionValuesourceSimpleBoolFunction")
