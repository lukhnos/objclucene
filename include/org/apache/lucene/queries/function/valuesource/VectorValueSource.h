//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queries/src/java/org/apache/lucene/queries/function/valuesource/VectorValueSource.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneQueriesFunctionValuesourceVectorValueSource")
#ifdef RESTRICT_OrgApacheLuceneQueriesFunctionValuesourceVectorValueSource
#define INCLUDE_ALL_OrgApacheLuceneQueriesFunctionValuesourceVectorValueSource 0
#else
#define INCLUDE_ALL_OrgApacheLuceneQueriesFunctionValuesourceVectorValueSource 1
#endif
#undef RESTRICT_OrgApacheLuceneQueriesFunctionValuesourceVectorValueSource

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneQueriesFunctionValuesourceVectorValueSource_) && (INCLUDE_ALL_OrgApacheLuceneQueriesFunctionValuesourceVectorValueSource || defined(INCLUDE_OrgApacheLuceneQueriesFunctionValuesourceVectorValueSource))
#define OrgApacheLuceneQueriesFunctionValuesourceVectorValueSource_

#define RESTRICT_OrgApacheLuceneQueriesFunctionValuesourceMultiValueSource 1
#define INCLUDE_OrgApacheLuceneQueriesFunctionValuesourceMultiValueSource 1
#include "org/apache/lucene/queries/function/valuesource/MultiValueSource.h"

@class OrgApacheLuceneIndexLeafReaderContext;
@class OrgApacheLuceneQueriesFunctionFunctionValues;
@class OrgApacheLuceneSearchIndexSearcher;
@protocol JavaUtilList;
@protocol JavaUtilMap;

/*!
 @brief Converts individual ValueSource instances to leverage the FunctionValues *Val functions that work with multiple values,
  i.e.
 <code>org.apache.lucene.queries.function.FunctionValues.doubleVal(int, double[])</code>
 */
@interface OrgApacheLuceneQueriesFunctionValuesourceVectorValueSource : OrgApacheLuceneQueriesFunctionValuesourceMultiValueSource {
 @public
  id<JavaUtilList> sources_;
}

#pragma mark Public

- (instancetype __nonnull)initWithJavaUtilList:(id<JavaUtilList>)sources;

- (void)createWeightWithJavaUtilMap:(id<JavaUtilMap>)context
withOrgApacheLuceneSearchIndexSearcher:(OrgApacheLuceneSearchIndexSearcher *)searcher;

- (NSString *)description__;

- (jint)dimension;

- (jboolean)isEqual:(id)o;

- (id<JavaUtilList>)getSources;

- (OrgApacheLuceneQueriesFunctionFunctionValues *)getValuesWithJavaUtilMap:(id<JavaUtilMap>)context
                                 withOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)readerContext;

- (NSUInteger)hash;

- (NSString *)name;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueriesFunctionValuesourceVectorValueSource)

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesFunctionValuesourceVectorValueSource, sources_, id<JavaUtilList>)

FOUNDATION_EXPORT void OrgApacheLuceneQueriesFunctionValuesourceVectorValueSource_initWithJavaUtilList_(OrgApacheLuceneQueriesFunctionValuesourceVectorValueSource *self, id<JavaUtilList> sources);

FOUNDATION_EXPORT OrgApacheLuceneQueriesFunctionValuesourceVectorValueSource *new_OrgApacheLuceneQueriesFunctionValuesourceVectorValueSource_initWithJavaUtilList_(id<JavaUtilList> sources) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueriesFunctionValuesourceVectorValueSource *create_OrgApacheLuceneQueriesFunctionValuesourceVectorValueSource_initWithJavaUtilList_(id<JavaUtilList> sources);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueriesFunctionValuesourceVectorValueSource)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneQueriesFunctionValuesourceVectorValueSource")
