//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queries/src/java/org/apache/lucene/queries/function/valuesource/DefFunction.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneQueriesFunctionValuesourceDefFunction")
#ifdef RESTRICT_OrgApacheLuceneQueriesFunctionValuesourceDefFunction
#define INCLUDE_ALL_OrgApacheLuceneQueriesFunctionValuesourceDefFunction 0
#else
#define INCLUDE_ALL_OrgApacheLuceneQueriesFunctionValuesourceDefFunction 1
#endif
#undef RESTRICT_OrgApacheLuceneQueriesFunctionValuesourceDefFunction

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneQueriesFunctionValuesourceDefFunction_) && (INCLUDE_ALL_OrgApacheLuceneQueriesFunctionValuesourceDefFunction || defined(INCLUDE_OrgApacheLuceneQueriesFunctionValuesourceDefFunction))
#define OrgApacheLuceneQueriesFunctionValuesourceDefFunction_

#define RESTRICT_OrgApacheLuceneQueriesFunctionValuesourceMultiFunction 1
#define INCLUDE_OrgApacheLuceneQueriesFunctionValuesourceMultiFunction 1
#include "org/apache/lucene/queries/function/valuesource/MultiFunction.h"

@class OrgApacheLuceneIndexLeafReaderContext;
@class OrgApacheLuceneQueriesFunctionFunctionValues;
@protocol JavaUtilList;
@protocol JavaUtilMap;

/*!
 @brief <code>ValueSource</code> implementation which only returns the values from the provided
  ValueSources which are available for a particular docId.Consequently, when combined
  with a <code>ConstValueSource</code>, this function serves as a way to return a default
  value when the values for a field are unavailable.
 */
@interface OrgApacheLuceneQueriesFunctionValuesourceDefFunction : OrgApacheLuceneQueriesFunctionValuesourceMultiFunction

#pragma mark Public

- (instancetype __nonnull)initWithJavaUtilList:(id<JavaUtilList>)sources;

- (OrgApacheLuceneQueriesFunctionFunctionValues *)getValuesWithJavaUtilMap:(id<JavaUtilMap>)fcontext
                                 withOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)readerContext;

#pragma mark Protected

- (NSString *)name;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueriesFunctionValuesourceDefFunction)

FOUNDATION_EXPORT void OrgApacheLuceneQueriesFunctionValuesourceDefFunction_initWithJavaUtilList_(OrgApacheLuceneQueriesFunctionValuesourceDefFunction *self, id<JavaUtilList> sources);

FOUNDATION_EXPORT OrgApacheLuceneQueriesFunctionValuesourceDefFunction *new_OrgApacheLuceneQueriesFunctionValuesourceDefFunction_initWithJavaUtilList_(id<JavaUtilList> sources) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueriesFunctionValuesourceDefFunction *create_OrgApacheLuceneQueriesFunctionValuesourceDefFunction_initWithJavaUtilList_(id<JavaUtilList> sources);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueriesFunctionValuesourceDefFunction)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneQueriesFunctionValuesourceDefFunction")
