//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queries/src/java/org/apache/lucene/queries/function/valuesource/LiteralValueSource.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneQueriesFunctionValuesourceLiteralValueSource")
#ifdef RESTRICT_OrgApacheLuceneQueriesFunctionValuesourceLiteralValueSource
#define INCLUDE_ALL_OrgApacheLuceneQueriesFunctionValuesourceLiteralValueSource 0
#else
#define INCLUDE_ALL_OrgApacheLuceneQueriesFunctionValuesourceLiteralValueSource 1
#endif
#undef RESTRICT_OrgApacheLuceneQueriesFunctionValuesourceLiteralValueSource

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneQueriesFunctionValuesourceLiteralValueSource_) && (INCLUDE_ALL_OrgApacheLuceneQueriesFunctionValuesourceLiteralValueSource || defined(INCLUDE_OrgApacheLuceneQueriesFunctionValuesourceLiteralValueSource))
#define OrgApacheLuceneQueriesFunctionValuesourceLiteralValueSource_

#define RESTRICT_OrgApacheLuceneQueriesFunctionValueSource 1
#define INCLUDE_OrgApacheLuceneQueriesFunctionValueSource 1
#include "org/apache/lucene/queries/function/ValueSource.h"

@class OrgApacheLuceneIndexLeafReaderContext;
@class OrgApacheLuceneQueriesFunctionFunctionValues;
@class OrgApacheLuceneUtilBytesRef;
@protocol JavaUtilMap;

/*!
 @brief Pass a the field value through as a String, no matter the type // Q: doesn't this mean it's a "string"?
 */
@interface OrgApacheLuceneQueriesFunctionValuesourceLiteralValueSource : OrgApacheLuceneQueriesFunctionValueSource {
 @public
  NSString *string_;
  OrgApacheLuceneUtilBytesRef *bytesRef_;
}
@property (readonly, class) jint hash_ NS_SWIFT_NAME(hash_);

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)string;

- (NSString *)description__;

- (jboolean)isEqual:(id)o;

/*!
 @brief returns the literal value
 */
- (NSString *)getValue;

- (OrgApacheLuceneQueriesFunctionFunctionValues *)getValuesWithJavaUtilMap:(id<JavaUtilMap>)context
                                 withOrgApacheLuceneIndexLeafReaderContext:(OrgApacheLuceneIndexLeafReaderContext *)readerContext;

- (NSUInteger)hash;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneQueriesFunctionValuesourceLiteralValueSource)

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesFunctionValuesourceLiteralValueSource, string_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneQueriesFunctionValuesourceLiteralValueSource, bytesRef_, OrgApacheLuceneUtilBytesRef *)

inline jint OrgApacheLuceneQueriesFunctionValuesourceLiteralValueSource_get_hash(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint OrgApacheLuceneQueriesFunctionValuesourceLiteralValueSource_hash;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(OrgApacheLuceneQueriesFunctionValuesourceLiteralValueSource, hash, jint)

FOUNDATION_EXPORT void OrgApacheLuceneQueriesFunctionValuesourceLiteralValueSource_initWithNSString_(OrgApacheLuceneQueriesFunctionValuesourceLiteralValueSource *self, NSString *string);

FOUNDATION_EXPORT OrgApacheLuceneQueriesFunctionValuesourceLiteralValueSource *new_OrgApacheLuceneQueriesFunctionValuesourceLiteralValueSource_initWithNSString_(NSString *string) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueriesFunctionValuesourceLiteralValueSource *create_OrgApacheLuceneQueriesFunctionValuesourceLiteralValueSource_initWithNSString_(NSString *string);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueriesFunctionValuesourceLiteralValueSource)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneQueriesFunctionValuesourceLiteralValueSource")
