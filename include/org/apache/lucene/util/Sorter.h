//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/Sorter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneUtilSorter")
#ifdef RESTRICT_OrgApacheLuceneUtilSorter
#define INCLUDE_ALL_OrgApacheLuceneUtilSorter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneUtilSorter 1
#endif
#undef RESTRICT_OrgApacheLuceneUtilSorter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneUtilSorter_) && (INCLUDE_ALL_OrgApacheLuceneUtilSorter || defined(INCLUDE_OrgApacheLuceneUtilSorter))
#define OrgApacheLuceneUtilSorter_

/*!
 @brief Base class for sorting algorithms implementations.
 */
@interface OrgApacheLuceneUtilSorter : NSObject
@property (readonly, class) jint THRESHOLD NS_SWIFT_NAME(THRESHOLD);

#pragma mark Public

/*!
 @brief Sort the slice which starts at <code>from</code> (inclusive) and ends at
   <code>to</code> (exclusive).
 */
- (void)sortWithInt:(jint)from
            withInt:(jint)to;

#pragma mark Protected

/*!
 @brief Sole constructor, used for inheritance.
 */
- (instancetype __nonnull)init;

/*!
 @brief Compare entries found in slots <code>i</code> and <code>j</code>.
 The contract for the returned value is the same as
   <code>Comparator.compare(Object, Object)</code>.
 */
- (jint)compareWithInt:(jint)i
               withInt:(jint)j;

/*!
 @brief Swap values at slots <code>i</code> and <code>j</code>.
 */
- (void)swapWithInt:(jint)i
            withInt:(jint)j;

#pragma mark Package-Private

- (void)binarySortWithInt:(jint)from
                  withInt:(jint)to;

- (void)binarySortWithInt:(jint)from
                  withInt:(jint)to
                  withInt:(jint)i;

- (void)checkRangeWithInt:(jint)from
                  withInt:(jint)to;

- (void)doRotateWithInt:(jint)lo
                withInt:(jint)mid
                withInt:(jint)hi;

+ (jint)heapChildWithInt:(jint)from
                 withInt:(jint)i;

- (void)heapifyWithInt:(jint)from
               withInt:(jint)to;

+ (jint)heapParentWithInt:(jint)from
                  withInt:(jint)i;

- (void)heapSortWithInt:(jint)from
                withInt:(jint)to;

- (void)insertionSortWithInt:(jint)from
                     withInt:(jint)to;

- (jint)lowerWithInt:(jint)from
             withInt:(jint)to
             withInt:(jint)val;

- (jint)lower2WithInt:(jint)from
              withInt:(jint)to
              withInt:(jint)val;

- (void)mergeInPlaceWithInt:(jint)from
                    withInt:(jint)mid
                    withInt:(jint)to;

- (void)reverseWithInt:(jint)from
               withInt:(jint)to;

- (void)rotateWithInt:(jint)lo
              withInt:(jint)mid
              withInt:(jint)hi;

- (void)siftDownWithInt:(jint)i
                withInt:(jint)from
                withInt:(jint)to;

- (jint)upperWithInt:(jint)from
             withInt:(jint)to
             withInt:(jint)val;

- (jint)upper2WithInt:(jint)from
              withInt:(jint)to
              withInt:(jint)val;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilSorter)

inline jint OrgApacheLuceneUtilSorter_get_THRESHOLD(void);
#define OrgApacheLuceneUtilSorter_THRESHOLD 20
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneUtilSorter, THRESHOLD, jint)

FOUNDATION_EXPORT void OrgApacheLuceneUtilSorter_init(OrgApacheLuceneUtilSorter *self);

FOUNDATION_EXPORT jint OrgApacheLuceneUtilSorter_heapParentWithInt_withInt_(jint from, jint i);

FOUNDATION_EXPORT jint OrgApacheLuceneUtilSorter_heapChildWithInt_withInt_(jint from, jint i);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilSorter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneUtilSorter")
