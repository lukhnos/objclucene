//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/InfoStream.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneUtilInfoStream")
#ifdef RESTRICT_OrgApacheLuceneUtilInfoStream
#define INCLUDE_ALL_OrgApacheLuceneUtilInfoStream 0
#else
#define INCLUDE_ALL_OrgApacheLuceneUtilInfoStream 1
#endif
#undef RESTRICT_OrgApacheLuceneUtilInfoStream

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneUtilInfoStream_) && (INCLUDE_ALL_OrgApacheLuceneUtilInfoStream || defined(INCLUDE_OrgApacheLuceneUtilInfoStream))
#define OrgApacheLuceneUtilInfoStream_

#define RESTRICT_JavaIoCloseable 1
#define INCLUDE_JavaIoCloseable 1
#include "java/io/Closeable.h"

/*!
 @brief Debugging API for Lucene classes such as <code>IndexWriter</code> 
  and <code>SegmentInfos</code>.
 <p>
  NOTE: Enabling infostreams may cause performance degradation
  in some components.
 */
@interface OrgApacheLuceneUtilInfoStream : NSObject < JavaIoCloseable >
@property (readonly, class, strong) OrgApacheLuceneUtilInfoStream *NO_OUTPUT NS_SWIFT_NAME(NO_OUTPUT);

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief The default <code>InfoStream</code> used by a newly instantiated classes.
 - seealso: #setDefault
 */
+ (OrgApacheLuceneUtilInfoStream *)getDefault;

/*!
 @brief returns true if messages are enabled and should be posted to <code>message</code>.
 */
- (jboolean)isEnabledWithNSString:(NSString *)component;

/*!
 @brief prints a message
 */
- (void)messageWithNSString:(NSString *)component
               withNSString:(NSString *)message;

/*!
 @brief Sets the default <code>InfoStream</code> used
  by a newly instantiated classes.It cannot be <code>null</code>,
  to disable logging use <code>NO_OUTPUT</code>.
 - seealso: #getDefault
 */
+ (void)setDefaultWithOrgApacheLuceneUtilInfoStream:(OrgApacheLuceneUtilInfoStream *)infoStream;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneUtilInfoStream)

/*!
 @brief Instance of InfoStream that does no logging at all.
 */
inline OrgApacheLuceneUtilInfoStream *OrgApacheLuceneUtilInfoStream_get_NO_OUTPUT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneUtilInfoStream *OrgApacheLuceneUtilInfoStream_NO_OUTPUT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneUtilInfoStream, NO_OUTPUT, OrgApacheLuceneUtilInfoStream *)

FOUNDATION_EXPORT void OrgApacheLuceneUtilInfoStream_init(OrgApacheLuceneUtilInfoStream *self);

FOUNDATION_EXPORT OrgApacheLuceneUtilInfoStream *OrgApacheLuceneUtilInfoStream_getDefault(void);

FOUNDATION_EXPORT void OrgApacheLuceneUtilInfoStream_setDefaultWithOrgApacheLuceneUtilInfoStream_(OrgApacheLuceneUtilInfoStream *infoStream);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilInfoStream)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneUtilInfoStream")
