//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/MapOfSets.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneUtilMapOfSets")
#ifdef RESTRICT_OrgApacheLuceneUtilMapOfSets
#define INCLUDE_ALL_OrgApacheLuceneUtilMapOfSets 0
#else
#define INCLUDE_ALL_OrgApacheLuceneUtilMapOfSets 1
#endif
#undef RESTRICT_OrgApacheLuceneUtilMapOfSets

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneUtilMapOfSets_) && (INCLUDE_ALL_OrgApacheLuceneUtilMapOfSets || defined(INCLUDE_OrgApacheLuceneUtilMapOfSets))
#define OrgApacheLuceneUtilMapOfSets_

@protocol JavaUtilCollection;
@protocol JavaUtilMap;

/*!
 @brief Helper class for keeping Lists of Objects associated with keys.
 <b>WARNING: THIS CLASS IS NOT THREAD SAFE</b>
 */
@interface OrgApacheLuceneUtilMapOfSets : NSObject

#pragma mark Public

/*!
 @param m the backing store for this object
 */
- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)m;

/*!
 @return direct access to the map backing this object.
 */
- (id<JavaUtilMap>)getMap;

/*!
 @brief Adds val to the Set associated with key in the Map.If key is not 
  already in the map, a new Set will first be created.
 @return the size of the Set associated with key once val is added to it.
 */
- (jint)putWithId:(id)key
           withId:(id)val;

/*!
 @brief Adds multiple vals to the Set associated with key in the Map.
 If key is not 
  already in the map, a new Set will first be created.
 @return the size of the Set associated with key once val is added to it.
 */
- (jint)putAllWithId:(id)key
withJavaUtilCollection:(id<JavaUtilCollection>)vals;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilMapOfSets)

FOUNDATION_EXPORT void OrgApacheLuceneUtilMapOfSets_initWithJavaUtilMap_(OrgApacheLuceneUtilMapOfSets *self, id<JavaUtilMap> m);

FOUNDATION_EXPORT OrgApacheLuceneUtilMapOfSets *new_OrgApacheLuceneUtilMapOfSets_initWithJavaUtilMap_(id<JavaUtilMap> m) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneUtilMapOfSets *create_OrgApacheLuceneUtilMapOfSets_initWithJavaUtilMap_(id<JavaUtilMap> m);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilMapOfSets)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneUtilMapOfSets")
