//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/DocIdSetBuilder.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneUtilDocIdSetBuilder")
#ifdef RESTRICT_OrgApacheLuceneUtilDocIdSetBuilder
#define INCLUDE_ALL_OrgApacheLuceneUtilDocIdSetBuilder 0
#else
#define INCLUDE_ALL_OrgApacheLuceneUtilDocIdSetBuilder 1
#endif
#undef RESTRICT_OrgApacheLuceneUtilDocIdSetBuilder

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneUtilDocIdSetBuilder_) && (INCLUDE_ALL_OrgApacheLuceneUtilDocIdSetBuilder || defined(INCLUDE_OrgApacheLuceneUtilDocIdSetBuilder))
#define OrgApacheLuceneUtilDocIdSetBuilder_

@class OrgApacheLuceneSearchDocIdSet;
@class OrgApacheLuceneSearchDocIdSetIterator;

/*!
 @brief A builder of <code>DocIdSet</code>s.At first it uses a sparse structure to gather
  documents, and then upgrades to a non-sparse bit set once enough hits match.
 */
@interface OrgApacheLuceneUtilDocIdSetBuilder : NSObject

#pragma mark Public

/*!
 @brief Create a builder that can contain doc IDs between <code>0</code> and <code>maxDoc</code>.
 */
- (instancetype __nonnull)initWithInt:(jint)maxDoc;

/*!
 @brief Add the content of the provided <code>DocIdSetIterator</code> to this builder.
 NOTE: if you need to build a <code>DocIdSet</code> out of a single 
 <code>DocIdSetIterator</code>, you should rather use <code>RoaringDocIdSet.Builder</code>.
 */
- (void)addWithOrgApacheLuceneSearchDocIdSetIterator:(OrgApacheLuceneSearchDocIdSetIterator *)iter;

/*!
 @brief Add a document to this builder.
 NOTE: doc IDs do not need to be provided in order.
  NOTE: if you plan on adding several docs at once, look into using 
 <code>grow(int)</code> to reserve space.
 */
- (void)addWithInt:(jint)doc;

/*!
 @brief Build a <code>DocIdSet</code> from the accumulated doc IDs.
 */
- (OrgApacheLuceneSearchDocIdSet *)build;

/*!
 @brief Expert: build a <code>DocIdSet</code> with a hint on the cost that the resulting 
 <code>DocIdSet</code> would have.
 */
- (OrgApacheLuceneSearchDocIdSet *)buildWithLong:(jlong)costHint;

/*!
 @brief Reserve space so that this builder can hold <code>numDocs</code> MORE documents.
 */
- (void)growWithInt:(jint)numDocs;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilDocIdSetBuilder)

FOUNDATION_EXPORT void OrgApacheLuceneUtilDocIdSetBuilder_initWithInt_(OrgApacheLuceneUtilDocIdSetBuilder *self, jint maxDoc);

FOUNDATION_EXPORT OrgApacheLuceneUtilDocIdSetBuilder *new_OrgApacheLuceneUtilDocIdSetBuilder_initWithInt_(jint maxDoc) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneUtilDocIdSetBuilder *create_OrgApacheLuceneUtilDocIdSetBuilder_initWithInt_(jint maxDoc);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilDocIdSetBuilder)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneUtilDocIdSetBuilder")
