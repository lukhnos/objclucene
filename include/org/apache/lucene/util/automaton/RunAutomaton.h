//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/automaton/RunAutomaton.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneUtilAutomatonRunAutomaton")
#ifdef RESTRICT_OrgApacheLuceneUtilAutomatonRunAutomaton
#define INCLUDE_ALL_OrgApacheLuceneUtilAutomatonRunAutomaton 0
#else
#define INCLUDE_ALL_OrgApacheLuceneUtilAutomatonRunAutomaton 1
#endif
#undef RESTRICT_OrgApacheLuceneUtilAutomatonRunAutomaton

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneUtilAutomatonRunAutomaton_) && (INCLUDE_ALL_OrgApacheLuceneUtilAutomatonRunAutomaton || defined(INCLUDE_OrgApacheLuceneUtilAutomatonRunAutomaton))
#define OrgApacheLuceneUtilAutomatonRunAutomaton_

@class IOSBooleanArray;
@class IOSIntArray;
@class OrgApacheLuceneUtilAutomatonAutomaton;

/*!
 @brief Finite-state automaton with fast run operation.
 */
@interface OrgApacheLuceneUtilAutomatonRunAutomaton : NSObject {
 @public
  OrgApacheLuceneUtilAutomatonAutomaton *automaton_;
  jint maxInterval_;
  jint size_;
  IOSBooleanArray *accept_;
  jint initial_;
  IOSIntArray *transitions_;
  IOSIntArray *points_;
  IOSIntArray *classmap_;
}

#pragma mark Public

/*!
 @brief Constructs a new <code>RunAutomaton</code> from a deterministic 
 <code>Automaton</code>.
 @param a an automaton
 */
- (instancetype __nonnull)initWithOrgApacheLuceneUtilAutomatonAutomaton:(OrgApacheLuceneUtilAutomatonAutomaton *)a
                                                                withInt:(jint)maxInterval
                                                            withBoolean:(jboolean)tableize;

/*!
 @brief Constructs a new <code>RunAutomaton</code> from a deterministic 
 <code>Automaton</code>.
 @param a an automaton
 @param maxDeterminizedStates maximum number of states that can be created    while determinizing a
 */
- (instancetype __nonnull)initWithOrgApacheLuceneUtilAutomatonAutomaton:(OrgApacheLuceneUtilAutomatonAutomaton *)a
                                                                withInt:(jint)maxInterval
                                                            withBoolean:(jboolean)tableize
                                                                withInt:(jint)maxDeterminizedStates;

- (jboolean)isEqual:(id)obj;

/*!
 @brief Returns array of codepoint class interval start points.The array should
  not be modified by the caller.
 */
- (IOSIntArray *)getCharIntervals;

/*!
 @brief Returns initial state.
 */
- (jint)getInitialState;

/*!
 @brief Returns number of states in automaton.
 */
- (jint)getSize;

- (NSUInteger)hash;

/*!
 @brief Returns acceptance status for given state.
 */
- (jboolean)isAcceptWithInt:(jint)state;

/*!
 @brief Returns the state obtained by reading the given char from the given state.
 Returns -1 if not obtaining any such state. (If the original 
 <code>Automaton</code> had no dead states, -1 is returned here if and only
  if a dead state is entered in an equivalent automaton with a total
  transition function.)
 */
- (jint)stepWithInt:(jint)state
            withInt:(jint)c;

/*!
 @brief Returns a string representation of this automaton.
 */
- (NSString *)description;

#pragma mark Package-Private

/*!
 @brief Gets character class of given codepoint
 */
- (jint)getCharClassWithInt:(jint)c;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilAutomatonRunAutomaton)

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilAutomatonRunAutomaton, automaton_, OrgApacheLuceneUtilAutomatonAutomaton *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilAutomatonRunAutomaton, accept_, IOSBooleanArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilAutomatonRunAutomaton, transitions_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilAutomatonRunAutomaton, points_, IOSIntArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilAutomatonRunAutomaton, classmap_, IOSIntArray *)

FOUNDATION_EXPORT void OrgApacheLuceneUtilAutomatonRunAutomaton_initWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_withBoolean_(OrgApacheLuceneUtilAutomatonRunAutomaton *self, OrgApacheLuceneUtilAutomatonAutomaton *a, jint maxInterval, jboolean tableize);

FOUNDATION_EXPORT void OrgApacheLuceneUtilAutomatonRunAutomaton_initWithOrgApacheLuceneUtilAutomatonAutomaton_withInt_withBoolean_withInt_(OrgApacheLuceneUtilAutomatonRunAutomaton *self, OrgApacheLuceneUtilAutomatonAutomaton *a, jint maxInterval, jboolean tableize, jint maxDeterminizedStates);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilAutomatonRunAutomaton)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneUtilAutomatonRunAutomaton")
