//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/automaton/StatePair.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneUtilAutomatonStatePair")
#ifdef RESTRICT_OrgApacheLuceneUtilAutomatonStatePair
#define INCLUDE_ALL_OrgApacheLuceneUtilAutomatonStatePair 0
#else
#define INCLUDE_ALL_OrgApacheLuceneUtilAutomatonStatePair 1
#endif
#undef RESTRICT_OrgApacheLuceneUtilAutomatonStatePair

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneUtilAutomatonStatePair_) && (INCLUDE_ALL_OrgApacheLuceneUtilAutomatonStatePair || defined(INCLUDE_OrgApacheLuceneUtilAutomatonStatePair))
#define OrgApacheLuceneUtilAutomatonStatePair_

/*!
 @brief Pair of states.
 */
@interface OrgApacheLuceneUtilAutomatonStatePair : NSObject {
 @public
  jint s_;
  jint s1_;
  jint s2_;
}

#pragma mark Public

/*!
 @brief Constructs a new state pair.
 @param s1 first state
 @param s2 second state
 */
- (instancetype __nonnull)initWithInt:(jint)s1
                              withInt:(jint)s2;

/*!
 @brief Checks for equality.
 @param obj object to compare with
 @return true if <tt>obj</tt> represents the same pair of states as this
          pair
 */
- (jboolean)isEqual:(id)obj;

/*!
 @brief Returns hash code.
 @return hash code
 */
- (NSUInteger)hash;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype __nonnull)initWithInt:(jint)s
                              withInt:(jint)s1
                              withInt:(jint)s2;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilAutomatonStatePair)

FOUNDATION_EXPORT void OrgApacheLuceneUtilAutomatonStatePair_initWithInt_withInt_withInt_(OrgApacheLuceneUtilAutomatonStatePair *self, jint s, jint s1, jint s2);

FOUNDATION_EXPORT OrgApacheLuceneUtilAutomatonStatePair *new_OrgApacheLuceneUtilAutomatonStatePair_initWithInt_withInt_withInt_(jint s, jint s1, jint s2) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneUtilAutomatonStatePair *create_OrgApacheLuceneUtilAutomatonStatePair_initWithInt_withInt_withInt_(jint s, jint s1, jint s2);

FOUNDATION_EXPORT void OrgApacheLuceneUtilAutomatonStatePair_initWithInt_withInt_(OrgApacheLuceneUtilAutomatonStatePair *self, jint s1, jint s2);

FOUNDATION_EXPORT OrgApacheLuceneUtilAutomatonStatePair *new_OrgApacheLuceneUtilAutomatonStatePair_initWithInt_withInt_(jint s1, jint s2) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneUtilAutomatonStatePair *create_OrgApacheLuceneUtilAutomatonStatePair_initWithInt_withInt_(jint s1, jint s2);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilAutomatonStatePair)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneUtilAutomatonStatePair")
