//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/fst/FST.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneUtilFstFST")
#ifdef RESTRICT_OrgApacheLuceneUtilFstFST
#define INCLUDE_ALL_OrgApacheLuceneUtilFstFST 0
#else
#define INCLUDE_ALL_OrgApacheLuceneUtilFstFST 1
#endif
#undef RESTRICT_OrgApacheLuceneUtilFstFST

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneUtilFstFST_) && (INCLUDE_ALL_OrgApacheLuceneUtilFstFST || defined(INCLUDE_OrgApacheLuceneUtilFstFST))
#define OrgApacheLuceneUtilFstFST_

#define RESTRICT_OrgApacheLuceneUtilAccountable 1
#define INCLUDE_OrgApacheLuceneUtilAccountable 1
#include "org/apache/lucene/util/Accountable.h"

@class IOSByteArray;
@class OrgApacheLuceneStoreDataInput;
@class OrgApacheLuceneStoreDataOutput;
@class OrgApacheLuceneUtilFstBuilder;
@class OrgApacheLuceneUtilFstBuilder_UnCompiledNode;
@class OrgApacheLuceneUtilFstBytesStore;
@class OrgApacheLuceneUtilFstFST_Arc;
@class OrgApacheLuceneUtilFstFST_BytesReader;
@class OrgApacheLuceneUtilFstFST_INPUT_TYPE;
@class OrgApacheLuceneUtilFstOutputs;
@class OrgLukhnosPortmobileFilePath;
@protocol JavaUtilCollection;

/*!
 @brief Represents an finite state machine (FST), using a
   compact byte[] format.
 <p> The format is similar to what's used by Morfologik
   (http://sourceforge.net/projects/morfologik).    
 <p> See the <code>package
       documentation</code>
  for some simple examples.
 */
@interface OrgApacheLuceneUtilFstFST : NSObject < OrgApacheLuceneUtilAccountable > {
 @public
  OrgApacheLuceneUtilFstFST_INPUT_TYPE *inputType_;
  id emptyOutput_;
  /*!
   @brief A <code>BytesStore</code>, used during building, or during reading when
   the FST is very large (more than 1 GB).If the FST is less than 1
   GB then bytesArray is set instead.
   */
  OrgApacheLuceneUtilFstBytesStore *bytes_;
  /*!
   @brief Used at read time when the FST fits into a single byte[].
   */
  IOSByteArray *bytesArray_;
  OrgApacheLuceneUtilFstOutputs *outputs_;
}
@property (readonly, class) jint BIT_FINAL_ARC NS_SWIFT_NAME(BIT_FINAL_ARC);
@property (readonly, class) jint BIT_LAST_ARC NS_SWIFT_NAME(BIT_LAST_ARC);
@property (readonly, class) jint BIT_TARGET_NEXT NS_SWIFT_NAME(BIT_TARGET_NEXT);
@property (readonly, class) jint BIT_STOP_NODE NS_SWIFT_NAME(BIT_STOP_NODE);
@property (readonly, class) jint BIT_ARC_HAS_OUTPUT NS_SWIFT_NAME(BIT_ARC_HAS_OUTPUT);
@property (readonly, class) jint BIT_ARC_HAS_FINAL_OUTPUT NS_SWIFT_NAME(BIT_ARC_HAS_FINAL_OUTPUT);
@property (readonly, class) jint FIXED_ARRAY_SHALLOW_DISTANCE NS_SWIFT_NAME(FIXED_ARRAY_SHALLOW_DISTANCE);
@property (readonly, class) jint FIXED_ARRAY_NUM_ARCS_SHALLOW NS_SWIFT_NAME(FIXED_ARRAY_NUM_ARCS_SHALLOW);
@property (readonly, class) jint FIXED_ARRAY_NUM_ARCS_DEEP NS_SWIFT_NAME(FIXED_ARRAY_NUM_ARCS_DEEP);
@property (readonly, class) jint END_LABEL NS_SWIFT_NAME(END_LABEL);
@property (readonly, class) jint DEFAULT_MAX_BLOCK_BITS NS_SWIFT_NAME(DEFAULT_MAX_BLOCK_BITS);

#pragma mark Public

/*!
 @brief Load a previously saved FST.
 */
- (instancetype __nonnull)initWithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)inArg
                              withOrgApacheLuceneUtilFstOutputs:(OrgApacheLuceneUtilFstOutputs *)outputs;

/*!
 @brief Load a previously saved FST; maxBlockBits allows you to
   control the size of the byte[] pages used to hold the FST bytes.
 */
- (instancetype __nonnull)initWithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)inArg
                              withOrgApacheLuceneUtilFstOutputs:(OrgApacheLuceneUtilFstOutputs *)outputs
                                                        withInt:(jint)maxBlockBits;

/*!
 @brief Finds an arc leaving the incoming arc, replacing the arc in place.
 This returns null if the arc was not found, else the incoming arc.
 */
- (OrgApacheLuceneUtilFstFST_Arc *)findTargetArcWithInt:(jint)labelToMatch
                      withOrgApacheLuceneUtilFstFST_Arc:(OrgApacheLuceneUtilFstFST_Arc *)follow
                      withOrgApacheLuceneUtilFstFST_Arc:(OrgApacheLuceneUtilFstFST_Arc *)arc
              withOrgApacheLuceneUtilFstFST_BytesReader:(OrgApacheLuceneUtilFstFST_BytesReader *)inArg;

/*!
 @brief Returns a <code>BytesReader</code> for this FST, positioned at
   position 0.
 */
- (OrgApacheLuceneUtilFstFST_BytesReader *)getBytesReader;

- (id<JavaUtilCollection>)getChildResources;

- (id)getEmptyOutput;

/*!
 @brief Fills virtual 'start' arc, ie, an empty incoming arc to
   the FST's start node
 */
- (OrgApacheLuceneUtilFstFST_Arc *)getFirstArcWithOrgApacheLuceneUtilFstFST_Arc:(OrgApacheLuceneUtilFstFST_Arc *)arc;

- (OrgApacheLuceneUtilFstFST_INPUT_TYPE *)getInputType;

- (jlong)ramBytesUsed;

/*!
 @brief Reads an automaton from a file.
 */
+ (OrgApacheLuceneUtilFstFST *)readWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path
                                  withOrgApacheLuceneUtilFstOutputs:(OrgApacheLuceneUtilFstOutputs *)outputs;

- (OrgApacheLuceneUtilFstFST_Arc *)readFirstRealTargetArcWithLong:(jlong)node
                                withOrgApacheLuceneUtilFstFST_Arc:(OrgApacheLuceneUtilFstFST_Arc *)arc
                        withOrgApacheLuceneUtilFstFST_BytesReader:(OrgApacheLuceneUtilFstFST_BytesReader *)inArg;

/*!
 @brief Follow the <code>follow</code> arc and read the first arc of its target;
  this changes the provided <code>arc</code> (2nd arg) in-place and returns
  it.
 @return Returns the second argument (<code>arc</code>).
 */
- (OrgApacheLuceneUtilFstFST_Arc *)readFirstTargetArcWithOrgApacheLuceneUtilFstFST_Arc:(OrgApacheLuceneUtilFstFST_Arc *)follow
                                                     withOrgApacheLuceneUtilFstFST_Arc:(OrgApacheLuceneUtilFstFST_Arc *)arc
                                             withOrgApacheLuceneUtilFstFST_BytesReader:(OrgApacheLuceneUtilFstFST_BytesReader *)inArg;

/*!
 @brief Reads one BYTE1/2/4 label from the provided <code>DataInput</code>.
 */
- (jint)readLabelWithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)inArg;

/*!
 @brief Follows the <code>follow</code> arc and reads the last
   arc of its target; this changes the provided  
 <code>arc</code> (2nd arg) in-place and returns it.
 @return Returns the second argument
  (<code>arc</code>).
 */
- (OrgApacheLuceneUtilFstFST_Arc *)readLastTargetArcWithOrgApacheLuceneUtilFstFST_Arc:(OrgApacheLuceneUtilFstFST_Arc *)follow
                                                    withOrgApacheLuceneUtilFstFST_Arc:(OrgApacheLuceneUtilFstFST_Arc *)arc
                                            withOrgApacheLuceneUtilFstFST_BytesReader:(OrgApacheLuceneUtilFstFST_BytesReader *)inArg;

/*!
 @brief In-place read; returns the arc.
 */
- (OrgApacheLuceneUtilFstFST_Arc *)readNextArcWithOrgApacheLuceneUtilFstFST_Arc:(OrgApacheLuceneUtilFstFST_Arc *)arc
                                      withOrgApacheLuceneUtilFstFST_BytesReader:(OrgApacheLuceneUtilFstFST_BytesReader *)inArg;

/*!
 @brief Peeks at next arc's label; does not alter arc.Do
   not call this if arc.isLast()!
 */
- (jint)readNextArcLabelWithOrgApacheLuceneUtilFstFST_Arc:(OrgApacheLuceneUtilFstFST_Arc *)arc
                withOrgApacheLuceneUtilFstFST_BytesReader:(OrgApacheLuceneUtilFstFST_BytesReader *)inArg;

/*!
 @brief Never returns null, but you should never call this if
   arc.isLast() is true.
 */
- (OrgApacheLuceneUtilFstFST_Arc *)readNextRealArcWithOrgApacheLuceneUtilFstFST_Arc:(OrgApacheLuceneUtilFstFST_Arc *)arc
                                          withOrgApacheLuceneUtilFstFST_BytesReader:(OrgApacheLuceneUtilFstFST_BytesReader *)inArg;

- (void)saveWithOrgApacheLuceneStoreDataOutput:(OrgApacheLuceneStoreDataOutput *)outArg;

/*!
 @brief Writes an automaton to a file.
 */
- (void)saveWithOrgLukhnosPortmobileFilePath:(OrgLukhnosPortmobileFilePath *)path;

/*!
 @brief returns true if the node at this address has any
   outgoing arcs
 */
+ (jboolean)targetHasArcsWithOrgApacheLuceneUtilFstFST_Arc:(OrgApacheLuceneUtilFstFST_Arc *)arc;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype __nonnull)initWithOrgApacheLuceneUtilFstFST_INPUT_TYPE:(OrgApacheLuceneUtilFstFST_INPUT_TYPE *)inputType
                                     withOrgApacheLuceneUtilFstOutputs:(OrgApacheLuceneUtilFstOutputs *)outputs
                                                           withBoolean:(jboolean)willPackFST
                                                             withFloat:(jfloat)acceptableOverheadRatio
                                                               withInt:(jint)bytesPageBits;

- (jlong)addNodeWithOrgApacheLuceneUtilFstBuilder:(OrgApacheLuceneUtilFstBuilder *)builder
 withOrgApacheLuceneUtilFstBuilder_UnCompiledNode:(OrgApacheLuceneUtilFstBuilder_UnCompiledNode *)nodeIn;

- (void)finishWithLong:(jlong)newStartNode;

/*!
 @brief Checks if <code>arc</code>'s target state is in expanded (or vector) format.
 @return Returns <code>true</code> if <code>arc</code> points to a state in an
  expanded array format.
 */
- (jboolean)isExpandedTargetWithOrgApacheLuceneUtilFstFST_Arc:(OrgApacheLuceneUtilFstFST_Arc *)follow
                    withOrgApacheLuceneUtilFstFST_BytesReader:(OrgApacheLuceneUtilFstFST_BytesReader *)inArg;

/*!
 @brief Expert: creates an FST by packing this one.This
   process requires substantial additional RAM (currently
   up to ~8 bytes per node depending on  
 <code>acceptableOverheadRatio</code>), but then should
   produce a smaller FST.
 <p>The implementation of this method uses ideas from
   <a target="_blank" href="http://www.cs.put.poznan.pl/dweiss/site/publications/download/fsacomp.pdf">Smaller Representation of Finite State Automata</a>,
   which describes techniques to reduce the size of a FST.
   However, this is not a strict implementation of the
   algorithms described in this paper.
 */
- (OrgApacheLuceneUtilFstFST *)packWithOrgApacheLuceneUtilFstBuilder:(OrgApacheLuceneUtilFstBuilder *)builder
                                                             withInt:(jint)minInCountDeref
                                                             withInt:(jint)maxDerefNodes
                                                           withFloat:(jfloat)acceptableOverheadRatio;

- (void)setEmptyOutputWithId:(id)v;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneUtilFstFST)

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilFstFST, inputType_, OrgApacheLuceneUtilFstFST_INPUT_TYPE *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilFstFST, emptyOutput_, id)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilFstFST, bytes_, OrgApacheLuceneUtilFstBytesStore *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilFstFST, bytesArray_, IOSByteArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilFstFST, outputs_, OrgApacheLuceneUtilFstOutputs *)

inline jint OrgApacheLuceneUtilFstFST_get_BIT_FINAL_ARC(void);
#define OrgApacheLuceneUtilFstFST_BIT_FINAL_ARC 1
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneUtilFstFST, BIT_FINAL_ARC, jint)

inline jint OrgApacheLuceneUtilFstFST_get_BIT_LAST_ARC(void);
#define OrgApacheLuceneUtilFstFST_BIT_LAST_ARC 2
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneUtilFstFST, BIT_LAST_ARC, jint)

inline jint OrgApacheLuceneUtilFstFST_get_BIT_TARGET_NEXT(void);
#define OrgApacheLuceneUtilFstFST_BIT_TARGET_NEXT 4
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneUtilFstFST, BIT_TARGET_NEXT, jint)

inline jint OrgApacheLuceneUtilFstFST_get_BIT_STOP_NODE(void);
#define OrgApacheLuceneUtilFstFST_BIT_STOP_NODE 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneUtilFstFST, BIT_STOP_NODE, jint)

/*!
 @brief This flag is set if the arc has an output.
 */
inline jint OrgApacheLuceneUtilFstFST_get_BIT_ARC_HAS_OUTPUT(void);
#define OrgApacheLuceneUtilFstFST_BIT_ARC_HAS_OUTPUT 16
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneUtilFstFST, BIT_ARC_HAS_OUTPUT, jint)

inline jint OrgApacheLuceneUtilFstFST_get_BIT_ARC_HAS_FINAL_OUTPUT(void);
#define OrgApacheLuceneUtilFstFST_BIT_ARC_HAS_FINAL_OUTPUT 32
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneUtilFstFST, BIT_ARC_HAS_FINAL_OUTPUT, jint)

/*!
 - seealso: #shouldExpand(Builder, UnCompiledNode)
 */
inline jint OrgApacheLuceneUtilFstFST_get_FIXED_ARRAY_SHALLOW_DISTANCE(void);
#define OrgApacheLuceneUtilFstFST_FIXED_ARRAY_SHALLOW_DISTANCE 3
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneUtilFstFST, FIXED_ARRAY_SHALLOW_DISTANCE, jint)

/*!
 - seealso: #shouldExpand(Builder, UnCompiledNode)
 */
inline jint OrgApacheLuceneUtilFstFST_get_FIXED_ARRAY_NUM_ARCS_SHALLOW(void);
#define OrgApacheLuceneUtilFstFST_FIXED_ARRAY_NUM_ARCS_SHALLOW 5
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneUtilFstFST, FIXED_ARRAY_NUM_ARCS_SHALLOW, jint)

/*!
 - seealso: #shouldExpand(Builder, UnCompiledNode)
 */
inline jint OrgApacheLuceneUtilFstFST_get_FIXED_ARRAY_NUM_ARCS_DEEP(void);
#define OrgApacheLuceneUtilFstFST_FIXED_ARRAY_NUM_ARCS_DEEP 10
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneUtilFstFST, FIXED_ARRAY_NUM_ARCS_DEEP, jint)

/*!
 @brief If arc has this label then that arc is final/accepted
 */
inline jint OrgApacheLuceneUtilFstFST_get_END_LABEL(void);
#define OrgApacheLuceneUtilFstFST_END_LABEL -1
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneUtilFstFST, END_LABEL, jint)

inline jint OrgApacheLuceneUtilFstFST_get_DEFAULT_MAX_BLOCK_BITS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint OrgApacheLuceneUtilFstFST_DEFAULT_MAX_BLOCK_BITS;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(OrgApacheLuceneUtilFstFST, DEFAULT_MAX_BLOCK_BITS, jint)

FOUNDATION_EXPORT void OrgApacheLuceneUtilFstFST_initWithOrgApacheLuceneUtilFstFST_INPUT_TYPE_withOrgApacheLuceneUtilFstOutputs_withBoolean_withFloat_withInt_(OrgApacheLuceneUtilFstFST *self, OrgApacheLuceneUtilFstFST_INPUT_TYPE *inputType, OrgApacheLuceneUtilFstOutputs *outputs, jboolean willPackFST, jfloat acceptableOverheadRatio, jint bytesPageBits);

FOUNDATION_EXPORT OrgApacheLuceneUtilFstFST *new_OrgApacheLuceneUtilFstFST_initWithOrgApacheLuceneUtilFstFST_INPUT_TYPE_withOrgApacheLuceneUtilFstOutputs_withBoolean_withFloat_withInt_(OrgApacheLuceneUtilFstFST_INPUT_TYPE *inputType, OrgApacheLuceneUtilFstOutputs *outputs, jboolean willPackFST, jfloat acceptableOverheadRatio, jint bytesPageBits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneUtilFstFST *create_OrgApacheLuceneUtilFstFST_initWithOrgApacheLuceneUtilFstFST_INPUT_TYPE_withOrgApacheLuceneUtilFstOutputs_withBoolean_withFloat_withInt_(OrgApacheLuceneUtilFstFST_INPUT_TYPE *inputType, OrgApacheLuceneUtilFstOutputs *outputs, jboolean willPackFST, jfloat acceptableOverheadRatio, jint bytesPageBits);

FOUNDATION_EXPORT void OrgApacheLuceneUtilFstFST_initWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilFstOutputs_(OrgApacheLuceneUtilFstFST *self, OrgApacheLuceneStoreDataInput *inArg, OrgApacheLuceneUtilFstOutputs *outputs);

FOUNDATION_EXPORT OrgApacheLuceneUtilFstFST *new_OrgApacheLuceneUtilFstFST_initWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilFstOutputs_(OrgApacheLuceneStoreDataInput *inArg, OrgApacheLuceneUtilFstOutputs *outputs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneUtilFstFST *create_OrgApacheLuceneUtilFstFST_initWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilFstOutputs_(OrgApacheLuceneStoreDataInput *inArg, OrgApacheLuceneUtilFstOutputs *outputs);

FOUNDATION_EXPORT void OrgApacheLuceneUtilFstFST_initWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilFstOutputs_withInt_(OrgApacheLuceneUtilFstFST *self, OrgApacheLuceneStoreDataInput *inArg, OrgApacheLuceneUtilFstOutputs *outputs, jint maxBlockBits);

FOUNDATION_EXPORT OrgApacheLuceneUtilFstFST *new_OrgApacheLuceneUtilFstFST_initWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilFstOutputs_withInt_(OrgApacheLuceneStoreDataInput *inArg, OrgApacheLuceneUtilFstOutputs *outputs, jint maxBlockBits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneUtilFstFST *create_OrgApacheLuceneUtilFstFST_initWithOrgApacheLuceneStoreDataInput_withOrgApacheLuceneUtilFstOutputs_withInt_(OrgApacheLuceneStoreDataInput *inArg, OrgApacheLuceneUtilFstOutputs *outputs, jint maxBlockBits);

FOUNDATION_EXPORT OrgApacheLuceneUtilFstFST *OrgApacheLuceneUtilFstFST_readWithOrgLukhnosPortmobileFilePath_withOrgApacheLuceneUtilFstOutputs_(OrgLukhnosPortmobileFilePath *path, OrgApacheLuceneUtilFstOutputs *outputs);

FOUNDATION_EXPORT jboolean OrgApacheLuceneUtilFstFST_targetHasArcsWithOrgApacheLuceneUtilFstFST_Arc_(OrgApacheLuceneUtilFstFST_Arc *arc);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilFstFST)

#endif

#if !defined (OrgApacheLuceneUtilFstFST_INPUT_TYPE_) && (INCLUDE_ALL_OrgApacheLuceneUtilFstFST || defined(INCLUDE_OrgApacheLuceneUtilFstFST_INPUT_TYPE))
#define OrgApacheLuceneUtilFstFST_INPUT_TYPE_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, OrgApacheLuceneUtilFstFST_INPUT_TYPE_Enum) {
  OrgApacheLuceneUtilFstFST_INPUT_TYPE_Enum_BYTE1 = 0,
  OrgApacheLuceneUtilFstFST_INPUT_TYPE_Enum_BYTE2 = 1,
  OrgApacheLuceneUtilFstFST_INPUT_TYPE_Enum_BYTE4 = 2,
};

/*!
 @brief Specifies allowed range of each int input label for
   this FST.
 */
@interface OrgApacheLuceneUtilFstFST_INPUT_TYPE : JavaLangEnum

@property (readonly, class, nonnull) OrgApacheLuceneUtilFstFST_INPUT_TYPE *BYTE1 NS_SWIFT_NAME(BYTE1);
@property (readonly, class, nonnull) OrgApacheLuceneUtilFstFST_INPUT_TYPE *BYTE2 NS_SWIFT_NAME(BYTE2);
@property (readonly, class, nonnull) OrgApacheLuceneUtilFstFST_INPUT_TYPE *BYTE4 NS_SWIFT_NAME(BYTE4);
#pragma mark Public

+ (OrgApacheLuceneUtilFstFST_INPUT_TYPE *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (OrgApacheLuceneUtilFstFST_INPUT_TYPE_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneUtilFstFST_INPUT_TYPE)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgApacheLuceneUtilFstFST_INPUT_TYPE *OrgApacheLuceneUtilFstFST_INPUT_TYPE_values_[];

inline OrgApacheLuceneUtilFstFST_INPUT_TYPE *OrgApacheLuceneUtilFstFST_INPUT_TYPE_get_BYTE1(void);
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneUtilFstFST_INPUT_TYPE, BYTE1)

inline OrgApacheLuceneUtilFstFST_INPUT_TYPE *OrgApacheLuceneUtilFstFST_INPUT_TYPE_get_BYTE2(void);
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneUtilFstFST_INPUT_TYPE, BYTE2)

inline OrgApacheLuceneUtilFstFST_INPUT_TYPE *OrgApacheLuceneUtilFstFST_INPUT_TYPE_get_BYTE4(void);
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneUtilFstFST_INPUT_TYPE, BYTE4)

FOUNDATION_EXPORT IOSObjectArray *OrgApacheLuceneUtilFstFST_INPUT_TYPE_values(void);

FOUNDATION_EXPORT OrgApacheLuceneUtilFstFST_INPUT_TYPE *OrgApacheLuceneUtilFstFST_INPUT_TYPE_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgApacheLuceneUtilFstFST_INPUT_TYPE *OrgApacheLuceneUtilFstFST_INPUT_TYPE_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilFstFST_INPUT_TYPE)

#endif

#if !defined (OrgApacheLuceneUtilFstFST_Arc_) && (INCLUDE_ALL_OrgApacheLuceneUtilFstFST || defined(INCLUDE_OrgApacheLuceneUtilFstFST_Arc))
#define OrgApacheLuceneUtilFstFST_Arc_

/*!
 @brief Represents a single arc.
 */
@interface OrgApacheLuceneUtilFstFST_Arc : NSObject {
 @public
  jint label_;
  id output_;
  jlong node_;
  /*!
   @brief To node (ord or address)
   */
  jlong target_;
  jbyte flags_;
  id nextFinalOutput_;
  jlong nextArc_;
  /*!
   @brief Where the first arc in the array starts; only valid if
   bytesPerArc !
   = 0
   */
  jlong posArcsStart_;
  /*!
   @brief Non-zero if this arc is part of an array, which means all
   arcs for the node are encoded with a fixed number of bytes so
   that we can random access by index.We do when there are enough
   arcs leaving one node.
   It wastes some bytes but gives faster
   lookups.
   */
  jint bytesPerArc_;
  /*!
   @brief Where we are in the array; only valid if bytesPerArc !
   = 0.
   */
  jint arcIdx_;
  /*!
   @brief How many arcs in the array; only valid if bytesPerArc !
   = 0.
   */
  jint numArcs_;
}

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Returns this
 */
- (OrgApacheLuceneUtilFstFST_Arc *)copyFromWithOrgApacheLuceneUtilFstFST_Arc:(OrgApacheLuceneUtilFstFST_Arc *)other OBJC_METHOD_FAMILY_NONE;

- (jboolean)isFinal;

- (jboolean)isLast;

- (NSString *)description;

#pragma mark Package-Private

- (jboolean)flagWithInt:(jint)flag;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilFstFST_Arc)

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilFstFST_Arc, output_, id)
J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilFstFST_Arc, nextFinalOutput_, id)

FOUNDATION_EXPORT void OrgApacheLuceneUtilFstFST_Arc_init(OrgApacheLuceneUtilFstFST_Arc *self);

FOUNDATION_EXPORT OrgApacheLuceneUtilFstFST_Arc *new_OrgApacheLuceneUtilFstFST_Arc_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneUtilFstFST_Arc *create_OrgApacheLuceneUtilFstFST_Arc_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilFstFST_Arc)

#endif

#if !defined (OrgApacheLuceneUtilFstFST_BytesReader_) && (INCLUDE_ALL_OrgApacheLuceneUtilFstFST || defined(INCLUDE_OrgApacheLuceneUtilFstFST_BytesReader))
#define OrgApacheLuceneUtilFstFST_BytesReader_

#define RESTRICT_OrgApacheLuceneStoreDataInput 1
#define INCLUDE_OrgApacheLuceneStoreDataInput 1
#include "org/apache/lucene/store/DataInput.h"

/*!
 @brief Reads bytes stored in an FST.
 */
@interface OrgApacheLuceneUtilFstFST_BytesReader : OrgApacheLuceneStoreDataInput

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Get current read position.
 */
- (jlong)getPosition;

/*!
 @brief Returns true if this reader uses reversed bytes
   under-the-hood.
 */
- (jboolean)reversed;

/*!
 @brief Set current read position.
 */
- (void)setPositionWithLong:(jlong)pos;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilFstFST_BytesReader)

FOUNDATION_EXPORT void OrgApacheLuceneUtilFstFST_BytesReader_init(OrgApacheLuceneUtilFstFST_BytesReader *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilFstFST_BytesReader)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneUtilFstFST")
