//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/fst/CharSequenceOutputs.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneUtilFstCharSequenceOutputs")
#ifdef RESTRICT_OrgApacheLuceneUtilFstCharSequenceOutputs
#define INCLUDE_ALL_OrgApacheLuceneUtilFstCharSequenceOutputs 0
#else
#define INCLUDE_ALL_OrgApacheLuceneUtilFstCharSequenceOutputs 1
#endif
#undef RESTRICT_OrgApacheLuceneUtilFstCharSequenceOutputs

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneUtilFstCharSequenceOutputs_) && (INCLUDE_ALL_OrgApacheLuceneUtilFstCharSequenceOutputs || defined(INCLUDE_OrgApacheLuceneUtilFstCharSequenceOutputs))
#define OrgApacheLuceneUtilFstCharSequenceOutputs_

#define RESTRICT_OrgApacheLuceneUtilFstOutputs 1
#define INCLUDE_OrgApacheLuceneUtilFstOutputs 1
#include "org/apache/lucene/util/fst/Outputs.h"

@class OrgApacheLuceneStoreDataInput;
@class OrgApacheLuceneStoreDataOutput;
@class OrgApacheLuceneUtilCharsRef;

/*!
 @brief An FST <code>Outputs</code> implementation where each output
  is a sequence of characters.
 */
@interface OrgApacheLuceneUtilFstCharSequenceOutputs : OrgApacheLuceneUtilFstOutputs

#pragma mark Public

- (OrgApacheLuceneUtilCharsRef *)addWithId:(OrgApacheLuceneUtilCharsRef *)prefix
                                    withId:(OrgApacheLuceneUtilCharsRef *)output;

- (OrgApacheLuceneUtilCharsRef *)commonWithId:(OrgApacheLuceneUtilCharsRef *)output1
                                       withId:(OrgApacheLuceneUtilCharsRef *)output2;

- (OrgApacheLuceneUtilCharsRef *)getNoOutput;

+ (OrgApacheLuceneUtilFstCharSequenceOutputs *)getSingleton;

- (OrgApacheLuceneUtilCharsRef *)mergeWithId:(OrgApacheLuceneUtilCharsRef *)arg0
                                      withId:(OrgApacheLuceneUtilCharsRef *)arg1;

- (NSString *)outputToStringWithId:(OrgApacheLuceneUtilCharsRef *)output;

- (jlong)ramBytesUsedWithId:(OrgApacheLuceneUtilCharsRef *)output;

- (OrgApacheLuceneUtilCharsRef *)readWithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)inArg;

- (OrgApacheLuceneUtilCharsRef *)readFinalOutputWithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)arg0;

- (void)skipOutputWithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)inArg;

- (OrgApacheLuceneUtilCharsRef *)subtractWithId:(OrgApacheLuceneUtilCharsRef *)output
                                         withId:(OrgApacheLuceneUtilCharsRef *)inc;

- (void)writeWithId:(OrgApacheLuceneUtilCharsRef *)prefix
withOrgApacheLuceneStoreDataOutput:(OrgApacheLuceneStoreDataOutput *)outArg;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneUtilFstCharSequenceOutputs)

FOUNDATION_EXPORT OrgApacheLuceneUtilFstCharSequenceOutputs *OrgApacheLuceneUtilFstCharSequenceOutputs_getSingleton(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilFstCharSequenceOutputs)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneUtilFstCharSequenceOutputs")
