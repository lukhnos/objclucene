//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/fst/BytesStore.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneUtilFstBytesStore")
#ifdef RESTRICT_OrgApacheLuceneUtilFstBytesStore
#define INCLUDE_ALL_OrgApacheLuceneUtilFstBytesStore 0
#else
#define INCLUDE_ALL_OrgApacheLuceneUtilFstBytesStore 1
#endif
#undef RESTRICT_OrgApacheLuceneUtilFstBytesStore

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneUtilFstBytesStore_) && (INCLUDE_ALL_OrgApacheLuceneUtilFstBytesStore || defined(INCLUDE_OrgApacheLuceneUtilFstBytesStore))
#define OrgApacheLuceneUtilFstBytesStore_

#define RESTRICT_OrgApacheLuceneStoreDataOutput 1
#define INCLUDE_OrgApacheLuceneStoreDataOutput 1
#include "org/apache/lucene/store/DataOutput.h"

#define RESTRICT_OrgApacheLuceneUtilAccountable 1
#define INCLUDE_OrgApacheLuceneUtilAccountable 1
#include "org/apache/lucene/util/Accountable.h"

@class IOSByteArray;
@class OrgApacheLuceneStoreDataInput;
@class OrgApacheLuceneUtilFstFST_BytesReader;
@protocol JavaUtilCollection;

@interface OrgApacheLuceneUtilFstBytesStore : OrgApacheLuceneStoreDataOutput < OrgApacheLuceneUtilAccountable >

#pragma mark Public

/*!
 @brief Pulls bytes from the provided IndexInput.
 */
- (instancetype __nonnull)initPackagePrivateWithOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)inArg
                                                                     withLong:(jlong)numBytes
                                                                      withInt:(jint)maxBlockSize;

- (instancetype __nonnull)initPackagePrivateWithInt:(jint)blockBits;

/*!
 @brief Absolute copy bytes self to self, without changing the
   position.Note: this cannot "grow" the bytes, so must
   only call it on already written parts.
 */
- (void)copyBytesWithLong:(jlong)src
                 withLong:(jlong)dest
                  withInt:(jint)len OBJC_METHOD_FAMILY_NONE;

- (void)finish;

- (id<JavaUtilCollection>)getChildResources;

- (OrgApacheLuceneUtilFstFST_BytesReader *)getForwardReader;

- (jlong)getPosition;

- (OrgApacheLuceneUtilFstFST_BytesReader *)getReverseReader;

- (jlong)ramBytesUsed;

/*!
 @brief Reverse from srcPos, inclusive, to destPos, inclusive.
 */
- (void)reverseWithLong:(jlong)srcPos
               withLong:(jlong)destPos;

- (void)skipBytesWithInt:(jint)len;

- (NSString *)description;

/*!
 @brief Pos must be less than the max position written so far!
 Ie, you cannot "grow" the file with this!
 */
- (void)truncateWithLong:(jlong)newLen;

- (void)writeByteWithByte:(jbyte)b;

/*!
 @brief Absolute write byte; you must ensure dest is &lt; max
   position written so far.
 */
- (void)writeByteWithInt:(jint)dest
                withByte:(jbyte)b;

- (void)writeBytesWithByteArray:(IOSByteArray *)b
                        withInt:(jint)offset
                        withInt:(jint)len;

/*!
 @brief Writes an int at the absolute position without
   changing the current pointer.
 */
- (void)writeIntWithLong:(jlong)pos
                 withInt:(jint)value;

/*!
 @brief Writes all of our bytes to the target <code>DataOutput</code>.
 */
- (void)writeToWithOrgApacheLuceneStoreDataOutput:(OrgApacheLuceneStoreDataOutput *)outArg;

#pragma mark Package-Private

- (jint)getBlockBits;

- (OrgApacheLuceneUtilFstFST_BytesReader *)getReverseReaderWithBoolean:(jboolean)allowSingle;

/*!
 @brief Absolute writeBytes without changing the current
   position.Note: this cannot "grow" the bytes, so you
   must only call it on already written parts.
 */
- (void)writeBytesWithLong:(jlong)dest
             withByteArray:(IOSByteArray *)b
                   withInt:(jint)offset
                   withInt:(jint)len;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneUtilFstBytesStore)

FOUNDATION_EXPORT void OrgApacheLuceneUtilFstBytesStore_initPackagePrivateWithInt_(OrgApacheLuceneUtilFstBytesStore *self, jint blockBits);

FOUNDATION_EXPORT OrgApacheLuceneUtilFstBytesStore *new_OrgApacheLuceneUtilFstBytesStore_initPackagePrivateWithInt_(jint blockBits) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneUtilFstBytesStore *create_OrgApacheLuceneUtilFstBytesStore_initPackagePrivateWithInt_(jint blockBits);

FOUNDATION_EXPORT void OrgApacheLuceneUtilFstBytesStore_initPackagePrivateWithOrgApacheLuceneStoreDataInput_withLong_withInt_(OrgApacheLuceneUtilFstBytesStore *self, OrgApacheLuceneStoreDataInput *inArg, jlong numBytes, jint maxBlockSize);

FOUNDATION_EXPORT OrgApacheLuceneUtilFstBytesStore *new_OrgApacheLuceneUtilFstBytesStore_initPackagePrivateWithOrgApacheLuceneStoreDataInput_withLong_withInt_(OrgApacheLuceneStoreDataInput *inArg, jlong numBytes, jint maxBlockSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneUtilFstBytesStore *create_OrgApacheLuceneUtilFstBytesStore_initPackagePrivateWithOrgApacheLuceneStoreDataInput_withLong_withInt_(OrgApacheLuceneStoreDataInput *inArg, jlong numBytes, jint maxBlockSize);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilFstBytesStore)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneUtilFstBytesStore")
