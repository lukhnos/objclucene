//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/IntroSorter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneUtilIntroSorter")
#ifdef RESTRICT_OrgApacheLuceneUtilIntroSorter
#define INCLUDE_ALL_OrgApacheLuceneUtilIntroSorter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneUtilIntroSorter 1
#endif
#undef RESTRICT_OrgApacheLuceneUtilIntroSorter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneUtilIntroSorter_) && (INCLUDE_ALL_OrgApacheLuceneUtilIntroSorter || defined(INCLUDE_OrgApacheLuceneUtilIntroSorter))
#define OrgApacheLuceneUtilIntroSorter_

#define RESTRICT_OrgApacheLuceneUtilSorter 1
#define INCLUDE_OrgApacheLuceneUtilSorter 1
#include "org/apache/lucene/util/Sorter.h"

/*!
 @brief <code>Sorter</code> implementation based on a variant of the quicksort algorithm
  called <a href="http://en.wikipedia.org/wiki/Introsort">introsort</a>: when
  the recursion level exceeds the log of the length of the array to sort, it
  falls back to heapsort.This prevents quicksort from running into its
  worst-case quadratic runtime.
 Small arrays are sorted with
  insertion sort.
 */
@interface OrgApacheLuceneUtilIntroSorter : OrgApacheLuceneUtilSorter

#pragma mark Public

/*!
 @brief Create a new <code>IntroSorter</code>.
 */
- (instancetype __nonnull)init;

- (void)sortWithInt:(jint)from
            withInt:(jint)to;

#pragma mark Protected

/*!
 @brief Compare the pivot with the slot at <code>j</code>, similarly to
   <code>compare(i, j)</code>.
 */
- (jint)comparePivotWithInt:(jint)j;

/*!
 @brief Save the value at slot <code>i</code> so that it can later be used as a
  pivot, see <code>comparePivot(int)</code>.
 */
- (void)setPivotWithInt:(jint)i;

#pragma mark Package-Private

+ (jint)ceilLog2WithInt:(jint)n;

- (void)quicksortWithInt:(jint)from
                 withInt:(jint)to
                 withInt:(jint)maxDepth;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilIntroSorter)

FOUNDATION_EXPORT jint OrgApacheLuceneUtilIntroSorter_ceilLog2WithInt_(jint n);

FOUNDATION_EXPORT void OrgApacheLuceneUtilIntroSorter_init(OrgApacheLuceneUtilIntroSorter *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilIntroSorter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneUtilIntroSorter")
