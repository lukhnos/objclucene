//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./sandbox/src/java/org/apache/lucene/util/GeoProjectionUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneUtilGeoProjectionUtils")
#ifdef RESTRICT_OrgApacheLuceneUtilGeoProjectionUtils
#define INCLUDE_ALL_OrgApacheLuceneUtilGeoProjectionUtils 0
#else
#define INCLUDE_ALL_OrgApacheLuceneUtilGeoProjectionUtils 1
#endif
#undef RESTRICT_OrgApacheLuceneUtilGeoProjectionUtils

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneUtilGeoProjectionUtils_) && (INCLUDE_ALL_OrgApacheLuceneUtilGeoProjectionUtils || defined(INCLUDE_OrgApacheLuceneUtilGeoProjectionUtils))
#define OrgApacheLuceneUtilGeoProjectionUtils_

@class IOSDoubleArray;

/*!
 @brief Reusable geo-spatial projection utility methods.
 */
@interface OrgApacheLuceneUtilGeoProjectionUtils : NSObject
@property (readonly, class) jdouble SEMIMAJOR_AXIS NS_SWIFT_NAME(SEMIMAJOR_AXIS);
@property (readonly, class) jdouble FLATTENING NS_SWIFT_NAME(FLATTENING);
@property (readonly, class) jdouble SEMIMINOR_AXIS NS_SWIFT_NAME(SEMIMINOR_AXIS);
@property (readonly, class) jdouble ECCENTRICITY NS_SWIFT_NAME(ECCENTRICITY);
@property (readonly, class) jdouble PI_OVER_2 NS_SWIFT_NAME(PI_OVER_2);
@property (readonly, class) jdouble SEMIMAJOR_AXIS2 NS_SWIFT_NAME(SEMIMAJOR_AXIS2);
@property (readonly, class) jdouble SEMIMINOR_AXIS2 NS_SWIFT_NAME(SEMIMINOR_AXIS2);

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Convert from Earth-Centered-Fixed to Easting, Northing, Up Right Hand System
 @param x ECF X coordinate (in meters)
 @param y ECF Y coordinate (in meters)
 @param z ECF Z coordinate (in meters)
 @param centerLon ENU origin longitude (in degrees)
 @param centerLat ENU origin latitude (in degrees)
 @param centerAlt ENU altitude (in meters)
 @param enu reusable enu result
 @return Easting, Northing, Up coordinate
 */
+ (IOSDoubleArray *)ecfToENUWithDouble:(jdouble)x
                            withDouble:(jdouble)y
                            withDouble:(jdouble)z
                            withDouble:(jdouble)centerLon
                            withDouble:(jdouble)centerLat
                            withDouble:(jdouble)centerAlt
                       withDoubleArray:(IOSDoubleArray *)enu;

/*!
 @brief Converts from geocentric earth-centered earth-fixed to geodesic lat/lon/alt
 @param x Cartesian x coordinate
 @param y Cartesian y coordinate
 @param z Cartesian z coordinate
 @param lla 0: longitude 1: latitude: 2: altitude
 @return double array as 0: longitude 1: latitude 2: altitude
 */
+ (IOSDoubleArray *)ecfToLLAWithDouble:(jdouble)x
                            withDouble:(jdouble)y
                            withDouble:(jdouble)z
                       withDoubleArray:(IOSDoubleArray *)lla;

/*!
 @brief Convert from Easting, Northing, Up Right-Handed system to Earth Centered Fixed system
 @param x ENU x coordinate (in meters)
 @param y ENU y coordinate (in meters)
 @param z ENU z coordinate (in meters)
 @param centerLon ENU origin longitude (in degrees)
 @param centerLat ENU origin latitude (in degrees)
 @param centerAlt ENU origin altitude (in meters)
 @param ecf reusable ecf result
 @return ecf result coordinate
 */
+ (IOSDoubleArray *)enuToECFWithDouble:(jdouble)x
                            withDouble:(jdouble)y
                            withDouble:(jdouble)z
                            withDouble:(jdouble)centerLon
                            withDouble:(jdouble)centerLat
                            withDouble:(jdouble)centerAlt
                       withDoubleArray:(IOSDoubleArray *)ecf;

/*!
 @brief Converts from East North Up right-hand rule to lat lon alt in degrees
 @param x easting (in meters)
 @param y northing (in meters)
 @param z up (in meters)
 @param centerLon reference point longitude (in degrees)
 @param centerLat reference point latitude (in degrees)
 @param centerAlt reference point altitude (in meters)
 @param lla resulting lat, lon, alt point (in degrees)
 @return lat, lon, alt point (in degrees)
 */
+ (IOSDoubleArray *)enuToLLAWithDouble:(jdouble)x
                            withDouble:(jdouble)y
                            withDouble:(jdouble)z
                            withDouble:(jdouble)centerLon
                            withDouble:(jdouble)centerLat
                            withDouble:(jdouble)centerAlt
                       withDoubleArray:(IOSDoubleArray *)lla;

/*!
 @brief Converts from geodesic lon lat alt to geocentric earth-centered earth-fixed
 @param lon geodesic longitude
 @param lat geodesic latitude
 @param alt geodesic altitude
 @param ecf reusable earth-centered earth-fixed result
 @return either a new ecef array or the reusable ecf parameter
 */
+ (IOSDoubleArray *)llaToECFWithDouble:(jdouble)lon
                            withDouble:(jdouble)lat
                            withDouble:(jdouble)alt
                       withDoubleArray:(IOSDoubleArray *)ecf;

/*!
 @brief Converts from lat lon alt (in degrees) to East North Up right-hand coordinate system
 @param lon longitude in degrees
 @param lat latitude in degrees
 @param alt altitude in meters
 @param centerLon reference point longitude in degrees
 @param centerLat reference point latitude in degrees
 @param centerAlt reference point altitude in meters
 @param enu result east, north, up coordinate
 @return east, north, up coordinate
 */
+ (IOSDoubleArray *)llaToENUWithDouble:(jdouble)lon
                            withDouble:(jdouble)lat
                            withDouble:(jdouble)alt
                            withDouble:(jdouble)centerLon
                            withDouble:(jdouble)centerLat
                            withDouble:(jdouble)centerAlt
                       withDoubleArray:(IOSDoubleArray *)enu;

/*!
 @brief Finds a point along a bearing from a given lon,lat geolocation using vincenty's distance formula
 @param lon origin longitude in degrees
 @param lat origin latitude in degrees
 @param bearing azimuthal bearing in degrees
 @param dist distance in meters
 @param pt resulting point
 @return the point along a bearing at a given distance in meters
 */
+ (IOSDoubleArray *)pointFromLonLatBearingWithDouble:(jdouble)lon
                                          withDouble:(jdouble)lat
                                          withDouble:(jdouble)bearing
                                          withDouble:(jdouble)dist
                                     withDoubleArray:(IOSDoubleArray *)pt;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneUtilGeoProjectionUtils)

inline jdouble OrgApacheLuceneUtilGeoProjectionUtils_get_SEMIMAJOR_AXIS(void);
#define OrgApacheLuceneUtilGeoProjectionUtils_SEMIMAJOR_AXIS 6378137.0
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneUtilGeoProjectionUtils, SEMIMAJOR_AXIS, jdouble)

inline jdouble OrgApacheLuceneUtilGeoProjectionUtils_get_FLATTENING(void);
#define OrgApacheLuceneUtilGeoProjectionUtils_FLATTENING 0.0033528106647474805
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneUtilGeoProjectionUtils, FLATTENING, jdouble)

inline jdouble OrgApacheLuceneUtilGeoProjectionUtils_get_SEMIMINOR_AXIS(void);
#define OrgApacheLuceneUtilGeoProjectionUtils_SEMIMINOR_AXIS 6356752.314245179
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneUtilGeoProjectionUtils, SEMIMINOR_AXIS, jdouble)

inline jdouble OrgApacheLuceneUtilGeoProjectionUtils_get_ECCENTRICITY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jdouble OrgApacheLuceneUtilGeoProjectionUtils_ECCENTRICITY;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(OrgApacheLuceneUtilGeoProjectionUtils, ECCENTRICITY, jdouble)

inline jdouble OrgApacheLuceneUtilGeoProjectionUtils_get_PI_OVER_2(void);
#define OrgApacheLuceneUtilGeoProjectionUtils_PI_OVER_2 1.5707963267948966
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneUtilGeoProjectionUtils, PI_OVER_2, jdouble)

inline jdouble OrgApacheLuceneUtilGeoProjectionUtils_get_SEMIMAJOR_AXIS2(void);
#define OrgApacheLuceneUtilGeoProjectionUtils_SEMIMAJOR_AXIS2 4.0680631590769E13
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneUtilGeoProjectionUtils, SEMIMAJOR_AXIS2, jdouble)

inline jdouble OrgApacheLuceneUtilGeoProjectionUtils_get_SEMIMINOR_AXIS2(void);
#define OrgApacheLuceneUtilGeoProjectionUtils_SEMIMINOR_AXIS2 4.0408299984661445E13
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneUtilGeoProjectionUtils, SEMIMINOR_AXIS2, jdouble)

FOUNDATION_EXPORT void OrgApacheLuceneUtilGeoProjectionUtils_init(OrgApacheLuceneUtilGeoProjectionUtils *self);

FOUNDATION_EXPORT OrgApacheLuceneUtilGeoProjectionUtils *new_OrgApacheLuceneUtilGeoProjectionUtils_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneUtilGeoProjectionUtils *create_OrgApacheLuceneUtilGeoProjectionUtils_init(void);

FOUNDATION_EXPORT IOSDoubleArray *OrgApacheLuceneUtilGeoProjectionUtils_ecfToLLAWithDouble_withDouble_withDouble_withDoubleArray_(jdouble x, jdouble y, jdouble z, IOSDoubleArray *lla);

FOUNDATION_EXPORT IOSDoubleArray *OrgApacheLuceneUtilGeoProjectionUtils_llaToECFWithDouble_withDouble_withDouble_withDoubleArray_(jdouble lon, jdouble lat, jdouble alt, IOSDoubleArray *ecf);

FOUNDATION_EXPORT IOSDoubleArray *OrgApacheLuceneUtilGeoProjectionUtils_llaToENUWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(jdouble lon, jdouble lat, jdouble alt, jdouble centerLon, jdouble centerLat, jdouble centerAlt, IOSDoubleArray *enu);

FOUNDATION_EXPORT IOSDoubleArray *OrgApacheLuceneUtilGeoProjectionUtils_enuToLLAWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(jdouble x, jdouble y, jdouble z, jdouble centerLon, jdouble centerLat, jdouble centerAlt, IOSDoubleArray *lla);

FOUNDATION_EXPORT IOSDoubleArray *OrgApacheLuceneUtilGeoProjectionUtils_ecfToENUWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(jdouble x, jdouble y, jdouble z, jdouble centerLon, jdouble centerLat, jdouble centerAlt, IOSDoubleArray *enu);

FOUNDATION_EXPORT IOSDoubleArray *OrgApacheLuceneUtilGeoProjectionUtils_enuToECFWithDouble_withDouble_withDouble_withDouble_withDouble_withDouble_withDoubleArray_(jdouble x, jdouble y, jdouble z, jdouble centerLon, jdouble centerLat, jdouble centerAlt, IOSDoubleArray *ecf);

FOUNDATION_EXPORT IOSDoubleArray *OrgApacheLuceneUtilGeoProjectionUtils_pointFromLonLatBearingWithDouble_withDouble_withDouble_withDouble_withDoubleArray_(jdouble lon, jdouble lat, jdouble bearing, jdouble dist, IOSDoubleArray *pt);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilGeoProjectionUtils)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneUtilGeoProjectionUtils")
