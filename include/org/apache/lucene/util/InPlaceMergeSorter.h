//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/InPlaceMergeSorter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneUtilInPlaceMergeSorter")
#ifdef RESTRICT_OrgApacheLuceneUtilInPlaceMergeSorter
#define INCLUDE_ALL_OrgApacheLuceneUtilInPlaceMergeSorter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneUtilInPlaceMergeSorter 1
#endif
#undef RESTRICT_OrgApacheLuceneUtilInPlaceMergeSorter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneUtilInPlaceMergeSorter_) && (INCLUDE_ALL_OrgApacheLuceneUtilInPlaceMergeSorter || defined(INCLUDE_OrgApacheLuceneUtilInPlaceMergeSorter))
#define OrgApacheLuceneUtilInPlaceMergeSorter_

#define RESTRICT_OrgApacheLuceneUtilSorter 1
#define INCLUDE_OrgApacheLuceneUtilSorter 1
#include "org/apache/lucene/util/Sorter.h"

/*!
 @brief <code>Sorter</code> implementation based on the merge-sort algorithm that merges
   in place (no extra memory will be allocated).Small arrays are sorted with
   insertion sort.
 */
@interface OrgApacheLuceneUtilInPlaceMergeSorter : OrgApacheLuceneUtilSorter

#pragma mark Public

/*!
 @brief Create a new <code>InPlaceMergeSorter</code>
 */
- (instancetype __nonnull)init;

- (void)sortWithInt:(jint)from
            withInt:(jint)to;

#pragma mark Package-Private

- (void)mergeSortWithInt:(jint)from
                 withInt:(jint)to;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilInPlaceMergeSorter)

FOUNDATION_EXPORT void OrgApacheLuceneUtilInPlaceMergeSorter_init(OrgApacheLuceneUtilInPlaceMergeSorter *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilInPlaceMergeSorter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneUtilInPlaceMergeSorter")
