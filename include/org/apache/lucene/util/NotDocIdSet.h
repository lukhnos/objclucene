//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/NotDocIdSet.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneUtilNotDocIdSet")
#ifdef RESTRICT_OrgApacheLuceneUtilNotDocIdSet
#define INCLUDE_ALL_OrgApacheLuceneUtilNotDocIdSet 0
#else
#define INCLUDE_ALL_OrgApacheLuceneUtilNotDocIdSet 1
#endif
#undef RESTRICT_OrgApacheLuceneUtilNotDocIdSet

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneUtilNotDocIdSet_) && (INCLUDE_ALL_OrgApacheLuceneUtilNotDocIdSet || defined(INCLUDE_OrgApacheLuceneUtilNotDocIdSet))
#define OrgApacheLuceneUtilNotDocIdSet_

#define RESTRICT_OrgApacheLuceneSearchDocIdSet 1
#define INCLUDE_OrgApacheLuceneSearchDocIdSet 1
#include "org/apache/lucene/search/DocIdSet.h"

@class OrgApacheLuceneSearchDocIdSetIterator;
@protocol OrgApacheLuceneUtilBits;

/*!
 @brief This <code>DocIdSet</code> encodes the negation of another <code>DocIdSet</code>.
 It is cacheable and supports random-access if the underlying set is
  cacheable and supports random-access.
 */
@interface OrgApacheLuceneUtilNotDocIdSet : OrgApacheLuceneSearchDocIdSet

#pragma mark Public

/*!
 @brief Sole constructor.
 */
- (instancetype __nonnull)initWithInt:(jint)maxDoc
    withOrgApacheLuceneSearchDocIdSet:(OrgApacheLuceneSearchDocIdSet *)inArg;

- (id<OrgApacheLuceneUtilBits>)bits;

- (jboolean)isCacheable;

- (OrgApacheLuceneSearchDocIdSetIterator *)iterator;

- (jlong)ramBytesUsed;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneUtilNotDocIdSet)

FOUNDATION_EXPORT void OrgApacheLuceneUtilNotDocIdSet_initWithInt_withOrgApacheLuceneSearchDocIdSet_(OrgApacheLuceneUtilNotDocIdSet *self, jint maxDoc, OrgApacheLuceneSearchDocIdSet *inArg);

FOUNDATION_EXPORT OrgApacheLuceneUtilNotDocIdSet *new_OrgApacheLuceneUtilNotDocIdSet_initWithInt_withOrgApacheLuceneSearchDocIdSet_(jint maxDoc, OrgApacheLuceneSearchDocIdSet *inArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneUtilNotDocIdSet *create_OrgApacheLuceneUtilNotDocIdSet_initWithInt_withOrgApacheLuceneSearchDocIdSet_(jint maxDoc, OrgApacheLuceneSearchDocIdSet *inArg);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilNotDocIdSet)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneUtilNotDocIdSet")
