//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/Counter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneUtilCounter")
#ifdef RESTRICT_OrgApacheLuceneUtilCounter
#define INCLUDE_ALL_OrgApacheLuceneUtilCounter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneUtilCounter 1
#endif
#undef RESTRICT_OrgApacheLuceneUtilCounter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneUtilCounter_) && (INCLUDE_ALL_OrgApacheLuceneUtilCounter || defined(INCLUDE_OrgApacheLuceneUtilCounter))
#define OrgApacheLuceneUtilCounter_

/*!
 @brief Simple counter class
 */
@interface OrgApacheLuceneUtilCounter : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Adds the given delta to the counters current value
 @param delta the delta to add
 @return the counters updated value
 */
- (jlong)addAndGetWithLong:(jlong)delta;

/*!
 @brief Returns the counters current value
 @return the counters current value
 */
- (jlong)get;

/*!
 @brief Returns a new counter.The returned counter is not thread-safe.
 */
+ (OrgApacheLuceneUtilCounter *)newCounter OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Returns a new counter.
 @param threadSafe <code>
  true </code>  if the returned counter can be used by multiple           threads concurrently.
 @return a new counter.
 */
+ (OrgApacheLuceneUtilCounter *)newCounterWithBoolean:(jboolean)threadSafe OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilCounter)

FOUNDATION_EXPORT void OrgApacheLuceneUtilCounter_init(OrgApacheLuceneUtilCounter *self);

FOUNDATION_EXPORT OrgApacheLuceneUtilCounter *OrgApacheLuceneUtilCounter_newCounter(void);

FOUNDATION_EXPORT OrgApacheLuceneUtilCounter *OrgApacheLuceneUtilCounter_newCounterWithBoolean_(jboolean threadSafe);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilCounter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneUtilCounter")
