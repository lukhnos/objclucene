//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/util/SentinelIntSet.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneUtilSentinelIntSet")
#ifdef RESTRICT_OrgApacheLuceneUtilSentinelIntSet
#define INCLUDE_ALL_OrgApacheLuceneUtilSentinelIntSet 0
#else
#define INCLUDE_ALL_OrgApacheLuceneUtilSentinelIntSet 1
#endif
#undef RESTRICT_OrgApacheLuceneUtilSentinelIntSet

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneUtilSentinelIntSet_) && (INCLUDE_ALL_OrgApacheLuceneUtilSentinelIntSet || defined(INCLUDE_OrgApacheLuceneUtilSentinelIntSet))
#define OrgApacheLuceneUtilSentinelIntSet_

@class IOSIntArray;

/*!
 @brief A native int hash-based set where one value is reserved to mean "EMPTY" internally.The space overhead is fairly low
  as there is only one power-of-two sized int[] to hold the values.
 The set is re-hashed when adding a value that
  would make it &gt;= 75% full.  Consider extending and over-riding <code>hash(int)</code> if the values might be poor
  hash keys; Lucene docids should be fine.
  The internal fields are exposed publicly to enable more efficient use at the expense of better O-O principles. 
 <p>
  To iterate over the integers held in this set, simply use code like this: 
 <pre class="prettyprint">
  SentinelIntSet set = ...
  for (int v : set.keys) {
    if (v == set.emptyVal)
      continue;
    //use v...
  }
@endcode
 */
@interface OrgApacheLuceneUtilSentinelIntSet : NSObject {
 @public
  /*!
   @brief A power-of-2 over-sized array holding the integers in the set along with empty values.
   */
  IOSIntArray *keys_;
  jint count_;
  jint emptyVal_;
  /*!
   @brief the count at which a rehash should be done
   */
  jint rehashCount_;
}

#pragma mark Public

/*!
 @param size The minimum number of elements this set should be able to hold without rehashing               (i.e. the slots are guaranteed not to change)
 @param emptyVal The integer value to use for EMPTY
 */
- (instancetype __nonnull)initWithInt:(jint)size
                              withInt:(jint)emptyVal;

- (void)clear;

/*!
 @brief Does this set contain the specified integer?
 */
- (jboolean)existsWithInt:(jint)key;

/*!
 @brief (internal) Returns the slot for this key, or -slot-1 if not found
 */
- (jint)findWithInt:(jint)key;

/*!
 @brief (internal) Returns the slot for this key
 */
- (jint)getSlotWithInt:(jint)key;

/*!
 @brief (internal) Return the hash for the key.The default implementation just returns the key,
  which is not appropriate for general purpose use.
 */
- (jint)hash__WithInt:(jint)key;

/*!
 @brief Puts this integer (key) in the set, and returns the slot index it was added to.
 It rehashes if adding it would make the set more than 75% full.
 */
- (jint)putWithInt:(jint)key;

/*!
 @brief Return the memory footprint of this class in bytes.
 */
- (jlong)ramBytesUsed;

/*!
 @brief (internal) Rehashes by doubling <code>int[] key</code> and filling with the old values.
 */
- (void)rehash;

/*!
 @brief The number of integers in this set.
 */
- (jint)size;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneUtilSentinelIntSet)

J2OBJC_FIELD_SETTER(OrgApacheLuceneUtilSentinelIntSet, keys_, IOSIntArray *)

FOUNDATION_EXPORT void OrgApacheLuceneUtilSentinelIntSet_initWithInt_withInt_(OrgApacheLuceneUtilSentinelIntSet *self, jint size, jint emptyVal);

FOUNDATION_EXPORT OrgApacheLuceneUtilSentinelIntSet *new_OrgApacheLuceneUtilSentinelIntSet_initWithInt_withInt_(jint size, jint emptyVal) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneUtilSentinelIntSet *create_OrgApacheLuceneUtilSentinelIntSet_initWithInt_withInt_(jint size, jint emptyVal);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneUtilSentinelIntSet)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneUtilSentinelIntSet")
