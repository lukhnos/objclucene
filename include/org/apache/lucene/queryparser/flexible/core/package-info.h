//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/core/package-info.java
//

/*!
 @brief Core classes of the flexible query parser framework.
 <h2>Flexible Query Parser</h2>
   
 <p>
  This package contains the necessary classes to implement a query parser.    
 <p>
  A query parser is divided in at least 2 phases, text parsing and query building, and one optional phase called query processing.  
 <h3>First Phase: Text Parsing</h3>
  <p>
  The text parsing phase is performed by a text parser, which implements <code>org.apache.lucene.queryparser.flexible.core.parser.SyntaxParser</code> interface.
  A text parser is responsible to get a query string and convert it to a <code>org.apache.lucene.queryparser.flexible.core.nodes.QueryNode</code> tree,
  which is an object structure that represents the elements defined in the query string.  
 <h3>Second (optional) Phase: Query Processing</h3>
  <p>
  The query processing phase is performed by a query processor, which implements <code>org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor</code>.
  A query processor is responsible to perform any processing on a <code>org.apache.lucene.queryparser.flexible.core.nodes.QueryNode</code> tree. This phase
  is optional and is used only if an extra processing, validation, query expansion, etc needs to be performed in a <code>org.apache.lucene.queryparser.flexible.core.nodes.QueryNode</code> tree.
  The <code>org.apache.lucene.queryparser.flexible.core.nodes.QueryNode</code> tree can be either be generated by a text parser or programmatically created.  
 <h3>Third Phase: Query Building</h3>
  <p>
  The query building phase is performed by a query builder, which implements <code>org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder</code>.
  A query builder is responsible to convert a <code>org.apache.lucene.queryparser.flexible.core.nodes.QueryNode</code> tree into an arbitrary object, which
  is usually used to be executed against a search index.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleCorePackage_info")
#ifdef RESTRICT_OrgApacheLuceneQueryparserFlexibleCorePackage_info
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleCorePackage_info 0
#else
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleCorePackage_info 1
#endif
#undef RESTRICT_OrgApacheLuceneQueryparserFlexibleCorePackage_info

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleCorePackage_info")
