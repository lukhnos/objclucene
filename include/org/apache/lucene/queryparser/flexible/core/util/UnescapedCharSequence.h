//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/core/util/UnescapedCharSequence.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence")
#ifdef RESTRICT_OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence 0
#else
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence 1
#endif
#undef RESTRICT_OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence_) && (INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence || defined(INCLUDE_OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence))
#define OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence_

#define RESTRICT_JavaLangCharSequence 1
#define INCLUDE_JavaLangCharSequence 1
#include "java/lang/CharSequence.h"

@class IOSBooleanArray;
@class IOSCharArray;
@class JavaUtilLocale;
@protocol JavaUtilStreamIntStream;

/*!
 @brief CharsSequence with escaped chars information.
 */
@interface OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence : NSObject < JavaLangCharSequence >

#pragma mark Public

/*!
 @brief Create a escaped CharSequence
 */
- (instancetype __nonnull)initWithCharArray:(IOSCharArray *)chars
                           withBooleanArray:(IOSBooleanArray *)wasEscaped
                                    withInt:(jint)offset
                                    withInt:(jint)length;

/*!
 @brief Create a non-escaped CharSequence
 */
- (instancetype __nonnull)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)text;

- (jchar)charAtWithInt:(jint)index;

- (jint)java_length;

- (id<JavaLangCharSequence>)subSequenceFrom:(jint)start
                                         to:(jint)end;

+ (id<JavaLangCharSequence>)toLowerCaseWithJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                             withJavaUtilLocale:(JavaUtilLocale *)locale;

- (NSString *)description;

/*!
 @brief Return a escaped String
 @return a escaped String
 */
- (NSString *)toStringEscaped;

/*!
 @brief Return a escaped String
 @param enabledChars - array of chars to be escaped
 @return a escaped String
 */
- (NSString *)toStringEscapedWithCharArray:(IOSCharArray *)enabledChars;

+ (jboolean)wasEscapedWithJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                       withInt:(jint)index;

- (jboolean)wasEscapedWithInt:(jint)index;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence)

FOUNDATION_EXPORT void OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence_initWithCharArray_withBooleanArray_withInt_withInt_(OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence *self, IOSCharArray *chars, IOSBooleanArray *wasEscaped, jint offset, jint length);

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence *new_OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence_initWithCharArray_withBooleanArray_withInt_withInt_(IOSCharArray *chars, IOSBooleanArray *wasEscaped, jint offset, jint length) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence *create_OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence_initWithCharArray_withBooleanArray_withInt_withInt_(IOSCharArray *chars, IOSBooleanArray *wasEscaped, jint offset, jint length);

FOUNDATION_EXPORT void OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence_initWithJavaLangCharSequence_(OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence *self, id<JavaLangCharSequence> text);

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence *new_OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence_initWithJavaLangCharSequence_(id<JavaLangCharSequence> text) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence *create_OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence_initWithJavaLangCharSequence_(id<JavaLangCharSequence> text);

FOUNDATION_EXPORT jboolean OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence_wasEscapedWithJavaLangCharSequence_withInt_(id<JavaLangCharSequence> text, jint index);

FOUNDATION_EXPORT id<JavaLangCharSequence> OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence_toLowerCaseWithJavaLangCharSequence_withJavaUtilLocale_(id<JavaLangCharSequence> text, JavaUtilLocale *locale);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleCoreUtilUnescapedCharSequence")
