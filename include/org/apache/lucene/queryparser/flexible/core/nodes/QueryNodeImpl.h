//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/core/nodes/QueryNodeImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl")
#ifdef RESTRICT_OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl 0
#else
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl 1
#endif
#undef RESTRICT_OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl_) && (INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl || defined(INCLUDE_OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl))
#define OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl_

#define RESTRICT_OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode 1
#define INCLUDE_OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode 1
#include "org/apache/lucene/queryparser/flexible/core/nodes/QueryNode.h"

@protocol JavaLangCharSequence;
@protocol JavaUtilList;
@protocol JavaUtilMap;

/*!
 @brief A <code>QueryNodeImpl</code> is the default implementation of the interface 
 <code>QueryNode</code>
 */
@interface OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl : NSObject < OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode, NSCopying > {
 @public
  /*!
   @brief If set to true the the method toQueryString will not write field names
   */
  jboolean toQueryStringIgnoreFields_;
}
@property (readonly, copy, class) NSString *PLAINTEXT_FIELD_NAME NS_SWIFT_NAME(PLAINTEXT_FIELD_NAME);

#pragma mark Public

- (instancetype __nonnull)init;

- (void)addWithJavaUtilList:(id<JavaUtilList>)children;

- (void)addWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:(id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)child;

- (id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)java_clone;

- (id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)cloneTree;

/*!
 @brief verify if a node contains a tag
 */
- (jboolean)containsTagWithNSString:(NSString *)tagName;

/*!
 @return a List for QueryNode object. Returns null, for nodes that do not
          contain children. All leaf Nodes return null.
 */
- (id<JavaUtilList>)getChildren;

- (id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)getParent;

- (id)getTagWithNSString:(NSString *)tagName;

/*!
 @brief Returns a map containing all tags attached to this query node.
 @return a map containing all tags attached to this query node
 */
- (id<JavaUtilMap>)getTagMap;

- (jboolean)isLeaf;

- (void)removeChildrenWithOrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode:(id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)childNode;

- (void)removeFromParent;

- (void)setWithJavaUtilList:(id<JavaUtilList>)children;

- (void)setTagWithNSString:(NSString *)tagName
                    withId:(id)value;

/*!
 @brief Every implementation of this class should return pseudo xml like this: 
  For FieldQueryNode: &lt;field start='1' end='2' field='subject' text='foo'/&gt;
 - seealso: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode#toString()
 */
- (NSString *)description;

- (void)unsetTagWithNSString:(NSString *)tagName;

#pragma mark Protected

- (void)allocate OBJC_METHOD_FAMILY_NONE;

/*!
 @brief This method is use toQueryString to detect if fld is the default field
 @param fld - field name
 @return true if fld is the default field
 */
- (jboolean)isDefaultFieldWithJavaLangCharSequence:(id<JavaLangCharSequence>)fld;

- (jboolean)isRoot;

- (void)setLeafWithBoolean:(jboolean)isLeaf;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl)

inline NSString *OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl_get_PLAINTEXT_FIELD_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl_PLAINTEXT_FIELD_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl, PLAINTEXT_FIELD_NAME, NSString *)

FOUNDATION_EXPORT void OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl_init(OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl")
