//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/core/nodes/PathQueryNode.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode")
#ifdef RESTRICT_OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode 0
#else
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode 1
#endif
#undef RESTRICT_OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_) && (INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode || defined(INCLUDE_OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode))
#define OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_

#define RESTRICT_OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl 1
#define INCLUDE_OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl 1
#include "org/apache/lucene/queryparser/flexible/core/nodes/QueryNodeImpl.h"

@class OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText;
@protocol JavaLangCharSequence;
@protocol JavaUtilList;
@protocol OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode;
@protocol OrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax;

/*!
 @brief A <code>PathQueryNode</code> is used to store queries like
  /company/USA/California /product/shoes/brown.QueryText are objects that
  contain the text, begin position and end position in the query.
 <p>
  Example how the text parser creates these objects: 
 </p>
  <pre class="prettyprint">
  List values = ArrayList(); 
  values.add(new PathQueryNode.QueryText("company", 1, 7)); 
  values.add(new PathQueryNode.QueryText("USA", 9, 12)); 
  values.add(new PathQueryNode.QueryText("California", 14, 23)); 
  QueryNode q = new PathQueryNode(values); 
 
@endcode
 */
@interface OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode : OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl

#pragma mark Public

/*!
 @param pathElements - List of QueryText objects
 */
- (instancetype __nonnull)initWithJavaUtilList:(id<JavaUtilList>)pathElements;

- (id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)cloneTree;

/*!
 @brief Returns the CharSequence value of a specific QueryText element
 @return the CharSequence for a specific QueryText element
 */
- (id<JavaLangCharSequence>)getFirstPathElement;

/*!
 @brief Returns the a specific QueryText element
 @return QueryText List size
 */
- (OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText *)getPathElementWithInt:(jint)index;

/*!
 @brief Returns the a List with all QueryText elements
 @return QueryText List size
 */
- (id<JavaUtilList>)getPathElements;

/*!
 @brief Returns a List QueryText element from position startIndex
 @return a List QueryText element from position startIndex
 */
- (id<JavaUtilList>)getPathElementsWithInt:(jint)startIndex;

/*!
 @brief Returns the a List with all QueryText elements
 */
- (void)setPathElementsWithJavaUtilList:(id<JavaUtilList>)elements;

- (id<JavaLangCharSequence>)toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:(id<OrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax>)escaper;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode)

FOUNDATION_EXPORT void OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_initWithJavaUtilList_(OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode *self, id<JavaUtilList> pathElements);

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode *new_OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_initWithJavaUtilList_(id<JavaUtilList> pathElements) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode *create_OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_initWithJavaUtilList_(id<JavaUtilList> pathElements);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode)

#endif

#if !defined (OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText_) && (INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode || defined(INCLUDE_OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText))
#define OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText_

@protocol JavaLangCharSequence;

/*!
 @brief Term text with a beginning and end position
 */
@interface OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText : NSObject < NSCopying > {
 @public
  id<JavaLangCharSequence> value_;
  /*!
   @brief !
   = null The term's begin position.
   */
  jint begin_;
  /*!
   @brief The term's end position.
   */
  jint end_;
}

#pragma mark Public

/*!
 @param value - text value
 @param begin - position in the query string
 @param end - position in the query string
 */
- (instancetype __nonnull)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)value
                                               withInt:(jint)begin
                                               withInt:(jint)end;

- (OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText *)java_clone;

/*!
 @return the begin
 */
- (jint)getBegin;

/*!
 @return the end
 */
- (jint)getEnd;

/*!
 @return the value
 */
- (id<JavaLangCharSequence>)getValue;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText)

J2OBJC_FIELD_SETTER(OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText, value_, id<JavaLangCharSequence>)

FOUNDATION_EXPORT void OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText_initWithJavaLangCharSequence_withInt_withInt_(OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText *self, id<JavaLangCharSequence> value, jint begin, jint end);

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText *new_OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText_initWithJavaLangCharSequence_withInt_withInt_(id<JavaLangCharSequence> value, jint begin, jint end) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText *create_OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText_initWithJavaLangCharSequence_withInt_withInt_(id<JavaLangCharSequence> value, jint begin, jint end);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode_QueryText)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleCoreNodesPathQueryNode")
