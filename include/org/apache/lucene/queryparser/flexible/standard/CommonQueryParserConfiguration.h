//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/CommonQueryParserConfiguration.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardCommonQueryParserConfiguration")
#ifdef RESTRICT_OrgApacheLuceneQueryparserFlexibleStandardCommonQueryParserConfiguration
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardCommonQueryParserConfiguration 0
#else
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardCommonQueryParserConfiguration 1
#endif
#undef RESTRICT_OrgApacheLuceneQueryparserFlexibleStandardCommonQueryParserConfiguration

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneQueryparserFlexibleStandardCommonQueryParserConfiguration_) && (INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardCommonQueryParserConfiguration || defined(INCLUDE_OrgApacheLuceneQueryparserFlexibleStandardCommonQueryParserConfiguration))
#define OrgApacheLuceneQueryparserFlexibleStandardCommonQueryParserConfiguration_

@class JavaUtilLocale;
@class JavaUtilTimeZone;
@class OrgApacheLuceneAnalysisAnalyzer;
@class OrgApacheLuceneDocumentDateTools_Resolution;
@class OrgApacheLuceneSearchMultiTermQuery_RewriteMethod;

/*!
 @brief Configuration options common across queryparser implementations.
 */
@protocol OrgApacheLuceneQueryparserFlexibleStandardCommonQueryParserConfiguration < JavaObject >

/*!
 @brief Whether terms of multi-term queries (e.g., wildcard,
  prefix, fuzzy and range) should be automatically
  lower-cased or not.Default is <code>true</code>.
 */
- (void)setLowercaseExpandedTermsWithBoolean:(jboolean)lowercaseExpandedTerms;

/*!
 - seealso: #setLowercaseExpandedTerms(boolean)
 */
- (jboolean)getLowercaseExpandedTerms;

/*!
 @brief Set to <code>true</code> to allow leading wildcard characters.
 <p>
  When set, <code>
 *</code> or <code>?</code> are allowed as the first character of a PrefixQuery and WildcardQuery. Note that this can produce
  very slow queries on big indexes. 
 <p>
  Default: false.
 */
- (void)setAllowLeadingWildcardWithBoolean:(jboolean)allowLeadingWildcard;

/*!
 @brief Set to <code>true</code> to enable position increments in result query.
 <p>
  When set, result phrase and multi-phrase queries will be aware of position
  increments. Useful when e.g. a StopFilter increases the position increment
  of the token that follows an omitted token. 
 <p>
  Default: false.
 */
- (void)setEnablePositionIncrementsWithBoolean:(jboolean)enabled;

/*!
 - seealso: #setEnablePositionIncrements(boolean)
 */
- (jboolean)getEnablePositionIncrements;

/*!
 @brief By default, it uses 
 <code>MultiTermQuery.CONSTANT_SCORE_REWRITE</code> when creating a
  prefix, wildcard and range queries.This implementation is generally
  preferable because it a) Runs faster b) Does not have the scarcity of terms
  unduly influence score c) avoids any <code>TooManyListenersException</code>
  exception.
 However, if your application really needs to use the
  old-fashioned boolean queries expansion rewriting and the above points are
  not relevant then use this change the rewrite method.
 */
- (void)setMultiTermRewriteMethodWithOrgApacheLuceneSearchMultiTermQuery_RewriteMethod:(OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *)method;

/*!
 - seealso: #setMultiTermRewriteMethod(org.apache.lucene.search.MultiTermQuery.RewriteMethod)
 */
- (OrgApacheLuceneSearchMultiTermQuery_RewriteMethod *)getMultiTermRewriteMethod;

/*!
 @brief Set the prefix length for fuzzy queries.Default is 0.
 @param fuzzyPrefixLength The fuzzyPrefixLength to set.
 */
- (void)setFuzzyPrefixLengthWithInt:(jint)fuzzyPrefixLength;

/*!
 @brief Set locale used by date range parsing.
 */
- (void)setLocaleWithJavaUtilLocale:(JavaUtilLocale *)locale;

/*!
 @brief Returns current locale, allowing access by subclasses.
 */
- (JavaUtilLocale *)getLocale;

- (void)setTimeZoneWithJavaUtilTimeZone:(JavaUtilTimeZone *)timeZone;

- (JavaUtilTimeZone *)getTimeZone;

/*!
 @brief Sets the default slop for phrases.If zero, then exact phrase matches are
  required.
 Default value is zero.
 */
- (void)setPhraseSlopWithInt:(jint)defaultPhraseSlop;

- (OrgApacheLuceneAnalysisAnalyzer *)getAnalyzer;

/*!
 - seealso: #setAllowLeadingWildcard(boolean)
 */
- (jboolean)getAllowLeadingWildcard;

/*!
 @brief Get the minimal similarity for fuzzy queries.
 */
- (jfloat)getFuzzyMinSim;

/*!
 @brief Get the prefix length for fuzzy queries.
 @return Returns the fuzzyPrefixLength.
 */
- (jint)getFuzzyPrefixLength;

/*!
 @brief Gets the default slop for phrases.
 */
- (jint)getPhraseSlop;

/*!
 @brief Set the minimum similarity for fuzzy queries.Default is defined on 
 <code>FuzzyQuery.defaultMinSimilarity</code>.
 */
- (void)setFuzzyMinSimWithFloat:(jfloat)fuzzyMinSim;

/*!
 @brief Sets the default <code>Resolution</code> used for certain field when
  no <code>Resolution</code> is defined for this field.
 @param dateResolution the default <code>Resolution</code>
 */
- (void)setDateResolutionWithOrgApacheLuceneDocumentDateTools_Resolution:(OrgApacheLuceneDocumentDateTools_Resolution *)dateResolution;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueryparserFlexibleStandardCommonQueryParserConfiguration)

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryparserFlexibleStandardCommonQueryParserConfiguration)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardCommonQueryParserConfiguration")
