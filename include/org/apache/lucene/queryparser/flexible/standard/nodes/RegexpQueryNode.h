//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/nodes/RegexpQueryNode.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardNodesRegexpQueryNode")
#ifdef RESTRICT_OrgApacheLuceneQueryparserFlexibleStandardNodesRegexpQueryNode
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardNodesRegexpQueryNode 0
#else
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardNodesRegexpQueryNode 1
#endif
#undef RESTRICT_OrgApacheLuceneQueryparserFlexibleStandardNodesRegexpQueryNode

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneQueryparserFlexibleStandardNodesRegexpQueryNode_) && (INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardNodesRegexpQueryNode || defined(INCLUDE_OrgApacheLuceneQueryparserFlexibleStandardNodesRegexpQueryNode))
#define OrgApacheLuceneQueryparserFlexibleStandardNodesRegexpQueryNode_

#define RESTRICT_OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl 1
#define INCLUDE_OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl 1
#include "org/apache/lucene/queryparser/flexible/core/nodes/QueryNodeImpl.h"

#define RESTRICT_OrgApacheLuceneQueryparserFlexibleCoreNodesTextableQueryNode 1
#define INCLUDE_OrgApacheLuceneQueryparserFlexibleCoreNodesTextableQueryNode 1
#include "org/apache/lucene/queryparser/flexible/core/nodes/TextableQueryNode.h"

#define RESTRICT_OrgApacheLuceneQueryparserFlexibleCoreNodesFieldableNode 1
#define INCLUDE_OrgApacheLuceneQueryparserFlexibleCoreNodesFieldableNode 1
#include "org/apache/lucene/queryparser/flexible/core/nodes/FieldableNode.h"

@class OrgApacheLuceneUtilBytesRef;
@protocol JavaLangCharSequence;
@protocol OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode;
@protocol OrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax;

/*!
 @brief A <code>RegexpQueryNode</code> represents <code>RegexpQuery</code> query Examples: /[a-z]|[0-9]/
 */
@interface OrgApacheLuceneQueryparserFlexibleStandardNodesRegexpQueryNode : OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl < OrgApacheLuceneQueryparserFlexibleCoreNodesTextableQueryNode, OrgApacheLuceneQueryparserFlexibleCoreNodesFieldableNode >

#pragma mark Public

/*!
 @param field - field name
 @param text - value that contains a regular expression
 @param begin - position in the query string
 @param end - position in the query string
 */
- (instancetype __nonnull)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)field
                              withJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                               withInt:(jint)begin
                                               withInt:(jint)end;

- (OrgApacheLuceneQueryparserFlexibleStandardNodesRegexpQueryNode *)cloneTree;

- (id<JavaLangCharSequence>)getField;

- (NSString *)getFieldAsString;

- (id<JavaLangCharSequence>)getText;

- (id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)java_clone;

- (void)setFieldWithJavaLangCharSequence:(id<JavaLangCharSequence>)field;

- (void)setTextWithJavaLangCharSequence:(id<JavaLangCharSequence>)text;

- (OrgApacheLuceneUtilBytesRef *)textToBytesRef;

- (id<JavaLangCharSequence>)toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:(id<OrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax>)escapeSyntaxParser;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueryparserFlexibleStandardNodesRegexpQueryNode)

FOUNDATION_EXPORT void OrgApacheLuceneQueryparserFlexibleStandardNodesRegexpQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_withInt_withInt_(OrgApacheLuceneQueryparserFlexibleStandardNodesRegexpQueryNode *self, id<JavaLangCharSequence> field, id<JavaLangCharSequence> text, jint begin, jint end);

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleStandardNodesRegexpQueryNode *new_OrgApacheLuceneQueryparserFlexibleStandardNodesRegexpQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_withInt_withInt_(id<JavaLangCharSequence> field, id<JavaLangCharSequence> text, jint begin, jint end) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleStandardNodesRegexpQueryNode *create_OrgApacheLuceneQueryparserFlexibleStandardNodesRegexpQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_withInt_withInt_(id<JavaLangCharSequence> field, id<JavaLangCharSequence> text, jint begin, jint end);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryparserFlexibleStandardNodesRegexpQueryNode)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardNodesRegexpQueryNode")
