//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/nodes/MultiPhraseQueryNode.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardNodesMultiPhraseQueryNode")
#ifdef RESTRICT_OrgApacheLuceneQueryparserFlexibleStandardNodesMultiPhraseQueryNode
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardNodesMultiPhraseQueryNode 0
#else
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardNodesMultiPhraseQueryNode 1
#endif
#undef RESTRICT_OrgApacheLuceneQueryparserFlexibleStandardNodesMultiPhraseQueryNode

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneQueryparserFlexibleStandardNodesMultiPhraseQueryNode_) && (INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardNodesMultiPhraseQueryNode || defined(INCLUDE_OrgApacheLuceneQueryparserFlexibleStandardNodesMultiPhraseQueryNode))
#define OrgApacheLuceneQueryparserFlexibleStandardNodesMultiPhraseQueryNode_

#define RESTRICT_OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl 1
#define INCLUDE_OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl 1
#include "org/apache/lucene/queryparser/flexible/core/nodes/QueryNodeImpl.h"

#define RESTRICT_OrgApacheLuceneQueryparserFlexibleCoreNodesFieldableNode 1
#define INCLUDE_OrgApacheLuceneQueryparserFlexibleCoreNodesFieldableNode 1
#include "org/apache/lucene/queryparser/flexible/core/nodes/FieldableNode.h"

@protocol JavaLangCharSequence;
@protocol OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode;
@protocol OrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax;

/*!
 @brief A <code>MultiPhraseQueryNode</code> indicates that its children should be used to
  build a <code>MultiPhraseQuery</code> instead of <code>PhraseQuery</code>.
 */
@interface OrgApacheLuceneQueryparserFlexibleStandardNodesMultiPhraseQueryNode : OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNodeImpl < OrgApacheLuceneQueryparserFlexibleCoreNodesFieldableNode >

#pragma mark Public

- (instancetype __nonnull)init;

- (id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)cloneTree;

- (id<JavaLangCharSequence>)getField;

- (id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)java_clone;

- (void)setFieldWithJavaLangCharSequence:(id<JavaLangCharSequence>)fieldName;

- (id<JavaLangCharSequence>)toQueryStringWithOrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax:(id<OrgApacheLuceneQueryparserFlexibleCoreParserEscapeQuerySyntax>)escapeSyntaxParser;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueryparserFlexibleStandardNodesMultiPhraseQueryNode)

FOUNDATION_EXPORT void OrgApacheLuceneQueryparserFlexibleStandardNodesMultiPhraseQueryNode_init(OrgApacheLuceneQueryparserFlexibleStandardNodesMultiPhraseQueryNode *self);

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleStandardNodesMultiPhraseQueryNode *new_OrgApacheLuceneQueryparserFlexibleStandardNodesMultiPhraseQueryNode_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleStandardNodesMultiPhraseQueryNode *create_OrgApacheLuceneQueryparserFlexibleStandardNodesMultiPhraseQueryNode_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryparserFlexibleStandardNodesMultiPhraseQueryNode)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardNodesMultiPhraseQueryNode")
