//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/nodes/TermRangeQueryNode.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode")
#ifdef RESTRICT_OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode 0
#else
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode 1
#endif
#undef RESTRICT_OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode_) && (INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode || defined(INCLUDE_OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode))
#define OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode_

#define RESTRICT_OrgApacheLuceneQueryparserFlexibleStandardNodesAbstractRangeQueryNode 1
#define INCLUDE_OrgApacheLuceneQueryparserFlexibleStandardNodesAbstractRangeQueryNode 1
#include "org/apache/lucene/queryparser/flexible/standard/nodes/AbstractRangeQueryNode.h"

@class OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode;
@protocol OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode;

/*!
 @brief This query node represents a range query composed by <code>FieldQueryNode</code>
  bounds, which means the bound values are strings.
 - seealso: FieldQueryNode
 - seealso: AbstractRangeQueryNode
 */
@interface OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode : OrgApacheLuceneQueryparserFlexibleStandardNodesAbstractRangeQueryNode

#pragma mark Public

/*!
 @brief Constructs a <code>TermRangeQueryNode</code> object using the given 
 <code>FieldQueryNode</code> as its bounds.
 @param lower the lower bound
 @param upper the upper bound
 @param lowerInclusive <code> true </code>  if the lower bound is inclusive, otherwise,  <code> false </code>
 @param upperInclusive <code> true </code>  if the upper bound is inclusive, otherwise,  <code> false </code>
 */
- (instancetype __nonnull)initWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode:(OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *)lower
                              withOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode:(OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *)upper
                                                                                withBoolean:(jboolean)lowerInclusive
                                                                                withBoolean:(jboolean)upperInclusive;

- (OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *)getLowerBound;

- (OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *)getUpperBound;

- (id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)java_clone;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode)

FOUNDATION_EXPORT void OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_withOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_withBoolean_withBoolean_(OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode *self, OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *lower, OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *upper, jboolean lowerInclusive, jboolean upperInclusive);

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode *new_OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_withOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_withBoolean_withBoolean_(OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *lower, OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *upper, jboolean lowerInclusive, jboolean upperInclusive) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode *create_OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_withOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_withBoolean_withBoolean_(OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *lower, OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *upper, jboolean lowerInclusive, jboolean upperInclusive);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardNodesTermRangeQueryNode")
