//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/nodes/PrefixWildcardQueryNode.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode")
#ifdef RESTRICT_OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode 0
#else
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode 1
#endif
#undef RESTRICT_OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode_) && (INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode || defined(INCLUDE_OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode))
#define OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode_

#define RESTRICT_OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode 1
#define INCLUDE_OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode 1
#include "org/apache/lucene/queryparser/flexible/standard/nodes/WildcardQueryNode.h"

@class OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode;
@protocol JavaLangCharSequence;
@protocol OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode;

/*!
 @brief A <code>PrefixWildcardQueryNode</code> represents wildcardquery that matches abc*
  or *.This does not apply to phrases, this is a special case on the original
  lucene parser.
 TODO: refactor the code to remove this special case from the
  parser. and probably do it on a Processor
 */
@interface OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode : OrgApacheLuceneQueryparserFlexibleStandardNodesWildcardQueryNode

#pragma mark Public

/*!
 @param field - field name
 @param text - value including the wildcard
 @param begin - position in the query string
 @param end - position in the query string
 */
- (instancetype __nonnull)initWithJavaLangCharSequence:(id<JavaLangCharSequence>)field
                              withJavaLangCharSequence:(id<JavaLangCharSequence>)text
                                               withInt:(jint)begin
                                               withInt:(jint)end;

- (instancetype __nonnull)initWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode:(OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *)fqn;

- (OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode *)cloneTree;

- (id<OrgApacheLuceneQueryparserFlexibleCoreNodesQueryNode>)java_clone;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode)

FOUNDATION_EXPORT void OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_withInt_withInt_(OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode *self, id<JavaLangCharSequence> field, id<JavaLangCharSequence> text, jint begin, jint end);

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode *new_OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_withInt_withInt_(id<JavaLangCharSequence> field, id<JavaLangCharSequence> text, jint begin, jint end) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode *create_OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode_initWithJavaLangCharSequence_withJavaLangCharSequence_withInt_withInt_(id<JavaLangCharSequence> field, id<JavaLangCharSequence> text, jint begin, jint end);

FOUNDATION_EXPORT void OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_(OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode *self, OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *fqn);

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode *new_OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_(OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *fqn) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode *create_OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode_initWithOrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode_(OrgApacheLuceneQueryparserFlexibleCoreNodesFieldQueryNode *fqn);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardNodesPrefixWildcardQueryNode")
