//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/config/NumberDateFormat.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardConfigNumberDateFormat")
#ifdef RESTRICT_OrgApacheLuceneQueryparserFlexibleStandardConfigNumberDateFormat
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardConfigNumberDateFormat 0
#else
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardConfigNumberDateFormat 1
#endif
#undef RESTRICT_OrgApacheLuceneQueryparserFlexibleStandardConfigNumberDateFormat

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneQueryparserFlexibleStandardConfigNumberDateFormat_) && (INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardConfigNumberDateFormat || defined(INCLUDE_OrgApacheLuceneQueryparserFlexibleStandardConfigNumberDateFormat))
#define OrgApacheLuceneQueryparserFlexibleStandardConfigNumberDateFormat_

#define RESTRICT_JavaTextNumberFormat 1
#define INCLUDE_JavaTextNumberFormat 1
#include "java/text/NumberFormat.h"

@class JavaLangStringBuffer;
@class JavaTextDateFormat;
@class JavaTextFieldPosition;
@class JavaTextParsePosition;

/*!
 @brief This <code>Format</code> parses <code>Long</code> into date strings and vice-versa.It
  uses the given <code>DateFormat</code> to parse and format dates, but before, it
  converts <code>Long</code> to <code>Date</code> objects or vice-versa.
 */
@interface OrgApacheLuceneQueryparserFlexibleStandardConfigNumberDateFormat : JavaTextNumberFormat

#pragma mark Public

/*!
 @brief Constructs a <code>NumberDateFormat</code> object using the given <code>DateFormat</code>.
 @param dateFormat<code>DateFormat</code>  used to parse and format dates
 */
- (instancetype __nonnull)initWithJavaTextDateFormat:(JavaTextDateFormat *)dateFormat;

- (JavaLangStringBuffer *)formatWithDouble:(jdouble)number
                  withJavaLangStringBuffer:(JavaLangStringBuffer *)toAppendTo
                 withJavaTextFieldPosition:(JavaTextFieldPosition *)pos;

- (JavaLangStringBuffer *)formatWithLong:(jlong)number
                withJavaLangStringBuffer:(JavaLangStringBuffer *)toAppendTo
               withJavaTextFieldPosition:(JavaTextFieldPosition *)pos;

- (JavaLangStringBuffer *)formatWithId:(id)number
              withJavaLangStringBuffer:(JavaLangStringBuffer *)toAppendTo
             withJavaTextFieldPosition:(JavaTextFieldPosition *)pos;

- (NSNumber *)parseWithNSString:(NSString *)source
      withJavaTextParsePosition:(JavaTextParsePosition *)parsePosition;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueryparserFlexibleStandardConfigNumberDateFormat)

FOUNDATION_EXPORT void OrgApacheLuceneQueryparserFlexibleStandardConfigNumberDateFormat_initWithJavaTextDateFormat_(OrgApacheLuceneQueryparserFlexibleStandardConfigNumberDateFormat *self, JavaTextDateFormat *dateFormat);

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleStandardConfigNumberDateFormat *new_OrgApacheLuceneQueryparserFlexibleStandardConfigNumberDateFormat_initWithJavaTextDateFormat_(JavaTextDateFormat *dateFormat) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleStandardConfigNumberDateFormat *create_OrgApacheLuceneQueryparserFlexibleStandardConfigNumberDateFormat_initWithJavaTextDateFormat_(JavaTextDateFormat *dateFormat);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryparserFlexibleStandardConfigNumberDateFormat)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleStandardConfigNumberDateFormat")
