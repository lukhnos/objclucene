//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/messages/package-info.java
//

/*!
 @brief For Native Language Support (NLS), system of software internationalization.
 <h2>NLS message API</h2>
  <p>
  This utility API, adds support for NLS messages in the apache code.
  It is currently used by the lucene "New Flexible Query PArser". 
 <p>
  Features:
      <ol>
          <li>Message reference in the code, using static Strings</li>
          <li>Message resource validation at class load time, for easier debugging</li>
          <li>Allows for message IDs to be re-factored using eclipse or other code re-factor tools</li>
          <li>Allows for reference count on messages, just like code</li>
      <li>Lazy loading of Message Strings</li>        
          <li>Normal loading Message Strings</li>                       
 </ol>
   
 <br>
  <br>
  <p>
  Lazy loading of Message Strings  
 <pre class="prettyprint">
    public class MessagesTestBundle extends NLS {   
      private static final String BUNDLE_NAME = MessagesTestBundle.class.getName();   
      private MessagesTestBundle() {
        // should never be instantiated
      }   
      static {
        // register all string ids with NLS class and initialize static string
        // values
        NLS.initializeMessages(BUNDLE_NAME, MessagesTestBundle.class);
      }   
      // static string must match the strings in the property files.
      public static String Q0001E_INVALID_SYNTAX;
      public static String Q0004E_INVALID_SYNTAX_ESCAPE_UNICODE_TRUNCATION;   
      // this message is missing from the properties file
      public static String Q0005E_MESSAGE_NOT_IN_BUNDLE;
    } 
      // Create a message reference
      Message invalidSyntax = new MessageImpl(MessagesTestBundle.Q0001E_INVALID_SYNTAX, "XXX");     
      // Do other stuff in the code...
      // when is time to display the message to the user or log the message on a file
      // the message is loaded from the correct bundle     
      String message1 = invalidSyntax.getLocalizedMessage();
      String message2 = invalidSyntax.getLocalizedMessage(Locale.JAPANESE); 
 
@endcode
   
 <br>
  <br>
  <p>
  Normal loading of Message Strings  
 <pre class="prettyprint">
    String message1 = NLS.getLocalizedMessage(MessagesTestBundle.Q0004E_INVALID_SYNTAX_ESCAPE_UNICODE_TRUNCATION);
    String message2 = NLS.getLocalizedMessage(MessagesTestBundle.Q0004E_INVALID_SYNTAX_ESCAPE_UNICODE_TRUNCATION, Locale.JAPANESE); 
 
@endcode
   
 <p>
  The org.apache.lucene.messages.TestNLS junit contains several other examples.
  The TestNLS java code is available from the Apache Lucene code repository.
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleMessagesPackage_info")
#ifdef RESTRICT_OrgApacheLuceneQueryparserFlexibleMessagesPackage_info
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleMessagesPackage_info 0
#else
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleMessagesPackage_info 1
#endif
#undef RESTRICT_OrgApacheLuceneQueryparserFlexibleMessagesPackage_info

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleMessagesPackage_info")
