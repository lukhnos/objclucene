//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/flexible/messages/NLS.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleMessagesNLS")
#ifdef RESTRICT_OrgApacheLuceneQueryparserFlexibleMessagesNLS
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleMessagesNLS 0
#else
#define INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleMessagesNLS 1
#endif
#undef RESTRICT_OrgApacheLuceneQueryparserFlexibleMessagesNLS

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneQueryparserFlexibleMessagesNLS_) && (INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleMessagesNLS || defined(INCLUDE_OrgApacheLuceneQueryparserFlexibleMessagesNLS))
#define OrgApacheLuceneQueryparserFlexibleMessagesNLS_

@class IOSClass;
@class IOSObjectArray;
@class JavaUtilLocale;

/*!
 @brief MessageBundles classes extend this class, to implement a bundle.
 For Native Language Support (NLS), system of software internationalization. 
  This interface is similar to the NLS class in eclipse.osgi.util.NLS class -
  initializeMessages() method resets the values of all static strings, should
  only be called by classes that extend from NLS (see TestMessages.java for
  reference) - performs validation of all message in a bundle, at class load
  time - performs per message validation at runtime - see NLSTest.java for
  usage reference 
  MessageBundle classes may subclass this type.
 */
@interface OrgApacheLuceneQueryparserFlexibleMessagesNLS : NSObject

#pragma mark Public

+ (NSString *)getLocalizedMessageWithNSString:(NSString *)key;

+ (NSString *)getLocalizedMessageWithNSString:(NSString *)key
                           withJavaUtilLocale:(JavaUtilLocale *)locale;

+ (NSString *)getLocalizedMessageWithNSString:(NSString *)key
                           withJavaUtilLocale:(JavaUtilLocale *)locale
                            withNSObjectArray:(IOSObjectArray *)args;

+ (NSString *)getLocalizedMessageWithNSString:(NSString *)key
                            withNSObjectArray:(IOSObjectArray *)args;

#pragma mark Protected

- (instancetype __nonnull)init;

/*!
 @brief Initialize a given class with the message bundle Keys Should be called from
  a class that extends NLS in a static block at class load time.
 @param bundleName Property file with that contains the message bundle
 @param clazz where constants will reside
 */
+ (void)initializeMessagesWithNSString:(NSString *)bundleName
                          withIOSClass:(IOSClass *)clazz OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneQueryparserFlexibleMessagesNLS)

FOUNDATION_EXPORT void OrgApacheLuceneQueryparserFlexibleMessagesNLS_init(OrgApacheLuceneQueryparserFlexibleMessagesNLS *self);

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleMessagesNLS *new_OrgApacheLuceneQueryparserFlexibleMessagesNLS_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueryparserFlexibleMessagesNLS *create_OrgApacheLuceneQueryparserFlexibleMessagesNLS_init(void);

FOUNDATION_EXPORT NSString *OrgApacheLuceneQueryparserFlexibleMessagesNLS_getLocalizedMessageWithNSString_(NSString *key);

FOUNDATION_EXPORT NSString *OrgApacheLuceneQueryparserFlexibleMessagesNLS_getLocalizedMessageWithNSString_withJavaUtilLocale_(NSString *key, JavaUtilLocale *locale);

FOUNDATION_EXPORT NSString *OrgApacheLuceneQueryparserFlexibleMessagesNLS_getLocalizedMessageWithNSString_withJavaUtilLocale_withNSObjectArray_(NSString *key, JavaUtilLocale *locale, IOSObjectArray *args);

FOUNDATION_EXPORT NSString *OrgApacheLuceneQueryparserFlexibleMessagesNLS_getLocalizedMessageWithNSString_withNSObjectArray_(NSString *key, IOSObjectArray *args);

FOUNDATION_EXPORT void OrgApacheLuceneQueryparserFlexibleMessagesNLS_initializeMessagesWithNSString_withIOSClass_(NSString *bundleName, IOSClass *clazz);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryparserFlexibleMessagesNLS)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserFlexibleMessagesNLS")
