//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/xml/builders/CachedFilterBuilder.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder")
#ifdef RESTRICT_OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder
#define INCLUDE_ALL_OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder 0
#else
#define INCLUDE_ALL_OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder 1
#endif
#undef RESTRICT_OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder_) && (INCLUDE_ALL_OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder || defined(INCLUDE_OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder))
#define OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder_

#define RESTRICT_OrgApacheLuceneQueryparserXmlFilterBuilder 1
#define INCLUDE_OrgApacheLuceneQueryparserXmlFilterBuilder 1
#include "org/apache/lucene/queryparser/xml/FilterBuilder.h"

@class OrgApacheLuceneQueryparserXmlFilterBuilderFactory;
@class OrgApacheLuceneQueryparserXmlQueryBuilderFactory;
@class OrgApacheLuceneSearchFilter;
@protocol OrgW3cDomElement;

/*!
 @brief Filters are cached in an LRU Cache keyed on the contained query or filter object.Using this will
  speed up overall performance for repeated uses of the same expensive query/filter.
 The sorts of
  queries/filters likely to benefit from caching need not necessarily be complex - e.g. simple
  TermQuerys with a large DF (document frequency) can be expensive  on large indexes.
  A good example of this might be a term query on a field with only 2 possible  values -
  "true" or "false". In a large index, querying or filtering on this field requires reading
  millions  of document ids from disk which can more usefully be cached as a filter bitset. 
 <p>
  For Queries/Filters to be cached and reused the object must implement hashcode and
  equals methods correctly so that duplicate queries/filters can be detected in the cache. 
 <p>
  The CoreParser.maxNumCachedFilters property can be used to control the size of the LRU
  Cache established during the construction of CoreParser instances.
 */
@interface OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder : NSObject < OrgApacheLuceneQueryparserXmlFilterBuilder >

#pragma mark Public

- (instancetype __nonnull)initWithOrgApacheLuceneQueryparserXmlQueryBuilderFactory:(OrgApacheLuceneQueryparserXmlQueryBuilderFactory *)queryFactory
                             withOrgApacheLuceneQueryparserXmlFilterBuilderFactory:(OrgApacheLuceneQueryparserXmlFilterBuilderFactory *)filterFactory
                                                                           withInt:(jint)cacheSize;

- (OrgApacheLuceneSearchFilter *)getFilterWithOrgW3cDomElement:(id<OrgW3cDomElement>)e;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder)

FOUNDATION_EXPORT void OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder_initWithOrgApacheLuceneQueryparserXmlQueryBuilderFactory_withOrgApacheLuceneQueryparserXmlFilterBuilderFactory_withInt_(OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder *self, OrgApacheLuceneQueryparserXmlQueryBuilderFactory *queryFactory, OrgApacheLuceneQueryparserXmlFilterBuilderFactory *filterFactory, jint cacheSize);

FOUNDATION_EXPORT OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder *new_OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder_initWithOrgApacheLuceneQueryparserXmlQueryBuilderFactory_withOrgApacheLuceneQueryparserXmlFilterBuilderFactory_withInt_(OrgApacheLuceneQueryparserXmlQueryBuilderFactory *queryFactory, OrgApacheLuceneQueryparserXmlFilterBuilderFactory *filterFactory, jint cacheSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder *create_OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder_initWithOrgApacheLuceneQueryparserXmlQueryBuilderFactory_withOrgApacheLuceneQueryparserXmlFilterBuilderFactory_withInt_(OrgApacheLuceneQueryparserXmlQueryBuilderFactory *queryFactory, OrgApacheLuceneQueryparserXmlFilterBuilderFactory *filterFactory, jint cacheSize);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder)

#endif

#if !defined (OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder_LRUCache_) && (INCLUDE_ALL_OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder || defined(INCLUDE_OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder_LRUCache))
#define OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder_LRUCache_

#define RESTRICT_JavaUtilLinkedHashMap 1
#define INCLUDE_JavaUtilLinkedHashMap 1
#include "java/util/LinkedHashMap.h"

@protocol JavaUtilMap;
@protocol JavaUtilMap_Entry;

@interface OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder_LRUCache : JavaUtilLinkedHashMap {
 @public
  jint maxsize_;
}

#pragma mark Public

- (instancetype __nonnull)initWithInt:(jint)maxsize;

#pragma mark Protected

- (jboolean)removeEldestEntryWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)eldest;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithInt:(jint)arg0
                            withFloat:(jfloat)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithInt:(jint)arg0
                            withFloat:(jfloat)arg1
                          withBoolean:(jboolean)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder_LRUCache)

FOUNDATION_EXPORT void OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder_LRUCache_initWithInt_(OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder_LRUCache *self, jint maxsize);

FOUNDATION_EXPORT OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder_LRUCache *new_OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder_LRUCache_initWithInt_(jint maxsize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder_LRUCache *create_OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder_LRUCache_initWithInt_(jint maxsize);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder_LRUCache)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserXmlBuildersCachedFilterBuilder")
