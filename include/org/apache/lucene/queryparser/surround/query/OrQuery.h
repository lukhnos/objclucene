//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/surround/query/OrQuery.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserSurroundQueryOrQuery")
#ifdef RESTRICT_OrgApacheLuceneQueryparserSurroundQueryOrQuery
#define INCLUDE_ALL_OrgApacheLuceneQueryparserSurroundQueryOrQuery 0
#else
#define INCLUDE_ALL_OrgApacheLuceneQueryparserSurroundQueryOrQuery 1
#endif
#undef RESTRICT_OrgApacheLuceneQueryparserSurroundQueryOrQuery

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneQueryparserSurroundQueryOrQuery_) && (INCLUDE_ALL_OrgApacheLuceneQueryparserSurroundQueryOrQuery || defined(INCLUDE_OrgApacheLuceneQueryparserSurroundQueryOrQuery))
#define OrgApacheLuceneQueryparserSurroundQueryOrQuery_

#define RESTRICT_OrgApacheLuceneQueryparserSurroundQueryComposedQuery 1
#define INCLUDE_OrgApacheLuceneQueryparserSurroundQueryComposedQuery 1
#include "org/apache/lucene/queryparser/surround/query/ComposedQuery.h"

#define RESTRICT_OrgApacheLuceneQueryparserSurroundQueryDistanceSubQuery 1
#define INCLUDE_OrgApacheLuceneQueryparserSurroundQueryDistanceSubQuery 1
#include "org/apache/lucene/queryparser/surround/query/DistanceSubQuery.h"

@class OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory;
@class OrgApacheLuceneQueryparserSurroundQuerySpanNearClauseFactory;
@class OrgApacheLuceneQueryparserSurroundQuerySrndQuery;
@class OrgApacheLuceneSearchQuery;
@protocol JavaUtilList;

/*!
 @brief Factory for disjunctions
 */
@interface OrgApacheLuceneQueryparserSurroundQueryOrQuery : OrgApacheLuceneQueryparserSurroundQueryComposedQuery < OrgApacheLuceneQueryparserSurroundQueryDistanceSubQuery >

#pragma mark Public

- (instancetype __nonnull)initWithJavaUtilList:(id<JavaUtilList>)queries
                                   withBoolean:(jboolean)infix
                                  withNSString:(NSString *)opName;

- (void)addSpanQueriesWithOrgApacheLuceneQueryparserSurroundQuerySpanNearClauseFactory:(OrgApacheLuceneQueryparserSurroundQuerySpanNearClauseFactory *)sncf;

- (NSString *)distanceSubQueryNotAllowed;

- (OrgApacheLuceneQueryparserSurroundQuerySrndQuery *)java_clone;

- (OrgApacheLuceneSearchQuery *)makeLuceneQueryFieldNoBoostWithNSString:(NSString *)fieldName
           withOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory:(OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory *)qf;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueryparserSurroundQueryOrQuery)

FOUNDATION_EXPORT void OrgApacheLuceneQueryparserSurroundQueryOrQuery_initWithJavaUtilList_withBoolean_withNSString_(OrgApacheLuceneQueryparserSurroundQueryOrQuery *self, id<JavaUtilList> queries, jboolean infix, NSString *opName);

FOUNDATION_EXPORT OrgApacheLuceneQueryparserSurroundQueryOrQuery *new_OrgApacheLuceneQueryparserSurroundQueryOrQuery_initWithJavaUtilList_withBoolean_withNSString_(id<JavaUtilList> queries, jboolean infix, NSString *opName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueryparserSurroundQueryOrQuery *create_OrgApacheLuceneQueryparserSurroundQueryOrQuery_initWithJavaUtilList_withBoolean_withNSString_(id<JavaUtilList> queries, jboolean infix, NSString *opName);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryparserSurroundQueryOrQuery)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserSurroundQueryOrQuery")
