//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/surround/query/SrndTruncQuery.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserSurroundQuerySrndTruncQuery")
#ifdef RESTRICT_OrgApacheLuceneQueryparserSurroundQuerySrndTruncQuery
#define INCLUDE_ALL_OrgApacheLuceneQueryparserSurroundQuerySrndTruncQuery 0
#else
#define INCLUDE_ALL_OrgApacheLuceneQueryparserSurroundQuerySrndTruncQuery 1
#endif
#undef RESTRICT_OrgApacheLuceneQueryparserSurroundQuerySrndTruncQuery

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneQueryparserSurroundQuerySrndTruncQuery_) && (INCLUDE_ALL_OrgApacheLuceneQueryparserSurroundQuerySrndTruncQuery || defined(INCLUDE_OrgApacheLuceneQueryparserSurroundQuerySrndTruncQuery))
#define OrgApacheLuceneQueryparserSurroundQuerySrndTruncQuery_

#define RESTRICT_OrgApacheLuceneQueryparserSurroundQuerySimpleTerm 1
#define INCLUDE_OrgApacheLuceneQueryparserSurroundQuerySimpleTerm 1
#include "org/apache/lucene/queryparser/surround/query/SimpleTerm.h"

@class JavaLangStringBuilder;
@class OrgApacheLuceneIndexIndexReader;
@class OrgApacheLuceneQueryparserSurroundQuerySrndQuery;
@protocol OrgApacheLuceneQueryparserSurroundQuerySimpleTerm_MatchingTermVisitor;

/*!
 @brief Query that matches wildcards
 */
@interface OrgApacheLuceneQueryparserSurroundQuerySrndTruncQuery : OrgApacheLuceneQueryparserSurroundQuerySimpleTerm

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)truncated
                                  withChar:(jchar)unlimited
                                  withChar:(jchar)mask;

- (NSString *)getTruncated;

- (OrgApacheLuceneQueryparserSurroundQuerySrndQuery *)java_clone;

- (NSString *)toStringUnquoted;

- (void)visitMatchingTermsWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                 withNSString:(NSString *)fieldName
withOrgApacheLuceneQueryparserSurroundQuerySimpleTerm_MatchingTermVisitor:(id<OrgApacheLuceneQueryparserSurroundQuerySimpleTerm_MatchingTermVisitor>)mtv;

#pragma mark Protected

- (void)appendRegExpForCharWithChar:(jchar)c
          withJavaLangStringBuilder:(JavaLangStringBuilder *)re;

- (jboolean)matchingCharWithChar:(jchar)c;

- (void)truncatedToPrefixAndPattern;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithBoolean:(jboolean)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueryparserSurroundQuerySrndTruncQuery)

FOUNDATION_EXPORT void OrgApacheLuceneQueryparserSurroundQuerySrndTruncQuery_initWithNSString_withChar_withChar_(OrgApacheLuceneQueryparserSurroundQuerySrndTruncQuery *self, NSString *truncated, jchar unlimited, jchar mask);

FOUNDATION_EXPORT OrgApacheLuceneQueryparserSurroundQuerySrndTruncQuery *new_OrgApacheLuceneQueryparserSurroundQuerySrndTruncQuery_initWithNSString_withChar_withChar_(NSString *truncated, jchar unlimited, jchar mask) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueryparserSurroundQuerySrndTruncQuery *create_OrgApacheLuceneQueryparserSurroundQuerySrndTruncQuery_initWithNSString_withChar_withChar_(NSString *truncated, jchar unlimited, jchar mask);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryparserSurroundQuerySrndTruncQuery)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserSurroundQuerySrndTruncQuery")
