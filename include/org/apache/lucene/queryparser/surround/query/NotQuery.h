//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/surround/query/NotQuery.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserSurroundQueryNotQuery")
#ifdef RESTRICT_OrgApacheLuceneQueryparserSurroundQueryNotQuery
#define INCLUDE_ALL_OrgApacheLuceneQueryparserSurroundQueryNotQuery 0
#else
#define INCLUDE_ALL_OrgApacheLuceneQueryparserSurroundQueryNotQuery 1
#endif
#undef RESTRICT_OrgApacheLuceneQueryparserSurroundQueryNotQuery

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneQueryparserSurroundQueryNotQuery_) && (INCLUDE_ALL_OrgApacheLuceneQueryparserSurroundQueryNotQuery || defined(INCLUDE_OrgApacheLuceneQueryparserSurroundQueryNotQuery))
#define OrgApacheLuceneQueryparserSurroundQueryNotQuery_

#define RESTRICT_OrgApacheLuceneQueryparserSurroundQueryComposedQuery 1
#define INCLUDE_OrgApacheLuceneQueryparserSurroundQueryComposedQuery 1
#include "org/apache/lucene/queryparser/surround/query/ComposedQuery.h"

@class OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory;
@class OrgApacheLuceneSearchQuery;
@protocol JavaUtilList;

/*!
 @brief Factory for prohibited clauses
 */
@interface OrgApacheLuceneQueryparserSurroundQueryNotQuery : OrgApacheLuceneQueryparserSurroundQueryComposedQuery

#pragma mark Public

- (instancetype __nonnull)initWithJavaUtilList:(id<JavaUtilList>)queries
                                  withNSString:(NSString *)opName;

- (OrgApacheLuceneSearchQuery *)makeLuceneQueryFieldNoBoostWithNSString:(NSString *)fieldName
           withOrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory:(OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory *)qf;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaUtilList:(id<JavaUtilList>)arg0
                                   withBoolean:(jboolean)arg1
                                  withNSString:(NSString *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueryparserSurroundQueryNotQuery)

FOUNDATION_EXPORT void OrgApacheLuceneQueryparserSurroundQueryNotQuery_initWithJavaUtilList_withNSString_(OrgApacheLuceneQueryparserSurroundQueryNotQuery *self, id<JavaUtilList> queries, NSString *opName);

FOUNDATION_EXPORT OrgApacheLuceneQueryparserSurroundQueryNotQuery *new_OrgApacheLuceneQueryparserSurroundQueryNotQuery_initWithJavaUtilList_withNSString_(id<JavaUtilList> queries, NSString *opName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueryparserSurroundQueryNotQuery *create_OrgApacheLuceneQueryparserSurroundQueryNotQuery_initWithJavaUtilList_withNSString_(id<JavaUtilList> queries, NSString *opName);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryparserSurroundQueryNotQuery)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserSurroundQueryNotQuery")
