//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./queryparser/src/java/org/apache/lucene/queryparser/surround/query/BasicQueryFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory")
#ifdef RESTRICT_OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory
#define INCLUDE_ALL_OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory 0
#else
#define INCLUDE_ALL_OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory 1
#endif
#undef RESTRICT_OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory_) && (INCLUDE_ALL_OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory || defined(INCLUDE_OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory))
#define OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory_

@class OrgApacheLuceneIndexTerm;
@class OrgApacheLuceneSearchSpansSpanTermQuery;
@class OrgApacheLuceneSearchTermQuery;

/*!
 @brief Factory for creating basic term queries
 */
@interface OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithInt:(jint)maxBasicQueries;

/*!
 @brief Two BasicQueryFactory's are equal when they generate
   the same types of basic queries, or both cannot generate queries anymore.
 */
- (jboolean)isEqual:(id)obj;

- (jint)getMaxBasicQueries;

- (jint)getNrQueriesMade;

- (NSUInteger)hash;

- (OrgApacheLuceneSearchSpansSpanTermQuery *)newSpanTermQueryWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term OBJC_METHOD_FAMILY_NONE;

- (OrgApacheLuceneSearchTermQuery *)newTermQueryWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term OBJC_METHOD_FAMILY_NONE;

- (NSString *)description;

#pragma mark Protected

- (void)checkMax;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory)

FOUNDATION_EXPORT void OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory_initWithInt_(OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory *self, jint maxBasicQueries);

FOUNDATION_EXPORT OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory *new_OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory_initWithInt_(jint maxBasicQueries) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory *create_OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory_initWithInt_(jint maxBasicQueries);

FOUNDATION_EXPORT void OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory_init(OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory *self);

FOUNDATION_EXPORT OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory *new_OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory *create_OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneQueryparserSurroundQueryBasicQueryFactory")
