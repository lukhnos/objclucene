//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/store/BufferedIndexInput.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneStoreBufferedIndexInput")
#ifdef RESTRICT_OrgApacheLuceneStoreBufferedIndexInput
#define INCLUDE_ALL_OrgApacheLuceneStoreBufferedIndexInput 0
#else
#define INCLUDE_ALL_OrgApacheLuceneStoreBufferedIndexInput 1
#endif
#undef RESTRICT_OrgApacheLuceneStoreBufferedIndexInput

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneStoreBufferedIndexInput_) && (INCLUDE_ALL_OrgApacheLuceneStoreBufferedIndexInput || defined(INCLUDE_OrgApacheLuceneStoreBufferedIndexInput))
#define OrgApacheLuceneStoreBufferedIndexInput_

#define RESTRICT_OrgApacheLuceneStoreIndexInput 1
#define INCLUDE_OrgApacheLuceneStoreIndexInput 1
#include "org/apache/lucene/store/IndexInput.h"

#define RESTRICT_OrgApacheLuceneStoreRandomAccessInput 1
#define INCLUDE_OrgApacheLuceneStoreRandomAccessInput 1
#include "org/apache/lucene/store/RandomAccessInput.h"

@class IOSByteArray;
@class OrgApacheLuceneStoreIOContext;
@class OrgApacheLuceneStoreIndexOutput;

/*!
 @brief Base implementation class for buffered <code>IndexInput</code>.
 */
@interface OrgApacheLuceneStoreBufferedIndexInput : OrgApacheLuceneStoreIndexInput < OrgApacheLuceneStoreRandomAccessInput > {
 @public
  IOSByteArray *buffer_;
}
@property (readonly, class) jint BUFFER_SIZE NS_SWIFT_NAME(BUFFER_SIZE);
@property (readonly, class) jint MIN_BUFFER_SIZE NS_SWIFT_NAME(MIN_BUFFER_SIZE);
@property (readonly, class) jint MERGE_BUFFER_SIZE NS_SWIFT_NAME(MERGE_BUFFER_SIZE);

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)resourceDesc;

/*!
 @brief Inits BufferedIndexInput with a specific bufferSize
 */
- (instancetype __nonnull)initWithNSString:(NSString *)resourceDesc
                                   withInt:(jint)bufferSize;

- (instancetype __nonnull)initWithNSString:(NSString *)resourceDesc
         withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context;

/*!
 @brief Returns default buffer sizes for the given <code>IOContext</code>
 */
+ (jint)bufferSizeWithOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context;

- (OrgApacheLuceneStoreBufferedIndexInput *)java_clone;

/*!
 @brief Returns buffer size.
 @@see #setBufferSize
 */
- (jint)getBufferSize;

- (jlong)getFilePointer;

- (jbyte)readByte;

- (jbyte)readByteWithLong:(jlong)pos;

- (void)readBytesWithByteArray:(IOSByteArray *)b
                       withInt:(jint)offset
                       withInt:(jint)len;

- (void)readBytesWithByteArray:(IOSByteArray *)b
                       withInt:(jint)offset
                       withInt:(jint)len
                   withBoolean:(jboolean)useBuffer;

- (jint)readInt;

- (jint)readIntWithLong:(jlong)pos;

- (jlong)readLong;

- (jlong)readLongWithLong:(jlong)pos;

- (jshort)readShort;

- (jshort)readShortWithLong:(jlong)pos;

- (jint)readVInt;

- (jlong)readVLong;

- (void)seekWithLong:(jlong)pos;

/*!
 @brief Change the buffer size used by this IndexInput
 */
- (void)setBufferSizeWithInt:(jint)newSize;

- (OrgApacheLuceneStoreIndexInput *)sliceWithNSString:(NSString *)sliceDescription
                                             withLong:(jlong)offset
                                             withLong:(jlong)length;

/*!
 @brief Wraps a portion of another IndexInput with buffering.
 <p><b>Please note:</b> This is in most cases ineffective, because it may double buffer!
 */
+ (OrgApacheLuceneStoreBufferedIndexInput *)wrapWithNSString:(NSString *)sliceDescription
                          withOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)other
                                                    withLong:(jlong)offset
                                                    withLong:(jlong)length;

#pragma mark Protected

/*!
 @brief Flushes the in-memory buffer to the given output, copying at most 
 <code>numBytes</code>.
 <p>
  <b>NOTE:</b> this method does not refill the buffer, however it does
  advance the buffer position.
 @return the number of bytes actually flushed from the in-memory buffer.
 */
- (jint)flushBufferWithOrgApacheLuceneStoreIndexOutput:(OrgApacheLuceneStoreIndexOutput *)outArg
                                              withLong:(jlong)numBytes;

- (void)newBufferWithByteArray:(IOSByteArray *)newBuffer OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Expert: implements buffer refill.Reads bytes from the current position
  in the input.
 @param b the array to read bytes into
 @param offset the offset in the array to start storing bytes
 @param length the number of bytes to read
 */
- (void)readInternalWithByteArray:(IOSByteArray *)b
                          withInt:(jint)offset
                          withInt:(jint)length;

/*!
 @brief Expert: implements seek.Sets current position in this file, where the
  next <code>readInternal(byte[],int,int)</code> will occur.
 - seealso: #readInternal(byte[],int,int)
 */
- (void)seekInternalWithLong:(jlong)pos;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneStoreBufferedIndexInput)

J2OBJC_FIELD_SETTER(OrgApacheLuceneStoreBufferedIndexInput, buffer_, IOSByteArray *)

/*!
 @brief Default buffer size set to #BUFFER_SIZE.
 */
inline jint OrgApacheLuceneStoreBufferedIndexInput_get_BUFFER_SIZE(void);
#define OrgApacheLuceneStoreBufferedIndexInput_BUFFER_SIZE 1024
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneStoreBufferedIndexInput, BUFFER_SIZE, jint)

/*!
 @brief Minimum buffer size allowed
 */
inline jint OrgApacheLuceneStoreBufferedIndexInput_get_MIN_BUFFER_SIZE(void);
#define OrgApacheLuceneStoreBufferedIndexInput_MIN_BUFFER_SIZE 8
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneStoreBufferedIndexInput, MIN_BUFFER_SIZE, jint)

/*!
 @brief A buffer size for merges set to #MERGE_BUFFER_SIZE.
 */
inline jint OrgApacheLuceneStoreBufferedIndexInput_get_MERGE_BUFFER_SIZE(void);
#define OrgApacheLuceneStoreBufferedIndexInput_MERGE_BUFFER_SIZE 4096
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneStoreBufferedIndexInput, MERGE_BUFFER_SIZE, jint)

FOUNDATION_EXPORT void OrgApacheLuceneStoreBufferedIndexInput_initWithNSString_(OrgApacheLuceneStoreBufferedIndexInput *self, NSString *resourceDesc);

FOUNDATION_EXPORT void OrgApacheLuceneStoreBufferedIndexInput_initWithNSString_withOrgApacheLuceneStoreIOContext_(OrgApacheLuceneStoreBufferedIndexInput *self, NSString *resourceDesc, OrgApacheLuceneStoreIOContext *context);

FOUNDATION_EXPORT void OrgApacheLuceneStoreBufferedIndexInput_initWithNSString_withInt_(OrgApacheLuceneStoreBufferedIndexInput *self, NSString *resourceDesc, jint bufferSize);

FOUNDATION_EXPORT jint OrgApacheLuceneStoreBufferedIndexInput_bufferSizeWithOrgApacheLuceneStoreIOContext_(OrgApacheLuceneStoreIOContext *context);

FOUNDATION_EXPORT OrgApacheLuceneStoreBufferedIndexInput *OrgApacheLuceneStoreBufferedIndexInput_wrapWithNSString_withOrgApacheLuceneStoreIndexInput_withLong_withLong_(NSString *sliceDescription, OrgApacheLuceneStoreIndexInput *other, jlong offset, jlong length);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneStoreBufferedIndexInput)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneStoreBufferedIndexInput")
