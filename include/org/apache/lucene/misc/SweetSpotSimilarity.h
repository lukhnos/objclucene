//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./misc/src/java/org/apache/lucene/misc/SweetSpotSimilarity.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneMiscSweetSpotSimilarity")
#ifdef RESTRICT_OrgApacheLuceneMiscSweetSpotSimilarity
#define INCLUDE_ALL_OrgApacheLuceneMiscSweetSpotSimilarity 0
#else
#define INCLUDE_ALL_OrgApacheLuceneMiscSweetSpotSimilarity 1
#endif
#undef RESTRICT_OrgApacheLuceneMiscSweetSpotSimilarity

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneMiscSweetSpotSimilarity_) && (INCLUDE_ALL_OrgApacheLuceneMiscSweetSpotSimilarity || defined(INCLUDE_OrgApacheLuceneMiscSweetSpotSimilarity))
#define OrgApacheLuceneMiscSweetSpotSimilarity_

#define RESTRICT_OrgApacheLuceneSearchSimilaritiesDefaultSimilarity 1
#define INCLUDE_OrgApacheLuceneSearchSimilaritiesDefaultSimilarity 1
#include "org/apache/lucene/search/similarities/DefaultSimilarity.h"

@class OrgApacheLuceneIndexFieldInvertState;

/*!
 @brief <p>
  A similarity with a lengthNorm that provides for a "plateau" of
  equally good lengths, and tf helper functions.
 </p>
  <p>
  For lengthNorm, A min/max can be specified to define the
  plateau of lengths that should all have a norm of 1.0.
  Below the min, and above the max the lengthNorm drops off in a
  sqrt function. 
 </p>
  <p>
  For tf, baselineTf and hyperbolicTf functions are provided, which
  subclasses can choose between. 
 </p>
 - seealso: <a href="doc-files/ss.gnuplot">A Gnuplot file used to generate some of the visualizations refrenced from each function.</a>
 */
@interface OrgApacheLuceneMiscSweetSpotSimilarity : OrgApacheLuceneSearchSimilaritiesDefaultSimilarity

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Implemented as: 
 <code>
   (x &lt;= min) &#63; base : sqrt(x+(base**2)-min) 
 </code>
  ...but with a special case check for 0.
 <p>
  This degrates to <code>sqrt(x)</code> when min and base are both 0 
 </p>
 - seealso: #setBaselineTfFactors
 - seealso: <a href="doc-files/ss.baselineTf.svg">An SVG visualization of this function</a>
 */
- (jfloat)baselineTfWithFloat:(jfloat)freq;

/*!
 @brief Implemented as: 
 <code>
  1/sqrt( steepness * (abs(x-min) + abs(x-max) - (max-min)) + 1 ) 
 </code>.
 <p>
  This degrades to <code>1/sqrt(x)</code> when min and max are both 1 and
  steepness is 0.5 
 </p>
  
 <p>
  :TODO: potential optimization is to just flat out return 1.0f if numTerms
  is between min and max. 
 </p>
 - seealso: #setLengthNormFactors
 - seealso: <a href="doc-files/ss.computeLengthNorm.svg">An SVG visualization of this function</a>
 */
- (jfloat)computeLengthNormWithInt:(jint)numTerms;

/*!
 @brief Uses a hyperbolic tangent function that allows for a hard max...
 <code>
  tf(x)=min+(max-min)/2*(((base**(x-xoffset)-base**-(x-xoffset))/(base**(x-xoffset)+base**-(x-xoffset)))+1) 
 </code>
  
 <p>
  This code is provided as a convenience for subclasses that want
  to use a hyperbolic tf function. 
 </p>
 - seealso: #setHyperbolicTfFactors
 - seealso: <a href="doc-files/ss.hyperbolicTf.svg">An SVG visualization of this function</a>
 */
- (jfloat)hyperbolicTfWithFloat:(jfloat)freq;

/*!
 @brief Implemented as <code> state.getBoost() *
  computeLengthNorm(numTokens) </code> where
  numTokens does not count overlap tokens if
  discountOverlaps is true by default or true for this
  specific field.
 */
- (jfloat)lengthNormWithOrgApacheLuceneIndexFieldInvertState:(OrgApacheLuceneIndexFieldInvertState *)state;

/*!
 @brief Sets the baseline and minimum function variables for baselineTf
 - seealso: #baselineTf
 */
- (void)setBaselineTfFactorsWithFloat:(jfloat)base
                            withFloat:(jfloat)min;

/*!
 @brief Sets the function variables for the hyperbolicTf functions
 @param min the minimum tf value to ever be returned (default: 0.0)
 @param max the maximum tf value to ever be returned (default: 2.0)
 @param base the base value to be used in the exponential for the hyperbolic function (default: 1.3)
 @param xoffset the midpoint of the hyperbolic function (default: 10.0)
 - seealso: #hyperbolicTf
 */
- (void)setHyperbolicTfFactorsWithFloat:(jfloat)min
                              withFloat:(jfloat)max
                             withDouble:(jdouble)base
                              withFloat:(jfloat)xoffset;

/*!
 @brief Sets the default function variables used by lengthNorm when no field
  specific variables have been set.
 - seealso: #computeLengthNorm
 */
- (void)setLengthNormFactorsWithInt:(jint)min
                            withInt:(jint)max
                          withFloat:(jfloat)steepness
                        withBoolean:(jboolean)discountOverlaps;

/*!
 @brief Delegates to baselineTf
 - seealso: #baselineTf
 */
- (jfloat)tfWithFloat:(jfloat)freq;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneMiscSweetSpotSimilarity)

FOUNDATION_EXPORT void OrgApacheLuceneMiscSweetSpotSimilarity_init(OrgApacheLuceneMiscSweetSpotSimilarity *self);

FOUNDATION_EXPORT OrgApacheLuceneMiscSweetSpotSimilarity *new_OrgApacheLuceneMiscSweetSpotSimilarity_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneMiscSweetSpotSimilarity *create_OrgApacheLuceneMiscSweetSpotSimilarity_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneMiscSweetSpotSimilarity)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneMiscSweetSpotSimilarity")
