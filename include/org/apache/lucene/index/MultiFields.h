//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/MultiFields.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneIndexMultiFields")
#ifdef RESTRICT_OrgApacheLuceneIndexMultiFields
#define INCLUDE_ALL_OrgApacheLuceneIndexMultiFields 0
#else
#define INCLUDE_ALL_OrgApacheLuceneIndexMultiFields 1
#endif
#undef RESTRICT_OrgApacheLuceneIndexMultiFields

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneIndexMultiFields_) && (INCLUDE_ALL_OrgApacheLuceneIndexMultiFields || defined(INCLUDE_OrgApacheLuceneIndexMultiFields))
#define OrgApacheLuceneIndexMultiFields_

#define RESTRICT_OrgApacheLuceneIndexFields 1
#define INCLUDE_OrgApacheLuceneIndexFields 1
#include "org/apache/lucene/index/Fields.h"

@class IOSObjectArray;
@class OrgApacheLuceneIndexFieldInfos;
@class OrgApacheLuceneIndexIndexReader;
@class OrgApacheLuceneIndexPostingsEnum;
@class OrgApacheLuceneIndexTerms;
@class OrgApacheLuceneUtilBytesRef;
@protocol JavaUtilCollection;
@protocol JavaUtilIterator;
@protocol OrgApacheLuceneUtilBits;

/*!
 @brief Exposes flex API, merged from flex API of sub-segments.
 This is useful when you're interacting with an <code>IndexReader</code>
  implementation that consists of sequential
  sub-readers (eg <code>DirectoryReader</code> or <code>MultiReader</code>
 ).
  
 <p><b>NOTE</b>: for composite readers, you'll get better
  performance by gathering the sub readers using 
 <code>IndexReader.getContext()</code> to get the
  atomic leaves and then operate per-LeafReader,
  instead of using this class.
 */
@interface OrgApacheLuceneIndexMultiFields : OrgApacheLuceneIndexFields

#pragma mark Public

/*!
 @brief Expert: construct a new MultiFields instance directly.
 */
- (instancetype __nonnull)initWithOrgApacheLuceneIndexFieldsArray:(IOSObjectArray *)subs
                         withOrgApacheLuceneIndexReaderSliceArray:(IOSObjectArray *)subSlices;

/*!
 @brief Returns a single <code>Fields</code> instance for this
   reader, merging fields/terms/docs/positions on the
   fly.This method will return null if the reader 
   has no postings.
 <p><b>NOTE</b>: this is a slow way to access postings.
   It's better to get the sub-readers and iterate through them
   yourself.
 */
+ (OrgApacheLuceneIndexFields *)getFieldsWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader;

/*!
 @brief Call this to get the (merged) FieldInfos representing the
   set of indexed fields <b>only</b> for a composite reader.
 <p>
   NOTE: the returned field numbers will likely not
   correspond to the actual field numbers in the underlying
   readers, and codec metadata (<code>FieldInfo.getAttribute(String)</code>
   will be unavailable.
 */
+ (id<JavaUtilCollection>)getIndexedFieldsWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader;

/*!
 @brief Returns a single <code>Bits</code> instance for this
   reader, merging live Documents on the
   fly.This method will return null if the reader 
   has no deletions.
 <p><b>NOTE</b>: this is a very slow way to access live docs.
   For example, each Bits access will require a binary search.
   It's better to get the sub-readers and iterate through them
   yourself.
 */
+ (id<OrgApacheLuceneUtilBits>)getLiveDocsWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader;

/*!
 @brief Call this to get the (merged) FieldInfos for a
   composite reader.
 <p>
   NOTE: the returned field numbers will likely not
   correspond to the actual field numbers in the underlying
   readers, and codec metadata (<code>FieldInfo.getAttribute(String)</code>
   will be unavailable.
 */
+ (OrgApacheLuceneIndexFieldInfos *)getMergedFieldInfosWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader;

/*!
 @brief Returns <code>PostingsEnum</code> for the specified field and
   term.This will return null if the field or term does
   not exist.
 */
+ (OrgApacheLuceneIndexPostingsEnum *)getTermDocsEnumWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)r
                                                                            withNSString:(NSString *)field
                                                         withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term;

/*!
 @brief Returns <code>PostingsEnum</code> for the specified field and
   term, with control over whether freqs are required.
 Some codecs may be able to optimize their
   implementation when freqs are not required.  This will
   return null if the field or term does not exist.  See <code>TermsEnum.postings(PostingsEnum,int)</code>
 .
 */
+ (OrgApacheLuceneIndexPostingsEnum *)getTermDocsEnumWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)r
                                                                            withNSString:(NSString *)field
                                                         withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term
                                                                                 withInt:(jint)flags;

/*!
 @brief Returns <code>PostingsEnum</code> for the specified
   field and term.This will return null if the field or
   term does not exist or positions were not indexed.
 - seealso: #getTermPositionsEnum(IndexReader, String, BytesRef, int)
 */
+ (OrgApacheLuceneIndexPostingsEnum *)getTermPositionsEnumWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)r
                                                                                 withNSString:(NSString *)field
                                                              withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term;

/*!
 @brief Returns <code>PostingsEnum</code> for the specified
   field and term, with control over whether offsets and payloads are
   required.Some codecs may be able to optimize
   their implementation when offsets and/or payloads are not
   required.
 This will return null if the field or term does not
   exist. See <code>TermsEnum.postings(PostingsEnum,int)</code>.
 */
+ (OrgApacheLuceneIndexPostingsEnum *)getTermPositionsEnumWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)r
                                                                                 withNSString:(NSString *)field
                                                              withOrgApacheLuceneUtilBytesRef:(OrgApacheLuceneUtilBytesRef *)term
                                                                                      withInt:(jint)flags;

/*!
 @brief This method may return null if the field does not exist.
 */
+ (OrgApacheLuceneIndexTerms *)getTermsWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)r
                                                              withNSString:(NSString *)field;

- (id<JavaUtilIterator>)iterator;

- (jint)size;

- (OrgApacheLuceneIndexTerms *)termsWithNSString:(NSString *)field;

#pragma mark Package-Private

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMultiFields)

FOUNDATION_EXPORT OrgApacheLuceneIndexFields *OrgApacheLuceneIndexMultiFields_getFieldsWithOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneIndexIndexReader *reader);

FOUNDATION_EXPORT id<OrgApacheLuceneUtilBits> OrgApacheLuceneIndexMultiFields_getLiveDocsWithOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneIndexIndexReader *reader);

FOUNDATION_EXPORT OrgApacheLuceneIndexTerms *OrgApacheLuceneIndexMultiFields_getTermsWithOrgApacheLuceneIndexIndexReader_withNSString_(OrgApacheLuceneIndexIndexReader *r, NSString *field);

FOUNDATION_EXPORT OrgApacheLuceneIndexPostingsEnum *OrgApacheLuceneIndexMultiFields_getTermDocsEnumWithOrgApacheLuceneIndexIndexReader_withNSString_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneIndexIndexReader *r, NSString *field, OrgApacheLuceneUtilBytesRef *term);

FOUNDATION_EXPORT OrgApacheLuceneIndexPostingsEnum *OrgApacheLuceneIndexMultiFields_getTermDocsEnumWithOrgApacheLuceneIndexIndexReader_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_(OrgApacheLuceneIndexIndexReader *r, NSString *field, OrgApacheLuceneUtilBytesRef *term, jint flags);

FOUNDATION_EXPORT OrgApacheLuceneIndexPostingsEnum *OrgApacheLuceneIndexMultiFields_getTermPositionsEnumWithOrgApacheLuceneIndexIndexReader_withNSString_withOrgApacheLuceneUtilBytesRef_(OrgApacheLuceneIndexIndexReader *r, NSString *field, OrgApacheLuceneUtilBytesRef *term);

FOUNDATION_EXPORT OrgApacheLuceneIndexPostingsEnum *OrgApacheLuceneIndexMultiFields_getTermPositionsEnumWithOrgApacheLuceneIndexIndexReader_withNSString_withOrgApacheLuceneUtilBytesRef_withInt_(OrgApacheLuceneIndexIndexReader *r, NSString *field, OrgApacheLuceneUtilBytesRef *term, jint flags);

FOUNDATION_EXPORT void OrgApacheLuceneIndexMultiFields_initWithOrgApacheLuceneIndexFieldsArray_withOrgApacheLuceneIndexReaderSliceArray_(OrgApacheLuceneIndexMultiFields *self, IOSObjectArray *subs, IOSObjectArray *subSlices);

FOUNDATION_EXPORT OrgApacheLuceneIndexMultiFields *new_OrgApacheLuceneIndexMultiFields_initWithOrgApacheLuceneIndexFieldsArray_withOrgApacheLuceneIndexReaderSliceArray_(IOSObjectArray *subs, IOSObjectArray *subSlices) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexMultiFields *create_OrgApacheLuceneIndexMultiFields_initWithOrgApacheLuceneIndexFieldsArray_withOrgApacheLuceneIndexReaderSliceArray_(IOSObjectArray *subs, IOSObjectArray *subSlices);

FOUNDATION_EXPORT OrgApacheLuceneIndexFieldInfos *OrgApacheLuceneIndexMultiFields_getMergedFieldInfosWithOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneIndexIndexReader *reader);

FOUNDATION_EXPORT id<JavaUtilCollection> OrgApacheLuceneIndexMultiFields_getIndexedFieldsWithOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneIndexIndexReader *reader);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexMultiFields)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneIndexMultiFields")
