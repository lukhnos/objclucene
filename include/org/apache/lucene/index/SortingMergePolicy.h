//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./misc/src/java/org/apache/lucene/index/SortingMergePolicy.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneIndexSortingMergePolicy")
#ifdef RESTRICT_OrgApacheLuceneIndexSortingMergePolicy
#define INCLUDE_ALL_OrgApacheLuceneIndexSortingMergePolicy 0
#else
#define INCLUDE_ALL_OrgApacheLuceneIndexSortingMergePolicy 1
#endif
#undef RESTRICT_OrgApacheLuceneIndexSortingMergePolicy

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneIndexSortingMergePolicy_) && (INCLUDE_ALL_OrgApacheLuceneIndexSortingMergePolicy || defined(INCLUDE_OrgApacheLuceneIndexSortingMergePolicy))
#define OrgApacheLuceneIndexSortingMergePolicy_

#define RESTRICT_OrgApacheLuceneIndexMergePolicy 1
#define INCLUDE_OrgApacheLuceneIndexMergePolicy 1
#include "org/apache/lucene/index/MergePolicy.h"

@class OrgApacheLuceneIndexIndexWriter;
@class OrgApacheLuceneIndexLeafReader;
@class OrgApacheLuceneIndexMergePolicy_MergeSpecification;
@class OrgApacheLuceneIndexMergeTrigger;
@class OrgApacheLuceneIndexSegmentCommitInfo;
@class OrgApacheLuceneIndexSegmentInfos;
@class OrgApacheLuceneIndexSorter;
@class OrgApacheLuceneSearchSort;
@protocol JavaUtilMap;

/*!
 @brief A <code>MergePolicy</code> that reorders documents according to a <code>Sort</code>
   before merging them.As a consequence, all segments resulting from a merge
   will be sorted while segments resulting from a flush will be in the order
   in which documents have been added.
 <p><b>NOTE</b>: Never use this policy if you rely on
   <code>IndexWriter.addDocuments</code>
   to have sequentially-assigned doc IDs, this policy will scatter doc IDs.  
 <p><b>NOTE</b>: This policy should only be used with idempotent <code>Sort</code>s 
   so that the order of segments is predictable. For example, using   
 <code>Sort.INDEXORDER</code> in reverse (which is not idempotent) will make 
   the order of documents in a segment depend on the number of times the segment 
   has been merged.
 */
@interface OrgApacheLuceneIndexSortingMergePolicy : OrgApacheLuceneIndexMergePolicy {
 @public
  OrgApacheLuceneIndexMergePolicy *in_;
  OrgApacheLuceneIndexSorter *sorter_;
  OrgApacheLuceneSearchSort *sort_;
}
@property (readonly, copy, class) NSString *SORTER_ID_PROP NS_SWIFT_NAME(SORTER_ID_PROP);

#pragma mark Public

/*!
 @brief Create a new <code>MergePolicy</code> that sorts documents with the given <code>sort</code>.
 */
- (instancetype __nonnull)initWithOrgApacheLuceneIndexMergePolicy:(OrgApacheLuceneIndexMergePolicy *)inArg
                                    withOrgApacheLuceneSearchSort:(OrgApacheLuceneSearchSort *)sort;

- (OrgApacheLuceneIndexMergePolicy_MergeSpecification *)findForcedDeletesMergesWithOrgApacheLuceneIndexSegmentInfos:(OrgApacheLuceneIndexSegmentInfos *)segmentInfos
                                                                                withOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer;

- (OrgApacheLuceneIndexMergePolicy_MergeSpecification *)findForcedMergesWithOrgApacheLuceneIndexSegmentInfos:(OrgApacheLuceneIndexSegmentInfos *)segmentInfos
                                                                                                     withInt:(jint)maxSegmentCount
                                                                                             withJavaUtilMap:(id<JavaUtilMap>)segmentsToMerge
                                                                         withOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer;

- (OrgApacheLuceneIndexMergePolicy_MergeSpecification *)findMergesWithOrgApacheLuceneIndexMergeTrigger:(OrgApacheLuceneIndexMergeTrigger *)mergeTrigger
                                                                  withOrgApacheLuceneIndexSegmentInfos:(OrgApacheLuceneIndexSegmentInfos *)segmentInfos
                                                                   withOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer;

/*!
 @brief Return the <code>Sort</code> order that is used to sort segments when merging.
 */
- (OrgApacheLuceneSearchSort *)getSort;

/*!
 @brief Returns <code>true</code> if the given <code>reader</code> is sorted by the
   <code>sort</code> given.Typically the given <code>sort</code> would be the
   <code>SortingMergePolicy.getSort()</code> order of a <code>SortingMergePolicy</code>.
 */
+ (jboolean)isSortedWithOrgApacheLuceneIndexLeafReader:(OrgApacheLuceneIndexLeafReader *)reader
                         withOrgApacheLuceneSearchSort:(OrgApacheLuceneSearchSort *)sort;

- (NSString *)description;

- (jboolean)useCompoundFileWithOrgApacheLuceneIndexSegmentInfos:(OrgApacheLuceneIndexSegmentInfos *)segments
                      withOrgApacheLuceneIndexSegmentCommitInfo:(OrgApacheLuceneIndexSegmentCommitInfo *)newSegment
                            withOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer;

#pragma mark Protected

- (jlong)sizeWithOrgApacheLuceneIndexSegmentCommitInfo:(OrgApacheLuceneIndexSegmentCommitInfo *)info
                   withOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithDouble:(jdouble)arg0
                                withLong:(jlong)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexSortingMergePolicy)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSortingMergePolicy, in_, OrgApacheLuceneIndexMergePolicy *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSortingMergePolicy, sorter_, OrgApacheLuceneIndexSorter *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSortingMergePolicy, sort_, OrgApacheLuceneSearchSort *)

/*!
 @brief Put in the <code>diagnostics</code> to denote that
  this segment is sorted.
 */
inline NSString *OrgApacheLuceneIndexSortingMergePolicy_get_SORTER_ID_PROP(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgApacheLuceneIndexSortingMergePolicy_SORTER_ID_PROP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneIndexSortingMergePolicy, SORTER_ID_PROP, NSString *)

FOUNDATION_EXPORT jboolean OrgApacheLuceneIndexSortingMergePolicy_isSortedWithOrgApacheLuceneIndexLeafReader_withOrgApacheLuceneSearchSort_(OrgApacheLuceneIndexLeafReader *reader, OrgApacheLuceneSearchSort *sort);

FOUNDATION_EXPORT void OrgApacheLuceneIndexSortingMergePolicy_initWithOrgApacheLuceneIndexMergePolicy_withOrgApacheLuceneSearchSort_(OrgApacheLuceneIndexSortingMergePolicy *self, OrgApacheLuceneIndexMergePolicy *inArg, OrgApacheLuceneSearchSort *sort);

FOUNDATION_EXPORT OrgApacheLuceneIndexSortingMergePolicy *new_OrgApacheLuceneIndexSortingMergePolicy_initWithOrgApacheLuceneIndexMergePolicy_withOrgApacheLuceneSearchSort_(OrgApacheLuceneIndexMergePolicy *inArg, OrgApacheLuceneSearchSort *sort) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexSortingMergePolicy *create_OrgApacheLuceneIndexSortingMergePolicy_initWithOrgApacheLuceneIndexMergePolicy_withOrgApacheLuceneSearchSort_(OrgApacheLuceneIndexMergePolicy *inArg, OrgApacheLuceneSearchSort *sort);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexSortingMergePolicy)

#endif

#if !defined (OrgApacheLuceneIndexSortingMergePolicy_SortingOneMerge_) && (INCLUDE_ALL_OrgApacheLuceneIndexSortingMergePolicy || defined(INCLUDE_OrgApacheLuceneIndexSortingMergePolicy_SortingOneMerge))
#define OrgApacheLuceneIndexSortingMergePolicy_SortingOneMerge_

#define RESTRICT_OrgApacheLuceneIndexMergePolicy 1
#define INCLUDE_OrgApacheLuceneIndexMergePolicy_OneMerge 1
#include "org/apache/lucene/index/MergePolicy.h"

@class OrgApacheLuceneIndexLeafReader;
@class OrgApacheLuceneIndexMergePolicy_DocMap;
@class OrgApacheLuceneIndexMergeState;
@class OrgApacheLuceneIndexSegmentCommitInfo;
@class OrgApacheLuceneIndexSorter_DocMap;
@class OrgApacheLuceneIndexSortingMergePolicy;
@class OrgApacheLuceneUtilInfoStream;
@protocol JavaUtilList;

@interface OrgApacheLuceneIndexSortingMergePolicy_SortingOneMerge : OrgApacheLuceneIndexMergePolicy_OneMerge {
 @public
  id<JavaUtilList> unsortedReaders_;
  OrgApacheLuceneIndexSorter_DocMap *docMap_;
  OrgApacheLuceneIndexLeafReader *sortedView_;
  OrgApacheLuceneUtilInfoStream *infoStream_;
}

#pragma mark Public

- (OrgApacheLuceneIndexMergePolicy_DocMap *)getDocMapWithOrgApacheLuceneIndexMergeState:(OrgApacheLuceneIndexMergeState *)mergeState;

- (id<JavaUtilList>)getMergeReaders;

- (void)setMergeInfoWithOrgApacheLuceneIndexSegmentCommitInfo:(OrgApacheLuceneIndexSegmentCommitInfo *)info;

#pragma mark Package-Private

- (instancetype __nonnull)initWithOrgApacheLuceneIndexSortingMergePolicy:(OrgApacheLuceneIndexSortingMergePolicy *)outer$
                                                        withJavaUtilList:(id<JavaUtilList>)segments
                                       withOrgApacheLuceneUtilInfoStream:(OrgApacheLuceneUtilInfoStream *)infoStream;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaUtilList:(id<JavaUtilList>)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexSortingMergePolicy_SortingOneMerge)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSortingMergePolicy_SortingOneMerge, unsortedReaders_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSortingMergePolicy_SortingOneMerge, docMap_, OrgApacheLuceneIndexSorter_DocMap *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSortingMergePolicy_SortingOneMerge, sortedView_, OrgApacheLuceneIndexLeafReader *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSortingMergePolicy_SortingOneMerge, infoStream_, OrgApacheLuceneUtilInfoStream *)

FOUNDATION_EXPORT void OrgApacheLuceneIndexSortingMergePolicy_SortingOneMerge_initWithOrgApacheLuceneIndexSortingMergePolicy_withJavaUtilList_withOrgApacheLuceneUtilInfoStream_(OrgApacheLuceneIndexSortingMergePolicy_SortingOneMerge *self, OrgApacheLuceneIndexSortingMergePolicy *outer$, id<JavaUtilList> segments, OrgApacheLuceneUtilInfoStream *infoStream);

FOUNDATION_EXPORT OrgApacheLuceneIndexSortingMergePolicy_SortingOneMerge *new_OrgApacheLuceneIndexSortingMergePolicy_SortingOneMerge_initWithOrgApacheLuceneIndexSortingMergePolicy_withJavaUtilList_withOrgApacheLuceneUtilInfoStream_(OrgApacheLuceneIndexSortingMergePolicy *outer$, id<JavaUtilList> segments, OrgApacheLuceneUtilInfoStream *infoStream) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexSortingMergePolicy_SortingOneMerge *create_OrgApacheLuceneIndexSortingMergePolicy_SortingOneMerge_initWithOrgApacheLuceneIndexSortingMergePolicy_withJavaUtilList_withOrgApacheLuceneUtilInfoStream_(OrgApacheLuceneIndexSortingMergePolicy *outer$, id<JavaUtilList> segments, OrgApacheLuceneUtilInfoStream *infoStream);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexSortingMergePolicy_SortingOneMerge)

#endif

#if !defined (OrgApacheLuceneIndexSortingMergePolicy_SortingMergeSpecification_) && (INCLUDE_ALL_OrgApacheLuceneIndexSortingMergePolicy || defined(INCLUDE_OrgApacheLuceneIndexSortingMergePolicy_SortingMergeSpecification))
#define OrgApacheLuceneIndexSortingMergePolicy_SortingMergeSpecification_

#define RESTRICT_OrgApacheLuceneIndexMergePolicy 1
#define INCLUDE_OrgApacheLuceneIndexMergePolicy_MergeSpecification 1
#include "org/apache/lucene/index/MergePolicy.h"

@class OrgApacheLuceneIndexMergePolicy_OneMerge;
@class OrgApacheLuceneIndexSortingMergePolicy;
@class OrgApacheLuceneStoreDirectory;
@class OrgApacheLuceneUtilInfoStream;

@interface OrgApacheLuceneIndexSortingMergePolicy_SortingMergeSpecification : OrgApacheLuceneIndexMergePolicy_MergeSpecification {
 @public
  OrgApacheLuceneUtilInfoStream *infoStream_;
}

#pragma mark Public

- (void)addWithOrgApacheLuceneIndexMergePolicy_OneMerge:(OrgApacheLuceneIndexMergePolicy_OneMerge *)merge;

- (NSString *)segStringWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir;

#pragma mark Package-Private

- (instancetype __nonnull)initWithOrgApacheLuceneIndexSortingMergePolicy:(OrgApacheLuceneIndexSortingMergePolicy *)outer$
                                       withOrgApacheLuceneUtilInfoStream:(OrgApacheLuceneUtilInfoStream *)infoStream;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexSortingMergePolicy_SortingMergeSpecification)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexSortingMergePolicy_SortingMergeSpecification, infoStream_, OrgApacheLuceneUtilInfoStream *)

FOUNDATION_EXPORT void OrgApacheLuceneIndexSortingMergePolicy_SortingMergeSpecification_initWithOrgApacheLuceneIndexSortingMergePolicy_withOrgApacheLuceneUtilInfoStream_(OrgApacheLuceneIndexSortingMergePolicy_SortingMergeSpecification *self, OrgApacheLuceneIndexSortingMergePolicy *outer$, OrgApacheLuceneUtilInfoStream *infoStream);

FOUNDATION_EXPORT OrgApacheLuceneIndexSortingMergePolicy_SortingMergeSpecification *new_OrgApacheLuceneIndexSortingMergePolicy_SortingMergeSpecification_initWithOrgApacheLuceneIndexSortingMergePolicy_withOrgApacheLuceneUtilInfoStream_(OrgApacheLuceneIndexSortingMergePolicy *outer$, OrgApacheLuceneUtilInfoStream *infoStream) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexSortingMergePolicy_SortingMergeSpecification *create_OrgApacheLuceneIndexSortingMergePolicy_SortingMergeSpecification_initWithOrgApacheLuceneIndexSortingMergePolicy_withOrgApacheLuceneUtilInfoStream_(OrgApacheLuceneIndexSortingMergePolicy *outer$, OrgApacheLuceneUtilInfoStream *infoStream);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexSortingMergePolicy_SortingMergeSpecification)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneIndexSortingMergePolicy")
