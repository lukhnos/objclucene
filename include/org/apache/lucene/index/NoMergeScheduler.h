//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/NoMergeScheduler.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneIndexNoMergeScheduler")
#ifdef RESTRICT_OrgApacheLuceneIndexNoMergeScheduler
#define INCLUDE_ALL_OrgApacheLuceneIndexNoMergeScheduler 0
#else
#define INCLUDE_ALL_OrgApacheLuceneIndexNoMergeScheduler 1
#endif
#undef RESTRICT_OrgApacheLuceneIndexNoMergeScheduler

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneIndexNoMergeScheduler_) && (INCLUDE_ALL_OrgApacheLuceneIndexNoMergeScheduler || defined(INCLUDE_OrgApacheLuceneIndexNoMergeScheduler))
#define OrgApacheLuceneIndexNoMergeScheduler_

#define RESTRICT_OrgApacheLuceneIndexMergeScheduler 1
#define INCLUDE_OrgApacheLuceneIndexMergeScheduler 1
#include "org/apache/lucene/index/MergeScheduler.h"

@class OrgApacheLuceneIndexIndexWriter;
@class OrgApacheLuceneIndexMergeTrigger;

/*!
 @brief A <code>MergeScheduler</code> which never executes any merges.It is also a
  singleton and can be accessed through <code>NoMergeScheduler.INSTANCE</code>.
 Use
  it if you want to prevent an <code>IndexWriter</code> from ever executing merges,
  regardless of the <code>MergePolicy</code> used. Note that you can achieve the
  same thing by using <code>NoMergePolicy</code>, however with 
 <code>NoMergeScheduler</code> you also ensure that no unnecessary code of any 
 <code>MergeScheduler</code> implementation is ever executed. Hence it is
  recommended to use both if you want to disable merges from ever happening.
 */
@interface OrgApacheLuceneIndexNoMergeScheduler : OrgApacheLuceneIndexMergeScheduler
@property (readonly, class, strong) OrgApacheLuceneIndexMergeScheduler *INSTANCE NS_SWIFT_NAME(INSTANCE);

#pragma mark Public

- (OrgApacheLuceneIndexMergeScheduler *)java_clone;

- (void)close;

- (void)mergeWithOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer
            withOrgApacheLuceneIndexMergeTrigger:(OrgApacheLuceneIndexMergeTrigger *)trigger
                                     withBoolean:(jboolean)newMergesFound;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneIndexNoMergeScheduler)

/*!
 @brief The single instance of <code>NoMergeScheduler</code>
 */
inline OrgApacheLuceneIndexMergeScheduler *OrgApacheLuceneIndexNoMergeScheduler_get_INSTANCE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OrgApacheLuceneIndexMergeScheduler *OrgApacheLuceneIndexNoMergeScheduler_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneIndexNoMergeScheduler, INSTANCE, OrgApacheLuceneIndexMergeScheduler *)

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexNoMergeScheduler)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneIndexNoMergeScheduler")
