//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/TrackingIndexWriter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneIndexTrackingIndexWriter")
#ifdef RESTRICT_OrgApacheLuceneIndexTrackingIndexWriter
#define INCLUDE_ALL_OrgApacheLuceneIndexTrackingIndexWriter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneIndexTrackingIndexWriter 1
#endif
#undef RESTRICT_OrgApacheLuceneIndexTrackingIndexWriter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneIndexTrackingIndexWriter_) && (INCLUDE_ALL_OrgApacheLuceneIndexTrackingIndexWriter || defined(INCLUDE_OrgApacheLuceneIndexTrackingIndexWriter))
#define OrgApacheLuceneIndexTrackingIndexWriter_

@class IOSObjectArray;
@class OrgApacheLuceneIndexIndexReader;
@class OrgApacheLuceneIndexIndexWriter;
@class OrgApacheLuceneIndexTerm;
@class OrgApacheLuceneSearchQuery;
@protocol JavaLangIterable;

/*!
 @brief Class that tracks changes to a delegated
   IndexWriter, used by <code>ControlledRealTimeReopenThread</code>
  to ensure specific
   changes are visible.Create this class (passing your
   IndexWriter), and then pass this class to <code>ControlledRealTimeReopenThread</code>
 .
 Be sure to make all changes via the
   TrackingIndexWriter, otherwise <code>ControlledRealTimeReopenThread</code>
  won't know about the changes.
 */
@interface OrgApacheLuceneIndexTrackingIndexWriter : NSObject

#pragma mark Public

/*!
 @brief Create a <code>TrackingIndexWriter</code> wrapping the
   provided <code>IndexWriter</code>.
 */
- (instancetype __nonnull)initWithOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer;

/*!
 @brief Calls <code>IndexWriter.addDocument(Iterable)</code>
   and returns the generation that reflects this change.
 */
- (jlong)addDocumentWithJavaLangIterable:(id<JavaLangIterable>)d;

/*!
 @brief Calls <code>IndexWriter.addDocuments(Iterable)</code> and
   returns the generation that reflects this change.
 */
- (jlong)addDocumentsWithJavaLangIterable:(id<JavaLangIterable>)docs;

/*!
 @brief Calls <code>IndexWriter.addIndexes(CodecReader...)
 </code>
   and returns the generation that reflects this change.
 */
- (jlong)addIndexesWithOrgApacheLuceneIndexCodecReaderArray:(IOSObjectArray *)readers;

/*!
 @brief Calls <code>IndexWriter.addIndexes(Directory...)
 </code> and
   returns the generation that reflects this change.
 */
- (jlong)addIndexesWithOrgApacheLuceneStoreDirectoryArray:(IOSObjectArray *)dirs;

/*!
 @brief Calls <code>IndexWriter.deleteAll</code> and returns the
   generation that reflects this change.
 */
- (jlong)deleteAll;

/*!
 @brief Calls <code>IndexWriter.deleteDocuments(Query...)
 </code> and
   returns the generation that reflects this change.
 */
- (jlong)deleteDocumentsWithOrgApacheLuceneSearchQuery:(OrgApacheLuceneSearchQuery *)q;

/*!
 @brief Calls <code>IndexWriter.deleteDocuments(Query...)
 </code>
   and returns the generation that reflects this change.
 */
- (jlong)deleteDocumentsWithOrgApacheLuceneSearchQueryArray:(IOSObjectArray *)queries;

/*!
 @brief Calls <code>IndexWriter.deleteDocuments(Term...)
 </code> and
   returns the generation that reflects this change.
 */
- (jlong)deleteDocumentsWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)t;

/*!
 @brief Calls <code>IndexWriter.deleteDocuments(Term...)
 </code> and
   returns the generation that reflects this change.
 */
- (jlong)deleteDocumentsWithOrgApacheLuceneIndexTermArray:(IOSObjectArray *)terms;

/*!
 @brief Return and increment current gen.
 */
- (jlong)getAndIncrementGeneration;

/*!
 @brief Return the current generation being indexed.
 */
- (jlong)getGeneration;

/*!
 @brief Return the wrapped <code>IndexWriter</code>.
 */
- (OrgApacheLuceneIndexIndexWriter *)getIndexWriter;

/*!
 @brief Cals <code>IndexWriter.tryDeleteDocument(IndexReader,int)</code>
  and
   returns the generation that reflects this change.
 */
- (jlong)tryDeleteDocumentWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                                      withInt:(jint)docID;

/*!
 @brief Calls <code>IndexWriter.updateDocument(Term,Iterable)</code>
  and
   returns the generation that reflects this change.
 */
- (jlong)updateDocumentWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)t
                               withJavaLangIterable:(id<JavaLangIterable>)d;

/*!
 @brief Calls <code>IndexWriter.updateDocuments(Term,Iterable)</code>
  and returns
   the generation that reflects this change.
 */
- (jlong)updateDocumentsWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)t
                                withJavaLangIterable:(id<JavaLangIterable>)docs;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexTrackingIndexWriter)

FOUNDATION_EXPORT void OrgApacheLuceneIndexTrackingIndexWriter_initWithOrgApacheLuceneIndexIndexWriter_(OrgApacheLuceneIndexTrackingIndexWriter *self, OrgApacheLuceneIndexIndexWriter *writer);

FOUNDATION_EXPORT OrgApacheLuceneIndexTrackingIndexWriter *new_OrgApacheLuceneIndexTrackingIndexWriter_initWithOrgApacheLuceneIndexIndexWriter_(OrgApacheLuceneIndexIndexWriter *writer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexTrackingIndexWriter *create_OrgApacheLuceneIndexTrackingIndexWriter_initWithOrgApacheLuceneIndexIndexWriter_(OrgApacheLuceneIndexIndexWriter *writer);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexTrackingIndexWriter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneIndexTrackingIndexWriter")
