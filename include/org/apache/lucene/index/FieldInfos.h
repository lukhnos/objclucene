//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/FieldInfos.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneIndexFieldInfos")
#ifdef RESTRICT_OrgApacheLuceneIndexFieldInfos
#define INCLUDE_ALL_OrgApacheLuceneIndexFieldInfos 0
#else
#define INCLUDE_ALL_OrgApacheLuceneIndexFieldInfos 1
#endif
#undef RESTRICT_OrgApacheLuceneIndexFieldInfos

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneIndexFieldInfos_) && (INCLUDE_ALL_OrgApacheLuceneIndexFieldInfos || defined(INCLUDE_OrgApacheLuceneIndexFieldInfos))
#define OrgApacheLuceneIndexFieldInfos_

#define RESTRICT_JavaLangIterable 1
#define INCLUDE_JavaLangIterable 1
#include "java/lang/Iterable.h"

@class IOSObjectArray;
@class OrgApacheLuceneIndexFieldInfo;
@protocol JavaUtilFunctionConsumer;
@protocol JavaUtilIterator;
@protocol JavaUtilSpliterator;

/*!
 @brief Collection of <code>FieldInfo</code>s (accessible by number or by name).
 */
@interface OrgApacheLuceneIndexFieldInfos : NSObject < JavaLangIterable >

#pragma mark Public

/*!
 @brief Constructs a new FieldInfos from an array of FieldInfo objects
 */
- (instancetype __nonnull)initWithOrgApacheLuceneIndexFieldInfoArray:(IOSObjectArray *)infos;

/*!
 @brief Return the fieldinfo object referenced by the fieldNumber.
 @param fieldNumber field's number.
 @return the FieldInfo object or null when the given fieldNumber
  doesn't exist.
 @throw IllegalArgumentExceptionif fieldNumber is negative
 */
- (OrgApacheLuceneIndexFieldInfo *)fieldInfoWithInt:(jint)fieldNumber;

/*!
 @brief Return the fieldinfo object referenced by the field name
 @return the FieldInfo object or null when the given fieldName
  doesn't exist.
 */
- (OrgApacheLuceneIndexFieldInfo *)fieldInfoWithNSString:(NSString *)fieldName;

/*!
 @brief Returns true if any fields have DocValues
 */
- (jboolean)hasDocValues;

/*!
 @brief Returns true if any fields have freqs
 */
- (jboolean)hasFreq;

/*!
 @brief Returns true if any fields have norms
 */
- (jboolean)hasNorms;

/*!
 @brief Returns true if any fields have offsets
 */
- (jboolean)hasOffsets;

/*!
 @brief Returns true if any fields have payloads
 */
- (jboolean)hasPayloads;

/*!
 @brief Returns true if any fields have positions
 */
- (jboolean)hasProx;

/*!
 @brief Returns true if any fields have vectors
 */
- (jboolean)hasVectors;

/*!
 @brief Returns an iterator over all the fieldinfo objects present,
  ordered by ascending field number
 */
- (id<JavaUtilIterator>)iterator;

/*!
 @brief Returns the number of fields
 */
- (jint)size;

#pragma mark Package-Private

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexFieldInfos)

FOUNDATION_EXPORT void OrgApacheLuceneIndexFieldInfos_initWithOrgApacheLuceneIndexFieldInfoArray_(OrgApacheLuceneIndexFieldInfos *self, IOSObjectArray *infos);

FOUNDATION_EXPORT OrgApacheLuceneIndexFieldInfos *new_OrgApacheLuceneIndexFieldInfos_initWithOrgApacheLuceneIndexFieldInfoArray_(IOSObjectArray *infos) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexFieldInfos *create_OrgApacheLuceneIndexFieldInfos_initWithOrgApacheLuceneIndexFieldInfoArray_(IOSObjectArray *infos);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexFieldInfos)

#endif

#if !defined (OrgApacheLuceneIndexFieldInfos_FieldNumbers_) && (INCLUDE_ALL_OrgApacheLuceneIndexFieldInfos || defined(INCLUDE_OrgApacheLuceneIndexFieldInfos_FieldNumbers))
#define OrgApacheLuceneIndexFieldInfos_FieldNumbers_

@class JavaLangInteger;
@class OrgApacheLuceneIndexDocValuesType;

@interface OrgApacheLuceneIndexFieldInfos_FieldNumbers : NSObject

#pragma mark Package-Private

- (instancetype __nonnull)init;

/*!
 @brief Returns the global field number for the given field name.If the name
  does not exist yet it tries to add it with the given preferred field
  number assigned if possible otherwise the first unassigned field number
  is used as the field number.
 */
- (jint)addOrGetWithNSString:(NSString *)fieldName
                     withInt:(jint)preferredFieldNumber
withOrgApacheLuceneIndexDocValuesType:(OrgApacheLuceneIndexDocValuesType *)dvType;

- (void)clear;

/*!
 @brief Returns true if the <code>fieldName</code> exists in the map and is of the
  same <code>dvType</code>.
 */
- (jboolean)containsWithNSString:(NSString *)fieldName
withOrgApacheLuceneIndexDocValuesType:(OrgApacheLuceneIndexDocValuesType *)dvType;

- (void)setDocValuesTypeWithInt:(jint)number
                   withNSString:(NSString *)name
withOrgApacheLuceneIndexDocValuesType:(OrgApacheLuceneIndexDocValuesType *)dvType;

- (void)verifyConsistentWithJavaLangInteger:(JavaLangInteger *)number
                               withNSString:(NSString *)name
      withOrgApacheLuceneIndexDocValuesType:(OrgApacheLuceneIndexDocValuesType *)dvType;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexFieldInfos_FieldNumbers)

FOUNDATION_EXPORT void OrgApacheLuceneIndexFieldInfos_FieldNumbers_init(OrgApacheLuceneIndexFieldInfos_FieldNumbers *self);

FOUNDATION_EXPORT OrgApacheLuceneIndexFieldInfos_FieldNumbers *new_OrgApacheLuceneIndexFieldInfos_FieldNumbers_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexFieldInfos_FieldNumbers *create_OrgApacheLuceneIndexFieldInfos_FieldNumbers_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexFieldInfos_FieldNumbers)

#endif

#if !defined (OrgApacheLuceneIndexFieldInfos_Builder_) && (INCLUDE_ALL_OrgApacheLuceneIndexFieldInfos || defined(INCLUDE_OrgApacheLuceneIndexFieldInfos_Builder))
#define OrgApacheLuceneIndexFieldInfos_Builder_

@class OrgApacheLuceneIndexFieldInfo;
@class OrgApacheLuceneIndexFieldInfos;
@class OrgApacheLuceneIndexFieldInfos_FieldNumbers;

@interface OrgApacheLuceneIndexFieldInfos_Builder : NSObject {
 @public
  OrgApacheLuceneIndexFieldInfos_FieldNumbers *globalFieldNumbers_;
}

#pragma mark Public

- (OrgApacheLuceneIndexFieldInfo *)addWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fi;

- (void)addWithOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)other;

- (OrgApacheLuceneIndexFieldInfo *)fieldInfoWithNSString:(NSString *)fieldName;

/*!
 @brief Create a new field, or return existing one.
 */
- (OrgApacheLuceneIndexFieldInfo *)getOrAddWithNSString:(NSString *)name;

#pragma mark Package-Private

- (instancetype __nonnull)init;

/*!
 @brief Creates a new instance with the given <code>FieldNumbers</code>.
 */
- (instancetype __nonnull)initWithOrgApacheLuceneIndexFieldInfos_FieldNumbers:(OrgApacheLuceneIndexFieldInfos_FieldNumbers *)globalFieldNumbers;

- (OrgApacheLuceneIndexFieldInfos *)finish;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexFieldInfos_Builder)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexFieldInfos_Builder, globalFieldNumbers_, OrgApacheLuceneIndexFieldInfos_FieldNumbers *)

FOUNDATION_EXPORT void OrgApacheLuceneIndexFieldInfos_Builder_init(OrgApacheLuceneIndexFieldInfos_Builder *self);

FOUNDATION_EXPORT OrgApacheLuceneIndexFieldInfos_Builder *new_OrgApacheLuceneIndexFieldInfos_Builder_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexFieldInfos_Builder *create_OrgApacheLuceneIndexFieldInfos_Builder_init(void);

FOUNDATION_EXPORT void OrgApacheLuceneIndexFieldInfos_Builder_initWithOrgApacheLuceneIndexFieldInfos_FieldNumbers_(OrgApacheLuceneIndexFieldInfos_Builder *self, OrgApacheLuceneIndexFieldInfos_FieldNumbers *globalFieldNumbers);

FOUNDATION_EXPORT OrgApacheLuceneIndexFieldInfos_Builder *new_OrgApacheLuceneIndexFieldInfos_Builder_initWithOrgApacheLuceneIndexFieldInfos_FieldNumbers_(OrgApacheLuceneIndexFieldInfos_FieldNumbers *globalFieldNumbers) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexFieldInfos_Builder *create_OrgApacheLuceneIndexFieldInfos_Builder_initWithOrgApacheLuceneIndexFieldInfos_FieldNumbers_(OrgApacheLuceneIndexFieldInfos_FieldNumbers *globalFieldNumbers);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexFieldInfos_Builder)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneIndexFieldInfos")
