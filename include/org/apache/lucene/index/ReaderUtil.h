//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/ReaderUtil.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneIndexReaderUtil")
#ifdef RESTRICT_OrgApacheLuceneIndexReaderUtil
#define INCLUDE_ALL_OrgApacheLuceneIndexReaderUtil 0
#else
#define INCLUDE_ALL_OrgApacheLuceneIndexReaderUtil 1
#endif
#undef RESTRICT_OrgApacheLuceneIndexReaderUtil

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneIndexReaderUtil_) && (INCLUDE_ALL_OrgApacheLuceneIndexReaderUtil || defined(INCLUDE_OrgApacheLuceneIndexReaderUtil))
#define OrgApacheLuceneIndexReaderUtil_

@class IOSIntArray;
@class OrgApacheLuceneIndexIndexReaderContext;
@protocol JavaUtilList;

/*!
 @brief Common util methods for dealing with <code>IndexReader</code>s and <code>IndexReaderContext</code>s.
 */
@interface OrgApacheLuceneIndexReaderUtil : NSObject

#pragma mark Public

/*!
 @brief Walks up the reader tree and return the given context's top level reader
  context, or in other words the reader tree's root context.
 */
+ (OrgApacheLuceneIndexIndexReaderContext *)getTopLevelContextWithOrgApacheLuceneIndexIndexReaderContext:(OrgApacheLuceneIndexIndexReaderContext *)context;

/*!
 @brief Returns index of the searcher/reader for document <code>n</code> in the
  array used to construct this searcher/reader.
 */
+ (jint)subIndexWithInt:(jint)n
           withIntArray:(IOSIntArray *)docStarts;

/*!
 @brief Returns index of the searcher/reader for document <code>n</code> in the
  array used to construct this searcher/reader.
 */
+ (jint)subIndexWithInt:(jint)n
       withJavaUtilList:(id<JavaUtilList>)leaves;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexReaderUtil)

FOUNDATION_EXPORT OrgApacheLuceneIndexIndexReaderContext *OrgApacheLuceneIndexReaderUtil_getTopLevelContextWithOrgApacheLuceneIndexIndexReaderContext_(OrgApacheLuceneIndexIndexReaderContext *context);

FOUNDATION_EXPORT jint OrgApacheLuceneIndexReaderUtil_subIndexWithInt_withIntArray_(jint n, IOSIntArray *docStarts);

FOUNDATION_EXPORT jint OrgApacheLuceneIndexReaderUtil_subIndexWithInt_withJavaUtilList_(jint n, id<JavaUtilList> leaves);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexReaderUtil)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneIndexReaderUtil")
