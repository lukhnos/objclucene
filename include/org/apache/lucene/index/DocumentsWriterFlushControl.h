//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/DocumentsWriterFlushControl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneIndexDocumentsWriterFlushControl")
#ifdef RESTRICT_OrgApacheLuceneIndexDocumentsWriterFlushControl
#define INCLUDE_ALL_OrgApacheLuceneIndexDocumentsWriterFlushControl 0
#else
#define INCLUDE_ALL_OrgApacheLuceneIndexDocumentsWriterFlushControl 1
#endif
#undef RESTRICT_OrgApacheLuceneIndexDocumentsWriterFlushControl

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneIndexDocumentsWriterFlushControl_) && (INCLUDE_ALL_OrgApacheLuceneIndexDocumentsWriterFlushControl || defined(INCLUDE_OrgApacheLuceneIndexDocumentsWriterFlushControl))
#define OrgApacheLuceneIndexDocumentsWriterFlushControl_

#define RESTRICT_OrgApacheLuceneUtilAccountable 1
#define INCLUDE_OrgApacheLuceneUtilAccountable 1
#include "org/apache/lucene/util/Accountable.h"

@class JavaUtilConcurrentAtomicAtomicBoolean;
@class OrgApacheLuceneIndexBufferedUpdatesStream;
@class OrgApacheLuceneIndexDocumentsWriter;
@class OrgApacheLuceneIndexDocumentsWriterDeleteQueue;
@class OrgApacheLuceneIndexDocumentsWriterPerThread;
@class OrgApacheLuceneIndexDocumentsWriterPerThreadPool_ThreadState;
@class OrgApacheLuceneIndexDocumentsWriterStallControl;
@class OrgApacheLuceneIndexLiveIndexWriterConfig;
@class OrgApacheLuceneUtilInfoStream;
@protocol JavaUtilCollection;
@protocol JavaUtilIterator;

/*!
 @brief This class controls <code>DocumentsWriterPerThread</code> flushing during
  indexing.It tracks the memory consumption per 
 <code>DocumentsWriterPerThread</code> and uses a configured <code>FlushPolicy</code> to
  decide if a <code>DocumentsWriterPerThread</code> must flush.
 <p>
  In addition to the <code>FlushPolicy</code> the flush control might set certain 
 <code>DocumentsWriterPerThread</code> as flush pending iff a 
 <code>DocumentsWriterPerThread</code> exceeds the 
 <code>IndexWriterConfig.getRAMPerThreadHardLimitMB()</code> to prevent address
  space exhaustion.
 */
@interface OrgApacheLuceneIndexDocumentsWriterFlushControl : NSObject < OrgApacheLuceneUtilAccountable > {
 @public
  JavaUtilConcurrentAtomicAtomicBoolean *flushDeletes_;
  jdouble maxConfiguredRamBuffer_;
  jlong peakActiveBytes_;
  jlong peakFlushBytes_;
  jlong peakNetBytes_;
  jlong peakDelta_;
  jboolean flushByRAMWasDisabled_;
  OrgApacheLuceneIndexDocumentsWriterStallControl *stallControl_;
}

#pragma mark Public

- (jlong)activeBytes;

/*!
 @brief Returns an iterator that provides access to all currently active <code>ThreadState</code>s
 */
- (id<JavaUtilIterator>)allActiveThreadStates;

- (jlong)flushBytes;

- (jboolean)getAndResetApplyAllDeletes;

- (id<JavaUtilCollection>)getChildResources;

- (jlong)getDeleteBytesUsed;

/*!
 @brief Returns the <code>IndexWriter</code> <code>InfoStream</code>
 */
- (OrgApacheLuceneUtilInfoStream *)getInfoStream;

/*!
 @brief Returns the number of delete terms in the global pool
 */
- (jint)getNumGlobalTermDeletes;

- (jlong)netBytes;

- (jlong)ramBytesUsed;

- (void)setApplyAllDeletes;

/*!
 @brief Sets flush pending state on the given <code>ThreadState</code>.The
  <code>ThreadState</code> must have indexed at least on Document and must not be
  already pending.
 */
- (void)setFlushPendingWithOrgApacheLuceneIndexDocumentsWriterPerThreadPool_ThreadState:(OrgApacheLuceneIndexDocumentsWriterPerThreadPool_ThreadState *)perThread;

- (NSString *)description;

- (void)waitForFlush;

#pragma mark Package-Private

- (instancetype __nonnull)initPackagePrivateWithOrgApacheLuceneIndexDocumentsWriter:(OrgApacheLuceneIndexDocumentsWriter *)documentsWriter
                                      withOrgApacheLuceneIndexLiveIndexWriterConfig:(OrgApacheLuceneIndexLiveIndexWriterConfig *)config
                                      withOrgApacheLuceneIndexBufferedUpdatesStream:(OrgApacheLuceneIndexBufferedUpdatesStream *)bufferedUpdatesStream;

- (void)abortFullFlushes;

- (void)abortPendingFlushes;

- (void)addFlushableStateWithOrgApacheLuceneIndexDocumentsWriterPerThreadPool_ThreadState:(OrgApacheLuceneIndexDocumentsWriterPerThreadPool_ThreadState *)perThread;

/*!
 @brief Returns <code>true</code> iff stalled
 */
- (jboolean)anyStalledThreads;

- (jboolean)assertBlockedFlushesWithOrgApacheLuceneIndexDocumentsWriterDeleteQueue:(OrgApacheLuceneIndexDocumentsWriterDeleteQueue *)flushingQueue;

- (OrgApacheLuceneIndexDocumentsWriterPerThread *)doAfterDocumentWithOrgApacheLuceneIndexDocumentsWriterPerThreadPool_ThreadState:(OrgApacheLuceneIndexDocumentsWriterPerThreadPool_ThreadState *)perThread
                                                                                                                      withBoolean:(jboolean)isUpdate;

- (void)doAfterFlushWithOrgApacheLuceneIndexDocumentsWriterPerThread:(OrgApacheLuceneIndexDocumentsWriterPerThread *)dwpt;

- (void)doOnAbortWithOrgApacheLuceneIndexDocumentsWriterPerThreadPool_ThreadState:(OrgApacheLuceneIndexDocumentsWriterPerThreadPool_ThreadState *)state;

- (void)doOnDelete;

- (void)finishFullFlush;

/*!
 @brief Returns <code>true</code> if a full flush is currently running
 */
- (jboolean)isFullFlush;

- (void)markForFullFlush;

- (OrgApacheLuceneIndexDocumentsWriterPerThread *)nextPendingFlush;

- (jint)numActiveDWPT;

/*!
 @brief Returns the number of flushes that are checked out but not yet available
  for flushing.This only applies during a full flush if a DWPT needs
  flushing but must not be flushed until the full flush has finished.
 */
- (jint)numBlockedFlushes;

- (jint)numFlushingDWPT;

/*!
 @brief Returns the number of flushes that are already checked out but not yet
  actively flushing
 */
- (jint)numQueuedFlushes;

- (OrgApacheLuceneIndexDocumentsWriterPerThreadPool_ThreadState *)obtainAndLock;

- (void)setClosed;

- (OrgApacheLuceneIndexDocumentsWriterPerThread *)tryCheckoutForFlushWithOrgApacheLuceneIndexDocumentsWriterPerThreadPool_ThreadState:(OrgApacheLuceneIndexDocumentsWriterPerThreadPool_ThreadState *)perThread;

/*!
 @brief This method will block if too many DWPT are currently flushing and no
  checked out DWPT are available
 */
- (void)waitIfStalled;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexDocumentsWriterFlushControl)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexDocumentsWriterFlushControl, flushDeletes_, JavaUtilConcurrentAtomicAtomicBoolean *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexDocumentsWriterFlushControl, stallControl_, OrgApacheLuceneIndexDocumentsWriterStallControl *)

FOUNDATION_EXPORT void OrgApacheLuceneIndexDocumentsWriterFlushControl_initPackagePrivateWithOrgApacheLuceneIndexDocumentsWriter_withOrgApacheLuceneIndexLiveIndexWriterConfig_withOrgApacheLuceneIndexBufferedUpdatesStream_(OrgApacheLuceneIndexDocumentsWriterFlushControl *self, OrgApacheLuceneIndexDocumentsWriter *documentsWriter, OrgApacheLuceneIndexLiveIndexWriterConfig *config, OrgApacheLuceneIndexBufferedUpdatesStream *bufferedUpdatesStream);

FOUNDATION_EXPORT OrgApacheLuceneIndexDocumentsWriterFlushControl *new_OrgApacheLuceneIndexDocumentsWriterFlushControl_initPackagePrivateWithOrgApacheLuceneIndexDocumentsWriter_withOrgApacheLuceneIndexLiveIndexWriterConfig_withOrgApacheLuceneIndexBufferedUpdatesStream_(OrgApacheLuceneIndexDocumentsWriter *documentsWriter, OrgApacheLuceneIndexLiveIndexWriterConfig *config, OrgApacheLuceneIndexBufferedUpdatesStream *bufferedUpdatesStream) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexDocumentsWriterFlushControl *create_OrgApacheLuceneIndexDocumentsWriterFlushControl_initPackagePrivateWithOrgApacheLuceneIndexDocumentsWriter_withOrgApacheLuceneIndexLiveIndexWriterConfig_withOrgApacheLuceneIndexBufferedUpdatesStream_(OrgApacheLuceneIndexDocumentsWriter *documentsWriter, OrgApacheLuceneIndexLiveIndexWriterConfig *config, OrgApacheLuceneIndexBufferedUpdatesStream *bufferedUpdatesStream);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexDocumentsWriterFlushControl)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneIndexDocumentsWriterFlushControl")
