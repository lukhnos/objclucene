//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/CheckIndex.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneIndexCheckIndex")
#ifdef RESTRICT_OrgApacheLuceneIndexCheckIndex
#define INCLUDE_ALL_OrgApacheLuceneIndexCheckIndex 0
#else
#define INCLUDE_ALL_OrgApacheLuceneIndexCheckIndex 1
#endif
#undef RESTRICT_OrgApacheLuceneIndexCheckIndex

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneIndexCheckIndex_) && (INCLUDE_ALL_OrgApacheLuceneIndexCheckIndex || defined(INCLUDE_OrgApacheLuceneIndexCheckIndex))
#define OrgApacheLuceneIndexCheckIndex_

#define RESTRICT_JavaIoCloseable 1
#define INCLUDE_JavaIoCloseable 1
#include "java/io/Closeable.h"

@class IOSObjectArray;
@class JavaIoPrintStream;
@class OrgApacheLuceneIndexCheckIndex_Status;
@class OrgApacheLuceneIndexCheckIndex_Status_DocValuesStatus;
@class OrgApacheLuceneIndexCheckIndex_Status_FieldInfoStatus;
@class OrgApacheLuceneIndexCheckIndex_Status_FieldNormStatus;
@class OrgApacheLuceneIndexCheckIndex_Status_LiveDocStatus;
@class OrgApacheLuceneIndexCheckIndex_Status_StoredFieldStatus;
@class OrgApacheLuceneIndexCheckIndex_Status_TermIndexStatus;
@class OrgApacheLuceneIndexCheckIndex_Status_TermVectorStatus;
@class OrgApacheLuceneIndexCodecReader;
@class OrgApacheLuceneStoreDirectory;
@class OrgApacheLuceneStoreLock;
@protocol JavaUtilList;

/*!
 @brief Basic tool and API to check the health of an index and
  write a new segments file that removes reference to
  problematic segments.
 <p>As this tool checks every byte in the index, on a large
  index it can take quite a long time to run.
 */
@interface OrgApacheLuceneIndexCheckIndex : NSObject < JavaIoCloseable >

#pragma mark Public

/*!
 @brief Create a new CheckIndex on the directory.
 */
- (instancetype __nonnull)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir;

/*!
 @brief Expert: create a directory with the specified lock.
 This should really not be used except for unit tests!!!!
  It exists only to support special tests (such as TestIndexWriterExceptions*),
  that would otherwise be more complicated to debug if they had to close the writer
  for each check.
 */
- (instancetype __nonnull)initWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)dir
                                   withOrgApacheLuceneStoreLock:(OrgApacheLuceneStoreLock *)writeLock;

/*!
 @brief Returns a <code>Status</code> instance detailing
   the state of the index.
 <p>As this method checks every byte in the index, on a large
   index it can take quite a long time to run.  
 <p><b>WARNING</b>: make sure
   you only call this when the index is not opened by any
   writer.
 */
- (OrgApacheLuceneIndexCheckIndex_Status *)checkIndex;

/*!
 @brief Returns a <code>Status</code> instance detailing
   the state of the index.
 @param onlySegments list of specific segment names to check   
  <p>
  As this method checks every byte in the specified   segments, on a large index it can take quite a long
    time to run.
 */
- (OrgApacheLuceneIndexCheckIndex_Status *)checkIndexWithJavaUtilList:(id<JavaUtilList>)onlySegments;

- (void)close;

/*!
 @brief Repairs the index using previously returned result
   from <code>checkIndex</code>.Note that this does not
   remove any of the unreferenced files after it's done;
   you must separately open an <code>IndexWriter</code>, which
   deletes unreferenced files when it's created.
 <p><b>WARNING</b>: this writes a
   new segments file into the index, effectively removing
   all documents in broken segments from the index.
   BE CAREFUL.
 */
- (void)exorciseIndexWithOrgApacheLuceneIndexCheckIndex_Status:(OrgApacheLuceneIndexCheckIndex_Status *)result;

/*!
 @brief See <code>getChecksumsOnly</code>.
 */
- (jboolean)getChecksumsOnly;

/*!
 @brief See <code>setCrossCheckTermVectors</code>.
 */
- (jboolean)getCrossCheckTermVectors;

/*!
 @brief See <code>setFailFast</code>.
 */
- (jboolean)getFailFast;

/*!
 @brief Command-line interface to check and exorcise corrupt segments from an index.
 <p>
     Run it like this:    
 @code

     java -ea:org.apache.lucene... org.apache.lucene.index.CheckIndex pathToIndex [-exorcise] [-verbose] [-segment X] [-segment Y]    
     
@endcode
     <ul>
     <li><code>-exorcise</code>: actually write a new segments_N file, removing any problematic segments. *LOSES DATA*
     <li><code>-segment X</code>: only check the specified
     segment(s).  This can be specified multiple times,
     to check more than one segment, eg <code>-segment _2
     -segment _a</code>.  You can't use this with the -exorcise
     option.    
 </ul>
     <p><b>WARNING</b>: <code>-exorcise</code> should only be used on an emergency basis as it will cause
                        documents (perhaps many) to be permanently removed from the index.  Always make
                        a backup copy of your index before running this!  Do not run this tool on an index
                        that is actively being written to.  You have been warned!    
 <p>                Run without -exorcise, this tool will open the index, report version information
                        and report any exceptions it hits and what action it would take if -exorcise were
                        specified.  With -exorcise, this tool will remove any segments that have issues and
                        write a new segments_N file.  This means all documents contained in the affected
                        segments will be removed.    
 <p>
                        This tool exits with exit code 1 if the index cannot be opened or has any
                        corruption, else 0.
 */
+ (void)mainWithNSStringArray:(IOSObjectArray *)args;

/*!
 @brief If true, only validate physical integrity for all files.
 Note that the returned nested status objects (e.g. storedFieldStatus) will be null.
 */
- (void)setChecksumsOnlyWithBoolean:(jboolean)v;

/*!
 @brief If true, term vectors are compared against postings to
   make sure they are the same.This will likely
   drastically increase time it takes to run CheckIndex!
 */
- (void)setCrossCheckTermVectorsWithBoolean:(jboolean)v;

/*!
 @brief If true, just throw the original exception immediately when
   corruption is detected, rather than continuing to iterate to other
   segments looking for more corruption.
 */
- (void)setFailFastWithBoolean:(jboolean)v;

/*!
 @brief Set infoStream where messages should go.See <code>setInfoStream(PrintStream,boolean)</code>.
 */
- (void)setInfoStreamWithJavaIoPrintStream:(JavaIoPrintStream *)outArg;

/*!
 @brief Set infoStream where messages should go.If null, no
   messages are printed.
 If verbose is true then more
   details are printed.
 */
- (void)setInfoStreamWithJavaIoPrintStream:(JavaIoPrintStream *)outArg
                               withBoolean:(jboolean)verbose;

/*!
 @brief Test docvalues.
 */
+ (OrgApacheLuceneIndexCheckIndex_Status_DocValuesStatus *)testDocValuesWithOrgApacheLuceneIndexCodecReader:(OrgApacheLuceneIndexCodecReader *)reader
                                                                                      withJavaIoPrintStream:(JavaIoPrintStream *)infoStream
                                                                                                withBoolean:(jboolean)failFast;

/*!
 @brief Test field infos.
 */
+ (OrgApacheLuceneIndexCheckIndex_Status_FieldInfoStatus *)testFieldInfosWithOrgApacheLuceneIndexCodecReader:(OrgApacheLuceneIndexCodecReader *)reader
                                                                                       withJavaIoPrintStream:(JavaIoPrintStream *)infoStream
                                                                                                 withBoolean:(jboolean)failFast;

/*!
 @brief Test field norms.
 */
+ (OrgApacheLuceneIndexCheckIndex_Status_FieldNormStatus *)testFieldNormsWithOrgApacheLuceneIndexCodecReader:(OrgApacheLuceneIndexCodecReader *)reader
                                                                                       withJavaIoPrintStream:(JavaIoPrintStream *)infoStream
                                                                                                 withBoolean:(jboolean)failFast;

/*!
 @brief Test live docs.
 */
+ (OrgApacheLuceneIndexCheckIndex_Status_LiveDocStatus *)testLiveDocsWithOrgApacheLuceneIndexCodecReader:(OrgApacheLuceneIndexCodecReader *)reader
                                                                                   withJavaIoPrintStream:(JavaIoPrintStream *)infoStream
                                                                                             withBoolean:(jboolean)failFast;

/*!
 @brief Test the term index.
 */
+ (OrgApacheLuceneIndexCheckIndex_Status_TermIndexStatus *)testPostingsWithOrgApacheLuceneIndexCodecReader:(OrgApacheLuceneIndexCodecReader *)reader
                                                                                     withJavaIoPrintStream:(JavaIoPrintStream *)infoStream;

/*!
 @brief Test the term index.
 */
+ (OrgApacheLuceneIndexCheckIndex_Status_TermIndexStatus *)testPostingsWithOrgApacheLuceneIndexCodecReader:(OrgApacheLuceneIndexCodecReader *)reader
                                                                                     withJavaIoPrintStream:(JavaIoPrintStream *)infoStream
                                                                                               withBoolean:(jboolean)verbose
                                                                                               withBoolean:(jboolean)failFast;

/*!
 @brief Test stored fields.
 */
+ (OrgApacheLuceneIndexCheckIndex_Status_StoredFieldStatus *)testStoredFieldsWithOrgApacheLuceneIndexCodecReader:(OrgApacheLuceneIndexCodecReader *)reader
                                                                                           withJavaIoPrintStream:(JavaIoPrintStream *)infoStream
                                                                                                     withBoolean:(jboolean)failFast;

/*!
 @brief Test term vectors.
 */
+ (OrgApacheLuceneIndexCheckIndex_Status_TermVectorStatus *)testTermVectorsWithOrgApacheLuceneIndexCodecReader:(OrgApacheLuceneIndexCodecReader *)reader
                                                                                         withJavaIoPrintStream:(JavaIoPrintStream *)infoStream;

/*!
 @brief Test term vectors.
 */
+ (OrgApacheLuceneIndexCheckIndex_Status_TermVectorStatus *)testTermVectorsWithOrgApacheLuceneIndexCodecReader:(OrgApacheLuceneIndexCodecReader *)reader
                                                                                         withJavaIoPrintStream:(JavaIoPrintStream *)infoStream
                                                                                                   withBoolean:(jboolean)verbose
                                                                                                   withBoolean:(jboolean)crossCheckTermVectors
                                                                                                   withBoolean:(jboolean)failFast;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexCheckIndex)

FOUNDATION_EXPORT void OrgApacheLuceneIndexCheckIndex_initWithOrgApacheLuceneStoreDirectory_(OrgApacheLuceneIndexCheckIndex *self, OrgApacheLuceneStoreDirectory *dir);

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex *new_OrgApacheLuceneIndexCheckIndex_initWithOrgApacheLuceneStoreDirectory_(OrgApacheLuceneStoreDirectory *dir) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex *create_OrgApacheLuceneIndexCheckIndex_initWithOrgApacheLuceneStoreDirectory_(OrgApacheLuceneStoreDirectory *dir);

FOUNDATION_EXPORT void OrgApacheLuceneIndexCheckIndex_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneStoreLock_(OrgApacheLuceneIndexCheckIndex *self, OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneStoreLock *writeLock);

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex *new_OrgApacheLuceneIndexCheckIndex_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneStoreLock_(OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneStoreLock *writeLock) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex *create_OrgApacheLuceneIndexCheckIndex_initWithOrgApacheLuceneStoreDirectory_withOrgApacheLuceneStoreLock_(OrgApacheLuceneStoreDirectory *dir, OrgApacheLuceneStoreLock *writeLock);

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex_Status_LiveDocStatus *OrgApacheLuceneIndexCheckIndex_testLiveDocsWithOrgApacheLuceneIndexCodecReader_withJavaIoPrintStream_withBoolean_(OrgApacheLuceneIndexCodecReader *reader, JavaIoPrintStream *infoStream, jboolean failFast);

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex_Status_FieldInfoStatus *OrgApacheLuceneIndexCheckIndex_testFieldInfosWithOrgApacheLuceneIndexCodecReader_withJavaIoPrintStream_withBoolean_(OrgApacheLuceneIndexCodecReader *reader, JavaIoPrintStream *infoStream, jboolean failFast);

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex_Status_FieldNormStatus *OrgApacheLuceneIndexCheckIndex_testFieldNormsWithOrgApacheLuceneIndexCodecReader_withJavaIoPrintStream_withBoolean_(OrgApacheLuceneIndexCodecReader *reader, JavaIoPrintStream *infoStream, jboolean failFast);

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex_Status_TermIndexStatus *OrgApacheLuceneIndexCheckIndex_testPostingsWithOrgApacheLuceneIndexCodecReader_withJavaIoPrintStream_(OrgApacheLuceneIndexCodecReader *reader, JavaIoPrintStream *infoStream);

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex_Status_TermIndexStatus *OrgApacheLuceneIndexCheckIndex_testPostingsWithOrgApacheLuceneIndexCodecReader_withJavaIoPrintStream_withBoolean_withBoolean_(OrgApacheLuceneIndexCodecReader *reader, JavaIoPrintStream *infoStream, jboolean verbose, jboolean failFast);

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex_Status_StoredFieldStatus *OrgApacheLuceneIndexCheckIndex_testStoredFieldsWithOrgApacheLuceneIndexCodecReader_withJavaIoPrintStream_withBoolean_(OrgApacheLuceneIndexCodecReader *reader, JavaIoPrintStream *infoStream, jboolean failFast);

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex_Status_DocValuesStatus *OrgApacheLuceneIndexCheckIndex_testDocValuesWithOrgApacheLuceneIndexCodecReader_withJavaIoPrintStream_withBoolean_(OrgApacheLuceneIndexCodecReader *reader, JavaIoPrintStream *infoStream, jboolean failFast);

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex_Status_TermVectorStatus *OrgApacheLuceneIndexCheckIndex_testTermVectorsWithOrgApacheLuceneIndexCodecReader_withJavaIoPrintStream_(OrgApacheLuceneIndexCodecReader *reader, JavaIoPrintStream *infoStream);

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex_Status_TermVectorStatus *OrgApacheLuceneIndexCheckIndex_testTermVectorsWithOrgApacheLuceneIndexCodecReader_withJavaIoPrintStream_withBoolean_withBoolean_withBoolean_(OrgApacheLuceneIndexCodecReader *reader, JavaIoPrintStream *infoStream, jboolean verbose, jboolean crossCheckTermVectors, jboolean failFast);

FOUNDATION_EXPORT void OrgApacheLuceneIndexCheckIndex_mainWithNSStringArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexCheckIndex)

#endif

#if !defined (OrgApacheLuceneIndexCheckIndex_Status_) && (INCLUDE_ALL_OrgApacheLuceneIndexCheckIndex || defined(INCLUDE_OrgApacheLuceneIndexCheckIndex_Status))
#define OrgApacheLuceneIndexCheckIndex_Status_

@class OrgApacheLuceneIndexSegmentInfos;
@class OrgApacheLuceneStoreDirectory;
@protocol JavaUtilList;
@protocol JavaUtilMap;

/*!
 @brief Returned from <code>checkIndex()</code> detailing the health and status of the index.
 */
@interface OrgApacheLuceneIndexCheckIndex_Status : NSObject {
 @public
  /*!
   @brief True if no problems were found with the index.
   */
  jboolean clean_;
  /*!
   @brief True if we were unable to locate and load the segments_N file.
   */
  jboolean missingSegments_;
  /*!
   @brief True if we were unable to open the segments_N file.
   */
  jboolean cantOpenSegments_;
  /*!
   @brief True if we were unable to read the version number from segments_N file.
   */
  jboolean missingSegmentVersion_;
  /*!
   @brief Name of latest segments_N file in the index.
   */
  NSString *segmentsFileName_;
  /*!
   @brief Number of segments in the index.
   */
  jint numSegments_;
  /*!
   @brief Empty unless you passed specific segments list to check as optional 3rd argument.
   - seealso: CheckIndex#checkIndex(List)
   */
  id<JavaUtilList> segmentsChecked_;
  /*!
   @brief True if the index was created with a newer version of Lucene than the CheckIndex tool.
   */
  jboolean toolOutOfDate_;
  /*!
   @brief List of <code>SegmentInfoStatus</code> instances, detailing status of each segment.
   */
  id<JavaUtilList> segmentInfos_;
  /*!
   @brief Directory index is in.
   */
  OrgApacheLuceneStoreDirectory *dir_;
  /*!
   @brief SegmentInfos instance containing only segments that
  had no problems (this is used with the <code>CheckIndex.exorciseIndex</code> 
  method to repair the index.
   */
  OrgApacheLuceneIndexSegmentInfos *newSegments_;
  /*!
   @brief How many documents will be lost to bad segments.
   */
  jint totLoseDocCount_;
  /*!
   @brief How many bad segments were found.
   */
  jint numBadSegments_;
  /*!
   @brief True if we checked only specific segments (<code>checkIndex(List)</code>
 ) was called with non-null
  argument).
   */
  jboolean partial_;
  /*!
   @brief The greatest segment name.
   */
  jint maxSegmentName_;
  /*!
   @brief Whether the SegmentInfos.counter is greater than any of the segments' names.
   */
  jboolean validCounter_;
  /*!
   @brief Holds the userData of the last commit in the index
   */
  id<JavaUtilMap> userData_;
}

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexCheckIndex_Status)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status, segmentsFileName_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status, segmentsChecked_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status, segmentInfos_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status, dir_, OrgApacheLuceneStoreDirectory *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status, newSegments_, OrgApacheLuceneIndexSegmentInfos *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status, userData_, id<JavaUtilMap>)

FOUNDATION_EXPORT void OrgApacheLuceneIndexCheckIndex_Status_init(OrgApacheLuceneIndexCheckIndex_Status *self);

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex_Status *new_OrgApacheLuceneIndexCheckIndex_Status_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex_Status *create_OrgApacheLuceneIndexCheckIndex_Status_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexCheckIndex_Status)

#endif

#if !defined (OrgApacheLuceneIndexCheckIndex_Status_SegmentInfoStatus_) && (INCLUDE_ALL_OrgApacheLuceneIndexCheckIndex || defined(INCLUDE_OrgApacheLuceneIndexCheckIndex_Status_SegmentInfoStatus))
#define OrgApacheLuceneIndexCheckIndex_Status_SegmentInfoStatus_

@class OrgApacheLuceneCodecsCodec;
@class OrgApacheLuceneIndexCheckIndex_Status_DocValuesStatus;
@class OrgApacheLuceneIndexCheckIndex_Status_FieldInfoStatus;
@class OrgApacheLuceneIndexCheckIndex_Status_FieldNormStatus;
@class OrgApacheLuceneIndexCheckIndex_Status_LiveDocStatus;
@class OrgApacheLuceneIndexCheckIndex_Status_StoredFieldStatus;
@class OrgApacheLuceneIndexCheckIndex_Status_TermIndexStatus;
@class OrgApacheLuceneIndexCheckIndex_Status_TermVectorStatus;
@class OrgApacheLuceneUtilVersion;
@protocol JavaUtilMap;

/*!
 @brief Holds the status of each segment in the index.
 See <code>segmentInfos</code>.
 */
@interface OrgApacheLuceneIndexCheckIndex_Status_SegmentInfoStatus : NSObject {
 @public
  /*!
   @brief Name of the segment.
   */
  NSString *name_;
  /*!
   @brief Codec used to read this segment.
   */
  OrgApacheLuceneCodecsCodec *codec_;
  /*!
   @brief Document count (does not take deletions into account).
   */
  jint maxDoc_;
  /*!
   @brief True if segment is compound file format.
   */
  jboolean compound_;
  /*!
   @brief Number of files referenced by this segment.
   */
  jint numFiles_;
  /*!
   @brief Net size (MB) of the files referenced by this
   segment.
   */
  jdouble sizeMB_;
  /*!
   @brief True if this segment has pending deletions.
   */
  jboolean hasDeletions_;
  /*!
   @brief Current deletions generation.
   */
  jlong deletionsGen_;
  /*!
   @brief True if we were able to open a CodecReader on this
   segment.
   */
  jboolean openReaderPassed_;
  /*!
   @brief Map that includes certain
   debugging details that IndexWriter records into
   each segment it creates
   */
  id<JavaUtilMap> diagnostics_;
  /*!
   @brief Status for testing of livedocs
   */
  OrgApacheLuceneIndexCheckIndex_Status_LiveDocStatus *liveDocStatus_;
  /*!
   @brief Status for testing of field infos
   */
  OrgApacheLuceneIndexCheckIndex_Status_FieldInfoStatus *fieldInfoStatus_;
  /*!
   @brief Status for testing of field norms (null if field norms could not be tested).
   */
  OrgApacheLuceneIndexCheckIndex_Status_FieldNormStatus *fieldNormStatus_;
  /*!
   @brief Status for testing of indexed terms (null if indexed terms could not be tested).
   */
  OrgApacheLuceneIndexCheckIndex_Status_TermIndexStatus *termIndexStatus_;
  /*!
   @brief Status for testing of stored fields (null if stored fields could not be tested).
   */
  OrgApacheLuceneIndexCheckIndex_Status_StoredFieldStatus *storedFieldStatus_;
  /*!
   @brief Status for testing of term vectors (null if term vectors could not be tested).
   */
  OrgApacheLuceneIndexCheckIndex_Status_TermVectorStatus *termVectorStatus_;
  /*!
   @brief Status for testing of DocValues (null if DocValues could not be tested).
   */
  OrgApacheLuceneIndexCheckIndex_Status_DocValuesStatus *docValuesStatus_;
  /*!
   @brief Version the segment was written with
   */
  OrgApacheLuceneUtilVersion *version__;
}

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexCheckIndex_Status_SegmentInfoStatus)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status_SegmentInfoStatus, name_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status_SegmentInfoStatus, codec_, OrgApacheLuceneCodecsCodec *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status_SegmentInfoStatus, diagnostics_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status_SegmentInfoStatus, liveDocStatus_, OrgApacheLuceneIndexCheckIndex_Status_LiveDocStatus *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status_SegmentInfoStatus, fieldInfoStatus_, OrgApacheLuceneIndexCheckIndex_Status_FieldInfoStatus *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status_SegmentInfoStatus, fieldNormStatus_, OrgApacheLuceneIndexCheckIndex_Status_FieldNormStatus *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status_SegmentInfoStatus, termIndexStatus_, OrgApacheLuceneIndexCheckIndex_Status_TermIndexStatus *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status_SegmentInfoStatus, storedFieldStatus_, OrgApacheLuceneIndexCheckIndex_Status_StoredFieldStatus *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status_SegmentInfoStatus, termVectorStatus_, OrgApacheLuceneIndexCheckIndex_Status_TermVectorStatus *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status_SegmentInfoStatus, docValuesStatus_, OrgApacheLuceneIndexCheckIndex_Status_DocValuesStatus *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status_SegmentInfoStatus, version__, OrgApacheLuceneUtilVersion *)

FOUNDATION_EXPORT void OrgApacheLuceneIndexCheckIndex_Status_SegmentInfoStatus_init(OrgApacheLuceneIndexCheckIndex_Status_SegmentInfoStatus *self);

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex_Status_SegmentInfoStatus *new_OrgApacheLuceneIndexCheckIndex_Status_SegmentInfoStatus_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex_Status_SegmentInfoStatus *create_OrgApacheLuceneIndexCheckIndex_Status_SegmentInfoStatus_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexCheckIndex_Status_SegmentInfoStatus)

#endif

#if !defined (OrgApacheLuceneIndexCheckIndex_Status_LiveDocStatus_) && (INCLUDE_ALL_OrgApacheLuceneIndexCheckIndex || defined(INCLUDE_OrgApacheLuceneIndexCheckIndex_Status_LiveDocStatus))
#define OrgApacheLuceneIndexCheckIndex_Status_LiveDocStatus_

@class JavaLangThrowable;

/*!
 @brief Status from testing livedocs
 */
@interface OrgApacheLuceneIndexCheckIndex_Status_LiveDocStatus : NSObject {
 @public
  /*!
   @brief Number of deleted documents.
   */
  jint numDeleted_;
  /*!
   @brief Exception thrown during term index test (null on success)
   */
  JavaLangThrowable *error_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexCheckIndex_Status_LiveDocStatus)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status_LiveDocStatus, error_, JavaLangThrowable *)

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexCheckIndex_Status_LiveDocStatus)

#endif

#if !defined (OrgApacheLuceneIndexCheckIndex_Status_FieldInfoStatus_) && (INCLUDE_ALL_OrgApacheLuceneIndexCheckIndex || defined(INCLUDE_OrgApacheLuceneIndexCheckIndex_Status_FieldInfoStatus))
#define OrgApacheLuceneIndexCheckIndex_Status_FieldInfoStatus_

@class JavaLangThrowable;

/*!
 @brief Status from testing field infos.
 */
@interface OrgApacheLuceneIndexCheckIndex_Status_FieldInfoStatus : NSObject {
 @public
  /*!
   @brief Number of fields successfully tested
   */
  jlong totFields_;
  /*!
   @brief Exception thrown during term index test (null on success)
   */
  JavaLangThrowable *error_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexCheckIndex_Status_FieldInfoStatus)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status_FieldInfoStatus, error_, JavaLangThrowable *)

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexCheckIndex_Status_FieldInfoStatus)

#endif

#if !defined (OrgApacheLuceneIndexCheckIndex_Status_FieldNormStatus_) && (INCLUDE_ALL_OrgApacheLuceneIndexCheckIndex || defined(INCLUDE_OrgApacheLuceneIndexCheckIndex_Status_FieldNormStatus))
#define OrgApacheLuceneIndexCheckIndex_Status_FieldNormStatus_

@class JavaLangThrowable;

/*!
 @brief Status from testing field norms.
 */
@interface OrgApacheLuceneIndexCheckIndex_Status_FieldNormStatus : NSObject {
 @public
  /*!
   @brief Number of fields successfully tested
   */
  jlong totFields_;
  /*!
   @brief Exception thrown during term index test (null on success)
   */
  JavaLangThrowable *error_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexCheckIndex_Status_FieldNormStatus)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status_FieldNormStatus, error_, JavaLangThrowable *)

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexCheckIndex_Status_FieldNormStatus)

#endif

#if !defined (OrgApacheLuceneIndexCheckIndex_Status_TermIndexStatus_) && (INCLUDE_ALL_OrgApacheLuceneIndexCheckIndex || defined(INCLUDE_OrgApacheLuceneIndexCheckIndex_Status_TermIndexStatus))
#define OrgApacheLuceneIndexCheckIndex_Status_TermIndexStatus_

@class JavaLangThrowable;
@protocol JavaUtilMap;

/*!
 @brief Status from testing term index.
 */
@interface OrgApacheLuceneIndexCheckIndex_Status_TermIndexStatus : NSObject {
 @public
  /*!
   @brief Number of terms with at least one live doc.
   */
  jlong termCount_;
  /*!
   @brief Number of terms with zero live docs docs.
   */
  jlong delTermCount_;
  /*!
   @brief Total frequency across all terms.
   */
  jlong totFreq_;
  /*!
   @brief Total number of positions.
   */
  jlong totPos_;
  /*!
   @brief Exception thrown during term index test (null on success)
   */
  JavaLangThrowable *error_;
  /*!
   @brief Holds details of block allocations in the block
   tree terms dictionary (this is only set if the  
 <code>PostingsFormat</code> for this segment uses block
   tree.
   */
  id<JavaUtilMap> blockTreeStats_;
}

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexCheckIndex_Status_TermIndexStatus)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status_TermIndexStatus, error_, JavaLangThrowable *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status_TermIndexStatus, blockTreeStats_, id<JavaUtilMap>)

FOUNDATION_EXPORT void OrgApacheLuceneIndexCheckIndex_Status_TermIndexStatus_init(OrgApacheLuceneIndexCheckIndex_Status_TermIndexStatus *self);

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex_Status_TermIndexStatus *new_OrgApacheLuceneIndexCheckIndex_Status_TermIndexStatus_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex_Status_TermIndexStatus *create_OrgApacheLuceneIndexCheckIndex_Status_TermIndexStatus_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexCheckIndex_Status_TermIndexStatus)

#endif

#if !defined (OrgApacheLuceneIndexCheckIndex_Status_StoredFieldStatus_) && (INCLUDE_ALL_OrgApacheLuceneIndexCheckIndex || defined(INCLUDE_OrgApacheLuceneIndexCheckIndex_Status_StoredFieldStatus))
#define OrgApacheLuceneIndexCheckIndex_Status_StoredFieldStatus_

@class JavaLangThrowable;

/*!
 @brief Status from testing stored fields.
 */
@interface OrgApacheLuceneIndexCheckIndex_Status_StoredFieldStatus : NSObject {
 @public
  /*!
   @brief Number of documents tested.
   */
  jint docCount_;
  /*!
   @brief Total number of stored fields tested.
   */
  jlong totFields_;
  /*!
   @brief Exception thrown during stored fields test (null on success)
   */
  JavaLangThrowable *error_;
}

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexCheckIndex_Status_StoredFieldStatus)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status_StoredFieldStatus, error_, JavaLangThrowable *)

FOUNDATION_EXPORT void OrgApacheLuceneIndexCheckIndex_Status_StoredFieldStatus_init(OrgApacheLuceneIndexCheckIndex_Status_StoredFieldStatus *self);

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex_Status_StoredFieldStatus *new_OrgApacheLuceneIndexCheckIndex_Status_StoredFieldStatus_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex_Status_StoredFieldStatus *create_OrgApacheLuceneIndexCheckIndex_Status_StoredFieldStatus_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexCheckIndex_Status_StoredFieldStatus)

#endif

#if !defined (OrgApacheLuceneIndexCheckIndex_Status_TermVectorStatus_) && (INCLUDE_ALL_OrgApacheLuceneIndexCheckIndex || defined(INCLUDE_OrgApacheLuceneIndexCheckIndex_Status_TermVectorStatus))
#define OrgApacheLuceneIndexCheckIndex_Status_TermVectorStatus_

@class JavaLangThrowable;

/*!
 @brief Status from testing stored fields.
 */
@interface OrgApacheLuceneIndexCheckIndex_Status_TermVectorStatus : NSObject {
 @public
  /*!
   @brief Number of documents tested.
   */
  jint docCount_;
  /*!
   @brief Total number of term vectors tested.
   */
  jlong totVectors_;
  /*!
   @brief Exception thrown during term vector test (null on success)
   */
  JavaLangThrowable *error_;
}

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexCheckIndex_Status_TermVectorStatus)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status_TermVectorStatus, error_, JavaLangThrowable *)

FOUNDATION_EXPORT void OrgApacheLuceneIndexCheckIndex_Status_TermVectorStatus_init(OrgApacheLuceneIndexCheckIndex_Status_TermVectorStatus *self);

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex_Status_TermVectorStatus *new_OrgApacheLuceneIndexCheckIndex_Status_TermVectorStatus_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex_Status_TermVectorStatus *create_OrgApacheLuceneIndexCheckIndex_Status_TermVectorStatus_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexCheckIndex_Status_TermVectorStatus)

#endif

#if !defined (OrgApacheLuceneIndexCheckIndex_Status_DocValuesStatus_) && (INCLUDE_ALL_OrgApacheLuceneIndexCheckIndex || defined(INCLUDE_OrgApacheLuceneIndexCheckIndex_Status_DocValuesStatus))
#define OrgApacheLuceneIndexCheckIndex_Status_DocValuesStatus_

@class JavaLangThrowable;

/*!
 @brief Status from testing DocValues
 */
@interface OrgApacheLuceneIndexCheckIndex_Status_DocValuesStatus : NSObject {
 @public
  /*!
   @brief Total number of docValues tested.
   */
  jlong totalValueFields_;
  /*!
   @brief Total number of numeric fields
   */
  jlong totalNumericFields_;
  /*!
   @brief Total number of binary fields
   */
  jlong totalBinaryFields_;
  /*!
   @brief Total number of sorted fields
   */
  jlong totalSortedFields_;
  /*!
   @brief Total number of sortednumeric fields
   */
  jlong totalSortedNumericFields_;
  /*!
   @brief Total number of sortedset fields
   */
  jlong totalSortedSetFields_;
  /*!
   @brief Exception thrown during doc values test (null on success)
   */
  JavaLangThrowable *error_;
}

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexCheckIndex_Status_DocValuesStatus)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexCheckIndex_Status_DocValuesStatus, error_, JavaLangThrowable *)

FOUNDATION_EXPORT void OrgApacheLuceneIndexCheckIndex_Status_DocValuesStatus_init(OrgApacheLuceneIndexCheckIndex_Status_DocValuesStatus *self);

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex_Status_DocValuesStatus *new_OrgApacheLuceneIndexCheckIndex_Status_DocValuesStatus_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexCheckIndex_Status_DocValuesStatus *create_OrgApacheLuceneIndexCheckIndex_Status_DocValuesStatus_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexCheckIndex_Status_DocValuesStatus)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneIndexCheckIndex")
