//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/MergeScheduler.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneIndexMergeScheduler")
#ifdef RESTRICT_OrgApacheLuceneIndexMergeScheduler
#define INCLUDE_ALL_OrgApacheLuceneIndexMergeScheduler 0
#else
#define INCLUDE_ALL_OrgApacheLuceneIndexMergeScheduler 1
#endif
#undef RESTRICT_OrgApacheLuceneIndexMergeScheduler

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneIndexMergeScheduler_) && (INCLUDE_ALL_OrgApacheLuceneIndexMergeScheduler || defined(INCLUDE_OrgApacheLuceneIndexMergeScheduler))
#define OrgApacheLuceneIndexMergeScheduler_

#define RESTRICT_JavaIoCloseable 1
#define INCLUDE_JavaIoCloseable 1
#include "java/io/Closeable.h"

@class OrgApacheLuceneIndexIndexWriter;
@class OrgApacheLuceneIndexMergeTrigger;
@class OrgApacheLuceneUtilInfoStream;

/*!
 @brief <p>Expert: <code>IndexWriter</code> uses an instance
   implementing this interface to execute the merges
   selected by a <code>MergePolicy</code>.
 The default
   MergeScheduler is <code>ConcurrentMergeScheduler</code>.</p>
   <p>Implementers of sub-classes should make sure that <code>clone()</code>
   returns an independent instance able to work with any <code>IndexWriter</code>
   instance.</p>
 */
@interface OrgApacheLuceneIndexMergeScheduler : NSObject < JavaIoCloseable > {
 @public
  /*!
   @brief For messages about merge scheduling
   */
  OrgApacheLuceneUtilInfoStream *infoStream_;
}

#pragma mark Public

/*!
 @brief Close this MergeScheduler.
 */
- (void)close;

/*!
 @brief Run the merges provided by <code>IndexWriter.getNextMerge()</code>.
 @param writer the <code>IndexWriter</code>  to obtain the merges from.
 @param trigger the <code>MergeTrigger</code>  that caused this merge to happen
 @param newMergesFound <code> true </code>  iff any new merges were found by the caller otherwise  <code> false </code>
 */
- (void)mergeWithOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer
            withOrgApacheLuceneIndexMergeTrigger:(OrgApacheLuceneIndexMergeTrigger *)trigger
                                     withBoolean:(jboolean)newMergesFound;

#pragma mark Protected

/*!
 @brief Sole constructor.
 (For invocation by subclass 
   constructors, typically implicit.)
 */
- (instancetype __nonnull)init;

/*!
 @brief Outputs the given message - this method assumes <code>verbose()</code> was
  called and returned true.
 */
- (void)messageWithNSString:(NSString *)message;

/*!
 @brief Returns true if infoStream messages are enabled.This method is usually used in
  conjunction with <code>message(String)</code>:
   
 <pre class="prettyprint">
  if (verbose()) {
    message(&quot;your message&quot;);
  } 
 
@endcode
 */
- (jboolean)verbose;

#pragma mark Package-Private

/*!
 @brief IndexWriter calls this on init.
 */
- (void)setInfoStreamWithOrgApacheLuceneUtilInfoStream:(OrgApacheLuceneUtilInfoStream *)infoStream;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMergeScheduler)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMergeScheduler, infoStream_, OrgApacheLuceneUtilInfoStream *)

FOUNDATION_EXPORT void OrgApacheLuceneIndexMergeScheduler_init(OrgApacheLuceneIndexMergeScheduler *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexMergeScheduler)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneIndexMergeScheduler")
