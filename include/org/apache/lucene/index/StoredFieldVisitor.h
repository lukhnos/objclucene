//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/StoredFieldVisitor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneIndexStoredFieldVisitor")
#ifdef RESTRICT_OrgApacheLuceneIndexStoredFieldVisitor
#define INCLUDE_ALL_OrgApacheLuceneIndexStoredFieldVisitor 0
#else
#define INCLUDE_ALL_OrgApacheLuceneIndexStoredFieldVisitor 1
#endif
#undef RESTRICT_OrgApacheLuceneIndexStoredFieldVisitor

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneIndexStoredFieldVisitor_) && (INCLUDE_ALL_OrgApacheLuceneIndexStoredFieldVisitor || defined(INCLUDE_OrgApacheLuceneIndexStoredFieldVisitor))
#define OrgApacheLuceneIndexStoredFieldVisitor_

@class IOSByteArray;
@class OrgApacheLuceneIndexFieldInfo;
@class OrgApacheLuceneIndexStoredFieldVisitor_Status;

/*!
 @brief Expert: provides a low-level means of accessing the stored field
  values in an index.See <code>IndexReader.document(int,
 StoredFieldVisitor)</code>
 .
 <p><b>NOTE</b>: a <code>StoredFieldVisitor</code> implementation
  should not try to load or visit other stored documents in
  the same reader because the implementation of stored
  fields for most codecs is not reeentrant and you will see
  strange exceptions as a result. 
 <p>See <code>DocumentStoredFieldVisitor</code>, which is a 
 <code>StoredFieldVisitor</code> that builds the 
 <code>Document</code> containing all stored fields.  This is
  used by <code>IndexReader.document(int)</code>.
 */
@interface OrgApacheLuceneIndexStoredFieldVisitor : NSObject

#pragma mark Public

/*!
 @brief Process a binary field.
 @param value newly allocated byte array with the binary contents.
 */
- (void)binaryFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo
                                       withByteArray:(IOSByteArray *)value;

/*!
 @brief Process a double numeric field.
 */
- (void)doubleFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo
                                          withDouble:(jdouble)value;

/*!
 @brief Process a float numeric field.
 */
- (void)floatFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo
                                          withFloat:(jfloat)value;

/*!
 @brief Process a int numeric field.
 */
- (void)intFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo
                                          withInt:(jint)value;

/*!
 @brief Process a long numeric field.
 */
- (void)longFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo
                                          withLong:(jlong)value;

/*!
 @brief Hook before processing a field.
 Before a field is processed, this method is invoked so that
  subclasses can return a <code>Status</code> representing whether
  they need that particular field or not, or to stop processing
  entirely.
 */
- (OrgApacheLuceneIndexStoredFieldVisitor_Status *)needsFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo;

/*!
 @brief Process a string field; the provided byte[] value is a UTF-8 encoded string value.
 */
- (void)stringFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo
                                       withByteArray:(IOSByteArray *)value;

#pragma mark Protected

/*!
 @brief Sole constructor.
 (For invocation by subclass 
  constructors, typically implicit.)
 */
- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexStoredFieldVisitor)

FOUNDATION_EXPORT void OrgApacheLuceneIndexStoredFieldVisitor_init(OrgApacheLuceneIndexStoredFieldVisitor *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexStoredFieldVisitor)

#endif

#if !defined (OrgApacheLuceneIndexStoredFieldVisitor_Status_) && (INCLUDE_ALL_OrgApacheLuceneIndexStoredFieldVisitor || defined(INCLUDE_OrgApacheLuceneIndexStoredFieldVisitor_Status))
#define OrgApacheLuceneIndexStoredFieldVisitor_Status_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, OrgApacheLuceneIndexStoredFieldVisitor_Status_Enum) {
  OrgApacheLuceneIndexStoredFieldVisitor_Status_Enum_YES = 0,
  OrgApacheLuceneIndexStoredFieldVisitor_Status_Enum_NO = 1,
  OrgApacheLuceneIndexStoredFieldVisitor_Status_Enum_STOP = 2,
};

/*!
 @brief Enumeration of possible return values for <code>needsField</code>.
 */
@interface OrgApacheLuceneIndexStoredFieldVisitor_Status : JavaLangEnum

@property (readonly, class, nonnull) OrgApacheLuceneIndexStoredFieldVisitor_Status *YES_ NS_SWIFT_NAME(YES_);
@property (readonly, class, nonnull) OrgApacheLuceneIndexStoredFieldVisitor_Status *NO_ NS_SWIFT_NAME(NO_);
@property (readonly, class, nonnull) OrgApacheLuceneIndexStoredFieldVisitor_Status *STOP NS_SWIFT_NAME(STOP);
#pragma mark Public

+ (OrgApacheLuceneIndexStoredFieldVisitor_Status *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

#pragma mark Package-Private

- (OrgApacheLuceneIndexStoredFieldVisitor_Status_Enum)toNSEnum;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneIndexStoredFieldVisitor_Status)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT OrgApacheLuceneIndexStoredFieldVisitor_Status *OrgApacheLuceneIndexStoredFieldVisitor_Status_values_[];

/*!
 @brief YES: the field should be visited.
 */
inline OrgApacheLuceneIndexStoredFieldVisitor_Status *OrgApacheLuceneIndexStoredFieldVisitor_Status_get_YES(void);
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneIndexStoredFieldVisitor_Status, YES)

/*!
 @brief NO: don't visit this field, but continue processing fields for this document.
 */
inline OrgApacheLuceneIndexStoredFieldVisitor_Status *OrgApacheLuceneIndexStoredFieldVisitor_Status_get_NO(void);
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneIndexStoredFieldVisitor_Status, NO)

/*!
 @brief STOP: don't visit this field and stop processing any other fields for this document.
 */
inline OrgApacheLuceneIndexStoredFieldVisitor_Status *OrgApacheLuceneIndexStoredFieldVisitor_Status_get_STOP(void);
J2OBJC_ENUM_CONSTANT(OrgApacheLuceneIndexStoredFieldVisitor_Status, STOP)

FOUNDATION_EXPORT IOSObjectArray *OrgApacheLuceneIndexStoredFieldVisitor_Status_values(void);

FOUNDATION_EXPORT OrgApacheLuceneIndexStoredFieldVisitor_Status *OrgApacheLuceneIndexStoredFieldVisitor_Status_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT OrgApacheLuceneIndexStoredFieldVisitor_Status *OrgApacheLuceneIndexStoredFieldVisitor_Status_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexStoredFieldVisitor_Status)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneIndexStoredFieldVisitor")
