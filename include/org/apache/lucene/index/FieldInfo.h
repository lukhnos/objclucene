//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/FieldInfo.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneIndexFieldInfo")
#ifdef RESTRICT_OrgApacheLuceneIndexFieldInfo
#define INCLUDE_ALL_OrgApacheLuceneIndexFieldInfo 0
#else
#define INCLUDE_ALL_OrgApacheLuceneIndexFieldInfo 1
#endif
#undef RESTRICT_OrgApacheLuceneIndexFieldInfo

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneIndexFieldInfo_) && (INCLUDE_ALL_OrgApacheLuceneIndexFieldInfo || defined(INCLUDE_OrgApacheLuceneIndexFieldInfo))
#define OrgApacheLuceneIndexFieldInfo_

@class OrgApacheLuceneIndexDocValuesType;
@class OrgApacheLuceneIndexIndexOptions;
@protocol JavaUtilMap;

/*!
 @brief Access to the Field Info file that describes document fields and whether or
   not they are indexed.Each segment has a separate Field Info file.
 Objects
   of this class are thread-safe for multiple readers, but only one thread can
   be adding documents at a time, with no other reader or writer threads
   accessing this object.
 */
@interface OrgApacheLuceneIndexFieldInfo : NSObject {
 @public
  /*!
   @brief Field's name
   */
  NSString *name_;
  /*!
   @brief Internal field number
   */
  jint number_;
}

#pragma mark Public

/*!
 @brief Sole constructor.
 */
- (instancetype __nonnull)initWithNSString:(NSString *)name
                                   withInt:(jint)number
                               withBoolean:(jboolean)storeTermVector
                               withBoolean:(jboolean)omitNorms
                               withBoolean:(jboolean)storePayloads
      withOrgApacheLuceneIndexIndexOptions:(OrgApacheLuceneIndexIndexOptions *)indexOptions
     withOrgApacheLuceneIndexDocValuesType:(OrgApacheLuceneIndexDocValuesType *)docValues
                                  withLong:(jlong)dvGen
                           withJavaUtilMap:(id<JavaUtilMap>)attributes;

/*!
 @brief Returns internal codec attributes map.
 */
- (id<JavaUtilMap>)attributes;

/*!
 @brief Performs internal consistency checks.
 Always returns true (or throws IllegalStateException)
 */
- (jboolean)checkConsistency;

/*!
 @brief Get a codec attribute value, or null if it does not exist
 */
- (NSString *)getAttributeWithNSString:(NSString *)key;

/*!
 @brief Returns the docValues generation of this field, or -1 if no docValues
  updates exist for it.
 */
- (jlong)getDocValuesGen;

/*!
 @brief Returns <code>DocValuesType</code> of the docValues; this is 
 <code>DocValuesType.NONE</code> if the field has no docvalues.
 */
- (OrgApacheLuceneIndexDocValuesType *)getDocValuesType;

/*!
 @brief Returns IndexOptions for the field, or IndexOptions.NONE if the field is not indexed
 */
- (OrgApacheLuceneIndexIndexOptions *)getIndexOptions;

/*!
 @brief Returns true if this field actually has any norms.
 */
- (jboolean)hasNorms;

/*!
 @brief Returns true if any payloads exist for this field.
 */
- (jboolean)hasPayloads;

/*!
 @brief Returns true if any term vectors exist for this field.
 */
- (jboolean)hasVectors;

/*!
 @brief Returns true if norms are explicitly omitted for this field
 */
- (jboolean)omitsNorms;

/*!
 @brief Puts a codec attribute value.
 <p>
  This is a key-value mapping for the field that the codec can use
  to store additional metadata, and will be available to the codec
  when reading the segment via <code>getAttribute(String)</code>
  <p>
  If a value already exists for the field, it will be replaced with 
  the new value.
 */
- (NSString *)putAttributeWithNSString:(NSString *)key
                          withNSString:(NSString *)value;

/*!
 @brief Record the <code>IndexOptions</code> to use with this field.
 */
- (void)setIndexOptionsWithOrgApacheLuceneIndexIndexOptions:(OrgApacheLuceneIndexIndexOptions *)newIndexOptions;

/*!
 @brief Omit norms for this field.
 */
- (void)setOmitsNorms;

#pragma mark Package-Private

/*!
 @brief Sets the docValues generation of this field.
 */
- (void)setDocValuesGenWithLong:(jlong)dvGen;

- (void)setDocValuesTypeWithOrgApacheLuceneIndexDocValuesType:(OrgApacheLuceneIndexDocValuesType *)type;

- (void)setStorePayloads;

- (void)setStoreTermVectors;

- (void)updateWithBoolean:(jboolean)storeTermVector
              withBoolean:(jboolean)omitNorms
              withBoolean:(jboolean)storePayloads
withOrgApacheLuceneIndexIndexOptions:(OrgApacheLuceneIndexIndexOptions *)indexOptions;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexFieldInfo)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexFieldInfo, name_, NSString *)

FOUNDATION_EXPORT void OrgApacheLuceneIndexFieldInfo_initWithNSString_withInt_withBoolean_withBoolean_withBoolean_withOrgApacheLuceneIndexIndexOptions_withOrgApacheLuceneIndexDocValuesType_withLong_withJavaUtilMap_(OrgApacheLuceneIndexFieldInfo *self, NSString *name, jint number, jboolean storeTermVector, jboolean omitNorms, jboolean storePayloads, OrgApacheLuceneIndexIndexOptions *indexOptions, OrgApacheLuceneIndexDocValuesType *docValues, jlong dvGen, id<JavaUtilMap> attributes);

FOUNDATION_EXPORT OrgApacheLuceneIndexFieldInfo *new_OrgApacheLuceneIndexFieldInfo_initWithNSString_withInt_withBoolean_withBoolean_withBoolean_withOrgApacheLuceneIndexIndexOptions_withOrgApacheLuceneIndexDocValuesType_withLong_withJavaUtilMap_(NSString *name, jint number, jboolean storeTermVector, jboolean omitNorms, jboolean storePayloads, OrgApacheLuceneIndexIndexOptions *indexOptions, OrgApacheLuceneIndexDocValuesType *docValues, jlong dvGen, id<JavaUtilMap> attributes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexFieldInfo *create_OrgApacheLuceneIndexFieldInfo_initWithNSString_withInt_withBoolean_withBoolean_withBoolean_withOrgApacheLuceneIndexIndexOptions_withOrgApacheLuceneIndexDocValuesType_withLong_withJavaUtilMap_(NSString *name, jint number, jboolean storeTermVector, jboolean omitNorms, jboolean storePayloads, OrgApacheLuceneIndexIndexOptions *indexOptions, OrgApacheLuceneIndexDocValuesType *docValues, jlong dvGen, id<JavaUtilMap> attributes);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexFieldInfo)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneIndexFieldInfo")
