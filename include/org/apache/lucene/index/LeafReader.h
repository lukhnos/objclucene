//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/LeafReader.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneIndexLeafReader")
#ifdef RESTRICT_OrgApacheLuceneIndexLeafReader
#define INCLUDE_ALL_OrgApacheLuceneIndexLeafReader 0
#else
#define INCLUDE_ALL_OrgApacheLuceneIndexLeafReader 1
#endif
#undef RESTRICT_OrgApacheLuceneIndexLeafReader

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneIndexLeafReader_) && (INCLUDE_ALL_OrgApacheLuceneIndexLeafReader || defined(INCLUDE_OrgApacheLuceneIndexLeafReader))
#define OrgApacheLuceneIndexLeafReader_

#define RESTRICT_OrgApacheLuceneIndexIndexReader 1
#define INCLUDE_OrgApacheLuceneIndexIndexReader 1
#include "org/apache/lucene/index/IndexReader.h"

@class OrgApacheLuceneIndexBinaryDocValues;
@class OrgApacheLuceneIndexDocsAndPositionsEnum;
@class OrgApacheLuceneIndexDocsEnum;
@class OrgApacheLuceneIndexFieldInfos;
@class OrgApacheLuceneIndexFields;
@class OrgApacheLuceneIndexLeafReaderContext;
@class OrgApacheLuceneIndexNumericDocValues;
@class OrgApacheLuceneIndexPostingsEnum;
@class OrgApacheLuceneIndexSortedDocValues;
@class OrgApacheLuceneIndexSortedNumericDocValues;
@class OrgApacheLuceneIndexSortedSetDocValues;
@class OrgApacheLuceneIndexTerm;
@class OrgApacheLuceneIndexTerms;
@protocol OrgApacheLuceneIndexLeafReader_CoreClosedListener;
@protocol OrgApacheLuceneUtilBits;

/*!
 @brief <code>LeafReader</code> is an abstract class, providing an interface for accessing an
  index.Search of an index is done entirely through this abstract interface,
  so that any subclass which implements it is searchable.
 IndexReaders implemented
  by this subclass do not consist of several sub-readers,
  they are atomic. They support retrieval of stored fields, doc values, terms,
  and postings. 
 <p>For efficiency, in this API documents are often referred to via 
 <i>document numbers</i>, non-negative integers which each name a unique
  document in the index.  These document numbers are ephemeral -- they may change
  as documents are added to and deleted from an index.  Clients should thus not
  rely on a given document having the same number between sessions. 
 <p>
  <a name="thread-safety"></a><p><b>NOTE</b>: <code>IndexReader</code>
  instances are completely thread
  safe, meaning multiple threads can call any of its methods,
  concurrently.  If your application requires external
  synchronization, you should <b>not</b> synchronize on the 
 <code>IndexReader</code> instance; use your own
  (non-Lucene) objects instead.
 */
@interface OrgApacheLuceneIndexLeafReader : OrgApacheLuceneIndexIndexReader

#pragma mark Public

/*!
 @brief Expert: adds a CoreClosedListener to this reader's shared core
 */
- (void)addCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:(id<OrgApacheLuceneIndexLeafReader_CoreClosedListener>)listener;

/*!
 @brief Checks consistency of this reader.
 <p>
  Note that this may be costly in terms of I/O, e.g.
  may involve computing a checksum value against large data files.
 */
- (void)checkIntegrity;

- (jint)docFreqWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term;

/*!
 @brief Returns <code>Fields</code> for this reader.
 This method will not return null.
 */
- (OrgApacheLuceneIndexFields *)fields;

/*!
 @brief Returns <code>BinaryDocValues</code> for this field, or
   null if no <code>BinaryDocValues</code> were indexed for
   this field.The returned instance should only be
   used by a single thread.
 */
- (OrgApacheLuceneIndexBinaryDocValues *)getBinaryDocValuesWithNSString:(NSString *)field;

- (OrgApacheLuceneIndexLeafReaderContext *)getContext;

- (jint)getDocCountWithNSString:(NSString *)field;

/*!
 @brief Returns a <code>Bits</code> at the size of <code>reader.maxDoc()</code>,
   with turned on bits for each docid that does have a value for this field,
   or null if no DocValues were indexed for this field.The
   returned instance should only be used by a single thread
 */
- (id<OrgApacheLuceneUtilBits>)getDocsWithFieldWithNSString:(NSString *)field;

/*!
 @brief Get the <code>FieldInfos</code> describing all fields in
  this reader.
 */
- (OrgApacheLuceneIndexFieldInfos *)getFieldInfos;

/*!
 @brief Returns the <code>Bits</code> representing live (not
   deleted) docs.A set bit indicates the doc ID has not
   been deleted.
 If this method returns null it means
   there are no deleted documents (all documents are
   live).
   The returned instance has been safely published for
   use by multiple threads without additional
   synchronization.
 */
- (id<OrgApacheLuceneUtilBits>)getLiveDocs;

/*!
 @brief Returns <code>NumericDocValues</code> representing norms
   for this field, or null if no <code>NumericDocValues</code>
   were indexed.The returned instance should only be
   used by a single thread.
 */
- (OrgApacheLuceneIndexNumericDocValues *)getNormValuesWithNSString:(NSString *)field;

/*!
 @brief Returns <code>NumericDocValues</code> for this field, or
   null if no <code>NumericDocValues</code> were indexed for
   this field.The returned instance should only be
   used by a single thread.
 */
- (OrgApacheLuceneIndexNumericDocValues *)getNumericDocValuesWithNSString:(NSString *)field;

/*!
 @brief Returns <code>SortedDocValues</code> for this field, or
   null if no <code>SortedDocValues</code> were indexed for
   this field.The returned instance should only be
   used by a single thread.
 */
- (OrgApacheLuceneIndexSortedDocValues *)getSortedDocValuesWithNSString:(NSString *)field;

/*!
 @brief Returns <code>SortedNumericDocValues</code> for this field, or
   null if no <code>SortedNumericDocValues</code> were indexed for
   this field.The returned instance should only be
   used by a single thread.
 */
- (OrgApacheLuceneIndexSortedNumericDocValues *)getSortedNumericDocValuesWithNSString:(NSString *)field;

/*!
 @brief Returns <code>SortedSetDocValues</code> for this field, or
   null if no <code>SortedSetDocValues</code> were indexed for
   this field.The returned instance should only be
   used by a single thread.
 */
- (OrgApacheLuceneIndexSortedSetDocValues *)getSortedSetDocValuesWithNSString:(NSString *)field;

- (jlong)getSumDocFreqWithNSString:(NSString *)field;

- (jlong)getSumTotalTermFreqWithNSString:(NSString *)field;

/*!
 @brief Returns <code>PostingsEnum</code> for the specified term
   with <code>PostingsEnum.FREQS</code>.
 <p>
   Use this method if you only require documents and frequencies,
   and do not need any proximity data.
   This method is equivalent to   
 <code>postings(term, PostingsEnum.FREQS)</code>
   <p><b>NOTE:</b> The returned <code>PostingsEnum</code> may contain deleted docs.
 - seealso: #postings(Term, int)
 */
- (OrgApacheLuceneIndexPostingsEnum *)postingsWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term;

/*!
 @brief Returns <code>PostingsEnum</code> for the specified term.
 This will return null if either the field or
   term does not exist.  
 <p><b>NOTE:</b> The returned <code>PostingsEnum</code> may contain deleted docs.
 - seealso: TermsEnum#postings(PostingsEnum)
 */
- (OrgApacheLuceneIndexPostingsEnum *)postingsWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term
                                                                   withInt:(jint)flags;

/*!
 @brief Expert: removes a CoreClosedListener from this reader's shared core
 */
- (void)removeCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:(id<OrgApacheLuceneIndexLeafReader_CoreClosedListener>)listener;

/*!
 @brief Returns <code>DocsEnum</code> for the specified term.
 This will return null if either the field or
   term does not exist.
 */
- (OrgApacheLuceneIndexDocsEnum *)termDocsEnumWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term;

/*!
 @brief Returns <code>DocsAndPositionsEnum</code> for the specified
   term.This will return null if the
   field or term does not exist or positions weren't indexed.
 */
- (OrgApacheLuceneIndexDocsAndPositionsEnum *)termPositionsEnumWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term;

/*!
 @brief This may return null if the field does not exist.
 */
- (OrgApacheLuceneIndexTerms *)termsWithNSString:(NSString *)field;

/*!
 @brief Returns the number of documents containing the term 
 <code>t</code>.This method returns 0 if the term or
  field does not exists.
 This method does not take into
  account deleted documents that have not yet been merged
  away.
 */
- (jlong)totalTermFreqWithOrgApacheLuceneIndexTerm:(OrgApacheLuceneIndexTerm *)term;

#pragma mark Protected

/*!
 @brief Sole constructor.
 (For invocation by subclass
   constructors, typically implicit.)
 */
- (instancetype __nonnull)init;

/*!
 @brief Add a <code>CoreClosedListener</code> as a <code>ReaderClosedListener</code>.This
  method is typically useful for <code>LeafReader</code> implementations that
  don't have the concept of a core that is shared across several 
 <code>LeafReader</code> instances in which case the <code>CoreClosedListener</code>
  is called when closing the reader.
 */
+ (void)addCoreClosedListenerAsReaderClosedListenerWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                 withOrgApacheLuceneIndexLeafReader_CoreClosedListener:(id<OrgApacheLuceneIndexLeafReader_CoreClosedListener>)listener;

/*!
 @brief Remove a <code>CoreClosedListener</code> which has been added with 
 <code>addCoreClosedListenerAsReaderClosedListener(IndexReader, CoreClosedListener)</code>.
 */
+ (void)removeCoreClosedListenerAsReaderClosedListenerWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader
                                    withOrgApacheLuceneIndexLeafReader_CoreClosedListener:(id<OrgApacheLuceneIndexLeafReader_CoreClosedListener>)listener;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexLeafReader)

FOUNDATION_EXPORT void OrgApacheLuceneIndexLeafReader_init(OrgApacheLuceneIndexLeafReader *self);

FOUNDATION_EXPORT void OrgApacheLuceneIndexLeafReader_addCoreClosedListenerAsReaderClosedListenerWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexLeafReader_CoreClosedListener_(OrgApacheLuceneIndexIndexReader *reader, id<OrgApacheLuceneIndexLeafReader_CoreClosedListener> listener);

FOUNDATION_EXPORT void OrgApacheLuceneIndexLeafReader_removeCoreClosedListenerAsReaderClosedListenerWithOrgApacheLuceneIndexIndexReader_withOrgApacheLuceneIndexLeafReader_CoreClosedListener_(OrgApacheLuceneIndexIndexReader *reader, id<OrgApacheLuceneIndexLeafReader_CoreClosedListener> listener);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexLeafReader)

#endif

#if !defined (OrgApacheLuceneIndexLeafReader_CoreClosedListener_) && (INCLUDE_ALL_OrgApacheLuceneIndexLeafReader || defined(INCLUDE_OrgApacheLuceneIndexLeafReader_CoreClosedListener))
#define OrgApacheLuceneIndexLeafReader_CoreClosedListener_

/*!
 @brief Called when the shared core for this <code>LeafReader</code>
  is closed.
 <p>
  If this <code>LeafReader</code> impl has the ability to share
  resources across instances that might only vary through
  deleted documents and doc values updates, then this listener
  will only be called when the shared core is closed.
  Otherwise, this listener will be called when this reader is
  closed.</p>
  <p>
  This is typically useful to manage per-segment caches: when
  the listener is called, it is safe to evict this reader from
  any caches keyed on <code>getCoreCacheKey</code>.</p>
 */
@protocol OrgApacheLuceneIndexLeafReader_CoreClosedListener < JavaObject >

/*!
 @brief Invoked when the shared core of the original <code>SegmentReader</code>
  has closed.The provided <code>ownerCoreCacheKey</code>
  will be the same key as the one
   returned by <code>LeafReader.getCoreCacheKey()</code>.
 */
- (void)onCloseWithId:(id)ownerCoreCacheKey;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexLeafReader_CoreClosedListener)

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexLeafReader_CoreClosedListener)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneIndexLeafReader")
