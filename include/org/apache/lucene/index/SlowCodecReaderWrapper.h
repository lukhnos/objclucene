//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneIndexSlowCodecReaderWrapper")
#ifdef RESTRICT_OrgApacheLuceneIndexSlowCodecReaderWrapper
#define INCLUDE_ALL_OrgApacheLuceneIndexSlowCodecReaderWrapper 0
#else
#define INCLUDE_ALL_OrgApacheLuceneIndexSlowCodecReaderWrapper 1
#endif
#undef RESTRICT_OrgApacheLuceneIndexSlowCodecReaderWrapper

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneIndexSlowCodecReaderWrapper_) && (INCLUDE_ALL_OrgApacheLuceneIndexSlowCodecReaderWrapper || defined(INCLUDE_OrgApacheLuceneIndexSlowCodecReaderWrapper))
#define OrgApacheLuceneIndexSlowCodecReaderWrapper_

@class OrgApacheLuceneIndexCodecReader;
@class OrgApacheLuceneIndexLeafReader;

/*!
 @brief Wraps arbitrary readers for merging.Note that this can cause slow
  and memory-intensive merges.
 Consider using <code>FilterCodecReader</code>
  instead.
 */
@interface OrgApacheLuceneIndexSlowCodecReaderWrapper : NSObject

#pragma mark Public

/*!
 @brief Returns a <code>CodecReader</code> view of reader.
 <p>
  If <code>reader</code> is already a <code>CodecReader</code>, it is returned
  directly. Otherwise, a (slow) view is returned.
 */
+ (OrgApacheLuceneIndexCodecReader *)wrapWithOrgApacheLuceneIndexLeafReader:(OrgApacheLuceneIndexLeafReader *)reader;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexSlowCodecReaderWrapper)

FOUNDATION_EXPORT OrgApacheLuceneIndexCodecReader *OrgApacheLuceneIndexSlowCodecReaderWrapper_wrapWithOrgApacheLuceneIndexLeafReader_(OrgApacheLuceneIndexLeafReader *reader);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexSlowCodecReaderWrapper)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneIndexSlowCodecReaderWrapper")
