//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/CorruptIndexException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneIndexCorruptIndexException")
#ifdef RESTRICT_OrgApacheLuceneIndexCorruptIndexException
#define INCLUDE_ALL_OrgApacheLuceneIndexCorruptIndexException 0
#else
#define INCLUDE_ALL_OrgApacheLuceneIndexCorruptIndexException 1
#endif
#undef RESTRICT_OrgApacheLuceneIndexCorruptIndexException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneIndexCorruptIndexException_) && (INCLUDE_ALL_OrgApacheLuceneIndexCorruptIndexException || defined(INCLUDE_OrgApacheLuceneIndexCorruptIndexException))
#define OrgApacheLuceneIndexCorruptIndexException_

#define RESTRICT_JavaIoIOException 1
#define INCLUDE_JavaIoIOException 1
#include "java/io/IOException.h"

@class JavaLangThrowable;
@class OrgApacheLuceneStoreDataInput;
@class OrgApacheLuceneStoreDataOutput;

/*!
 @brief This exception is thrown when Lucene detects
  an inconsistency in the index.
 */
@interface OrgApacheLuceneIndexCorruptIndexException : JavaIoIOException

#pragma mark Public

/*!
 @brief Create exception with a message only
 */
- (instancetype __nonnull)initWithNSString:(NSString *)message
         withOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)input;

/*!
 @brief Create exception with message and root cause.
 */
- (instancetype __nonnull)initWithNSString:(NSString *)message
         withOrgApacheLuceneStoreDataInput:(OrgApacheLuceneStoreDataInput *)input
                     withJavaLangThrowable:(JavaLangThrowable *)cause;

/*!
 @brief Create exception with a message only
 */
- (instancetype __nonnull)initWithNSString:(NSString *)message
        withOrgApacheLuceneStoreDataOutput:(OrgApacheLuceneStoreDataOutput *)output;

/*!
 @brief Create exception with message and root cause.
 */
- (instancetype __nonnull)initWithNSString:(NSString *)message
        withOrgApacheLuceneStoreDataOutput:(OrgApacheLuceneStoreDataOutput *)output
                     withJavaLangThrowable:(JavaLangThrowable *)cause;

/*!
 @brief Create exception with a message only
 */
- (instancetype __nonnull)initWithNSString:(NSString *)message
                              withNSString:(NSString *)resourceDescription;

/*!
 @brief Create exception with message and root cause.
 */
- (instancetype __nonnull)initWithNSString:(NSString *)message
                              withNSString:(NSString *)resourceDescription
                     withJavaLangThrowable:(JavaLangThrowable *)cause;

/*!
 @brief Returns the original exception message without the corrupted file description.
 */
- (NSString *)getOriginalMessage;

/*!
 @brief Returns a description of the file that was corrupted
 */
- (NSString *)getResourceDescription;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexCorruptIndexException)

FOUNDATION_EXPORT void OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_(OrgApacheLuceneIndexCorruptIndexException *self, NSString *message, OrgApacheLuceneStoreDataInput *input);

FOUNDATION_EXPORT OrgApacheLuceneIndexCorruptIndexException *new_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_(NSString *message, OrgApacheLuceneStoreDataInput *input) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexCorruptIndexException *create_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_(NSString *message, OrgApacheLuceneStoreDataInput *input);

FOUNDATION_EXPORT void OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataOutput_(OrgApacheLuceneIndexCorruptIndexException *self, NSString *message, OrgApacheLuceneStoreDataOutput *output);

FOUNDATION_EXPORT OrgApacheLuceneIndexCorruptIndexException *new_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataOutput_(NSString *message, OrgApacheLuceneStoreDataOutput *output) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexCorruptIndexException *create_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataOutput_(NSString *message, OrgApacheLuceneStoreDataOutput *output);

FOUNDATION_EXPORT void OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_withJavaLangThrowable_(OrgApacheLuceneIndexCorruptIndexException *self, NSString *message, OrgApacheLuceneStoreDataInput *input, JavaLangThrowable *cause);

FOUNDATION_EXPORT OrgApacheLuceneIndexCorruptIndexException *new_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_withJavaLangThrowable_(NSString *message, OrgApacheLuceneStoreDataInput *input, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexCorruptIndexException *create_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataInput_withJavaLangThrowable_(NSString *message, OrgApacheLuceneStoreDataInput *input, JavaLangThrowable *cause);

FOUNDATION_EXPORT void OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataOutput_withJavaLangThrowable_(OrgApacheLuceneIndexCorruptIndexException *self, NSString *message, OrgApacheLuceneStoreDataOutput *output, JavaLangThrowable *cause);

FOUNDATION_EXPORT OrgApacheLuceneIndexCorruptIndexException *new_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataOutput_withJavaLangThrowable_(NSString *message, OrgApacheLuceneStoreDataOutput *output, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexCorruptIndexException *create_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withOrgApacheLuceneStoreDataOutput_withJavaLangThrowable_(NSString *message, OrgApacheLuceneStoreDataOutput *output, JavaLangThrowable *cause);

FOUNDATION_EXPORT void OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withNSString_(OrgApacheLuceneIndexCorruptIndexException *self, NSString *message, NSString *resourceDescription);

FOUNDATION_EXPORT OrgApacheLuceneIndexCorruptIndexException *new_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withNSString_(NSString *message, NSString *resourceDescription) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexCorruptIndexException *create_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withNSString_(NSString *message, NSString *resourceDescription);

FOUNDATION_EXPORT void OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withNSString_withJavaLangThrowable_(OrgApacheLuceneIndexCorruptIndexException *self, NSString *message, NSString *resourceDescription, JavaLangThrowable *cause);

FOUNDATION_EXPORT OrgApacheLuceneIndexCorruptIndexException *new_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withNSString_withJavaLangThrowable_(NSString *message, NSString *resourceDescription, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexCorruptIndexException *create_OrgApacheLuceneIndexCorruptIndexException_initWithNSString_withNSString_withJavaLangThrowable_(NSString *message, NSString *resourceDescription, JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexCorruptIndexException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneIndexCorruptIndexException")
