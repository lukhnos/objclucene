//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/SlowCompositeReaderWrapper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneIndexSlowCompositeReaderWrapper")
#ifdef RESTRICT_OrgApacheLuceneIndexSlowCompositeReaderWrapper
#define INCLUDE_ALL_OrgApacheLuceneIndexSlowCompositeReaderWrapper 0
#else
#define INCLUDE_ALL_OrgApacheLuceneIndexSlowCompositeReaderWrapper 1
#endif
#undef RESTRICT_OrgApacheLuceneIndexSlowCompositeReaderWrapper

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneIndexSlowCompositeReaderWrapper_) && (INCLUDE_ALL_OrgApacheLuceneIndexSlowCompositeReaderWrapper || defined(INCLUDE_OrgApacheLuceneIndexSlowCompositeReaderWrapper))
#define OrgApacheLuceneIndexSlowCompositeReaderWrapper_

#define RESTRICT_OrgApacheLuceneIndexLeafReader 1
#define INCLUDE_OrgApacheLuceneIndexLeafReader 1
#include "org/apache/lucene/index/LeafReader.h"

@class OrgApacheLuceneIndexBinaryDocValues;
@class OrgApacheLuceneIndexCompositeReader;
@class OrgApacheLuceneIndexFieldInfos;
@class OrgApacheLuceneIndexFields;
@class OrgApacheLuceneIndexIndexReader;
@class OrgApacheLuceneIndexNumericDocValues;
@class OrgApacheLuceneIndexSortedDocValues;
@class OrgApacheLuceneIndexSortedNumericDocValues;
@class OrgApacheLuceneIndexSortedSetDocValues;
@class OrgApacheLuceneIndexStoredFieldVisitor;
@protocol OrgApacheLuceneIndexLeafReader_CoreClosedListener;
@protocol OrgApacheLuceneUtilBits;

/*!
 @brief This class forces a composite reader (eg a <code>MultiReader</code>
  or <code>DirectoryReader</code>) to emulate a 
 <code>LeafReader</code>.This requires implementing the postings
  APIs on-the-fly, using the static methods in <code>MultiFields</code>
 , <code>MultiDocValues</code>, by stepping through
  the sub-readers to merge fields/terms, appending docs, etc.
 <p><b>NOTE</b>: this class almost always results in a
  performance hit.  If this is important to your use case,
  you'll get better performance by gathering the sub readers using 
 <code>IndexReader.getContext()</code> to get the
  leaves and then operate per-LeafReader,
  instead of using this class.
 */
@interface OrgApacheLuceneIndexSlowCompositeReaderWrapper : OrgApacheLuceneIndexLeafReader

#pragma mark Public

- (void)addCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:(id<OrgApacheLuceneIndexLeafReader_CoreClosedListener>)listener;

- (void)checkIntegrity;

- (void)documentWithInt:(jint)docID
withOrgApacheLuceneIndexStoredFieldVisitor:(OrgApacheLuceneIndexStoredFieldVisitor *)visitor;

- (OrgApacheLuceneIndexFields *)fields;

- (OrgApacheLuceneIndexBinaryDocValues *)getBinaryDocValuesWithNSString:(NSString *)field;

- (id)getCombinedCoreAndDeletesKey;

- (id)getCoreCacheKey;

- (id<OrgApacheLuceneUtilBits>)getDocsWithFieldWithNSString:(NSString *)field;

- (OrgApacheLuceneIndexFieldInfos *)getFieldInfos;

- (id<OrgApacheLuceneUtilBits>)getLiveDocs;

- (OrgApacheLuceneIndexNumericDocValues *)getNormValuesWithNSString:(NSString *)field;

- (OrgApacheLuceneIndexNumericDocValues *)getNumericDocValuesWithNSString:(NSString *)field;

- (OrgApacheLuceneIndexSortedDocValues *)getSortedDocValuesWithNSString:(NSString *)field;

- (OrgApacheLuceneIndexSortedNumericDocValues *)getSortedNumericDocValuesWithNSString:(NSString *)field;

- (OrgApacheLuceneIndexSortedSetDocValues *)getSortedSetDocValuesWithNSString:(NSString *)field;

- (OrgApacheLuceneIndexFields *)getTermVectorsWithInt:(jint)docID;

- (jint)maxDoc;

- (jint)numDocs;

- (void)removeCoreClosedListenerWithOrgApacheLuceneIndexLeafReader_CoreClosedListener:(id<OrgApacheLuceneIndexLeafReader_CoreClosedListener>)listener;

- (NSString *)description;

/*!
 @brief This method is sugar for getting an <code>LeafReader</code> from
  an <code>IndexReader</code> of any kind.If the reader is already atomic,
  it is returned unchanged, otherwise wrapped by this class.
 */
+ (OrgApacheLuceneIndexLeafReader *)wrapWithOrgApacheLuceneIndexIndexReader:(OrgApacheLuceneIndexIndexReader *)reader;

#pragma mark Protected

- (void)doClose;

#pragma mark Package-Private

- (instancetype __nonnull)initWithOrgApacheLuceneIndexCompositeReader:(OrgApacheLuceneIndexCompositeReader *)reader
                                                          withBoolean:(jboolean)merging;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexSlowCompositeReaderWrapper)

FOUNDATION_EXPORT OrgApacheLuceneIndexLeafReader *OrgApacheLuceneIndexSlowCompositeReaderWrapper_wrapWithOrgApacheLuceneIndexIndexReader_(OrgApacheLuceneIndexIndexReader *reader);

FOUNDATION_EXPORT void OrgApacheLuceneIndexSlowCompositeReaderWrapper_initWithOrgApacheLuceneIndexCompositeReader_withBoolean_(OrgApacheLuceneIndexSlowCompositeReaderWrapper *self, OrgApacheLuceneIndexCompositeReader *reader, jboolean merging);

FOUNDATION_EXPORT OrgApacheLuceneIndexSlowCompositeReaderWrapper *new_OrgApacheLuceneIndexSlowCompositeReaderWrapper_initWithOrgApacheLuceneIndexCompositeReader_withBoolean_(OrgApacheLuceneIndexCompositeReader *reader, jboolean merging) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexSlowCompositeReaderWrapper *create_OrgApacheLuceneIndexSlowCompositeReaderWrapper_initWithOrgApacheLuceneIndexCompositeReader_withBoolean_(OrgApacheLuceneIndexCompositeReader *reader, jboolean merging);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexSlowCompositeReaderWrapper)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneIndexSlowCompositeReaderWrapper")
