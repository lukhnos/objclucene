//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/MergeRateLimiter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneIndexMergeRateLimiter")
#ifdef RESTRICT_OrgApacheLuceneIndexMergeRateLimiter
#define INCLUDE_ALL_OrgApacheLuceneIndexMergeRateLimiter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneIndexMergeRateLimiter 1
#endif
#undef RESTRICT_OrgApacheLuceneIndexMergeRateLimiter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneIndexMergeRateLimiter_) && (INCLUDE_ALL_OrgApacheLuceneIndexMergeRateLimiter || defined(INCLUDE_OrgApacheLuceneIndexMergeRateLimiter))
#define OrgApacheLuceneIndexMergeRateLimiter_

#define RESTRICT_OrgApacheLuceneStoreRateLimiter 1
#define INCLUDE_OrgApacheLuceneStoreRateLimiter 1
#include "org/apache/lucene/store/RateLimiter.h"

@class OrgApacheLuceneIndexMergePolicy_OneMerge;

/*!
 @brief This is the <code>RateLimiter</code> that <code>IndexWriter</code> assigns to each running merge, to 
   give <code>MergeScheduler</code>s ionice like control.
 This is similar to <code>SimpleRateLimiter</code>, except it's merge-private,
   it will wake up if its rate changes while it's paused, it tracks how
   much time it spent stopped and paused, and it supports aborting.
 */
@interface OrgApacheLuceneIndexMergeRateLimiter : OrgApacheLuceneStoreRateLimiter {
 @public
  volatile_jlong totalBytesWritten_;
  jdouble mbPerSec_;
  jlong totalPausedNS_;
  jlong totalStoppedNS_;
  OrgApacheLuceneIndexMergePolicy_OneMerge *merge_;
}

#pragma mark Public

/*!
 @brief Sole constructor.
 */
- (instancetype __nonnull)initWithOrgApacheLuceneIndexMergePolicy_OneMerge:(OrgApacheLuceneIndexMergePolicy_OneMerge *)merge;

/*!
 @brief Throws <code>MergePolicy.MergeAbortedException</code> if this merge was aborted.
 */
- (void)checkAbort;

/*!
 @brief Returns true if this merge was aborted.
 */
- (jboolean)getAbort;

- (jdouble)getMBPerSec;

- (jlong)getMinPauseCheckBytes;

/*!
 @brief Returns total bytes written by this merge.
 */
- (jlong)getTotalBytesWritten;

/*!
 @brief Total NS merge was paused to rate limit IO.
 */
- (jlong)getTotalPausedNS;

/*!
 @brief Total NS merge was stopped.
 */
- (jlong)getTotalStoppedNS;

- (jlong)pauseWithLong:(jlong)bytes;

/*!
 @brief Mark this merge aborted.
 */
- (void)setAbort;

- (void)setMBPerSecWithDouble:(jdouble)mbPerSec;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexMergeRateLimiter)

J2OBJC_FIELD_SETTER(OrgApacheLuceneIndexMergeRateLimiter, merge_, OrgApacheLuceneIndexMergePolicy_OneMerge *)

FOUNDATION_EXPORT void OrgApacheLuceneIndexMergeRateLimiter_initWithOrgApacheLuceneIndexMergePolicy_OneMerge_(OrgApacheLuceneIndexMergeRateLimiter *self, OrgApacheLuceneIndexMergePolicy_OneMerge *merge);

FOUNDATION_EXPORT OrgApacheLuceneIndexMergeRateLimiter *new_OrgApacheLuceneIndexMergeRateLimiter_initWithOrgApacheLuceneIndexMergePolicy_OneMerge_(OrgApacheLuceneIndexMergePolicy_OneMerge *merge) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexMergeRateLimiter *create_OrgApacheLuceneIndexMergeRateLimiter_initWithOrgApacheLuceneIndexMergePolicy_OneMerge_(OrgApacheLuceneIndexMergePolicy_OneMerge *merge);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexMergeRateLimiter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneIndexMergeRateLimiter")
