//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/index/SerialMergeScheduler.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneIndexSerialMergeScheduler")
#ifdef RESTRICT_OrgApacheLuceneIndexSerialMergeScheduler
#define INCLUDE_ALL_OrgApacheLuceneIndexSerialMergeScheduler 0
#else
#define INCLUDE_ALL_OrgApacheLuceneIndexSerialMergeScheduler 1
#endif
#undef RESTRICT_OrgApacheLuceneIndexSerialMergeScheduler

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneIndexSerialMergeScheduler_) && (INCLUDE_ALL_OrgApacheLuceneIndexSerialMergeScheduler || defined(INCLUDE_OrgApacheLuceneIndexSerialMergeScheduler))
#define OrgApacheLuceneIndexSerialMergeScheduler_

#define RESTRICT_OrgApacheLuceneIndexMergeScheduler 1
#define INCLUDE_OrgApacheLuceneIndexMergeScheduler 1
#include "org/apache/lucene/index/MergeScheduler.h"

@class OrgApacheLuceneIndexIndexWriter;
@class OrgApacheLuceneIndexMergeTrigger;

/*!
 @brief A <code>MergeScheduler</code> that simply does each merge
   sequentially, using the current thread.
 */
@interface OrgApacheLuceneIndexSerialMergeScheduler : OrgApacheLuceneIndexMergeScheduler

#pragma mark Public

/*!
 @brief Sole constructor.
 */
- (instancetype __nonnull)init;

- (void)close;

/*!
 @brief Just do the merges in sequence.We do this
  "synchronized" so that even if the application is using
  multiple threads, only one merge may run at a time.
 */
- (void)mergeWithOrgApacheLuceneIndexIndexWriter:(OrgApacheLuceneIndexIndexWriter *)writer
            withOrgApacheLuceneIndexMergeTrigger:(OrgApacheLuceneIndexMergeTrigger *)trigger
                                     withBoolean:(jboolean)newMergesFound;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneIndexSerialMergeScheduler)

FOUNDATION_EXPORT void OrgApacheLuceneIndexSerialMergeScheduler_init(OrgApacheLuceneIndexSerialMergeScheduler *self);

FOUNDATION_EXPORT OrgApacheLuceneIndexSerialMergeScheduler *new_OrgApacheLuceneIndexSerialMergeScheduler_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneIndexSerialMergeScheduler *create_OrgApacheLuceneIndexSerialMergeScheduler_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneIndexSerialMergeScheduler)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneIndexSerialMergeScheduler")
