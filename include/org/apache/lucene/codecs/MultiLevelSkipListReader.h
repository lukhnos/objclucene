//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/codecs/MultiLevelSkipListReader.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneCodecsMultiLevelSkipListReader")
#ifdef RESTRICT_OrgApacheLuceneCodecsMultiLevelSkipListReader
#define INCLUDE_ALL_OrgApacheLuceneCodecsMultiLevelSkipListReader 0
#else
#define INCLUDE_ALL_OrgApacheLuceneCodecsMultiLevelSkipListReader 1
#endif
#undef RESTRICT_OrgApacheLuceneCodecsMultiLevelSkipListReader

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneCodecsMultiLevelSkipListReader_) && (INCLUDE_ALL_OrgApacheLuceneCodecsMultiLevelSkipListReader || defined(INCLUDE_OrgApacheLuceneCodecsMultiLevelSkipListReader))
#define OrgApacheLuceneCodecsMultiLevelSkipListReader_

#define RESTRICT_JavaIoCloseable 1
#define INCLUDE_JavaIoCloseable 1
#include "java/io/Closeable.h"

@class IOSIntArray;
@class OrgApacheLuceneStoreIndexInput;

/*!
 @brief This abstract class reads skip lists with multiple levels.
 See <code>MultiLevelSkipListWriter</code> for the information about the encoding 
  of the multi level skip lists.  
  Subclasses must implement the abstract method <code>readSkipData(int, IndexInput)</code>
  which defines the actual format of the skip data.
 */
@interface OrgApacheLuceneCodecsMultiLevelSkipListReader : NSObject < JavaIoCloseable > {
 @public
  /*!
   @brief the maximum number of skip levels possible for this index
   */
  jint maxNumberOfSkipLevels_;
  /*!
   @brief Doc id of current skip entry per level.
   */
  IOSIntArray *skipDoc_;
}

#pragma mark Public

- (void)close;

/*!
 @brief Returns the id of the doc to which the last call of <code>skipTo(int)</code>
   has skipped.
 */
- (jint)getDoc;

/*!
 @brief Initializes the reader, for reuse on a new term.
 */
- (void)init__WithLong:(jlong)skipPointer
               withInt:(jint)df OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Skips entries to the first beyond the current whose document number is
   greater than or equal to <i>target</i>.Returns the current doc count.
 */
- (jint)skipToWithInt:(jint)target;

#pragma mark Protected

/*!
 @brief Creates a <code>MultiLevelSkipListReader</code>, where
   <code>skipInterval</code> and <code>skipMultiplier</code> are
   the same.
 */
- (instancetype __nonnull)initWithOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)skipStream
                                                         withInt:(jint)maxSkipLevels
                                                         withInt:(jint)skipInterval;

/*!
 @brief Creates a <code>MultiLevelSkipListReader</code>.
 */
- (instancetype __nonnull)initWithOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)skipStream
                                                         withInt:(jint)maxSkipLevels
                                                         withInt:(jint)skipInterval
                                                         withInt:(jint)skipMultiplier;

/*!
 @brief Subclasses must implement the actual skip data encoding in this method.
 @param level the level skip data shall be read from
 @param skipStream the skip stream to read from
 */
- (jint)readSkipDataWithInt:(jint)level
withOrgApacheLuceneStoreIndexInput:(OrgApacheLuceneStoreIndexInput *)skipStream;

/*!
 @brief Seeks the skip entry on the given level
 */
- (void)seekChildWithInt:(jint)level;

/*!
 @brief Copies the values of the last read skip entry on this level
 */
- (void)setLastSkipDataWithInt:(jint)level;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMultiLevelSkipListReader)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsMultiLevelSkipListReader, skipDoc_, IOSIntArray *)

FOUNDATION_EXPORT void OrgApacheLuceneCodecsMultiLevelSkipListReader_initWithOrgApacheLuceneStoreIndexInput_withInt_withInt_withInt_(OrgApacheLuceneCodecsMultiLevelSkipListReader *self, OrgApacheLuceneStoreIndexInput *skipStream, jint maxSkipLevels, jint skipInterval, jint skipMultiplier);

FOUNDATION_EXPORT void OrgApacheLuceneCodecsMultiLevelSkipListReader_initWithOrgApacheLuceneStoreIndexInput_withInt_withInt_(OrgApacheLuceneCodecsMultiLevelSkipListReader *self, OrgApacheLuceneStoreIndexInput *skipStream, jint maxSkipLevels, jint skipInterval);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMultiLevelSkipListReader)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneCodecsMultiLevelSkipListReader")
