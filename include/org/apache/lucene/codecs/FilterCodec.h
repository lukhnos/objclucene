//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/codecs/FilterCodec.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneCodecsFilterCodec")
#ifdef RESTRICT_OrgApacheLuceneCodecsFilterCodec
#define INCLUDE_ALL_OrgApacheLuceneCodecsFilterCodec 0
#else
#define INCLUDE_ALL_OrgApacheLuceneCodecsFilterCodec 1
#endif
#undef RESTRICT_OrgApacheLuceneCodecsFilterCodec

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneCodecsFilterCodec_) && (INCLUDE_ALL_OrgApacheLuceneCodecsFilterCodec || defined(INCLUDE_OrgApacheLuceneCodecsFilterCodec))
#define OrgApacheLuceneCodecsFilterCodec_

#define RESTRICT_OrgApacheLuceneCodecsCodec 1
#define INCLUDE_OrgApacheLuceneCodecsCodec 1
#include "org/apache/lucene/codecs/Codec.h"

@class OrgApacheLuceneCodecsCompoundFormat;
@class OrgApacheLuceneCodecsDocValuesFormat;
@class OrgApacheLuceneCodecsFieldInfosFormat;
@class OrgApacheLuceneCodecsLiveDocsFormat;
@class OrgApacheLuceneCodecsNormsFormat;
@class OrgApacheLuceneCodecsPostingsFormat;
@class OrgApacheLuceneCodecsSegmentInfoFormat;
@class OrgApacheLuceneCodecsStoredFieldsFormat;
@class OrgApacheLuceneCodecsTermVectorsFormat;

/*!
 @brief A codec that forwards all its method calls to another codec.
 <p>
  Extend this class when you need to reuse the functionality of an existing
  codec. For example, if you want to build a codec that redefines LuceneMN's 
 <code>LiveDocsFormat</code>:
  <pre class="prettyprint">
    public final class CustomCodec extends FilterCodec {
      public CustomCodec() {
        super("CustomCodec", new LuceneMNCodec());
      }
      public LiveDocsFormat liveDocsFormat() {
        return new CustomLiveDocsFormat();
      }   } 
 
@endcode
   
 <p><em>Please note:</em> Don't call <code>Codec.forName</code> from
  the no-arg constructor of your own codec. When the SPI framework
  loads your own Codec as SPI component, SPI has not yet fully initialized!
  If you want to extend another Codec, instantiate it directly by calling
  its constructor.
 */
@interface OrgApacheLuceneCodecsFilterCodec : OrgApacheLuceneCodecsCodec {
 @public
  /*!
   @brief The codec to filter.
   */
  OrgApacheLuceneCodecsCodec *delegate_;
}

#pragma mark Public

- (OrgApacheLuceneCodecsCompoundFormat *)compoundFormat;

- (OrgApacheLuceneCodecsDocValuesFormat *)docValuesFormat;

- (OrgApacheLuceneCodecsFieldInfosFormat *)fieldInfosFormat;

- (OrgApacheLuceneCodecsLiveDocsFormat *)liveDocsFormat;

- (OrgApacheLuceneCodecsNormsFormat *)normsFormat;

- (OrgApacheLuceneCodecsPostingsFormat *)postingsFormat;

- (OrgApacheLuceneCodecsSegmentInfoFormat *)segmentInfoFormat;

- (OrgApacheLuceneCodecsStoredFieldsFormat *)storedFieldsFormat;

- (OrgApacheLuceneCodecsTermVectorsFormat *)termVectorsFormat;

#pragma mark Protected

/*!
 @brief Sole constructor.When subclassing this codec,
  create a no-arg ctor and pass the delegate codec
  and a unique name to this ctor.
 */
- (instancetype __nonnull)initWithNSString:(NSString *)name
            withOrgApacheLuceneCodecsCodec:(OrgApacheLuceneCodecsCodec *)delegate;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsFilterCodec)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsFilterCodec, delegate_, OrgApacheLuceneCodecsCodec *)

FOUNDATION_EXPORT void OrgApacheLuceneCodecsFilterCodec_initWithNSString_withOrgApacheLuceneCodecsCodec_(OrgApacheLuceneCodecsFilterCodec *self, NSString *name, OrgApacheLuceneCodecsCodec *delegate);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsFilterCodec)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneCodecsFilterCodec")
