//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/codecs/StoredFieldsWriter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneCodecsStoredFieldsWriter")
#ifdef RESTRICT_OrgApacheLuceneCodecsStoredFieldsWriter
#define INCLUDE_ALL_OrgApacheLuceneCodecsStoredFieldsWriter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneCodecsStoredFieldsWriter 1
#endif
#undef RESTRICT_OrgApacheLuceneCodecsStoredFieldsWriter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneCodecsStoredFieldsWriter_) && (INCLUDE_ALL_OrgApacheLuceneCodecsStoredFieldsWriter || defined(INCLUDE_OrgApacheLuceneCodecsStoredFieldsWriter))
#define OrgApacheLuceneCodecsStoredFieldsWriter_

#define RESTRICT_JavaIoCloseable 1
#define INCLUDE_JavaIoCloseable 1
#include "java/io/Closeable.h"

@class OrgApacheLuceneIndexFieldInfo;
@class OrgApacheLuceneIndexFieldInfos;
@class OrgApacheLuceneIndexMergeState;
@protocol OrgApacheLuceneIndexIndexableField;

/*!
 @brief Codec API for writing stored fields: 
 <ol>
    <li>For every document, <code>startDocument()</code> is called,
        informing the Codec that a new document has started.
 <li><code>writeField(FieldInfo, IndexableField)</code> is called for 
        each field in the document.   
 <li>After all documents have been written, <code>finish(FieldInfos, int)</code> 
        is called for verification/sanity-checks.   
 <li>Finally the writer is closed (<code>close()</code>)
  </ol>
 */
@interface OrgApacheLuceneCodecsStoredFieldsWriter : NSObject < JavaIoCloseable >

#pragma mark Public

- (void)close;

/*!
 @brief Called before <code>close()</code>, passing in the number
   of documents that were written.Note that this is 
   intentionally redundant (equivalent to the number of
   calls to <code>startDocument()</code>, but a Codec should
   check that this is the case to detect the JRE bug described 
   in LUCENE-1282.
 */
- (void)finishWithOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)fis
                                         withInt:(jint)numDocs;

/*!
 @brief Called when a document and all its fields have been added.
 */
- (void)finishDocument;

/*!
 @brief Merges in the stored fields from the readers in 
   <code>mergeState</code>.The default implementation skips
   over deleted documents, and uses <code>startDocument()</code>,
   <code>writeField(FieldInfo, IndexableField)</code>, and <code>finish(FieldInfos, int)</code>,
   returning the number of documents that were written.
 Implementations can override this method for more sophisticated
   merging (bulk-byte copying, etc).
 */
- (jint)mergeWithOrgApacheLuceneIndexMergeState:(OrgApacheLuceneIndexMergeState *)mergeState;

/*!
 @brief Called before writing the stored fields of the document.
 <code>writeField(FieldInfo, IndexableField)</code> will be called
   for each stored field. Note that this is
   called even if the document has no stored fields.
 */
- (void)startDocument;

/*!
 @brief Writes a single stored field.
 */
- (void)writeFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)info
             withOrgApacheLuceneIndexIndexableField:(id<OrgApacheLuceneIndexIndexableField>)field;

#pragma mark Protected

/*!
 @brief Sole constructor.
 (For invocation by subclass 
   constructors, typically implicit.)
 */
- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsStoredFieldsWriter)

FOUNDATION_EXPORT void OrgApacheLuceneCodecsStoredFieldsWriter_init(OrgApacheLuceneCodecsStoredFieldsWriter *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsStoredFieldsWriter)

#endif

#if !defined (OrgApacheLuceneCodecsStoredFieldsWriter_MergeVisitor_) && (INCLUDE_ALL_OrgApacheLuceneCodecsStoredFieldsWriter || defined(INCLUDE_OrgApacheLuceneCodecsStoredFieldsWriter_MergeVisitor))
#define OrgApacheLuceneCodecsStoredFieldsWriter_MergeVisitor_

#define RESTRICT_OrgApacheLuceneIndexStoredFieldVisitor 1
#define INCLUDE_OrgApacheLuceneIndexStoredFieldVisitor 1
#include "org/apache/lucene/index/StoredFieldVisitor.h"

#define RESTRICT_OrgApacheLuceneIndexIndexableField 1
#define INCLUDE_OrgApacheLuceneIndexIndexableField 1
#include "org/apache/lucene/index/IndexableField.h"

@class IOSByteArray;
@class JavaIoReader;
@class OrgApacheLuceneAnalysisAnalyzer;
@class OrgApacheLuceneAnalysisTokenStream;
@class OrgApacheLuceneCodecsStoredFieldsWriter;
@class OrgApacheLuceneIndexFieldInfo;
@class OrgApacheLuceneIndexFieldInfos;
@class OrgApacheLuceneIndexMergeState;
@class OrgApacheLuceneIndexStoredFieldVisitor_Status;
@class OrgApacheLuceneUtilBytesRef;
@protocol OrgApacheLuceneIndexIndexableFieldType;

/*!
 @brief A visitor that adds every field it sees.
 <p>
  Use like this: 
 @code

  MergeVisitor visitor = new MergeVisitor(mergeState, readerIndex);
  for (...) {
    startDocument();
    storedFieldsReader.visitDocument(docID, visitor);
    finishDocument();
  } 
  
@endcode
 */
@interface OrgApacheLuceneCodecsStoredFieldsWriter_MergeVisitor : OrgApacheLuceneIndexStoredFieldVisitor < OrgApacheLuceneIndexIndexableField > {
 @public
  OrgApacheLuceneUtilBytesRef *binaryValue_;
  NSString *stringValue_;
  NSNumber *numericValue_;
  OrgApacheLuceneIndexFieldInfo *currentField_;
  OrgApacheLuceneIndexFieldInfos *remapper_;
}

#pragma mark Public

/*!
 @brief Create new merge visitor.
 */
- (instancetype __nonnull)initWithOrgApacheLuceneCodecsStoredFieldsWriter:(OrgApacheLuceneCodecsStoredFieldsWriter *)outer$
                                       withOrgApacheLuceneIndexMergeState:(OrgApacheLuceneIndexMergeState *)mergeState
                                                                  withInt:(jint)readerIndex;

- (void)binaryFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo
                                       withByteArray:(IOSByteArray *)value;

- (OrgApacheLuceneUtilBytesRef *)binaryValue;

- (jfloat)boost;

- (void)doubleFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo
                                          withDouble:(jdouble)value;

- (id<OrgApacheLuceneIndexIndexableFieldType>)fieldType;

- (void)floatFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo
                                          withFloat:(jfloat)value;

- (void)intFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo
                                          withInt:(jint)value;

- (void)longFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo
                                          withLong:(jlong)value;

- (NSString *)name;

- (OrgApacheLuceneIndexStoredFieldVisitor_Status *)needsFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo;

- (NSNumber *)numericValue;

- (JavaIoReader *)readerValue;

- (void)stringFieldWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)fieldInfo
                                       withByteArray:(IOSByteArray *)value;

- (NSString *)stringValue;

- (OrgApacheLuceneAnalysisTokenStream *)tokenStreamWithOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer
                                                withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)reuse;

#pragma mark Package-Private

- (void)resetWithOrgApacheLuceneIndexFieldInfo:(OrgApacheLuceneIndexFieldInfo *)field;

- (void)write;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsStoredFieldsWriter_MergeVisitor)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsStoredFieldsWriter_MergeVisitor, binaryValue_, OrgApacheLuceneUtilBytesRef *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsStoredFieldsWriter_MergeVisitor, stringValue_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsStoredFieldsWriter_MergeVisitor, numericValue_, NSNumber *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsStoredFieldsWriter_MergeVisitor, currentField_, OrgApacheLuceneIndexFieldInfo *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsStoredFieldsWriter_MergeVisitor, remapper_, OrgApacheLuceneIndexFieldInfos *)

FOUNDATION_EXPORT void OrgApacheLuceneCodecsStoredFieldsWriter_MergeVisitor_initWithOrgApacheLuceneCodecsStoredFieldsWriter_withOrgApacheLuceneIndexMergeState_withInt_(OrgApacheLuceneCodecsStoredFieldsWriter_MergeVisitor *self, OrgApacheLuceneCodecsStoredFieldsWriter *outer$, OrgApacheLuceneIndexMergeState *mergeState, jint readerIndex);

FOUNDATION_EXPORT OrgApacheLuceneCodecsStoredFieldsWriter_MergeVisitor *new_OrgApacheLuceneCodecsStoredFieldsWriter_MergeVisitor_initWithOrgApacheLuceneCodecsStoredFieldsWriter_withOrgApacheLuceneIndexMergeState_withInt_(OrgApacheLuceneCodecsStoredFieldsWriter *outer$, OrgApacheLuceneIndexMergeState *mergeState, jint readerIndex) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneCodecsStoredFieldsWriter_MergeVisitor *create_OrgApacheLuceneCodecsStoredFieldsWriter_MergeVisitor_initWithOrgApacheLuceneCodecsStoredFieldsWriter_withOrgApacheLuceneIndexMergeState_withInt_(OrgApacheLuceneCodecsStoredFieldsWriter *outer$, OrgApacheLuceneIndexMergeState *mergeState, jint readerIndex);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsStoredFieldsWriter_MergeVisitor)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneCodecsStoredFieldsWriter")
