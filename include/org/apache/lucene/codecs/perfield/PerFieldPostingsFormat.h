//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/codecs/perfield/PerFieldPostingsFormat.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat")
#ifdef RESTRICT_OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat
#define INCLUDE_ALL_OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat 0
#else
#define INCLUDE_ALL_OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat 1
#endif
#undef RESTRICT_OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_) && (INCLUDE_ALL_OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat || defined(INCLUDE_OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat))
#define OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_

#define RESTRICT_OrgApacheLuceneCodecsPostingsFormat 1
#define INCLUDE_OrgApacheLuceneCodecsPostingsFormat 1
#include "org/apache/lucene/codecs/PostingsFormat.h"

@class OrgApacheLuceneCodecsFieldsConsumer;
@class OrgApacheLuceneCodecsFieldsProducer;
@class OrgApacheLuceneIndexSegmentReadState;
@class OrgApacheLuceneIndexSegmentWriteState;

/*!
 @brief Enables per field postings support.
 <p>
  Note, when extending this class, the name (<code>getName</code>) is 
  written into the index. In order for the field to be read, the
  name must resolve to your implementation via <code>forName(String)</code>.
  This method uses Java's  
 <code>Service Provider Interface</code> to resolve format names. 
 <p>
  Files written by each posting format have an additional suffix containing the 
  format name. For example, in a per-field configuration instead of <tt>_1.prx</tt> 
  filenames would look like <tt>_1_Lucene40_0.prx</tt>.
 - seealso: ServiceLoader
 */
@interface OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat : OrgApacheLuceneCodecsPostingsFormat
@property (readonly, copy, class) NSString *PER_FIELD_NAME NS_SWIFT_NAME(PER_FIELD_NAME);
@property (readonly, copy, class) NSString *PER_FIELD_FORMAT_KEY NS_SWIFT_NAME(PER_FIELD_FORMAT_KEY);
@property (readonly, copy, class) NSString *PER_FIELD_SUFFIX_KEY NS_SWIFT_NAME(PER_FIELD_SUFFIX_KEY);

#pragma mark Public

/*!
 @brief Sole constructor.
 */
- (instancetype __nonnull)init;

- (OrgApacheLuceneCodecsFieldsConsumer *)fieldsConsumerWithOrgApacheLuceneIndexSegmentWriteState:(OrgApacheLuceneIndexSegmentWriteState *)state;

- (OrgApacheLuceneCodecsFieldsProducer *)fieldsProducerWithOrgApacheLuceneIndexSegmentReadState:(OrgApacheLuceneIndexSegmentReadState *)state;

/*!
 @brief Returns the postings format that should be used for writing 
  new segments of <code>field</code>.
 <p>
  The field to format mapping is written to the index, so
  this method is only invoked when writing, not when reading.
 */
- (OrgApacheLuceneCodecsPostingsFormat *)getPostingsFormatForFieldWithNSString:(NSString *)field;

#pragma mark Package-Private

+ (NSString *)getFullSegmentSuffixWithNSString:(NSString *)fieldName
                                  withNSString:(NSString *)outerSegmentSuffix
                                  withNSString:(NSString *)segmentSuffix;

+ (NSString *)getSuffixWithNSString:(NSString *)formatName
                       withNSString:(NSString *)suffix;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithNSString:(NSString *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat)

/*!
 @brief Name of this <code>PostingsFormat</code>.
 */
inline NSString *OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_get_PER_FIELD_NAME(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_PER_FIELD_NAME;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat, PER_FIELD_NAME, NSString *)

/*!
 @brief <code>FieldInfo</code> attribute name used to store the
   format name for each field.
 */
inline NSString *OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_get_PER_FIELD_FORMAT_KEY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_PER_FIELD_FORMAT_KEY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat, PER_FIELD_FORMAT_KEY, NSString *)

/*!
 @brief <code>FieldInfo</code> attribute name used to store the
   segment suffix name for each field.
 */
inline NSString *OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_get_PER_FIELD_SUFFIX_KEY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_PER_FIELD_SUFFIX_KEY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat, PER_FIELD_SUFFIX_KEY, NSString *)

FOUNDATION_EXPORT void OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_init(OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat *self);

FOUNDATION_EXPORT NSString *OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_getSuffixWithNSString_withNSString_(NSString *formatName, NSString *suffix);

FOUNDATION_EXPORT NSString *OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_getFullSegmentSuffixWithNSString_withNSString_withNSString_(NSString *fieldName, NSString *outerSegmentSuffix, NSString *segmentSuffix);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat)

#endif

#if !defined (OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_FieldsGroup_) && (INCLUDE_ALL_OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat || defined(INCLUDE_OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_FieldsGroup))
#define OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_FieldsGroup_

@class OrgApacheLuceneIndexSegmentWriteState;
@protocol JavaUtilSet;

/*!
 @brief Group of fields written by one PostingsFormat
 */
@interface OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_FieldsGroup : NSObject {
 @public
  id<JavaUtilSet> fields_;
  jint suffix_;
  /*!
   @brief Custom SegmentWriteState for this group of fields,
   with the segmentSuffix uniqueified for this
   PostingsFormat
   */
  OrgApacheLuceneIndexSegmentWriteState *state_;
}

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_FieldsGroup)

J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_FieldsGroup, fields_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_FieldsGroup, state_, OrgApacheLuceneIndexSegmentWriteState *)

FOUNDATION_EXPORT void OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_FieldsGroup_init(OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_FieldsGroup *self);

FOUNDATION_EXPORT OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_FieldsGroup *new_OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_FieldsGroup_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_FieldsGroup *create_OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_FieldsGroup_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat_FieldsGroup)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneCodecsPerfieldPerFieldPostingsFormat")
