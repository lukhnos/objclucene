//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsFormat.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneCodecsCompressingCompressingTermVectorsFormat")
#ifdef RESTRICT_OrgApacheLuceneCodecsCompressingCompressingTermVectorsFormat
#define INCLUDE_ALL_OrgApacheLuceneCodecsCompressingCompressingTermVectorsFormat 0
#else
#define INCLUDE_ALL_OrgApacheLuceneCodecsCompressingCompressingTermVectorsFormat 1
#endif
#undef RESTRICT_OrgApacheLuceneCodecsCompressingCompressingTermVectorsFormat

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneCodecsCompressingCompressingTermVectorsFormat_) && (INCLUDE_ALL_OrgApacheLuceneCodecsCompressingCompressingTermVectorsFormat || defined(INCLUDE_OrgApacheLuceneCodecsCompressingCompressingTermVectorsFormat))
#define OrgApacheLuceneCodecsCompressingCompressingTermVectorsFormat_

#define RESTRICT_OrgApacheLuceneCodecsTermVectorsFormat 1
#define INCLUDE_OrgApacheLuceneCodecsTermVectorsFormat 1
#include "org/apache/lucene/codecs/TermVectorsFormat.h"

@class OrgApacheLuceneCodecsCompressingCompressionMode;
@class OrgApacheLuceneCodecsTermVectorsReader;
@class OrgApacheLuceneCodecsTermVectorsWriter;
@class OrgApacheLuceneIndexFieldInfos;
@class OrgApacheLuceneIndexSegmentInfo;
@class OrgApacheLuceneStoreDirectory;
@class OrgApacheLuceneStoreIOContext;

/*!
 @brief A <code>TermVectorsFormat</code> that compresses chunks of documents together in
  order to improve the compression ratio.
 */
@interface OrgApacheLuceneCodecsCompressingCompressingTermVectorsFormat : OrgApacheLuceneCodecsTermVectorsFormat

#pragma mark Public

/*!
 @brief Create a new <code>CompressingTermVectorsFormat</code>.
 <p>
  <code>formatName</code> is the name of the format. This name will be used
  in the file formats to perform 
 <code>codec header checks</code>.
  <p>
  The <code>compressionMode</code> parameter allows you to choose between
  compression algorithms that have various compression and decompression
  speeds so that you can pick the one that best fits your indexing and
  searching throughput. You should never instantiate two 
 <code>CompressingTermVectorsFormat</code>s that have the same name but
  different <code>CompressionMode</code>s.
  <p>
  <code>chunkSize</code> is the minimum byte size of a chunk of documents.
  Higher values of <code>chunkSize</code> should improve the compression
  ratio but will require more memory at indexing time and might make document
  loading a little slower (depending on the size of your OS cache compared
  to the size of your index).
 @param formatName the name of the <code>StoredFieldsFormat</code>
 @param segmentSuffix a suffix to append to files created by this format
 @param compressionMode the <code>CompressionMode</code>  to use
 @param chunkSize the minimum number of bytes of a single chunk of stored documents
 @param blockSize the number of chunks to store in an index block.
 - seealso: CompressionMode
 */
- (instancetype __nonnull)initWithNSString:(NSString *)formatName
                              withNSString:(NSString *)segmentSuffix
withOrgApacheLuceneCodecsCompressingCompressionMode:(OrgApacheLuceneCodecsCompressingCompressionMode *)compressionMode
                                   withInt:(jint)chunkSize
                                   withInt:(jint)blockSize;

- (NSString *)description;

- (OrgApacheLuceneCodecsTermVectorsReader *)vectorsReaderWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)directory
                                                       withOrgApacheLuceneIndexSegmentInfo:(OrgApacheLuceneIndexSegmentInfo *)segmentInfo
                                                        withOrgApacheLuceneIndexFieldInfos:(OrgApacheLuceneIndexFieldInfos *)fieldInfos
                                                         withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context;

- (OrgApacheLuceneCodecsTermVectorsWriter *)vectorsWriterWithOrgApacheLuceneStoreDirectory:(OrgApacheLuceneStoreDirectory *)directory
                                                       withOrgApacheLuceneIndexSegmentInfo:(OrgApacheLuceneIndexSegmentInfo *)segmentInfo
                                                         withOrgApacheLuceneStoreIOContext:(OrgApacheLuceneStoreIOContext *)context;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsCompressingCompressingTermVectorsFormat)

FOUNDATION_EXPORT void OrgApacheLuceneCodecsCompressingCompressingTermVectorsFormat_initWithNSString_withNSString_withOrgApacheLuceneCodecsCompressingCompressionMode_withInt_withInt_(OrgApacheLuceneCodecsCompressingCompressingTermVectorsFormat *self, NSString *formatName, NSString *segmentSuffix, OrgApacheLuceneCodecsCompressingCompressionMode *compressionMode, jint chunkSize, jint blockSize);

FOUNDATION_EXPORT OrgApacheLuceneCodecsCompressingCompressingTermVectorsFormat *new_OrgApacheLuceneCodecsCompressingCompressingTermVectorsFormat_initWithNSString_withNSString_withOrgApacheLuceneCodecsCompressingCompressionMode_withInt_withInt_(NSString *formatName, NSString *segmentSuffix, OrgApacheLuceneCodecsCompressingCompressionMode *compressionMode, jint chunkSize, jint blockSize) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneCodecsCompressingCompressingTermVectorsFormat *create_OrgApacheLuceneCodecsCompressingCompressingTermVectorsFormat_initWithNSString_withNSString_withOrgApacheLuceneCodecsCompressingCompressionMode_withInt_withInt_(NSString *formatName, NSString *segmentSuffix, OrgApacheLuceneCodecsCompressingCompressionMode *compressionMode, jint chunkSize, jint blockSize);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsCompressingCompressingTermVectorsFormat)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneCodecsCompressingCompressingTermVectorsFormat")
