//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/codecs/MultiLevelSkipListWriter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneCodecsMultiLevelSkipListWriter")
#ifdef RESTRICT_OrgApacheLuceneCodecsMultiLevelSkipListWriter
#define INCLUDE_ALL_OrgApacheLuceneCodecsMultiLevelSkipListWriter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneCodecsMultiLevelSkipListWriter 1
#endif
#undef RESTRICT_OrgApacheLuceneCodecsMultiLevelSkipListWriter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneCodecsMultiLevelSkipListWriter_) && (INCLUDE_ALL_OrgApacheLuceneCodecsMultiLevelSkipListWriter || defined(INCLUDE_OrgApacheLuceneCodecsMultiLevelSkipListWriter))
#define OrgApacheLuceneCodecsMultiLevelSkipListWriter_

@class OrgApacheLuceneStoreIndexOutput;

/*!
 @brief This abstract class writes skip lists with multiple levels.
 @code

  Example for skipInterval = 3:
                                                      c            (skip level 2)
                  c                 c                 c            (skip level 1) 
      x     x     x     x     x     x     x     x     x     x      (skip level 0)
  d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d d  (posting list)
      3     6     9     12    15    18    21    24    27    30     (df) 
  d - document
  x - skip data
  c - skip data with child pointer 
  Skip level i contains every skipInterval-th entry from skip level i-1.
  Therefore the number of entries on level i is: floor(df / ((skipInterval ^ (i + 1))). 
  Each skip entry on a level i>0 contains a pointer to the corresponding skip entry in list i-1.
  This guarantees a logarithmic amount of skips to find the target document. 
  While this class takes care of writing the different skip levels,
  subclasses must define the actual format of the skip data. 
  
@endcode
 */
@interface OrgApacheLuceneCodecsMultiLevelSkipListWriter : NSObject {
 @public
  /*!
   @brief number of levels in this skip list
   */
  jint numberOfSkipLevels_;
}

#pragma mark Public

/*!
 @brief Writes the current skip data to the buffers.The current document frequency determines
  the max level is skip data is to be written to.
 @param df the current document frequency
 @throw IOExceptionIf an I/O error occurs
 */
- (void)bufferSkipWithInt:(jint)df;

/*!
 @brief Writes the buffered skip lists to the given output.
 @param output the IndexOutput the skip lists shall be written to
 @return the pointer the skip list starts
 */
- (jlong)writeSkipWithOrgApacheLuceneStoreIndexOutput:(OrgApacheLuceneStoreIndexOutput *)output;

#pragma mark Protected

/*!
 @brief Creates a <code>MultiLevelSkipListWriter</code>, where
   <code>skipInterval</code> and <code>skipMultiplier</code> are
   the same.
 */
- (instancetype __nonnull)initWithInt:(jint)skipInterval
                              withInt:(jint)maxSkipLevels
                              withInt:(jint)df;

/*!
 @brief Creates a <code>MultiLevelSkipListWriter</code>.
 */
- (instancetype __nonnull)initWithInt:(jint)skipInterval
                              withInt:(jint)skipMultiplier
                              withInt:(jint)maxSkipLevels
                              withInt:(jint)df;

/*!
 @brief Allocates internal skip buffers.
 */
- (void)init__ OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Creates new buffers or empties the existing ones
 */
- (void)resetSkip;

/*!
 @brief Subclasses must implement the actual skip data encoding in this method.
 @param level the level skip data shall be writing for
 @param skipBuffer the skip buffer to write to
 */
- (void)writeSkipDataWithInt:(jint)level
withOrgApacheLuceneStoreIndexOutput:(OrgApacheLuceneStoreIndexOutput *)skipBuffer;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneCodecsMultiLevelSkipListWriter)

FOUNDATION_EXPORT void OrgApacheLuceneCodecsMultiLevelSkipListWriter_initWithInt_withInt_withInt_withInt_(OrgApacheLuceneCodecsMultiLevelSkipListWriter *self, jint skipInterval, jint skipMultiplier, jint maxSkipLevels, jint df);

FOUNDATION_EXPORT void OrgApacheLuceneCodecsMultiLevelSkipListWriter_initWithInt_withInt_withInt_(OrgApacheLuceneCodecsMultiLevelSkipListWriter *self, jint skipInterval, jint maxSkipLevels, jint df);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneCodecsMultiLevelSkipListWriter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneCodecsMultiLevelSkipListWriter")
