//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/pattern/PatternReplaceFilterFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisPatternPatternReplaceFilterFactory")
#ifdef RESTRICT_OrgApacheLuceneAnalysisPatternPatternReplaceFilterFactory
#define INCLUDE_ALL_OrgApacheLuceneAnalysisPatternPatternReplaceFilterFactory 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisPatternPatternReplaceFilterFactory 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisPatternPatternReplaceFilterFactory

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisPatternPatternReplaceFilterFactory_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisPatternPatternReplaceFilterFactory || defined(INCLUDE_OrgApacheLuceneAnalysisPatternPatternReplaceFilterFactory))
#define OrgApacheLuceneAnalysisPatternPatternReplaceFilterFactory_

#define RESTRICT_OrgApacheLuceneAnalysisUtilTokenFilterFactory 1
#define INCLUDE_OrgApacheLuceneAnalysisUtilTokenFilterFactory 1
#include "org/apache/lucene/analysis/util/TokenFilterFactory.h"

@class JavaUtilRegexPattern;
@class OrgApacheLuceneAnalysisPatternPatternReplaceFilter;
@class OrgApacheLuceneAnalysisTokenStream;
@protocol JavaUtilMap;

/*!
 @brief Factory for <code>PatternReplaceFilter</code>.
 <pre class="prettyprint">
  &lt;fieldType name="text_ptnreplace" class="solr.TextField" positionIncrementGap="100"&gt;
    &lt;analyzer&gt;
      &lt;tokenizer class="solr.KeywordTokenizerFactory"/&gt;
      &lt;filter class="solr.PatternReplaceFilterFactory" pattern="([^a-z])" replacement=""
              replace="all"/&gt;
    &lt;/analyzer&gt;
  &lt;/fieldType&gt;
@endcode
 - seealso: PatternReplaceFilter
 */
@interface OrgApacheLuceneAnalysisPatternPatternReplaceFilterFactory : OrgApacheLuceneAnalysisUtilTokenFilterFactory {
 @public
  JavaUtilRegexPattern *pattern_;
  NSString *replacement_;
  jboolean replaceAll_;
}

#pragma mark Public

/*!
 @brief Creates a new PatternReplaceFilterFactory
 */
- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)args;

- (OrgApacheLuceneAnalysisPatternPatternReplaceFilter *)createWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisPatternPatternReplaceFilterFactory)

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisPatternPatternReplaceFilterFactory, pattern_, JavaUtilRegexPattern *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisPatternPatternReplaceFilterFactory, replacement_, NSString *)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPatternPatternReplaceFilterFactory_initWithJavaUtilMap_(OrgApacheLuceneAnalysisPatternPatternReplaceFilterFactory *self, id<JavaUtilMap> args);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPatternPatternReplaceFilterFactory *new_OrgApacheLuceneAnalysisPatternPatternReplaceFilterFactory_initWithJavaUtilMap_(id<JavaUtilMap> args) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPatternPatternReplaceFilterFactory *create_OrgApacheLuceneAnalysisPatternPatternReplaceFilterFactory_initWithJavaUtilMap_(id<JavaUtilMap> args);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisPatternPatternReplaceFilterFactory)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisPatternPatternReplaceFilterFactory")
