//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/br/BrazilianStemFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisBrBrazilianStemFilter")
#ifdef RESTRICT_OrgApacheLuceneAnalysisBrBrazilianStemFilter
#define INCLUDE_ALL_OrgApacheLuceneAnalysisBrBrazilianStemFilter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisBrBrazilianStemFilter 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisBrBrazilianStemFilter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisBrBrazilianStemFilter_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisBrBrazilianStemFilter || defined(INCLUDE_OrgApacheLuceneAnalysisBrBrazilianStemFilter))
#define OrgApacheLuceneAnalysisBrBrazilianStemFilter_

#define RESTRICT_OrgApacheLuceneAnalysisTokenFilter 1
#define INCLUDE_OrgApacheLuceneAnalysisTokenFilter 1
#include "org/apache/lucene/analysis/TokenFilter.h"

@class OrgApacheLuceneAnalysisTokenStream;

/*!
 @brief A <code>TokenFilter</code> that applies <code>BrazilianStemmer</code>.
 <p>
  To prevent terms from being stemmed use an instance of 
 <code>SetKeywordMarkerFilter</code> or a custom <code>TokenFilter</code> that sets
  the <code>KeywordAttribute</code> before this <code>TokenStream</code>.
  </p>
 - seealso: SetKeywordMarkerFilter
 */
@interface OrgApacheLuceneAnalysisBrBrazilianStemFilter : OrgApacheLuceneAnalysisTokenFilter

#pragma mark Public

/*!
 @brief Creates a new BrazilianStemFilter
 @param inArg the source <code>TokenStream</code>
 */
- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)inArg;

- (jboolean)incrementToken;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisBrBrazilianStemFilter)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisBrBrazilianStemFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisBrBrazilianStemFilter *self, OrgApacheLuceneAnalysisTokenStream *inArg);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisBrBrazilianStemFilter *new_OrgApacheLuceneAnalysisBrBrazilianStemFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTokenStream *inArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisBrBrazilianStemFilter *create_OrgApacheLuceneAnalysisBrBrazilianStemFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTokenStream *inArg);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisBrBrazilianStemFilter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisBrBrazilianStemFilter")
