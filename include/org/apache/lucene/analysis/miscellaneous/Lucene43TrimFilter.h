//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/Lucene43TrimFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousLucene43TrimFilter")
#ifdef RESTRICT_OrgApacheLuceneAnalysisMiscellaneousLucene43TrimFilter
#define INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousLucene43TrimFilter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousLucene43TrimFilter 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisMiscellaneousLucene43TrimFilter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisMiscellaneousLucene43TrimFilter_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousLucene43TrimFilter || defined(INCLUDE_OrgApacheLuceneAnalysisMiscellaneousLucene43TrimFilter))
#define OrgApacheLuceneAnalysisMiscellaneousLucene43TrimFilter_

#define RESTRICT_OrgApacheLuceneAnalysisTokenFilter 1
#define INCLUDE_OrgApacheLuceneAnalysisTokenFilter 1
#include "org/apache/lucene/analysis/TokenFilter.h"

@class OrgApacheLuceneAnalysisTokenStream;

/*!
 @brief Backcompat TrimFilter for versions 4.3 and before.
 */
@interface OrgApacheLuceneAnalysisMiscellaneousLucene43TrimFilter : OrgApacheLuceneAnalysisTokenFilter {
 @public
  jboolean updateOffsets_;
}

#pragma mark Public

- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)inArg
                                                         withBoolean:(jboolean)updateOffsets;

- (jboolean)incrementToken;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisMiscellaneousLucene43TrimFilter)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisMiscellaneousLucene43TrimFilter_initWithOrgApacheLuceneAnalysisTokenStream_withBoolean_(OrgApacheLuceneAnalysisMiscellaneousLucene43TrimFilter *self, OrgApacheLuceneAnalysisTokenStream *inArg, jboolean updateOffsets);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisMiscellaneousLucene43TrimFilter *new_OrgApacheLuceneAnalysisMiscellaneousLucene43TrimFilter_initWithOrgApacheLuceneAnalysisTokenStream_withBoolean_(OrgApacheLuceneAnalysisTokenStream *inArg, jboolean updateOffsets) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisMiscellaneousLucene43TrimFilter *create_OrgApacheLuceneAnalysisMiscellaneousLucene43TrimFilter_initWithOrgApacheLuceneAnalysisTokenStream_withBoolean_(OrgApacheLuceneAnalysisTokenStream *inArg, jboolean updateOffsets);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisMiscellaneousLucene43TrimFilter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousLucene43TrimFilter")
