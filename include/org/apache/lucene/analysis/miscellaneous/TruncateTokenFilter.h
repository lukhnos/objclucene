//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/TruncateTokenFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousTruncateTokenFilter")
#ifdef RESTRICT_OrgApacheLuceneAnalysisMiscellaneousTruncateTokenFilter
#define INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousTruncateTokenFilter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousTruncateTokenFilter 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisMiscellaneousTruncateTokenFilter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisMiscellaneousTruncateTokenFilter_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousTruncateTokenFilter || defined(INCLUDE_OrgApacheLuceneAnalysisMiscellaneousTruncateTokenFilter))
#define OrgApacheLuceneAnalysisMiscellaneousTruncateTokenFilter_

#define RESTRICT_OrgApacheLuceneAnalysisTokenFilter 1
#define INCLUDE_OrgApacheLuceneAnalysisTokenFilter 1
#include "org/apache/lucene/analysis/TokenFilter.h"

@class OrgApacheLuceneAnalysisTokenStream;

/*!
 @brief A token filter for truncating the terms into a specific length.
 Fixed prefix truncation, as a stemming method, produces good results on Turkish language.
  It is reported that F5, using first 5 characters, produced best results in 
 <a href="http://www.users.muohio.edu/canf/papers/JASIST2008offPrint.pdf">
  Information Retrieval on Turkish Texts</a>
 */
@interface OrgApacheLuceneAnalysisMiscellaneousTruncateTokenFilter : OrgApacheLuceneAnalysisTokenFilter

#pragma mark Public

- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input
                                                             withInt:(jint)length;

- (jboolean)incrementToken;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisMiscellaneousTruncateTokenFilter)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisMiscellaneousTruncateTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_withInt_(OrgApacheLuceneAnalysisMiscellaneousTruncateTokenFilter *self, OrgApacheLuceneAnalysisTokenStream *input, jint length);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisMiscellaneousTruncateTokenFilter *new_OrgApacheLuceneAnalysisMiscellaneousTruncateTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_withInt_(OrgApacheLuceneAnalysisTokenStream *input, jint length) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisMiscellaneousTruncateTokenFilter *create_OrgApacheLuceneAnalysisMiscellaneousTruncateTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_withInt_(OrgApacheLuceneAnalysisTokenStream *input, jint length);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisMiscellaneousTruncateTokenFilter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousTruncateTokenFilter")
