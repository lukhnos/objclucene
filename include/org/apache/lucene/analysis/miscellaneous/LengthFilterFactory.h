//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/LengthFilterFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory")
#ifdef RESTRICT_OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory
#define INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory || defined(INCLUDE_OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory))
#define OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory_

#define RESTRICT_OrgApacheLuceneAnalysisUtilTokenFilterFactory 1
#define INCLUDE_OrgApacheLuceneAnalysisUtilTokenFilterFactory 1
#include "org/apache/lucene/analysis/util/TokenFilterFactory.h"

@class OrgApacheLuceneAnalysisTokenFilter;
@class OrgApacheLuceneAnalysisTokenStream;
@protocol JavaUtilMap;

/*!
 @brief Factory for <code>LengthFilter</code>.
 <pre class="prettyprint">
  &lt;fieldType name="text_lngth" class="solr.TextField" positionIncrementGap="100"&gt;
    &lt;analyzer&gt;
      &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
      &lt;filter class="solr.LengthFilterFactory" min="0" max="1" /&gt;
    &lt;/analyzer&gt;
  &lt;/fieldType&gt;
@endcode
 */
@interface OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory : OrgApacheLuceneAnalysisUtilTokenFilterFactory {
 @public
  jint min_;
  jint max_;
}
@property (readonly, copy, class) NSString *MIN_KEY NS_SWIFT_NAME(MIN_KEY);
@property (readonly, copy, class) NSString *MAX_KEY NS_SWIFT_NAME(MAX_KEY);

#pragma mark Public

/*!
 @brief Creates a new LengthFilterFactory
 */
- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)args;

- (OrgApacheLuceneAnalysisTokenFilter *)createWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory)

inline NSString *OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory_get_MIN_KEY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory_MIN_KEY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory, MIN_KEY, NSString *)

inline NSString *OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory_get_MAX_KEY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory_MAX_KEY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory, MAX_KEY, NSString *)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory_initWithJavaUtilMap_(OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory *self, id<JavaUtilMap> args);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory *new_OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory_initWithJavaUtilMap_(id<JavaUtilMap> args) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory *create_OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory_initWithJavaUtilMap_(id<JavaUtilMap> args);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousLengthFilterFactory")
