//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/StemmerOverrideFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter")
#ifdef RESTRICT_OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter
#define INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter || defined(INCLUDE_OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter))
#define OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_

#define RESTRICT_OrgApacheLuceneAnalysisTokenFilter 1
#define INCLUDE_OrgApacheLuceneAnalysisTokenFilter 1
#include "org/apache/lucene/analysis/TokenFilter.h"

@class OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap;
@class OrgApacheLuceneAnalysisTokenStream;

/*!
 @brief Provides the ability to override any <code>KeywordAttribute</code> aware stemmer
  with custom dictionary-based stemming.
 */
@interface OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter : OrgApacheLuceneAnalysisTokenFilter

#pragma mark Public

/*!
 @brief Create a new StemmerOverrideFilter, performing dictionary-based stemming
  with the provided <code>dictionary</code>.
 <p>
  Any dictionary-stemmed terms will be marked with <code>KeywordAttribute</code>
  so that they will not be stemmed with stemmers down the chain. 
 </p>
 */
- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input
withOrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap:(OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap *)stemmerOverrideMap;

- (jboolean)incrementToken;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap_(OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter *self, OrgApacheLuceneAnalysisTokenStream *input, OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap *stemmerOverrideMap);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter *new_OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap_(OrgApacheLuceneAnalysisTokenStream *input, OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap *stemmerOverrideMap) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter *create_OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap_(OrgApacheLuceneAnalysisTokenStream *input, OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap *stemmerOverrideMap);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter)

#endif

#if !defined (OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter || defined(INCLUDE_OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap))
#define OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap_

@class IOSCharArray;
@class OrgApacheLuceneUtilBytesRef;
@class OrgApacheLuceneUtilFstFST;
@class OrgApacheLuceneUtilFstFST_Arc;
@class OrgApacheLuceneUtilFstFST_BytesReader;

/*!
 @brief A read-only 4-byte FST backed map that allows fast case-insensitive key
  value lookups for <code>StemmerOverrideFilter</code>
 */
@interface OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap : NSObject

#pragma mark Public

/*!
 @brief Creates a new <code>StemmerOverrideMap</code>
 @param fst the fst to lookup the overrides
 @param ignoreCase if the keys case should be ingored
 */
- (instancetype __nonnull)initWithOrgApacheLuceneUtilFstFST:(OrgApacheLuceneUtilFstFST *)fst
                                                withBoolean:(jboolean)ignoreCase;

/*!
 @brief Returns the value mapped to the given key or <code>null</code> if the key is not in the FST dictionary.
 */
- (OrgApacheLuceneUtilBytesRef *)getWithCharArray:(IOSCharArray *)buffer
                                          withInt:(jint)bufferLen
                withOrgApacheLuceneUtilFstFST_Arc:(OrgApacheLuceneUtilFstFST_Arc *)scratchArc
        withOrgApacheLuceneUtilFstFST_BytesReader:(OrgApacheLuceneUtilFstFST_BytesReader *)fstReader;

/*!
 @brief Returns a <code>BytesReader</code> to pass to the <code>get(char[], int, FST.Arc, FST.BytesReader)</code> method.
 */
- (OrgApacheLuceneUtilFstFST_BytesReader *)getBytesReader;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap_initWithOrgApacheLuceneUtilFstFST_withBoolean_(OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap *self, OrgApacheLuceneUtilFstFST *fst, jboolean ignoreCase);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap *new_OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap_initWithOrgApacheLuceneUtilFstFST_withBoolean_(OrgApacheLuceneUtilFstFST *fst, jboolean ignoreCase) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap *create_OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap_initWithOrgApacheLuceneUtilFstFST_withBoolean_(OrgApacheLuceneUtilFstFST *fst, jboolean ignoreCase);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap)

#endif

#if !defined (OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_Builder_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter || defined(INCLUDE_OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_Builder))
#define OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_Builder_

@class OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap;
@protocol JavaLangCharSequence;

/*!
 @brief This builder builds an <code>FST</code> for the <code>StemmerOverrideFilter</code>
 */
@interface OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_Builder : NSObject

#pragma mark Public

/*!
 @brief Creates a new <code>Builder</code> with ignoreCase set to <code>false</code>
 */
- (instancetype __nonnull)init;

/*!
 @brief Creates a new <code>Builder</code>
 @param ignoreCase if the input case should be ignored.
 */
- (instancetype __nonnull)initWithBoolean:(jboolean)ignoreCase;

/*!
 @brief Adds an input string and its stemmer override output to this builder.
 @param input the input char sequence
 @param output the stemmer override output char sequence
 @return <code>false</code> iff the input has already been added to this builder otherwise <code>true</code>.
 */
- (jboolean)addWithJavaLangCharSequence:(id<JavaLangCharSequence>)input
               withJavaLangCharSequence:(id<JavaLangCharSequence>)output;

/*!
 @brief Returns an <code>StemmerOverrideMap</code> to be used with the <code>StemmerOverrideFilter</code>
 @return an <code>StemmerOverrideMap</code> to be used with the <code>StemmerOverrideFilter</code>
 @throw IOExceptionif an <code>IOException</code> occurs;
 */
- (OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_StemmerOverrideMap *)build;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_Builder)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_Builder_init(OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_Builder *self);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_Builder *new_OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_Builder_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_Builder *create_OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_Builder_init(void);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_Builder_initWithBoolean_(OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_Builder *self, jboolean ignoreCase);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_Builder *new_OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_Builder_initWithBoolean_(jboolean ignoreCase) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_Builder *create_OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_Builder_initWithBoolean_(jboolean ignoreCase);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter_Builder)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousStemmerOverrideFilter")
