//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/PrefixAwareTokenFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousPrefixAwareTokenFilter")
#ifdef RESTRICT_OrgApacheLuceneAnalysisMiscellaneousPrefixAwareTokenFilter
#define INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousPrefixAwareTokenFilter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousPrefixAwareTokenFilter 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisMiscellaneousPrefixAwareTokenFilter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisMiscellaneousPrefixAwareTokenFilter_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousPrefixAwareTokenFilter || defined(INCLUDE_OrgApacheLuceneAnalysisMiscellaneousPrefixAwareTokenFilter))
#define OrgApacheLuceneAnalysisMiscellaneousPrefixAwareTokenFilter_

#define RESTRICT_OrgApacheLuceneAnalysisTokenStream 1
#define INCLUDE_OrgApacheLuceneAnalysisTokenStream 1
#include "org/apache/lucene/analysis/TokenStream.h"

@class OrgApacheLuceneAnalysisToken;
@class OrgApacheLuceneUtilAttributeFactory;
@class OrgApacheLuceneUtilAttributeSource;

/*!
 @brief Joins two token streams and leaves the last token of the first stream available
  to be used when updating the token values in the second stream based on that token.
 The default implementation adds last prefix token end offset to the suffix token start and end offsets. 
 <p>
  <b>NOTE:</b> This filter might not behave correctly if used with custom Attributes, i.e. Attributes other than
  the ones located in org.apache.lucene.analysis.tokenattributes.
 */
@interface OrgApacheLuceneAnalysisMiscellaneousPrefixAwareTokenFilter : OrgApacheLuceneAnalysisTokenStream

#pragma mark Public

- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)prefix
                              withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)suffix;

- (void)close;

- (void)end;

- (OrgApacheLuceneAnalysisTokenStream *)getPrefix;

- (OrgApacheLuceneAnalysisTokenStream *)getSuffix;

- (jboolean)incrementToken;

- (void)reset;

- (void)setPrefixWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)prefix;

- (void)setSuffixWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)suffix;

/*!
 @brief The default implementation adds last prefix token end offset to the suffix token start and end offsets.
 @param suffixToken a token from the suffix stream
 @param lastPrefixToken the last token from the prefix stream
 @return consumer token
 */
- (OrgApacheLuceneAnalysisToken *)updateSuffixTokenWithOrgApacheLuceneAnalysisToken:(OrgApacheLuceneAnalysisToken *)suffixToken
                                                   withOrgApacheLuceneAnalysisToken:(OrgApacheLuceneAnalysisToken *)lastPrefixToken;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithOrgApacheLuceneUtilAttributeFactory:(OrgApacheLuceneUtilAttributeFactory *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithOrgApacheLuceneUtilAttributeSource:(OrgApacheLuceneUtilAttributeSource *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisMiscellaneousPrefixAwareTokenFilter)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisMiscellaneousPrefixAwareTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisMiscellaneousPrefixAwareTokenFilter *self, OrgApacheLuceneAnalysisTokenStream *prefix, OrgApacheLuceneAnalysisTokenStream *suffix);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisMiscellaneousPrefixAwareTokenFilter *new_OrgApacheLuceneAnalysisMiscellaneousPrefixAwareTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTokenStream *prefix, OrgApacheLuceneAnalysisTokenStream *suffix) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisMiscellaneousPrefixAwareTokenFilter *create_OrgApacheLuceneAnalysisMiscellaneousPrefixAwareTokenFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTokenStream *prefix, OrgApacheLuceneAnalysisTokenStream *suffix);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisMiscellaneousPrefixAwareTokenFilter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousPrefixAwareTokenFilter")
