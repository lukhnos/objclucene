//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/Lucene43LengthFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousLucene43LengthFilter")
#ifdef RESTRICT_OrgApacheLuceneAnalysisMiscellaneousLucene43LengthFilter
#define INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousLucene43LengthFilter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousLucene43LengthFilter 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisMiscellaneousLucene43LengthFilter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisMiscellaneousLucene43LengthFilter_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousLucene43LengthFilter || defined(INCLUDE_OrgApacheLuceneAnalysisMiscellaneousLucene43LengthFilter))
#define OrgApacheLuceneAnalysisMiscellaneousLucene43LengthFilter_

#define RESTRICT_OrgApacheLuceneAnalysisUtilLucene43FilteringTokenFilter 1
#define INCLUDE_OrgApacheLuceneAnalysisUtilLucene43FilteringTokenFilter 1
#include "org/apache/lucene/analysis/util/Lucene43FilteringTokenFilter.h"

@class OrgApacheLuceneAnalysisTokenStream;

/*!
 @brief Backcompat LengthFilter for versions 4.3 and before.
 */
@interface OrgApacheLuceneAnalysisMiscellaneousLucene43LengthFilter : OrgApacheLuceneAnalysisUtilLucene43FilteringTokenFilter

#pragma mark Public

/*!
 @brief Build a filter that removes words that are too long or too
  short from the text.
 */
- (instancetype __nonnull)initWithBoolean:(jboolean)enablePositionIncrements
   withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)inArg
                                  withInt:(jint)min
                                  withInt:(jint)max;

- (jboolean)accept;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithBoolean:(jboolean)arg0
   withOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisMiscellaneousLucene43LengthFilter)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisMiscellaneousLucene43LengthFilter_initWithBoolean_withOrgApacheLuceneAnalysisTokenStream_withInt_withInt_(OrgApacheLuceneAnalysisMiscellaneousLucene43LengthFilter *self, jboolean enablePositionIncrements, OrgApacheLuceneAnalysisTokenStream *inArg, jint min, jint max);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisMiscellaneousLucene43LengthFilter *new_OrgApacheLuceneAnalysisMiscellaneousLucene43LengthFilter_initWithBoolean_withOrgApacheLuceneAnalysisTokenStream_withInt_withInt_(jboolean enablePositionIncrements, OrgApacheLuceneAnalysisTokenStream *inArg, jint min, jint max) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisMiscellaneousLucene43LengthFilter *create_OrgApacheLuceneAnalysisMiscellaneousLucene43LengthFilter_initWithBoolean_withOrgApacheLuceneAnalysisTokenStream_withInt_withInt_(jboolean enablePositionIncrements, OrgApacheLuceneAnalysisTokenStream *inArg, jint min, jint max);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisMiscellaneousLucene43LengthFilter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisMiscellaneousLucene43LengthFilter")
