//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/path/ReversePathHierarchyTokenizer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer")
#ifdef RESTRICT_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer
#define INCLUDE_ALL_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer || defined(INCLUDE_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer))
#define OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_

#define RESTRICT_OrgApacheLuceneAnalysisTokenizer 1
#define INCLUDE_OrgApacheLuceneAnalysisTokenizer 1
#include "org/apache/lucene/analysis/Tokenizer.h"

@class OrgApacheLuceneUtilAttributeFactory;

/*!
 @brief Tokenizer for domain-like hierarchies.
 <p>
  Take something like: 
 @code

  www.site.co.uk 
  
@endcode
  and make: 
 @code

  www.site.co.uk
  site.co.uk
  co.uk
  uk 
  
@endcode
 */
@interface OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer : OrgApacheLuceneAnalysisTokenizer
@property (readonly, class) jchar DEFAULT_DELIMITER NS_SWIFT_NAME(DEFAULT_DELIMITER);
@property (readonly, class) jint DEFAULT_SKIP NS_SWIFT_NAME(DEFAULT_SKIP);

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithOrgApacheLuceneUtilAttributeFactory:(OrgApacheLuceneUtilAttributeFactory *)factory
                                                             withChar:(jchar)delimiter
                                                             withChar:(jchar)replacement
                                                              withInt:(jint)skip;

- (instancetype __nonnull)initWithOrgApacheLuceneUtilAttributeFactory:(OrgApacheLuceneUtilAttributeFactory *)factory
                                                              withInt:(jint)bufferSize
                                                             withChar:(jchar)delimiter
                                                             withChar:(jchar)replacement
                                                              withInt:(jint)skip;

- (instancetype __nonnull)initWithChar:(jchar)delimiter
                              withChar:(jchar)replacement;

- (instancetype __nonnull)initWithChar:(jchar)delimiter
                              withChar:(jchar)replacement
                               withInt:(jint)skip;

- (instancetype __nonnull)initWithChar:(jchar)delimiter
                               withInt:(jint)skip;

- (instancetype __nonnull)initWithInt:(jint)skip;

- (instancetype __nonnull)initWithInt:(jint)bufferSize
                             withChar:(jchar)delimiter;

- (instancetype __nonnull)initWithInt:(jint)bufferSize
                             withChar:(jchar)delimiter
                             withChar:(jchar)replacement;

- (instancetype __nonnull)initWithInt:(jint)bufferSize
                             withChar:(jchar)delimiter
                             withChar:(jchar)replacement
                              withInt:(jint)skip;

- (void)end;

- (jboolean)incrementToken;

- (void)reset;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithOrgApacheLuceneUtilAttributeFactory:(OrgApacheLuceneUtilAttributeFactory *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer)

inline jchar OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_get_DEFAULT_DELIMITER(void);
#define OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_DEFAULT_DELIMITER '/'
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer, DEFAULT_DELIMITER, jchar)

inline jint OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_get_DEFAULT_SKIP(void);
#define OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_DEFAULT_SKIP 0
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer, DEFAULT_SKIP, jint)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_init(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *self);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *new_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *create_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_init(void);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithInt_(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *self, jint skip);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *new_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithInt_(jint skip) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *create_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithInt_(jint skip);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithInt_withChar_(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *self, jint bufferSize, jchar delimiter);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *new_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithInt_withChar_(jint bufferSize, jchar delimiter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *create_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithInt_withChar_(jint bufferSize, jchar delimiter);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithChar_withChar_(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *self, jchar delimiter, jchar replacement);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *new_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithChar_withChar_(jchar delimiter, jchar replacement) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *create_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithChar_withChar_(jchar delimiter, jchar replacement);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithInt_withChar_withChar_(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *self, jint bufferSize, jchar delimiter, jchar replacement);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *new_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithInt_withChar_withChar_(jint bufferSize, jchar delimiter, jchar replacement) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *create_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithInt_withChar_withChar_(jint bufferSize, jchar delimiter, jchar replacement);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithChar_withInt_(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *self, jchar delimiter, jint skip);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *new_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithChar_withInt_(jchar delimiter, jint skip) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *create_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithChar_withInt_(jchar delimiter, jint skip);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithChar_withChar_withInt_(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *self, jchar delimiter, jchar replacement, jint skip);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *new_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithChar_withChar_withInt_(jchar delimiter, jchar replacement, jint skip) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *create_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithChar_withChar_withInt_(jchar delimiter, jchar replacement, jint skip);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithOrgApacheLuceneUtilAttributeFactory_withChar_withChar_withInt_(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *self, OrgApacheLuceneUtilAttributeFactory *factory, jchar delimiter, jchar replacement, jint skip);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *new_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithOrgApacheLuceneUtilAttributeFactory_withChar_withChar_withInt_(OrgApacheLuceneUtilAttributeFactory *factory, jchar delimiter, jchar replacement, jint skip) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *create_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithOrgApacheLuceneUtilAttributeFactory_withChar_withChar_withInt_(OrgApacheLuceneUtilAttributeFactory *factory, jchar delimiter, jchar replacement, jint skip);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithInt_withChar_withChar_withInt_(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *self, jint bufferSize, jchar delimiter, jchar replacement, jint skip);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *new_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithInt_withChar_withChar_withInt_(jint bufferSize, jchar delimiter, jchar replacement, jint skip) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *create_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithInt_withChar_withChar_withInt_(jint bufferSize, jchar delimiter, jchar replacement, jint skip);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithOrgApacheLuceneUtilAttributeFactory_withInt_withChar_withChar_withInt_(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *self, OrgApacheLuceneUtilAttributeFactory *factory, jint bufferSize, jchar delimiter, jchar replacement, jint skip);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *new_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithOrgApacheLuceneUtilAttributeFactory_withInt_withChar_withChar_withInt_(OrgApacheLuceneUtilAttributeFactory *factory, jint bufferSize, jchar delimiter, jchar replacement, jint skip) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer *create_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer_initWithOrgApacheLuceneUtilAttributeFactory_withInt_withChar_withChar_withInt_(OrgApacheLuceneUtilAttributeFactory *factory, jint bufferSize, jchar delimiter, jchar replacement, jint skip);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisPathReversePathHierarchyTokenizer")
