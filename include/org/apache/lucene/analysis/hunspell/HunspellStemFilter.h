//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/hunspell/HunspellStemFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisHunspellHunspellStemFilter")
#ifdef RESTRICT_OrgApacheLuceneAnalysisHunspellHunspellStemFilter
#define INCLUDE_ALL_OrgApacheLuceneAnalysisHunspellHunspellStemFilter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisHunspellHunspellStemFilter 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisHunspellHunspellStemFilter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisHunspellHunspellStemFilter_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisHunspellHunspellStemFilter || defined(INCLUDE_OrgApacheLuceneAnalysisHunspellHunspellStemFilter))
#define OrgApacheLuceneAnalysisHunspellHunspellStemFilter_

#define RESTRICT_OrgApacheLuceneAnalysisTokenFilter 1
#define INCLUDE_OrgApacheLuceneAnalysisTokenFilter 1
#include "org/apache/lucene/analysis/TokenFilter.h"

@class OrgApacheLuceneAnalysisHunspellDictionary;
@class OrgApacheLuceneAnalysisTokenStream;
@protocol JavaUtilComparator;

/*!
 @brief TokenFilter that uses hunspell affix rules and words to stem tokens.Since hunspell supports a word having multiple
  stems, this filter can emit multiple tokens for each consumed token 
 <p>
  Note: This filter is aware of the <code>KeywordAttribute</code>.
 To prevent
  certain terms from being passed to the stemmer 
 <code>KeywordAttribute.isKeyword()</code> should be set to <code>true</code>
  in a previous <code>TokenStream</code>.
  Note: For including the original term as well as the stemmed version, see 
 <code>org.apache.lucene.analysis.miscellaneous.KeywordRepeatFilterFactory</code>
  </p>
 */
@interface OrgApacheLuceneAnalysisHunspellHunspellStemFilter : OrgApacheLuceneAnalysisTokenFilter
@property (readonly, class, strong) id<JavaUtilComparator> lengthComparator NS_SWIFT_NAME(lengthComparator);

#pragma mark Public

/*!
 @brief Create a <code>HunspellStemFilter</code> outputting all possible stems.
 - seealso: #HunspellStemFilter(TokenStream, Dictionary, boolean)
 */
- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input
                       withOrgApacheLuceneAnalysisHunspellDictionary:(OrgApacheLuceneAnalysisHunspellDictionary *)dictionary;

/*!
 @brief Create a <code>HunspellStemFilter</code> outputting all possible stems.
 - seealso: #HunspellStemFilter(TokenStream, Dictionary, boolean, boolean)
 */
- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input
                       withOrgApacheLuceneAnalysisHunspellDictionary:(OrgApacheLuceneAnalysisHunspellDictionary *)dictionary
                                                         withBoolean:(jboolean)dedup;

/*!
 @brief Creates a new HunspellStemFilter that will stem tokens from the given TokenStream using affix rules in the provided
  Dictionary
 @param input TokenStream whose tokens will be stemmed
 @param dictionary HunspellDictionary containing the affix rules and words that will be used to stem the tokens
 @param longestOnly true if only the longest term should be output.
 */
- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input
                       withOrgApacheLuceneAnalysisHunspellDictionary:(OrgApacheLuceneAnalysisHunspellDictionary *)dictionary
                                                         withBoolean:(jboolean)dedup
                                                         withBoolean:(jboolean)longestOnly;

- (jboolean)incrementToken;

- (void)reset;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneAnalysisHunspellHunspellStemFilter)

inline id<JavaUtilComparator> OrgApacheLuceneAnalysisHunspellHunspellStemFilter_get_lengthComparator(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilComparator> OrgApacheLuceneAnalysisHunspellHunspellStemFilter_lengthComparator;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisHunspellHunspellStemFilter, lengthComparator, id<JavaUtilComparator>)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisHunspellHunspellStemFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisHunspellDictionary_(OrgApacheLuceneAnalysisHunspellHunspellStemFilter *self, OrgApacheLuceneAnalysisTokenStream *input, OrgApacheLuceneAnalysisHunspellDictionary *dictionary);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisHunspellHunspellStemFilter *new_OrgApacheLuceneAnalysisHunspellHunspellStemFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisHunspellDictionary_(OrgApacheLuceneAnalysisTokenStream *input, OrgApacheLuceneAnalysisHunspellDictionary *dictionary) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisHunspellHunspellStemFilter *create_OrgApacheLuceneAnalysisHunspellHunspellStemFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisHunspellDictionary_(OrgApacheLuceneAnalysisTokenStream *input, OrgApacheLuceneAnalysisHunspellDictionary *dictionary);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisHunspellHunspellStemFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisHunspellDictionary_withBoolean_(OrgApacheLuceneAnalysisHunspellHunspellStemFilter *self, OrgApacheLuceneAnalysisTokenStream *input, OrgApacheLuceneAnalysisHunspellDictionary *dictionary, jboolean dedup);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisHunspellHunspellStemFilter *new_OrgApacheLuceneAnalysisHunspellHunspellStemFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisHunspellDictionary_withBoolean_(OrgApacheLuceneAnalysisTokenStream *input, OrgApacheLuceneAnalysisHunspellDictionary *dictionary, jboolean dedup) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisHunspellHunspellStemFilter *create_OrgApacheLuceneAnalysisHunspellHunspellStemFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisHunspellDictionary_withBoolean_(OrgApacheLuceneAnalysisTokenStream *input, OrgApacheLuceneAnalysisHunspellDictionary *dictionary, jboolean dedup);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisHunspellHunspellStemFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisHunspellDictionary_withBoolean_withBoolean_(OrgApacheLuceneAnalysisHunspellHunspellStemFilter *self, OrgApacheLuceneAnalysisTokenStream *input, OrgApacheLuceneAnalysisHunspellDictionary *dictionary, jboolean dedup, jboolean longestOnly);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisHunspellHunspellStemFilter *new_OrgApacheLuceneAnalysisHunspellHunspellStemFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisHunspellDictionary_withBoolean_withBoolean_(OrgApacheLuceneAnalysisTokenStream *input, OrgApacheLuceneAnalysisHunspellDictionary *dictionary, jboolean dedup, jboolean longestOnly) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisHunspellHunspellStemFilter *create_OrgApacheLuceneAnalysisHunspellHunspellStemFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisHunspellDictionary_withBoolean_withBoolean_(OrgApacheLuceneAnalysisTokenStream *input, OrgApacheLuceneAnalysisHunspellDictionary *dictionary, jboolean dedup, jboolean longestOnly);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisHunspellHunspellStemFilter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisHunspellHunspellStemFilter")
