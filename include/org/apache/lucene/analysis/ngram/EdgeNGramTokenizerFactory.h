//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/ngram/EdgeNGramTokenizerFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisNgramEdgeNGramTokenizerFactory")
#ifdef RESTRICT_OrgApacheLuceneAnalysisNgramEdgeNGramTokenizerFactory
#define INCLUDE_ALL_OrgApacheLuceneAnalysisNgramEdgeNGramTokenizerFactory 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisNgramEdgeNGramTokenizerFactory 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisNgramEdgeNGramTokenizerFactory

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisNgramEdgeNGramTokenizerFactory_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisNgramEdgeNGramTokenizerFactory || defined(INCLUDE_OrgApacheLuceneAnalysisNgramEdgeNGramTokenizerFactory))
#define OrgApacheLuceneAnalysisNgramEdgeNGramTokenizerFactory_

#define RESTRICT_OrgApacheLuceneAnalysisUtilTokenizerFactory 1
#define INCLUDE_OrgApacheLuceneAnalysisUtilTokenizerFactory 1
#include "org/apache/lucene/analysis/util/TokenizerFactory.h"

@class OrgApacheLuceneAnalysisTokenizer;
@class OrgApacheLuceneUtilAttributeFactory;
@protocol JavaUtilMap;

/*!
 @brief Creates new instances of <code>EdgeNGramTokenizer</code>.
 <pre class="prettyprint">
  &lt;fieldType name="text_edgngrm" class="solr.TextField" positionIncrementGap="100"&gt;
    &lt;analyzer&gt;
      &lt;tokenizer class="solr.EdgeNGramTokenizerFactory" minGramSize="1" maxGramSize="1"/&gt;
    &lt;/analyzer&gt;
  &lt;/fieldType&gt;
@endcode
 */
@interface OrgApacheLuceneAnalysisNgramEdgeNGramTokenizerFactory : OrgApacheLuceneAnalysisUtilTokenizerFactory

#pragma mark Public

/*!
 @brief Creates a new EdgeNGramTokenizerFactory
 */
- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)args;

- (OrgApacheLuceneAnalysisTokenizer *)createWithOrgApacheLuceneUtilAttributeFactory:(OrgApacheLuceneUtilAttributeFactory *)factory;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisNgramEdgeNGramTokenizerFactory)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisNgramEdgeNGramTokenizerFactory_initWithJavaUtilMap_(OrgApacheLuceneAnalysisNgramEdgeNGramTokenizerFactory *self, id<JavaUtilMap> args);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisNgramEdgeNGramTokenizerFactory *new_OrgApacheLuceneAnalysisNgramEdgeNGramTokenizerFactory_initWithJavaUtilMap_(id<JavaUtilMap> args) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisNgramEdgeNGramTokenizerFactory *create_OrgApacheLuceneAnalysisNgramEdgeNGramTokenizerFactory_initWithJavaUtilMap_(id<JavaUtilMap> args);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisNgramEdgeNGramTokenizerFactory)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisNgramEdgeNGramTokenizerFactory")
