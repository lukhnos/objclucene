//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/charfilter/package-info.java
//

/*!
 @brief Normalization of text before the tokenizer.
 <p>
    CharFilters are chainable filters that normalize text before tokenization 
    and provide mappings between normalized text offsets and the corresponding 
    offset in the original text. 
 </p>
  <H2>CharFilter offset mappings</H2>
  <p>
    CharFilters modify an input stream via a series of substring
    replacements (including deletions and insertions) to produce an output
    stream. There are three possible replacement cases: the replacement
    string has the same length as the original substring; the replacement
    is shorter; and the replacement is longer. In the latter two cases
    (when the replacement has a different length than the original),
    one or more offset correction mappings are required. 
 </p>
  <p>
    When the replacement is shorter than the original (e.g. when the
    replacement is the empty string), a single offset correction mapping
    should be added at the replacement's end offset in the output stream.
    The <code>cumulativeDiff</code> parameter to the
    <code>addOffCorrectMapping()</code> method will be the sum of all
    previous replacement offset adjustments, with the addition of the
    difference between the lengths of the original substring and the
    replacement string (a positive value). 
 </p>
  <p>
    When the replacement is longer than the original (e.g. when the
    original is the empty string), you should add as many offset
    correction mappings as the difference between the lengths of the
    replacement string and the original substring, starting at the
    end offset the original substring would have had in the output stream.
    The <code>cumulativeDiff</code> parameter to the
    <code>addOffCorrectMapping()</code> method will be the sum of all
    previous replacement offset adjustments, with the addition of the
    difference between the lengths of the original substring and the
    replacement string so far (a negative value). 
 </p>
 */
#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterPackage_info")
#ifdef RESTRICT_OrgApacheLuceneAnalysisCharfilterPackage_info
#define INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterPackage_info 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterPackage_info 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisCharfilterPackage_info

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterPackage_info")
