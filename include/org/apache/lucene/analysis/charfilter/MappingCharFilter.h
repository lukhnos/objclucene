//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/charfilter/MappingCharFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterMappingCharFilter")
#ifdef RESTRICT_OrgApacheLuceneAnalysisCharfilterMappingCharFilter
#define INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterMappingCharFilter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterMappingCharFilter 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisCharfilterMappingCharFilter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisCharfilterMappingCharFilter_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterMappingCharFilter || defined(INCLUDE_OrgApacheLuceneAnalysisCharfilterMappingCharFilter))
#define OrgApacheLuceneAnalysisCharfilterMappingCharFilter_

#define RESTRICT_OrgApacheLuceneAnalysisCharfilterBaseCharFilter 1
#define INCLUDE_OrgApacheLuceneAnalysisCharfilterBaseCharFilter 1
#include "org/apache/lucene/analysis/charfilter/BaseCharFilter.h"

@class IOSCharArray;
@class JavaIoReader;
@class OrgApacheLuceneAnalysisCharfilterNormalizeCharMap;

/*!
 @brief Simplistic <code>CharFilter</code> that applies the mappings
  contained in a <code>NormalizeCharMap</code> to the character
  stream, and correcting the resulting changes to the
  offsets.Matching is greedy (longest pattern matching at
  a given point wins).
 Replacement is allowed to be the
  empty string.
 */
@interface OrgApacheLuceneAnalysisCharfilterMappingCharFilter : OrgApacheLuceneAnalysisCharfilterBaseCharFilter

#pragma mark Public

/*!
 @brief Default constructor that takes a <code>Reader</code>.
 */
- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisCharfilterNormalizeCharMap:(OrgApacheLuceneAnalysisCharfilterNormalizeCharMap *)normMap
                                                                   withJavaIoReader:(JavaIoReader *)inArg;

- (jint)read;

- (jint)readWithCharArray:(IOSCharArray *)cbuf
                  withInt:(jint)off
                  withInt:(jint)len;

- (void)reset;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithJavaIoReader:(JavaIoReader *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisCharfilterMappingCharFilter)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisCharfilterMappingCharFilter_initWithOrgApacheLuceneAnalysisCharfilterNormalizeCharMap_withJavaIoReader_(OrgApacheLuceneAnalysisCharfilterMappingCharFilter *self, OrgApacheLuceneAnalysisCharfilterNormalizeCharMap *normMap, JavaIoReader *inArg);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCharfilterMappingCharFilter *new_OrgApacheLuceneAnalysisCharfilterMappingCharFilter_initWithOrgApacheLuceneAnalysisCharfilterNormalizeCharMap_withJavaIoReader_(OrgApacheLuceneAnalysisCharfilterNormalizeCharMap *normMap, JavaIoReader *inArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCharfilterMappingCharFilter *create_OrgApacheLuceneAnalysisCharfilterMappingCharFilter_initWithOrgApacheLuceneAnalysisCharfilterNormalizeCharMap_withJavaIoReader_(OrgApacheLuceneAnalysisCharfilterNormalizeCharMap *normMap, JavaIoReader *inArg);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisCharfilterMappingCharFilter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterMappingCharFilter")
