//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/charfilter/NormalizeCharMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterNormalizeCharMap")
#ifdef RESTRICT_OrgApacheLuceneAnalysisCharfilterNormalizeCharMap
#define INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterNormalizeCharMap 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterNormalizeCharMap 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisCharfilterNormalizeCharMap

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisCharfilterNormalizeCharMap_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterNormalizeCharMap || defined(INCLUDE_OrgApacheLuceneAnalysisCharfilterNormalizeCharMap))
#define OrgApacheLuceneAnalysisCharfilterNormalizeCharMap_

@class OrgApacheLuceneUtilFstFST;
@protocol JavaUtilMap;

/*!
 @brief Holds a map of String input to String output, to be used
  with <code>MappingCharFilter</code>.Use the <code>Builder</code>
  to create this.
 */
@interface OrgApacheLuceneAnalysisCharfilterNormalizeCharMap : NSObject {
 @public
  OrgApacheLuceneUtilFstFST *map_;
  id<JavaUtilMap> cachedRootArcs_;
}

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisCharfilterNormalizeCharMap)

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCharfilterNormalizeCharMap, map_, OrgApacheLuceneUtilFstFST *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisCharfilterNormalizeCharMap, cachedRootArcs_, id<JavaUtilMap>)

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisCharfilterNormalizeCharMap)

#endif

#if !defined (OrgApacheLuceneAnalysisCharfilterNormalizeCharMap_Builder_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterNormalizeCharMap || defined(INCLUDE_OrgApacheLuceneAnalysisCharfilterNormalizeCharMap_Builder))
#define OrgApacheLuceneAnalysisCharfilterNormalizeCharMap_Builder_

@class OrgApacheLuceneAnalysisCharfilterNormalizeCharMap;

/*!
 @brief Builds an NormalizeCharMap.
 <p>
  Call add() until you have added all the mappings, then call build() to get a NormalizeCharMap
 */
@interface OrgApacheLuceneAnalysisCharfilterNormalizeCharMap_Builder : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Records a replacement to be applied to the input
   stream.Whenever <code>singleMatch</code> occurs in
   the input, it will be replaced with  
 <code>replacement</code>.
 @param match input String to be replaced
 @param replacement output String
 @throw IllegalArgumentExceptionif
  <code>match</code> is the empty string, or was
  already previously added
 */
- (void)addWithNSString:(NSString *)match
           withNSString:(NSString *)replacement;

/*!
 @brief Builds the NormalizeCharMap; call this once you
   are done calling <code>add</code>.
 */
- (OrgApacheLuceneAnalysisCharfilterNormalizeCharMap *)build;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisCharfilterNormalizeCharMap_Builder)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisCharfilterNormalizeCharMap_Builder_init(OrgApacheLuceneAnalysisCharfilterNormalizeCharMap_Builder *self);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCharfilterNormalizeCharMap_Builder *new_OrgApacheLuceneAnalysisCharfilterNormalizeCharMap_Builder_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCharfilterNormalizeCharMap_Builder *create_OrgApacheLuceneAnalysisCharfilterNormalizeCharMap_Builder_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisCharfilterNormalizeCharMap_Builder)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterNormalizeCharMap")
