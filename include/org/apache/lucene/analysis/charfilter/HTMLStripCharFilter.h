//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/charfilter/HTMLStripCharFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter")
#ifdef RESTRICT_OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter
#define INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter || defined(INCLUDE_OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter))
#define OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter_

#define RESTRICT_OrgApacheLuceneAnalysisCharfilterBaseCharFilter 1
#define INCLUDE_OrgApacheLuceneAnalysisCharfilterBaseCharFilter 1
#include "org/apache/lucene/analysis/charfilter/BaseCharFilter.h"

@class IOSCharArray;
@class JavaIoReader;
@protocol JavaUtilSet;

/*!
 @brief A CharFilter that wraps another Reader and attempts to strip out HTML constructs.
 */
@interface OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter : OrgApacheLuceneAnalysisCharfilterBaseCharFilter

#pragma mark Public

/*!
 @brief Creates a new HTMLStripCharFilter over the provided Reader.
 @param source Reader to strip html tags from.
 */
- (instancetype __nonnull)initWithJavaIoReader:(JavaIoReader *)source;

/*!
 @brief Creates a new HTMLStripCharFilter over the provided Reader
  with the specified start and end tags.
 @param source Reader to strip html tags from.
 @param escapedTags Tags in this set (both start and end tags)   will not be filtered out.
 */
- (instancetype __nonnull)initWithJavaIoReader:(JavaIoReader *)source
                               withJavaUtilSet:(id<JavaUtilSet>)escapedTags;

- (void)close;

- (jint)read;

- (jint)readWithCharArray:(IOSCharArray *)cbuf
                  withInt:(jint)off
                  withInt:(jint)len;

#pragma mark Package-Private

+ (jint)getInitialBufferSize;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter_initWithJavaIoReader_(OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter *self, JavaIoReader *source);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter *new_OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter_initWithJavaIoReader_(JavaIoReader *source) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter *create_OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter_initWithJavaIoReader_(JavaIoReader *source);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter_initWithJavaIoReader_withJavaUtilSet_(OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter *self, JavaIoReader *source, id<JavaUtilSet> escapedTags);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter *new_OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter_initWithJavaIoReader_withJavaUtilSet_(JavaIoReader *source, id<JavaUtilSet> escapedTags) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter *create_OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter_initWithJavaIoReader_withJavaUtilSet_(JavaIoReader *source, id<JavaUtilSet> escapedTags);

FOUNDATION_EXPORT jint OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter_getInitialBufferSize(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterHTMLStripCharFilter")
