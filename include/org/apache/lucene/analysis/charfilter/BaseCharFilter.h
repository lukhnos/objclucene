//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/charfilter/BaseCharFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterBaseCharFilter")
#ifdef RESTRICT_OrgApacheLuceneAnalysisCharfilterBaseCharFilter
#define INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterBaseCharFilter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterBaseCharFilter 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisCharfilterBaseCharFilter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisCharfilterBaseCharFilter_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterBaseCharFilter || defined(INCLUDE_OrgApacheLuceneAnalysisCharfilterBaseCharFilter))
#define OrgApacheLuceneAnalysisCharfilterBaseCharFilter_

#define RESTRICT_OrgApacheLuceneAnalysisCharFilter 1
#define INCLUDE_OrgApacheLuceneAnalysisCharFilter 1
#include "org/apache/lucene/analysis/CharFilter.h"

@class JavaIoReader;

/*!
 @brief Base utility class for implementing a <code>CharFilter</code>.
 You subclass this, and then record mappings by calling 
 <code>addOffCorrectMap</code>, and then invoke the correct
  method to correct an offset.
 */
@interface OrgApacheLuceneAnalysisCharfilterBaseCharFilter : OrgApacheLuceneAnalysisCharFilter

#pragma mark Public

- (instancetype __nonnull)initWithJavaIoReader:(JavaIoReader *)inArg;

#pragma mark Protected

/*!
 @brief <p>
    Adds an offset correction mapping at the given output stream offset.
 </p>
  <p>
    Assumption: the offset given with each successive call to this method
    will not be smaller than the offset given at the previous invocation. 
 </p>
 @param off The output stream offset at which to apply the correction
 @param cumulativeDiff The input offset is given by adding this                        to the output offset
 */
- (void)addOffCorrectMapWithInt:(jint)off
                        withInt:(jint)cumulativeDiff;

/*!
 @brief Retrieve the corrected offset.
 */
- (jint)correctWithInt:(jint)currentOff;

- (jint)getLastCumulativeDiff;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisCharfilterBaseCharFilter)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisCharfilterBaseCharFilter_initWithJavaIoReader_(OrgApacheLuceneAnalysisCharfilterBaseCharFilter *self, JavaIoReader *inArg);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisCharfilterBaseCharFilter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisCharfilterBaseCharFilter")
