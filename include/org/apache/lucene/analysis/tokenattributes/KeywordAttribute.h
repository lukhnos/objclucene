//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/analysis/tokenattributes/KeywordAttribute.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisTokenattributesKeywordAttribute")
#ifdef RESTRICT_OrgApacheLuceneAnalysisTokenattributesKeywordAttribute
#define INCLUDE_ALL_OrgApacheLuceneAnalysisTokenattributesKeywordAttribute 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisTokenattributesKeywordAttribute 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisTokenattributesKeywordAttribute

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisTokenattributesKeywordAttribute_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisTokenattributesKeywordAttribute || defined(INCLUDE_OrgApacheLuceneAnalysisTokenattributesKeywordAttribute))
#define OrgApacheLuceneAnalysisTokenattributesKeywordAttribute_

#define RESTRICT_OrgApacheLuceneUtilAttribute 1
#define INCLUDE_OrgApacheLuceneUtilAttribute 1
#include "org/apache/lucene/util/Attribute.h"

/*!
 @brief This attribute can be used to mark a token as a keyword.Keyword aware 
 <code>TokenStream</code>s can decide to modify a token based on the return value
  of <code>isKeyword()</code> if the token is modified.
 Stemming filters for
  instance can use this attribute to conditionally skip a term if 
 <code>isKeyword()</code> returns <code>true</code>.
 */
@protocol OrgApacheLuceneAnalysisTokenattributesKeywordAttribute < OrgApacheLuceneUtilAttribute, JavaObject >

/*!
 @brief Returns <code>true</code> if the current token is a keyword, otherwise 
 <code>false</code>
 @return <code>true</code> if the current token is a keyword, otherwise
          <code>false</code>
 - seealso: #setKeyword(boolean)
 */
- (jboolean)isKeyword;

/*!
 @brief Marks the current token as keyword if set to <code>true</code>.
 @param isKeyword <code>
  true </code>  if the current token is a keyword, otherwise            <code>
  false </code> .
 - seealso: #isKeyword()
 */
- (void)setKeywordWithBoolean:(jboolean)isKeyword;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisTokenattributesKeywordAttribute)

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisTokenattributesKeywordAttribute)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisTokenattributesKeywordAttribute")
