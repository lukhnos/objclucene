//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./core/src/java/org/apache/lucene/analysis/tokenattributes/CharTermAttributeImpl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisTokenattributesCharTermAttributeImpl")
#ifdef RESTRICT_OrgApacheLuceneAnalysisTokenattributesCharTermAttributeImpl
#define INCLUDE_ALL_OrgApacheLuceneAnalysisTokenattributesCharTermAttributeImpl 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisTokenattributesCharTermAttributeImpl 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisTokenattributesCharTermAttributeImpl

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisTokenattributesCharTermAttributeImpl_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisTokenattributesCharTermAttributeImpl || defined(INCLUDE_OrgApacheLuceneAnalysisTokenattributesCharTermAttributeImpl))
#define OrgApacheLuceneAnalysisTokenattributesCharTermAttributeImpl_

#define RESTRICT_OrgApacheLuceneUtilAttributeImpl 1
#define INCLUDE_OrgApacheLuceneUtilAttributeImpl 1
#include "org/apache/lucene/util/AttributeImpl.h"

#define RESTRICT_OrgApacheLuceneAnalysisTokenattributesCharTermAttribute 1
#define INCLUDE_OrgApacheLuceneAnalysisTokenattributesCharTermAttribute 1
#include "org/apache/lucene/analysis/tokenattributes/CharTermAttribute.h"

#define RESTRICT_OrgApacheLuceneAnalysisTokenattributesTermToBytesRefAttribute 1
#define INCLUDE_OrgApacheLuceneAnalysisTokenattributesTermToBytesRefAttribute 1
#include "org/apache/lucene/analysis/tokenattributes/TermToBytesRefAttribute.h"

@class IOSCharArray;
@class JavaLangStringBuilder;
@class OrgApacheLuceneUtilBytesRef;
@class OrgApacheLuceneUtilBytesRefBuilder;
@protocol JavaLangCharSequence;
@protocol JavaUtilStreamIntStream;
@protocol OrgApacheLuceneUtilAttributeReflector;

/*!
 @brief Default implementation of <code>CharTermAttribute</code>.
 */
@interface OrgApacheLuceneAnalysisTokenattributesCharTermAttributeImpl : OrgApacheLuceneUtilAttributeImpl < OrgApacheLuceneAnalysisTokenattributesCharTermAttribute, OrgApacheLuceneAnalysisTokenattributesTermToBytesRefAttribute, NSCopying > {
 @public
  /*!
   @brief May be used by subclasses to convert to different charsets / encodings for implementing <code>getBytesRef()</code>.
   */
  OrgApacheLuceneUtilBytesRefBuilder *builder_;
}

#pragma mark Public

/*!
 @brief Initialize this attribute with empty term text
 */
- (instancetype __nonnull)init;

- (id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)appendWithChar:(jchar)c;

- (id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)appendWithJavaLangCharSequence:(id<JavaLangCharSequence>)csq;

- (id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)appendWithJavaLangCharSequence:(id<JavaLangCharSequence>)csq
                                                                                      withInt:(jint)start
                                                                                      withInt:(jint)end;

- (id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)appendWithOrgApacheLuceneAnalysisTokenattributesCharTermAttribute:(id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)ta;

- (id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)appendWithNSString:(NSString *)s;

- (id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)appendWithJavaLangStringBuilder:(JavaLangStringBuilder *)s;

- (IOSCharArray *)buffer;

- (jchar)charAtWithInt:(jint)index;

- (void)clear;

- (OrgApacheLuceneAnalysisTokenattributesCharTermAttributeImpl *)java_clone;

- (void)copyBufferWithCharArray:(IOSCharArray *)buffer
                        withInt:(jint)offset
                        withInt:(jint)length OBJC_METHOD_FAMILY_NONE;

- (void)copyToWithOrgApacheLuceneUtilAttributeImpl:(OrgApacheLuceneUtilAttributeImpl *)target OBJC_METHOD_FAMILY_NONE;

- (jboolean)isEqual:(id)other;

- (OrgApacheLuceneUtilBytesRef *)getBytesRef;

- (NSUInteger)hash;

- (jint)java_length;

- (void)reflectWithWithOrgApacheLuceneUtilAttributeReflector:(id<OrgApacheLuceneUtilAttributeReflector>)reflector;

- (IOSCharArray *)resizeBufferWithInt:(jint)newSize;

- (id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)setEmpty;

- (id<OrgApacheLuceneAnalysisTokenattributesCharTermAttribute>)setLengthWithInt:(jint)length;

- (id<JavaLangCharSequence>)subSequenceFrom:(jint)start
                                         to:(jint)end;

/*!
 @brief Returns solely the term text as specified by the 
 <code>CharSequence</code> interface.
 <p>This method changed the behavior with Lucene 3.1,
  before it returned a String representation of the whole
  term with all attributes.
  This affects especially the 
 <code>org.apache.lucene.analysis.Token</code> subclass.
 */
- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisTokenattributesCharTermAttributeImpl)

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisTokenattributesCharTermAttributeImpl, builder_, OrgApacheLuceneUtilBytesRefBuilder *)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisTokenattributesCharTermAttributeImpl_init(OrgApacheLuceneAnalysisTokenattributesCharTermAttributeImpl *self);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisTokenattributesCharTermAttributeImpl *new_OrgApacheLuceneAnalysisTokenattributesCharTermAttributeImpl_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisTokenattributesCharTermAttributeImpl *create_OrgApacheLuceneAnalysisTokenattributesCharTermAttributeImpl_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisTokenattributesCharTermAttributeImpl)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisTokenattributesCharTermAttributeImpl")
