//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballPorterFilterFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisSnowballSnowballPorterFilterFactory")
#ifdef RESTRICT_OrgApacheLuceneAnalysisSnowballSnowballPorterFilterFactory
#define INCLUDE_ALL_OrgApacheLuceneAnalysisSnowballSnowballPorterFilterFactory 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisSnowballSnowballPorterFilterFactory 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisSnowballSnowballPorterFilterFactory

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisSnowballSnowballPorterFilterFactory_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisSnowballSnowballPorterFilterFactory || defined(INCLUDE_OrgApacheLuceneAnalysisSnowballSnowballPorterFilterFactory))
#define OrgApacheLuceneAnalysisSnowballSnowballPorterFilterFactory_

#define RESTRICT_OrgApacheLuceneAnalysisUtilTokenFilterFactory 1
#define INCLUDE_OrgApacheLuceneAnalysisUtilTokenFilterFactory 1
#include "org/apache/lucene/analysis/util/TokenFilterFactory.h"

#define RESTRICT_OrgApacheLuceneAnalysisUtilResourceLoaderAware 1
#define INCLUDE_OrgApacheLuceneAnalysisUtilResourceLoaderAware 1
#include "org/apache/lucene/analysis/util/ResourceLoaderAware.h"

@class OrgApacheLuceneAnalysisTokenFilter;
@class OrgApacheLuceneAnalysisTokenStream;
@protocol JavaUtilMap;
@protocol OrgApacheLuceneAnalysisUtilResourceLoader;

/*!
 @brief Factory for <code>SnowballFilter</code>, with configurable language
 <p>
  Note: Use of the "Lovins" stemmer is not recommended, as it is implemented with reflection.
 <pre class="prettyprint">
  &lt;fieldType name="text_snowballstem" class="solr.TextField" positionIncrementGap="100"&gt;
    &lt;analyzer&gt;
      &lt;tokenizer class="solr.StandardTokenizerFactory"/&gt;
      &lt;filter class="solr.LowerCaseFilterFactory"/&gt;
      &lt;filter class="solr.SnowballPorterFilterFactory" protected="protectedkeyword.txt" language="English"/&gt;
    &lt;/analyzer&gt;
  &lt;/fieldType&gt;
@endcode
 */
@interface OrgApacheLuceneAnalysisSnowballSnowballPorterFilterFactory : OrgApacheLuceneAnalysisUtilTokenFilterFactory < OrgApacheLuceneAnalysisUtilResourceLoaderAware >
@property (readonly, copy, class) NSString *PROTECTED_TOKENS NS_SWIFT_NAME(PROTECTED_TOKENS);

#pragma mark Public

/*!
 @brief Creates a new SnowballPorterFilterFactory
 */
- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)args;

- (OrgApacheLuceneAnalysisTokenFilter *)createWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input;

- (void)informWithOrgApacheLuceneAnalysisUtilResourceLoader:(id<OrgApacheLuceneAnalysisUtilResourceLoader>)loader;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisSnowballSnowballPorterFilterFactory)

inline NSString *OrgApacheLuceneAnalysisSnowballSnowballPorterFilterFactory_get_PROTECTED_TOKENS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *OrgApacheLuceneAnalysisSnowballSnowballPorterFilterFactory_PROTECTED_TOKENS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheLuceneAnalysisSnowballSnowballPorterFilterFactory, PROTECTED_TOKENS, NSString *)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisSnowballSnowballPorterFilterFactory_initWithJavaUtilMap_(OrgApacheLuceneAnalysisSnowballSnowballPorterFilterFactory *self, id<JavaUtilMap> args);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisSnowballSnowballPorterFilterFactory *new_OrgApacheLuceneAnalysisSnowballSnowballPorterFilterFactory_initWithJavaUtilMap_(id<JavaUtilMap> args) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisSnowballSnowballPorterFilterFactory *create_OrgApacheLuceneAnalysisSnowballSnowballPorterFilterFactory_initWithJavaUtilMap_(id<JavaUtilMap> args);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisSnowballSnowballPorterFilterFactory)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisSnowballSnowballPorterFilterFactory")
