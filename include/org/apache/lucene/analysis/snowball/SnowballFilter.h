//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/snowball/SnowballFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisSnowballSnowballFilter")
#ifdef RESTRICT_OrgApacheLuceneAnalysisSnowballSnowballFilter
#define INCLUDE_ALL_OrgApacheLuceneAnalysisSnowballSnowballFilter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisSnowballSnowballFilter 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisSnowballSnowballFilter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisSnowballSnowballFilter_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisSnowballSnowballFilter || defined(INCLUDE_OrgApacheLuceneAnalysisSnowballSnowballFilter))
#define OrgApacheLuceneAnalysisSnowballSnowballFilter_

#define RESTRICT_OrgApacheLuceneAnalysisTokenFilter 1
#define INCLUDE_OrgApacheLuceneAnalysisTokenFilter 1
#include "org/apache/lucene/analysis/TokenFilter.h"

@class OrgApacheLuceneAnalysisTokenStream;
@class OrgTartarusSnowballSnowballProgram;

/*!
 @brief A filter that stems words using a Snowball-generated stemmer.
 Available stemmers are listed in <code>org.tartarus.snowball.ext</code>.
  <p><b>NOTE</b>: SnowballFilter expects lowercased text. 
 <ul>
   <li>For the Turkish language, see <code>TurkishLowerCaseFilter</code>.
   <li>For other languages, see <code>LowerCaseFilter</code>.
  </ul>
  
 <p>
  Note: This filter is aware of the <code>KeywordAttribute</code>. To prevent
  certain terms from being passed to the stemmer 
 <code>KeywordAttribute.isKeyword()</code> should be set to <code>true</code>
  in a previous <code>TokenStream</code>.
  Note: For including the original term as well as the stemmed version, see 
 <code>org.apache.lucene.analysis.miscellaneous.KeywordRepeatFilterFactory</code>
  </p>
 */
@interface OrgApacheLuceneAnalysisSnowballSnowballFilter : OrgApacheLuceneAnalysisTokenFilter

#pragma mark Public

- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input
                              withOrgTartarusSnowballSnowballProgram:(OrgTartarusSnowballSnowballProgram *)stemmer;

/*!
 @brief Construct the named stemming filter.
 Available stemmers are listed in <code>org.tartarus.snowball.ext</code>.
  The name of a stemmer is the part of the class name before "Stemmer",
  e.g., the stemmer in <code>org.tartarus.snowball.ext.EnglishStemmer</code> is named "English".
 @param inArg the input tokens to stem
 @param name the name of a stemmer
 */
- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)inArg
                                                        withNSString:(NSString *)name;

/*!
 @brief Returns the next input Token, after being stemmed
 */
- (jboolean)incrementToken;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisSnowballSnowballFilter)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisSnowballSnowballFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgTartarusSnowballSnowballProgram_(OrgApacheLuceneAnalysisSnowballSnowballFilter *self, OrgApacheLuceneAnalysisTokenStream *input, OrgTartarusSnowballSnowballProgram *stemmer);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisSnowballSnowballFilter *new_OrgApacheLuceneAnalysisSnowballSnowballFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgTartarusSnowballSnowballProgram_(OrgApacheLuceneAnalysisTokenStream *input, OrgTartarusSnowballSnowballProgram *stemmer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisSnowballSnowballFilter *create_OrgApacheLuceneAnalysisSnowballSnowballFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgTartarusSnowballSnowballProgram_(OrgApacheLuceneAnalysisTokenStream *input, OrgTartarusSnowballSnowballProgram *stemmer);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisSnowballSnowballFilter_initWithOrgApacheLuceneAnalysisTokenStream_withNSString_(OrgApacheLuceneAnalysisSnowballSnowballFilter *self, OrgApacheLuceneAnalysisTokenStream *inArg, NSString *name);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisSnowballSnowballFilter *new_OrgApacheLuceneAnalysisSnowballSnowballFilter_initWithOrgApacheLuceneAnalysisTokenStream_withNSString_(OrgApacheLuceneAnalysisTokenStream *inArg, NSString *name) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisSnowballSnowballFilter *create_OrgApacheLuceneAnalysisSnowballSnowballFilter_initWithOrgApacheLuceneAnalysisTokenStream_withNSString_(OrgApacheLuceneAnalysisTokenStream *inArg, NSString *name);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisSnowballSnowballFilter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisSnowballSnowballFilter")
