//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/payloads/TokenOffsetPayloadTokenFilterFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilterFactory")
#ifdef RESTRICT_OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilterFactory
#define INCLUDE_ALL_OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilterFactory 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilterFactory 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilterFactory

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilterFactory_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilterFactory || defined(INCLUDE_OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilterFactory))
#define OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilterFactory_

#define RESTRICT_OrgApacheLuceneAnalysisUtilTokenFilterFactory 1
#define INCLUDE_OrgApacheLuceneAnalysisUtilTokenFilterFactory 1
#include "org/apache/lucene/analysis/util/TokenFilterFactory.h"

@class OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilter;
@class OrgApacheLuceneAnalysisTokenStream;
@protocol JavaUtilMap;

/*!
 @brief Factory for <code>TokenOffsetPayloadTokenFilter</code>.
 <pre class="prettyprint">
  &lt;fieldType name="text_tokenoffset" class="solr.TextField" positionIncrementGap="100"&gt;
    &lt;analyzer&gt;
      &lt;tokenizer class="solr.WhitespaceTokenizerFactory"/&gt;
      &lt;filter class="solr.TokenOffsetPayloadTokenFilterFactory"/&gt;
    &lt;/analyzer&gt;
  &lt;/fieldType&gt;
@endcode
 */
@interface OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilterFactory : OrgApacheLuceneAnalysisUtilTokenFilterFactory

#pragma mark Public

/*!
 @brief Creates a new TokenOffsetPayloadTokenFilterFactory
 */
- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)args;

- (OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilter *)createWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilterFactory)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilterFactory_initWithJavaUtilMap_(OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilterFactory *self, id<JavaUtilMap> args);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilterFactory *new_OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilterFactory_initWithJavaUtilMap_(id<JavaUtilMap> args) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilterFactory *create_OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilterFactory_initWithJavaUtilMap_(id<JavaUtilMap> args);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilterFactory)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisPayloadsTokenOffsetPayloadTokenFilterFactory")
