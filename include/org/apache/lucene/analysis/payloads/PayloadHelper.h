//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/payloads/PayloadHelper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisPayloadsPayloadHelper")
#ifdef RESTRICT_OrgApacheLuceneAnalysisPayloadsPayloadHelper
#define INCLUDE_ALL_OrgApacheLuceneAnalysisPayloadsPayloadHelper 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisPayloadsPayloadHelper 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisPayloadsPayloadHelper

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisPayloadsPayloadHelper_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisPayloadsPayloadHelper || defined(INCLUDE_OrgApacheLuceneAnalysisPayloadsPayloadHelper))
#define OrgApacheLuceneAnalysisPayloadsPayloadHelper_

@class IOSByteArray;

/*!
 @brief Utility methods for encoding payloads.
 */
@interface OrgApacheLuceneAnalysisPayloadsPayloadHelper : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 - seealso: #decodeFloat(byte[], int)
 - seealso: #encodeFloat(float)
 @return the decoded float
 */
+ (jfloat)decodeFloatWithByteArray:(IOSByteArray *)bytes;

/*!
 @brief Decode the payload that was encoded using <code>encodeFloat(float)</code>.
 NOTE: the length of the array must be at least offset + 4 long.
 @param bytes The bytes to decode
 @param offset The offset into the array.
 @return The float that was encoded
 - seealso: #encodeFloat(float)
 */
+ (jfloat)decodeFloatWithByteArray:(IOSByteArray *)bytes
                           withInt:(jint)offset;

+ (jint)decodeIntWithByteArray:(IOSByteArray *)bytes
                       withInt:(jint)offset;

+ (IOSByteArray *)encodeFloatWithFloat:(jfloat)payload;

+ (IOSByteArray *)encodeFloatWithFloat:(jfloat)payload
                         withByteArray:(IOSByteArray *)data
                               withInt:(jint)offset;

+ (IOSByteArray *)encodeIntWithInt:(jint)payload;

+ (IOSByteArray *)encodeIntWithInt:(jint)payload
                     withByteArray:(IOSByteArray *)data
                           withInt:(jint)offset;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisPayloadsPayloadHelper)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisPayloadsPayloadHelper_init(OrgApacheLuceneAnalysisPayloadsPayloadHelper *self);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPayloadsPayloadHelper *new_OrgApacheLuceneAnalysisPayloadsPayloadHelper_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisPayloadsPayloadHelper *create_OrgApacheLuceneAnalysisPayloadsPayloadHelper_init(void);

FOUNDATION_EXPORT IOSByteArray *OrgApacheLuceneAnalysisPayloadsPayloadHelper_encodeFloatWithFloat_(jfloat payload);

FOUNDATION_EXPORT IOSByteArray *OrgApacheLuceneAnalysisPayloadsPayloadHelper_encodeFloatWithFloat_withByteArray_withInt_(jfloat payload, IOSByteArray *data, jint offset);

FOUNDATION_EXPORT IOSByteArray *OrgApacheLuceneAnalysisPayloadsPayloadHelper_encodeIntWithInt_(jint payload);

FOUNDATION_EXPORT IOSByteArray *OrgApacheLuceneAnalysisPayloadsPayloadHelper_encodeIntWithInt_withByteArray_withInt_(jint payload, IOSByteArray *data, jint offset);

FOUNDATION_EXPORT jfloat OrgApacheLuceneAnalysisPayloadsPayloadHelper_decodeFloatWithByteArray_(IOSByteArray *bytes);

FOUNDATION_EXPORT jfloat OrgApacheLuceneAnalysisPayloadsPayloadHelper_decodeFloatWithByteArray_withInt_(IOSByteArray *bytes, jint offset);

FOUNDATION_EXPORT jint OrgApacheLuceneAnalysisPayloadsPayloadHelper_decodeIntWithByteArray_withInt_(IOSByteArray *bytes, jint offset);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisPayloadsPayloadHelper)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisPayloadsPayloadHelper")
