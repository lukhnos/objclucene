//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/util/ElisionFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisUtilElisionFilter")
#ifdef RESTRICT_OrgApacheLuceneAnalysisUtilElisionFilter
#define INCLUDE_ALL_OrgApacheLuceneAnalysisUtilElisionFilter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisUtilElisionFilter 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisUtilElisionFilter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisUtilElisionFilter_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisUtilElisionFilter || defined(INCLUDE_OrgApacheLuceneAnalysisUtilElisionFilter))
#define OrgApacheLuceneAnalysisUtilElisionFilter_

#define RESTRICT_OrgApacheLuceneAnalysisTokenFilter 1
#define INCLUDE_OrgApacheLuceneAnalysisTokenFilter 1
#include "org/apache/lucene/analysis/TokenFilter.h"

@class OrgApacheLuceneAnalysisTokenStream;
@class OrgApacheLuceneAnalysisUtilCharArraySet;

/*!
 @brief Removes elisions from a <code>TokenStream</code>.For example, "l'avion" (the plane) will be
  tokenized as "avion" (plane).
 - seealso: <a href="http://fr.wikipedia.org/wiki/%C3%89lision">Elision in Wikipedia</a>
 */
@interface OrgApacheLuceneAnalysisUtilElisionFilter : OrgApacheLuceneAnalysisTokenFilter

#pragma mark Public

/*!
 @brief Constructs an elision filter with a Set of stop words
 @param input the source <code>TokenStream</code>
 @param articles a set of stopword articles
 */
- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)input
                         withOrgApacheLuceneAnalysisUtilCharArraySet:(OrgApacheLuceneAnalysisUtilCharArraySet *)articles;

/*!
 @brief Increments the <code>TokenStream</code> with a <code>CharTermAttribute</code> without elisioned start
 */
- (jboolean)incrementToken;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisUtilElisionFilter)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisUtilElisionFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisUtilCharArraySet_(OrgApacheLuceneAnalysisUtilElisionFilter *self, OrgApacheLuceneAnalysisTokenStream *input, OrgApacheLuceneAnalysisUtilCharArraySet *articles);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisUtilElisionFilter *new_OrgApacheLuceneAnalysisUtilElisionFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisUtilCharArraySet_(OrgApacheLuceneAnalysisTokenStream *input, OrgApacheLuceneAnalysisUtilCharArraySet *articles) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisUtilElisionFilter *create_OrgApacheLuceneAnalysisUtilElisionFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisUtilCharArraySet_(OrgApacheLuceneAnalysisTokenStream *input, OrgApacheLuceneAnalysisUtilCharArraySet *articles);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisUtilElisionFilter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisUtilElisionFilter")
