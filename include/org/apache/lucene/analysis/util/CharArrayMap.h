//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/util/CharArrayMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisUtilCharArrayMap")
#ifdef RESTRICT_OrgApacheLuceneAnalysisUtilCharArrayMap
#define INCLUDE_ALL_OrgApacheLuceneAnalysisUtilCharArrayMap 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisUtilCharArrayMap 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisUtilCharArrayMap
#ifdef INCLUDE_OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap
#define INCLUDE_OrgApacheLuceneAnalysisUtilCharArrayMap 1
#endif

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisUtilCharArrayMap_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisUtilCharArrayMap || defined(INCLUDE_OrgApacheLuceneAnalysisUtilCharArrayMap))
#define OrgApacheLuceneAnalysisUtilCharArrayMap_

#define RESTRICT_JavaUtilAbstractMap 1
#define INCLUDE_JavaUtilAbstractMap 1
#include "java/util/AbstractMap.h"

@class IOSCharArray;
@class IOSObjectArray;
@class OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet;
@class OrgApacheLuceneAnalysisUtilCharArraySet;
@protocol JavaLangCharSequence;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

/*!
 @brief A simple class that stores key Strings as char[]'s in a
  hash table.Note that this is not a general purpose
  class.
 For example, it cannot remove items from the
  map, nor does it resize its hash table to be smaller,
  etc.  It is designed to be quick to retrieve items
  by char[] keys without the necessity of converting
  to a String first.
 */
@interface OrgApacheLuceneAnalysisUtilCharArrayMap : JavaUtilAbstractMap {
 @public
  IOSObjectArray *keys_;
  IOSObjectArray *values_CharArrayMap_;
}

#pragma mark Public

/*!
 @brief Create map with enough capacity to hold startSize terms
 @param startSize the initial capacity
 @param ignoreCase <code>
  false </code>  if and only if the set should be case sensitive           otherwise 
  <code> true </code> .
 */
- (instancetype __nonnull)initWithInt:(jint)startSize
                          withBoolean:(jboolean)ignoreCase;

/*!
 @brief Creates a map from the mappings in another map.
 @param c a map whose mappings to be copied
 @param ignoreCase <code>
  false </code>  if and only if the set should be case sensitive           otherwise 
  <code> true </code> .
 */
- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)c
                                  withBoolean:(jboolean)ignoreCase;

/*!
 @brief Clears all entries in this map.This method is supported for reusing, but not <code>Map.remove</code>.
 */
- (void)clear;

/*!
 @brief true if the <code>len</code> chars of <code>text</code> starting at <code>off</code>
  are in the <code>keySet()</code>
 */
- (jboolean)containsKeyWithCharArray:(IOSCharArray *)text
                             withInt:(jint)off
                             withInt:(jint)len;

/*!
 @brief true if the <code>CharSequence</code> is in the <code>keySet()</code>
 */
- (jboolean)containsKeyWithJavaLangCharSequence:(id<JavaLangCharSequence>)cs;

- (jboolean)containsKeyWithId:(id)o;

/*!
 @brief Returns a copy of the given map as a <code>CharArrayMap</code>.If the given map
  is a <code>CharArrayMap</code> the ignoreCase property will be preserved.
 @param map a map to copy
 @return a copy of the given map as a <code>CharArrayMap</code>. If the given map
          is a <code>CharArrayMap</code> the ignoreCase property as well as the
          matchVersion will be of the given map will be preserved.
 */
+ (OrgApacheLuceneAnalysisUtilCharArrayMap *)copy__WithJavaUtilMap:(id<JavaUtilMap>)map OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Returns an empty, unmodifiable map.
 */
+ (OrgApacheLuceneAnalysisUtilCharArrayMap *)emptyMap;

- (OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet *)entrySet;

/*!
 @brief returns the value of the mapping of <code>len</code> chars of <code>text</code>
  starting at <code>off</code>
 */
- (id)getWithCharArray:(IOSCharArray *)text
               withInt:(jint)off
               withInt:(jint)len;

/*!
 @brief returns the value of the mapping of the chars inside this <code>CharSequence</code>
 */
- (id)getWithJavaLangCharSequence:(id<JavaLangCharSequence>)cs;

- (id)getWithId:(id)o;

/*!
 @brief Returns an <code>CharArraySet</code> view on the map's keys.
 The set will use the same <code>matchVersion</code> as this map.
 */
- (OrgApacheLuceneAnalysisUtilCharArraySet *)keySet;

/*!
 @brief Add the given mapping.
 If ignoreCase is true for this Set, the text array will be directly modified.
  The user should never modify this text array after calling this method.
 */
- (id)putWithCharArray:(IOSCharArray *)text
                withId:(id)value;

/*!
 @brief Add the given mapping.
 */
- (id)putWithJavaLangCharSequence:(id<JavaLangCharSequence>)text
                           withId:(id)value;

- (id)putWithId:(id)o
         withId:(id)value;

/*!
 @brief Add the given mapping.
 */
- (id)putWithNSString:(NSString *)text
               withId:(id)value;

- (id)removeWithId:(id)key;

- (jint)size;

- (NSString *)description;

/*!
 @brief Returns an unmodifiable <code>CharArrayMap</code>.This allows to provide
  unmodifiable views of internal map for "read-only" use.
 @param map a map for which the unmodifiable map is returned.
 @return an new unmodifiable <code>CharArrayMap</code>.
 @throw NullPointerException
 if the given map is <code>null</code>.
 */
+ (OrgApacheLuceneAnalysisUtilCharArrayMap *)unmodifiableMapWithOrgApacheLuceneAnalysisUtilCharArrayMap:(OrgApacheLuceneAnalysisUtilCharArrayMap *)map;

#pragma mark Package-Private

- (OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet *)createEntrySet;

- (id<JavaUtilSet>)originalKeySet;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneAnalysisUtilCharArrayMap)

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisUtilCharArrayMap, keys_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisUtilCharArrayMap, values_CharArrayMap_, IOSObjectArray *)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisUtilCharArrayMap_initWithInt_withBoolean_(OrgApacheLuceneAnalysisUtilCharArrayMap *self, jint startSize, jboolean ignoreCase);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisUtilCharArrayMap *new_OrgApacheLuceneAnalysisUtilCharArrayMap_initWithInt_withBoolean_(jint startSize, jboolean ignoreCase) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisUtilCharArrayMap *create_OrgApacheLuceneAnalysisUtilCharArrayMap_initWithInt_withBoolean_(jint startSize, jboolean ignoreCase);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisUtilCharArrayMap_initWithJavaUtilMap_withBoolean_(OrgApacheLuceneAnalysisUtilCharArrayMap *self, id<JavaUtilMap> c, jboolean ignoreCase);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisUtilCharArrayMap *new_OrgApacheLuceneAnalysisUtilCharArrayMap_initWithJavaUtilMap_withBoolean_(id<JavaUtilMap> c, jboolean ignoreCase) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisUtilCharArrayMap *create_OrgApacheLuceneAnalysisUtilCharArrayMap_initWithJavaUtilMap_withBoolean_(id<JavaUtilMap> c, jboolean ignoreCase);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisUtilCharArrayMap *OrgApacheLuceneAnalysisUtilCharArrayMap_unmodifiableMapWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap *map);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisUtilCharArrayMap *OrgApacheLuceneAnalysisUtilCharArrayMap_copy__WithJavaUtilMap_(id<JavaUtilMap> map);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisUtilCharArrayMap *OrgApacheLuceneAnalysisUtilCharArrayMap_emptyMap(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisUtilCharArrayMap)

#endif

#if !defined (OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisUtilCharArrayMap || defined(INCLUDE_OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator))
#define OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator_

#define RESTRICT_JavaUtilIterator 1
#define INCLUDE_JavaUtilIterator 1
#include "java/util/Iterator.h"

@class IOSCharArray;
@protocol JavaUtilFunctionConsumer;
@protocol JavaUtilMap_Entry;

/*!
 @brief public iterator class so efficient methods are exposed to users
 */
@interface OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator : NSObject < JavaUtilIterator >

#pragma mark Public

/*!
 @brief returns the value associated with the last key returned
 */
- (id)currentValue;

- (jboolean)hasNext;

/*!
 @brief use nextCharArray() + currentValue() for better efficiency.
 */
- (id<JavaUtilMap_Entry>)next;

/*!
 @brief gets the next key...do not modify the returned char[]
 */
- (IOSCharArray *)nextKey;

/*!
 @brief gets the next key as a newly created String object
 */
- (NSString *)nextKeyString;

- (void)remove;

/*!
 @brief sets the value associated with the last key returned
 */
- (id)setValueWithId:(id)value;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator)

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator)

#endif

#if !defined (OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisUtilCharArrayMap || defined(INCLUDE_OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet))
#define OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet_

#define RESTRICT_JavaUtilAbstractSet 1
#define INCLUDE_JavaUtilAbstractSet 1
#include "java/util/AbstractSet.h"

@class OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator;

/*!
 @brief public EntrySet class so efficient methods are exposed to users
 */
@interface OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet : JavaUtilAbstractSet

#pragma mark Public

- (void)clear;

- (jboolean)containsWithId:(id)o;

- (OrgApacheLuceneAnalysisUtilCharArrayMap_EntryIterator *)iterator;

- (jboolean)removeWithId:(id)o;

- (jint)size;

#pragma mark Package-Private

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet)

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet)

#endif

#if !defined (OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisUtilCharArrayMap || defined(INCLUDE_OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap))
#define OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap_

@class IOSCharArray;
@class OrgApacheLuceneAnalysisUtilCharArrayMap;
@class OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet;
@protocol JavaLangCharSequence;
@protocol JavaUtilMap;

@interface OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap : OrgApacheLuceneAnalysisUtilCharArrayMap

#pragma mark Public

- (void)clear;

- (id)putWithCharArray:(IOSCharArray *)text
                withId:(id)val;

- (id)putWithJavaLangCharSequence:(id<JavaLangCharSequence>)text
                           withId:(id)val;

- (id)putWithId:(id)o
         withId:(id)val;

- (id)putWithNSString:(NSString *)text
               withId:(id)val;

- (id)removeWithId:(id)key;

#pragma mark Package-Private

- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisUtilCharArrayMap:(OrgApacheLuceneAnalysisUtilCharArrayMap *)map;

- (OrgApacheLuceneAnalysisUtilCharArrayMap_EntrySet *)createEntrySet;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithInt:(jint)arg0
                          withBoolean:(jboolean)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)arg0
                                  withBoolean:(jboolean)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap *self, OrgApacheLuceneAnalysisUtilCharArrayMap *map);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap *new_OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap *map) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap *create_OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap_initWithOrgApacheLuceneAnalysisUtilCharArrayMap_(OrgApacheLuceneAnalysisUtilCharArrayMap *map);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisUtilCharArrayMap_UnmodifiableCharArrayMap)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisUtilCharArrayMap")
