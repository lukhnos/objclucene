//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/en/KStemmer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisEnKStemmer")
#ifdef RESTRICT_OrgApacheLuceneAnalysisEnKStemmer
#define INCLUDE_ALL_OrgApacheLuceneAnalysisEnKStemmer 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisEnKStemmer 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisEnKStemmer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisEnKStemmer_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisEnKStemmer || defined(INCLUDE_OrgApacheLuceneAnalysisEnKStemmer))
#define OrgApacheLuceneAnalysisEnKStemmer_

@class IOSCharArray;
@class OrgApacheLuceneAnalysisEnKStemmer_DictEntry;
@protocol JavaLangCharSequence;

/*!
 @brief This class implements the Kstem algorithm
 */
@interface OrgApacheLuceneAnalysisEnKStemmer : NSObject {
 @public
  OrgApacheLuceneAnalysisEnKStemmer_DictEntry *matchedEntry_;
  NSString *result_;
}

#pragma mark Package-Private

- (instancetype __nonnull)init;

- (id<JavaLangCharSequence>)asCharSequence;

/*!
 @brief Returns the result of the stem (assuming the word was changed) as a String.
 */
- (NSString *)asString;

- (IOSCharArray *)getChars;

- (jint)getLength;

- (NSString *)getString;

/*!
 @brief Stems the text in the token.Returns true if changed.
 */
- (jboolean)stemWithCharArray:(IOSCharArray *)term
                      withInt:(jint)len;

- (NSString *)stemWithNSString:(NSString *)term;

@end

J2OBJC_STATIC_INIT(OrgApacheLuceneAnalysisEnKStemmer)

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisEnKStemmer, matchedEntry_, OrgApacheLuceneAnalysisEnKStemmer_DictEntry *)
J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisEnKStemmer, result_, NSString *)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisEnKStemmer_init(OrgApacheLuceneAnalysisEnKStemmer *self);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisEnKStemmer *new_OrgApacheLuceneAnalysisEnKStemmer_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisEnKStemmer *create_OrgApacheLuceneAnalysisEnKStemmer_init(void);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisEnKStemmer)

#endif

#if !defined (OrgApacheLuceneAnalysisEnKStemmer_DictEntry_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisEnKStemmer || defined(INCLUDE_OrgApacheLuceneAnalysisEnKStemmer_DictEntry))
#define OrgApacheLuceneAnalysisEnKStemmer_DictEntry_

@interface OrgApacheLuceneAnalysisEnKStemmer_DictEntry : NSObject {
 @public
  jboolean exception_;
  NSString *root_;
}

#pragma mark Package-Private

- (instancetype __nonnull)initWithNSString:(NSString *)root
                               withBoolean:(jboolean)isException;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisEnKStemmer_DictEntry)

J2OBJC_FIELD_SETTER(OrgApacheLuceneAnalysisEnKStemmer_DictEntry, root_, NSString *)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisEnKStemmer_DictEntry_initWithNSString_withBoolean_(OrgApacheLuceneAnalysisEnKStemmer_DictEntry *self, NSString *root, jboolean isException);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisEnKStemmer_DictEntry *new_OrgApacheLuceneAnalysisEnKStemmer_DictEntry_initWithNSString_withBoolean_(NSString *root, jboolean isException) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisEnKStemmer_DictEntry *create_OrgApacheLuceneAnalysisEnKStemmer_DictEntry_initWithNSString_withBoolean_(NSString *root, jboolean isException);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisEnKStemmer_DictEntry)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisEnKStemmer")
