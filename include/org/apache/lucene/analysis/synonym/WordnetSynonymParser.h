//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/synonym/WordnetSynonymParser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisSynonymWordnetSynonymParser")
#ifdef RESTRICT_OrgApacheLuceneAnalysisSynonymWordnetSynonymParser
#define INCLUDE_ALL_OrgApacheLuceneAnalysisSynonymWordnetSynonymParser 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisSynonymWordnetSynonymParser 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisSynonymWordnetSynonymParser

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisSynonymWordnetSynonymParser_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisSynonymWordnetSynonymParser || defined(INCLUDE_OrgApacheLuceneAnalysisSynonymWordnetSynonymParser))
#define OrgApacheLuceneAnalysisSynonymWordnetSynonymParser_

#define RESTRICT_OrgApacheLuceneAnalysisSynonymSynonymMap 1
#define INCLUDE_OrgApacheLuceneAnalysisSynonymSynonymMap_Parser 1
#include "org/apache/lucene/analysis/synonym/SynonymMap.h"

@class JavaIoReader;
@class OrgApacheLuceneAnalysisAnalyzer;

/*!
 @brief Parser for wordnet prolog format
 <p>
  See http://wordnet.princeton.edu/man/prologdb.5WN.html for a description of the format.
 */
@interface OrgApacheLuceneAnalysisSynonymWordnetSynonymParser : OrgApacheLuceneAnalysisSynonymSynonymMap_Parser

#pragma mark Public

- (instancetype __nonnull)initWithBoolean:(jboolean)dedup
                              withBoolean:(jboolean)expand
      withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)analyzer;

- (void)parseWithJavaIoReader:(JavaIoReader *)inArg;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithBoolean:(jboolean)arg0
      withOrgApacheLuceneAnalysisAnalyzer:(OrgApacheLuceneAnalysisAnalyzer *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisSynonymWordnetSynonymParser)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisSynonymWordnetSynonymParser_initWithBoolean_withBoolean_withOrgApacheLuceneAnalysisAnalyzer_(OrgApacheLuceneAnalysisSynonymWordnetSynonymParser *self, jboolean dedup, jboolean expand, OrgApacheLuceneAnalysisAnalyzer *analyzer);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisSynonymWordnetSynonymParser *new_OrgApacheLuceneAnalysisSynonymWordnetSynonymParser_initWithBoolean_withBoolean_withOrgApacheLuceneAnalysisAnalyzer_(jboolean dedup, jboolean expand, OrgApacheLuceneAnalysisAnalyzer *analyzer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisSynonymWordnetSynonymParser *create_OrgApacheLuceneAnalysisSynonymWordnetSynonymParser_initWithBoolean_withBoolean_withOrgApacheLuceneAnalysisAnalyzer_(jboolean dedup, jboolean expand, OrgApacheLuceneAnalysisAnalyzer *analyzer);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisSynonymWordnetSynonymParser)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisSynonymWordnetSynonymParser")
