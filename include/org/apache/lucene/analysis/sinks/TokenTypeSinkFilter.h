//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/sinks/TokenTypeSinkFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisSinksTokenTypeSinkFilter")
#ifdef RESTRICT_OrgApacheLuceneAnalysisSinksTokenTypeSinkFilter
#define INCLUDE_ALL_OrgApacheLuceneAnalysisSinksTokenTypeSinkFilter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisSinksTokenTypeSinkFilter 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisSinksTokenTypeSinkFilter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisSinksTokenTypeSinkFilter_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisSinksTokenTypeSinkFilter || defined(INCLUDE_OrgApacheLuceneAnalysisSinksTokenTypeSinkFilter))
#define OrgApacheLuceneAnalysisSinksTokenTypeSinkFilter_

#define RESTRICT_OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter 1
#define INCLUDE_OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter 1
#include "org/apache/lucene/analysis/sinks/TeeSinkTokenFilter.h"

@class OrgApacheLuceneUtilAttributeSource;

/*!
 @brief Adds a token to the sink if it has a specific type.
 */
@interface OrgApacheLuceneAnalysisSinksTokenTypeSinkFilter : OrgApacheLuceneAnalysisSinksTeeSinkTokenFilter_SinkFilter

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)typeToMatch;

- (jboolean)acceptWithOrgApacheLuceneUtilAttributeSource:(OrgApacheLuceneUtilAttributeSource *)source;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisSinksTokenTypeSinkFilter)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisSinksTokenTypeSinkFilter_initWithNSString_(OrgApacheLuceneAnalysisSinksTokenTypeSinkFilter *self, NSString *typeToMatch);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisSinksTokenTypeSinkFilter *new_OrgApacheLuceneAnalysisSinksTokenTypeSinkFilter_initWithNSString_(NSString *typeToMatch) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisSinksTokenTypeSinkFilter *create_OrgApacheLuceneAnalysisSinksTokenTypeSinkFilter_initWithNSString_(NSString *typeToMatch);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisSinksTokenTypeSinkFilter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisSinksTokenTypeSinkFilter")
