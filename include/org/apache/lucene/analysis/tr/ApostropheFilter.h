//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/tr/ApostropheFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisTrApostropheFilter")
#ifdef RESTRICT_OrgApacheLuceneAnalysisTrApostropheFilter
#define INCLUDE_ALL_OrgApacheLuceneAnalysisTrApostropheFilter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisTrApostropheFilter 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisTrApostropheFilter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisTrApostropheFilter_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisTrApostropheFilter || defined(INCLUDE_OrgApacheLuceneAnalysisTrApostropheFilter))
#define OrgApacheLuceneAnalysisTrApostropheFilter_

#define RESTRICT_OrgApacheLuceneAnalysisTokenFilter 1
#define INCLUDE_OrgApacheLuceneAnalysisTokenFilter 1
#include "org/apache/lucene/analysis/TokenFilter.h"

@class OrgApacheLuceneAnalysisTokenStream;

/*!
 @brief Strips all characters after an apostrophe (including the apostrophe itself).
 <p>
  In Turkish, apostrophe is used to separate suffixes from proper names
  (continent, sea, river, lake, mountain, upland, proper names related to
  religion and mythology). This filter intended to be used before stem filters.
  For more information, see <a href="http://www.ipcsit.com/vol57/015-ICNI2012-M021.pdf">
  Role of Apostrophes in Turkish Information Retrieval</a>
  </p>
 */
@interface OrgApacheLuceneAnalysisTrApostropheFilter : OrgApacheLuceneAnalysisTokenFilter

#pragma mark Public

- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)inArg;

- (jboolean)incrementToken;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisTrApostropheFilter)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisTrApostropheFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTrApostropheFilter *self, OrgApacheLuceneAnalysisTokenStream *inArg);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisTrApostropheFilter *new_OrgApacheLuceneAnalysisTrApostropheFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTokenStream *inArg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisTrApostropheFilter *create_OrgApacheLuceneAnalysisTrApostropheFilter_initWithOrgApacheLuceneAnalysisTokenStream_(OrgApacheLuceneAnalysisTokenStream *inArg);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisTrApostropheFilter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisTrApostropheFilter")
