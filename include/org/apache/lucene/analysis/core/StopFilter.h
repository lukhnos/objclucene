//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisCoreStopFilter")
#ifdef RESTRICT_OrgApacheLuceneAnalysisCoreStopFilter
#define INCLUDE_ALL_OrgApacheLuceneAnalysisCoreStopFilter 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisCoreStopFilter 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisCoreStopFilter

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisCoreStopFilter_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisCoreStopFilter || defined(INCLUDE_OrgApacheLuceneAnalysisCoreStopFilter))
#define OrgApacheLuceneAnalysisCoreStopFilter_

#define RESTRICT_OrgApacheLuceneAnalysisUtilFilteringTokenFilter 1
#define INCLUDE_OrgApacheLuceneAnalysisUtilFilteringTokenFilter 1
#include "org/apache/lucene/analysis/util/FilteringTokenFilter.h"

@class IOSObjectArray;
@class OrgApacheLuceneAnalysisTokenStream;
@class OrgApacheLuceneAnalysisUtilCharArraySet;
@protocol JavaUtilList;

/*!
 @brief Removes stop words from a token stream.
 */
@interface OrgApacheLuceneAnalysisCoreStopFilter : OrgApacheLuceneAnalysisUtilFilteringTokenFilter

#pragma mark Public

/*!
 @brief Constructs a filter which removes words from the input TokenStream that are
  named in the Set.
 @param inArg Input stream
 @param stopWords A 
 <code>CharArraySet</code>  representing the stopwords.
 - seealso: #makeStopSet(java.lang.String...)
 */
- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)inArg
                         withOrgApacheLuceneAnalysisUtilCharArraySet:(OrgApacheLuceneAnalysisUtilCharArraySet *)stopWords;

/*!
 @brief Builds a Set from an array of stop words,
  appropriate for passing into the StopFilter constructor.
 This permits this stopWords construction to be cached once when
  an Analyzer is constructed.
 @param stopWords A List of Strings or char[] or any other toString()-able list representing the stopwords
 @return A Set (<code>CharArraySet</code>) containing the words
 - seealso: #makeStopSet(java.lang.String[], boolean)passing false to ignoreCase
 */
+ (OrgApacheLuceneAnalysisUtilCharArraySet *)makeStopSetWithJavaUtilList:(id<JavaUtilList>)stopWords;

/*!
 @brief Creates a stopword set from the given stopword list.
 @param stopWords A List of Strings or char[] or any other toString()-able list representing the stopwords
 @param ignoreCase if true, all words are lower cased first
 @return A Set (<code>CharArraySet</code>) containing the words
 */
+ (OrgApacheLuceneAnalysisUtilCharArraySet *)makeStopSetWithJavaUtilList:(id<JavaUtilList>)stopWords
                                                             withBoolean:(jboolean)ignoreCase;

/*!
 @brief Builds a Set from an array of stop words,
  appropriate for passing into the StopFilter constructor.
 This permits this stopWords construction to be cached once when
  an Analyzer is constructed.
 @param stopWords An array of stopwords
 - seealso: #makeStopSet(java.lang.String[], boolean)passing false to ignoreCase
 */
+ (OrgApacheLuceneAnalysisUtilCharArraySet *)makeStopSetWithNSStringArray:(IOSObjectArray *)stopWords;

/*!
 @brief Creates a stopword set from the given stopword array.
 @param stopWords An array of stopwords
 @param ignoreCase If true, all words are lower cased first.
 @return a Set containing the words
 */
+ (OrgApacheLuceneAnalysisUtilCharArraySet *)makeStopSetWithNSStringArray:(IOSObjectArray *)stopWords
                                                              withBoolean:(jboolean)ignoreCase;

#pragma mark Protected

/*!
 @brief Returns the next input Token whose term() is not a stop word.
 */
- (jboolean)accept;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithOrgApacheLuceneAnalysisTokenStream:(OrgApacheLuceneAnalysisTokenStream *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisCoreStopFilter)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisCoreStopFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisUtilCharArraySet_(OrgApacheLuceneAnalysisCoreStopFilter *self, OrgApacheLuceneAnalysisTokenStream *inArg, OrgApacheLuceneAnalysisUtilCharArraySet *stopWords);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCoreStopFilter *new_OrgApacheLuceneAnalysisCoreStopFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisUtilCharArraySet_(OrgApacheLuceneAnalysisTokenStream *inArg, OrgApacheLuceneAnalysisUtilCharArraySet *stopWords) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCoreStopFilter *create_OrgApacheLuceneAnalysisCoreStopFilter_initWithOrgApacheLuceneAnalysisTokenStream_withOrgApacheLuceneAnalysisUtilCharArraySet_(OrgApacheLuceneAnalysisTokenStream *inArg, OrgApacheLuceneAnalysisUtilCharArraySet *stopWords);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisUtilCharArraySet *OrgApacheLuceneAnalysisCoreStopFilter_makeStopSetWithNSStringArray_(IOSObjectArray *stopWords);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisUtilCharArraySet *OrgApacheLuceneAnalysisCoreStopFilter_makeStopSetWithJavaUtilList_(id<JavaUtilList> stopWords);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisUtilCharArraySet *OrgApacheLuceneAnalysisCoreStopFilter_makeStopSetWithNSStringArray_withBoolean_(IOSObjectArray *stopWords, jboolean ignoreCase);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisUtilCharArraySet *OrgApacheLuceneAnalysisCoreStopFilter_makeStopSetWithJavaUtilList_withBoolean_(id<JavaUtilList> stopWords, jboolean ignoreCase);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisCoreStopFilter)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisCoreStopFilter")
