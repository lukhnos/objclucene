//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/CharVector.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisCompoundHyphenationCharVector")
#ifdef RESTRICT_OrgApacheLuceneAnalysisCompoundHyphenationCharVector
#define INCLUDE_ALL_OrgApacheLuceneAnalysisCompoundHyphenationCharVector 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisCompoundHyphenationCharVector 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisCompoundHyphenationCharVector

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisCompoundHyphenationCharVector_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisCompoundHyphenationCharVector || defined(INCLUDE_OrgApacheLuceneAnalysisCompoundHyphenationCharVector))
#define OrgApacheLuceneAnalysisCompoundHyphenationCharVector_

@class IOSCharArray;

/*!
 @brief This class implements a simple char vector with access to the underlying
  array.
 This class has been taken from the Apache FOP project (http://xmlgraphics.apache.org/fop/). They have been slightly modified.
 */
@interface OrgApacheLuceneAnalysisCompoundHyphenationCharVector : NSObject < NSCopying >

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithCharArray:(IOSCharArray *)a;

- (instancetype __nonnull)initWithCharArray:(IOSCharArray *)a
                                    withInt:(jint)capacity;

- (instancetype __nonnull)initWithInt:(jint)capacity;

- (jint)alloc__WithInt:(jint)size OBJC_METHOD_FAMILY_NONE;

/*!
 @brief returns current capacity of array
 */
- (jint)capacity;

/*!
 @brief Reset Vector but don't resize or clear elements
 */
- (void)clear;

- (OrgApacheLuceneAnalysisCompoundHyphenationCharVector *)java_clone;

- (jchar)getWithInt:(jint)index;

- (IOSCharArray *)getArray;

/*!
 @brief return number of items in array
 */
- (jint)length;

- (void)putWithInt:(jint)index
          withChar:(jchar)val;

- (void)trimToSize;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisCompoundHyphenationCharVector)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisCompoundHyphenationCharVector_init(OrgApacheLuceneAnalysisCompoundHyphenationCharVector *self);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCompoundHyphenationCharVector *new_OrgApacheLuceneAnalysisCompoundHyphenationCharVector_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCompoundHyphenationCharVector *create_OrgApacheLuceneAnalysisCompoundHyphenationCharVector_init(void);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisCompoundHyphenationCharVector_initWithInt_(OrgApacheLuceneAnalysisCompoundHyphenationCharVector *self, jint capacity);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCompoundHyphenationCharVector *new_OrgApacheLuceneAnalysisCompoundHyphenationCharVector_initWithInt_(jint capacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCompoundHyphenationCharVector *create_OrgApacheLuceneAnalysisCompoundHyphenationCharVector_initWithInt_(jint capacity);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisCompoundHyphenationCharVector_initWithCharArray_(OrgApacheLuceneAnalysisCompoundHyphenationCharVector *self, IOSCharArray *a);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCompoundHyphenationCharVector *new_OrgApacheLuceneAnalysisCompoundHyphenationCharVector_initWithCharArray_(IOSCharArray *a) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCompoundHyphenationCharVector *create_OrgApacheLuceneAnalysisCompoundHyphenationCharVector_initWithCharArray_(IOSCharArray *a);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisCompoundHyphenationCharVector_initWithCharArray_withInt_(OrgApacheLuceneAnalysisCompoundHyphenationCharVector *self, IOSCharArray *a, jint capacity);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCompoundHyphenationCharVector *new_OrgApacheLuceneAnalysisCompoundHyphenationCharVector_initWithCharArray_withInt_(IOSCharArray *a, jint capacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCompoundHyphenationCharVector *create_OrgApacheLuceneAnalysisCompoundHyphenationCharVector_initWithCharArray_withInt_(IOSCharArray *a, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisCompoundHyphenationCharVector)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisCompoundHyphenationCharVector")
