//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/ByteVector.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisCompoundHyphenationByteVector")
#ifdef RESTRICT_OrgApacheLuceneAnalysisCompoundHyphenationByteVector
#define INCLUDE_ALL_OrgApacheLuceneAnalysisCompoundHyphenationByteVector 0
#else
#define INCLUDE_ALL_OrgApacheLuceneAnalysisCompoundHyphenationByteVector 1
#endif
#undef RESTRICT_OrgApacheLuceneAnalysisCompoundHyphenationByteVector

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgApacheLuceneAnalysisCompoundHyphenationByteVector_) && (INCLUDE_ALL_OrgApacheLuceneAnalysisCompoundHyphenationByteVector || defined(INCLUDE_OrgApacheLuceneAnalysisCompoundHyphenationByteVector))
#define OrgApacheLuceneAnalysisCompoundHyphenationByteVector_

@class IOSByteArray;

/*!
 @brief This class implements a simple byte vector with access to the underlying
  array.
 This class has been taken from the Apache FOP project (http://xmlgraphics.apache.org/fop/). They have been slightly modified.
 */
@interface OrgApacheLuceneAnalysisCompoundHyphenationByteVector : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)a;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)a
                                    withInt:(jint)capacity;

- (instancetype __nonnull)initWithInt:(jint)capacity;

/*!
 @brief This is to implement memory allocation in the array.Like malloc().
 */
- (jint)alloc__WithInt:(jint)size OBJC_METHOD_FAMILY_NONE;

/*!
 @brief returns current capacity of array
 */
- (jint)capacity;

- (jbyte)getWithInt:(jint)index;

- (IOSByteArray *)getArray;

/*!
 @brief return number of items in array
 */
- (jint)length;

- (void)putWithInt:(jint)index
          withByte:(jbyte)val;

- (void)trimToSize;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheLuceneAnalysisCompoundHyphenationByteVector)

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisCompoundHyphenationByteVector_init(OrgApacheLuceneAnalysisCompoundHyphenationByteVector *self);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCompoundHyphenationByteVector *new_OrgApacheLuceneAnalysisCompoundHyphenationByteVector_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCompoundHyphenationByteVector *create_OrgApacheLuceneAnalysisCompoundHyphenationByteVector_init(void);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisCompoundHyphenationByteVector_initWithInt_(OrgApacheLuceneAnalysisCompoundHyphenationByteVector *self, jint capacity);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCompoundHyphenationByteVector *new_OrgApacheLuceneAnalysisCompoundHyphenationByteVector_initWithInt_(jint capacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCompoundHyphenationByteVector *create_OrgApacheLuceneAnalysisCompoundHyphenationByteVector_initWithInt_(jint capacity);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisCompoundHyphenationByteVector_initWithByteArray_(OrgApacheLuceneAnalysisCompoundHyphenationByteVector *self, IOSByteArray *a);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCompoundHyphenationByteVector *new_OrgApacheLuceneAnalysisCompoundHyphenationByteVector_initWithByteArray_(IOSByteArray *a) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCompoundHyphenationByteVector *create_OrgApacheLuceneAnalysisCompoundHyphenationByteVector_initWithByteArray_(IOSByteArray *a);

FOUNDATION_EXPORT void OrgApacheLuceneAnalysisCompoundHyphenationByteVector_initWithByteArray_withInt_(OrgApacheLuceneAnalysisCompoundHyphenationByteVector *self, IOSByteArray *a, jint capacity);

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCompoundHyphenationByteVector *new_OrgApacheLuceneAnalysisCompoundHyphenationByteVector_initWithByteArray_withInt_(IOSByteArray *a, jint capacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT OrgApacheLuceneAnalysisCompoundHyphenationByteVector *create_OrgApacheLuceneAnalysisCompoundHyphenationByteVector_initWithByteArray_withInt_(IOSByteArray *a, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheLuceneAnalysisCompoundHyphenationByteVector)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgApacheLuceneAnalysisCompoundHyphenationByteVector")
