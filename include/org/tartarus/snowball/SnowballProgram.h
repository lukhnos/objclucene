//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./analysis/common/src/java/org/tartarus/snowball/SnowballProgram.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_OrgTartarusSnowballSnowballProgram")
#ifdef RESTRICT_OrgTartarusSnowballSnowballProgram
#define INCLUDE_ALL_OrgTartarusSnowballSnowballProgram 0
#else
#define INCLUDE_ALL_OrgTartarusSnowballSnowballProgram 1
#endif
#undef RESTRICT_OrgTartarusSnowballSnowballProgram

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (OrgTartarusSnowballSnowballProgram_) && (INCLUDE_ALL_OrgTartarusSnowballSnowballProgram || defined(INCLUDE_OrgTartarusSnowballSnowballProgram))
#define OrgTartarusSnowballSnowballProgram_

@class IOSCharArray;
@class IOSObjectArray;
@class JavaLangStringBuilder;
@protocol JavaLangCharSequence;

/*!
 @brief This is the rev 502 of the Snowball SVN trunk,
  but modified:
  made abstract and introduced abstract method stem to avoid expensive reflection in filter class.
 refactored StringBuffers to StringBuilder
  uses char[] as buffer instead of StringBuffer/StringBuilder
  eq_s,eq_s_b,insert,replace_s take CharSequence like eq_v and eq_v_b
  reflection calls (Lovins, etc) use EMPTY_ARGS/EMPTY_PARAMS
 */
@interface OrgTartarusSnowballSnowballProgram : NSObject {
 @public
  jint cursor_;
  jint limit_;
  jint limit_backward_;
  jint bra_;
  jint ket_;
}

#pragma mark Public

/*!
 @brief Get the current string.
 */
- (NSString *)getCurrent;

/*!
 @brief Get the current buffer containing the stem.
 <p>
  NOTE: this may be a reference to a different character array than the
  one originally provided with setCurrent, in the exceptional case that 
  stemming produced a longer intermediate or result string.  
 </p>
  <p>
  It is necessary to use <code>getCurrentBufferLength()</code> to determine
  the valid length of the returned buffer. For example, many words are
  stemmed simply by subtracting from the length to remove suffixes. 
 </p>
 - seealso: #getCurrentBufferLength()
 */
- (IOSCharArray *)getCurrentBuffer;

/*!
 @brief Get the valid length of the character array in  
 <code>getCurrentBuffer()</code>.
 @return valid length of the array.
 */
- (jint)getCurrentBufferLength;

/*!
 @brief Set the current string.
 @param text character array containing input
 @param length valid length of text.
 */
- (void)setCurrentWithCharArray:(IOSCharArray *)text
                        withInt:(jint)length;

/*!
 @brief Set the current string.
 */
- (void)setCurrentWithNSString:(NSString *)value;

- (jboolean)stem;

#pragma mark Protected

- (instancetype __nonnull)init;

- (JavaLangStringBuilder *)assign_toWithJavaLangStringBuilder:(JavaLangStringBuilder *)s;

- (void)copy_fromWithOrgTartarusSnowballSnowballProgram:(OrgTartarusSnowballSnowballProgram *)other OBJC_METHOD_FAMILY_NONE;

- (jboolean)eq_sWithInt:(jint)s_size
withJavaLangCharSequence:(id<JavaLangCharSequence>)s;

- (jboolean)eq_s_bWithInt:(jint)s_size
 withJavaLangCharSequence:(id<JavaLangCharSequence>)s;

- (jboolean)eq_vWithJavaLangCharSequence:(id<JavaLangCharSequence>)s;

- (jboolean)eq_v_bWithJavaLangCharSequence:(id<JavaLangCharSequence>)s;

- (jint)find_amongWithOrgTartarusSnowballAmongArray:(IOSObjectArray *)v
                                            withInt:(jint)v_size;

- (jint)find_among_bWithOrgTartarusSnowballAmongArray:(IOSObjectArray *)v
                                              withInt:(jint)v_size;

- (jboolean)in_groupingWithCharArray:(IOSCharArray *)s
                             withInt:(jint)min
                             withInt:(jint)max;

- (jboolean)in_grouping_bWithCharArray:(IOSCharArray *)s
                               withInt:(jint)min
                               withInt:(jint)max;

- (jboolean)in_rangeWithInt:(jint)min
                    withInt:(jint)max;

- (jboolean)in_range_bWithInt:(jint)min
                      withInt:(jint)max;

- (void)insertWithInt:(jint)c_bra
              withInt:(jint)c_ket
withJavaLangCharSequence:(id<JavaLangCharSequence>)s;

- (jboolean)out_groupingWithCharArray:(IOSCharArray *)s
                              withInt:(jint)min
                              withInt:(jint)max;

- (jboolean)out_grouping_bWithCharArray:(IOSCharArray *)s
                                withInt:(jint)min
                                withInt:(jint)max;

- (jboolean)out_rangeWithInt:(jint)min
                     withInt:(jint)max;

- (jboolean)out_range_bWithInt:(jint)min
                       withInt:(jint)max;

- (jint)replace_sWithInt:(jint)c_bra
                 withInt:(jint)c_ket
withJavaLangCharSequence:(id<JavaLangCharSequence>)s;

- (void)slice_check;

- (void)slice_del;

- (void)slice_fromWithJavaLangCharSequence:(id<JavaLangCharSequence>)s;

- (JavaLangStringBuilder *)slice_toWithJavaLangStringBuilder:(JavaLangStringBuilder *)s;

@end

J2OBJC_STATIC_INIT(OrgTartarusSnowballSnowballProgram)

FOUNDATION_EXPORT void OrgTartarusSnowballSnowballProgram_init(OrgTartarusSnowballSnowballProgram *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgTartarusSnowballSnowballProgram)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_OrgTartarusSnowballSnowballProgram")
